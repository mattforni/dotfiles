{"version":3,"file":"index-6660c169.js","sources":["../node_modules/is-utf8/is-utf8.js","../node_modules/strip-bom-buf/index.js","../node_modules/sb-fs/lib/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/re.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/functions/satisfies.js","../src/check.js","../src/index.js"],"sourcesContent":["\nexports = module.exports = function(bytes)\n{\n    var i = 0;\n    while(i < bytes.length)\n    {\n        if(     (// ASCII\n                    bytes[i] == 0x09 ||\n                    bytes[i] == 0x0A ||\n                    bytes[i] == 0x0D ||\n                    (0x20 <= bytes[i] && bytes[i] <= 0x7E)\n                )\n          ) {\n              i += 1;\n              continue;\n          }\n\n        if(     (// non-overlong 2-byte\n                    (0xC2 <= bytes[i] && bytes[i] <= 0xDF) &&\n                    (0x80 <= bytes[i+1] && bytes[i+1] <= 0xBF)\n                )\n          ) {\n              i += 2;\n              continue;\n          }\n\n        if(     (// excluding overlongs\n                    bytes[i] == 0xE0 &&\n                    (0xA0 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&\n                    (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF)\n                ) ||\n                (// straight 3-byte\n                 ((0xE1 <= bytes[i] && bytes[i] <= 0xEC) ||\n                  bytes[i] == 0xEE ||\n                  bytes[i] == 0xEF) &&\n                 (0x80 <= bytes[i + 1] && bytes[i+1] <= 0xBF) &&\n                 (0x80 <= bytes[i+2] && bytes[i+2] <= 0xBF)\n                ) ||\n                (// excluding surrogates\n                 bytes[i] == 0xED &&\n                 (0x80 <= bytes[i+1] && bytes[i+1] <= 0x9F) &&\n                 (0x80 <= bytes[i+2] && bytes[i+2] <= 0xBF)\n                )\n          ) {\n              i += 3;\n              continue;\n          }\n\n        if(     (// planes 1-3\n                    bytes[i] == 0xF0 &&\n                    (0x90 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&\n                    (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&\n                    (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)\n                ) ||\n                (// planes 4-15\n                 (0xF1 <= bytes[i] && bytes[i] <= 0xF3) &&\n                 (0x80 <= bytes[i + 1] && bytes[i + 1] <= 0xBF) &&\n                 (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&\n                 (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)\n                ) ||\n                (// plane 16\n                 bytes[i] == 0xF4 &&\n                 (0x80 <= bytes[i + 1] && bytes[i + 1] <= 0x8F) &&\n                 (0x80 <= bytes[i + 2] && bytes[i + 2] <= 0xBF) &&\n                 (0x80 <= bytes[i + 3] && bytes[i + 3] <= 0xBF)\n                )\n          ) {\n              i += 4;\n              continue;\n          }\n\n        return false;\n    }\n\n    return true;\n}\n","'use strict';\nconst isUtf8 = require('is-utf8');\n\nmodule.exports = x => {\n\tif (!Buffer.isBuffer(x)) {\n\t\tthrow new TypeError('Expected a Buffer, got ' + typeof x);\n\t}\n\n\tif (x[0] === 0xEF && x[1] === 0xBB && x[2] === 0xBF && isUtf8(x)) {\n\t\treturn x.slice(3);\n\t}\n\n\treturn x;\n};\n","\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _util = require(\"util\");\n\nvar _stripBomBuf = _interopRequireDefault(require(\"strip-bom-buf\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst promisifiedFS = {};\nconst syncMethods = ['Stats', '_toUnixTimestamp', 'watch', 'watchFile', 'unwatchFile'];\nObject.keys(_fs.default).forEach(function (key) {\n  const value = _fs.default[key];\n\n  if (typeof value === 'function' && !key.includes('Sync') && !key.includes('Stream') && !syncMethods.includes(key)) {\n    promisifiedFS[key] = (0, _util.promisify)(value);\n  } else {\n    promisifiedFS[key] = value;\n  }\n});\n\npromisifiedFS.exists = function (path) {\n  return new Promise(function (resolve) {\n    _fs.default.access(path, _fs.default.R_OK, function (error) {\n      resolve(error === null);\n    });\n  });\n};\n\npromisifiedFS.readFile = function (path, encoding) {\n  return new Promise(function (resolve, reject) {\n    _fs.default.readFile(path, function (error, buffer) {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      let contents = (0, _stripBomBuf.default)(buffer);\n\n      if (encoding) {\n        contents = contents.toString(encoding);\n      }\n\n      resolve(contents);\n    });\n  });\n};\n\nmodule.exports = promisifiedFS;","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    const loose = this.options.loose\n    range = range.trim()\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    return range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","/* @flow */\n\nimport fs from 'sb-fs'\nimport Path from 'path'\nimport semverSatisfies from 'semver/functions/satisfies'\nimport type { Dependency } from './types'\n\nconst DEPENDENCY_REGEX_VERSION = /(.*?):.*/ // linter:2.0.0\nconst DEPENDENCY_REGEX_GIRURL = /(.*?)#.*/ // linter#steelbrain/linter\n\nexport async function getDependencies(packageName: string): Promise<Array<Dependency>> {\n  const packageModule = atom.packages.getLoadedPackage(packageName)\n  const packageDependencies = packageModule && packageModule.metadata['package-deps']\n\n  if (!Array.isArray(packageDependencies)) {\n    console.error(`[Package-Deps] Unable to get loaded package '${packageName}'`)\n    return []\n  }\n  return (\n    await Promise.all(\n      packageDependencies.map(async function (entry) {\n        let url = null\n        let name = entry\n        let version = null\n\n        const matchVersion = DEPENDENCY_REGEX_VERSION.exec(entry)\n        const matchGiturl = DEPENDENCY_REGEX_GIRURL.exec(entry)\n        if (matchVersion) {\n          ;[, name, version] = matchVersion\n        } else if (matchGiturl) {\n          ;[, name, url] = matchGiturl\n        } else {\n          name = entry\n        }\n\n        if (__steelbrain_package_deps.has(name)) {\n          return null\n        }\n\n        const resolvedPath = atom.packages.resolvePackagePath(name)\n        if (resolvedPath) {\n          if (!version) {\n            return null\n          }\n\n          const manifest = JSON.parse(await fs.readFile(Path.join(resolvedPath, 'package.json')))\n          // $FlowIgnore: Flow is paranoid, this parsed.version is NOT NULL\n          if (manifest != null && manifest.version != null && semverSatisfies(manifest.version, `>=${version}`)) {\n            return null\n          }\n        }\n        __steelbrain_package_deps.add(name)\n\n        return { name, url }\n      }),\n    )\n  ).filter(Boolean)\n}\n","/* @flow */\n\nimport invariant from 'assert'\nimport { getDependencies } from './check'\n\nif (typeof window.__steelbrain_package_deps === 'undefined') {\n  window.__steelbrain_package_deps = new Set()\n}\n\nasync function installDependencies(packageName: string, shouldPromptUser: boolean = true): Promise<void> {\n  invariant(packageName, '[Package-Deps] Package name is required')\n\n  const dependencies = await getDependencies(packageName)\n  if (!dependencies.length) {\n    return\n  }\n\n  // Prompt user\n  if (shouldPromptUser) {\n    let choice: 'Yes' | 'No' | 'Never' = 'Yes'\n    await import('./prompt').then(async ({ promptUser }) => {\n      choice = await promptUser(packageName, dependencies)\n    })\n\n    if (choice !== 'Yes') {\n      return\n    }\n  }\n\n  await import('./install').then(async ({ performInstall }) =>\n    // Perform Installation\n    performInstall(packageName, dependencies),\n  )\n}\n\nexport { installDependencies as install }\n\n// dynamic import doc: https://rollupjs.org/guide/en/#dynamic-import\n"],"names":["module","bytes","i","length","x","Buffer","isBuffer","TypeError","isUtf8","slice","_fs","_interopRequireDefault","require","_stripBomBuf","obj","__esModule","default","promisifiedFS","syncMethods","Object","keys","forEach","key","value","includes","_util","promisify","exists","path","Promise","resolve","access","R_OK","error","readFile","encoding","reject","buffer","contents","toString","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","MAX_SAFE_COMPONENT_LENGTH","process","env","NODE_DEBUG","test","args","re","exports","src","t","R","createToken","name","isGlobal","index","debug","RegExp","undefined","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","LONECARET","numeric","compareIdentifiers","a","b","anum","bnum","rcompareIdentifiers","SemVer","constructor","version","options","loose","includePrerelease","m","trim","match","LOOSE","FULL","raw","major","minor","patch","this","prerelease","split","map","id","num","build","format","join","compare","other","compareMain","comparePre","compareBuild","inc","release","identifier","push","isNaN","Error","op","eq","neq","gt","gte","lt","lte","ANY","Symbol","Comparator","comp","parse","semver","operator","r","COMPARATORLOOSE","COMPARATOR","er","cmp","intersects","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","filter","c","comps","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","parseComparator","replaceGTE0","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","comparators","result","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","allowed","DEPENDENCY_REGEX_VERSION","DEPENDENCY_REGEX_GIRURL","window","__steelbrain_package_deps","Set","async","packageName","shouldPromptUser","invariant","dependencies","packageModule","atom","packages","getLoadedPackage","packageDependencies","metadata","Array","isArray","all","entry","url","matchVersion","exec","matchGiturl","has","resolvedPath","resolvePackagePath","manifest","JSON","fs","Path","semverSatisfies","add","Boolean","getDependencies","choice","then","promptUser","performInstall"],"mappings":"kgBACUA,UAAiB,SAASC,WAE5BC,EAAI,EACFA,EAAID,EAAME,WAGY,GAAZF,EAAMC,IACM,IAAZD,EAAMC,IACM,IAAZD,EAAMC,IACL,IAAQD,EAAMC,IAAMD,EAAMC,IAAM,IAGvCA,GAAK,eAKUD,EAAMC,IAAMD,EAAMC,IAAM,KAChC,KAAQD,EAAMC,EAAE,IAAMD,EAAMC,EAAE,IAAM,IAG3CA,GAAK,UAKa,KAAZD,EAAMC,IACL,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KACxC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,MAG1C,KAAQD,EAAMC,IAAMD,EAAMC,IAAM,KACrB,KAAZD,EAAMC,IACM,KAAZD,EAAMC,KACN,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAE,IAAM,KACtC,KAAQD,EAAMC,EAAE,IAAMD,EAAMC,EAAE,IAAM,KAGzB,KAAZD,EAAMC,IACL,KAAQD,EAAMC,EAAE,IAAMD,EAAMC,EAAE,IAAM,KACpC,KAAQD,EAAMC,EAAE,IAAMD,EAAMC,EAAE,IAAM,IAGxCA,GAAK,YAKa,KAAZD,EAAMC,IACL,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KACxC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KACxC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,UAGnCD,EAAMC,IAAMD,EAAMC,IAAM,KAChC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KACxC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KACxC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KAG7B,KAAZD,EAAMC,IACL,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KACxC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,KACxC,KAAQD,EAAMC,EAAI,IAAMD,EAAMC,EAAI,IAAM,YAO3C,EAJDA,GAAK,SAOR,QCvEME,QACXC,OAAOC,SAASF,SACd,IAAIG,UAAU,iCAAmCH,UAG3C,MAATA,EAAE,IAAwB,MAATA,EAAE,IAAwB,MAATA,EAAE,IAAeI,EAAOJ,GACtDA,EAAEK,MAAM,GAGTL,sBCVR,IAAIM,EAAMC,EAAuBC,GAI7BC,EAAeF,EAAuBC,GAE1C,SAASD,EAAuBG,UAAcA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvF,MAAMG,EAAgB,GAChBC,EAAc,CAAC,QAAS,mBAAoB,QAAS,YAAa,eACxEC,OAAOC,KAAKV,EAAIM,SAASK,SAAQ,SAAUC,SACnCC,EAAQb,EAAIM,QAAQM,GAEL,mBAAVC,GAAyBD,EAAIE,SAAS,SAAYF,EAAIE,SAAS,WAAcN,EAAYM,SAASF,GAG3GL,EAAcK,GAAOC,EAFrBN,EAAcK,IAAO,EAAIG,EAAMC,WAAWH,MAM9CN,EAAcU,OAAS,SAAUC,UACxB,IAAIC,SAAQ,SAAUC,GAC3BpB,EAAIM,QAAQe,OAAOH,EAAMlB,EAAIM,QAAQgB,MAAM,SAAUC,GACnDH,EAAkB,OAAVG,UAKdhB,EAAciB,SAAW,SAAUN,EAAMO,UAChC,IAAIN,SAAQ,SAAUC,EAASM,GACpC1B,EAAIM,QAAQkB,SAASN,GAAM,SAAUK,EAAOI,MACtCJ,cACFG,EAAOH,OAILK,GAAW,EAAIzB,EAAaG,SAASqB,GAErCF,IACFG,EAAWA,EAASC,SAASJ,IAG/BL,EAAQQ,UAKdtC,UAAiBiB,MCtCjBjB,MAAiB,CACfwC,oBAV0B,QAW1BC,WATiB,IAUjBC,iBATuBC,OAAOD,kBACH,iBAS3BE,0BANgC,ICDlC5C,MAPqB,iBAAZ6C,SACPA,QAAQC,KACRD,QAAQC,IAAIC,YACZ,cAAcC,KAAKH,QAAQC,IAAIC,YAC7B,IAAIE,OACJ,0BCNJ,MAAML,0BAAEA,GAA8BhC,EAKhCsC,GAHNC,EAAUnD,UAAiB,OAGH,GAClBoD,EAAMD,MAAc,GACpBE,EAAIF,IAAY,GACtB,IAAIG,EAAI,EAER,MAAMC,EAAc,CAACC,EAAMjC,EAAOkC,WAC1BC,EAAQJ,IACdK,EAAMD,EAAOnC,GACb8B,EAAEG,GAAQE,EACVN,EAAIM,GAASnC,EACb2B,EAAGQ,GAAS,IAAIE,OAAOrC,EAAOkC,EAAW,SAAMI,IASjDN,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,UAMtCA,EAAY,uBAAwB,8BAKpCA,EAAY,cAAgB,IAAGH,EAAIC,EAAES,0BACdV,EAAIC,EAAES,0BACNV,EAAIC,EAAES,uBAE7BP,EAAY,mBAAqB,IAAGH,EAAIC,EAAEU,+BACdX,EAAIC,EAAEU,+BACNX,EAAIC,EAAEU,4BAKlCR,EAAY,uBAAyB,MAAKH,EAAIC,EAAES,sBAC5CV,EAAIC,EAAEW,0BAEVT,EAAY,4BAA8B,MAAKH,EAAIC,EAAEU,2BACjDX,EAAIC,EAAEW,0BAMVT,EAAY,aAAe,QAAOH,EAAIC,EAAEY,8BAC/Bb,EAAIC,EAAEY,6BAEfV,EAAY,kBAAoB,SAAQH,EAAIC,EAAEa,mCACrCd,EAAIC,EAAEa,kCAKfX,EAAY,kBAAmB,iBAM/BA,EAAY,QAAU,UAASH,EAAIC,EAAEc,yBAC5Bf,EAAIC,EAAEc,wBAWfZ,EAAY,YAAc,KAAIH,EAAIC,EAAEe,eACjChB,EAAIC,EAAEgB,eACPjB,EAAIC,EAAEiB,WAERf,EAAY,OAAS,IAAGH,EAAIC,EAAEkB,eAK9BhB,EAAY,aAAe,WAAUH,EAAIC,EAAEmB,oBACxCpB,EAAIC,EAAEoB,oBACPrB,EAAIC,EAAEiB,WAERf,EAAY,QAAU,IAAGH,EAAIC,EAAEqB,gBAE/BnB,EAAY,OAAQ,gBAKpBA,EAAY,wBAA4BH,EAAIC,EAAEU,wBAAR,YACtCR,EAAY,mBAAuBH,EAAIC,EAAES,mBAAR,YAEjCP,EAAY,cAAgB,YAAWH,EAAIC,EAAEsB,4BAChBvB,EAAIC,EAAEsB,4BACNvB,EAAIC,EAAEsB,wBACVvB,EAAIC,EAAEgB,gBACVjB,EAAIC,EAAEiB,eAG3Bf,EAAY,mBAAqB,YAAWH,EAAIC,EAAEuB,iCAChBxB,EAAIC,EAAEuB,iCACNxB,EAAIC,EAAEuB,6BACVxB,EAAIC,EAAEoB,qBACVrB,EAAIC,EAAEiB,eAGhCf,EAAY,SAAW,IAAGH,EAAIC,EAAEwB,YAAYzB,EAAIC,EAAEyB,iBAClDvB,EAAY,cAAgB,IAAGH,EAAIC,EAAEwB,YAAYzB,EAAIC,EAAE0B,sBAIvDxB,EAAY,SAAW,oBACGX,mBACIA,qBACAA,qBAE9BW,EAAY,YAAaH,EAAIC,EAAE2B,SAAS,GAIxCzB,EAAY,YAAa,WAEzBA,EAAY,YAAc,SAAQH,EAAIC,EAAE4B,kBAAkB,GAC1D9B,mBAA2B,MAE3BI,EAAY,QAAU,IAAGH,EAAIC,EAAE4B,aAAa7B,EAAIC,EAAEyB,iBAClDvB,EAAY,aAAe,IAAGH,EAAIC,EAAE4B,aAAa7B,EAAIC,EAAE0B,sBAIvDxB,EAAY,YAAa,WAEzBA,EAAY,YAAc,SAAQH,EAAIC,EAAE6B,kBAAkB,GAC1D/B,mBAA2B,MAE3BI,EAAY,QAAU,IAAGH,EAAIC,EAAE6B,aAAa9B,EAAIC,EAAEyB,iBAClDvB,EAAY,aAAe,IAAGH,EAAIC,EAAE6B,aAAa9B,EAAIC,EAAE0B,sBAGvDxB,EAAY,kBAAoB,IAAGH,EAAIC,EAAEwB,aAAazB,EAAIC,EAAEqB,oBAC5DnB,EAAY,aAAe,IAAGH,EAAIC,EAAEwB,aAAazB,EAAIC,EAAEkB,mBAIvDhB,EAAY,iBAAmB,SAAQH,EAAIC,EAAEwB,aACrCzB,EAAIC,EAAEqB,eAAetB,EAAIC,EAAEyB,iBAAiB,GACpD3B,wBAAgC,SAMhCI,EAAY,cAAgB,SAAQH,EAAIC,EAAEyB,0BAEnB1B,EAAIC,EAAEyB,sBAG7BvB,EAAY,mBAAqB,SAAQH,EAAIC,EAAE0B,+BAEnB3B,EAAIC,EAAE0B,2BAIlCxB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,yBACpBA,EAAY,UAAW,8BCrLvB,MAAM4B,EAAU,WACVC,EAAqB,CAACC,EAAGC,WACvBC,EAAOJ,EAAQnC,KAAKqC,GACpBG,EAAOL,EAAQnC,KAAKsC,UAEtBC,GAAQC,IACVH,GAAKA,EACLC,GAAKA,GAGAD,IAAMC,EAAI,EACZC,IAASC,GAAS,EAClBA,IAASD,EAAQ,EAClBF,EAAIC,GAAK,EACT,GAKNtF,MAAiB,CACfoF,mBAAAA,EACAK,oBAJ0B,CAACJ,EAAGC,IAAMF,EAAmBE,EAAGD,IChB5D,iBAAQ5C,mBAAYC,GAAqB9B,GACnCsC,GAAEA,EAAFG,EAAMA,GAAMzC,sBAEVwE,GAAuBxE,EAC/B,MAAM8E,EACJC,YAAaC,EAASC,MACfA,GAA8B,iBAAZA,IACrBA,EAAU,CACRC,QAASD,EACTE,mBAAmB,IAGnBH,aAAmBF,EAAQ,IACzBE,EAAQE,UAAYD,EAAQC,OAC5BF,EAAQG,sBAAwBF,EAAQE,yBACnCH,EAEPA,EAAUA,EAAQA,aAEf,GAAuB,iBAAZA,QACV,IAAIrF,UAAW,oBAAmBqF,MAGtCA,EAAQzF,OAASsC,QACb,IAAIlC,UACP,0BAAyBkC,gBAI9BkB,EAAM,SAAUiC,EAASC,QACpBA,QAAUA,OACVC,QAAUD,EAAQC,WAGlBC,oBAAsBF,EAAQE,wBAE7BC,EAAIJ,EAAQK,OAAOC,MAAML,EAAQC,MAAQ5C,EAAGG,EAAE8C,OAASjD,EAAGG,EAAE+C,WAE7DJ,QACG,IAAIzF,UAAW,oBAAmBqF,WAGrCS,IAAMT,OAGNU,OAASN,EAAE,QACXO,OAASP,EAAE,QACXQ,OAASR,EAAE,GAEZS,KAAKH,MAAQ5D,GAAoB+D,KAAKH,MAAQ,QAC1C,IAAI/F,UAAU,4BAGlBkG,KAAKF,MAAQ7D,GAAoB+D,KAAKF,MAAQ,QAC1C,IAAIhG,UAAU,4BAGlBkG,KAAKD,MAAQ9D,GAAoB+D,KAAKD,MAAQ,QAC1C,IAAIjG,UAAU,yBAIjByF,EAAE,QAGAU,WAAaV,EAAE,GAAGW,MAAM,KAAKC,IAAKC,OACjC,WAAW7D,KAAK6D,GAAK,OACjBC,GAAOD,KACTC,GAAO,GAAKA,EAAMpE,SACboE,SAGJD,SATJH,WAAa,QAafK,MAAQf,EAAE,GAAKA,EAAE,GAAGW,MAAM,KAAO,QACjCK,SAGPA,qBACOpB,QAAW,GAAEa,KAAKH,SAASG,KAAKF,SAASE,KAAKD,QAC/CC,KAAKC,WAAWvG,cACbyF,SAAY,IAAGa,KAAKC,WAAWO,KAAK,MAEpCR,KAAKb,QAGdrD,kBACSkE,KAAKb,QAGdsB,QAASC,MACPxD,EAAM,iBAAkB8C,KAAKb,QAASa,KAAKZ,QAASsB,KAC9CA,aAAiBzB,GAAS,IACT,iBAAVyB,GAAsBA,IAAUV,KAAKb,eACvC,EAETuB,EAAQ,IAAIzB,EAAOyB,EAAOV,KAAKZ,gBAG7BsB,EAAMvB,UAAYa,KAAKb,QAClB,EAGFa,KAAKW,YAAYD,IAAUV,KAAKY,WAAWF,GAGpDC,YAAaD,UACLA,aAAiBzB,IACrByB,EAAQ,IAAIzB,EAAOyB,EAAOV,KAAKZ,UAI/BT,EAAmBqB,KAAKH,MAAOa,EAAMb,QACrClB,EAAmBqB,KAAKF,MAAOY,EAAMZ,QACrCnB,EAAmBqB,KAAKD,MAAOW,EAAMX,OAIzCa,WAAYF,MACJA,aAAiBzB,IACrByB,EAAQ,IAAIzB,EAAOyB,EAAOV,KAAKZ,UAI7BY,KAAKC,WAAWvG,SAAWgH,EAAMT,WAAWvG,cACtC,EACH,IAAKsG,KAAKC,WAAWvG,QAAUgH,EAAMT,WAAWvG,cAC9C,EACF,IAAKsG,KAAKC,WAAWvG,SAAWgH,EAAMT,WAAWvG,cAC/C,MAGLD,EAAI,IACL,OACKmF,EAAIoB,KAAKC,WAAWxG,GACpBoF,EAAI6B,EAAMT,WAAWxG,MAC3ByD,EAAM,qBAAsBzD,EAAGmF,EAAGC,QACxBzB,IAANwB,QAAyBxB,IAANyB,SACd,EACF,QAAUzB,IAANyB,SACF,EACF,QAAUzB,IAANwB,SACD,EACH,GAAIA,IAAMC,SAGRF,EAAmBC,EAAGC,WAEtBpF,GAGboH,aAAcH,GACNA,aAAiBzB,IACrByB,EAAQ,IAAIzB,EAAOyB,EAAOV,KAAKZ,cAG7B3F,EAAI,IACL,OACKmF,EAAIoB,KAAKM,MAAM7G,GACfoF,EAAI6B,EAAMJ,MAAM7G,MACtByD,EAAM,qBAAsBzD,EAAGmF,EAAGC,QACxBzB,IAANwB,QAAyBxB,IAANyB,SACd,EACF,QAAUzB,IAANyB,SACF,EACF,QAAUzB,IAANwB,SACD,EACH,GAAIA,IAAMC,SAGRF,EAAmBC,EAAGC,WAEtBpF,GAKbqH,IAAKC,EAASC,UACJD,OACD,gBACEd,WAAWvG,OAAS,OACpBqG,MAAQ,OACRD,MAAQ,OACRD,aACAiB,IAAI,MAAOE,aAEb,gBACEf,WAAWvG,OAAS,OACpBqG,MAAQ,OACRD,aACAgB,IAAI,MAAOE,aAEb,gBAIEf,WAAWvG,OAAS,OACpBoH,IAAI,QAASE,QACbF,IAAI,MAAOE,aAIb,aAC4B,IAA3BhB,KAAKC,WAAWvG,aACboH,IAAI,QAASE,QAEfF,IAAI,MAAOE,aAGb,QAMc,IAAfhB,KAAKF,OACU,IAAfE,KAAKD,OACsB,IAA3BC,KAAKC,WAAWvG,aAEXmG,aAEFC,MAAQ,OACRC,MAAQ,OACRE,WAAa,aAEf,QAKgB,IAAfD,KAAKD,OAA0C,IAA3BC,KAAKC,WAAWvG,aACjCoG,aAEFC,MAAQ,OACRE,WAAa,aAEf,QAK4B,IAA3BD,KAAKC,WAAWvG,aACbqG,aAEFE,WAAa,aAIf,SAC4B,IAA3BD,KAAKC,WAAWvG,YACbuG,WAAa,CAAC,OACd,KACDxG,EAAIuG,KAAKC,WAAWvG,cACfD,GAAK,GACsB,iBAAvBuG,KAAKC,WAAWxG,UACpBwG,WAAWxG,KAChBA,GAAK,IAGE,IAAPA,QAEGwG,WAAWgB,KAAK,GAGrBD,IAGEhB,KAAKC,WAAW,KAAOe,EACrBE,MAAMlB,KAAKC,WAAW,WACnBA,WAAa,CAACe,EAAY,SAG5Bf,WAAa,CAACe,EAAY,wBAM7B,IAAIG,MAAO,+BAA8BJ,eAE9CR,cACAX,IAAMI,KAAKb,QACTa,MAIXzG,MAAiB0F,EC7RjB1F,MAHgB,CAACqF,EAAGC,EAAGQ,IACrB,IAAIJ,EAAOL,EAAGS,GAAOoB,QAAQ,IAAIxB,EAAOJ,EAAGQ,ICA7C9F,MADW,CAACqF,EAAGC,EAAGQ,IAAmC,IAAzBoB,EAAQ7B,EAAGC,EAAGQ,GCC1C9F,MADY,CAACqF,EAAGC,EAAGQ,IAAmC,IAAzBoB,EAAQ7B,EAAGC,EAAGQ,GCC3C9F,MADW,CAACqF,EAAGC,EAAGQ,IAAUoB,EAAQ7B,EAAGC,EAAGQ,GAAS,ECCnD9F,MADY,CAACqF,EAAGC,EAAGQ,IAAUoB,EAAQ7B,EAAGC,EAAGQ,IAAU,ECCrD9F,MADW,CAACqF,EAAGC,EAAGQ,IAAUoB,EAAQ7B,EAAGC,EAAGQ,GAAS,ECCnD9F,MADY,CAACqF,EAAGC,EAAGQ,IAAUoB,EAAQ7B,EAAGC,EAAGQ,IAAU,EC8CrD9F,MAxCY,CAACqF,EAAGwC,EAAIvC,EAAGQ,YACb+B,OACD,YACc,iBAANxC,IACTA,EAAIA,EAAEO,SACS,iBAANN,IACTA,EAAIA,EAAEM,SACDP,IAAMC,MAEV,YACc,iBAAND,IACTA,EAAIA,EAAEO,SACS,iBAANN,IACTA,EAAIA,EAAEM,SACDP,IAAMC,MAEV,OACA,QACA,YACIwC,EAAGzC,EAAGC,EAAGQ,OAEb,YACIiC,EAAI1C,EAAGC,EAAGQ,OAEd,WACIkC,EAAG3C,EAAGC,EAAGQ,OAEb,YACImC,EAAI5C,EAAGC,EAAGQ,OAEd,WACIoC,EAAG7C,EAAGC,EAAGQ,OAEb,YACIqC,EAAI9C,EAAGC,EAAGQ,iBAGX,IAAIvF,UAAW,qBAAoBsH,KC5C/C,MAAMO,EAAMC,OAAO,cAEnB,MAAMC,0BAEKF,EAETzC,YAAa4C,EAAM1C,MACZA,GAA8B,iBAAZA,IACrBA,EAAU,CACRC,QAASD,EACTE,mBAAmB,IAInBwC,aAAgBD,EAAY,IAC1BC,EAAKzC,UAAYD,EAAQC,aACpByC,EAEPA,EAAOA,EAAKhH,MAIhBoC,EAAM,aAAc4E,EAAM1C,QACrBA,QAAUA,OACVC,QAAUD,EAAQC,WAClB0C,MAAMD,GAEP9B,KAAKgC,SAAWL,OACb7G,MAAQ,QAERA,MAAQkF,KAAKiC,SAAWjC,KAAKgC,OAAO7C,QAG3CjC,EAAM,OAAQ8C,MAGhB+B,MAAOD,SACCI,EAAIlC,KAAKZ,QAAQC,MAAQ5C,EAAGG,EAAEuF,iBAAmB1F,EAAGG,EAAEwF,YACtD7C,EAAIuC,EAAKrC,MAAMyC,OAEhB3C,QACG,IAAIzF,UAAW,uBAAsBgI,QAGxCG,cAAoB7E,IAATmC,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlBS,KAAKiC,gBACFA,SAAW,IAIb1C,EAAE,QAGAyC,OAAS,IAAI/C,EAAOM,EAAE,GAAIS,KAAKZ,QAAQC,YAFvC2C,OAASL,EAMlB7F,kBACSkE,KAAKlF,MAGdyB,KAAM4C,MACJjC,EAAM,kBAAmBiC,EAASa,KAAKZ,QAAQC,OAE3CW,KAAKgC,SAAWL,GAAOxC,IAAYwC,SAC9B,KAGc,iBAAZxC,MAEPA,EAAU,IAAIF,EAAOE,EAASa,KAAKZ,SACnC,MAAOiD,UACA,SAIJC,EAAInD,EAASa,KAAKiC,SAAUjC,KAAKgC,OAAQhC,KAAKZ,SAGvDmD,WAAYT,EAAM1C,QACV0C,aAAgBD,SACd,IAAI/H,UAAU,+BAGjBsF,GAA8B,iBAAZA,IACrBA,EAAU,CACRC,QAASD,EACTE,mBAAmB,IAID,KAAlBU,KAAKiC,eACY,KAAfjC,KAAKlF,OAGF,IAAI0H,EAAMV,EAAKhH,MAAOsE,GAAS7C,KAAKyD,KAAKlF,OAC3C,GAAsB,KAAlBgH,EAAKG,eACK,KAAfH,EAAKhH,OAGF,IAAI0H,EAAMxC,KAAKlF,MAAOsE,GAAS7C,KAAKuF,EAAKE,cAG5CS,IACe,OAAlBzC,KAAKiC,UAAuC,MAAlBjC,KAAKiC,UACb,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,UAC5BS,IACe,OAAlB1C,KAAKiC,UAAuC,MAAlBjC,KAAKiC,UACb,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,UAC5BU,EAAa3C,KAAKgC,OAAO7C,UAAY2C,EAAKE,OAAO7C,QACjDyD,IACe,OAAlB5C,KAAKiC,UAAuC,OAAlBjC,KAAKiC,UACb,OAAlBH,EAAKG,UAAuC,OAAlBH,EAAKG,UAC5BY,EACJP,EAAItC,KAAKgC,OAAQ,IAAKF,EAAKE,OAAQ5C,KAChB,OAAlBY,KAAKiC,UAAuC,MAAlBjC,KAAKiC,YACX,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,UAC9Ba,EACJR,EAAItC,KAAKgC,OAAQ,IAAKF,EAAKE,OAAQ5C,KAChB,OAAlBY,KAAKiC,UAAuC,MAAlBjC,KAAKiC,YACX,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,iBAGlCQ,GACAC,GACCC,GAAcC,GACfC,GACAC,GAKNvJ,MAAiBsI,EAEjB,SAAOpF,IAAIG,GAAKzC,ECrIhB,MAAMqI,EACJtD,YAAa6D,EAAO3D,MACbA,GAA8B,iBAAZA,IACrBA,EAAU,CACRC,QAASD,EACTE,mBAAmB,IAInByD,aAAiBP,SAEjBO,EAAM1D,UAAYD,EAAQC,OAC1B0D,EAAMzD,sBAAwBF,EAAQE,kBAE/ByD,EAEA,IAAIP,EAAMO,EAAMnD,IAAKR,MAI5B2D,aAAiBlB,cAEdjC,IAAMmD,EAAMjI,WACZkI,IAAM,CAAC,CAACD,SACRxC,SACEP,aAGJZ,QAAUA,OACVC,QAAUD,EAAQC,WAClBC,oBAAsBF,EAAQE,uBAG9BM,IAAMmD,OACNC,IAAMD,EACR7C,MAAM,cAENC,IAAI4C,GAAS/C,KAAKiD,WAAWF,EAAMvD,SAInC0D,OAAOC,GAAKA,EAAEzJ,SAEZsG,KAAKgD,IAAItJ,aACN,IAAII,UAAW,yBAAwBiJ,QAG1CxC,SAGPA,qBACOwC,MAAQ/C,KAAKgD,IACf7C,IAAKiD,GACGA,EAAM5C,KAAK,KAAKhB,QAExBgB,KAAK,MACLhB,OACIQ,KAAK+C,MAGdjH,kBACSkE,KAAK+C,MAGdE,WAAYF,SACJ1D,EAAQW,KAAKZ,QAAQC,MAC3B0D,EAAQA,EAAMvD,aAER6D,EAAKhE,EAAQ5C,EAAGG,EAAE0G,kBAAoB7G,EAAGG,EAAE2G,aACjDR,EAAQA,EAAMS,QAAQH,EAAII,GAAczD,KAAKZ,QAAQE,oBACrDpC,EAAM,iBAAkB6F,GAExBA,EAAQA,EAAMS,QAAQ/G,EAAGG,EAAE8G,gBAAiBC,GAC5CzG,EAAM,kBAAmB6F,EAAOtG,EAAGG,EAAE8G,iBASrCX,GAHAA,GAHAA,EAAQA,EAAMS,QAAQ/G,EAAGG,EAAEgH,WAAYC,IAGzBL,QAAQ/G,EAAGG,EAAEkH,WAAYC,IAGzB7D,MAAM,OAAOM,KAAK,WAK1BwD,EAAS3E,EAAQ5C,EAAGG,EAAEuF,iBAAmB1F,EAAGG,EAAEwF,mBAC7CW,EACJ7C,MAAM,KACNC,IAAI2B,GAAQmC,EAAgBnC,EAAM9B,KAAKZ,UACvCoB,KAAK,KACLN,MAAM,OACNC,IAAI2B,GAAQoC,EAAYpC,EAAM9B,KAAKZ,UAEnC8D,OAAOlD,KAAKZ,QAAQC,MAAQyC,KAAUA,EAAKrC,MAAMuE,GAAU,KAAM,GACjE7D,IAAI2B,GAAQ,IAAID,EAAWC,EAAM9B,KAAKZ,UAG3CmD,WAAYQ,EAAO3D,QACX2D,aAAiBP,SACf,IAAI1I,UAAU,8BAGfkG,KAAKgD,IAAImB,KAAMC,GAElBC,EAAcD,EAAiBhF,IAC/B2D,EAAMC,IAAImB,KAAMG,GAEZD,EAAcC,EAAkBlF,IAChCgF,EAAgBG,MAAOC,GACdF,EAAiBC,MAAOE,GACtBD,EAAejC,WAAWkC,EAAiBrF,OAUhE7C,KAAM4C,OACCA,SACI,KAGc,iBAAZA,MAEPA,EAAU,IAAIF,EAAOE,EAASa,KAAKZ,SACnC,MAAOiD,UACA,MAIN,IAAI5I,EAAI,EAAGA,EAAIuG,KAAKgD,IAAItJ,OAAQD,OAC/BiL,GAAQ1E,KAAKgD,IAAIvJ,GAAI0F,EAASa,KAAKZ,gBAC9B,SAGJ,GAGX7F,MAAiBiJ,EAKjB,SACE/F,IACAG,EAFI+G,sBAGJA,EAHIE,iBAIJA,EAJIE,iBAKJA,GACE5J,EAIEkK,EAAgB,CAACM,EAAavF,SAC9BwF,GAAS,QACPC,EAAuBF,EAAY3K,YACrC8K,EAAiBD,EAAqBE,WAEnCH,GAAUC,EAAqBnL,QACpCkL,EAASC,EAAqBN,MAAOS,GAC5BF,EAAevC,WAAWyC,EAAiB5F,IAGpD0F,EAAiBD,EAAqBE,aAGjCH,GAMHX,EAAkB,CAACnC,EAAM1C,KAC7BlC,EAAM,OAAQ4E,EAAM1C,GACpB0C,EAAOmD,EAAcnD,EAAM1C,GAC3BlC,EAAM,QAAS4E,GACfA,EAAOoD,EAAcpD,EAAM1C,GAC3BlC,EAAM,SAAU4E,GAChBA,EAAOqD,EAAerD,EAAM1C,GAC5BlC,EAAM,SAAU4E,GAChBA,EAAOsD,EAAatD,EAAM1C,GAC1BlC,EAAM,QAAS4E,GACRA,GAGHuD,EAAMjF,IAAOA,GAA2B,MAArBA,EAAGkF,eAAgC,MAAPlF,EAQ/C8E,EAAgB,CAACpD,EAAM1C,IAC3B0C,EAAKtC,OAAOU,MAAM,OAAOC,IAAK2B,GACrByD,EAAazD,EAAM1C,IACzBoB,KAAK,KAEJ+E,EAAe,CAACzD,EAAM1C,WACpB8C,EAAI9C,EAAQC,MAAQ5C,EAAGG,EAAE4I,YAAc/I,EAAGG,EAAE6I,cAC3C3D,EAAK0B,QAAQtB,EAAG,CAACwD,EAAGC,EAAGpG,EAAGqG,EAAGC,SAE9BC,SADJ5I,EAAM,QAAS4E,EAAM4D,EAAGC,EAAGpG,EAAGqG,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAI9F,GACbuG,EAAO,KAAIH,WAAWA,EAAI,UACjBN,EAAIO,GAEbE,EAAO,KAAIH,KAAKpG,QAAQoG,MAAMpG,EAAI,QACzBsG,GACT3I,EAAM,kBAAmB2I,GACzBC,EAAO,KAAIH,KAAKpG,KAAKqG,KAAKC,MACrBF,MAAMpG,EAAI,SAGfuG,EAAO,KAAIH,KAAKpG,KAAKqG,MAChBD,MAAMpG,EAAI,QAGjBrC,EAAM,eAAgB4I,GACfA,KAULb,EAAgB,CAACnD,EAAM1C,IAC3B0C,EAAKtC,OAAOU,MAAM,OAAOC,IAAK2B,GACrBiE,EAAajE,EAAM1C,IACzBoB,KAAK,KAEJuF,EAAe,CAACjE,EAAM1C,KAC1BlC,EAAM,QAAS4E,EAAM1C,SACf8C,EAAI9C,EAAQC,MAAQ5C,EAAGG,EAAEoJ,YAAcvJ,EAAGG,EAAEqJ,OAC5CC,EAAI9G,EAAQE,kBAAoB,KAAO,UACtCwC,EAAK0B,QAAQtB,EAAG,CAACwD,EAAGC,EAAGpG,EAAGqG,EAAGC,SAE9BC,SADJ5I,EAAM,QAAS4E,EAAM4D,EAAGC,EAAGpG,EAAGqG,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAI9F,GACbuG,EAAO,KAAIH,QAAQO,OAAOP,EAAI,UACrBN,EAAIO,GAEXE,EADQ,MAANH,EACK,KAAIA,KAAKpG,MAAM2G,MAAMP,MAAMpG,EAAI,QAE/B,KAAIoG,KAAKpG,MAAM2G,OAAOP,EAAI,UAE1BE,GACT3I,EAAM,kBAAmB2I,GAGrBC,EAFM,MAANH,EACQ,MAANpG,EACK,KAAIoG,KAAKpG,KAAKqG,KAAKC,MACrBF,KAAKpG,MAAMqG,EAAI,MAEb,KAAID,KAAKpG,KAAKqG,KAAKC,MACrBF,MAAMpG,EAAI,QAGV,KAAIoG,KAAKpG,KAAKqG,KAAKC,OACpBF,EAAI,YAGZzI,EAAM,SAGF4I,EAFM,MAANH,EACQ,MAANpG,EACK,KAAIoG,KAAKpG,KAAKqG,IAClBM,MAAMP,KAAKpG,MAAMqG,EAAI,MAEjB,KAAID,KAAKpG,KAAKqG,IAClBM,MAAMP,MAAMpG,EAAI,QAGd,KAAIoG,KAAKpG,KAAKqG,OACfD,EAAI,WAIdzI,EAAM,eAAgB4I,GACfA,KAILX,EAAiB,CAACrD,EAAM1C,KAC5BlC,EAAM,iBAAkB4E,EAAM1C,GACvB0C,EAAK5B,MAAM,OAAOC,IAAK2B,GACrBqE,EAAcrE,EAAM1C,IAC1BoB,KAAK,MAGJ2F,EAAgB,CAACrE,EAAM1C,KAC3B0C,EAAOA,EAAKtC,aACN0C,EAAI9C,EAAQC,MAAQ5C,EAAGG,EAAEwJ,aAAe3J,EAAGG,EAAEyJ,eAC5CvE,EAAK0B,QAAQtB,EAAG,CAAC4D,EAAKQ,EAAMX,EAAGpG,EAAGqG,EAAGC,KAC1C3I,EAAM,SAAU4E,EAAMgE,EAAKQ,EAAMX,EAAGpG,EAAGqG,EAAGC,SACpCU,EAAKlB,EAAIM,GACTa,EAAKD,GAAMlB,EAAI9F,GACfkH,EAAKD,GAAMnB,EAAIO,GACfc,EAAOD,QAEA,MAATH,GAAgBI,IAClBJ,EAAO,IAKTT,EAAKzG,EAAQE,kBAAoB,KAAO,GAEpCiH,EAGAT,EAFW,MAATQ,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACFjH,EAAI,GAENqG,EAAI,EAES,MAATU,GAGFA,EAAO,KACHE,GACFb,GAAKA,EAAI,EACTpG,EAAI,EACJqG,EAAI,IAEJrG,GAAKA,EAAI,EACTqG,EAAI,IAEY,OAATU,IAGTA,EAAO,IACHE,EACFb,GAAKA,EAAI,EAETpG,GAAKA,EAAI,GAIA,MAAT+G,IACFT,EAAK,MAEPC,EAAO,GAAEQ,EAAOX,KAAKpG,KAAKqG,IAAIC,KACrBW,EACTV,EAAO,KAAIH,QAAQE,OAAQF,EAAI,UACtBc,IACTX,EAAO,KAAIH,KAAKpG,MAAMsG,MACjBF,MAAMpG,EAAI,SAGjBrC,EAAM,gBAAiB4I,GAEhBA,KAMLV,EAAe,CAACtD,EAAM1C,KAC1BlC,EAAM,eAAgB4E,EAAM1C,GAErB0C,EAAKtC,OAAOgE,QAAQ/G,EAAGG,EAAE+J,MAAO,KAGnCzC,EAAc,CAACpC,EAAM1C,KACzBlC,EAAM,cAAe4E,EAAM1C,GACpB0C,EAAKtC,OACTgE,QAAQ/G,EAAG2C,EAAQE,kBAAoB1C,EAAEgK,QAAUhK,EAAEiK,MAAO,KAQ3DpD,GAAgBqD,GAAS,CAACC,EAC9BC,EAAMC,EAAIC,EAAIC,EAAIC,EAAKC,EACvBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,IA2BZ,GAzBPX,EADE3B,EAAI4B,GACC,GACE5B,EAAI6B,GACL,KAAID,QAASH,EAAQ,KAAO,KAC3BzB,EAAI8B,GACL,KAAIF,KAAMC,MAAOJ,EAAQ,KAAO,KAC/BM,EACD,KAAIJ,EAEJ,KAAIA,IAAOF,EAAQ,KAAO,QAIlCQ,EADEjC,EAAIkC,GACD,GACIlC,EAAImC,GACP,KAAID,EAAK,UACNlC,EAAIoC,GACP,IAAGF,MAAOC,EAAK,QACZE,EACH,KAAIH,KAAMC,KAAMC,KAAMC,IACnBZ,EACH,IAAGS,KAAMC,MAAOC,EAAK,MAErB,KAAIH,IAGa9H,OAGrBkF,GAAU,CAAC1B,EAAK7D,EAASC,SACxB,IAAI3F,EAAI,EAAGA,EAAIuJ,EAAItJ,OAAQD,QACzBuJ,EAAIvJ,GAAG8C,KAAK4C,UACR,KAIPA,EAAQc,WAAWvG,SAAW0F,EAAQE,kBAAmB,KAMtD,IAAI7F,EAAI,EAAGA,EAAIuJ,EAAItJ,OAAQD,OAC9ByD,EAAM8F,EAAIvJ,GAAGuI,QACTgB,EAAIvJ,GAAGuI,SAAWH,EAAWF,KAI7BqB,EAAIvJ,GAAGuI,OAAO/B,WAAWvG,OAAS,EAAG,OACjCkO,EAAU5E,EAAIvJ,GAAGuI,UACnB4F,EAAQ/H,QAAUV,EAAQU,OAC1B+H,EAAQ9H,QAAUX,EAAQW,OAC1B8H,EAAQ7H,QAAUZ,EAAQY,aACrB,SAMN,SAGF,GCpcTxG,OARkB,CAAC4F,EAAS4D,EAAO3D,SAE/B2D,EAAQ,IAAIP,EAAMO,EAAO3D,GACzB,MAAOiD,UACA,SAEFU,EAAMxG,KAAK4C,ICApB,MAAM0I,GAA2B,WAC3BC,GAA0B,gBCHgB,IAArCC,OAAOC,4BAChBD,OAAOC,0BAA4B,IAAIC,8CAGzCC,eAAmCC,EAAqBC,GAA4B,GAClFC,EAAUF,EAAa,iDAEjBG,QDFDJ,eAA+BC,SAC9BI,EAAgBC,KAAKC,SAASC,iBAAiBP,GAC/CQ,EAAsBJ,GAAiBA,EAAcK,SAAS,uBAE/DC,MAAMC,QAAQH,UAKXvN,QAAQ2N,IACZJ,EAAoBxI,KAAI+H,eAAgBc,OAClCC,EAAM,KACNlM,EAAOiM,EACP7J,EAAU,WAER+J,EAAerB,GAAyBsB,KAAKH,GAC7CI,EAActB,GAAwBqB,KAAKH,MAC7CE,IACEnM,EAAMoC,GAAW+J,EACZE,IACLrM,EAAMkM,GAAOG,EAEjBrM,EAAOiM,EAGLhB,0BAA0BqB,IAAItM,UACzB,WAGHuM,EAAed,KAAKC,SAASc,mBAAmBxM,MAClDuM,EAAc,KACXnK,SACI,WAGHqK,EAAWC,KAAK1H,YAAY2H,EAAGjO,SAASkO,EAAKnJ,KAAK8I,EAAc,qBAEtD,MAAZE,GAAwC,MAApBA,EAASrK,SAAmByK,GAAgBJ,EAASrK,QAAU,KAAIA,UAClF,YAGX6I,0BAA0B6B,IAAI9M,GAEvB,CAAEA,KAAAA,EAAMkM,IAAAA,QAGnB/F,OAAO4G,SAxCA,GCJkBC,CAAgB5B,MACtCG,EAAa5O,WAKd0O,EAAkB,KAChB4B,EAAiC,eAC/B5O,kDAAO,2BAAY6O,KAAK/B,OAASgC,WAAAA,MACrCF,QAAeE,EAAW/B,EAAaG,KAG1B,QAAX0B,eAKA5O,kDAAO,4BAAa6O,KAAK/B,OAASiC,eAAAA,KAEtCA,EAAehC,EAAaG"}