{"version":3,"file":"install-03586186.js","sources":["../src/view.js","../src/install.js"],"sourcesContent":["/* @flow */\n\nimport type { Dependency } from './types'\n\nexport class View {\n  name: string\n  advance: () => void\n  dispose: () => void\n  dependencies: Array<Dependency>\n\n  constructor(name: string, dependencies: Array<Dependency>) {\n    this.name = name\n    this.dependencies = dependencies\n\n    const notification = atom.notifications.addInfo(`Installing ${name} dependencies`, {\n      detail: `Installing ${dependencies.map((item) => item.name).join(', ')}`,\n      dismissable: true,\n    })\n    const progress = document.createElement('progress')\n    this.dispose = function () {\n      notification.dismiss()\n    }\n    this.advance = function () {\n      progress.value += 1\n    }\n    progress.max = dependencies.length\n    progress.style.width = '100%'\n    try {\n      let notificationView = atom.views.getView(notification)\n      if (notificationView != null && notificationView.element != null) {\n        notificationView = notificationView.element\n      }\n      const notificationContent =\n        notificationView.querySelector('.detail-content') || notificationView.querySelector('.content')\n      if (notificationContent) {\n        notificationContent.appendChild(progress)\n      }\n    } catch (_) {\n      /* Notifications package is disabled */\n    }\n  }\n  complete(errors: Map<string, Error>): void {\n    this.dispose()\n    if (!errors.size) {\n      atom.notifications.addSuccess(`Installed ${this.name} dependencies`, {\n        detail: `Installed ${this.dependencies.map((item) => item.name).join(', ')}`,\n      })\n      return\n    }\n    const packages = []\n    errors.forEach((error, packageName) => {\n      packages.push(`  • ${packageName}`)\n      console.error(`[Package-Deps] Unable to install ${packageName}, Error:`, (error && error.stack) || error)\n    })\n    atom.notifications.addWarning(`Failed to install ${this.name} dependencies`, {\n      detail: `These packages were not installed, check your console\\nfor more info.\\n${packages.join('\\n')}`,\n      dismissable: true,\n    })\n  }\n}\n","/* @flow */\n\nimport { BufferedProcess } from 'atom'\nimport type { Dependency } from './types'\nimport { View } from './view'\n\nconst VALID_TICKS = new Set(['✓', 'done'])\nconst VALIDATION_REGEXP = /(?:Installing|Moving) (.*?) to .* (.*)/\n\nfunction exec(command: string, parameters: Array<string>): Promise<{ stdout: string, stderr: string }> {\n  return new Promise(function (resolve) {\n    const data = { stdout: [], stderr: [] }\n    const spawnedProcess = new BufferedProcess({\n      command,\n      args: parameters,\n      stdout(chunk) {\n        data.stdout.push(chunk)\n      },\n      stderr(chunk) {\n        data.stderr.push(chunk)\n      },\n      exit() {\n        resolve({ stdout: data.stdout.join(''), stderr: data.stderr.join('') })\n      },\n      autoStart: false,\n    })\n    spawnedProcess.start()\n  })\n}\n\nfunction apmInstall(\n  dependencies: Array<Dependency>,\n  progressCallback: (packageName: string, status: boolean) => void,\n): Promise<Map<string, Error>> {\n  const errors = new Map()\n  return Promise.all(\n    dependencies.map(function (dep) {\n      return exec(atom.packages.getApmPath(), ['install', dep.url || dep.name, '--production', '--color', 'false'])\n        .then(function (output) {\n          let successful = VALIDATION_REGEXP.test(output.stdout)\n          if (successful) {\n            const match = VALIDATION_REGEXP.exec(output.stdout)\n            successful = match && VALID_TICKS.has(match[2])\n          }\n          progressCallback(dep.name, !!successful)\n          if (!successful) {\n            const error = new Error(`Error installing dependency: ${dep.name}`)\n            error.stack = output.stderr\n            throw error\n          }\n        })\n        .catch(function (error) {\n          errors.set(dep.name, error)\n        })\n    }),\n  ).then(function () {\n    return errors\n  })\n}\n\nexport async function performInstall(packageName: string, dependencies: Dependency[]): Promise<*> {\n  const view = new View(packageName, dependencies)\n  const errors = await apmInstall(dependencies, function () {\n    view.advance()\n  })\n  view.complete(errors)\n\n  return Promise.all(\n    dependencies.map((item) => {\n      if (errors.has(item.name)) {\n        return null\n      }\n      return atom.packages.activatePackage(item.name)\n    }),\n  )\n}\n"],"names":["View","constructor","name","dependencies","notification","atom","notifications","addInfo","detail","map","item","join","dismissable","progress","document","createElement","dispose","dismiss","advance","value","max","length","style","width","notificationView","views","getView","element","notificationContent","querySelector","appendChild","_","complete","errors","size","addSuccess","this","packages","forEach","error","packageName","push","addWarning","VALID_TICKS","Set","VALIDATION_REGEXP","apmInstall","progressCallback","Map","Promise","all","dep","command","getApmPath","parameters","url","resolve","data","stdout","stderr","BufferedProcess","args","chunk","exit","autoStart","start","then","output","successful","test","match","exec","has","Error","stack","catch","set","async","view","activatePackage"],"mappings":"mCAIO,MAAMA,EAMXC,YAAYC,EAAcC,QACnBD,KAAOA,OACPC,aAAeA,QAEdC,EAAeC,KAAKC,cAAcC,QAAS,cAAaL,iBAAqB,CACjFM,OAAS,cAAaL,EAAaM,IAAKC,GAASA,EAAKR,MAAMS,KAAK,MACjEC,aAAa,IAETC,EAAWC,SAASC,cAAc,iBACnCC,QAAU,WACbZ,EAAaa,gBAEVC,QAAU,WACbL,EAASM,OAAS,GAEpBN,EAASO,IAAMjB,EAAakB,OAC5BR,EAASS,MAAMC,MAAQ,eAEjBC,EAAmBnB,KAAKoB,MAAMC,QAAQtB,GAClB,MAApBoB,GAAwD,MAA5BA,EAAiBG,UAC/CH,EAAmBA,EAAiBG,eAEhCC,EACJJ,EAAiBK,cAAc,oBAAsBL,EAAiBK,cAAc,YAClFD,GACFA,EAAoBE,YAAYjB,GAElC,MAAOkB,KAIXC,SAASC,WACFjB,WACAiB,EAAOC,iBACV7B,KAAKC,cAAc6B,WAAY,aAAYC,KAAKlC,oBAAqB,CACnEM,OAAS,aAAY4B,KAAKjC,aAAaM,IAAKC,GAASA,EAAKR,MAAMS,KAAK,cAInE0B,EAAW,GACjBJ,EAAOK,QAAQ,CAACC,EAAOC,KACrBH,EAASI,KAAM,OAAMD,KAGvBnC,KAAKC,cAAcoC,WAAY,qBAAoBN,KAAKlC,oBAAqB,CAC3EM,OAAS,0EAAyE6B,EAAS1B,KAAK,MAChGC,aAAa,KClDnB,MAAM+B,EAAc,IAAIC,IAAI,CAAC,IAAK,SAC5BC,EAAoB,yCAuB1B,SAASC,EACP3C,EACA4C,SAEMd,EAAS,IAAIe,WACZC,QAAQC,IACb/C,EAAaM,KAAI,SAAU0C,UA3BjBC,EA4BI/C,KAAKgC,SAASgB,aA5BDC,EA4Be,CAAC,UAAWH,EAAII,KAAOJ,EAAIjD,KAAM,eAAgB,UAAW,SA3BjG,IAAI+C,SAAQ,SAAUO,SACrBC,EAAO,CAAEC,OAAQ,GAAIC,OAAQ,IACZ,IAAIC,kBAAgB,CACzCR,QAAAA,EACAS,KAAMP,EACNI,OAAOI,GACLL,EAAKC,OAAOjB,KAAKqB,IAEnBH,OAAOG,GACLL,EAAKE,OAAOlB,KAAKqB,IAEnBC,OACEP,EAAQ,CAAEE,OAAQD,EAAKC,OAAO/C,KAAK,IAAKgD,OAAQF,EAAKE,OAAOhD,KAAK,OAEnEqD,WAAW,IAEEC,YAYVC,MAAK,SAAUC,OACVC,EAAavB,EAAkBwB,KAAKF,EAAOT,WAC3CU,EAAY,OACRE,EAAQzB,EAAkB0B,KAAKJ,EAAOT,QAC5CU,EAAaE,GAAS3B,EAAY6B,IAAIF,EAAM,OAE9CvB,EAAiBI,EAAIjD,OAAQkE,IACxBA,EAAY,OACT7B,EAAQ,IAAIkC,MAAO,gCAA+BtB,EAAIjD,YAC5DqC,EAAMmC,MAAQP,EAAOR,OACfpB,MAGToC,OAAM,SAAUpC,GACfN,EAAO2C,IAAIzB,EAAIjD,KAAMqC,MA3C/B,IAAca,EAAiBE,MA8C3BY,MAAK,kBACEjC,4BAIJ4C,eAA8BrC,EAAqBrC,SAClD2E,EAAO,IAAI9E,EAAKwC,EAAarC,GAC7B8B,QAAea,EAAW3C,GAAc,WAC5C2E,EAAK5D,oBAEP4D,EAAK9C,SAASC,GAEPgB,QAAQC,IACb/C,EAAaM,IAAKC,GACZuB,EAAOuC,IAAI9D,EAAKR,MACX,KAEFG,KAAKgC,SAAS0C,gBAAgBrE,EAAKR"}