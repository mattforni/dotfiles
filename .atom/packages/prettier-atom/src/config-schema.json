{
  "useEslint": {
    "title": "ESLint Integration",
    "description": "Use [prettier-eslint](https://github.com/prettier/prettier-eslint) to infer your Prettier settings based on your ESLint config and run eslint --fix after prettier formats the document. If we cannot infer a Prettier setting from your ESLint config (or if there is none in the current project), we will fallback to using your settings in the *Prettier Options* section.<br><br>**Note:** If you enable *Format on Save*, we recommend disabling ESlint's auto-fix to prevent fixing your code twice.",
    "type": "boolean",
    "default": false,
    "order": 1
  },
  "useStylelint": {
    "title": "Stylelint Integration",
    "description": "Use [prettier-stylelint](https://github.com/hugomrdias/prettier-stylelint) to infer your Prettier settings based on your Stylelint config. If we cannot infer a Prettier setting from your Stylelint config (or if there is none in the current project), we will fallback to using your settings in the *Prettier Options* section.",
    "type": "boolean",
    "default": false,
    "order": 2
  },
  "useEditorConfig": {
    "title": "EditorConfig Integration",
    "description": "Use [EditorConfig](https://editorconfig.org/) to infer your Prettier settings based on your `.editorconfig`",
    "type": "boolean",
    "default": true,
    "order": 3
  },
  "formatOnSaveOptions": {
    "title": "Format on Save",
    "order": 4,
    "type": "object",
    "properties": {
      "enabled": {
        "title": "Format Files on Save",
        "description": "Automatically format entire file when saving.",
        "type": "boolean",
        "default": false,
        "order": 1
      },
      "respectEslintignore": {
        "title": "Ignore Files in `.eslintignore`",
        "description": "Works regardless of whether *ESLint Integration* is enabled or not.",
        "type": "boolean",
        "default": true,
        "order": 2
      },
      "showInStatusBar": {
        "title": "Show in Status Bar",
        "description": "Show in status bar if *Format on Save* is enabled or not.",
        "type": "boolean",
        "default": false,
        "order": 3
      },
      "excludedGlobs": {
        "title": "Exclude (list of globs)",
        "description": "A list of [.gitignore style](https://git-scm.com/docs/gitignore) file globs to exclude from formatting on save (takes precedence over scopes). Use commas to separate each glob.",
        "type": "array",
        "default": [],
        "order": 4
      },
      "whitelistedGlobs": {
        "title": "Include (list of globs)",
        "description": "A list of [.gitignore style](https://git-scm.com/docs/gitignore) file globs to always format on save (takes precedence over scopes and excluded globs). Use commas to separate each glob.<br><br>**Note:** If there are globs in this list, files not matching the globs will not be formatted on save, regardless of other options.",
        "type": "array",
        "default": [],
        "order": 5
      },
      "isDisabledIfNotInPackageJson": {
        "title": "Only format if Prettier is found in your project's dependencies",
        "description": "Only format on save when `prettier` (or `prettier-eslint`/`prettier-eslint-cli` if using *ESLint integration*) is in your project's `package.json` (dependencies or devDependencies)",
        "type": "boolean",
        "default": false,
        "order": 6
      },
      "isDisabledIfNoConfigFile": {
        "title": "Only format if a Prettier config is found",
        "description": "Only format on save if we find a `.prettierrc` file (written in YAML or JSON), a `prettier.config.js` file that exports an object, or a 'prettier' key in your `package.json` file.",
        "type": "boolean",
        "default": false,
        "order": 7
      },
      "ignoreNodeModules": {
        "title": "Ignore Files in `node_modules`",
        "description": "Ignores Files in `node_modules` from format on save.",
        "type": "boolean",
        "default": true,
        "order": 8
      }
    }
  },
  "prettierEslintOptions": {
    "title": "prettier-eslint options",
    "type": "object",
    "order": 5,
    "properties": {
      "prettierLast": {
        "title": "Run Prettier Last",
        "description": "Run `eslint => prettier` instead of `prettier => eslint`.",
        "type": "boolean",
        "default": false,
        "order": 1
      }
    }
  }
}
