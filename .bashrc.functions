# ~/.bashrc.functions: included by ~/.bashrc to make life easier
# General functions
u() {
  N=$1
  if [[ -z $N ]]; then
    N=1
  fi
  while [ $(( N -= 1 )) -ge 0 ]; do
    cd ..
  done 
}

log() {
  local OPTIND

  PRINT=0

  while getopts "p" OPTION; do
    case "$OPTION" in
      p) PRINT=1;;
      ?) return;;
    esac
  done
  shift $((OPTIND-1))

  SCRIPT_PATH=$(readlink -f $1)
  if [[ -z $SCRIPT_PATH || ! -e $SCRIPT_PATH || ! -x $SCRIPT_PATH ]]; then 
    echo "Try again with a valid executable ..."
  else
    LOG_FILE="$(basename ${SCRIPT_PATH%.*}).log.$(date +%Y%m%dT%H%M%S)"
    PRINT_STR=$([ "$PRINT" == 1 ] && echo "| tee" || echo ">")
    eval "$SCRIPT_PATH 2>&1 $PRINT_STR $LOG_FILE"
    echo "'$SCRIPT_PATH' output logged to '$LOG_FILE'"
  fi
}

psag() {
  local OPTIND

  KILL=0

  while getopts "k" OPTION; do
    case "$OPTION" in
      k) KILL=1;;
      ?) return;;
    esac
  done
  shift $((OPTIND-1))

  QUERY=$1
  if [[ -z $QUERY ]]; then
    echo "Try again with something to grep for ..."
    return
  fi
  CMD="ps aux | grep '$QUERY'"
  if [ $KILL -eq 1 ]; then
    CMD="$CMD | awk {'print \$2'} | sudo xargs kill"
  fi
  eval "$CMD"
}

