import * as vscode from 'vscode';
import { TestAdapter, TestHub } from 'vscode-test-adapter-api';
import { Log } from './log';
export declare class TestAdapterRegistrar<T extends TestAdapter & {
    dispose: () => void;
}> {
    private readonly testHub;
    private readonly adapterFactory;
    private log?;
    private folderChangeSubscription;
    private readonly registeredAdapters;
    /**
     * This will create and register a TestAdapter for every WorkspaceFolder
     * and unregister and dispose it when the WorkspaceFolder is closed.
     * @param testHub - the TestHub that is exported by the Test Explorer extension
     * @param adapterFactory - factory method for creating a disposable Test Adapter
     * @param log - logger (optional)
     */
    constructor(testHub: TestHub, adapterFactory: (workspaceFolder: vscode.WorkspaceFolder) => T, log?: Log | undefined);
    getAdapter(workspaceFolder: vscode.WorkspaceFolder): T | undefined;
    private add;
    private remove;
    dispose(): void;
}
