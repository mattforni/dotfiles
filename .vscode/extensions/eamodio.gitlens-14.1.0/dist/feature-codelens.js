exports.id=477,exports.ids=[477],exports.modules={5183:(e,n,t)=>{t.d(n,{GitCodeLensProvider:()=>GitCodeLensProvider});var s=t(9496),i=t(2540),o=t(5255),a=t(6503),r=t(9529),l=t(5148),c=t(9796),m=t(3105),d=t(4336),u=t(2509);class GitRecentChangeCodeLens extends s.CodeLens{constructor(e,n,t,s,i,o,a,r,l,c){super(r,c),this.languageId=e,this.symbol=n,this.uri=t,this.dateFormat=s,this.blame=i,this.blameRange=o,this.isFullRange=a,this.desiredCommand=l}getBlame(){return this.blame?.()}}class GitAuthorsCodeLens extends s.CodeLens{constructor(e,n,t,s,i,o,a,r){super(a),this.languageId=e,this.symbol=n,this.uri=t,this.blame=s,this.blameRange=i,this.isFullRange=o,this.desiredCommand=r}getBlame(){return this.blame()}}class GitCodeLensProvider{constructor(e){this.container=e,this._onDidChangeCodeLenses=new s.EventEmitter}get onDidChangeCodeLenses(){return this._onDidChangeCodeLenses.event}reset(e){this._onDidChangeCodeLenses.fire()}async provideCodeLenses(e,n){if(e.isDirty&&(0,u.pt)(e.uri))return[];const t=await this.container.tracker.getOrAdd(e);if(!t.isBlameable)return[];let o=!1;if(e.isDirty)if(t.isDirtyIdle){const n=l.D.get("advanced.blame.sizeThresholdAfterEdit");n>0&&e.lineCount>n&&(o=!0)}else o=!0;const a=l.D.get("codeLens",e);let m=a.scopesByLanguage?.find((n=>n.language?.toLowerCase()===e.languageId));null==m&&(m={language:e.languageId}),null==m.scopes&&(m.scopes=a.scopes),null==m.symbolScopes&&(m.symbolScopes=a.symbolScopes),m.symbolScopes=null!=m.symbolScopes?m.symbolScopes=m.symbolScopes.map((e=>e.toLowerCase())):[];const g=[],h=t.uri;let y,C;if(o){if(1!==m.scopes.length||!m.scopes.includes(i.Uy.Document)){let n;if([n,C]=await Promise.all([this.container.git.isTracked(h),(0,r.dO)("vscode.executeDocumentSymbolProvider",e.uri)]),!n)return g}}else{if(n.isCancellationRequested)return g;if(1===m.scopes.length&&m.scopes.includes(i.Uy.Document)?y=await this.container.git.getBlame(h,e):[y,C]=await Promise.all([this.container.git.getBlame(h,e),(0,r.dO)("vscode.executeDocumentSymbolProvider",e.uri)]),null==y||0===y?.lines.length)return g}if(n.isCancellationRequested)return g;const b=(0,c.IH)((()=>e.validateRange(new s.Range(0,0,1e6,1e6)))),S=o?{command:void 0,title:this.getDirtyTitle(a)}:void 0;if(void 0!==C){d.Yd.log("GitCodeLensProvider.provideCodeLenses:",`${C.length} symbol(s) found`);for(const n of C)this.provideCodeLens(g,e,n,m,b,y,h,a,o,S)}if((m.scopes.includes(i.Uy.Document)||m.symbolScopes.includes("file"))&&!m.symbolScopes.includes("!file")&&null==g.find((e=>0===e.range.start.line&&0===e.range.end.line))){const n=b();let t;if(o||a.recentChange.enabled){o||(t=(0,c.IH)((()=>this.container.git.getBlameRange(y,h,n))));const i=new s.SymbolInformation(h.fileName,s.SymbolKind.File,"",new s.Location(h.documentUri(),new s.Range(0,0,0,n.start.character)));g.push(new GitRecentChangeCodeLens(e.languageId,i,h,a.dateFormat,t,n,!0,R(i),a.recentChange.command,S))}if(!o&&a.authors.enabled){void 0===t&&(t=(0,c.IH)((()=>this.container.git.getBlameRange(y,h,n))));const i=new s.SymbolInformation(h.fileName,s.SymbolKind.File,"",new s.Location(h.documentUri(),new s.Range(0,1,0,n.start.character)));g.push(new GitAuthorsCodeLens(e.languageId,i,h,t,n,!0,R(i),a.authors.command))}}return g}getValidateSymbolRange(e,n,t,o){let a,r=!1;const l=s.SymbolKind[e.kind].toLowerCase();switch(e.kind){case s.SymbolKind.File:(n.scopes.includes(i.Uy.Containers)||n.symbolScopes.includes(l))&&(r=!n.symbolScopes.includes(`!${l}`)),r&&(a=t());break;case s.SymbolKind.Package:(n.scopes.includes(i.Uy.Containers)||n.symbolScopes.includes(l))&&(r=!n.symbolScopes.includes(`!${l}`)),r&&(a=R(e),0===a.start.line&&0===a.end.line&&(a=t()));break;case s.SymbolKind.Class:case s.SymbolKind.Interface:case s.SymbolKind.Module:case s.SymbolKind.Namespace:case s.SymbolKind.Struct:(n.scopes.includes(i.Uy.Containers)||n.symbolScopes.includes(l))&&(a=R(e),r=!n.symbolScopes.includes(`!${l}`)&&(o||!a.isSingleLine));break;case s.SymbolKind.Constructor:case s.SymbolKind.Enum:case s.SymbolKind.Function:case s.SymbolKind.Method:case s.SymbolKind.Property:(n.scopes.includes(i.Uy.Blocks)||n.symbolScopes.includes(l))&&(a=R(e),r=!n.symbolScopes.includes(`!${l}`)&&(o||!a.isSingleLine));break;case s.SymbolKind.String:(n.symbolScopes.includes(l)||"markdown"===n.language&&n.scopes.includes(i.Uy.Containers))&&(a=R(e),r=!n.symbolScopes.includes(`!${l}`)&&(o||!a.isSingleLine));break;default:n.symbolScopes.includes(l)&&(a=R(e),r=!n.symbolScopes.includes(`!${l}`)&&(o||!a.isSingleLine))}return r?a??R(e):void 0}provideCodeLens(e,n,t,i,o,a,r,l,m,d){try{const u=this.getValidateSymbolRange(t,i,o,l.includeSingleLineSymbols);if(void 0===u)return;const g=n.lineAt(R(t).start);if(e.length&&e[e.length-1].range.start.line===g.lineNumber)return;let h,y=0;if((m||l.recentChange.enabled)&&(m||(h=(0,c.IH)((()=>this.container.git.getBlameRange(a,r,u)))),e.push(new GitRecentChangeCodeLens(n.languageId,t,r,l.dateFormat,h,u,!1,g.range.with(new s.Position(g.range.start.line,y)),l.recentChange.command,d)),y++),l.authors.enabled){let i=!u.isSingleLine;if(!i&&"csharp"===n.languageId)switch(t.kind){case s.SymbolKind.File:break;case s.SymbolKind.Package:case s.SymbolKind.Module:case s.SymbolKind.Namespace:case s.SymbolKind.Class:case s.SymbolKind.Interface:case s.SymbolKind.Constructor:case s.SymbolKind.Method:case s.SymbolKind.Function:case s.SymbolKind.Enum:i=!0}i&&!m&&(void 0===h&&(h=(0,c.IH)((()=>this.container.git.getBlameRange(a,r,u)))),e.push(new GitAuthorsCodeLens(n.languageId,t,r,h,u,!1,g.range.with(new s.Position(g.range.start.line,y)),l.authors.command)))}}finally{if(D(t))for(const s of t.children)this.provideCodeLens(e,n,s,i,o,a,r,l,m,d)}}resolveCodeLens(e,n){return e instanceof GitRecentChangeCodeLens?this.resolveGitRecentChangeCodeLens(e,n):e instanceof GitAuthorsCodeLens?this.resolveGitAuthorsCodeLens(e,n):Promise.reject(void 0)}resolveGitRecentChangeCodeLens(e,n){const t=e.getBlame();if(null==t)return e;const o=(0,m.Ps)(t.commits.values());if(null==o)return e;let a=`${o.author.name}, ${null==e.dateFormat?o.formattedDate:o.formatDate(e.dateFormat)}`;if(l.D.get("debug")&&(a+=` [${e.languageId}: ${s.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Commit (${o.shortSha})]`),!1===e.desiredCommand)return F(a,e);switch(e.desiredCommand){case i.N4.CopyRemoteCommitUrl:return h(a,e,o,!0);case i.N4.CopyRemoteFileUrl:return y(a,e,o,!0);case i.N4.DiffWithPrevious:return g(a,e,o);case i.N4.OpenCommitOnRemote:return h(a,e,o);case i.N4.OpenFileOnRemote:return y(a,e,o);case i.N4.RevealCommitInView:return C(a,e,o);case i.N4.ShowCommitsInView:return b(a,e,t,o);case i.N4.ShowQuickCommitDetails:return S(a,e,o);case i.N4.ShowQuickCommitFileDetails:return p(a,e,o);case i.N4.ShowQuickCurrentBranchHistory:return f(a,e);case i.N4.ShowQuickFileHistory:return N(a,e);case i.N4.ToggleFileBlame:return v(a,e);case i.N4.ToggleFileChanges:return w(a,e,o);case i.N4.ToggleFileChangesOnly:return w(a,e,o,!0);case i.N4.ToggleFileHeatmap:return L(a,e);default:return e}}resolveGitAuthorsCodeLens(e,n){const t=e.getBlame();if(null==t)return e;const o=t.authors.size,a=(0,m.Ps)(t.authors.values())?.name??"Unknown";let r=`${o} ${o>1?"authors":"author"} (${a}${o>1?" and others":""})`;if(l.D.get("debug")&&(r+=` [${e.languageId}: ${s.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Authors (${(0,m.v_)((0,m.UI)(t.authors.values(),(e=>e.name)),", ")})]`),!1===e.desiredCommand)return F(r,e);const c=(0,m.sE)(t.commits.values(),(e=>e.author.name===a))??(0,m.Ps)(t.commits.values());if(null==c)return e;switch(e.desiredCommand){case i.N4.CopyRemoteCommitUrl:return h(r,e,c,!0);case i.N4.CopyRemoteFileUrl:return y(r,e,c,!0);case i.N4.DiffWithPrevious:return g(r,e,c);case i.N4.OpenCommitOnRemote:return h(r,e,c);case i.N4.OpenFileOnRemote:return y(r,e,c);case i.N4.RevealCommitInView:return C(r,e,c);case i.N4.ShowCommitsInView:return b(r,e,t);case i.N4.ShowQuickCommitDetails:return S(r,e,c);case i.N4.ShowQuickCommitFileDetails:return p(r,e,c);case i.N4.ShowQuickCurrentBranchHistory:return f(r,e);case i.N4.ShowQuickFileHistory:return N(r,e);case i.N4.ToggleFileBlame:return v(r,e);case i.N4.ToggleFileChanges:return w(r,e,c);case i.N4.ToggleFileChangesOnly:return w(r,e,c,!0);case i.N4.ToggleFileHeatmap:return L(r,e);default:return e}}getDirtyTitle(e){return e.recentChange.enabled&&e.authors.enabled?l.D.get("strings.codeLens.unsavedChanges.recentChangeAndAuthors"):e.recentChange.enabled?l.D.get("strings.codeLens.unsavedChanges.recentChangeOnly"):l.D.get("strings.codeLens.unsavedChanges.authorsOnly")}}function g(e,n,t){return n.command=(0,r._N)({title:e,command:o.Gh.DiffWithPrevious,arguments:[void 0,{commit:t,uri:n.uri.toFileUri()}]}),n}function h(e,n,t,s=!1){return n.command=(0,r._N)({title:e,command:o.Gh.OpenOnRemote,arguments:[{resource:{type:a.J.Commit,sha:t.sha},repoPath:t.repoPath,clipboard:s}]}),n}function y(e,n,t,s=!1){return n.command=(0,r._N)({title:e,command:o.Gh.OpenOnRemote,arguments:[{resource:{type:a.J.Revision,fileName:t.file?.path??"",sha:t.sha},repoPath:t.repoPath,clipboard:s}]}),n}function C(e,n,t){return n.command=(0,r._N)({title:e,command:t?.isUncommitted?"":i.N4.RevealCommitInView,arguments:[n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}]}),n}function b(e,n,t,s){let i;return i=void 0===s?[...(0,m.DZ)(t.commits.values(),(e=>e.isUncommitted?void 0:e.ref))]:[s.ref],n.command=(0,r._N)({title:e,command:0===i.length?"":o.Gh.ShowCommitsInView,arguments:[{repoPath:t.repoPath,refs:i}]}),n}function S(e,n,t){return n.command=(0,r._N)({title:e,command:t?.isUncommitted?"":i.N4.ShowQuickCommitDetails,arguments:[n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}]}),n}function p(e,n,t){return n.command=(0,r._N)({title:e,command:t?.isUncommitted?"":i.N4.ShowQuickCommitFileDetails,arguments:[n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}]}),n}function f(e,n){return n.command=(0,r._N)({title:e,command:i.N4.ShowQuickCurrentBranchHistory,arguments:[n.uri.toFileUri()]}),n}function N(e,n){return n.command=(0,r._N)({title:e,command:i.N4.ShowQuickFileHistory,arguments:[n.uri.toFileUri(),{range:n.isFullRange?void 0:n.blameRange}]}),n}function v(e,n){return n.command=(0,r._N)({title:e,command:o.Gh.ToggleFileBlame,arguments:[n.uri.toFileUri()]}),n}function w(e,n,t,s){return n.command=(0,r._N)({title:e,command:o.Gh.ToggleFileChanges,arguments:[n.uri.toFileUri(),{type:i.VP.Changes,context:{sha:t.sha,only:s,selection:!1}}]}),n}function L(e,n){return n.command=(0,r._N)({title:e,command:o.Gh.ToggleFileHeatmap,arguments:[n.uri.toFileUri()]}),n}function F(e,n){return n.command={title:e,command:""},n}function R(e){return D(e)?e.range:e.location.range}function D(e){return(0,c.is)(e,"children")}GitCodeLensProvider.selector=[{scheme:o.sN.File},{scheme:o.sN.Git},{scheme:o.sN.GitLens},{scheme:o.sN.PRs},{scheme:o.sN.Vsls},{scheme:o.sN.VslsScc},{scheme:o.sN.Virtual},{scheme:o.sN.GitHub}]}};