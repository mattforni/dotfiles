exports.id=773,exports.ids=[773],exports.modules={5140:(e,t,i)=>{i.d(t,{WelcomeWebviewProvider:()=>WelcomeWebviewProvider});var o=i(9496),n=i(5148),s=i(5798);const a=new s.ke("welcome/configuration/update"),r=new s.jH("welcome/didChange",!0),d=Object.freeze({dispose:()=>{}});class WelcomeWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=o.Disposable.from(n.D.onDidChange(this.onConfigurationChanged,this),this.container.git.onDidChangeRepositories(this.notifyDidChange,this),o.workspace.isTrusted?d:o.workspace.onDidGrantWorkspaceTrust(this.notifyDidChange,this))}dispose(){this._disposable.dispose()}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChange()}onConfigurationChanged(e){(n.D.changed(e,"codeLens.enabled")||n.D.changed(e,"currentLine.enabled"))&&this.notifyDidChange()}onMessageReceived(e){if(e.method===a.method)(0,s.mq)(a,e,(e=>this.updateConfiguration(e)))}getState(){return{timestamp:Date.now(),version:this.container.version,config:{codeLens:n.D.get("codeLens.enabled",void 0,!0,!0),currentLine:n.D.get("currentLine.enabled",void 0,!0,!0)},repoFeaturesBlocked:!o.workspace.isTrusted||0===this.container.git.openRepositoryCount||this.container.git.hasUnsafeRepositories()}}updateConfiguration(e){n.D.updateEffective(`${e.type}.enabled`,e.value)}notifyDidChange(){this.host.notify(r,{state:this.getState()})}}}};