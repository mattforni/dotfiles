(()=>{var e={5186:(e,t,i)=>{var r=i(3698),n=i(2505),s=i(6417),o=Function.bind,a=o.bind(o);function l(e,t,i){var r=a(s,null).apply(null,i?[t,i]:[t]);e.api={remove:r},e.remove=r,["before","error","after","wrap"].forEach((function(r){var s=i?[t,r,i]:[t,r];e[r]=e.api[r]=a(n,null).apply(null,s)}))}function c(){var e={registry:{}},t=r.bind(null,e);return l(t,e),t}var h=!1;function u(){return h||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),h=!0),c()}u.Singular=function(){var e={registry:{}},t=r.bind(null,e,"h");return l(t,e,"h"),t}.bind(),u.Collection=c.bind(),e.exports=u,e.exports.Hook=u,e.exports.Singular=u.Singular,e.exports.Collection=u.Collection},2505:e=>{e.exports=function(e,t,i,r){var n=r;e.registry[i]||(e.registry[i]=[]);"before"===t&&(r=function(e,t){return Promise.resolve().then(n.bind(null,t)).then(e.bind(null,t))});"after"===t&&(r=function(e,t){var i;return Promise.resolve().then(e.bind(null,t)).then((function(e){return n(i=e,t)})).then((function(){return i}))});"error"===t&&(r=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return n(e,t)}))});e.registry[i].push({hook:r,orig:n})}},3698:e=>{e.exports=function e(t,i,r,n){if("function"!=typeof r)throw new Error("method for before hook must be a function");n||(n={});if(Array.isArray(i))return i.reverse().reduce((function(i,r){return e.bind(null,t,r,i,n)}),r)();return Promise.resolve().then((function(){return t.registry[i]?t.registry[i].reduce((function(e,t){return t.hook.bind(null,e,n)}),r)():r(n)}))}},6417:e=>{e.exports=function(e,t,i){if(!e.registry[t])return;var r=e.registry[t].map((function(e){return e.orig})).indexOf(i);if(-1===r)return;e.registry[t].splice(r,1)}},5640:(e,t,i)=>{i.d(t,{QO:()=>r,qb:()=>n});var r=(e=>(e[e.Force=0]="Force",e[e.ForceWithLease=1]="ForceWithLease",e))(r||{}),n=(e=>(e[e.INDEX_MODIFIED=0]="INDEX_MODIFIED",e[e.INDEX_ADDED=1]="INDEX_ADDED",e[e.INDEX_DELETED=2]="INDEX_DELETED",e[e.INDEX_RENAMED=3]="INDEX_RENAMED",e[e.INDEX_COPIED=4]="INDEX_COPIED",e[e.MODIFIED=5]="MODIFIED",e[e.DELETED=6]="DELETED",e[e.UNTRACKED=7]="UNTRACKED",e[e.IGNORED=8]="IGNORED",e[e.INTENT_TO_ADD=9]="INTENT_TO_ADD",e[e.ADDED_BY_US=10]="ADDED_BY_US",e[e.ADDED_BY_THEM=11]="ADDED_BY_THEM",e[e.DELETED_BY_US=12]="DELETED_BY_US",e[e.DELETED_BY_THEM=13]="DELETED_BY_THEM",e[e.BOTH_ADDED=14]="BOTH_ADDED",e[e.BOTH_DELETED=15]="BOTH_DELETED",e[e.BOTH_MODIFIED=16]="BOTH_MODIFIED",e))(n||{})},4398:(e,t,i)=>{i.d(t,{h:()=>n});var r=i(5255);function n(e){if(e.scheme===r.sN.Git)try{return JSON.parse(e.query)}catch{}}},2022:(e,t,i)=>{i.d(t,{HU:()=>AnnotationProviderBase,jp:()=>o,mc:()=>a});var r=i(9496),n=i(2061),s=i(4336),o=(e=>(e.Computing="computing",e.Computed="computed",e))(o||{});function a(e){return`${e?.document.uri.toString()}|${e?.viewColumn}`}class AnnotationProviderBase{constructor(e,t,i){this.annotationType=e,this.editor=t,this.trackedDocument=i,this.correlationKey=a(this.editor),this.document=this.editor.document,this.disposable=r.Disposable.from(r.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this))}annotationContext;correlationKey;document;status;decorations;disposable;dispose(){this.clear(),this.disposable.dispose()}onTextEditorSelectionChanged(e){this.document===e.textEditor.document&&this.selection({line:e.selections[0].active.line})}get editorUri(){return this.editor?.document?.uri}clear(){if(this.annotationContext=void 0,this.status=void 0,null!=this.editor&&this.decorations?.length){for(const e of this.decorations)try{this.editor.setDecorations(e.decorationType,[])}catch{}this.decorations=void 0}}mustReopen(e){return!1}refresh(e){if(null==this.editor||!this.decorations?.length)return;const t=[];for(const i of this.decorations){const r=e.get(i.decorationType);null!==r&&(null!=r&&(i.decorationType=r),t.push(i))}this.setDecorations(this.decorations)}async restore(e){if(!1!==this.editor._disposed){if(this.status="computing",e===r.window.activeTextEditor&&await(0,n.v)("gitlens:annotationStatus",this.status),this.editor=e,this.correlationKey=a(e),this.document=e.document,this.decorations?.length)for(const e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions);this.status="computed",e===r.window.activeTextEditor&&await(0,n.v)("gitlens:annotationStatus",this.status)}}async provideAnnotation(e){this.status="computing";try{if(await this.onProvideAnnotation(e))return this.status="computed",!0}catch(e){s.Yd.error(e)}return this.status=void 0,!1}setDecorations(e){if(this.decorations?.length&&this.clear(),this.decorations=e,this.decorations?.length)for(const e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions)}}},248:(e,t,i)=>{i.d(t,{Lx:()=>S,iF:()=>P,U5:()=>R,Vz:()=>D,HM:()=>A,sV:()=>k});var r=i(9496),n=i(2540),s=i(5255),o=i(9338);function a(e){const t=p(e);return null==t?null:[t.rgba.r,t.rgba.g,t.rgba.b,t.rgba.a]}function l(e,t){const i=Math.pow(10,t);return Math.round(e*i)/i}class RGBA{_rgbaBrand=void 0;r;g;b;a;constructor(e,t,i,r=1){this.r=0|Math.min(255,Math.max(0,e)),this.g=0|Math.min(255,Math.max(0,t)),this.b=0|Math.min(255,Math.max(0,i)),this.a=l(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a}}class HSLA{_hslaBrand=void 0;h;s;l;a;constructor(e,t,i,r){this.h=0|Math.max(Math.min(360,e),0),this.s=l(Math.max(Math.min(1,t),0),3),this.l=l(Math.max(Math.min(1,i),0),3),this.a=l(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.l===t.l&&e.a===t.a}static fromRGBA(e){const t=e.r/255,i=e.g/255,r=e.b/255,n=e.a,s=Math.max(t,i,r),o=Math.min(t,i,r);let a=0,l=0;const c=(o+s)/2,h=s-o;if(h>0){switch(l=Math.min(c<=.5?h/(2*c):h/(2-2*c),1),s){case t:a=(i-r)/h+(i<r?6:0);break;case i:a=(r-t)/h+2;break;case r:a=(t-i)/h+4}a*=60,a=Math.round(a)}return new HSLA(a,l,c,n)}static _hue2rgb(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e}static toRGBA(e){const t=e.h/360,{s:i,l:r,a:n}=e;let s,o,a;if(0===i)s=o=a=r;else{const e=r<.5?r*(1+i):r+i-r*i,n=2*r-e;s=HSLA._hue2rgb(n,e,t+1/3),o=HSLA._hue2rgb(n,e,t),a=HSLA._hue2rgb(n,e,t-1/3)}return new RGBA(Math.round(255*s),Math.round(255*o),Math.round(255*a),n)}}class HSVA{_hsvaBrand=void 0;h;s;v;a;constructor(e,t,i,r){this.h=0|Math.max(Math.min(360,e),0),this.s=l(Math.max(Math.min(1,t),0),3),this.v=l(Math.max(Math.min(1,i),0),3),this.a=l(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.v===t.v&&e.a===t.a}static fromRGBA(e){const t=e.r/255,i=e.g/255,r=e.b/255,n=Math.max(t,i,r),s=n-Math.min(t,i,r),o=0===n?0:s/n;let a;return a=0===s?0:n===t?((i-r)/s%6+6)%6:n===i?(r-t)/s+2:(t-i)/s+4,new HSVA(Math.round(60*a),o,n,e.a)}static toRGBA(e){const{h:t,s:i,v:r,a:n}=e,s=r*i,o=s*(1-Math.abs(t/60%2-1)),a=r-s;let[l,c,h]=[0,0,0];return t<60?(l=s,c=o):t<120?(l=o,c=s):t<180?(c=s,h=o):t<240?(c=o,h=s):t<300?(l=o,h=s):t<=360&&(l=s,h=o),l=Math.round(255*(l+a)),c=Math.round(255*(c+a)),h=Math.round(255*(h+a)),new RGBA(l,c,h,n)}}class Color{static from(e){return e instanceof Color?e:p(e)||Color.red}static fromCssVariable(e,t){return p(function(e,t){return t.getPropertyValue(e).trim()}(e,t))||Color.red}static fromHex(e){return m(e)||Color.red}static equals(e,t){return!e&&!t||!(!e||!t)&&e.equals(t)}rgba;_hsla;get hsla(){return this._hsla?this._hsla:HSLA.fromRGBA(this.rgba)}_hsva;get hsva(){return this._hsva?this._hsva:HSVA.fromRGBA(this.rgba)}constructor(e){if(!e)throw new Error("Color needs a value");if(e instanceof RGBA)this.rgba=e;else if(e instanceof HSLA)this._hsla=e,this.rgba=HSLA.toRGBA(e);else{if(!(e instanceof HSVA))throw new Error("Invalid color ctor argument");this._hsva=e,this.rgba=HSVA.toRGBA(e)}}equals(e){return null!=e&&(Boolean(e)&&RGBA.equals(this.rgba,e.rgba)&&HSLA.equals(this.hsla,e.hsla)&&HSVA.equals(this.hsva,e.hsva))}getRelativeLuminance(){return l(.2126*Color._relativeLuminanceForComponent(this.rgba.r)+.7152*Color._relativeLuminanceForComponent(this.rgba.g)+.0722*Color._relativeLuminanceForComponent(this.rgba.b),4)}static _relativeLuminanceForComponent(e){const t=e/255;return t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)}luminance(e){return function(e,t){if(0===t)return new Color(new RGBA(0,0,0,e.rgba.a));if(1===t)return new Color(new RGBA(255,255,255,e.rgba.a));const i=e.getRelativeLuminance();let r=20;const n=(e,i)=>{const s=e.mix(i,.5),o=s.getRelativeLuminance();return Math.abs(t-o)<1e-7||!r--?s:o>t?n(e,s):n(s,i)},s=(i>t?n(Color.black,e):n(e,Color.white)).rgba;return new Color(new RGBA(s.r,s.g,s.b,e.rgba.a))}(this,e)}getContrastRatio(e){const t=this.getRelativeLuminance(),i=e.getRelativeLuminance();return t>i?(t+.05)/(i+.05):(i+.05)/(t+.05)}isDarker(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3<128}isLighter(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3>=128}isLighterThan(e){return this.getRelativeLuminance()>e.getRelativeLuminance()}isDarkerThan(e){return this.getRelativeLuminance()<e.getRelativeLuminance()}lighten(e){return new Color(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l+this.hsla.l*e,this.hsla.a))}darken(e){return new Color(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l-this.hsla.l*e,this.hsla.a))}transparent(e){const{r:t,g:i,b:r,a:n}=this.rgba;return new Color(new RGBA(t,i,r,n*e))}isTransparent(){return 0===this.rgba.a}isOpaque(){return 1===this.rgba.a}opposite(){return new Color(new RGBA(255-this.rgba.r,255-this.rgba.g,255-this.rgba.b,this.rgba.a))}blend(e){const t=e.rgba,i=this.rgba.a,r=t.a,n=i+r*(1-i);if(n<1e-6)return Color.transparent;const s=this.rgba.r*i/n+t.r*r*(1-i)/n,o=this.rgba.g*i/n+t.g*r*(1-i)/n,a=this.rgba.b*i/n+t.b*r*(1-i)/n;return new Color(new RGBA(s,o,a,n))}mix(e,t){return function(e,t,i){const r=e.rgba,n=t.rgba;return new Color(new RGBA(r.r+i*(n.r-r.r),r.g+i*(n.g-r.g),r.b+i*(n.b-r.b),r.a+i*(n.a-r.a)))}(this,e,t)}makeOpaque(e){if(this.isOpaque()||1!==e.rgba.a)return this;const{r:t,g:i,b:r,a:n}=this.rgba;return new Color(new RGBA(e.rgba.r-n*(e.rgba.r-t),e.rgba.g-n*(e.rgba.g-i),e.rgba.b-n*(e.rgba.b-r),1))}flatten(...e){const t=e.reduceRight(((e,t)=>Color._flatten(t,e)));return Color._flatten(this,t)}static _flatten(e,t){const i=1-e.rgba.a;return new Color(new RGBA(i*t.rgba.r+e.rgba.a*e.rgba.r,i*t.rgba.g+e.rgba.a*e.rgba.g,i*t.rgba.b+e.rgba.a*e.rgba.b))}_toString;toString(){return this._toString||(this._toString=function(e){if(e.isOpaque())return u(e);return c(e)}(this)),this._toString}static getLighterColor(e,t,i){if(e.isLighterThan(t))return e;i=i||.5;const r=e.getRelativeLuminance(),n=t.getRelativeLuminance();return i=i*(n-r)/n,e.lighten(i)}static getDarkerColor(e,t,i){if(e.isDarkerThan(t))return e;i=i||.5;const r=e.getRelativeLuminance();return i=i*(r-t.getRelativeLuminance())/r,e.darken(i)}static white=new Color(new RGBA(255,255,255,1));static black=new Color(new RGBA(0,0,0,1));static red=new Color(new RGBA(255,0,0,1));static blue=new Color(new RGBA(0,0,255,1));static green=new Color(new RGBA(0,255,0,1));static cyan=new Color(new RGBA(0,255,255,1));static lightgrey=new Color(new RGBA(211,211,211,1));static transparent=new Color(new RGBA(0,0,0,0))}function c(e){return`rgba(${e.rgba.r}, ${e.rgba.g}, ${e.rgba.b}, ${Number(e.rgba.a.toFixed(2))})`}function h(e){const t=e.toString(16);return 2!==t.length?`0${t}`:t}function u(e){return`#${h(e.rgba.r)}${h(e.rgba.g)}${h(e.rgba.b)}`}const d=/^((?:rgb|hsl)a?)\((-?\d+%?)[,\s]+(-?\d+%?)[,\s]+(-?\d+%?)[,\s]*(-?[\d.]+%?)?\)$/i;function p(e){if(0===(e=e.trim()).length)return null;if(e.charCodeAt(0)===s.mN.Hash)return m(e);const t=d.exec(e);if(null==t)return null;const i=t[1];let r;switch(i){case"rgb":case"hsl":r=[parseInt(t[2],10),parseInt(t[3],10),parseInt(t[4],10),1];break;case"rgba":case"hsla":r=[parseInt(t[2],10),parseInt(t[3],10),parseInt(t[4],10),parseFloat(t[5])];break;default:return null}switch(i){case"rgb":case"rgba":return new Color(new RGBA(r[0],r[1],r[2],r[3]));case"hsl":case"hsla":return new Color(new HSLA(r[0],r[1],r[2],r[3]))}return Color.red}function m(e){const t=(e=e.trim()).length;if(0===t)return null;if(e.charCodeAt(0)!==s.mN.Hash)return null;switch(t){case 7:{const t=16*g(e.charCodeAt(1))+g(e.charCodeAt(2)),i=16*g(e.charCodeAt(3))+g(e.charCodeAt(4)),r=16*g(e.charCodeAt(5))+g(e.charCodeAt(6));return new Color(new RGBA(t,i,r,1))}case 9:{const t=16*g(e.charCodeAt(1))+g(e.charCodeAt(2)),i=16*g(e.charCodeAt(3))+g(e.charCodeAt(4)),r=16*g(e.charCodeAt(5))+g(e.charCodeAt(6)),n=16*g(e.charCodeAt(7))+g(e.charCodeAt(8));return new Color(new RGBA(t,i,r,n/255))}case 4:{const t=g(e.charCodeAt(1)),i=g(e.charCodeAt(2)),r=g(e.charCodeAt(3));return new Color(new RGBA(16*t+t,16*i+i,16*r+r))}case 5:{const t=g(e.charCodeAt(1)),i=g(e.charCodeAt(2)),r=g(e.charCodeAt(3)),n=g(e.charCodeAt(4));return new Color(new RGBA(16*t+t,16*i+i,16*r+r,(16*n+n)/255))}default:return null}}function g(e){switch(e){case s.mN.Digit0:return 0;case s.mN.Digit1:return 1;case s.mN.Digit2:return 2;case s.mN.Digit3:return 3;case s.mN.Digit4:return 4;case s.mN.Digit5:return 5;case s.mN.Digit6:return 6;case s.mN.Digit7:return 7;case s.mN.Digit8:return 8;case s.mN.Digit9:return 9;case s.mN.a:case s.mN.A:return 10;case s.mN.b:case s.mN.B:return 11;case s.mN.c:case s.mN.C:return 12;case s.mN.d:case s.mN.D:return 13;case s.mN.e:case s.mN.E:return 14;case s.mN.f:case s.mN.F:return 15}return 0}var f=i(5148),w=i(3620);const v="#f66a0a",y="#0a60f6",b=["#f66a0a","#ef6939","#e96950","#e26862","#db6871","#d3677e","#cc678a","#c46696","#bb66a0","#b365a9","#a965b3","#a064bb","#9664c4","#8a63cc","#7e63d3","#7162db","#6262e2","#5061e9","#3961ef","#0a60f6"];let C;function A(){if(null==C){const{coldColor:e,hotColor:t}=f.D.get("heatmap");let i;i=e===y&&t===v?b:function(e,t,i){const r=[],n=Color.from(e),s=Color.from(t);r.push(n.toString());const o=i-1;for(let e=1;e<o;e++){const t=n.mix(s,e/o);r.push(t.toString())}return r.push(s.toString()),r}(t,e,20),C={hot:i.slice(0,10),cold:i.slice(10,20)};const r=f.D.onDidChange((e=>{f.D.changed(e,["heatmap.ageThreshold","heatmap.hotColor","heatmap.coldColor"])&&(r.dispose(),C=void 0)}))}return C}function P(e,t,i){const[r,n,s,o]=_(t,i);e.renderOptions.before.borderColor=`rgba(${r},${n},${s},${o})`}function S(e,t,i,s){const[o,a,l,c]=_(e,t),{fadeLines:h,locations:u}=f.D.get("heatmap"),d=u.includes(n.o9.Gutter),p=u.includes(n.o9.Line),m=u.includes(n.o9.Scrollbar),g=`${o},${a},${l},${c}`;let w=s.get(g);return null==w?(w={decorationType:r.window.createTextEditorDecorationType({backgroundColor:p?`rgba(${o},${a},${l},${.15*c})`:void 0,opacity:h?`${t.computeOpacity(e).toFixed(2)} !important`:void 0,isWholeLine:!(!p&&!h)||void 0,gutterIconPath:d?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${o},${a},${l})' fill-opacity='${c}' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:d?"contain":void 0,overviewRulerLane:m?r.OverviewRulerLane.Center:void 0,overviewRulerColor:m?`rgba(${o},${a},${l},${.7*c})`:void 0}),rangesOrOptions:[i]},s.set(g,w)):w.rangesOrOptions.push(i),w.decorationType}function R(e,t,i,r){const n={renderOptions:{before:{...r}}};e.isUncommitted&&(n.renderOptions.before.color=r.uncommittedColor);const a=o.i.fromTemplate(t,e,i);return n.renderOptions.before.contentText=(0,w.vk)(a.replace(/ /g,s.NE.Space),1,1),n}function D(e,t,i,n,s){let o,a,l,c=0;for(const e of Object.values(s.tokenOptions))if(void 0!==e){if(null==e.truncateTo){c=-1;break}c+=e.truncateTo}if(c>=0&&(c+=(0,w.dz)((0,w.sX)(n,void 0)),c>0&&(c+=3)),t.enabled&&(o="solid",a="left"===t.location?"0 0 0 2px":"0 2px 0 0"),c>=0){const e=f.D.getAny("editor.letterSpacing");l=null!=e&&0!==e?`calc(${c}ch + ${Math.round(c*e)+(i?13:-6)}px)`:`calc(${c}ch ${i?"+ 13px":"- 6px"})`}return{backgroundColor:new r.ThemeColor("gitlens.gutterBackgroundColor"),borderStyle:o,borderWidth:a,color:new r.ThemeColor("gitlens.gutterForegroundColor"),fontWeight:"normal",fontStyle:"normal",height:"100%",margin:"0 26px -1px 0",textDecoration:`${e?"overline solid rgba(0, 0, 0, .2)":"none"};box-sizing: border-box${i?";padding: 0 0 0 18px":""}`,width:l,uncommittedColor:new r.ThemeColor("gitlens.gutterUncommittedForegroundColor")}}function k(e,t,i,n=!0){const a=o.i.fromTemplate(t,e,{...i,messageTruncateAtNewLine:!0});return{renderOptions:{after:{backgroundColor:new r.ThemeColor("gitlens.trailingLineBackgroundColor"),color:new r.ThemeColor("gitlens.trailingLineForegroundColor"),contentText:(0,w.vk)(a.replace(/ /g,s.NE.Space),1,1),fontWeight:"normal",fontStyle:"normal",textDecoration:"none;"+(n?"":" position: absolute;")}}}}function _(e,t){const i=t.computeRelativeAge(e),r=a((e.getTime()<t.coldThresholdTimestamp?t.colors.cold:t.colors.hot)[i]);return[...r??[0,0,0],null==r?0:0===i?1:i<=5?.8:.6]}},3139:(e,t,i)=>{i.d(t,{G:()=>y,P:()=>Autolinks});var r=i(9496),n=i(5255),s=i(8452),o=i(5148),a=i(7512),l=i(4241),c=i(8786),h=i(3105),u=i(4336),d=i(7469),p=i(3620),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&m(t,i,s),s};const w=Object.freeze(new Map),v=/<num>/g;function y(e){return{provider:e.provider?{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon}:void 0,id:e.id,prefix:e.prefix,title:e.title,url:e.url,type:e.type,description:e.description}}function b(e){return!("prefix"in e)&&!("url"in e)}function C(e){return"prefix"in e&&null!=e.prefix&&"url"in e&&null!=e.url}class Autolinks{constructor(e){this.container=e,this._disposable=r.Disposable.from(o.D.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged()}_disposable;_references=[];dispose(){this._disposable?.dispose()}onConfigurationChanged(e){if(o.D.changed(e,"autolinks")){const e=o.D.get("autolinks");this._references=e?.filter((e=>e.prefix&&e.url))?.map((e=>({prefix:e.prefix,url:e.url,title:e.title,alphanumeric:e.alphanumeric,ignoreCase:e.ignoreCase,type:e.type,description:e.description})))??[]}}getAutolinks(e,t){const i=t?.provider;if(null!=t&&null==t.provider)return w;const r=new Map;let n,s;for(const t of i?.autolinks??this._references)if(C(t))for(A(t,"plaintext");;){if(n=t.messageRegex.exec(e),null==n)break;[,,,s]=n,r.set(s,{provider:i,id:s,prefix:t.prefix,url:t.url?.replace(v,s),title:t.title?.replace(v,s),type:t.type,description:t.description?.replace(v,s)})}else b(t)&&t.parse(e,r);return r}async getLinkedIssuesAndPullRequests(e,t,i){if(!t.hasRichProvider())return;const{provider:r}=t;if(!(r.maybeConnected??await r.isConnected()))return;let n=i?.autolinks;if(null==n&&(n=this.getAutolinks(e,t)),0===n.size)return;const s=await(0,d.xu)(n.keys(),(e=>r.getIssueOrPullRequest(e)),i?.timeout);for(const[e,t]of s)null==t&&s.delete(e);return 0!==s.size?s:void 0}linkify(e,t,i,r,s){const o="plaintext"===t&&null==s;o&&(s=new Map);const a=new Map;for(const i of this._references)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,a,r,s));if(null!=i&&0!==i.length){i=[...i].sort(((e,t)=>{const i=e.provider?.maybeConnected,r=t.provider?.maybeConnected;return i!==r?i?-1:r?1:0:0}));for(const n of i)if(null!=n.provider)for(const i of n.provider.autolinks)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,a,r,s))}return 0!==a.size&&(e=e.replace(/(\x00\d+\x00)/g,((e,t)=>a.get(t)??t))),o&&s?.size&&(e+=`\n${n.NE.Dash.repeat(2)}\n${(0,h.v_)((0,h.UI)(s,(([e,t])=>`${(0,p.sC)(e)} ${t}`)),"\n")}`),e}ensureAutolinkCached(e){if(b(e))return!0;if(!e.prefix||!e.url)return!1;if(void 0!==e.tokenize||null===e.tokenize)return!0;try{e.tokenize=(t,i,r,o,l)=>{let h;switch(i){case"markdown":return A(e,i),t.replace(e.messageMarkdownRegex,((t,i,u,m)=>{const g=(0,c.M)(e.url.replace(v,m));let f="";if(e.title){f=` "${e.title.replace(v,m)}`;const t=o?.get(m);if(null!=t)if(t instanceof d.PK)f+=`\n${n.NE.Dash.repeat(2)}\nDetails timed out`;else{const e=(0,p.ry)(t.title.trim()),i=e.replace(/"/g,'\\"');null!=l&&(h=l.size+1,l.set(h,`[${(0,s.sy)(t)} **${e}**](${g}${f}")\\\n${n.NE.Space.repeat(5)}${u} ${t.closed?"closed":"opened"} ${(0,a.Zh)(t.closedDate??t.date)}`)),f+=`\n${n.NE.Dash.repeat(2)}\n${i}\n${t.closed?"Closed":"Opened"}, ${(0,a.Zh)(t.closedDate??t.date)}`}f+='"'}const w=`\0${r.size}\0`;return r.set(w,`[${u}](${g}${f})`),`${i}${w}`}));case"html":return A(e,i),t.replace(e.messageHtmlRegex,((t,i,u,m)=>{const g=(0,c.M)(e.url.replace(v,m));let f="";if(e.title){f=`"${(0,p.se)(e.title.replace(v,m))}`;const t=o?.get(m);if(null!=t)if(t instanceof d.PK)f+=`\n${n.NE.Dash.repeat(2)}\nDetails timed out`;else{const e=(0,p.se)(t.title.trim()),i=e.replace(/"/g,"&quot;");null!=l&&(h=l.size+1,l.set(h,`<a href="${g}" title=${f}>${(0,s.Ty)(t)} <b>${e}</b></a><br /><span>${n.NE.Space.repeat(5)}${u} ${t.closed?"closed":"opened"} ${(0,a.Zh)(t.closedDate??t.date)}</span>`)),f+=`\n${n.NE.Dash.repeat(2)}\n${i}\n${t.closed?"Closed":"Opened"}, ${(0,a.Zh)(t.closedDate??t.date)}`}f+='"'}const w=`\0${r.size}\0`;return r.set(w,`<a href="${g}" title=${f}>${u}</a>`),`${i}${w}`}));default:return A(e,i),t.replace(e.messageRegex,((e,t,i,s)=>{const c=o?.get(s);if(null==c)return i;null!=l&&(h=l.size+1,l.set(h,`${i}: ${c instanceof d.PK?"Details timed out":`${c.title}  ${n.NE.Dot}  ${c.closed?"Closed":"Opened"}, ${(0,a.Zh)(c.closedDate??c.date)}`}`));const u=`\0${r.size}\0`;return r.set(u,`${i}${(0,p.sC)(h)}`),`${t}${u}`}))}}}catch(t){u.Yd.error(t,`Failed to create autolink generator: prefix=${e.prefix}, url=${e.url}, title=${e.title}`),e.tokenize=null}return!0}}function A(e,t){return"markdown"===t&&null==e.messageMarkdownRegex?e.messageMarkdownRegex=new RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,p.yI)((0,p.se)((0,p.ry)(e.prefix)))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):"html"===t&&null==e.messageHtmlRegex?e.messageHtmlRegex=new RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,p.yI)((0,p.se)(e.prefix))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):null==e.messageRegex&&(e.messageRegex=new RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,p.yI)(e.prefix)}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g")),!0}f([(0,l.fF)({args:{0:"<message>",1:!1}})],Autolinks.prototype,"getAutolinks",1),f([(0,l.fF)({args:{0:"<message>",1:!1,2:e=>`autolinks=${null!=e?.autolinks}, timeout=${e?.timeout}`}})],Autolinks.prototype,"getLinkedIssuesAndPullRequests",1),f([(0,l.fF)({args:{0:"<text>",2:e=>e?.length,3:e=>e?.size,4:e=>e?.size}})],Autolinks.prototype,"linkify",1)},8178:(e,t,i)=>{i.d(t,{d:()=>BlameAnnotationProviderBase});var r=i(9496),n=i(7462),s=i(1062),o=i(5148),a=i(4241),l=i(2022),c=i(248),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor;class BlameAnnotationProviderBase extends l.HU{constructor(e,t,i,r){super(e,t,i),this.container=r,this.blame=this.container.git.getBlame(this.trackedDocument.uri,t.document),t.document.isDirty&&i.setForceDirtyStateChangeOnNextDocumentChange()}blame;hoverProviderDisposable;clear(){null!=this.hoverProviderDisposable&&(this.hoverProviderDisposable.dispose(),this.hoverProviderDisposable=void 0),super.clear()}async validate(){const e=await this.blame;return null!=e&&0!==e.lines.length}async getBlame(){const e=await this.blame;if(null!=e&&0!==e.lines.length)return e}getComputedHeatmap(e){const t=[];let i,r;for(const n of e.lines)r!==n.sha&&(r=n.sha,i=e.commits.get(n.sha),null!=i&&t.push(i.date));t.sort(((e,t)=>e.getTime()-t.getTime()));const n=new Date;n.setDate(n.getDate()-(o.D.get("heatmap.ageThreshold")||90));const s=n.getTime(),a=[],l=[];for(const e of t)e.getTime()<s?l.push(e):a.push(e);let h;h=a.length&&l.length?{hot:d(a),cold:d(l)}:d(t);const u=(e,t)=>Array.isArray(h)?h:t?h.hot.concat(h.cold):e.getTime()<s?h.cold:h.hot,p=(e,t)=>{const i=e.getTime();let r=0;for(let e=0;e<t.length&&(r=e,!(i>=t[e]));e++);return r};return{coldThresholdTimestamp:s,colors:(0,c.HM)(),computeRelativeAge:e=>p(e,u(e)),computeOpacity:e=>{const t=u(e,!0),i=p(e,t);return Math.max(.2,Math.round(100*(1-i/t.length))/100)}}}registerHoverProviders(e){const t=o.D.get("hovers");t.enabled&&t.annotations.enabled&&(e.details||e.changes)&&(this.hoverProviderDisposable=r.languages.registerHoverProvider({pattern:this.document.uri.fsPath},{provideHover:(t,i,r)=>this.provideHover(e,t,i,r)}))}async provideHover(e,t,i,a){if("line"!==o.D.get("hovers.annotations.over")&&0!==i.character)return;if(this.document.uri.toString()!==t.uri.toString())return;const l=await this.getBlame();if(null==l)return;const c=l.lines[i.line],h=l.commits.get(c.sha);if(null==h)return;const u=(await Promise.all([e.details?this.getDetailsHoverMessage(h,t):void 0,e.changes?(0,s.jw)(h,await n.YY.fromUri(t.uri),i.line,t):void 0])).filter((e=>Boolean(e)));return new r.Hover(u,t.validateRange(new r.Range(i.line,0,i.line,1073741824)))}async getDetailsHoverMessage(e,t){let i=this.editor.selection.active.line;const r=i+1;i=(e.lines.find((e=>e.line===r))??e.lines[0]).originalLine-1;const a=o.D.get("hovers");return(0,s.nN)(e,await n.YY.fromUri(t.uri),i,{autolinks:a.autolinks.enabled,dateFormat:o.D.get("defaultDateFormat"),format:a.detailsMarkdownFormat,pullRequests:{enabled:a.pullRequests.enabled}})}}function d(e){const t=[],i=Math.floor(e.length/2),r=e.length%2?e[i].getTime():(e[i-1].getTime()+e[i].getTime())/2;let n=(e[e.length-1].getTime()-r)/5;for(let e=5;e>0;e--)t.push(r+n*e);t.push(r);n=(r-e[0].getTime())/4;for(let e=1;e<=4;e++)t.push(r-n*e);return t}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&h(t,i,s)})([(0,a.cM)({args:!1})],BlameAnnotationProviderBase.prototype,"getComputedHeatmap",1)},623:(e,t,i)=>{i.d(t,{Iq:()=>m,fK:()=>FileAnnotationController});var r=i(9496),n=i(2540),s=i(5148),o=i(2061),a=i(2185),l=i(9796),c=i(3105),h=i(4336),u=i(3700),d=i(2509),p=i(2022);const m={gutterBlameAnnotation:r.window.createTextEditorDecorationType({rangeBehavior:r.DecorationRangeBehavior.ClosedOpen,textDecoration:"none"}),gutterBlameHighlight:void 0,changesLineChangedAnnotation:void 0,changesLineAddedAnnotation:void 0,changesLineDeletedAnnotation:void 0};class FileAnnotationController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,a.IH)(e.onReady)(this.onReady,this),s.D.onDidChange(this.onConfigurationChanged,this),r.window.onDidChangeActiveColorTheme(this.onThemeChanged,this)),this._toggleModes=new Map}_onDidToggleAnnotations=new r.EventEmitter;get onDidToggleAnnotations(){return this._onDidToggleAnnotations.event}_annotationsDisposable;_annotationProviders=new Map;_disposable;_editor;_keyboardScope=void 0;_toggleModes;_windowAnnotationType=void 0;dispose(){this.clearAll(),m.gutterBlameAnnotation?.dispose(),m.gutterBlameHighlight?.dispose(),m.changesLineChangedAnnotation?.dispose(),m.changesLineAddedAnnotation?.dispose(),m.changesLineDeletedAnnotation?.dispose(),this._annotationsDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){const t=null==e;let i;if(s.D.changed(e,["blame.highlight","changes.locations"])&&this.updateDecorations(!1),s.D.changed(e,"blame.toggleMode")&&(i=s.D.get("blame.toggleMode"),this._toggleModes.set(n.VP.Blame,i),t||i!==n.TF.File||this.clearAll()),s.D.changed(e,"changes.toggleMode")&&(i=s.D.get("changes.toggleMode"),this._toggleModes.set(n.VP.Changes,i),t||i!==n.TF.File||this.clearAll()),s.D.changed(e,"heatmap.toggleMode")&&(i=s.D.get("heatmap.toggleMode"),this._toggleModes.set(n.VP.Heatmap,i),t||i!==n.TF.File||this.clearAll()),!t&&s.D.changed(e,["blame","changes","heatmap","hovers","defaultDateFormat","defaultDateSource","defaultDateStyle","defaultGravatarsStyle"]))for(const e of this._annotationProviders.values())null!=e&&this.show(e.editor,e.annotationType??n.VP.Blame)}onThemeChanged(e){this.updateDecorations(!0)}async onActiveTextEditorChanged(e){if(null!=e&&!(0,d.PH)(e))return;if(this._editor=e,this.isInWindowToggle())return void await this.show(e,this._windowAnnotationType);const t=this.getProvider(e);null==t?((0,o.v)("gitlens:annotationStatus",void 0),this.detachKeyboardHook()):((0,o.v)("gitlens:annotationStatus",t.status),this.attachKeyboardHook())}onBlameStateChanged(e){if(e.blameable)return;const t=r.window.activeTextEditor;null!=t&&this.clear(t,"BlameabilityChanged")}onDirtyStateChanged(e){for(const[t,i]of this._annotationProviders)e.document.is(i.document)&&this.clearCore(t,"DocumentChanged")}onTextDocumentClosed(e){if(this.container.git.isTrackable(e.uri))for(const[t,i]of this._annotationProviders)i.document===e&&this.clearCore(t,"DocumentClosed")}onTextEditorViewColumnChanged(e){const t=this.getProvider(e.textEditor);if(null!=t)t.restore(e.textEditor);else{const t=(0,c.sE)(this._annotationProviders.values(),(t=>t.editor.document===e.textEditor.document));if(null==t)return;this.clearCore(t.correlationKey,"ColumnChanged")}}onVisibleTextEditorsChanged(e){for(const t of e)this.getProvider(t)?.restore(t)}isInWindowToggle(){return this.getToggleMode(this._windowAnnotationType)===n.TF.Window}getToggleMode(e){return null==e?n.TF.File:this._toggleModes.get(e)??n.TF.File}clear(e,t="User"){return this.isInWindowToggle()?this.clearAll():this.clearCore((0,p.mc)(e),t)}async clearAll(){this._windowAnnotationType=void 0;for(const[e]of this._annotationProviders)await this.clearCore(e,"Disposing")}async getAnnotationType(e){const t=this.getProvider(e);if(null==t)return;const i=await this.container.tracker.get(e.document);return null!=i&&i.isBlameable?t.annotationType:void 0}getProvider(e){if(null!=e?.document)return this._annotationProviders.get((0,p.mc)(e))}async show(e,t,i){if(this.getToggleMode(t)===n.TF.Window){let i=null==this._windowAnnotationType;const n=!i&&this._windowAnnotationType!==t;if(this._windowAnnotationType=t,n&&(await this.clearAll(),i=!0),i)for(const i of r.window.visibleTextEditors)i!==e&&this.show(i,t)}if(null==e)return!1;this._editor=e;if(!(await this.container.tracker.getOrAdd(e.document)).isBlameable)return!1;const s=this.getProvider(e);if(s?.annotationType===t)return await s.provideAnnotation(i),await s.selection(i?.selection),!0;return null!=await r.window.withProgress({location:r.ProgressLocation.Window},(async r=>{await(0,o.v)("gitlens:annotationStatus",p.jp.Computing);const n=this.showAnnotationsCore(s,e,t,i,r),a=await n;return e===this._editor&&await(0,o.v)("gitlens:annotationStatus",a?.status),n}))}async toggle(e,t,i,r){if(null!=e&&this._toggleModes.get(t)===n.TF.File){const i=await this.container.tracker.getOrAdd(e.document);if(t===n.VP.Changes&&!i.isTracked||!i.isBlameable)return!1}const s=this.getProvider(e);if(null==s)return this.show(e,t,i);const o=s.annotationType!==t||s.mustReopen(i);return!0===r&&!o||(this.isInWindowToggle()?await this.clearAll():await this.clearCore(s.correlationKey,"User"),!!o&&this.show(e,t,i))}async attachKeyboardHook(){null==this._keyboardScope&&(this._keyboardScope=await this.container.keyboard.beginScope({escape:{onDidPressKey:async()=>{const e=this._editor;null!=e&&await this.clear(e,"User")}}}))}async clearCore(e,t){const i=this._annotationProviders.get(e);null!=i&&(h.Yd.log(`${t}:`,`Clear annotations for ${e}`),this._annotationProviders.delete(e),i.dispose(),0!==this._annotationProviders.size&&e!==(0,p.mc)(this._editor)||(await(0,o.v)("gitlens:annotationStatus",void 0),await this.detachKeyboardHook()),0===this._annotationProviders.size&&(h.Yd.log("Remove all listener registrations for annotations"),this._annotationsDisposable?.dispose(),this._annotationsDisposable=void 0),this._onDidToggleAnnotations.fire())}async detachKeyboardHook(){null!=this._keyboardScope&&(await this._keyboardScope.dispose(),this._keyboardScope=void 0)}async showAnnotationsCore(e,t,s,o,a){if(null!=a){let e="annotations";switch(s){case n.VP.Blame:e="blame annotations";break;case n.VP.Changes:e="changes annotations";break;case n.VP.Heatmap:e="heatmap annotations"}a.report({message:`Computing ${e} for ${(0,u.EZ)(t.document.fileName)}`})}await this.attachKeyboardHook();const c=await this.container.tracker.getOrAdd(t.document);let d;switch(s){case n.VP.Blame:{const{GutterBlameAnnotationProvider:e}=await Promise.resolve().then(i.bind(i,4455));d=new e(t,c,this.container);break}case n.VP.Changes:{const{GutterChangesAnnotationProvider:e}=await Promise.resolve().then(i.bind(i,34));d=new e(t,c,this.container);break}case n.VP.Heatmap:{const{GutterHeatmapBlameAnnotationProvider:e}=await Promise.resolve().then(i.bind(i,79));d=new e(t,c,this.container);break}}if(null!=d&&await d.validate()){if(null!=e&&await this.clearCore(e.correlationKey,"User"),null==this._annotationsDisposable&&0===this._annotationProviders.size&&(h.Yd.log("Add listener registrations for annotations"),this._annotationsDisposable=r.Disposable.from(r.window.onDidChangeActiveTextEditor((0,l.Ds)(this.onActiveTextEditorChanged,50),this),r.window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged,this),r.window.onDidChangeVisibleTextEditors((0,l.Ds)(this.onVisibleTextEditorsChanged,50),this),r.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this))),this._annotationProviders.set(d.correlationKey,d),await d.provideAnnotation(o))return this._onDidToggleAnnotations.fire(),d;await this.clearCore(d.correlationKey,"Disposing")}}updateDecorations(e){const t=e?Object.entries(m):void 0;if(this.updateHighlightDecoration(),this.updateChangedDecorations(),!e)return;const i=new Map;for(const[e,r]of t){if(null==r)continue;r!==(m[e]??null)&&i.set(r,m[e]??null)}if(0!==i.size)for(const e of r.window.visibleTextEditors)this.getProvider(e)?.refresh(i)}updateChangedDecorations(){m.changesLineAddedAnnotation?.dispose(),m.changesLineChangedAnnotation?.dispose(),m.changesLineDeletedAnnotation?.dispose();const e=s.D.get("changes.locations");let t,i,o;switch(r.window.activeColorTheme.kind){case r.ColorThemeKind.Light:t=[72,152,93],i=[32,144,211],o=[229,20,0];break;case r.ColorThemeKind.HighContrast:default:t=[72,126,2],i=[27,129,168],o=[241,76,76]}m.changesLineAddedAnnotation=r.window.createTextEditorDecorationType({backgroundColor:e.includes(n.hp.Line)?`rgba(${t.join(",")},0.4)`:void 0,isWholeLine:!!e.includes(n.hp.Line)||void 0,gutterIconPath:e.includes(n.hp.Gutter)?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${t.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:e.includes(n.hp.Scrollbar)?new r.ThemeColor("editorOverviewRuler.addedForeground"):void 0}),m.changesLineChangedAnnotation=r.window.createTextEditorDecorationType({backgroundColor:e.includes(n.hp.Line)?`rgba(${i.join(",")},0.4)`:void 0,isWholeLine:!!e.includes(n.hp.Line)||void 0,gutterIconPath:e.includes(n.hp.Gutter)?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${i.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:e.includes(n.hp.Scrollbar)?new r.ThemeColor("editorOverviewRuler.modifiedForeground"):void 0}),m.changesLineDeletedAnnotation=r.window.createTextEditorDecorationType({gutterIconPath:e.includes(n.hp.Gutter)?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><polygon fill='rgb(${o.join(",")})' points='13,10 13,18 17,14'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:e.includes(n.hp.Scrollbar)?new r.ThemeColor("editorOverviewRuler.deletedForeground"):void 0})}updateHighlightDecoration(){m.gutterBlameHighlight?.dispose(),m.gutterBlameHighlight=void 0;const e=s.D.get("blame.highlight");if(e.enabled){const{locations:t}=e,i="#00bcf2",s=t.includes(n.y0.Gutter)?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='${i}' fill-opacity='0.6' x='7' y='0' width='3' height='18'/></svg>`)}`):void 0;m.gutterBlameHighlight=r.window.createTextEditorDecorationType({gutterIconPath:s,gutterIconSize:"contain",isWholeLine:!0,overviewRulerLane:r.OverviewRulerLane.Right,backgroundColor:t.includes(n.y0.Line)?new r.ThemeColor("gitlens.lineHighlightBackgroundColor"):void 0,overviewRulerColor:t.includes(n.y0.Scrollbar)?new r.ThemeColor("gitlens.lineHighlightOverviewRulerColor"):void 0})}}}},4455:(e,t,i)=>{i.d(t,{GutterBlameAnnotationProvider:()=>GutterBlameAnnotationProvider});var r=i(9496),n=i(2540),s=i(5255),o=i(9338),a=i(2800),l=i(5148),c=i(4241),h=i(3105),u=i(6004),d=i(6398),p=i(3620),m=i(248),g=i(8178),f=i(623),w=Object.defineProperty,v=Object.getOwnPropertyDescriptor,y=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?v(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&w(t,i,s),s};class GutterBlameAnnotationProvider extends g.d{constructor(e,t,i){super(n.VP.Blame,e,t,i)}clear(){if(super.clear(),null!=f.Iq.gutterBlameHighlight)try{this.editor.setDecorations(f.Iq.gutterBlameHighlight,[])}catch{}}async onProvideAnnotation(e,t){const i=(0,u.UH)();this.annotationContext=e;const n=await this.getBlame();if(null==n)return!1;const a=(0,d.k)(i),c=l.D.get("blame"),h=(0,p.Gg)(c.format).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));let g;o.i.has(c.format,"tips")&&(g=await this.container.git.getBranchesAndTagsTipsFn(n.repoPath));const w={dateFormat:null===c.dateFormat?l.D.get("defaultDateFormat"):c.dateFormat,getBranchAndTagTips:g,tokenOptions:h},v=c.avatars,y=l.D.get("defaultGravatarsStyle"),b=c.separateLines,C=(0,m.Vz)(b,c.heatmap,c.avatars,c.format,w),A=[],P=new Map,S=v?new Map:void 0;let R,D,k,_,T=!1;c.heatmap.enabled&&(_=this.getComputedHeatmap(n));for(const e of n.lines){const t=e.line-1;if(k!==e.sha)T=!1,k=e.sha,R=n.commits.get(e.sha),null!=R&&(D=P.get(e.sha),null==D?(D=(0,m.U5)(R,c.format,w,C),null!=_&&(0,m.iF)(D,R.date,_),D.range=new r.Range(t,0,t,0),A.push(D),v&&null!=R.author.email&&await this.applyAvatarDecoration(R,D,y,S),P.set(e.sha,D)):(D={...D,range:new r.Range(t,0,t,0)},A.push(D)));else{if(null==D)continue;D={...D},c.compact&&!T&&(D.renderOptions={before:{...D.renderOptions.before,contentText:s.NE.Space.repeat((0,p.dz)(D.renderOptions.before.contentText))}},b&&(D.renderOptions.before.textDecoration="none;box-sizing: border-box"+(v?";padding: 0 0 0 18px":"")),T=!0),D.range=new r.Range(t,0,t,0),A.push(D)}}return a?.restart({suffix:" to compute gutter blame annotations"}),A.length&&(this.setDecorations([{decorationType:f.Iq.gutterBlameAnnotation,rangesOrOptions:A}]),a?.stop({suffix:" to apply all gutter blame annotations"})),this.registerHoverProviders(l.D.get("hovers.annotations")),!0}async selection(e,t){if(!1===e||null==f.Iq.gutterBlameHighlight)return;if(null==t&&(t=await this.blame,!t?.lines.length))return;let i;if(null!=e?.sha)i=e.sha;else if(null!=e?.line){if(e.line>=0){const r=t.lines[e.line];i=r?.sha}}else i=(0,h.Ps)(t.commits.values())?.sha;if(!i)return void this.editor.setDecorations(f.Iq.gutterBlameHighlight,[]);const n=(0,a.DZ)(t.lines,(e=>e.sha===i?this.editor.document.validateRange(new r.Range(e.line-1,0,e.line-1,1073741824)):void 0));this.editor.setDecorations(f.Iq.gutterBlameHighlight,n)}async applyAvatarDecoration(e,t,i,r){let n=r.get(e.author.email??"");if(null==n){const t=(await e.getAvatarUri({defaultStyle:i,size:16})).toString(!0);n={contentText:"",height:"16px",width:"16px",textDecoration:`none;position:absolute;top:1px;left:5px;background:url(${encodeURI(t)});background-size:16px 16px;margin-left: 0 !important`},r.set(e.author.email??"",n)}t.renderOptions.after=n}}y([(0,c.cM)()],GutterBlameAnnotationProvider.prototype,"onProvideAnnotation",1),y([(0,c.cM)({args:!1})],GutterBlameAnnotationProvider.prototype,"selection",1)},34:(e,t,i)=>{i.d(t,{GutterChangesAnnotationProvider:()=>GutterChangesAnnotationProvider});var r=i(9496),n=i(2540),s=i(1062),o=i(5148),a=i(4241),l=i(6004),c=i(6398),h=i(2022),u=i(623),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor;const m=2**30;class GutterChangesAnnotationProvider extends h.HU{constructor(e,t,i){super(n.VP.Changes,e,t),this.container=i}state;hoverProviderDisposable;mustReopen(e){return this.annotationContext?.sha!==e?.sha||this.annotationContext?.only!==e?.only}clear(){this.state=void 0,null!=this.hoverProviderDisposable&&(this.hoverProviderDisposable.dispose(),this.hoverProviderDisposable=void 0),super.clear()}selection(e){return Promise.resolve()}validate(){return Promise.resolve(!0)}async onProvideAnnotation(e){const t=(0,l.UH)();this.mustReopen(e)&&this.clear(),this.annotationContext=e;let i,n=this.trackedDocument.uri.sha,s=null!=e?.sha&&e.sha!==n?`${e.sha}^`:void 0,o=null==n&&null==s;if(o){let e=await this.container.git.getOldestUnpushedRefForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri);if(null!=e)e=`${e}^`,i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:e}),null!=i?null!=s?s=e:(n=e,s=""):o=!1;else{const e=await this.container.git.getStatusForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri),t=e?.getPseudoCommits(this.container,await this.container.git.getCurrentUser(this.trackedDocument.uri.repoPath));t?.length?(i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri),n="HEAD"):this.trackedDocument.dirty?n="HEAD":o=!1}}if(!o){if(i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:s??n}),null==i)return!1;null!=s||(n=`${i.ref}^`),s=i.ref}const a=(await Promise.all(null==s&&this.editor.document.isDirty?[this.container.git.getDiffForFileContents(this.trackedDocument.uri,n,this.editor.document.getText()),this.container.git.getDiffForFile(this.trackedDocument.uri,n,s)]:[this.container.git.getDiffForFile(this.trackedDocument.uri,n,s)])).filter((e=>Boolean(e)));if(!a?.length)return!1;const h=(0,c.k)(t),d=new Map,p=null!=e?.sha&&e?.only?await this.container.git.getBlame(this.trackedDocument.uri,this.editor?.document):void 0;let g;for(const t of a)for(const i of t.hunks){if(null!=p){let t=!0;const r=e.sha;for(let e=i.current.position.start-1;e<i.current.position.end;e++)p.lines[e]?.sha===r&&(t=!1);if(t)continue}let t=Math.max(i.current.position.start-2,-1),n=-1;for(const e of i.lines){if(n++,t++,"unchanged"===e.current?.state)continue;const s=this.editor.document.validateRange(new r.Range(new r.Position(t,0),new r.Position(t,m)));let o;if(null==g&&(g=new r.Selection(s.start,s.end)),null==e.current){const r=i.lines[n-1];if(null==e.previous||null!=r&&null==r.current){t--;continue}if(!(i.previous.count>i.current.count)){t--;continue}o="removed"}else if("added"===e.current?.state)o="removed"===e.previous?.state?"changed":"added";else if("removed"===e?.current.state){if(!(i.previous.count>i.current.count)){t--;continue}o="removed"}else o="changed";let a=d.get(o);null==a?(a={decorationType:"added"===o?u.Iq.changesLineAddedAnnotation:"removed"===o?u.Iq.changesLineDeletedAnnotation:u.Iq.changesLineChangedAnnotation,rangesOrOptions:[{range:s}]},d.set(o,a)):a.rangesOrOptions.push({range:s})}}return h?.restart({suffix:" to compute recent changes annotations"}),d.size&&(this.setDecorations([...d.values()]),h?.stop({suffix:" to apply all recent changes annotations"}),null!=g&&!1!==e?.selection&&(this.editor.selection=g,this.editor.revealRange(g,r.TextEditorRevealType.InCenterIfOutsideViewport))),this.state={commit:i,diffs:a},this.registerHoverProvider(),!0}registerHoverProvider(){const e=o.D.get("hovers");e.enabled&&e.annotations.enabled&&(this.hoverProviderDisposable=r.languages.registerHoverProvider({pattern:this.document.uri.fsPath},{provideHover:(e,t,i)=>this.provideHover(e,t,i)}))}async provideHover(e,t,i){if(null==this.state)return;if("line"!==o.D.get("hovers.annotations.over")&&0!==t.character)return;const{commit:n,diffs:a}=this.state;for(const i of a)for(const o of i.hunks){const i="changed"===o.state&&o.previous.count>o.current.count;if(t.line>=o.current.position.start-1&&t.line<=o.current.position.end-(i?0:1)){const a=await(0,s.yq)(n,this.trackedDocument.uri,t.line,o);if(null==a)return;return new r.Hover(a,e.validateRange(new r.Range(o.current.position.start-1,0,o.current.position.end-(i?0:1),m)))}}}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&d(t,i,s)})([(0,a.cM)()],GutterChangesAnnotationProvider.prototype,"onProvideAnnotation",1)},79:(e,t,i)=>{i.d(t,{GutterHeatmapBlameAnnotationProvider:()=>GutterHeatmapBlameAnnotationProvider});var r=i(9496),n=i(2540),s=i(4241),o=i(6004),a=i(6398),l=i(248),c=i(8178),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor;class GutterHeatmapBlameAnnotationProvider extends c.d{constructor(e,t,i){super(n.VP.Heatmap,e,t,i)}async onProvideAnnotation(e,t){const i=(0,o.UH)();this.annotationContext=e;const n=await this.getBlame();if(null==n)return!1;const s=(0,a.k)(i),c=new Map,h=this.getComputedHeatmap(n);let u;for(const e of n.lines){const t=e.line-1;u=n.commits.get(e.sha),null!=u&&(0,l.Lx)(u.date,h,new r.Range(t,0,t,0),c)}return s?.restart({suffix:" to compute heatmap annotations"}),c.size&&(this.setDecorations([...c.values()]),s?.stop({suffix:" to apply all heatmap annotations"})),!0}selection(e){return Promise.resolve()}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&h(t,i,s)})([(0,s.cM)()],GutterHeatmapBlameAnnotationProvider.prototype,"onProvideAnnotation",1)},8294:(e,t,i)=>{i.d(t,{AR:()=>ActionRunners,vj:()=>u});var r=i(9496),n=i(5255),s=i(9529),o=i(5148),a=i(2061),l=i(3620),c=i(2509);const h=["createPullRequest","openPullRequest","hover.commands"];const u="Built In";class ActionRunnerQuickPickItem{constructor(e,t){this.runner=e,this._label="string"==typeof e.label?e.label:e.label(t)}_label;get label(){return this._label}get detail(){return this.runner.name}}class NoActionRunnersQuickPickItem{runner;get label(){return"No actions were found"}get detail(){}}let d=0;class RegisteredActionRunner{constructor(e,t,i){this.type=e,this.runner=t,this.unregister=i,this.id=(1073741824===d?d=1:d++,d)}id;dispose(){this.unregister()}get name(){return this.runner.name}get label(){return this.runner.label}get order(){switch(this.type){case 0:return 0;case 1:return 1;case 2:return this.partnerId?1:2;case 3:return 3;default:return 100}}get partnerId(){return this.runner.partnerId}run(e){return this.runner.run(e)}}class ActionRunners{constructor(e){this.container=e;const t=[o.D.onDidChange((e=>{o.D.changed(e,"partners")&&this._updateAllContextKeys()}))];for(const e of h)t.push((0,s.xR)(`${n.Gh.ActionPrefix}${e}`,((e,t)=>this.run(e,t))));this._disposable=r.Disposable.from(...t)}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_actionRunners=new Map;_disposable;dispose(){this._disposable.dispose();for(const e of this._actionRunners.values())for(const t of e)t.dispose();this._actionRunners.clear()}count(e){return this.get(e)?.length??0}get(e){return t=o.D.get("partners"),null==(i=this._actionRunners.get(e))||0===i.length?void 0:null==t?i:i.filter((e=>null==e.partnerId||null!=e.partnerId&&!1!==t[e.partnerId]?.enabled));var t,i}has(e){return this.count(e)>0}register(e,t,i=2){let r=this._actionRunners.get(e);null==r&&(r=[],this._actionRunners.set(e,r));const n=e=>{this._updateContextKeys(e),this._onDidChange.fire(e)},s=this._actionRunners,o=new RegisteredActionRunner(i,t,(function(){if(1===r.length)s.delete(e),n(e);else{const e=r.indexOf(this);-1!==e&&r.splice(e,1)}}));return r.push(o),n(e),{dispose:()=>o.dispose()}}registerBuiltIn(e,t){return this.register(e,{...t,partnerId:void 0,name:u},0)}registerBuiltInPartner(e,t,i){return this.register(t,{...i,partnerId:e},1)}registerBuiltInPartnerInstaller(e,t,i){return this.register(t,{...i,partnerId:e,name:`${i.name} (Not Installed)`},3)}async run(e,t){let i,n=this.get(e.type);if(null!=n&&0!==n.length&&(null!=t&&(n=n.filter((e=>e.id===t))),0!==n.length)){if(n.length>1||n.every((e=>0!==e.type))){const t=n.sort(((e,t)=>e.order-t.order||(0,l.dm)(e.name,t.name))).map((t=>new ActionRunnerQuickPickItem(t,e)));0===t.length&&t.push(new NoActionRunnersQuickPickItem);const s=r.window.createQuickPick();s.ignoreFocusOut=(0,c.hE)();const o=[];try{const r=await new Promise((i=>{let r,n;switch(o.push(s.onDidHide((()=>i(void 0))),s.onDidAccept((()=>{0!==s.activeItems.length&&i(s.activeItems[0])}))),e.type){case"createPullRequest":r="Create Pull Request",n="Choose how to create a pull request";break;case"openPullRequest":r="Open Pull Request",n="Choose how to open the pull request";break;case"hover.commands":r="Need Help or Want to Collaborate?",n="Choose what you would like to do"}s.title=r,s.placeholder=n,s.matchOnDetail=!0,s.items=t,s.show()}));if(null==r)return;i=r.runner}finally{s.dispose(),o.forEach((e=>{e.dispose()}))}}else[i]=n;await(i?.run(e))}}async _updateContextKeys(e){await(0,a.v)(`gitlens:action:${e}`,this.count(e))}async _updateAllContextKeys(){for(const e of h)await this._updateContextKeys(e)}}},8388:(e,t,i)=>{i.d(t,{E3:()=>$,GV:()=>T,TU:()=>E,Wr:()=>x,cL:()=>w,oP:()=>P,x4:()=>S});var r=i(9496),n=i(4290),s=i(2540),o=i(963),a=i(2075),l=i(5148),c=i(2061),h=i(9796),u=i(3105),d=i(3620);const p=2**30;let m;const g=new Map,f=new r.EventEmitter;f.event((0,h.Ds)((()=>{const e=null!=m?[...(0,u.DZ)(m,(([e,t])=>null!=t.uri?[e,{uri:t.uri.toString(),timestamp:t.timestamp}]:void 0))]:void 0;o.W.instance.storage.store("avatars",e)}),1e3));const w=f.event,v="00000000000000000000000000000000",y=new Map,b=6e4,C=864e5,A=[6048e5,b,3e5,6e5,36e5,C,6048e5];function P(e,t,i){return R(e,t,i)}function S(e,t){return R(e,void 0,{...t,cached:!0})}function R(e,t,i){k(m);const s=2*(i?.size??16);if(!e){const e=D(`${v}:${s}`,void 0,s,v,i?.defaultStyle);return e.uri??e.fallback}const a=(0,n.FB)(e.trim().toLowerCase()),l=`${a}:${s}`,h=D(l,e,s,a,i?.defaultStyle);if(null!=h.uri)return h.uri;if(!i?.cached&&null!=t&&(0,c.fw)("gitlens:hasConnectedRemotes")){let i=g.get(l);return null==i&&function(e){return Date.now()>=e.timestamp+A[Math.min(e.retries,A.length-1)]}(h)&&(i=async function(e,t,i,s,{size:a=16}={}){k(m);try{let t;if("string"!=typeof s){const e=await o.W.instance.git.getBestRemoteWithRichProvider(s.repoPath);t=await(e?.provider.getAccountForCommit(s.ref,{avatarSize:a}))}return null==t?.avatarUrl?(e.uri=void 0,e.timestamp=p,void(e.retries=0)):(e.uri=r.Uri.parse(t.avatarUrl),e.timestamp=Date.now(),e.retries=0,null!=t.email&&(0,d.qq)(i,t.email)&&m.set(`${(0,n.FB)(t.email.trim().toLowerCase())}:${a}`,{...e}),f.fire({email:i}),e.uri)}catch{return e.uri=void 0,e.timestamp=Date.now(),void e.retries++}}(h,0,e,t,{size:s}).then((e=>e??h.uri??h.fallback)),g.set(l,i.finally((()=>g.delete(l))))),i??h.fallback}return i?.cached?h.uri:h.uri??h.fallback}function D(e,t,i,r,n){let s=m.get(e);return null==s?(s={uri:null!=t&&0!==t.length?F(t,i):void 0,fallback:_(r,i,n),timestamp:0,retries:0},m.set(e,s)):null==s.fallback&&(s.fallback=_(r,i,n)),s}function k(e){if(null==e){const e=o.W.instance.storage.get("avatars")?.map((([e,t])=>[e,{uri:r.Uri.parse(t.uri),timestamp:t.timestamp,retries:0}]));m=new Map(e)}}function _(e,t,i){return r.Uri.parse(`https://www.gravatar.com/avatar/${e}?s=${t}&d=${i??function(){null==I&&(I=l.D.get("defaultGravatarsStyle",void 0,s.il.Robot));return I}()}`)}function T(e,t,i){return _((0,n.FB)(e.trim().toLowerCase()),t,i)}function F(e,t=16){const i=(0,a.at)(e);if(null!=i&&(0,d.qq)(i.authority,"github.com"))return r.Uri.parse(`https://avatars.githubusercontent.com/${i.userId?`u/${i.userId}`:i.login}?size=${t}`)}const O=new Map([["online","#28ca42"],["away","#cecece"],["busy","#ca5628"],["dnd","#ca5628"],["offline","#cecece"]]);function E(e){let t=y.get(e);if(null==t){const i=(0,d.US)(`<?xml version="1.0" encoding="utf-8"?>\n<svg xmlns="http://www.w3.org/2000/svg" width="4" height="16" viewBox="0 0 4 16">\n\t<circle cx="2" cy="14" r="2" fill="${O.get(e)}"/>\n</svg>`);t=encodeURI(`data:image/svg+xml;base64,${i}`),y.set(e,t)}return t}function $(e){switch(e){case"all":o.W.instance.storage.delete("avatars"),m?.clear(),g.clear();break;case"failed":for(const e of m?.values()??[])null==e.uri&&(e.timestamp=0,e.retries=0);break;case"fallback":for(const e of m?.values()??[])e.fallback=void 0}}let I;function x(e){I=e,$("fallback")}},5183:(e,t,i)=>{i.d(t,{GitCodeLensProvider:()=>GitCodeLensProvider});var r=i(9496),n=i(2540),s=i(5255),o=i(6503),a=i(9529),l=i(5148),c=i(9796),h=i(3105),u=i(4336),d=i(3620),p=i(2509);class GitRecentChangeCodeLens extends r.CodeLens{constructor(e,t,i,r,n,s,o,a,l,c){super(a,c),this.languageId=e,this.symbol=t,this.uri=i,this.dateFormat=r,this.blame=n,this.blameRange=s,this.isFullRange=o,this.desiredCommand=l}getBlame(){return this.blame?.()}}class GitAuthorsCodeLens extends r.CodeLens{constructor(e,t,i,r,n,s,o,a){super(o),this.languageId=e,this.symbol=t,this.uri=i,this.blame=r,this.blameRange=n,this.isFullRange=s,this.desiredCommand=a}getBlame(){return this.blame()}}class GitCodeLensProvider{constructor(e){this.container=e}static selector=[{scheme:s.sN.File},{scheme:s.sN.Git},{scheme:s.sN.GitLens},{scheme:s.sN.PRs},{scheme:s.sN.Vsls},{scheme:s.sN.VslsScc},{scheme:s.sN.Virtual},{scheme:s.sN.GitHub}];_onDidChangeCodeLenses=new r.EventEmitter;get onDidChangeCodeLenses(){return this._onDidChangeCodeLenses.event}reset(e){this._onDidChangeCodeLenses.fire()}async provideCodeLenses(e,t){if(e.isDirty&&(0,p.pt)(e.uri))return[];const i=await this.container.tracker.getOrAdd(e);if(!i.isBlameable)return[];let s=!1;if(e.isDirty)if(i.isDirtyIdle){const t=l.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.lineCount>t&&(s=!0)}else s=!0;const o=l.D.get("codeLens",e);let h=o.scopesByLanguage?.find((t=>t.language?.toLowerCase()===e.languageId));null==h&&(h={language:e.languageId}),null==h.scopes&&(h.scopes=o.scopes),null==h.symbolScopes&&(h.symbolScopes=o.symbolScopes),h.symbolScopes=null!=h.symbolScopes?h.symbolScopes=h.symbolScopes.map((e=>e.toLowerCase())):[];const d=[],m=i.uri;let g,f;if(s){if(1!==h.scopes.length||!h.scopes.includes(n.Uy.Document)){let t;if([t,f]=await Promise.all([this.container.git.isTracked(m),(0,a.dO)("vscode.executeDocumentSymbolProvider",e.uri)]),!t)return d}}else{if(t.isCancellationRequested)return d;if(1===h.scopes.length&&h.scopes.includes(n.Uy.Document)?g=await this.container.git.getBlame(m,e):[g,f]=await Promise.all([this.container.git.getBlame(m,e),(0,a.dO)("vscode.executeDocumentSymbolProvider",e.uri)]),null==g||0===g?.lines.length)return d}if(t.isCancellationRequested)return d;const w=(0,c.IH)((()=>e.validateRange(new r.Range(0,0,1e6,1e6)))),v=s?{command:void 0,title:this.getDirtyTitle(o)}:void 0;if(void 0!==f){u.Yd.log("GitCodeLensProvider.provideCodeLenses:",`${f.length} symbol(s) found`);for(const t of f)this.provideCodeLens(d,e,t,h,w,g,m,o,s,v)}if((h.scopes.includes(n.Uy.Document)||h.symbolScopes.includes("file"))&&!h.symbolScopes.includes("!file")&&null==d.find((e=>0===e.range.start.line&&0===e.range.end.line))){const t=w();let i;if(s||o.recentChange.enabled){s||(i=(0,c.IH)((()=>this.container.git.getBlameRange(g,m,t))));const n=new r.SymbolInformation(m.fileName,r.SymbolKind.File,"",new r.Location(m.documentUri(),new r.Range(0,0,0,t.start.character)));d.push(new GitRecentChangeCodeLens(e.languageId,n,m,o.dateFormat,i,t,!0,k(n),o.recentChange.command,v))}if(!s&&o.authors.enabled){void 0===i&&(i=(0,c.IH)((()=>this.container.git.getBlameRange(g,m,t))));const n=new r.SymbolInformation(m.fileName,r.SymbolKind.File,"",new r.Location(m.documentUri(),new r.Range(0,1,0,t.start.character)));d.push(new GitAuthorsCodeLens(e.languageId,n,m,i,t,!0,k(n),o.authors.command))}}return d}getValidateSymbolRange(e,t,i,s){let o,a=!1;const l=r.SymbolKind[e.kind].toLowerCase();switch(e.kind){case r.SymbolKind.File:(t.scopes.includes(n.Uy.Containers)||t.symbolScopes.includes(l))&&(a=!t.symbolScopes.includes(`!${l}`)),a&&(o=i());break;case r.SymbolKind.Package:(t.scopes.includes(n.Uy.Containers)||t.symbolScopes.includes(l))&&(a=!t.symbolScopes.includes(`!${l}`)),a&&(o=k(e),0===o.start.line&&0===o.end.line&&(o=i()));break;case r.SymbolKind.Class:case r.SymbolKind.Interface:case r.SymbolKind.Module:case r.SymbolKind.Namespace:case r.SymbolKind.Struct:(t.scopes.includes(n.Uy.Containers)||t.symbolScopes.includes(l))&&(o=k(e),a=!t.symbolScopes.includes(`!${l}`)&&(s||!o.isSingleLine));break;case r.SymbolKind.Constructor:case r.SymbolKind.Enum:case r.SymbolKind.Function:case r.SymbolKind.Method:case r.SymbolKind.Property:(t.scopes.includes(n.Uy.Blocks)||t.symbolScopes.includes(l))&&(o=k(e),a=!t.symbolScopes.includes(`!${l}`)&&(s||!o.isSingleLine));break;case r.SymbolKind.String:(t.symbolScopes.includes(l)||"markdown"===t.language&&t.scopes.includes(n.Uy.Containers))&&(o=k(e),a=!t.symbolScopes.includes(`!${l}`)&&(s||!o.isSingleLine));break;default:t.symbolScopes.includes(l)&&(o=k(e),a=!t.symbolScopes.includes(`!${l}`)&&(s||!o.isSingleLine))}return a?o??k(e):void 0}provideCodeLens(e,t,i,n,s,o,a,l,h,u){try{const d=this.getValidateSymbolRange(i,n,s,l.includeSingleLineSymbols);if(void 0===d)return;const p=t.lineAt(k(i).start);if(e.length&&e[e.length-1].range.start.line===p.lineNumber)return;let m,g=0;if((h||l.recentChange.enabled)&&(h||(m=(0,c.IH)((()=>this.container.git.getBlameRange(o,a,d)))),e.push(new GitRecentChangeCodeLens(t.languageId,i,a,l.dateFormat,m,d,!1,p.range.with(new r.Position(p.range.start.line,g)),l.recentChange.command,u)),g++),l.authors.enabled){let n=!d.isSingleLine;if(!n&&"csharp"===t.languageId)switch(i.kind){case r.SymbolKind.File:break;case r.SymbolKind.Package:case r.SymbolKind.Module:case r.SymbolKind.Namespace:case r.SymbolKind.Class:case r.SymbolKind.Interface:case r.SymbolKind.Constructor:case r.SymbolKind.Method:case r.SymbolKind.Function:case r.SymbolKind.Enum:n=!0}n&&!h&&(void 0===m&&(m=(0,c.IH)((()=>this.container.git.getBlameRange(o,a,d)))),e.push(new GitAuthorsCodeLens(t.languageId,i,a,m,d,!1,p.range.with(new r.Position(p.range.start.line,g)),l.authors.command)))}}finally{if(_(i))for(const r of i.children)this.provideCodeLens(e,t,r,n,s,o,a,l,h,u)}}resolveCodeLens(e,t){return e instanceof GitRecentChangeCodeLens?this.resolveGitRecentChangeCodeLens(e,t):e instanceof GitAuthorsCodeLens?this.resolveGitAuthorsCodeLens(e,t):Promise.reject(void 0)}resolveGitRecentChangeCodeLens(e,t){const i=e.getBlame();if(null==i)return D("Unknown, (Blame failed)",e);const s=(0,h.Ps)(i.commits.values());if(null==s)return D("Unknown, (Blame failed)",e);let o=`${s.author.name}, ${null==e.dateFormat?s.formattedDate:s.formatDate(e.dateFormat)}`;if(l.D.get("debug")&&(o+=` [${e.languageId}: ${r.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Commit (${s.shortSha})]`),!1===e.desiredCommand)return D(o,e);switch(e.desiredCommand){case n.N4.CopyRemoteCommitUrl:return g(o,e,s,!0);case n.N4.CopyRemoteFileUrl:return f(o,e,s,!0);case n.N4.DiffWithPrevious:return m(o,e,s);case n.N4.OpenCommitOnRemote:return g(o,e,s);case n.N4.OpenFileOnRemote:return f(o,e,s);case n.N4.RevealCommitInView:return w(o,e,s);case n.N4.ShowCommitsInView:return v(o,e,i,s);case n.N4.ShowQuickCommitDetails:return y(o,e,s);case n.N4.ShowQuickCommitFileDetails:return b(o,e,s);case n.N4.ShowQuickCurrentBranchHistory:return C(o,e);case n.N4.ShowQuickFileHistory:return A(o,e);case n.N4.ToggleFileBlame:return P(o,e);case n.N4.ToggleFileChanges:return S(o,e,s);case n.N4.ToggleFileChangesOnly:return S(o,e,s,!0);case n.N4.ToggleFileHeatmap:return R(o,e);default:return e}}resolveGitAuthorsCodeLens(e,t){const i=e.getBlame();if(null==i)return D("? authors (Blame failed)",e);const s=i.authors.size,o=(0,h.Ps)(i.authors.values())?.name??"Unknown";let a=`${(0,d._6)("author",s,{zero:"?"})} (${o}${s>1?" and others":""})`;if(l.D.get("debug")&&(a+=` [${e.languageId}: ${r.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Authors (${(0,h.v_)((0,h.UI)(i.authors.values(),(e=>e.name)),", ")})]`),!1===e.desiredCommand)return D(a,e);const c=(0,h.sE)(i.commits.values(),(e=>e.author.name===o))??(0,h.Ps)(i.commits.values());if(null==c)return D(a,e);switch(e.desiredCommand){case n.N4.CopyRemoteCommitUrl:return g(a,e,c,!0);case n.N4.CopyRemoteFileUrl:return f(a,e,c,!0);case n.N4.DiffWithPrevious:return m(a,e,c);case n.N4.OpenCommitOnRemote:return g(a,e,c);case n.N4.OpenFileOnRemote:return f(a,e,c);case n.N4.RevealCommitInView:return w(a,e,c);case n.N4.ShowCommitsInView:return v(a,e,i);case n.N4.ShowQuickCommitDetails:return y(a,e,c);case n.N4.ShowQuickCommitFileDetails:return b(a,e,c);case n.N4.ShowQuickCurrentBranchHistory:return C(a,e);case n.N4.ShowQuickFileHistory:return A(a,e);case n.N4.ToggleFileBlame:return P(a,e);case n.N4.ToggleFileChanges:return S(a,e,c);case n.N4.ToggleFileChangesOnly:return S(a,e,c,!0);case n.N4.ToggleFileHeatmap:return R(a,e);default:return e}}getDirtyTitle(e){return e.recentChange.enabled&&e.authors.enabled?l.D.get("strings.codeLens.unsavedChanges.recentChangeAndAuthors"):e.recentChange.enabled?l.D.get("strings.codeLens.unsavedChanges.recentChangeOnly"):l.D.get("strings.codeLens.unsavedChanges.authorsOnly")}}function m(e,t,i){return t.command=(0,a._N)({title:e,command:s.Gh.DiffWithPrevious,arguments:[void 0,{commit:i,uri:t.uri.toFileUri()}]}),t}function g(e,t,i,r=!1){return t.command=(0,a._N)({title:e,command:s.Gh.OpenOnRemote,arguments:[{resource:{type:o.J.Commit,sha:i.sha},repoPath:i.repoPath,clipboard:r}]}),t}function f(e,t,i,r=!1){return t.command=(0,a._N)({title:e,command:s.Gh.OpenOnRemote,arguments:[{resource:{type:o.J.Revision,fileName:i.file?.path??"",sha:i.sha},repoPath:i.repoPath,clipboard:r}]}),t}function w(e,t,i){return t.command=(0,a._N)({title:e,command:i?.isUncommitted?"":n.N4.RevealCommitInView,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}function v(e,t,i,r){let n;return n=void 0===r?[...(0,h.DZ)(i.commits.values(),(e=>e.isUncommitted?void 0:e.ref))]:[r.ref],t.command=(0,a._N)({title:e,command:0===n.length?"":s.Gh.ShowCommitsInView,arguments:[{repoPath:i.repoPath,refs:n}]}),t}function y(e,t,i){return t.command=(0,a._N)({title:e,command:i?.isUncommitted?"":n.N4.ShowQuickCommitDetails,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}function b(e,t,i){return t.command=(0,a._N)({title:e,command:i?.isUncommitted?"":n.N4.ShowQuickCommitFileDetails,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}function C(e,t){return t.command=(0,a._N)({title:e,command:n.N4.ShowQuickCurrentBranchHistory,arguments:[t.uri.toFileUri()]}),t}function A(e,t){return t.command=(0,a._N)({title:e,command:n.N4.ShowQuickFileHistory,arguments:[t.uri.toFileUri(),{range:t.isFullRange?void 0:t.blameRange}]}),t}function P(e,t){return t.command=(0,a._N)({title:e,command:s.Gh.ToggleFileBlame,arguments:[t.uri.toFileUri()]}),t}function S(e,t,i,r){return t.command=(0,a._N)({title:e,command:s.Gh.ToggleFileChanges,arguments:[t.uri.toFileUri(),{type:n.VP.Changes,context:{sha:i.sha,only:r,selection:!1}}]}),t}function R(e,t){return t.command=(0,a._N)({title:e,command:s.Gh.ToggleFileHeatmap,arguments:[t.uri.toFileUri()]}),t}function D(e,t){return t.command={title:e,command:""},t}function k(e){return _(e)?e.range:e.location.range}function _(e){return(0,c.is)(e,"children")}},2421:(e,t,i)=>{i.d(t,{tM:()=>Ii,V:()=>ge,_f:()=>Wt,DA:()=>Jt,CE:()=>sr,oc:()=>wr,MZ:()=>br});var r=i(5255),n=i(9311),s=i(9529),o=i(7139),a=Object.defineProperty,l=Object.getOwnPropertyDescriptor;let c=class extends o.mY{constructor(e){super(r.Gh.AddAuthors),this.container=e}execute(e){let t;return null!=e?.rootUri&&(t=this.container.git.getRepository(e.rootUri)),(0,n.m)({command:"co-authors",state:{repo:t,contributors:void 0}})}};c=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?l(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&a(t,i,s),s})([(0,s.WD)()],c);var h=i(7462),u=i(7925),d=i(4336),p=i(3700),m=i(2509),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor;let w=class extends o.pu{constructor(e){super([r.Gh.BrowseRepoAtRevision,r.Gh.BrowseRepoAtRevisionInNewWindow,r.Gh.BrowseRepoBeforeRevision,r.Gh.BrowseRepoBeforeRevisionInNewWindow]),this.container=e}preExecute(e,t){switch(e.command){case r.Gh.BrowseRepoAtRevisionInNewWindow:t={...t,before:!1,openInNewWindow:!0};break;case r.Gh.BrowseRepoBeforeRevision:t={...t,before:!0,openInNewWindow:!1};break;case r.Gh.BrowseRepoBeforeRevisionInNewWindow:t={...t,before:!0,openInNewWindow:!0}}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){i={...i};try{if(null==i.uri){if(null==(t=(0,o.SX)(t,e)))return}else t=i.uri;let r=await h.YY.fromUri(t);if(null==r.sha)return;const n=i?.before?await this.container.git.resolveReference(r.repoPath,`${r.sha}^`):r.sha;t=this.container.git.getRevisionUri(n,r.repoPath,r.repoPath),r=h.YY.fromRevisionUri(t),(0,m.ic)(t,{location:i.openInNewWindow?m.Tc.NewWindow:m.Tc.AddToWorkspace,name:`${(0,p.EZ)(r.repoPath)} @ ${r.shortSha}`}),i.openInNewWindow||(0,s.dO)("workbench.files.action.focusFilesExplorer")}catch(e){d.Yd.error(e,"BrowseRepoAtRevisionCommand"),(0,u.W8)("Unable to open the repository at the specified revision")}}};w=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&g(t,i,s),s})([(0,s.WD)()],w);var v=i(9496),y=i(635),b=i(4298),C=Object.defineProperty,A=Object.getOwnPropertyDescriptor;let P=class extends o.mY{constructor(e){super(r.Gh.CloseUnchangedFiles),this.container=e}async execute(e){e={...e};try{if(null==e.uris){const t=await(0,y.vJ)("Close All Unchanged Files");if(null==t)return;const i=await this.container.git.getStatusForRepo(t.uri);if(null==i)return void v.window.showWarningMessage("Unable to close unchanged files");e.uris=i.files.map((e=>e.uri))}const t=0===e.uris.length;for(const i of v.window.tabGroups.all)for(const r of i.tabs)if(r.input instanceof v.TabInputText||r.input instanceof v.TabInputCustom||r.input instanceof v.TabInputNotebook){const i=r.input.uri;!t&&e.uris.some((e=>b.n.equals(e,i)))||v.window.tabGroups.close(r,!0)}else if(r.input instanceof v.TabInputTextDiff||r.input instanceof v.TabInputNotebookDiff){const i=r.input.modified;!t&&e.uris.some((e=>b.n.equals(e,i)))||v.window.tabGroups.close(r,!0)}}catch(e){d.Yd.error(e,"CloseUnchangedFilesCommand"),(0,u.W8)("Unable to close all unchanged files")}}};P=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?A(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&C(t,i,s),s})([(0,s.WD)()],P);var S=Object.defineProperty,R=Object.getOwnPropertyDescriptor;let D=class extends o.pu{constructor(e){super([r.Gh.CompareWith,r.Gh.CompareHeadWith,r.Gh.CompareWorkingWith,r.Gh.Deprecated_DiffHeadWith,r.Gh.Deprecated_DiffWorkingWith]),this.container=e}preExecute(e,t){switch(e.command){case r.Gh.CompareWith:t={...t};break;case r.Gh.CompareHeadWith:case r.Gh.Deprecated_DiffHeadWith:(t={...t}).ref1="HEAD";break;case r.Gh.CompareWorkingWith:case r.Gh.Deprecated_DiffWorkingWith:(t={...t}).ref1=""}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,o.SX)(t,e),i={...i};try{let r;switch(i.ref1){case null:r="Compare";break;case"":r="Compare Working Tree with";break;case"HEAD":r="Compare HEAD with";break;default:r=`Compare ${i.ref1} with`}const n=(await(0,y.hM)(t,e,r))?.path;if(!n)return;null!=i.ref1&&null!=i.ref2?await this.container.searchAndCompareView.compare(n,i.ref1,i.ref2):this.container.searchAndCompareView.selectForCompare(n,i.ref1,{prompt:!0})}catch(e){d.Yd.error(e,"CompareWithCommmand"),(0,u.W8)("Unable to open comparison")}}};D=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?R(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&S(t,i,s),s})([(0,s.WD)()],D);var k=Object.defineProperty,_=Object.getOwnPropertyDescriptor;let T=class extends o.pu{constructor(e){super(r.Gh.CopyCurrentBranch),this.container=e}async execute(e,t){const i=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0,r=await(0,y.hM)(i,e,"Copy Current Branch Name");if(null!=r)try{const e=await r.getBranch();e?.name&&await v.env.clipboard.writeText(e.name)}catch(e){d.Yd.error(e,"CopyCurrentBranchCommand"),(0,u.W8)("Unable to copy current branch name")}}};T=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?_(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&k(t,i,s),s})([(0,s.WD)()],T);var F=i(5367),O=i(3016),E=i(1742);var $=i(4043),I=Object.defineProperty,x=Object.getOwnPropertyDescriptor;let B=class extends o.pu{constructor(e){super([r.Gh.CopyDeepLinkToBranch,r.Gh.CopyDeepLinkToCommit,r.Gh.CopyDeepLinkToRepo,r.Gh.CopyDeepLinkToTag,r.Gh.CopyDeepLinkToComparison]),this.container=e}preExecute(e,t){return null==t&&((0,o.en)(e)?t={refOrRepoPath:e.node.commit}:(0,o.Qo)(e)?t={refOrRepoPath:e.node.branch}:(0,o._5)(e)?t={refOrRepoPath:e.node.tag}:(0,o.C$)(e)?t={refOrRepoPath:e.node.remote.repoPath,remote:e.node.remote.name}:(0,o.F4)(e)&&(t={refOrRepoPath:e.node.uri.fsPath,compareRef:e.node.compareRef,compareWithRef:e.node.compareWithRef})),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r,n;if(i={...i},null==i?.refOrRepoPath){const i=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0;r=$._n.Repository,n=(await(0,y.hM)(i,e,`Copy Link to ${(0,$.$k)(r)}`))?.path}else"string"==typeof i.refOrRepoPath?(r=null==i.compareRef?$._n.Repository:$._n.Comparison,n=i.refOrRepoPath,i.refOrRepoPath=void 0):(r=(0,$.$x)(i.refOrRepoPath.refType),n=i.refOrRepoPath.repoPath);if(n){if(!i.remote&&"branch"===i.refOrRepoPath?.refType&&(i.refOrRepoPath.remote||null!=i.refOrRepoPath.upstream?.name)){const[e,t]=(0,F.$q)(i.refOrRepoPath);null!=e&&null!=t&&(i.remote=t,i.prePickRemote=!0)}try{let e;const t=await this.container.git.getRemotes(n,{sort:!0}),s=t.find((e=>e.default));if(i.remote&&!i.prePickRemote)e=t.find((e=>e.name===i?.remote));else if(null!=s)e=s;else{const n=await async function(e,t="Choose a remote",i,r){const n=[];let s;if(0===i.length)t="No remotes found";else{if("default"===r?.autoPick&&i.length>1){const e=i.find((e=>e.default));null!=e&&(i=[e])}const e={upstream:!0,buttons:r?.setDefault?[O.ip]:void 0};for(const t of i)n.push((0,E.vl)(t,void 0,e)),t.name===r?.picked&&(s=n[n.length-1])}if(r?.autoPick&&1===i.length)return n[0];const o=v.window.createQuickPick();o.ignoreFocusOut=(0,m.hE)();const a=[];try{const i=await new Promise((i=>{a.push(o.onDidHide((()=>i(void 0))),o.onDidAccept((()=>{0!==o.activeItems.length&&i(o.activeItems[0])})),o.onDidTriggerItemButton((async e=>{e.button===O.ip&&(await e.item.item.setAsDefault(),i(e.item))}))),o.title=e,o.placeholder=t,o.matchOnDetail=!0,o.items=n,null!=s&&(o.activeItems=[s]),o.show()}));if(null==i)return;return i}finally{o.dispose(),a.forEach((e=>{e.dispose()}))}}(`Copy Link to ${(0,$.$k)(r)}`,"Choose which remote to copy the link for",t,{autoPick:!0,picked:i.remote,setDefault:!0});if(null==n)return;e=n.item}if(null==e)return;null==i.refOrRepoPath?await this.container.deepLinks.copyDeepLinkUrl(n,e.url,i.compareRef,i.compareWithRef):await this.container.deepLinks.copyDeepLinkUrl(i.refOrRepoPath,e.url)}catch(e){d.Yd.error(e,"CopyDeepLinkCommand"),(0,u.W8)("Unable to copy link")}}}};B=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?x(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&I(t,i,s),s})([(0,s.WD)()],B);var W=i(6897),M=i(3105),L=Object.defineProperty,U=Object.getOwnPropertyDescriptor;let N=class extends o.pu{constructor(e){super(r.Gh.CopyMessageToClipboard),this.container=e}async preExecute(e,t){return(0,o.en)(e)?((t={...t}).sha=e.node.commit.sha,null!=e.node.commit.message&&await e.node.commit.ensureFullDetails(),t.message=e.node.commit.message,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):(0,o.Qo)(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):(0,o._5)(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,o.SX)(t,e),i={...i};try{if(!i.message){if(null!=i.repoPath&&null!=i.sha)return void await(0,W.SJ)({ref:i.sha,repoPath:i.repoPath});let r;if(null==t){if(r=this.container.git.getBestRepository(e)?.path,!r)return;const t=await this.container.git.getLog(r,{limit:1});if(null==t)return;const n=(0,M.Ps)(t.commits.values());if(null==n?.message)return;i.message=n.message}else if(null==i.message){const n=await h.YY.fromUri(t);if(r=n.repoPath,!r)return;if(null!=i.sha)return void await(0,W.SJ)({ref:i.sha,repoPath:r});{const t=e?.selection.active.line??0;if(t<0)return;try{const i=await this.container.git.getBlameForLine(n,t,e?.document);if(null==i||i.commit.isUncommitted)return;return void await(0,W.SJ)(i.commit)}catch(e){return d.Yd.error(e,"CopyMessageToClipboardCommand",`getBlameForLine(${t})`),void(0,u.W8)("Unable to copy message")}}}}await v.env.clipboard.writeText(i.message)}catch(e){d.Yd.error(e,"CopyMessageToClipboardCommand"),(0,u.W8)("Unable to copy message")}}};N=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?U(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&L(t,i,s),s})([(0,s.WD)()],N);var G=i(4321),H=i(5148),V=Object.defineProperty,q=Object.getOwnPropertyDescriptor;let Q=class extends o.pu{constructor(e){super(r.Gh.CopyShaToClipboard),this.container=e}preExecute(e,t){return(0,o.en)(e)?((t={...t}).sha=e.node.commit.sha,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):(0,o.Qo)(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):(0,o._5)(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,o.SX)(t,e),i={...i};try{if(!i.sha)if(null==t){const t=this.container.git.getBestRepository(e)?.path;if(!t)return;const r=await this.container.git.getLog(t,{limit:1});if(null==r)return;if(i.sha=(0,M.Ps)(r.commits.values())?.sha,null==i.sha)return}else if(null==i.sha){const r=e?.selection.active.line??0;if(r<0)return;try{const n=await h.YY.fromUri(t),s=await this.container.git.getBlameForLine(n,r,e?.document);if(null==s)return;i.sha=s.commit.sha}catch(e){return d.Yd.error(e,"CopyShaToClipboardCommand",`getBlameForLine(${r})`),void(0,u.W8)("Unable to copy commit SHA")}}await v.env.clipboard.writeText(H.D.get("advanced.abbreviateShaOnCopy")?(0,G.zL)(i.sha):i.sha)}catch(e){d.Yd.error(e,"CopyShaToClipboardCommand"),(0,u.W8)("Unable to copy commit SHA")}}};Q=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?q(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&V(t,i,s),s})([(0,s.WD)()],Q);var Y=Object.defineProperty,j=Object.getOwnPropertyDescriptor;let z=class extends o.pu{constructor(e){super(r.Gh.CopyRelativePathToClipboard),this.container=e}preExecute(e){return(0,o.d$)(e)?this.execute(e.editor,e.node.commit.file.uri):this.execute(e.editor,e.uri)}async execute(e,t){let i="";if(null!=(t=(0,o.SX)(t,e))){const r=this.container.git.getBestRepository(e)?.uri;null!=r&&(i=this.container.git.getRelativePath(t,r))}await v.env.clipboard.writeText(i)}};z=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?j(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Y(t,i,s),s})([(0,s.WD)()],z);var K=i(6503),J=Object.defineProperty,X=Object.getOwnPropertyDescriptor;let Z=class extends o.mY{constructor(e){super(r.Gh.CreatePullRequestOnRemote),this.container=e}async execute(e){if(null==e?.repoPath)return;const t=this.container.git.getRepository(e.repoPath);if(null==t)return;const i=await t.getRemote(e.remote);if(null==i?.provider)return;const n=i.provider.id,o=await t.getRemotes({filter:e=>e.provider?.id===n}),a={type:K.J.CreatePullRequest,base:{branch:e.base,remote:void 0},compare:{branch:e.compare,remote:{path:i.path,url:i.url}}};await(0,s.P0)(r.Gh.OpenOnRemote,{resource:a,remotes:o})}};Z=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?X(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&J(t,i,s),s})([(0,s.WD)()],Z);var ee=i(3636),te=i(5538),ie=Object.defineProperty,re=Object.getOwnPropertyDescriptor;let ne=class extends o.pu{constructor(e){super([r.Gh.DiffDirectory,r.Gh.DiffDirectoryWithHead,r.Gh.ViewsOpenDirectoryDiff,r.Gh.ViewsOpenDirectoryDiffWithWorking]),this.container=e}async preExecute(e,t){switch(e.command){case r.Gh.DiffDirectoryWithHead:(t={...t}).ref1="HEAD",t.ref2=void 0;break;case r.Gh.ViewsOpenDirectoryDiff:"viewItem"===e.type&&e.node instanceof te.f&&(t={...t},[t.ref1,t.ref2]=await e.node.getDiffRefs());break;case r.Gh.ViewsOpenDirectoryDiffWithWorking:(0,o.DW)(e)&&((t={...t}).ref1=e.node.ref.ref,t.ref2=void 0)}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,o.SX)(t,e),i={...i};try{const r=(await(0,y.hM)(t,e,"Directory Compare Working Tree With"))?.path;if(!r)return;if(!i.ref1){const e=await(0,ee.V)(r,"Directory Compare Working Tree with","Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==e)return;if(i.ref1=e.ref,null==i.ref1)return}(0,W.iK)(r,i.ref1,i.ref2)}catch(e){d.Yd.error(e,"OpenDirectoryCompareCommand"),(0,u.W8)("Unable to open directory compare")}}};ne=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?re(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ie(t,i,s),s})([(0,s.WD)()],ne);var se=Object.defineProperty,oe=Object.getOwnPropertyDescriptor;let ae=class extends o.pu{constructor(e){super(r.Gh.DiffLineWithPrevious),this.container=e}preExecute(e,t){return"editorLine"===e.type&&(t={...t,line:e.line}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const n=i.commit?.getGitUri()??await h.YY.fromUri(t);try{const e=await this.container.git.getPreviousComparisonUrisForLine(n.repoPath,n,i.line,n.sha);if(null==e?.previous)return void(0,u.RR)();await(0,s.P0)(r.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:e.line,showOptions:i.showOptions})}catch(e){d.Yd.error(e,"DiffLineWithPreviousCommand",`getPreviousLineDiffUris(${n.repoPath}, ${n.fsPath}, ${n.sha})`),(0,u.W8)("Unable to open compare")}}};ae=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?oe(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&se(t,i,s),s})([(0,s.WD)()],ae);var le=i(439),ce=Object.defineProperty,he=Object.getOwnPropertyDescriptor;let ue=class extends o.pu{constructor(e){super(r.Gh.DiffLineWithWorking),this.container=e}preExecute(e,t){return"editorLine"===e.type&&(t={...t,line:e.line}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const n=await h.YY.fromUri(t);let a,l;if(null==(i={...i}).line&&(i.line=e?.selection.active.line??0),null==i.commit||i.commit.isUncommitted){const t=i.line;if(t<0)return;try{const r=await this.container.git.getBlameForLine(n,t,e?.document);if(null==r)return void(0,u.zk)("Unable to open compare");if(i.commit=r.commit,i.commit.isUncommitted){const e=await this.container.git.getStatusForFile(n.repoPath,n);null!=e?.indexStatus?(a=le.pw,l=this.container.git.getAbsoluteUri(e.originalPath||e.path,i.commit.repoPath)):(a=i.commit.unresolvedPreviousSha,l=i.commit.file.originalUri??i.commit.file.uri)}else a=i.commit.sha,l=i.commit.file.uri;i.line=r.line.line-1}catch(e){return d.Yd.error(e,"DiffLineWithWorkingCommand",`getBlameForLine(${t})`),void(0,u.W8)("Unable to open compare")}}else a=i.commit.sha,l=i.commit.file?.uri??n;const c=await(i.commit.file?.getWorkingUri());null!=c?await(0,s.P0)(r.Gh.DiffWith,{repoPath:i.commit.repoPath,lhs:{sha:a,uri:l},rhs:{sha:"",uri:c},line:i.line,showOptions:i.showOptions}):v.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree")}};ue=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?he(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ce(t,i,s),s})([(0,s.WD)()],ue);var de=i(6450),pe=Object.defineProperty,me=Object.getOwnPropertyDescriptor;let ge=class extends o.mY{constructor(e){super(r.Gh.DiffWith),this.container=e}static getMarkdownCommandArgs(e,t){let i;if((0,de.f_)(e)){const r=e;if(null==r.file||null==r.unresolvedPreviousSha)throw new Error("Commit has no file");i=r.isUncommitted?{repoPath:r.repoPath,lhs:{sha:"HEAD",uri:r.file.uri},rhs:{sha:"",uri:r.file.uri},line:t}:{repoPath:r.repoPath,lhs:{sha:r.unresolvedPreviousSha,uri:r.file.originalUri??r.file.uri},rhs:{sha:r.sha,uri:r.file.uri},line:t}}else i=e;return super.getMarkdownCommandArgsCore(r.Gh.DiffWith,i)}async execute(e){if(null!=e?.lhs&&null!=e?.rhs&&null!=(e={...e,lhs:{...e.lhs},rhs:{...e.rhs},showOptions:null==e.showOptions?void 0:{...e.showOptions}}).repoPath)try{let t=e.lhs.sha,i=e.rhs.sha;if([e.lhs.sha,e.rhs.sha]=await Promise.all([await this.container.git.resolveReference(e.repoPath,e.lhs.sha,e.lhs.uri,{timeout:(0,G.yo)(e.lhs.sha)?100:void 0}),await this.container.git.resolveReference(e.repoPath,e.rhs.sha,e.rhs.uri,{timeout:(0,G.yo)(e.rhs.sha)?100:void 0})]),e.lhs.sha!==le.Ii&&(t=e.lhs.sha),e.rhs.sha&&e.rhs.sha!==le.Ii){const t=await this.container.git.getFileStatusForCommit(e.repoPath,e.rhs.uri,e.rhs.sha);"D"===t?.status?e.rhs.sha=le.Ii:i=e.rhs.sha,"A"===t?.status&&e.lhs.sha.endsWith("^")&&(e.lhs.sha=le.Ii)}const[n,o]=await Promise.all([this.container.git.getBestRevisionUri(e.repoPath,e.lhs.uri.fsPath,e.lhs.sha),this.container.git.getBestRevisionUri(e.repoPath,e.rhs.uri.fsPath,e.rhs.sha)]);let a=(0,G.zL)(i,{strings:{uncommitted:"Working Tree"}});null==o?a=(0,G.l3)(e.rhs.sha)?"deleted":0===a.length&&e.rhs.sha===le.Ii?"not in Working Tree":"deleted"+(0===a.length?"":` in ${a}`):null==n&&(a="added"+(0===a.length?"":` in ${a}`));let l=e.lhs.sha!==le.Ii?(0,G.zL)(t):"";null==n&&0===e.rhs.sha.length&&(null!=o?(l=0===l.length?"":`not in ${l}`,a=""):l="deleted"+(0===l.length?"":` in ${l}`)),null!=e.lhs.title||null==n&&0===l.length||(e.lhs.title=`${(0,p.EZ)(e.lhs.uri.fsPath)}${l?` (${l})`:""}`),null==e.rhs.title&&(e.rhs.title=`${(0,p.EZ)(e.rhs.uri.fsPath)}${a?` (${a})`:""}`);const c=null!=e.lhs.title&&null!=e.rhs.title?`${e.lhs.title} ${r.NE.ArrowLeftRightLong} ${e.rhs.title}`:e.lhs.title??e.rhs.title;null==e.showOptions&&(e.showOptions={}),null==e.showOptions.viewColumn&&(e.showOptions.viewColumn=v.ViewColumn.Active),null!=e.line&&0!==e.line&&(e.showOptions.selection=new v.Range(e.line,0,e.line,0)),await(0,s.dO)("vscode.diff",n??this.container.git.getRevisionUri(le.Ii,e.lhs.uri.fsPath,e.repoPath),o??this.container.git.getRevisionUri(le.Ii,e.rhs.uri.fsPath,e.repoPath),c,e.showOptions)}catch(e){d.Yd.error(e,"DiffWithCommand","getVersionedFile"),(0,u.W8)("Unable to open compare")}}};ge=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?me(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&pe(t,i,s),s})([(0,s.WD)()],ge);var fe=Object.defineProperty,we=Object.getOwnPropertyDescriptor;let ve=class extends o.pu{constructor(e){super([r.Gh.DiffWithNext,r.Gh.DiffWithNextInDiffLeft,r.Gh.DiffWithNextInDiffRight]),this.container=e}preExecute(e,t){return e.command===r.Gh.DiffWithNextInDiffLeft&&(t={...t,inDiffLeftEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const n=i.commit?.getGitUri()??await h.YY.fromUri(t);try{const e=await this.container.git.getNextComparisonUris(n.repoPath,n,n.sha,i.inDiffLeftEditor?1:0);if(null==e?.next)return;await(0,s.P0)(r.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.current.sha??"",uri:e.current.documentUri()},rhs:{sha:e.next.sha??"",uri:e.next.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){d.Yd.error(e,"DiffWithNextCommand",`getNextDiffUris(${n.repoPath}, ${n.fsPath}, ${n.sha})`),(0,u.W8)("Unable to open compare")}}};ve=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?we(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&fe(t,i,s),s})([(0,s.WD)()],ve);var ye=Object.defineProperty,be=Object.getOwnPropertyDescriptor;let Ce=class extends o.pu{constructor(e){super([r.Gh.DiffWithPrevious,r.Gh.DiffWithPreviousInDiffLeft,r.Gh.DiffWithPreviousInDiffRight]),this.container=e}preExecute(e,t){return e.command===r.Gh.DiffWithPreviousInDiffRight&&(t={...t,inDiffRightEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(i={...i}).uri){if(null==(t=(0,o.SX)(t,e)))return}else t=i.uri;let n;if(null==i.line&&(i.line=e?.selection.active.line??0),null!=i.commit?.file){if(!i.commit.isUncommitted)return void await(0,s.P0)(r.Gh.DiffWith,{repoPath:i.commit.repoPath,lhs:{sha:`${i.commit.sha}^`,uri:i.commit.file.originalUri??i.commit.file.uri},rhs:{sha:"?"===i.commit.file.status?`${i.commit.sha}^3`:i.commit.sha||"",uri:i.commit.file.uri},line:i.line,showOptions:i.showOptions});n=i.commit?.getGitUri()}else n=await h.YY.fromUri(t);try{const e=await this.container.git.getPreviousComparisonUris(n.repoPath,n,n.sha,i.inDiffRightEditor?1:0);if(null==e?.previous){if(null==e)return void(0,u.RR)();if(null==e.current.sha)return void await(0,m.GR)(e.current,i.showOptions);if(!e.current.isUncommittedStaged)return void(0,u.RR)();e.previous=h.YY.fromFile(e.current.fileName,e.current.repoPath,le.Ii)}await(0,s.P0)(r.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){d.Yd.error(e,"DiffWithPreviousCommand",`getPreviousDiffUris(${n.repoPath}, ${n.fsPath}, ${n.sha})`),(0,u.W8)("Unable to open compare")}}};Ce=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?be(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ye(t,i,s),s})([(0,s.WD)()],Ce);var Ae=i(963),Pe=i(7469),Se=i(9729),Re=i(3599);async function De(e,t,i,r){const n=v.window.createQuickPick();function s(e){return null==e?[(0,Re.fw)(Re.Xe.Cancel)]:[...r?.showOtherReferences??[],...(0,M.UI)(e.commits.values(),(e=>(0,E.YY)(e,r?.picked===e.ref,{compact:!0,icon:!0}))),...e?.hasMore?[(0,Re.fw)(Re.Xe.LoadMore)]:[]]}n.ignoreFocusOut=(0,m.hE)(),n.title=t,n.placeholder=i,n.matchOnDescription=!0,n.matchOnDetail=!0,(0,Pe.tI)(e)&&(n.busy=!0,n.show(),null==(e=await e)&&(n.placeholder="Unable to show commit history")),n.items=s(e),r?.picked&&(n.activeItems=n.items.filter((e=>!Se.$w.is(e)&&e.picked)));const o=[];let a;null!=r?.keys&&0!==r.keys.length&&null!==r?.onDidPressKey&&(a=Ae.W.instance.keyboard.createScope(Object.fromEntries(r.keys.map((e=>[e,{onDidPressKey:e=>{if(0!==n.activeItems.length){const[t]=n.activeItems;null==t||(0,Re.Gy)(t)||Se.$w.is(t)||r.onDidPressKey(e,t)}}}])))),a.start(),o.push(a));try{const t=await new Promise((t=>{o.push(n.onDidHide((()=>t(void 0))),n.onDidAccept((()=>{if(0!==n.activeItems.length){const[i]=n.activeItems;if((0,Re.Gy)(i))return i.directive===Re.Xe.LoadMore?void async function(){n.busy=!0;try{const t=s(e=await((await e)?.more?.(H.D.get("advanced.maxListItems"))));let i=-1;if(0!==n.activeItems.length){const e=n.activeItems[0];i=n.items.indexOf(e),(0,Re.Gy)(e)&&i--}n.items=t,i&&(n.activeItems=[n.items[i]])}finally{n.busy=!1}}():void t(void 0);t(i)}})),n.onDidChangeValue((async e=>{null!=a&&(0!==e.length?await a.pause(["left","right"]):await a.resume())}))),n.busy=!1,n.show()}));if(null==t||(0,Re.Gy)(t))return;return t instanceof Se.$w?void await t.execute():t.item}finally{n.dispose(),o.forEach((e=>{e.dispose()}))}}async function ke(e,t,i,r){const n=v.window.createQuickPick();n.ignoreFocusOut=(0,m.hE)(),n.title=t,n.placeholder=i,n.matchOnDescription=!0,n.matchOnDetail=!0,(0,Pe.tI)(e)&&(n.busy=!0,n.show(),e=await e),null!=e&&(n.items=[...r?.showOtherReferences??[],...(0,M.UI)(null!=r?.filter?(0,M.hX)(e.commits.values(),r.filter):e.commits.values(),(e=>(0,E.YY)(e,r?.picked===e.ref,{compact:!0,icon:!0})))]),(null==e||n.items.length<=(r?.showOtherReferences?.length??0))&&(n.placeholder=null==e?"No stashes found":r?.empty??"No matching stashes found",n.items=[(0,Re.fw)(Re.Xe.Cancel)]),r?.picked&&(n.activeItems=n.items.filter((e=>!Se.$w.is(e)&&e.picked)));const s=[];let o;null!=r?.keys&&0!==r.keys.length&&null!==r?.onDidPressKey&&(o=Ae.W.instance.keyboard.createScope(Object.fromEntries(r.keys.map((e=>[e,{onDidPressKey:e=>{if(0!==n.activeItems.length){const[t]=n.activeItems;null==t||(0,Re.Gy)(t)||Se.$w.is(t)||r.onDidPressKey(e,t)}}}])))),o.start(),s.push(o));try{const e=await new Promise((e=>{s.push(n.onDidHide((()=>e(void 0))),n.onDidAccept((()=>{if(0!==n.activeItems.length){const[t]=n.activeItems;if((0,Re.Gy)(t))return void e(void 0);e(t)}})),n.onDidChangeValue((async e=>{null!=o&&(0!==e.length?await o.pause(["left","right"]):await o.resume())}))),n.busy=!1,n.show()}));if(null==e||(0,Re.Gy)(e))return;return e instanceof Se.$w?void await e.execute():e.item}finally{n.dispose(),s.forEach((e=>{e.dispose()}))}}var _e=i(3620),Te=Object.defineProperty,Fe=Object.getOwnPropertyDescriptor;let Oe=class extends o.pu{constructor(e){super(r.Gh.DiffWithRevision),this.container=e}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const n=await h.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{const e=this.container.git.getLogForFile(n.repoPath,n.fsPath).then((e=>e??(n.sha?this.container.git.getLogForFile(n.repoPath,n.fsPath,{ref:n.sha}):void 0))),t=`Open Changes with Revision${(0,_e.vk)(r.NE.Dot,2,2)}`,o=await De(e,`${t}${n.getFormattedFileName({suffix:n.sha?`:${(0,G.zL)(n.sha)}`:void 0,truncateTo:r.d$-t.length})}`,"Choose a commit to compare with",{picked:n.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await(0,s.P0)(r.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:t.item.ref,uri:n},rhs:{sha:"",uri:n},line:i.line,showOptions:i.showOptions})},showOtherReferences:[Se.$w.fromCommand("Choose a Branch or Tag...",r.Gh.DiffWithRevisionFrom),Se.$w.fromCommand("Choose a Stash...",r.Gh.DiffWithRevisionFrom,{stash:!0})]});if(null==o)return;await(0,s.P0)(r.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:o.ref,uri:n},rhs:{sha:"",uri:n},line:i.line,showOptions:i.showOptions})}catch(e){d.Yd.error(e,"DiffWithRevisionCommand"),(0,u.W8)("Unable to open compare")}}};Oe=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Fe(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Te(t,i,s),s})([(0,s.WD)()],Oe);var Ee=Object.defineProperty,$e=Object.getOwnPropertyDescriptor;let Ie=class extends o.pu{constructor(e){super(r.Gh.DiffWithRevisionFrom),this.container=e}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const n=await h.YY.fromUri(t);if(!n.repoPath)return void(0,u.bi)("Unable to open file compare");null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const a=this.container.git.getRelativePath(n,n.repoPath);let l,c,d,m;if(i?.stash){const e=`Open Changes with Stash${(0,_e.vk)(r.NE.Dot,2,2)}`,t=await ke(this.container.git.getStash(n.repoPath),`${e}${n.getFormattedFileName({truncateTo:r.d$-e.length})}`,"Choose a stash to compare with",{empty:`No stashes with '${n.getFormattedFileName()}' found`,filter:e=>e.files?.some((e=>e.path===a||e.originalPath===a))??!0});if(null==t)return;l=t.ref,c=l}else{const e=`Open Changes with Branch or Tag${(0,_e.vk)(r.NE.Dot,2,2)}`,t=await(0,ee.V)(n.repoPath,`${e}${n.getFormattedFileName({truncateTo:r.d$-e.length})}`,"Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==t)return;l=t.ref,c=(0,G.UR)(t)&&t.remote?`remotes/${l}`:l}if(null==l)return;const g=await this.container.git.getDiffStatus(n.repoPath,"HEAD",l,{filters:["R","C"]});if(null!=g){const e=g.find((e=>e.path===a));null!=e?.originalPath&&(d=this.container.git.getAbsoluteUri(e.originalPath,n.repoPath),m=`${(0,p.EZ)(e.originalPath)} (${(0,G.zL)(l)})`)}await(0,s.P0)(r.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:c,uri:d??n,title:m??`${(0,p.EZ)(n.fsPath)} (${(0,G.zL)(l)})`},rhs:{sha:"",uri:n},line:i.line,showOptions:i.showOptions})}};Ie=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?$e(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ee(t,i,s),s})([(0,s.WD)()],Ie);var xe=Object.defineProperty,Be=Object.getOwnPropertyDescriptor;let We=class extends o.pu{constructor(e){super([r.Gh.DiffWithWorking,r.Gh.DiffWithWorkingInDiffLeft,r.Gh.DiffWithWorkingInDiffRight]),this.container=e}async execute(e,t,i){if(null==(i={...i}).uri){if(null==(t=(0,o.SX)(t,e)))return}else t=i.uri;let n=await h.YY.fromUri(t);if(null==i.line&&(i.line=e?.selection.active.line??0),i.inDiffRightEditor)try{const e=await this.container.git.getPreviousComparisonUris(n.repoPath,n,n.sha);n=e?.previous??n}catch(e){return d.Yd.error(e,"DiffWithWorkingCommand",`getPreviousDiffUris(${n.repoPath}, ${n.fsPath}, ${n.sha})`),void(0,u.W8)("Unable to open compare")}if(null==n.sha)return void v.window.showInformationMessage("File matches the working tree");if(n.sha===le.Ii)return void v.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");if(n.isUncommittedStaged){const e=await this.container.git.getStatusForFile(n.repoPath,n);if(null!=e?.indexStatus)return void await(0,s.P0)(r.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:le.pw,uri:n.documentUri()},rhs:{sha:"",uri:n.documentUri()},line:i.line,showOptions:i.showOptions})}t=n.toFileUri();const a=await this.container.git.getWorkingUri(n.repoPath,t);null!=a?await(0,s.P0)(r.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:n.sha,uri:t},rhs:{sha:"",uri:a},line:i.line,showOptions:i.showOptions}):v.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree")}};We=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Be(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&xe(t,i,s),s})([(0,s.WD)()],We);var Me=i(5640),Le=(e=>(e[e.Merge=0]="Merge",e[e.Index=1]="Index",e[e.WorkingTree=2]="WorkingTree",e))(Le||{}),Ue=i(2800),Ne=Object.defineProperty,Ge=Object.getOwnPropertyDescriptor;let He=class extends o.mY{constructor(e){super([r.Gh.ExternalDiff,r.Gh.ExternalDiffAll]),this.container=e}async preExecute(e,t){if(t={...t},(0,o.d$)(e)){const i=await e.node.commit.getPreviousSha(),r=(0,G.l3)(i)?"":i,n=e.node.commit.isUncommitted?"":e.node.commit.sha;return t.files=[{uri:h.YY.fromFile(e.node.file,e.node.file.repoPath??e.node.repoPath),staged:e.node.commit.isUncommittedStaged||null!=e.node.file.indexStatus,ref1:r,ref2:n}],this.execute(t)}if((0,o.O$)(e))return t.files=[{uri:h.YY.fromFile(e.node.file,e.node.file.repoPath??e.node.repoPath),staged:null!=e.node.file.indexStatus,ref1:e.node.ref1,ref2:e.node.ref2}],this.execute(t);if(null==t.files&&("scm-states"===e.type?t.files=e.scmResourceStates.map((e=>({uri:e.resourceUri,staged:e.resourceGroupType===Le.Index}))):"scm-groups"===e.type&&(t.files=(0,Ue.DZ)(e.scmResourceGroups[0].resourceStates,(e=>this.isModified(e)?{uri:e.resourceUri,staged:e.resourceGroupType===Le.Index}:void 0)))),e.command===r.Gh.ExternalDiffAll&&null==t.files){const e=await(0,y.vJ)("Open All Changes (difftool)");if(null==e)return;const i=await this.container.git.getStatusForRepo(e.uri);if(null==i)return v.window.showInformationMessage("The repository doesn't have any changes");t.files=[];for(const e of i.files)"M"===e.indexStatus&&t.files.push({uri:e.uri,staged:!0}),"M"===e.workingTreeStatus&&t.files.push({uri:e.uri,staged:!1})}return this.execute(t)}isModified(e){const t=e.type;return t===Me.qb.BOTH_MODIFIED||t===Me.qb.INDEX_MODIFIED||t===Me.qb.MODIFIED}async execute(e){e={...e};try{let t;if(null==e.files){const i=v.window.activeTextEditor;if(null==i)return;if(t=this.container.git.getBestRepository(i)?.path,!t)return;const r=i.document.uri,n=await this.container.git.getStatusForFile(t,r);if(null==n)return void v.window.showInformationMessage("The current file doesn't have any changes");e.files=[],"M"===n.indexStatus&&e.files.push({uri:n.uri,staged:!0}),"M"===n.workingTreeStatus&&e.files.push({uri:n.uri,staged:!1})}else if(t=(await this.container.git.getOrOpenRepository(e.files[0].uri))?.path,!t)return;const i=H.D.get("advanced.externalDiffTool")||await this.container.git.getDiffTool(t);if(!i){const e="View Git Docs";return void(await v.window.showWarningMessage("Unable to open changes because no Git diff tool is configured",e)===e&&v.env.openExternal(v.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool")))}for(const r of e.files)this.container.git.openDiffTool(t,r.uri,{ref1:r.ref1,ref2:r.ref2,staged:r.staged,tool:i})}catch(e){d.Yd.error(e,"ExternalDiffCommand"),(0,u.W8)("Unable to open changes in diff tool")}}};He=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ge(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ne(t,i,s),s})([(0,s.WD)()],He);var Ve=Object.defineProperty,qe=Object.getOwnPropertyDescriptor,Qe=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?qe(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ve(t,i,s),s};let Ye=class extends o.pu{constructor(e){super(r.Gh.GenerateCommitMessage),this.container=e}async execute(e,t,i){let r;if(null!=(i={...i}).repoPath)r=this.container.git.getRepository(i.repoPath);else{const i=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0;r=await(0,y.hM)(i,e,"Generate Commit Message")}if(null==r)return;const n=await this.container.git.getScmRepository(r.path);if(null!=n)try{const e=n.inputBox.value,t=await this.container.ai.generateCommitMessage(r,{context:e,progress:{location:v.ProgressLocation.Notification,title:"Generating commit message..."}});if(null==t)return;(0,s.dO)("workbench.view.scm"),n.inputBox.value=`${e?`${e}\n\n`:""}${t}`}catch(e){if(d.Yd.error(e,"GenerateCommitMessageCommand"),e instanceof Error&&e.message.startsWith("No staged changes"))return void v.window.showInformationMessage("No staged changes to generate a commit message from.");(0,u.W8)(e.message)}}};Ye=Qe([(0,s.WD)()],Ye);let je=class extends o.mY{constructor(e){super(r.Gh.ResetOpenAIKey),this.container=e}execute(){this.container.storage.deleteSecret("gitlens.openai.key"),this.container.storage.deleteWithPrefix("confirm:ai:tos"),this.container.storage.deleteWorkspaceWithPrefix("confirm:ai:tos"),this.container.storage.delete("confirm:sendToOpenAI"),this.container.storage.deleteWorkspace("confirm:sendToOpenAI")}};je=Qe([(0,s.WD)()],je);var ze=i(4155),Ke=i(5025),Je=i(2674),Xe=i(4794),Ze=Object.defineProperty,et=Object.getOwnPropertyDescriptor;let tt=class extends o.mY{constructor(e){super(r.Gh.OpenOrCreateWorktreeForGHPR),this.container=e}async execute(...e){const[t]=e;let i;i="pullRequestModel"in t?t.pullRequestModel:t;const{base:{repositoryCloneUrl:{url:r,owner:n,repositoryName:s}},githubRepository:{rootUri:o},head:{repositoryCloneUrl:{url:a,owner:l},ref:c},item:{number:h}}=i;let u=this.container.git.getRepository(o);if(null==u)return void v.window.showWarningMessage(`Unable to find repository(${o.toString()}) for PR #${h}`);if(u=await u.getMainRepository(),null==u)return void v.window.showWarningMessage(`Unable to find main repository(${o.toString()}) for PR #${h}`);const p=a.toString(),[,m,g]=(0,Xe.Sk)(p);let f;if([f]=await u.getRemotes({filter:e=>e.matches(m,g)}),null!=f)await this.container.git.fetch(u.path,{remote:f.name});else{const e=await v.window.showInformationMessage(`Unable to find a remote for '${p}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});if("Yes"!==e?.title)return;if(await(0,ze.IH)(u,l,p,{confirm:!1,fetch:!0,reveal:!1}),[f]=await u.getRemotes({filter:e=>e.url===p}),null==f)return}const w=`${f.name}/${c}`,y=`pr/${r.toString()===a.toString()?c:w}`,b=`remotes/${w}`,C=await(0,Je.K)(u,y,w);if(null!=C)return void(0,Ke.bA)(C);let A,P;const S=await(0,F.eK)(u,w);null!=S?A=(0,G.LB)(S):(A=(0,G.xB)(b,u.path,{refType:"branch",name:b,remote:!0}),P=y),await(0,Pe.ag)();try{await(0,Ke.Ue)(u,void 0,A,{createBranch:P});if(null==await this.container.git.getWorktree(u.path,(e=>e.branch===y)))return;this.container.git.setConfig(u.path,`branch.${y}.github-pr-owner-number`,`${n}#${s}#${h}`)}catch(e){d.Yd.error(e,"CreateWorktreeCommand","Unable to create worktree"),v.window.showErrorMessage(`Unable to create worktree for ${l}:${c}`)}}};tt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?et(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ze(t,i,s),s})([(0,s.WD)()],tt);var it=i(4241),rt=i(2967),nt=i(6270),st=Object.defineProperty,ot=Object.getOwnPropertyDescriptor,at=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?ot(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&st(t,i,s),s};const lt=/\$\(.+?\)|\s/g,ct=Symbol("ShowLoading");let ht=class extends o.mY{constructor(e){super([r.Gh.GitCommands,r.Gh.GitCommandsBranch,r.Gh.GitCommandsCherryPick,r.Gh.GitCommandsMerge,r.Gh.GitCommandsRebase,r.Gh.GitCommandsReset,r.Gh.GitCommandsRevert,r.Gh.GitCommandsSwitch,r.Gh.GitCommandsTag,r.Gh.GitCommandsWorktree,r.Gh.GitCommandsWorktreeOpen]),this.container=e}startedWith="menu";preExecute(e,t){switch(e.command){case r.Gh.GitCommandsBranch:t={command:"branch"};break;case r.Gh.GitCommandsCherryPick:t={command:"cherry-pick"};break;case r.Gh.GitCommandsMerge:t={command:"merge"};break;case r.Gh.GitCommandsRebase:t={command:"rebase"};break;case r.Gh.GitCommandsReset:t={command:"reset"};break;case r.Gh.GitCommandsRevert:t={command:"revert"};break;case r.Gh.GitCommandsSwitch:t={command:"switch"};break;case r.Gh.GitCommandsTag:t={command:"tag"};break;case r.Gh.GitCommandsWorktree:t={command:"worktree"};break;case r.Gh.GitCommandsWorktreeOpen:t={command:"worktree",state:{subcommand:"open"}}}return this.execute(t)}async execute(e){const t=new rt.K(this.container,e),i=null!=e?.command?t.find(e.command):void 0;let r,n;for(this.startedWith=null!=i?"command":"menu",n=null==i?t:await this.showLoadingIfNeeded(i,this.getCommandStep(i,t)),!0===n?.ignoreFocusOut&&(n.ignoreFocusOut=void 0);null!=n;)if(n!==t||null==i)if(r&&null==n.ignoreFocusOut&&(n.ignoreFocusOut=!0),(0,nt.Dr)(n))n=await this.showPickStep(n,t),!0===n?.ignoreFocusOut&&(r=!0);else if((0,nt.Gj)(n))n=await this.showInputStep(n,t),!0===n?.ignoreFocusOut&&(r=!0);else{if(!(0,nt.a)(n))break;n=await this.showCustomStep(n,t),!0===n?.ignoreFocusOut&&(r=!0)}else n=await this.getCommandStep(i,t);e?.completion?.fulfill()}async showLoadingIfNeeded(e,t){const i=await Promise.race([t,new Promise((e=>setTimeout(e,250,ct)))]);if(i!==ct)return i;const r=v.window.createQuickPick();r.ignoreFocusOut=!1;const n=[];let s;try{return await new Promise((async i=>{n.push(r.onDidHide((()=>i(s)))),r.title=e.title,r.placeholder="Loading...",r.busy=!0,r.enabled=!1,r.show(),s=await t,r.hide()}))}finally{r.dispose(),n.forEach((e=>{e.dispose()}))}}getButtons(e,t){const i=[];if(null!=e){if(null!=e.buttons)return i.push(...e.buttons),i;i.push(v.QuickInputButtons.Back),null!=e.additionalButtons&&i.push(...e.additionalButtons)}if(t?.canConfirm)if(t.canSkipConfirm){const e=new O.Lp(t.confirm(),(async()=>{if(null==t?.skipConfirmKey)return;const e=H.D.get("gitCommands.skipConfirmations")??[],i=e.indexOf(t.skipConfirmKey);-1!==i?e.splice(i,1):e.push(t.skipConfirmKey),await H.D.updateEffective("gitCommands.skipConfirmations",e)}));i.push(e)}else i.push(O.zY);return i}async getCommandStep(e,t){t.setCommand(e,"command");const i=await e.next();if(!i.done)return i.value}async nextStep(e,t,i){null!=i&&(i.busy=!0);const r=await e.next(t);if(!r.done)return null!=i&&(i.value=""),r.value}async showCustomStep(e,t){const i=await e.show(e);if(i!==nt.Vd){if(!(0,Re.wX)(i))return this.nextStep(t.command,i);switch(i){case Re.Xe.Back:return await(t?.command?.previous())??t;case Re.Xe.Noop:return t.command?.retry();case Re.Xe.Cancel:default:return}}}async showInputStep(e,t){const i=v.window.createInputBox();i.ignoreFocusOut=!H.D.get("gitCommands.closeOnFocusOut")||(e.ignoreFocusOut??!1);const r=[];try{return await new Promise((async n=>{const s={};if(null!=e.onDidPressKey&&null!=e.keys&&0!==e.keys.length)for(const t of e.keys)s[t]={onDidPressKey:t=>e.onDidPressKey(i,t)};const o=this.container.keyboard.createScope(s);if(o.start(),r.push(o,i.onDidHide((()=>n(void 0))),i.onDidTriggerButton((async r=>{if(r!==v.QuickInputButtons.Back){if(r!==O.zY){if(r instanceof O.jQ&&null!=r.onDidClick){const s=r.onDidClick(i);return i.buttons=this.getButtons(e,t.command),!0===await s?void n(t.command?.retry()):void((0,Pe.tI)(s)&&(i.buttons=this.getButtons(e,t.command)))}if(null!=e.onDidClickButton){const s=e.onDidClickButton(i,r);i.buttons=this.getButtons(e,t.command),!0===await s&&n(t.command?.retry())}}}else(async()=>{i.value="",null!=t.command&&(i.busy=!0,n(await t.command.previous()??t))})()})),i.onDidChangeValue((async t=>{if(null!=o&&(0!==t.length?await o.pause(["left","right"]):await o.resume()),null==e.validate)return;const[,r]=await e.validate(t);i.validationMessage=r})),i.onDidAccept((async()=>{n(await this.nextStep(t.command,i.value,i))}))),i.buttons=this.getButtons(e,t.command),i.title=e.title,i.placeholder=e.placeholder,i.prompt=e.prompt,null!=e.value&&(i.value=e.value,null!=e.validate)){const[t,r]=await e.validate(e.value);t||null==r||(i.validationMessage={severity:v.InputBoxValidationSeverity.Error,message:r})}if(null!=t.command&&e===t&&t.setCommand(void 0,"menu"),i.show(),null!=e.value)try{i._onDidChangeValueEmitter?.fire(i.value)}catch{}}))}finally{i.dispose(),r.forEach((e=>{e.dispose()}))}}async showPickStep(e,t){const i=!H.D.get("gitCommands.closeOnFocusOut")||(e.ignoreFocusOut??!1),r=e.ignoreFocusOut,n=v.window.createQuickPick();n.ignoreFocusOut=i;const s=[];try{return await new Promise((o=>{async function a(){n.value="",null!=t.command&&(n.busy=!0,o(await t.command.previous()??t))}async function l(){if(null!=e.onDidLoadMore){n.busy=!0;try{const t=await(e.onDidLoadMore?.(n));let i=-1;if(0!==n.activeItems.length){const e=n.activeItems[0];i=n.items.indexOf(e),(0,Re.Gy)(e)&&i--}n.items=e.items=t,i&&(n.activeItems=[n.items[i]])}finally{n.busy=!1}}}const c={left:{onDidPressKey:a}};if(null!=e.onDidPressKey&&null!=e.keys&&0!==e.keys.length)for(const t of e.keys)c[t]={onDidPressKey:t=>e.onDidPressKey(n,t)};const h=this.container.keyboard.createScope(c);h.start();let u=!1;s.push(h,n.onDidHide((()=>o(void 0))),n.onDidTriggerItemButton((async i=>{!0===await(e.onDidClickItemButton?.(n,i.button,i.item))&&o(await this.nextStep(t.command,[i.item],n))})),n.onDidTriggerButton((async i=>{if(i!==v.QuickInputButtons.Back){if(i!==O.zY)if(i!==O.Q0){if(i instanceof O.jQ&&null!=i.onDidClick){let r;if(null==t.command&&0!==n.activeItems.length){const e=n.activeItems[0];(0,nt.YB)(e)&&(r=e)}const s=i.onDidClick(n);return n.buttons=this.getButtons(null!=r?r.value:e,r??t.command),!0===await s?void o(t.command?.retry()):void((0,Pe.tI)(s)&&(n.buttons=this.getButtons(null!=r?r.value:e,r??t.command)))}if(null!=e.onDidClickButton){const r=e.onDidClickButton(n,i);n.buttons=this.getButtons(e,t.command),!0===await r&&o(t.command?.retry())}}else l()}else a()})),n.onDidChangeValue((async s=>{if(null!=h&&(0!==s.length?await h.pause(["left","right"]):await h.resume()),null!=e.onDidChangeValue){if(await e.onDidChangeValue(n))return}if(0===s.length||n.ignoreFocusOut?0===s.length&&n.ignoreFocusOut&&!i&&(n.ignoreFocusOut=i,e.ignoreFocusOut=r):(n.ignoreFocusOut=!0,e.ignoreFocusOut=!0),!u){if(n.canSelectMany&&" "===s)return n.value="",void(n.selectedItems=n.selectedItems.length===n.items.length?[]:n.items);if(s.endsWith(" ")){if(n.canSelectMany&&0!==n.selectedItems.length)return;let i;if(null==t.command){const e=t.find(n.value.trim(),!0);if(null==e)return;t.setCommand(e,this.startedWith)}else{const t=n.value.trim().toLowerCase(),r=e.items.find((e=>e.label.replace(lt,"").toLowerCase()===t));if(null==r)return;i=[r]}return void o(await this.nextStep(t.command,i,n))}}if(n.canSelectMany||null==t.command||0===s.trim().length||!u&&0!==n.activeItems.length)u=!1;else{if(null==e.onValidateValue)return;u=await e.onValidateValue(n,s.trim(),e.items)}u||n.items.length===e.items.length||(n.items=e.items)})),n.onDidChangeActive((()=>{if(null!=t.command||0===n.activeItems.length)return;const e=n.activeItems[0];(0,nt.YB)(e)&&(n.buttons=this.getButtons(void 0,e))})),n.onDidChangeSelection((t=>{n.canSelectMany&&(0===t.length||n.ignoreFocusOut?0===t?.length&&n.ignoreFocusOut&&!i&&(n.ignoreFocusOut=i,e.ignoreFocusOut=r):(n.ignoreFocusOut=!0,e.ignoreFocusOut=!0))})),n.onDidAccept((async()=>{let i=n.selectedItems;if(0===i.length){if(!n.canSelectMany||0===n.activeItems.length){const i=n.value.trim();if(0===i.length&&!e.allowEmpty)return;return null==e.onDidAccept?void(e.allowEmpty&&o(await this.nextStep(t.command,[],n))):(n.busy=!0,await e.onDidAccept(n)&&o(await this.nextStep(t.command,i,n)),void(n.busy=!1))}i=n.activeItems}if(1===i.length){const[e]=i;if((0,Re.Gy)(e))switch(e.directive){case Re.Xe.Cancel:return void o(void 0);case Re.Xe.Back:return void a();case Re.Xe.LoadMore:return void l();case Re.Xe.StartPreviewTrial:return Ae.W.instance.subscription.startPreviewTrial(),void o(void 0);case Re.Xe.RequiresVerification:return Ae.W.instance.subscription.resendVerification(),void o(void 0);case Re.Xe.ExtendTrial:return Ae.W.instance.subscription.loginOrSignUp(),void o(void 0);case Re.Xe.RequiresPaidSubscription:return Ae.W.instance.subscription.purchase(),void o(void 0)}}if(null==t.command){const[e]=i;if(!(0,nt.YB)(e))return;t.setCommand(e,this.startedWith)}if(!n.canSelectMany&&null!=e.onDidAccept){n.busy=!0;const t=await e.onDidAccept(n);if(n.busy=!1,!t)return}o(await this.nextStep(t.command,i,n))}))),n.title=e.title,n.placeholder=e.placeholder,n.matchOnDescription=Boolean(e.matchOnDescription),n.matchOnDetail=Boolean(e.matchOnDetail),n.canSelectMany=Boolean(e.multiselect),n.items=e.items,n.canSelectMany?(n.selectedItems=e.selectedItems??n.items.filter((e=>e.picked)),n.activeItems=n.selectedItems):n.activeItems=e.selectedItems??n.items.filter((e=>e.picked)),null!=t.command&&e===t&&t.setCommand(void 0,"menu"),n.buttons=this.getButtons(e,t.command);const d=e.selectValueWhenShown??!0;if(null!=e.value&&d&&(n.value=e.value),n.show(),null==e.value||d||(n.value=e.value),null!=e.value&&d)try{n._onDidChangeValueEmitter?.fire(n.value)}catch{}}))}finally{n.dispose(),s.forEach((e=>{e.dispose()}))}}};at([(0,it.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],ht.prototype,"execute",1),ht=at([(0,s.WD)()],ht);var ut=Object.defineProperty,dt=Object.getOwnPropertyDescriptor;let pt=class extends o.mY{constructor(e){super(r.Gh.InviteToLiveShare),this.container=e}static getMarkdownCommandArgs(e){const t=void 0===e||"string"==typeof e?{email:e}:e;return super.getMarkdownCommandArgsCore(r.Gh.InviteToLiveShare,t)}preExecute(e,t){return(0,o.Mg)(e)?((t={...t}).email=e.node.contributor.email,this.execute(t)):this.execute(t)}async execute(e){if(e?.email){const t=await this.container.vsls.getContact(e.email);if(null!=t)return t.invite()}return this.container.vsls.startSession()}};pt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?dt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ut(t,i,s),s})([(0,s.WD)()],pt);var mt=i(2540),gt=Object.defineProperty,ft=Object.getOwnPropertyDescriptor,wt=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?ft(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&gt(t,i,s),s};let vt=class extends o.mY{constructor(e){super(r.Gh.EnableDebugLogging),this.container=e}async execute(){await H.D.updateEffective("outputLevel",mt.M7.Debug)}};vt=wt([(0,s.WD)()],vt);let yt=class extends o.mY{constructor(e){super(r.Gh.DisableDebugLogging),this.container=e}async execute(){await H.D.updateEffective("outputLevel",mt.M7.Errors)}};yt=wt([(0,s.WD)()],yt);var bt=Object.defineProperty,Ct=Object.getOwnPropertyDescriptor;let At=class extends o.pu{constructor(e){super(r.Gh.OpenAssociatedPullRequestOnRemote),this.container=e}async execute(e,t){const i=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0;if(null==e||null==i)try{const e=await(0,y.vJ)("Open Pull Request Associated",void 0,void 0,{filter:async e=>null!=(await this.container.git.getBestRemoteWithRichProvider(e.uri))?.provider});if(null==e)return;const t=await this.container.git.getBestRemoteWithRichProvider(e.uri);if(null==t?.provider)return;const i=await e.getBranch();if(null==i)return;let n=await this.container.git.getPullRequestForBranch(i.ref,t.provider);if(null==n){const i=await e.getCommit("HEAD");if(null==i)return;if(n=await this.container.git.getPullRequestForCommit(i.ref,t.provider),null==n)return}await(0,s.P0)(r.Gh.OpenPullRequestOnRemote,{pr:{url:n.url}})}catch(e){d.Yd.error(e,"OpenAssociatedPullRequestOnRemoteCommand","No editor opened")}else{const t=e.selection.active.line;if(t<0)return;try{const e=await this.container.git.getBlameForLine(i,t);if(null==e)return;await(0,s.P0)(r.Gh.OpenPullRequestOnRemote,{clipboard:!1,ref:e.commit.sha,repoPath:e.commit.repoPath})}catch(e){d.Yd.error(e,"OpenAssociatedPullRequestOnRemoteCommand",`getBlameForLine(${t})`)}}}};At=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ct(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&bt(t,i,s),s})([(0,s.WD)()],At);var Pt=Object.defineProperty,St=Object.getOwnPropertyDescriptor;let Rt=class extends o.pu{constructor(e){super([r.Gh.OpenBranchesOnRemote,r.Gh.Deprecated_OpenBranchesInRemote,r.Gh.CopyRemoteBranchesUrl]),this.container=e}preExecute(e,t){return(0,o.C$)(e)&&(t={...t,remote:e.node.remote.name}),e.command===r.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const n=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0,a=(await(0,y.hM)(n,e,i?.clipboard?"Copy Remote Branches URL":"Open Branches on Remote"))?.path;if(a)try{await(0,s.P0)(r.Gh.OpenOnRemote,{resource:{type:K.J.Branches},repoPath:a,remote:i?.remote,clipboard:i?.clipboard})}catch(e){d.Yd.error(e,"OpenBranchesOnRemoteCommand"),(0,u.W8)("Unable to open branches on remote provider")}}};Rt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?St(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Pt(t,i,s),s})([(0,s.WD)()],Rt);var Dt=Object.defineProperty,kt=Object.getOwnPropertyDescriptor;let _t=class extends o.pu{constructor(e){super([r.Gh.OpenBranchOnRemote,r.Gh.Deprecated_OpenBranchInRemote,r.Gh.CopyRemoteBranchUrl]),this.container=e}preExecute(e,t){return(0,o.Qo)(e)&&(t={...t,branch:e.node.branch.name,remote:e.node.branch.getRemoteName()}),e.command===r.Gh.CopyRemoteBranchUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const n=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0,a=(await(0,y.hM)(n,e,i?.clipboard?"Copy Remote Branch URL":"Open Branch On Remote"))?.path;if(a){i={...i};try{if(null==i.branch){const e=await(0,ee.V)(a,i.clipboard?"Copy Remote Branch URL":"Open Branch On Remote",i.clipboard?"Choose a branch to copy the URL from":"Choose a branch to open",{autoPick:!0,filter:{branches:e=>null!=e.upstream},include:ee.H.Branches,sort:{branches:{current:!0},tags:{}}});if(null==e||e instanceof Se.$w)return;i.branch=e.ref}await(0,s.P0)(r.Gh.OpenOnRemote,{resource:{type:K.J.Branch,branch:i.branch||"HEAD"},repoPath:a,remote:i.remote,clipboard:i.clipboard})}catch(e){d.Yd.error(e,"OpenBranchOnRemoteCommand"),(0,u.W8)("Unable to open branch on remote provider")}}}};_t=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?kt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Dt(t,i,s),s})([(0,s.WD)()],_t);var Tt=Object.defineProperty,Ft=Object.getOwnPropertyDescriptor;let Ot=class extends o.pu{constructor(e){super(r.Gh.OpenCurrentBranchOnRemote),this.container=e}async execute(e,t){const i=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0,n=await(0,y.hM)(i,e,"Open Current Branch Name");if(null!=n)try{const e=await n.getBranch();e?.name&&await(0,s.P0)(r.Gh.OpenOnRemote,{resource:{type:K.J.Branch,branch:e.name||"HEAD"},repoPath:n.path})}catch(e){d.Yd.error(e,"OpenCurrentBranchOnRemoteCommand"),(0,u.W8)("Unable to open branch on remote provider")}}};Ot=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ft(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Tt(t,i,s),s})([(0,s.WD)()],Ot);var Et=Object.defineProperty,$t=Object.getOwnPropertyDescriptor;let It=class extends o.mY{constructor(e){super(r.Gh.OpenChangedFiles),this.container=e}async execute(e){e={...e};try{if(null==e.uris){const t=await(0,y.vJ)("Open All Changed Files");if(null==t)return;const i=await this.container.git.getStatusForRepo(t.uri);if(null==i)return void v.window.showWarningMessage("Unable to open changed files");e.uris=(0,Ue.DZ)(i.files,(e=>"D"!==e.status?e.uri:void 0))}(0,m.$_)(e.uris)}catch(e){d.Yd.error(e,"OpenChangedFilesCommand"),(0,u.W8)("Unable to open all changed files")}}};It=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?$t(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Et(t,i,s),s})([(0,s.WD)()],It);var xt=Object.defineProperty,Bt=Object.getOwnPropertyDescriptor;let Wt=class extends o.pu{constructor(e){super([r.Gh.OpenCommitOnRemote,r.Gh.Deprecated_OpenCommitInRemote,r.Gh.CopyRemoteCommitUrl]),this.container=e}static getMarkdownCommandArgs(e){const t="string"==typeof e?{sha:e}:e;return super.getMarkdownCommandArgsCore(r.Gh.OpenCommitOnRemote,t)}preExecute(e,t){let i=e.uri;if("editorLine"===e.type&&(t={...t,line:e.line}),(0,o.en)(e)){if(e.node.commit.isUncommitted)return Promise.resolve(void 0);t={...t,sha:e.node.commit.sha},i=e.node.uri}return(0,o.jT)(e)&&(t={sha:e.item.ref},i=e.uri),e.command===r.Gh.CopyRemoteCommitUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,i,t)}async execute(e,t,i){let n=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0;const a=(await(0,y.hM)(n,e,i?.clipboard?"Copy Remote Commit URL":"Open Commit On Remote"))?.path;if(a){null==n&&(n=h.YY.fromRepoPath(a)),i={...i};try{if(null==i.sha){const t=i.line??e?.selection.active.line;if(null==t)return;const r=await this.container.git.getBlameForLine(n,t,e?.document);if(null==r)return void(0,u.zk)("Unable to open commit on remote provider");i.sha=r.commit.isUncommitted?await r.commit.getPreviousSha()??le.Ii:r.commit.sha}await(0,s.P0)(r.Gh.OpenOnRemote,{resource:{type:K.J.Commit,sha:i.sha},repoPath:a,clipboard:i.clipboard})}catch(e){d.Yd.error(e,"OpenCommitOnRemoteCommand"),(0,u.W8)("Unable to open commit on remote provider")}}}};Wt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Bt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&xt(t,i,s),s})([(0,s.WD)()],Wt);var Mt=i(5988),Lt=Object.defineProperty,Ut=Object.getOwnPropertyDescriptor;let Nt=class extends o.mY{constructor(e){super([r.Gh.OpenComparisonOnRemote,r.Gh.CopyRemoteComparisonUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof Mt.J&&(t={...t,repoPath:e.node.repoPath,ref1:e.node.ref1,ref2:e.node.ref2}),e.command===r.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(t)}async execute(e){if(null!=e?.repoPath&&null!=e.ref1&&null!=e.ref2)try{await(0,s.P0)(r.Gh.OpenOnRemote,{resource:{type:K.J.Comparison,base:e.ref1,compare:e.ref2,notation:e.notation},repoPath:e.repoPath,clipboard:e?.clipboard})}catch(e){d.Yd.error(e,"OpenComparisonOnRemoteCommand"),(0,u.W8)("Unable to open comparison on remote provider")}}};Nt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ut(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Lt(t,i,s),s})([(0,s.WD)()],Nt);var Gt=Object.defineProperty,Ht=Object.getOwnPropertyDescriptor;let Vt=class extends o.mY{constructor(e){super(r.Gh.OpenFileFromRemote),this.container=e}async execute(){let e=await v.env.clipboard.readText();try{v.Uri.parse(e,!0)}catch{e=void 0}const t=await v.window.showInputBox({prompt:"Enter a remote file url to open",placeHolder:"Remote file url",value:e,ignoreFocusOut:!0});if(null==t||0===t.length)return;let i,r=await this.container.git.getLocalInfoFromRemoteUri(v.Uri.parse(t));if(null==r){if(r=await this.container.git.getLocalInfoFromRemoteUri(v.Uri.parse(t),{validate:!1}),null==r)return void v.window.showWarningMessage("Unable to parse the provided remote url.");const e="Open File...";if(await v.window.showWarningMessage("Unable to find a workspace folder that matches the provided remote url.",e)!==e)return}r.startLine&&(i=r.endLine?new v.Range(r.startLine-1,0,r.endLine,0):new v.Range(r.startLine-1,0,r.startLine-1,0));try{await(0,m.bM)(r.uri,{selection:i,rethrow:!0})}catch{const e=await v.window.showOpenDialog({title:"Open local file",defaultUri:r.uri,canSelectMany:!1,canSelectFolders:!1});if(null==e||0===e.length)return;await(0,m.bM)(e[0])}}};Vt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ht(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Gt(t,i,s),s})([(0,s.WD)()],Vt);var qt=i(6586),Qt=Object.defineProperty,Yt=Object.getOwnPropertyDescriptor;let jt=class extends o.pu{constructor(e){super([r.Gh.OpenFileOnRemote,r.Gh.Deprecated_OpenFileInRemote,r.Gh.CopyRemoteFileUrl,r.Gh.CopyRemoteFileUrlWithoutRange,r.Gh.OpenFileOnRemoteFrom,r.Gh.CopyRemoteFileUrlFrom]),this.container=e}async preExecute(e,t){let i=e.uri;if("editorLine"===e.type&&(t={...t,line:e.line,range:!0}),e.command===r.Gh.CopyRemoteFileUrlWithoutRange&&(t={...t,range:!1}),(0,o.en)(e)?(t={...t,range:!1},e.command===r.Gh.CopyRemoteFileUrl||e.command===r.Gh.CopyRemoteFileUrlWithoutRange||e.command===r.Gh.CopyRemoteFileUrlFrom?t.sha=e.node instanceof qt.q?void 0:e.node.commit.sha:(0,o.Qo)(e)&&(t.branchOrTag=e.node.branch?.name),i=e.node.uri):"viewItem"===e.type&&(t={...t,range:!1},i=e.node.uri??e.uri),(e.command===r.Gh.CopyRemoteFileUrl||e.command===r.Gh.CopyRemoteFileUrlWithoutRange||e.command===r.Gh.CopyRemoteFileUrlFrom)&&null==(t={...t,clipboard:!0}).sha){const i=(0,o.SX)(e.uri,e.editor);if(null!=i){const e=await h.YY.fromUri(i);if(e.repoPath)if(null==e.sha){const i=await this.container.git.getCommitForFile(e.repoPath,e,{firstIfNotFound:!0});null!=i&&(t.sha=i.sha)}else t.sha=e.sha}}return e.command!==r.Gh.OpenFileOnRemoteFrom&&e.command!==r.Gh.CopyRemoteFileUrlFrom||(t={...t,pickBranchOrTag:!0,range:!1}),this.execute(e.editor,i,t)}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const n=await h.YY.fromUri(t);if(n.repoPath){i={range:!0,...i};try{let o,a=await this.container.git.getRemotesWithProviders(n.repoPath);i.range&&(null!=e&&b.n.equals(e.document.uri,t)?o=new v.Range(e.selection.start.with({line:e.selection.start.line+1}),e.selection.end.with({line:e.selection.end.line+(0===e.selection.end.character?0:1)})):null!=i.line&&(o=new v.Range(i.line+1,0,i.line+1,0)));let l=i.sha??n.sha;if(null==i.branchOrTag&&null!=l&&!(0,G.D3)(l)&&0!==a.length){const[e,t]=(0,_e.pW)(l,"/");if(null!=t){const r=a.find((t=>t.name===e));null!=r&&(i.branchOrTag=t,l=void 0,a=[r])}}if(null==i.sha&&null==i.branchOrTag||i.pickBranchOrTag){let e;if(i.pickBranchOrTag||(e=await this.container.git.getBranch(n.repoPath)),null==e?.upstream){const e=await(0,ee.V)(n.repoPath,i.clipboard?`Copy Remote File URL From${(0,_e.vk)(r.NE.Dot,2,2)}${n.relativePath}`:`Open File on Remote From${(0,_e.vk)(r.NE.Dot,2,2)}${n.relativePath}`,`Choose a branch or tag to ${i.clipboard?"copy":"open"} the file revision from`,{allowEnteringRefs:!0,autoPick:!0,filter:{branches:e=>e.remote||null!=e.upstream},picked:i.branchOrTag,sort:{branches:{current:!0,orderBy:mt.Vz.DateDesc},tags:{orderBy:mt.RV.DateDesc}}});if(null==e)return;if("branch"===e.refType){if(e.remote){i.branchOrTag=(0,F.S3)(e.name);const t=(0,F.Lo)(e.name),r=a.find((e=>e.name===t));null!=r&&(a=[r])}else i.branchOrTag=e.name;l=void 0}else"tag"===e.refType?(i.branchOrTag=e.ref,l=void 0):(i.branchOrTag=void 0,l=e.ref)}else i.branchOrTag=e.name}await(0,s.P0)(r.Gh.OpenOnRemote,{resource:{type:null==l?K.J.File:K.J.Revision,branchOrTag:i.branchOrTag??"HEAD",fileName:n.relativePath,range:o,sha:l??void 0},repoPath:n.repoPath,remotes:a,clipboard:i.clipboard})}catch(e){d.Yd.error(e,"OpenFileOnRemoteCommand"),(0,u.W8)("Unable to open file on remote provider")}}}};jt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Yt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Qt(t,i,s),s})([(0,s.WD)()],jt);var zt=Object.defineProperty,Kt=Object.getOwnPropertyDescriptor;let Jt=class extends o.pu{constructor(e){super([r.Gh.OpenFileAtRevision,r.Gh.OpenBlamePriorToChange]),this.container=e}static getMarkdownCommandArgs(e,t,i){let n;if(e instanceof v.Uri){n={revisionUri:e,line:i,annotationType:t}}else n=e;return super.getMarkdownCommandArgsCore(r.Gh.OpenFileAtRevision,n)}async preExecute(e,t){if(e.command===r.Gh.OpenBlamePriorToChange){if(null==(t={...t,annotationType:mt.VP.Blame}).revisionUri&&null!=e.editor){const i=e.editor.selection.active.line;if(i>=0)try{const r=await h.YY.fromUri(e.editor.document.uri),n=await this.container.git.getBlameForLine(r,i);if(null!=n)if(n.commit.isUncommitted){const e=await n.commit.getPreviousComparisonUrisForLine(i);if(null==e?.previous)return void(0,u.RR)(n.commit);t.revisionUri=this.container.git.getRevisionUri(e.previous)}else{if(null==(null!=n?await(n?.commit.getPreviousSha()):void 0))return void(0,u.RR)(n.commit);t.revisionUri=this.container.git.getRevisionUri(n.commit.getGitUri(!0))}}catch(e){d.Yd.error(e,"OpenBlamePriorToChangeCommand")}}if(null==t.revisionUri)return void(0,u.W8)("Unable to open blame")}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const n=await h.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri){const e=this.container.git.getLogForFile(n.repoPath,n.fsPath).then((e=>e??(n.sha?this.container.git.getLogForFile(n.repoPath,n.fsPath,{ref:n.sha}):void 0))),t=`Open ${i.annotationType===mt.VP.Blame?"Blame":"File"} at Revision${(0,_e.vk)(r.NE.Dot,2,2)}`,s=await De(e,`${t}${n.getFormattedFileName({suffix:n.sha?`:${(0,G.zL)(n.sha)}`:void 0,truncateTo:r.d$-t.length})}`,`Choose a commit to ${i.annotationType===mt.VP.Blame?"blame":"open"} the file revision from`,{picked:n.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await(0,W.YS)(t.item.file,t.item,{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})},showOtherReferences:[Se.$w.fromCommand("Choose a Branch or Tag...",r.Gh.OpenFileAtRevisionFrom),Se.$w.fromCommand("Choose a Stash...",r.Gh.OpenFileAtRevisionFrom,{stash:!0})]});if(null==s?.file)return;return void await(0,W.YS)(s.file,s,{annotationType:i.annotationType,line:i.line,...i.showOptions})}await(0,W.YS)(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){d.Yd.error(e,"OpenFileAtRevisionCommand"),(0,u.W8)("Unable to open file at revision")}}};Jt=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Kt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&zt(t,i,s),s})([(0,s.WD)()],Jt);var Xt=Object.defineProperty,Zt=Object.getOwnPropertyDescriptor;let ei=class extends o.pu{constructor(e){super(r.Gh.OpenFileAtRevisionFrom),this.container=e}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const n=await h.YY.fromUri(t);if(n.repoPath){if(null==(i={...i}).line&&(i.line=e?.selection.active.line??0),null==i.reference)if(i?.stash){const e=this.container.git.getRelativePath(n,n.repoPath),t=`Open Changes with Stash${(0,_e.vk)(r.NE.Dot,2,2)}`,s=await ke(this.container.git.getStash(n.repoPath),`${t}${n.getFormattedFileName({truncateTo:r.d$-t.length})}`,"Choose a stash to compare with",{filter:t=>t.files?.some((t=>t.path===e||t.originalPath===e))??!0});if(null==s)return;i.reference=s}else{const e=`Open File at Branch or Tag${(0,_e.vk)(r.NE.Dot,2,2)}`,t=await(0,ee.V)(n.repoPath,`${e}${n.getFormattedFileName({truncateTo:r.d$-e.length})}`,"Choose a branch or tag to open the file revision from",{allowEnteringRefs:!0,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{const[r]=t.activeItems;null!=r&&await(0,W.YS)(this.container.git.getRevisionUri(r.ref,n.fsPath,n.repoPath),{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})}});if(null==t)return;i.reference=t}await(0,W.YS)(this.container.git.getRevisionUri(i.reference.ref,n.fsPath,n.repoPath),{annotationType:i.annotationType,line:i.line,...i.showOptions})}else(0,u.bi)("Unable to open file revision")}};ei=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Zt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Xt(t,i,s),s})([(0,s.WD)()],ei);var ti=i(3050),ii=i(5009),ri=Object.defineProperty,ni=Object.getOwnPropertyDescriptor;let si=class extends o.mY{constructor(e){super([r.Gh.OpenOnRemote,r.Gh.Deprecated_OpenInRemote]),this.container=e}async execute(e){if(null==e?.resource)return;let t="remotes"in e?e.remotes:await this.container.git.getRemotesWithProviders(e.repoPath);if(null!=e.remote){const i=t.filter((t=>t.name===e.remote));t.length>0&&(t=i)}try{let i=function(t){return e?.clipboard?`Copy Link to ${t} for ${s}`:`Open ${t} on ${s}`};if(e.resource.type===K.J.Branch){const[i,r]=(0,_e.pW)(e.resource.branch,"/");if(null!=r){const n=t.find((e=>e.name===i));null!=n&&(e.resource.branch=r,t=[n])}}else if(e.resource.type===K.J.Revision){const{commit:t,fileName:i}=e.resource;if(null!=t){const r=await t.findFile(i);e.resource.sha="D"===r?.status?await this.container.git.resolveReference(t.repoPath,`${t.sha}^`,i):t.sha}}const n=ti.ss.getHighlanderProviders(t),s=n?.length?n[0].name:"Remote",o={autoPick:"default",clipboard:e.clipboard,setDefault:!0};let a,l="Choose which remote to "+(e.clipboard?"copy the link for":"open on");switch(e.resource.type){case K.J.Branch:a=`${i("Branch")}${(0,_e.vk)(r.NE.Dot,2,2)}${e.resource.branch}`;break;case K.J.Branches:a=i("Branches");break;case K.J.Commit:a=`${i("Commit")}${(0,_e.vk)(r.NE.Dot,2,2)}${(0,G.zL)(e.resource.sha)}`;break;case K.J.Comparison:a=`${i("Comparison")}${(0,_e.vk)(r.NE.Dot,2,2)}${(0,G.oI)(e.resource.base,e.resource.compare,e.resource.notation??"...")}`;break;case K.J.CreatePullRequest:o.autoPick=!0,o.setDefault=!1,a=`${e.clipboard?`Copy Create Pull Request Link for ${s}`:`Create Pull Request on ${s}`}${(0,_e.vk)(r.NE.Dot,2,2)}${e.resource.base?.branch?(0,G.oI)(e.resource.base.branch,e.resource.compare.branch,"..."):e.resource.compare.branch}`,l="Choose which remote to "+(e.clipboard?"copy the create pull request link for":"create the pull request on");break;case K.J.File:a=`${i("File")}${(0,_e.vk)(r.NE.Dot,2,2)}${e.resource.fileName}`;break;case K.J.Repo:a=i("Repository");break;case K.J.Revision:a=`${i("File")}${(0,_e.vk)(r.NE.Dot,2,2)}${(0,G.zL)(e.resource.sha)}${(0,_e.vk)(r.NE.Dot,1,1)}${e.resource.fileName}`}const c=await(0,ii.cY)(a,l,e.resource,t,o);await(c?.execute())}catch(e){d.Yd.error(e,"OpenOnRemoteCommand"),(0,u.W8)("Unable to open in remote provider")}}};si=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?ni(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ri(t,i,s),s})([(0,s.WD)()],si);var oi=i(2610),ai=Object.defineProperty,li=Object.getOwnPropertyDescriptor;let ci=class extends o.mY{constructor(e){super([r.Gh.OpenIssueOnRemote,r.Gh.CopyRemoteIssueUrl,r.Gh.OpenAutolinkUrl,r.Gh.CopyAutolinkUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof oi.Z&&(t={...t,issue:{url:e.node.item.url},clipboard:e.command===r.Gh.CopyRemoteIssueUrl||e.command===r.Gh.CopyAutolinkUrl}),this.execute(t)}async execute(e){e.clipboard?await v.env.clipboard.writeText(e.issue.url):v.env.openExternal(v.Uri.parse(e.issue.url))}};ci=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?li(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ai(t,i,s),s})([(0,s.WD)()],ci);var hi=i(2060),ui=Object.defineProperty,di=Object.getOwnPropertyDescriptor;let pi=class extends o.mY{constructor(e){super([r.Gh.OpenPullRequestOnRemote,r.Gh.CopyRemotePullRequestUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof hi.Z&&(t={...t,pr:{url:e.node.pullRequest.url},clipboard:e.command===r.Gh.CopyRemotePullRequestUrl}),this.execute(t)}async execute(e){if(null==e?.pr){if(null==e?.repoPath||null==e?.ref)return;const t=await this.container.git.getBestRemoteWithRichProvider(e.repoPath);if(null==t?.provider)return;const i=await this.container.git.getPullRequestForCommit(e.ref,t.provider);if(null==i)return;(e={...e}).pr=i}e.clipboard?await v.env.clipboard.writeText(e.pr.url):v.env.openExternal(v.Uri.parse(e.pr.url))}};pi=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?di(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ui(t,i,s),s})([(0,s.WD)()],pi);var mi=Object.defineProperty,gi=Object.getOwnPropertyDescriptor;let fi=class extends o.pu{constructor(e){super([r.Gh.OpenRepoOnRemote,r.Gh.Deprecated_OpenRepoInRemote,r.Gh.CopyRemoteRepositoryUrl]),this.container=e}preExecute(e,t){return(0,o.C$)(e)&&(t={...t,remote:e.node.remote.name}),e.command===r.Gh.CopyRemoteRepositoryUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const n=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0,a=(await(0,y.hM)(n,e,i?.clipboard?"Choose which repository to copy the url from":"Choose which repository to open on remote"))?.path;if(a)try{await(0,s.P0)(r.Gh.OpenOnRemote,{resource:{type:K.J.Repo},repoPath:a,remote:i?.remote,clipboard:i?.clipboard})}catch(e){d.Yd.error(e,"OpenRepoOnRemoteCommand"),(0,u.W8)("Unable to open repository on remote provider")}}};fi=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?gi(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&mi(t,i,s),s})([(0,s.WD)()],fi);var wi=Object.defineProperty,vi=Object.getOwnPropertyDescriptor;let yi=class extends o.pu{constructor(e){super([r.Gh.OpenRevisionFile,r.Gh.OpenRevisionFileInDiffLeft,r.Gh.OpenRevisionFileInDiffRight]),this.container=e}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const r=await h.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri)if(r?.sha){const e=await this.container.git.getCommit(r.repoPath,r.sha);i.revisionUri="D"===e?.file?.status?this.container.git.getRevisionUri(await e.getPreviousSha()??le.Ii,e.file,e.repoPath):this.container.git.getRevisionUri(r)}else i.revisionUri=this.container.git.getRevisionUri(r);await(0,W.YS)(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){d.Yd.error(e,"OpenRevisionFileCommand"),(0,u.W8)("Unable to open file revision")}}};yi=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?vi(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&wi(t,i,s),s})([(0,s.WD)()],yi);var bi=Object.defineProperty,Ci=Object.getOwnPropertyDescriptor;let Ai=class extends o.pu{constructor(e){super([r.Gh.OpenWorkingFile,r.Gh.OpenWorkingFileInDiffLeft,r.Gh.OpenWorkingFileInDiffRight]),this.container=e}async execute(e,t,i){null==(i={...i}).line&&(i.line=e?.selection.active.line);try{if(null==i.uri){if(null==(t=(0,o.SX)(t,e)))return}else t=i.uri;if(i.uri=await h.YY.fromUri(t),(0,h.uy)(i.uri)&&i.uri.sha){const e=await this.container.git.getWorkingUri(i.uri.repoPath,i.uri);if(void 0===e)return void v.window.showWarningMessage("Unable to open working file. File could not be found in the working tree");i.uri=new h.YY(e,i.uri.repoPath)}void 0!==i.line&&0!==i.line&&(void 0===i.showOptions&&(i.showOptions={}),i.showOptions.selection=new v.Range(i.line,0,i.line,0));const r=await(0,m.GR)(i.uri,{...i.showOptions,throwOnError:!0});if(void 0===i.annotationType)return;await this.container.fileAnnotations.show(r,i.annotationType,{selection:{line:i.line}})}catch(e){d.Yd.error(e,"OpenWorkingFileCommand"),(0,u.W8)("Unable to open working file")}}};Ai=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ci(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&bi(t,i,s),s})([(0,s.WD)()],Ai);var Pi=Object.defineProperty,Si=Object.getOwnPropertyDescriptor,Ri=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Si(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Pi(t,i,s),s};let Di=class extends o.mY{constructor(e){super(r.Gh.DisableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!1)}};Di=Ri([(0,s.WD)()],Di);let ki=class extends o.mY{constructor(e){super(r.Gh.EnableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!0)}};ki=Ri([(0,s.WD)()],ki);var _i=Object.defineProperty,Ti=Object.getOwnPropertyDescriptor;let Fi=class extends o.mY{constructor(e){super(r.Gh.RefreshHover),this.container=e}async execute(){await(0,s.dO)("editor.action.showHover")}};Fi=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ti(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&_i(t,i,s),s})([(0,s.WD)()],Fi);var Oi=Object.defineProperty,Ei=Object.getOwnPropertyDescriptor,$i=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ei(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Oi(t,i,s),s};let Ii=class extends o.mY{constructor(e){super(r.Gh.ConnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=ti.ss.is(e)?{remote:e.name,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(r.Gh.ConnectRemoteProvider,t)}preExecute(e,t){return(0,o.C$)(e)&&(t={...t,remote:e.node.remote.name,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i,r;if(null==e?.repoPath){const e=new Map;for(const t of this.container.git.openRepositories){const i=await t.getRichRemote();null==i?.provider||await i.provider.isConnected()||e.set(t,i)}if(0===e.size)return!1;if(1===e.size){let i;[i,t]=(0,M.Ps)(e),r=i.path}else{const i=await(0,y.E2)(void 0,"Choose which repository to connect to the remote provider",[...e.keys()]);if(null==i?.item)return;r=i.repoPath,t=e.get(i.item)}}else if(null==e?.remote){if(r=e.repoPath,t=await this.container.git.getBestRemoteWithRichProvider(r,{includeDisconnected:!0}),null==t)return!1}else if(r=e.repoPath,i=await this.container.git.getRemotesWithProviders(r),t=i.find((t=>t.name===e.remote)),!t?.hasRichProvider())return!1;const n=await t.provider.connect();return n&&!(i??await this.container.git.getRemotesWithProviders(r)).some((e=>e.default))&&await t.setAsDefault(!0),n}};Ii=$i([(0,s.WD)()],Ii);let xi=class extends o.mY{constructor(e){super(r.Gh.DisconnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=ti.ss.is(e)?{remote:e.name,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(r.Gh.DisconnectRemoteProvider,t)}preExecute(e,t){return(0,o.C$)(e)&&(t={...t,remote:e.node.remote.name,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i;if(null==e?.repoPath){const e=new Map;for(const t of this.container.git.openRepositories){const i=await t.getRichRemote(!0);null!=i&&e.set(t,i)}if(0===e.size)return;if(1===e.size){let r;[r,t]=(0,M.Ps)(e),i=r.path}else{const r=await(0,y.E2)(void 0,"Choose which repository to disconnect from the remote provider",[...e.keys()]);if(null==r?.item)return;i=r.repoPath,t=e.get(r.item)}}else if(null==e?.remote){if(i=e.repoPath,t=await this.container.git.getBestRemoteWithRichProvider(i,{includeDisconnected:!1}),null==t)return}else if(i=e.repoPath,t=(await this.container.git.getRemotesWithProviders(i)).find((t=>t.name===e.remote)),!t?.hasRichProvider())return;return t.provider.disconnect()}};xi=$i([(0,s.WD)()],xi);var Bi=Object.defineProperty,Wi=Object.getOwnPropertyDescriptor,Mi=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Wi(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Bi(t,i,s),s};let Li=class extends o.mY{constructor(e){super(r.Gh.FetchRepositories),this.container=e}async execute(){return(0,n.m)({command:"fetch",state:{repos:this.container.git.openRepositories}})}};Li=Mi([(0,s.WD)()],Li);let Ui=class extends o.mY{constructor(e){super(r.Gh.PullRepositories),this.container=e}async execute(){return(0,n.m)({command:"pull",state:{repos:this.container.git.openRepositories}})}};Ui=Mi([(0,s.WD)()],Ui);let Ni=class extends o.mY{constructor(e){super(r.Gh.PushRepositories),this.container=e}async execute(){return(0,n.m)({command:"push",state:{repos:this.container.git.openRepositories}})}};Ni=Mi([(0,s.WD)()],Ni);var Gi=i(8388),Hi=Object.defineProperty,Vi=Object.getOwnPropertyDescriptor,qi=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Vi(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Hi(t,i,s),s};let Qi=class extends o.mY{constructor(e){super(r.Gh.ResetAvatarCache),this.container=e}execute(){(0,Gi.E3)("all")}};Qi=qi([(0,s.WD)()],Qi);let Yi=class extends o.mY{constructor(e){super(r.Gh.ResetSuppressedWarnings),this.container=e}async execute(){await H.D.update("advanced.messages",void 0,v.ConfigurationTarget.Global)}};Yi=qi([(0,s.WD)()],Yi);let ji=class extends o.mY{constructor(e){super(r.Gh.ResetTrackedUsage),this.container=e}async execute(){await this.container.usage.reset()}};ji=qi([(0,s.WD)()],ji);var zi=Object.defineProperty,Ki=Object.getOwnPropertyDescriptor;let Ji=class extends o.mY{constructor(e){super(r.Gh.ResetViewsLayout),this.container=e}async execute(){for(const[e,t]of r._h){try{await(0,s.dO)("vscode.moveViews",{viewIds:t.map((e=>`gitlens.views.${e}`)),destinationId:e})}catch{}e.includes("gitlens")&&await(0,s.dO)(`${e}.resetViewContainerLocation`)}}};Ji=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ki(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&zi(t,i,s),s})([(0,s.WD)()],Ji);var Xi=i(4655),Zi=Object.defineProperty,er=Object.getOwnPropertyDescriptor;let tr=class extends o.mY{constructor(e){super([r.Gh.SearchCommits,r.Gh.SearchCommitsInView]),this.container=e}preExecute(e,t){return e.command===r.Gh.SearchCommitsInView?(t={...t}).showResultsInSideBar=!0:"viewItem"===e.type&&((t={...t}).showResultsInSideBar=!0,e.node instanceof Xi.V&&(t.repoPath=e.node.repoPath,t.search=e.node.search,t.prefillOnly=!0),(0,o.pT)(e)&&(t.repoPath=e.node.repo.path)),this.execute(t)}async execute(e){await(0,n.m)({command:"search",prefillOnly:e?.prefillOnly,state:{repo:e?.repoPath,...e?.search,showResultsInSideBar:H.D.get("gitCommands.search.showResultsInSideBar")??e?.showResultsInSideBar,openPickInView:e?.openPickInView??!1}})}};tr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?er(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Zi(t,i,s),s})([(0,s.WD)()],tr);var ir=i(6934),rr=Object.defineProperty,nr=Object.getOwnPropertyDescriptor;let sr=class extends o.pu{constructor(e){super([r.Gh.ShowCommitInView,r.Gh.ShowInDetailsView,r.Gh.ShowCommitsInView]),this.container=e}static getMarkdownCommandArgs(e,t){const i="string"==typeof e?{refs:[e],repoPath:t}:e;return super.getMarkdownCommandArgsCore(r.Gh.ShowCommitInView,i)}preExecute(e,t){return"viewItem"===e.type&&(t={...t},(0,o.en)(e)&&(t.refs=[e.node.commit.sha],t.repoPath=e.node.commit.repoPath)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(void 0===(i={...i}).refs){if(null==(t=(0,o.SX)(t,e)))return;const r=await h.YY.fromUri(t);if(i.repoPath=r.repoPath,null!=e)try{const t=e.document.isDirty?await this.container.git.getBlameForRangeContents(r,e.selection,e.document.getText()):await this.container.git.getBlameForRange(r,e.selection);if(void 0===t)return(0,u.zk)("Unable to find commits");i.refs=[...(0,M.DZ)(t.commits.values(),(e=>e.isUncommitted?void 0:e.ref))]}catch(e){return d.Yd.error(e,"ShowCommitsInViewCommand","getBlameForRange"),(0,u.W8)("Unable to find commits")}else{if(null==r.sha)return;i.refs=[r.sha]}}return 1===i.refs.length?(0,W.Fw)((0,G.xB)(i.refs[0],i.repoPath,{refType:"revision"})):(0,n.m)({command:"search",state:{repo:i?.repoPath,query:(0,ir.pU)(i.refs),showResultsInSideBar:!0}})}};sr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?nr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&rr(t,i,s),s})([(0,s.WD)()],sr);var or=Object.defineProperty,ar=Object.getOwnPropertyDescriptor;let lr=class extends o.mY{constructor(e){super(r.Gh.ShowLastQuickPick),this.container=e}execute(){const e=(0,o.l8)();if(void 0===e)return Promise.resolve(void 0);try{return v.commands.executeCommand(e.command,...e.args)}catch(e){return d.Yd.error(e,"ShowLastQuickPickCommand"),(0,u.W8)("Unable to show last quick pick")}}};lr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?ar(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&or(t,i,s),s})([(0,s.WD)()],lr);var cr=Object.defineProperty,hr=Object.getOwnPropertyDescriptor;let ur=class extends o.mY{constructor(e){super(r.Gh.OpenOnlyChangedFiles),this.container=e}async execute(e){e={...e};try{if(null==e.uris){const t=await(0,y.vJ)("Open Changed & Close Unchanged Files");if(null==t)return;const i=await this.container.git.getStatusForRepo(t.uri);if(null==i)return void v.window.showWarningMessage("Unable to open changed & close unchanged files");e.uris=(0,Ue.DZ)(i.files,(e=>"D"!==e.status?e.uri:void 0))}const t=0===e.uris.length,i=new Set(e.uris);let r,n;for(const s of v.window.tabGroups.all)for(const o of s.tabs)t?v.window.tabGroups.close(o,!0):(r=o.input instanceof v.TabInputText||o.input instanceof v.TabInputCustom||o.input instanceof v.TabInputNotebook?o.input.uri:o.input instanceof v.TabInputTextDiff||o.input instanceof v.TabInputNotebookDiff?o.input.modified:void 0,null!=r&&(n=e.uris.find((e=>b.n.equals(e,r))),null!=n?i.delete(n):v.window.tabGroups.close(o,!0)));i.size>0&&(0,m.$_)([...i])}catch(e){d.Yd.error(e,"OpenOnlyChangedFilesCommand"),(0,u.W8)("Unable to open changed & close unchanged files")}}};ur=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?hr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&cr(t,i,s),s})([(0,s.WD)()],ur);var dr=Object.defineProperty,pr=Object.getOwnPropertyDescriptor;let mr=class extends o.Lk{constructor(e){super([r.Gh.ShowQuickBranchHistory,r.Gh.ShowQuickCurrentBranchHistory]),this.container=e}preExecute(e,t){return e.command===r.Gh.ShowQuickCurrentBranchHistory&&((t={...t}).branch="HEAD"),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const r=null!=(t=(0,o.SX)(t,e))?await h.YY.fromUri(t):void 0,s=i?.repoPath??r?.repoPath??this.container.git.highlander?.path;let a;return null!=s&&(null!=i?.branch?a="HEAD"===i.branch?"HEAD":(0,G.xB)(i.branch,s,{refType:"branch",name:i.branch,remote:!1}):null!=i?.tag&&(a=(0,G.xB)(i.tag,s,{refType:"tag",name:i.tag}))),(0,n.m)({command:"log",state:null!=s?{repo:s,reference:a}:{}})}};mr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?pr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&dr(t,i,s),s})([(0,s.WD)()],mr);var gr=Object.defineProperty,fr=Object.getOwnPropertyDescriptor;let wr=class extends o.Lk{constructor(e){super([r.Gh.RevealCommitInView,r.Gh.ShowQuickCommit]),this.container=e}static getMarkdownCommandArgs(e,t){const i="string"==typeof e?{sha:e,repoPath:t}:e;return super.getMarkdownCommandArgsCore(r.Gh.ShowQuickCommit,i)}preExecute(e,t){return e.command===r.Gh.RevealCommitInView&&((t={...t}).revealInView=!0),"viewItem"===e.type&&((t={...t}).sha=e.node.uri.sha,(0,o.en)(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r,s;if(null==i?.commit)if(null!=i?.repoPath&&null!=i.sha)s=i.repoPath,r=h.YY.fromRepoPath(s);else{if(null==(t=(0,o.SX)(t,e)))return;r=await h.YY.fromUri(t),s=r.repoPath}else null==i.sha&&(i.sha=i.commit.sha),r=i.commit.getGitUri(),s=i.commit.repoPath,null==t&&(t=i.commit.file?.uri);if(null==(i={...i}).sha){if(null==e)return;const t=e.selection.active.line;if(t<0)return;try{const e=await this.container.git.getBlameForLine(r,t);if(null==e)return void(0,u.zk)("Unable to show commit");if(e.commit.isUncommitted)return void(0,u.f3)("Unable to show commit");i.sha=e.commit.sha,s=e.commit.repoPath,i.commit=e.commit}catch(e){return d.Yd.error(e,"ShowQuickCommitCommand",`getBlameForLine(${t})`),void(0,u.W8)("Unable to show commit")}}try{if(null!=i.commit&&null==i.commit.file||(null!=i.repoLog&&(i.commit=i.repoLog.commits.get(i.sha),null==i.commit&&(i.repoLog=void 0)),null==i.repoLog&&(i.commit=await this.container.git.getCommit(s,i.sha))),null==i.commit)return void(0,u.G)("Unable to show commit");if(i.revealInView)return void await(0,W.ay)(i.commit,{select:!0,focus:!0,expand:!0});await(0,n.m)({command:"show",state:{repo:s,reference:i.commit}})}catch(e){d.Yd.error(e,"ShowQuickCommitCommand"),(0,u.W8)("Unable to show commit")}}};wr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?fr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&gr(t,i,s),s})([(0,s.WD)()],wr);var vr=Object.defineProperty,yr=Object.getOwnPropertyDescriptor;let br=class extends o.Lk{constructor(e){super([r.Gh.ShowQuickCommitFile,r.Gh.ShowQuickCommitRevision,r.Gh.ShowQuickCommitRevisionInDiffLeft,r.Gh.ShowQuickCommitRevisionInDiffRight,r.Gh.ShowLineCommitInView]),this.container=e}static getMarkdownCommandArgs(e){return super.getMarkdownCommandArgsCore(r.Gh.ShowQuickCommitFile,e)}async preExecute(e,t){if("editorLine"===e.type&&(t={...t,line:e.line}),e.command===r.Gh.ShowLineCommitInView&&(t={...t,inView:!0}),null!=e.editor&&e.command.startsWith(r.Gh.ShowQuickCommitRevision)){const i=await h.YY.fromUri(e.editor.document.uri);t={...t,sha:i.sha}}return"viewItem"===e.type&&(t={...t,sha:e.node.uri.sha},(0,o.en)(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;let a;if(null!=(i={...i}).revisionUri?(a=h.YY.fromRevisionUri(v.Uri.parse(i.revisionUri,!0)),i.sha=a.sha):a=await h.YY.fromUri(t),null==i.sha){const t=i.line??e?.selection.active.line;if(null==t)return;try{const e=await this.container.git.getBlameForLine(a,t);if(null==e)return void(0,u.zk)("Unable to show commit file details");if(e.commit.isUncommitted)return void(0,u.f3)("Unable to show commit file details");i.sha=e.commit.sha,i.commit=e.commit}catch(e){return d.Yd.error(e,"ShowQuickCommitFileDetailsCommand",`getBlameForLine(${t})`),void(0,u.W8)("Unable to show commit file details")}}try{if(null==i.commit&&(null!=i.fileLog&&(i.commit=i.fileLog.commits.get(i.sha),null==i.commit&&(i.fileLog=void 0)),null==i.fileLog)){const e=i.commit?.repoPath??a.repoPath;if(i.commit=await this.container.git.getCommitForFile(e,a,{ref:i.sha}),null==i.commit)return void(0,u.G)("Unable to show commit file details")}if(null==i.commit)return void(0,u.G)("Unable to show commit file details");const e=i.commit?.file?.path??a.fsPath;(0,de.f_)(i.commit)&&null==i.commit.files&&await i.commit.ensureFullDetails(),i.inView?await(0,s.P0)(r.Gh.ShowCommitsInView,{refs:[i.commit.sha],repoPath:i.commit.repoPath}):await(0,n.m)({command:"show",state:{repo:i.commit.repoPath,reference:i.commit,fileName:e}})}catch(e){d.Yd.error(e,"ShowQuickCommitFileDetailsCommand"),(0,u.W8)("Unable to show commit file details")}}};br=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?yr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&vr(t,i,s),s})([(0,s.WD)()],br);var Cr=Object.defineProperty,Ar=Object.getOwnPropertyDescriptor;let Pr=class extends o.Lk{constructor(e){super([r.Gh.OpenFileHistory,r.Gh.OpenFolderHistory,r.Gh.ShowQuickFileHistory,r.Gh.QuickOpenFileHistory,r.Gh.Deprecated_ShowFileHistoryInView]),this.container=e}preExecute(e,t){return e.command!==r.Gh.OpenFileHistory&&e.command!==r.Gh.OpenFolderHistory&&e.command!==r.Gh.Deprecated_ShowFileHistoryInView||((t={...t}).showInSideBar=!0),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,o.SX)(t,e)))return;const r=await h.YY.fromUri(t);i?.showInSideBar?await this.container.fileHistoryView.showHistoryForUri(r):await(0,n.m)({command:"log",state:null!=r?.repoPath?{repo:r.repoPath,reference:i?.reference??"HEAD",fileName:r.relativePath}:{}})}};Pr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ar(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Cr(t,i,s),s})([(0,s.WD)()],Pr);var Sr=Object.defineProperty,Rr=Object.getOwnPropertyDescriptor;let Dr=class extends o.mY{constructor(e){super(r.Gh.ShowQuickRepoStatus),this.container=e}async execute(e){return(0,n.m)({command:"status",state:{repo:e?.repoPath}})}};Dr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Rr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Sr(t,i,s),s})([(0,s.WD)()],Dr);var kr=Object.defineProperty,_r=Object.getOwnPropertyDescriptor;let Tr=class extends o.mY{constructor(e){super(r.Gh.ShowQuickStashList),this.container=e}execute(e){return(0,n.m)({command:"stash",state:{subcommand:"list",repo:e?.repoPath}})}};Tr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?_r(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&kr(t,i,s),s})([(0,s.WD)()],Tr);var Fr=Object.defineProperty,Or=Object.getOwnPropertyDescriptor;let Er=class extends o.mY{constructor(e){super([r.Gh.ShowBranchesView,r.Gh.ShowCommitDetailsView,r.Gh.ShowCommitsView,r.Gh.ShowContributorsView,r.Gh.ShowFileHistoryView,r.Gh.ShowGraphView,r.Gh.ShowHomeView,r.Gh.ShowLineHistoryView,r.Gh.ShowRemotesView,r.Gh.ShowRepositoriesView,r.Gh.ShowSearchAndCompareView,r.Gh.ShowStashesView,r.Gh.ShowTagsView,r.Gh.ShowTimelineView,r.Gh.ShowWorktreesView,r.Gh.ShowWorkspacesView]),this.container=e}preExecute(e,...t){return this.execute(e,...t)}async execute(e,...t){switch(e.command){case r.Gh.ShowBranchesView:return this.container.branchesView.show();case r.Gh.ShowCommitDetailsView:return this.container.commitDetailsView.show();case r.Gh.ShowCommitsView:return this.container.commitsView.show();case r.Gh.ShowContributorsView:return this.container.contributorsView.show();case r.Gh.ShowFileHistoryView:return this.container.fileHistoryView.show();case r.Gh.ShowHomeView:return this.container.homeView.show();case r.Gh.ShowAccountView:return this.container.accountView.show();case r.Gh.ShowGraphView:{let i=t;if("scm"===e.type&&null!=e.scm?.rootUri){const r=this.container.git.getRepository(e.scm.rootUri);i=null!=r?[r,...t]:t}return this.container.graphView.show(void 0,...i)}case r.Gh.ShowLineHistoryView:return this.container.lineHistoryView.show();case r.Gh.ShowRemotesView:return this.container.remotesView.show();case r.Gh.ShowRepositoriesView:return this.container.repositoriesView.show();case r.Gh.ShowSearchAndCompareView:return this.container.searchAndCompareView.show();case r.Gh.ShowStashesView:return this.container.stashesView.show();case r.Gh.ShowTagsView:return this.container.tagsView.show();case r.Gh.ShowTimelineView:return this.container.timelineView.show();case r.Gh.ShowWorktreesView:return this.container.worktreesView.show();case r.Gh.ShowWorkspacesView:return this.container.workspacesView.show()}return Promise.resolve(void 0)}};Er=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Or(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Fr(t,i,s),s})([(0,s.WD)()],Er);var $r=i(252),Ir=Object.defineProperty,xr=Object.getOwnPropertyDescriptor;let Br=class extends o.mY{constructor(e){super(r.Gh.StashApply),this.container=e}async preExecute(e,t){return(0,o.en)(e)?(null==e.node.commit.message&&await e.node.commit.ensureFullDetails(),t={...t,stashItem:e.node.commit}):(0,o.pT)(e)&&(t={...t,repoPath:e.node.repo.path}),this.execute(t)}async execute(e){return e?.deleteAfter?(0,$r.Sw)(e?.repoPath??e?.stashItem?.repoPath,e?.stashItem):(0,$r.nn)(e?.repoPath??e?.stashItem?.repoPath,e?.stashItem)}};Br=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?xr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ir(t,i,s),s})([(0,s.WD)()],Br);var Wr=i(8887),Mr=Object.defineProperty,Lr=Object.getOwnPropertyDescriptor;let Ur=class extends o.mY{constructor(e){super([r.Gh.StashSave,r.Gh.StashSaveFiles]),this.container=e}async preExecute(e,t){if((0,o.E9)(e))(t={...t}).repoPath=e.node.file.repoPath??e.node.repoPath,t.uris=[h.YY.fromFile(e.node.file,t.repoPath)];else if((0,o.pT)(e))(t={...t}).repoPath=e.node.repo.path;else if((0,o.l7)(e))(t={...t}).repoPath=e.node.repoPath;else if("scm-states"===e.type)(t={...t}).uris=e.scmResourceStates.map((e=>e.resourceUri)),t.repoPath=(await this.container.git.getOrOpenRepository(t.uris[0]))?.path,e.scmResourceStates.some((e=>e.resourceGroupType===Le.Index))||(t.keepStaged=!0);else if("scm-groups"===e.type){t={...t};let i=!0,r=!1;const n=e.scmResourceGroups.reduce(((e,t)=>{const n="index"===t.id;return i&&!n&&(i=!1),n&&(r=!0),e.concat(t.resourceStates.map((e=>e.resourceUri)))}),[]),s=await this.container.git.getOrOpenRepository(n[0]);let o=!1;i&&null!=s&&(o=await s.supports(Wr.A.StashOnlyStaged)),o?(t.onlyStaged=!0,t.onlyStagedUris=n):(t.uris=n,t.repoPath=s?.path,r||(t.keepStaged=!0))}return this.execute(t)}execute(e){return(0,$r.VF)(e?.repoPath,e?.uris,e?.message,e?.keepStaged,e?.onlyStaged,e?.onlyStagedUris)}};Ur=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Lr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Mr(t,i,s),s})([(0,s.WD)()],Ur);var Nr=Object.defineProperty,Gr=Object.getOwnPropertyDescriptor;let Hr=class extends o.mY{constructor(e){super(r.Gh.SwitchAIModel),this.container=e}async execute(){const e=await async function(){const e=H.D.get("ai.experimental.provider")??"openai";let t=H.D.get(`ai.experimental.${e}.model`);null==t&&(t="anthropic"===e?"claude-v1":"gpt-3.5-turbo");const i=[{label:"OpenAI",kind:v.QuickPickItemKind.Separator},{label:"OpenAI",description:"GPT 3.5 Turbo",provider:"openai",model:"gpt-3.5-turbo"},{label:"OpenAI",description:"GPT 3.5 Turbo 16k",provider:"openai",model:"gpt-3.5-turbo-16k"},{label:"OpenAI",description:"GPT 4",provider:"openai",model:"gpt-4"},{label:"OpenAI",description:"GPT 4 32k",provider:"openai",model:"gpt-4-32k"},{label:"Anthropic",kind:v.QuickPickItemKind.Separator},{label:"Anthropic",description:"Claude v1",provider:"anthropic",model:"claude-v1"},{label:"Anthropic",description:"Claude v1 100k",provider:"anthropic",model:"claude-v1-100k"},{label:"Anthropic",description:"Claude Instant v1",provider:"anthropic",model:"claude-instant-v1"},{label:"Anthropic",description:"Claude Instant v1 100k",provider:"anthropic",model:"claude-instant-v1-100k"},{label:"Anthropic",description:"Claude 2",provider:"anthropic",model:"claude-2"}];for(const e of i)if(e.kind!==v.QuickPickItemKind.Separator&&e.model===t){e.picked=!0;break}return await v.window.showQuickPick(i,{title:"Switch AI Model",placeHolder:"select an AI model to use for experimental AI features",matchOnDescription:!0})}();null!=e&&(await H.D.updateEffective("ai.experimental.provider",e.provider),await H.D.updateEffective(`ai.experimental.${e.provider}.model`,e.model))}};Hr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Gr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Nr(t,i,s),s})([(0,s.WD)()],Hr);var Vr=i(6004),qr=Object.defineProperty,Qr=Object.getOwnPropertyDescriptor,Yr=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Qr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&qr(t,i,s),s};let jr=class extends o.mY{constructor(e){super(r.Gh.SwitchMode),this.container=e}async execute(){const e=(0,Vr.UH)(),t=await async function(){const e=H.D.get("modes");if(null==e)return;const t=Object.keys(e);if(0===t.length)return;const i=H.D.get("mode.active"),n=t.map((t=>{const n=e[t];return{label:`${i===t?"$(check)  ":"     "}${n.name} mode`,description:n.description?` ${r.NE.Dash}  ${n.description}`:"",key:t}}));return i&&null!=e[i]&&n.unshift({label:`Exit ${e[i].name} mode`,key:void 0}),await v.window.showQuickPick(n,{placeHolder:"select a GitLens mode to enter"})}();if(void 0===t)return;(0,Vr.lH)(e,` — mode=${t.key??""}`);const i=H.D.get("mode.active");if(i!==t.key){if(null!=i&&0!==i.length){const e=H.D.get("modes"),r=e?.[i].annotations;if(null!=r){r!==(null!=t.key?e?.[t.key].annotations:void 0)&&await this.container.fileAnnotations.clearAll()}}await H.D.update("mode.active",t.key,v.ConfigurationTarget.Global)}}};Yr([(0,it.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],jr.prototype,"execute",1),jr=Yr([(0,s.WD)()],jr);let zr=class extends o.mY{constructor(e){super(r.Gh.ToggleReviewMode),this.container=e}async execute(){const e=H.D.get("modes");if(null==e||!Object.keys(e).includes("review"))return;const t="review"===H.D.get("mode.active")?void 0:"review";await H.D.update("mode.active",t,v.ConfigurationTarget.Global)}};Yr([(0,it.cM)({args:!1,singleLine:!0,timed:!1})],zr.prototype,"execute",1),zr=Yr([(0,s.WD)()],zr);let Kr=class extends o.mY{constructor(e){super(r.Gh.ToggleZenMode),this.container=e}async execute(){const e=H.D.get("modes");if(null==e||!Object.keys(e).includes("zen"))return;const t="zen"===H.D.get("mode.active")?void 0:"zen";await H.D.update("mode.active",t,v.ConfigurationTarget.Global)}};Yr([(0,it.cM)({args:!1,singleLine:!0,timed:!1})],Kr.prototype,"execute",1),Kr=Yr([(0,s.WD)()],Kr);var Jr=Object.defineProperty,Xr=Object.getOwnPropertyDescriptor;let Zr=class extends o.mY{constructor(e){super(r.Gh.ToggleCodeLens),this.container=e}execute(){this.container.codeLens.toggleCodeLens()}};Zr=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Xr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Jr(t,i,s),s})([(0,s.WD)()],Zr);var en=Object.defineProperty,tn=Object.getOwnPropertyDescriptor,rn=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?tn(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&en(t,i,s),s};let nn=class extends o._l{constructor(e){super([r.Gh.ClearFileAnnotations,r.Gh.ComputingFileAnnotations]),this.container=e}async execute(e,t,i){if(null!=e&&!(0,m.PH)(e)&&null!=i&&!b.n.equals(i,e.document.uri)){const t=v.window.visibleTextEditors.find((e=>b.n.equals(i,e.document.uri)));null!=t&&(e=t)}try{await this.container.fileAnnotations.clear(e)}catch(e){d.Yd.error(e,"ClearFileAnnotationsCommand"),(0,u.W8)("Unable to clear file annotations")}}};nn=rn([(0,s.WD)()],nn);let sn=class extends o.pu{constructor(e){super([r.Gh.ToggleFileBlame,r.Gh.ToggleFileBlameInDiffLeft,r.Gh.ToggleFileBlameInDiffRight]),this.container=e}execute(e,t,i){return ln(this.container,e,t,{...i,type:mt.VP.Blame})}};sn=rn([(0,s.WD)()],sn);let on=class extends o.pu{constructor(e){super(r.Gh.ToggleFileChanges),this.container=e}execute(e,t,i){return ln(this.container,e,t,{...i,type:mt.VP.Changes})}};on=rn([(0,s.WD)()],on);let an=class extends o.pu{constructor(e){super([r.Gh.ToggleFileHeatmap,r.Gh.ToggleFileHeatmapInDiffLeft,r.Gh.ToggleFileHeatmapInDiffRight]),this.container=e}execute(e,t,i){return ln(this.container,e,t,{...i,type:mt.VP.Heatmap})}};async function ln(e,t,i,r){if(null!=t&&!(0,m.PH)(t)&&null!=i&&!b.n.equals(i,t.document.uri)){const e=v.window.visibleTextEditors.find((e=>b.n.equals(i,e.document.uri)));null!=e&&(t=e)}try{r={type:mt.VP.Blame,...r},await e.fileAnnotations.toggle(t,r.type,{selection:r.context?.selection??{line:t?.selection.active.line},...r.context},r.on)}catch(e){d.Yd.error(e,"ToggleFileAnnotationsCommand"),(0,u.W8)(`Unable to toggle file ${r.type} annotations`)}}an=rn([(0,s.WD)()],an);var cn=Object.defineProperty,hn=Object.getOwnPropertyDescriptor;let un=class extends o.pu{constructor(e){super(r.Gh.ToggleLineBlame),this.container=e}async execute(e,t){try{await this.container.lineAnnotations.toggle(e)}catch(e){d.Yd.error(e,"ToggleLineBlameCommand"),(0,u.W8)("Unable to toggle line blame annotations")}}};un=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?hn(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&cn(t,i,s),s})([(0,s.WD)()],un);var dn=Object.defineProperty,pn=Object.getOwnPropertyDescriptor;let mn=class extends o.mY{constructor(e){super(r.Gh.GetStarted),this.container=e}execute(e){const t=this.container.context.extension.id;e===t&&(e=void 0),(0,m.lN)(t,e??"gitlens.welcome",void 0,!1)}};mn=((e,t,i,r)=>{for(var n,s=r>1?void 0:r?pn(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&dn(t,i,s),s})([(0,s.WD)()],mn)},7139:(e,t,i)=>{i.d(t,{C$:()=>P,DW:()=>A,E9:()=>v,F4:()=>C,Lk:()=>ActiveEditorCachedCommand,Mg:()=>w,O$:()=>b,P:()=>T,Qo:()=>g,SX:()=>p,_5:()=>D,_l:()=>EditorCommand,d$:()=>y,en:()=>f,jT:()=>m,l7:()=>R,l8:()=>O,mY:()=>Command,pT:()=>S,pu:()=>ActiveEditorCommand});var r=i(9496),n=i(5367),s=i(6450),o=i(1719),a=i(3050),l=i(3646),c=i(9502),h=i(9529),u=i(9796),d=i(6922);function p(e,t){return t?.document?.uri??e}function m(e){return"timeline-item:git"===e.type}function g(e){return"viewItem"===e.type&&(0,n.BF)(e.node.branch)}function f(e){return"viewItem"===e.type&&(0,s.f_)(e.node.commit)}function w(e){return"viewItem"===e.type&&o.V.is(e.node.contributor)}function v(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&(null!=t.file.repoPath||null!=t.repoPath)}function y(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&(0,s.f_)(t.commit)&&(null!=t.file.repoPath||null!=t.repoPath)}function b(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&null!=t.ref1&&null!=t.ref2&&(null!=t.file.repoPath||null!=t.repoPath)}function C(e){return"viewItem"===e.type&&("string"==typeof e.node.compareRef?.ref&&"string"==typeof e.node.compareWithRef?.ref)}function A(e){return"viewItem"===e.type&&e.node instanceof d.bT&&e.node instanceof d.RW}function P(e){return"viewItem"===e.type&&a.ss.is(e.node.remote)}function S(e){return"viewItem"===e.type&&e.node.repo instanceof l._j}function R(e){return"viewItem"===e.type&&"string"==typeof e.node.repoPath}function D(e){return"viewItem"===e.type&&(0,c.YR)(e.node.tag)}function k(e){return null!=e&&(null!=e.id&&null!=e.label&&null!=e.resourceStates&&Array.isArray(e.resourceStates))}function _(e){return null!=e&&null!=e.resourceUri}class Command{static getMarkdownCommandArgsCore(e,t){return`command:${e}?${encodeURIComponent(JSON.stringify(t))}`}contextParsingOptions={expectsEditor:!1};_disposable;constructor(e){if("string"==typeof e)return void(this._disposable=(0,h.xR)(e,((...t)=>this._execute(e,...t)),this));const t=e.map((e=>(0,h.xR)(e,((...t)=>this._execute(e,...t)),this)));this._disposable=r.Disposable.from(...t)}dispose(){this._disposable.dispose()}preExecute(e,...t){return this.execute(...t)}_execute(e,...t){const[i,r]=T(e,{...this.contextParsingOptions},...t);return Array.isArray(i)?(0,u.df)(this.preExecute,i.map((e=>[e,...r])),this):this.preExecute(i,...r)}}function T(e,t,...i){let n,s=i[0];if(t?.expectsEditor)if((null==s||null!=s.id&&null!=s.document?.uri)&&(n=s,s=(i=i.slice(1))[0]),i.length>0&&(null==s||s instanceof r.Uri)){const[t,...s]=i;if(null!=t){null!=n||t.toString()!==r.window.activeTextEditor?.document.uri.toString()&&!e.endsWith("InDiffLeft")||(n=r.window.activeTextEditor);const i=s[0];return null!=i&&Array.isArray(i)&&0!==i.length&&i[0]instanceof r.Uri?[{command:e,type:"uris",editor:n,uri:t,uris:i},s.slice(1)]:[{command:e,type:"uri",editor:n,uri:t},s]}i=i.slice(1)}else if(null==n){if(null!=s&&"object"==typeof s&&"lineNumber"in s&&"uri"in s){const[,...t]=i;return[{command:e,type:"editorLine",editor:void 0,line:s.lineNumber-1,uri:s.uri},t]}n=r.window.activeTextEditor}if(s instanceof d.Re){let[t,...r]=i;if(s=r[0],Array.isArray(s)&&s[0]instanceof d.Re){let i;[i,...r]=r;const n=[];for(const r of i)r?.constructor===t.constructor&&n.push({command:e,type:"viewItem",node:r,uri:r.uri});return[n,r]}return[{command:e,type:"viewItem",node:t,uri:t.uri},r]}if(_(s)){const t=[];let r=0;for(const e of i){if(!_(e))break;r++,t.push(e)}return[{command:e,type:"scm-states",scmResourceStates:t,uri:t[0].resourceUri},i.slice(r)]}if(k(s)){const t=[];let r=0;for(const e of i){if(!k(e))break;r++,t.push(e)}return[{command:e,type:"scm-groups",scmResourceGroups:t},i.slice(r)]}if(null!=(o=s)&&function(e){return null!=e&&null!=e.timestamp&&null!=e.label}(o)&&null!=o.ref&&null!=o.previousRef&&null!=o.message){const[t,r,...n]=i;return[{command:e,type:"timeline-item:git",item:t,uri:r},n]}var o,a;if(null!=(a=s)&&null!=a.id&&null!=a.rootUri&&null!=a.inputBox&&null!=a.statusBarCommands){const[t,...r]=i;return[{command:e,type:"scm",scm:t},r]}return[{command:e,type:"unknown",editor:n,uri:n?.document.uri},i]}class ActiveEditorCommand extends Command{contextParsingOptions={expectsEditor:!0};preExecute(e,...t){return this.execute(e.editor,e.uri,...t)}_execute(e,...t){return super._execute(e,void 0,...t)}}let F;function O(){return F}class ActiveEditorCachedCommand extends ActiveEditorCommand{_execute(e,...t){return F={command:e,args:t},super._execute(e,...t)}}class EditorCommand{_disposable;constructor(e){Array.isArray(e)||(e=[e]);const t=[];for(const i of e)t.push(r.commands.registerTextEditorCommand(i,((e,t,...r)=>this.executeCore(i,e,t,...r)),this));this._disposable=r.Disposable.from(...t)}dispose(){this._disposable.dispose()}executeCore(e,t,i,...r){return this.execute(t,i,...r)}}},2967:(e,t,i)=>{i.d(t,{K:()=>PickCommandStep,I:()=>le});var r=i(2540),n=i(5148),s=i(2061),o=i(9496),a=i(4321),l=i(3646);function c(e,t,i,r){return{...i,item:t,picked:h(e,t),context:r}}function h(e,t){return void 0===t?0===e.length:Array.isArray(t)?0===t.length?0===e.length:t.every((t=>e.includes(t))):e.includes(t)}var u=i(3620),d=i(6270);function p(e){if(!(e.repo instanceof l._j&&"create"===e.subcommand))throw new Error("Missing repository")}function m(e){if(!(e.repo instanceof l._j&&"delete"===e.subcommand))throw new Error("Missing repository")}function g(e){if(!(e.repo instanceof l._j&&"rename"===e.subcommand))throw new Error("Missing repository")}function f(e){if(!Array.isArray(e.references))throw new Error("Missing branches")}const w=new Map([["create","Create"],["delete","Delete"],["rename","Rename"]]);function v(e,t){return null==t?e:`${w.get(t)} ${e}`}class BranchGitCommand extends d.tR{subcommand;constructor(e,t){super(e,"branch","branch","Branch",{description:"create, rename, or delete branches"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t?.state.subcommand){case"create":case"rename":null!=t.state.reference&&i++,null!=t.state.name&&i++;break;case"delete":null==t.state.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&"rename"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={associatedView:this.container.branchesView,repos:this.container.git.openRepositories,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===d.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=v("delete"===e.subcommand?"Branches":this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)continue;e.repo=i}switch(e.subcommand){case"create":p(e),yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":m(e),yield*this.deleteCommandSteps(e,t);break;case"rename":g(e),yield*this.renameCommandSteps(e,t),e.name=void 0;break;default:(0,d.uZ)(e)}i&&e.counter--}return e.counter<0?d.Vd:void 0}*pickSubcommandStep(e){const t=(0,d.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new branch",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified branches",picked:"delete"===e.subcommand,item:"delete"},{label:"rename",description:"renames the specified branch",picked:"rename"===e.subcommand,item:"rename"}],buttons:[o.QuickInputButtons.Back]}),i=yield t;return(0,d.i9)(t,e,i)?i[0].item:d.Vd}async*createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new branch from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:(0,a.FT)(e.reference)?e.reference.ref:void 0});if(i===d.Vd)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*(0,d.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${(0,a.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:e.name??(0,a.Av)(e.reference)});if(i===d.Vd)continue;e.name=i}if(this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===d.Vd)continue;e.flags=i}(0,d.uZ)(e),e.flags.includes("--switch")?await e.repo.switch(e.reference.ref,{createBranch:e.name}):e.repo.branch(...e.flags,e.name,e.reference.ref)}}*createCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will create a new branch named ${e.name} from ${(0,a.Wh)(e.reference)}`}),c(e.flags,["--switch"],{label:`${t.title} and Switch`,description:"--switch",detail:`Will create and switch to a new branch named ${e.name} from ${(0,a.Wh)(e.reference)}`})],t),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}async*deleteCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||Array.isArray(e.references)&&0===e.references.length){t.title=v("Branches",e.subcommand);const i=yield*(0,d.FO)(e,t,{filter:e=>!e.current,picked:e.references?.map((e=>e.ref)),placeholder:"Choose branches to delete",sort:{current:!1,missingUpstream:!0}});if(i===d.Vd)break;e.references=i}t.title=v((0,u._6)("Branch",e.references.length,{only:!0,plural:"Branches"}),e.subcommand),f(e);const i=yield*this.deleteCommandConfirmStep(e,t);i!==d.Vd&&(e.flags=i,(0,d.uZ)(e),e.repo.branchDelete(e.references,{force:e.flags.includes("--force"),remote:e.flags.includes("--remotes")}))}}*deleteCommandConfirmStep(e,t){const i=[c(e.flags,[],{label:t.title,detail:`Will delete ${(0,a.Wh)(e.references)}`})];e.references.every((e=>e.remote))||(i.push(c(e.flags,["--force"],{label:`Force ${t.title}`,description:"--force",detail:`Will forcibly delete ${(0,a.Wh)(e.references)}`})),e.references.some((e=>null!=e.upstream))&&i.push(c(e.flags,["--remotes"],{label:`${t.title} & Remote${e.references.filter((e=>!e.remote)).length>1?"s":""}`,description:"--remotes",detail:`Will delete ${(0,a.Wh)(e.references)} and any remote tracking branches`}),c(e.flags,["--force","--remotes"],{label:`Force ${t.title} & Remote${e.references.filter((e=>!e.remote)).length>1?"s":""}`,description:"--force --remotes",detail:`Will forcibly delete ${(0,a.Wh)(e.references)} and any remote tracking branches`})));const r=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),i,t),n=yield r;return(0,d.i9)(r,e,n)?n[0].item:d.Vd}async*renameCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.sd)(e,t,{filter:e=>!e.remote,picked:e.reference?.ref,placeholder:"Choose a branch to rename"});if(i===d.Vd)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*(0,d.f6)(e,t,{placeholder:`Please provide a new name for ${(0,a.Wh)(e.reference,{icon:!1})}`,titleContext:` ${(0,a.Wh)(e.reference,!1)}`,value:e.name??e.reference.name});if(i===d.Vd)continue;e.name=i}const i=yield*this.renameCommandConfirmStep(e,t);i!==d.Vd&&(e.flags=i,(0,d.uZ)(e),e.repo.branch(...e.flags,e.reference.ref,e.name))}}*renameCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,["-m"],{label:t.title,detail:`Will rename ${(0,a.Wh)(e.reference)} to ${e.name}`})],t),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}}class CherryPickGitCommand extends d.tR{constructor(e,t){super(e,"cherry-pick","cherry-pick","Cherry Pick",{description:"integrates changes from specified commits into the current branch"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.cherryPick(...e.flags,...e.references.map((e=>e.ref)).reverse())}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"cherry"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${(0,a.Wh)(t.destination,{icon:!1})}`,e.counter<2||null==e.references||0===e.references.length){const r=yield*(0,d.Yv)(e,t,{filter:{branches:e=>e.id!==t.destination.id},placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to cherry-pick from`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.references?.[0]?.ref:void 0});if(r===d.Vd){i&&e.counter--;continue}(0,a.FT)(r)?(e.references=[r],t.selectedBranchOrTag=void 0):t.selectedBranchOrTag=r}if(e.counter<3&&null!=t.selectedBranchOrTag){const i=(0,a.oI)(t.destination.ref,t.selectedBranchOrTag.ref);let r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:!1}),t.cache.set(i,r));const n=yield*(0,d.Rj)(e,t,{log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),picked:e.references?.map((e=>e.ref)),placeholder:(e,t)=>null==t?`No pickable commits found on ${(0,a.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose commits to cherry-pick into ${(0,a.Wh)(e.destination,{icon:!1})}`});if(n===d.Vd)continue;e.references=n}if(this.confirm(e.confirm)){const i=yield*this.confirmStep(e,t);if(i===d.Vd)continue;e.flags=i}(0,d.uZ)(e),this.execute(e)}return e.counter<0?d.Vd:void 0}*confirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will apply ${(0,a.Wh)(e.references)} to ${(0,a.Wh)(t.destination)}`}),c(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will edit and apply ${(0,a.Wh)(e.references)} to ${(0,a.Wh)(t.destination)}`}),c(e.flags,["--no-commit"],{label:`${this.title} without Committing`,description:"--no-commit",detail:`Will apply ${(0,a.Wh)(e.references)} to ${(0,a.Wh)(t.destination)} without Committing`})],t),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}}var y=i(9529),b=i(3700);class CoAuthorsGitCommand extends d.tR{constructor(e,t){super(e,"co-authors","co-authors","Add Co-Authors",{description:"adds co-authors to a commit message"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.contributors||Array.isArray(t.state.contributors)&&0===t.state.contributors.length||i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async execute(e){const t=await this.container.git.getOrOpenScmRepository(e.repo.path);if(null==t)return;let i=t.inputBox.value;const r=i.indexOf("Co-authored-by: ");-1!==r&&(i=i.substring(0,r-1).trimRight()),null==e.contributors||Array.isArray(e.contributors)||(e.contributors=[e.contributors]);for(const t of e.contributors){let e;e=i.includes("Co-authored-by: ")?"\n":0!==i.length&&i.endsWith("\n")?"\n\n":"\n\n\n",i+=`${e}Co-authored-by: ${t.getCoauthor()}`}t.inputBox.value=i,await(0,y.dO)("workbench.view.scm")}async*steps(e){const t={repos:this.container.git.openRepositories,activeRepo:void 0,associatedView:this.container.contributorsView,title:this.title},i=await this.container.git.getOpenScmRepositories();i.length&&(t.repos=t.repos.filter((e=>i.find((t=>(0,b.AH)(t.rootUri.fsPath)===e.path)))),t.activeRepo=await this.container.git.getOrOpenRepositoryForEditor(),null==t.activeRepo||i.some((e=>e.rootUri.fsPath===t.activeRepo.path))||(t.activeRepo=void 0));let r=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(r=!1,1===t.repos.length)r=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(e.counter<2||null==e.contributors){const i=yield*(0,d.bR)(e,t,"Choose contributors to add as co-authors");if(i===d.Vd){r&&e.counter--;continue}e.contributors=i}(0,d.uZ)(e),this.execute(e)}return e.counter<0?d.Vd:void 0}}var C=i(5255),A=i(2800),P=i(7512);class FetchGitCommand extends d.tR{constructor(e,t){super(e,"fetch","fetch","Fetch",{description:"fetches changes from one or more remotes"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){return(0,a.UR)(e.reference)?e.repos[0].fetch({branch:e.reference}):this.container.git.fetchAll(e.repos,{all:e.flags.includes("--all"),prune:e.flags.includes("--prune")})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===d.Vd)break;e.repos=i}if(this.confirm(e.confirm)){const r=yield*this.confirmStep(e,t);if(r===d.Vd){i&&e.counter--;continue}e.flags=r}(0,d.uZ)(e),this.execute(e)}return e.counter<0?d.Vd:void 0}async*confirmStep(e,t){let i,r="";if(1===e.repos.length){const t=await e.repos[0].getLastFetched();0!==t&&(r=`${(0,u.vk)(C.NE.Dot,2,2)}Last fetched ${(0,P.Zh)(new Date(t))}`)}if(1===e.repos.length&&(0,a.UR)(e.reference))i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t,r),[c(e.flags,[],{label:this.title,detail:`Will fetch ${(0,a.Wh)(e.reference)}`})]);else{const n=1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`;i=(0,d.Tv)((0,d.C8)(`Confirm ${this.title}`,e,t,r),[c(e.flags,[],{label:this.title,detail:`Will fetch ${n}`}),c(e.flags,["--prune"],{label:`${this.title} & Prune`,description:"--prune",detail:`Will fetch and prune ${n}`}),c(e.flags,["--all"],{label:`${this.title} All`,description:"--all",detail:`Will fetch all remotes of ${n}`}),c(e.flags,["--all","--prune"],{label:`${this.title} All & Prune`,description:"--all --prune",detail:`Will fetch and prune all remotes of ${n}`})],t)}const n=yield i;return(0,d.i9)(i,e,n)?n[0].item:d.Vd}}var S=i(6897),R=i(6450),D=i(1774);function k(e){if(!(e.repo instanceof l._j))throw new Error("Missing repository")}class LogGitCommand extends d.tR{constructor(e,t){super(e,"log","history","Commits",{description:"aka log, shows commit history"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&(i++,"HEAD"!==t.state.reference&&(0,a.FT)(t.state.reference)&&!(0,a.Nn)(t.state.reference)&&i++),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"log"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,selectedBranchOrTag:void 0,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(k(e),"HEAD"===e.reference){const t=await e.repo.getBranch();e.reference=t}if(e.counter<2||null==e.reference){const r=yield*(0,d.Yv)(e,t,{placeholder:"Choose a branch or tag to show its commit history",picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,ranges:!0});if(r===d.Vd){i&&e.counter--;continue}e.reference=r,t.selectedBranchOrTag=void 0}if((0,a.FT)(e.reference)&&!(0,a.Nn)(e.reference)||(t.selectedBranchOrTag=e.reference),t.title=`${this.title}${(0,u.vk)(C.NE.Dot,2,2)}${(0,a.Wh)(t.selectedBranchOrTag,{icon:!1})}`,e.fileName&&(t.title+=`${(0,u.vk)(C.NE.Dot,2,2)}${(0,D.d)(e.fileName,{fileOnly:!0,truncateTo:C.d$-t.title.length-3})}`),e.counter<3&&null!=t.selectedBranchOrTag){const i=t.selectedBranchOrTag.ref;let r=t.cache.get(i);null==r&&(r=null!=e.fileName?this.container.git.getLogForFile(e.repo.path,e.fileName,{ref:i}):this.container.git.getLog(e.repo.path,{ref:i}),t.cache.set(i,r));const n=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found in ${(0,a.Wh)(e.selectedBranchOrTag,{icon:!1})}`:"Choose a commit",picked:e.reference?.ref});if(n===d.Vd)continue;e.reference=n}let r;e.reference instanceof R.aM&&null==e.reference.file||(e.reference=await this.container.git.getCommit(e.repo.path,e.reference.ref)),e.openPickInView?((0,S.Fw)(e.reference,{pin:!1,preserveFocus:!1}),r=d.Vd):r=yield*le(this.container,{command:"show",state:{repo:e.repo,reference:e.reference,fileName:e.fileName}},this.pickedVia),e.counter--,r===d.Vd&&(0,d.uZ)(e)}return e.counter<0?d.Vd:void 0}}var _=i(3599);class MergeGitCommand extends d.tR{constructor(e,t){super(e,"merge","merge","Merge",{description:"integrates changes from a specified branch into the current branch"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.merge(...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${(0,a.Wh)(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){const r=new d.v_(t.pickCommit,t,(()=>{t.pickCommit=!t.pickCommit,r.on=t.pickCommit})),n=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to merge`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[r]});if(n===d.Vd){i&&e.counter--;continue}e.reference=n,t.selectedBranchOrTag=void 0}if((0,a.FT)(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){const i=t.selectedBranchOrTag.ref;let r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:!1}),t.cache.set(i,r));const n=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${(0,a.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to merge into ${(0,a.Wh)(e.destination,{icon:!1})}`,picked:e.reference?.ref});if(n===d.Vd)continue;e.reference=n}const r=yield*this.confirmStep(e,t);r!==d.Vd&&(e.flags=r,(0,d.uZ)(e),this.execute(e))}return e.counter<0?d.Vd:void 0}async*confirmStep(e,t){const i=await this.container.git.getAheadBehindCommitCount(e.repo.path,[(0,a.oI)(t.destination.name,e.reference.name)]),r=null!=i?i.ahead+i.behind:0;if(0===r){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`${(0,a.Wh)(t.destination,{capitalize:!0})} is up to date with ${(0,a.Wh)(e.reference)}`})),r=yield i;return(0,d.i9)(i,e,r),d.Vd}const n=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will merge ${(0,u._6)("commit",r)} from ${(0,a.Wh)(e.reference)} into ${(0,a.Wh)(t.destination)}`}),c(e.flags,["--ff-only"],{label:`Fast-forward ${this.title}`,description:"--ff-only",detail:`Will fast-forward merge ${(0,u._6)("commit",r)} from ${(0,a.Wh)(e.reference)} into ${(0,a.Wh)(t.destination)}`}),c(e.flags,["--squash"],{label:`Squash ${this.title}`,description:"--squash",detail:`Will squash ${(0,u._6)("commit",r)} from ${(0,a.Wh)(e.reference)} into one when merging into ${(0,a.Wh)(t.destination)}`}),c(e.flags,["--no-ff"],{label:`${this.title} without Fast-Forwarding`,description:"--no-ff",detail:`Will create a merge commit when merging ${(0,u._6)("commit",r)} from ${(0,a.Wh)(e.reference)} into ${(0,a.Wh)(t.destination)}`}),c(e.flags,["--no-ff","--no-commit"],{label:`${this.title} without Fast-Forwarding or Committing`,description:"--no-ff --no-commit",detail:`Will merge ${(0,u._6)("commit",r)} from ${(0,a.Wh)(e.reference)} into ${(0,a.Wh)(t.destination)} without Committing`})]),s=yield n;return(0,d.i9)(n,e,s)?s[0].item:d.Vd}}var T=i(5367);class PullGitCommand extends d.tR{constructor(e,t){super(e,"pull","pull","Pull",{description:"fetches and integrates changes from a remote into the current branch"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){if((0,a.UR)(e.reference)&&(!(0,T.BF)(e.reference)||!e.reference.current)){const t=await e.repos[0].getBranch();if(t?.name!==e.reference.name)return e.repos[0].fetch({branch:e.reference,pull:!0})}return this.container.git.pullAll(e.repos,{rebase:e.flags.includes("--rebase")})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===d.Vd)break;e.repos=i}if(this.confirm(e.confirm)){const r=yield*this.confirmStep(e,t);if(r===d.Vd){i&&e.counter--;continue}e.flags=r}(0,d.uZ)(e),this.execute(e)}return e.counter<0?d.Vd:void 0}async*confirmStep(e,t){let i;if(e.repos.length>1)i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will pull ${e.repos.length} repositories`}),c(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull ${e.repos.length} repositories by rebasing`})]);else if((0,a.UR)(e.reference))if(e.reference.remote)i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a remote branch"}));else{const[r]=e.repos,n=await r.getBranch(e.reference.name);i=null==n?.upstream?this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a branch until it has been published"})):this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:"Will pull"+(n.state.behind?` ${(0,u._6)("commit",n.state.behind)} into ${(0,a.Wh)(n)}`:` into ${(0,a.Wh)(n)}`)})])}else{const[r]=e.repos,[n,s]=await Promise.all([r.getStatus(),r.getLastFetched()]);let o="";0!==s&&(o=`${(0,u.vk)(C.NE.Dot,2,2)}Last fetched ${(0,P.Zh)(new Date(s))}`);const a=null!=n?.state.behind?` ${(0,u._6)("commit",n.state.behind)} into $(repo) ${r.formattedName}`:` into $(repo) ${r.formattedName}`;i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t,o),[c(e.flags,[],{label:this.title,detail:`Will pull${a}`}),c(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull and rebase${a}`})],void 0,{additionalButtons:[d.My],onDidClickButton:async(e,i)=>{if(i!==d.My||e.busy)return!1;e.title=`Confirm ${t.title}${(0,u.vk)(C.NE.Dot,2,2)}Fetching${C.NE.Ellipsis}`,e.busy=!0;try{return await r.fetch({progress:!0}),!0}finally{e.busy=!1}}})}const r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}}class PushGitCommand extends d.tR{constructor(e,t){super(e,"push","push","Push",{description:"pushes changes from the current branch to a remote"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){const t=e.flags.indexOf("--set-upstream");return-1!==t?(0,a.UR)(e.reference)?this.container.git.pushAll(e.repos,{force:!1,publish:{remote:e.flags[t+1]},reference:e.reference}):Promise.resolve():this.container.git.pushAll(e.repos,{force:e.flags.includes("--force"),reference:e.reference})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else if(null!=e.reference){const i=yield*(0,d.lA)({...e,repos:void 0,repo:e.reference.repoPath},t);if(i===d.Vd)break;e.repos=[i]}else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===d.Vd)break;e.repos=i}if(this.confirm(e.confirm)){const r=yield*this.confirmStep(e,t);if(r===d.Vd){i&&e.counter--;continue}e.flags=r}(0,d.uZ)(e),this.execute(e)}return e.counter<0?d.Vd:void 0}async*confirmStep(e,t){const i=n.D.getAny("git.useForcePushWithLease")??!1;let r;if(e.repos.length>1)r=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will push ${e.repos.length} repositories`}),c(e.flags,["--force"],{label:`Force ${this.title}${i?" (with lease)":""}`,description:"--force"+(i?"-with-lease":""),detail:`Will force push${i?" (with lease)":""} ${e.repos.length} repositories`})]);else{const[n]=e.repos,s=[];if((0,a.UR)(e.reference))if(e.reference.remote)r=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot push remote branch"}));else{const o=await n.getBranch(e.reference.name);if(null!=o&&null==o?.upstream){for(const t of await n.getRemotes())s.push(c(e.flags,["--set-upstream",t.name,o.name],{label:`Publish ${o.name} to ${t.name}`,detail:`Will publish ${(0,a.Wh)(o)} to ${t.name}`}));r=s.length?this.createConfirmStep((0,d.C8)("Confirm Publish",e,t),s,void 0,{placeholder:"Confirm Publish"}):this.createConfirmStep((0,d.C8)("Confirm Publish",e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"Cancel Publish",detail:"Cannot publish; No remotes found"}),{placeholder:"Confirm Publish"})}else r=null!=o&&o?.state.behind>0?this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,["--force"],{label:`Force ${this.title}${i?" (with lease)":""}`,description:"--force"+(i?"-with-lease":""),detail:`Will force push${i?" (with lease)":""} ${o?.state.ahead?` ${(0,u._6)("commit",o.state.ahead)}`:""}${o.getRemoteName()?` to ${o.getRemoteName()}`:""}${null!=o&&o.state.behind>0?`, overwriting ${(0,u._6)("commit",o.state.behind)}${o?.getRemoteName()?` on ${o.getRemoteName()}`:""}`:""}`})],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${(0,a.Wh)(o)} is behind ${o.getRemoteName()} by ${(0,u._6)("commit",o.state.behind)}`})):null!=o&&o?.state.ahead>0?this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[o.getRemoteName()],{label:this.title,detail:`Will push ${(0,u._6)("commit",o.state.ahead)} from ${(0,a.Wh)(o)} to ${o.getRemoteName()}`})]):this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"No commits found to push"}))}else{const o=await n.getStatus(),l={refType:"branch",name:o?.branch??"HEAD",ref:o?.branch??"HEAD",remote:!1,repoPath:n.path};if(0===o?.state.ahead){if(null==e.reference&&null==o.upstream){e.reference=l;for(const t of await n.getRemotes())s.push(c(e.flags,["--set-upstream",t.name,o.branch],{label:`Publish ${l.name} to ${t.name}`,detail:`Will publish ${(0,a.Wh)(l)} to ${t.name}`}))}r=s.length?this.createConfirmStep((0,d.C8)("Confirm Publish",e,t),s,void 0,{placeholder:"Confirm Publish"}):null==o.upstream?this.createConfirmStep((0,d.C8)("Confirm Publish",e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"Cancel Publish",detail:"Cannot publish; No remotes found"}),{placeholder:"Confirm Publish"}):this.createConfirmStep((0,d.C8)("Confirm Push",e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; No commits ahead of ${(0,T.Lo)(o.upstream)}`}))}else{let s="";const h=await n.getLastFetched();let p;0!==h&&(s=`${(0,u.vk)(C.NE.Dot,2,2)}Last fetched ${(0,P.Zh)(new Date(h))}`),p=null!=e.reference?`${o?.state.ahead?` commits up to and including ${(0,a.Wh)(e.reference,{label:!1})}`:""}${o?.upstream?` to ${(0,T.Lo)(o.upstream)}`:""}`:`${o?.state.ahead?` ${(0,u._6)("commit",o.state.ahead)}`:""}${o?.upstream?` to ${(0,T.Lo)(o.upstream)}`:""}`,r=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t,s),[...o?.state.behind?[]:[c(e.flags,[],{label:this.title,detail:`Will push${p}`})],c(e.flags,["--force"],{label:`Force ${this.title}${i?" (with lease)":""}`,description:"--force"+(i?"-with-lease":""),detail:`Will force push${i?" (with lease)":""} ${p}${null!=o&&o.state.behind>0?`, overwriting ${(0,u._6)("commit",o.state.behind)}${o?.upstream?` on ${(0,T.Lo)(o.upstream)}`:""}`:""}`})],o?.state.behind?(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${(0,a.Wh)(l)} is behind${o?.upstream?` ${(0,T.Lo)(o.upstream)}`:""} by ${(0,u._6)("commit",o.state.behind)}`}):void 0),r.additionalButtons=[d.My],r.onDidClickButton=async(e,i)=>{if(i!==d.My||e.busy)return!1;e.title=`Confirm ${t.title}${(0,u.vk)(C.NE.Dot,2,2)}Fetching${C.NE.Ellipsis}`,e.busy=!0;try{return await n.fetch({progress:!0}),!0}finally{e.busy=!1}}}}}const s=yield r;return(0,d.i9)(r,e,s)?s[0].item:d.Vd}}var F=i(2509);class RebaseGitCommand extends d.tR{constructor(e,t){super(e,"rebase","rebase","Rebase",{description:"integrates changes from a specified branch into the current branch, by changing the base of the branch and reapplying the commits on top"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}async execute(e){let t;if(e.flags.includes("--interactive")){await this.container.rebaseEditor.enableForNextUse();t=["-c",`"sequence.editor=${(0,F._L)()}"`]}e.repo.rebase(t,...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${(0,a.Wh)(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){const r=new d.v_(t.pickCommit,t,(()=>{t.pickCommit=!t.pickCommit,r.on=t.pickCommit})),n=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to rebase`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[r]});if(n===d.Vd){i&&e.counter--;continue}e.reference=n,t.selectedBranchOrTag=void 0}if((0,a.FT)(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){const i=t.selectedBranchOrTag.ref;let r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:!1}),t.cache.set(i,r));const n=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${(0,a.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to rebase ${(0,a.Wh)(e.destination,{icon:!1})} onto`,picked:e.reference?.ref});if(n===d.Vd)continue;e.reference=n}const r=yield*this.confirmStep(e,t);r!==d.Vd&&(e.flags=r,(0,d.uZ)(e),this.execute(e))}return e.counter<0?d.Vd:void 0}async*confirmStep(e,t){const i=await this.container.git.getAheadBehindCommitCount(e.repo.path,["revision"===e.reference.refType?(0,a.oI)(e.reference.ref,t.destination.ref):(0,a.oI)(t.destination.name,e.reference.name)]),r=null!=i?i.ahead+i.behind:0;if(0===r){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`${(0,a.Wh)(t.destination,{capitalize:!0})} is up to date with ${(0,a.Wh)(e.reference)}`})),r=yield i;return(0,d.i9)(i,e,r),d.Vd}const n=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will update ${(0,a.Wh)(t.destination)} by applying ${(0,u._6)("commit",r)} on top of ${(0,a.Wh)(e.reference)}`}),c(e.flags,["--interactive"],{label:`Interactive ${this.title}`,description:"--interactive",detail:`Will interactively update ${(0,a.Wh)(t.destination)} by applying ${(0,u._6)("commit",r)} on top of ${(0,a.Wh)(e.reference)}`})]),s=yield n;return(0,d.i9)(n,e,s)?s[0].item:d.Vd}}var O=i(4155),E=i(7925),$=i(4336);function I(e){if(!(e.repo instanceof l._j&&"add"===e.subcommand))throw new Error("Missing repository")}function x(e){if(!(e.repo instanceof l._j&&"remove"===e.subcommand))throw new Error("Missing repository")}function B(e){if(!(e.repo instanceof l._j&&"prune"===e.subcommand))throw new Error("Missing repository")}function W(e){if("string"==typeof e.remote)throw new Error("Missing remote")}function M(e){if("string"==typeof e.remote)throw new Error("Missing remote")}const L=new Map([["add","Add"],["prune","Prune"],["remove","Remove"]]);function U(e,t){return null==t?e:`${L.get(t)} ${e}`}class RemoteGitCommand extends d.tR{subcommand;constructor(e,t){super(e,"remote","remote","Remote",{description:"add, prune, or remove remotes"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t?.state.subcommand){case"add":null!=t.state.name&&i++,null!=t.state.url&&i++;break;case"prune":case"remove":null!=t.state.remote&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"remove"!==this.subcommand&&"prune"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.remotesView,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===d.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=U(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)continue;e.repo=i}switch(e.subcommand){case"add":I(e),yield*this.addCommandSteps(e,t),e.name=void 0,e.url=void 0;break;case"prune":B(e),yield*this.pruneCommandSteps(e,t);break;case"remove":x(e),yield*this.removeCommandSteps(e,t);break;default:(0,d.uZ)(e)}i&&e.counter--}return e.counter<0?d.Vd:void 0}*pickSubcommandStep(e){const t=(0,d.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"add",description:"adds a new remote",picked:"add"===e.subcommand,item:"add"},{label:"prune",description:"prunes remote branches on the specified remote",picked:"prune"===e.subcommand,item:"prune"},{label:"remove",description:"removes the specified remote",picked:"remove"===e.subcommand,item:"remove"}],buttons:[o.QuickInputButtons.Back]}),i=yield t;return(0,d.i9)(t,e,i)?i[0].item:d.Vd}async*addCommandSteps(e,t){null==e.flags&&(e.flags=["-f"]);let i=0!==(await e.repo.getRemotes({filter:t=>t.name===e.name})).length;for(;this.canStepsContinue(e);){if(e.counter<3||null==e.name||i){const r=yield*(0,d.NQ)(e,t,{placeholder:"Please provide a name for the remote",value:e.name});if(r===d.Vd)continue;if(i=0!==(await e.repo.getRemotes({filter:e=>e.name===r})).length,i){e.counter--;continue}e.name=r}if(e.counter<4||null==e.url){const i=yield*(0,d.Kf)(e,t,{placeholder:"Please provide a URL for the remote",value:e.url});if(i===d.Vd)continue;e.url=i}if(this.confirm(e.confirm)){const i=yield*this.addCommandConfirmStep(e,t);if(i===d.Vd)continue;e.flags=i}(0,d.uZ)(e),await e.repo.addRemote(e.name,e.url,e.flags.includes("-f")?{fetch:!0}:void 0),!1!==e.reveal&&(0,O.ay)(void 0,{focus:!0,select:!0})}}*addCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will add remote '${e.name}' for ${e.url}`}),c(e.flags,["-f"],{label:`${t.title} and Fetch`,description:"-f",detail:`Will add and fetch remote '${e.name}' for ${e.url}`})],t),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}async*removeCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){const[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});e.remote=null!=t?t:void 0}if(e.counter<3||null==e.remote){t.title=U("Remotes",e.subcommand);const i=yield*(0,d.Lt)(e,t,{picked:e.remote?.name,placeholder:"Choose remote to remove"});if(i===d.Vd)break;e.remote=i}W(e);if((yield*this.removeCommandConfirmStep(e,t))!==d.Vd){(0,d.uZ)(e);try{await e.repo.removeRemote(e.remote.name)}catch(e){$.Yd.error(e),(0,E.W8)("Unable to remove remote")}}}}*removeCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will remove remote '${e.remote.name}'`}],t),r=yield i;return(0,d.i9)(i,e,r)?void 0:d.Vd}async*pruneCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){const[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});e.remote=null!=t?t:void 0}if(e.counter<3||null==e.remote){const i=yield*(0,d.Lt)(e,t,{picked:e.remote?.name,placeholder:"Choose a remote to prune"});if(i===d.Vd)break;e.remote=i}M(e);(yield*this.pruneCommandConfirmStep(e,t))!==d.Vd&&((0,d.uZ)(e),e.repo.pruneRemote(e.remote.name))}}*pruneCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will prune remote '${e.remote.name}'`}],t),r=yield i;return(0,d.i9)(i,e,r)?void 0:d.Vd}}class ResetGitCommand extends d.tR{constructor(e,t){super(e,"reset","reset","Reset",{description:"resets the current branch to a specified commit"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:t?.confirm??!0,...t?.state},this._canSkipConfirm=!this.initialState.confirm}_canSkipConfirm=!1;get canSkipConfirm(){return this._canSkipConfirm}execute(e){e.repo.reset(...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${(0,a.Wh)(t.destination,{icon:!1})}`,e.counter<2||null==e.reference){const r=t.destination.ref;let n=t.cache.get(r);null==n&&(n=this.container.git.getLog(e.repo.path,{ref:r,merges:!1}),t.cache.set(r,n));const s=yield*(0,d.s4)(e,t,{log:await n,onDidLoadMore:e=>t.cache.set(r,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:`Choose a commit to reset ${e.destination.name} to`,picked:e.reference?.ref});if(s===d.Vd){i&&e.counter--;continue}e.reference=s}if(this.confirm(e.confirm)){const i=yield*this.confirmStep(e,t);if(i===d.Vd)continue;e.flags=i}(0,d.uZ)(e),this.execute(e)}return e.counter<0?d.Vd:void 0}*confirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will reset (leaves changes in the working tree) ${(0,a.Wh)(t.destination)} to ${(0,a.Wh)(e.reference)}`}),c(e.flags,["--soft"],{label:`Soft ${this.title}`,description:"--soft",detail:`Will soft reset (leaves changes in the index and working tree) ${(0,a.Wh)(t.destination)} to ${(0,a.Wh)(e.reference)}`}),c(e.flags,["--hard"],{label:`Hard ${this.title}`,description:"--hard",detail:`Will hard reset (discards all changes) ${(0,a.Wh)(t.destination)} to ${(0,a.Wh)(e.reference)}`})]),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}}class RevertGitCommand extends d.tR{constructor(e,t){super(e,"revert","revert","Revert",{description:"undoes the changes of specified commits, by creating new commits with inverted changes"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.revert(...e.flags,...e.references.map((e=>e.ref)).reverse())}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(e.counter<2||null==e.references||0===e.references.length){const r=t.destination.ref;let n=t.cache.get(r);null==n&&(n=this.container.git.getLog(e.repo.path,{ref:r,merges:!1}),t.cache.set(r,n));const s=yield*(0,d.Rj)(e,t,{log:await n,onDidLoadMore:e=>t.cache.set(r,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:"Choose commits to revert",picked:e.references?.map((e=>e.ref))});if(s===d.Vd){i&&e.counter--;continue}e.references=s}const r=yield*this.confirmStep(e,t);r!==d.Vd&&(e.flags=r,(0,d.uZ)(e),this.execute(e))}return e.counter<0?d.Vd:void 0}*confirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,["--no-edit"],{label:this.title,description:"--no-edit",detail:`Will revert ${(0,a.Wh)(e.references)}`}),c(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will revert and edit ${(0,a.Wh)(e.references)}`})]),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}}var N=i(6934),G=i(9729),H=i(4655);const V=new Map([["","Search by Message"],["=:","Search by Message"],["message:","Search by Message"],["@:","Search by Author"],["author:","Search by Author"],["#:","Search by Commit SHA"],["commit:","Search by Commit SHA"],["?:","Search by File"],["file:","Search by File"],["~:","Search by Changes"],["change:","Search by Changes"]]);class SearchGitCommand extends d.tR{constructor(e,t){super(e,"search","search","Commit Search",{description:"aka grep, searches for commits"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.query||t.prefillOnly||i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isMatch(e){return super.isMatch(e)||"grep"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"grep"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.searchAndCompareView,commit:void 0,hasVirtualFolders:(0,s.fw)("gitlens:hasVirtualFolders",!1),resultsKey:void 0,resultsPromise:void 0,title:this.title},i=n.D.get("gitCommands.search");null==e.matchAll&&(e.matchAll=i.matchAll),null==e.matchCase&&(e.matchCase=i.matchCase),null==e.matchRegex&&(e.matchRegex=i.matchRegex),null==e.showResultsInSideBar&&(e.showResultsInSideBar=i.showResultsInSideBar??void 0);let r=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(r=!1,1===t.repos.length)r=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(e.counter<2||null==e.query){const i=yield*this.pickSearchOperatorStep(e,t);if(i===d.Vd){r&&e.counter--,e.query=void 0;continue}e.query=i}const i={query:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex},n=(0,N.FL)(i);if(null!=t.resultsPromise&&t.resultsKey===n||(t.resultsPromise=e.repo.richSearchCommits(i),t.resultsKey=n),e.showResultsInSideBar){this.container.searchAndCompareView.search(e.repo.path,i,{label:{label:`for ${e.query}`}},t.resultsPromise,e.showResultsInSideBar instanceof H.V?e.showResultsInSideBar:void 0);break}if(e.counter<3||null==t.commit){const r=e.repo.path,n=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await t.resultsPromise,onDidLoadMore:e=>t.resultsPromise=Promise.resolve(e),placeholder:(t,i)=>null==i?`No results for ${e.query}`:`${(0,u._6)("result",i.count,{format:e=>i.hasMore?`${e}+`:void 0})} for ${e.query}`,picked:t.commit?.ref,showInSideBarCommand:new G.qv("$(link-external)  Show Results in Side Bar",(()=>{this.container.searchAndCompareView.search(r,i,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)})),showInSideBarButton:{button:d.vU,onDidClick:()=>{this.container.searchAndCompareView.search(r,i,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)}}});if(n===d.Vd){e.counter--;continue}t.commit=n}let s;e.openPickInView?((0,S.Fw)(t.commit,{pin:!1,preserveFocus:!1}),s=d.Vd):s=yield*le(this.container,{command:"show",state:{repo:e.repo,reference:t.commit}},this.pickedVia),e.counter--,s===d.Vd&&(0,d.uZ)(e)}return e.counter<0?d.Vd:void 0}*pickSearchOperatorStep(e,t){const i=[{label:V.get(""),description:`pattern or message: pattern or =: pattern ${C.NE.Dash} use quotes to search for phrases`,item:"message:"},{label:V.get("author:"),description:"author: pattern or @: pattern",item:"author:"},{label:V.get("commit:"),description:"commit: sha or #: sha",item:"commit:"},t.hasVirtualFolders?void 0:{label:V.get("file:"),description:"file: glob or ?: glob",item:"file:"},t.hasVirtualFolders?void 0:{label:V.get("change:"),description:"change: pattern or ~: pattern",item:"change:"}].filter((e=>null!=e)),r=new d.I4(e.matchCase),n=new d.eY(e.matchAll),s=new d.Mn(e.matchRegex),o=(0,d.xf)({title:(0,d.C8)(t.title,e,t),placeholder:'e.g. "Updates dependencies" author:eamodio',matchOnDescription:!0,matchOnDetail:!0,additionalButtons:[r,n,s],items:i,value:e.query,selectValueWhenShown:!1,onDidAccept:e=>{const t=e.selectedItems[0];if(!N.WY.has(t.item))return!0;const i=e.value.trim();return 0===i.length||N.WY.has(i)?e.value=t.item:e.value=`${i} ${t.item}`,o.onDidChangeValue(e),!1},onDidClickButton:(t,i)=>{i===r?(e.matchCase=!e.matchCase,r.on=e.matchCase):i===n?(e.matchAll=!e.matchAll,n.on=e.matchAll):i===s&&(e.matchRegex=!e.matchRegex,s.on=e.matchRegex)},onDidChangeValue:r=>{const n=r.value.trim();e.counter=n?3:2;const s=(0,N.pD)({query:n,matchCase:e.matchCase,matchAll:e.matchAll,matchRegex:e.matchRegex});return r.title=(0,d.C8)(0===s.size||s.size>1?t.title:`Commit ${V.get(s.keys().next().value)}`,e,t),0===r.value.length?r.items=i:(r.ignoreFocusOut=!0,o.ignoreFocusOut=!0,r.items=[{label:"Search for",description:r.value,item:r.value}]),!0}}),a=yield o;return(0,d.i9)(o,e,a)?(e.counter--,a[0].item.trim()):(e.counter--,d.Vd)}}var q=i(3931),Q=i(1742);function Y(e){if(!(e.repo instanceof l._j))throw new Error("Missing repository")}function j(e){if(!(0,R.f_)(e.reference))throw new Error("Missing reference")}function z(e){if(!e.fileName)throw new Error("Missing filename")}class ShowGitCommand extends d.tR{constructor(e,t){super(e,"show","show","Show",{description:"shows information about a git reference"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,null!=t?.state?.fileName&&(i+=2),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}getStepState(e){const t=super.getStepState(e);return{...t,startingStep:e?Math.min(t.startingStep??0,1):0}}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(Y(e),(e.counter<2||null==e.reference||!(0,R.f_)(e.reference)||null!=e.reference.file)&&(null==e.reference||(0,R.f_)(e.reference)||(e.reference=await this.container.git.getCommit(e.reference.repoPath,e.reference.ref)),e.counter<2||null==e.reference)){const r=yield*(0,d.s4)(e,t,{log:{repoPath:e.repo.path,commits:new Map,sha:void 0,range:void 0,count:0,limit:void 0,hasMore:!1},placeholder:"Enter a reference or commit SHA",picked:e.reference?.ref});if(r===d.Vd){i&&e.counter--;continue}e.reference=r}if(j(e),e.counter<3){null==e.reference.files&&await e.reference.ensureFullDetails();const i=yield*(0,d.KT)(e,t);if(i===d.Vd)continue;if(i instanceof Q.Wv){const t=yield*i.executeSteps(this.pickedVia);e.counter--,t===d.Vd&&(0,d.uZ)(e);continue}if(i instanceof G.$w&&!(i instanceof q.PF)){(0,d.uZ)(e),i.execute();break}}if(e.counter<4||null==e.fileName){const i=yield*(0,d.fD)(e,t,{picked:e.fileName});if(i===d.Vd)continue;if(i instanceof q.PF){e.counter-=2;continue}e.fileName=i.file.path}z(e);const r=yield*(0,d.nI)(e,t);if(r!==d.Vd)if(r instanceof q.PF)e.counter-=2;else if(r instanceof Q.Wv)yield*r.executeSteps(this.pickedVia),e.counter--;else if(r instanceof G.$w){(0,d.uZ)(e),r.execute();break}}return e.counter<0?d.Vd:void 0}}var K=i(252),J=i(6592);const X=new Map([["apply","Apply"],["drop","Drop"],["list","List"],["pop","Pop"],["push","Push"],["rename","Rename"]]);function Z(e,t){return null==t?e:`${X.get(t)} ${e}`}class StashGitCommand extends d.tR{subcommand;constructor(e,t){super(e,"stash","stash","Stash",{description:"shelves (stashes) local changes to be reapplied later"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"apply":case"drop":case"pop":null!=t.state.reference&&i++;break;case"push":null!=t.state.message&&i++;break;case"rename":null!=t.state.reference&&i++,null!=t.state.message&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand&&"list"!==this.subcommand}get canSkipConfirm(){return"drop"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.stashesView,readonly:(0,s.fw)("gitlens:readonly",!1)||(0,s.fw)("gitlens:untrusted",!1)||(0,s.fw)("gitlens:hasVirtualFolders",!1),title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,t.readonly&&(e.subcommand="list"),e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===d.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=Z(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)continue;e.repo=i}switch(e.subcommand){case"apply":case"pop":yield*this.applyOrPopCommandSteps(e,t);break;case"drop":yield*this.dropCommandSteps(e,t);break;case"list":yield*this.listCommandSteps(e,t);break;case"push":yield*this.pushCommandSteps(e,t);break;case"rename":yield*this.renameCommandSteps(e,t),e.message=void 0;break;default:(0,d.uZ)(e)}i&&e.counter--}return e.counter<0?d.Vd:void 0}*pickSubcommandStep(e){const t=(0,d.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"apply",description:"integrates changes from the specified stash into the current branch",picked:"apply"===e.subcommand,item:"apply"},{label:"drop",description:"deletes the specified stash",picked:"drop"===e.subcommand,item:"drop"},{label:"list",description:"lists the saved stashes",picked:"list"===e.subcommand,item:"list"},{label:"pop",description:"integrates changes from the specified stash into the current branch and deletes the stash",picked:"pop"===e.subcommand,item:"pop"},{label:"push",description:"saves your local changes to a new stash and discards them from the working tree and index",picked:"push"===e.subcommand,item:"push"},{label:"rename",description:"renames the specified stash",picked:"rename"===e.subcommand,item:"rename"}],buttons:[o.QuickInputButtons.Back]}),i=yield t;return(0,d.i9)(t,e,i)?i[0].item:d.Vd}async*applyOrPopCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to apply to your working tree",picked:e.reference?.ref});if(i===d.Vd)break;e.reference=i}if(this.confirm(e.confirm)){const i=yield*this.applyOrPopCommandConfirmStep(e,t);if(i===d.Vd)continue;e.subcommand=i}(0,d.uZ)(e);try{if(await e.repo.stashApply("pop"===e.subcommand?`stash@{${e.reference.number}}`:e.reference.ref,{deleteAfter:"pop"===e.subcommand}),e.reference.message){const t=await this.container.git.getScmRepository(e.repo.path);null==t||t.inputBox.value||(t.inputBox.value=e.reference.message)}}catch(e){$.Yd.error(e,t.title),J.ef.is(e,J.bk.WorkingChanges)?o.window.showWarningMessage("Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"):(0,E.W8)(e.message)}}}*applyOrPopCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:"pop"===e.subcommand?`Will delete ${(0,a.Wh)(e.reference)} and apply the changes to the working tree`:`Will apply the changes from ${(0,a.Wh)(e.reference)} to the working tree`,item:e.subcommand},{label:Z(this.title,"pop"===e.subcommand?"apply":"pop"),detail:"pop"===e.subcommand?`Will apply the changes from ${(0,a.Wh)(e.reference)} to the working tree`:`Will delete ${(0,a.Wh)(e.reference)} and apply the changes to the working tree`,item:"pop"===e.subcommand?"apply":"pop"}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[d._9,d.Nv],onDidClickButton:(t,i)=>{i===d._9?(0,K.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===d.Nv&&(0,K.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}async*dropCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to delete",picked:e.reference?.ref});if(i===d.Vd)break;e.reference=i}if((yield*this.dropCommandConfirmStep(e,t))!==d.Vd){(0,d.uZ)(e);try{await e.repo.stashDelete(`stash@{${e.reference.number}}`,e.reference.ref)}catch(e){return $.Yd.error(e,t.title),void(0,E.W8)("Unable to delete stash")}}}}*dropCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${(0,a.Wh)(e.reference)}`}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[d._9,d.Nv],onDidClickButton:(t,i)=>{i===d._9?(0,K.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===d.Nv&&(0,K.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,d.i9)(i,e,r)?void 0:d.Vd}async*listCommandSteps(e,t){for(t.title="Stashes";this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash",picked:e.reference?.ref});if(i===d.Vd)break;e.reference=i}const i=yield*le(this.container,{command:"show",state:{repo:e.repo,reference:e.reference}},this.pickedVia);e.counter--,i===d.Vd&&(0,d.uZ)(e)}}async*pushCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.message){if(null==e.message){const t=await this.container.git.getScmRepository(e.repo.path);e.message=t?.inputBox.value}const i=yield*this.pushCommandInputMessageStep(e,t);if(i===d.Vd)break;e.message=i}if(this.confirm(e.confirm)){const i=yield*this.pushCommandConfirmStep(e,t);if(i===d.Vd)continue;e.flags=i}try{await e.repo.stashSave(e.message,e.uris,{includeUntracked:e.flags.includes("--include-untracked"),keepIndex:e.flags.includes("--keep-index"),onlyStaged:e.flags.includes("--staged")}),(0,d.uZ)(e)}catch(i){if($.Yd.error(i,t.title),i instanceof J.s8&&i.reason===J.g1.ConflictingStagedAndUnstagedLines&&e.flags.includes("--staged")){const t={title:"Yes"},r={title:"No",isCloseAffordance:!0};if(await o.window.showErrorMessage(i.message,{modal:!0},t,r)===t){e.uris=e.onlyStagedUris,e.flags.splice(e.flags.indexOf("--staged"),1);continue}return}const r=i?.message??i?.toString()??"";return r.includes("newer version of Git")?void o.window.showErrorMessage(`Unable to stash changes. ${r}`):void(0,E.W8)("Unable to stash changes")}}}async*pushCommandInputMessageStep(e,t){const i=(0,d.Ke)({title:(0,d.C8)(t.title,e,t,null!=e.uris?`${(0,u.vk)(C.NE.Dot,2,2)}${1===e.uris.length?(0,D.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`:void 0),placeholder:"Please provide a stash message",value:e.message,prompt:"Enter stash message"}),r=yield i;return(0,d.$V)(i,e,r)&&await(0,d.Wm)(i,e,r)?r:d.Vd}*pushCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),null==e.uris||0===e.uris.length?[c(e.flags,[],{label:t.title,detail:"Will stash uncommitted changes"}),c(e.flags,["--include-untracked"],{label:`${t.title} & Include Untracked`,description:"--include-untracked",detail:"Will stash uncommitted changes, including untracked files"}),c(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,description:"--keep-index",detail:"Will stash uncommitted changes, but will keep staged files intact"})]:[c(e.flags,[],{label:t.title,detail:`Will stash changes from ${1===e.uris.length?(0,D.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`}),c(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,detail:`Will stash changes from ${1===e.uris.length?(0,D.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}, but will keep staged files intact`})],void 0,{placeholder:`Confirm ${t.title}`}),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}async*renameCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to rename",picked:e.reference?.ref});if(i===d.Vd)break;e.reference=i}if(e.counter<4||null==e.message){const i=yield*this.renameCommandInputMessageStep(e,t);if(i===d.Vd)continue;e.message=i}if(this.confirm(e.confirm)){if((yield*this.renameCommandConfirmStep(e,t))===d.Vd)continue}(0,d.uZ)(e);try{await e.repo.stashRename(e.reference.name,e.reference.ref,e.message,e.reference.stashOnRef)}catch(e){$.Yd.error(e,t.title),(0,E.W8)(e.message)}}}async*renameCommandInputMessageStep(e,t){const i=(0,d.Ke)({title:(0,d.C8)(t.title,e,t),placeholder:`Please provide a new message for ${(0,a.Wh)(e.reference,{icon:!1})}`,value:e.message??e.reference?.message,prompt:"Enter new stash message"}),r=yield i;return(0,d.$V)(i,e,r)&&await(0,d.Wm)(i,e,r)?r:d.Vd}*renameCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will rename ${(0,a.Wh)(e.reference)}`,item:e.subcommand}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[d._9,d.Nv],onDidClickButton:(t,i)=>{i===d._9?(0,K.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===d.Nv&&(0,K.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}}class StatusGitCommand extends d.tR{constructor(e,t){super(e,"status","status","Status",{description:"shows status information about a repository"});let i=0;null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,status:void 0,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)break;e.repo=i}if(t.status=await e.repo.getStatus(),null==t.status)return;t.title=`${this.title}${(0,u.vk)(C.NE.Dot,2,2)}${(0,a.Wh)((0,a.xB)(t.status.branch,e.repo.path,{refType:"branch",name:t.status.branch,remote:!1,upstream:null!=t.status.upstream?{name:t.status.upstream,missing:!1}:void 0}),{icon:!1})}`;const r=yield*(0,d.up)(e,t);if(r!==d.Vd){if(r instanceof Q.Wv){const t=yield*r.executeSteps(this.pickedVia);e.counter--,t===d.Vd&&(0,d.uZ)(e)}else if(r instanceof G.$w){(0,d.uZ)(e),r.execute();break}}else i&&e.counter--}}}class SwitchGitCommand extends d.tR{constructor(e,t){super(e,"switch","switch","Switch Branch",{description:"aka checkout, switches the current branch to a specified branch"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){await o.window.withProgress({location:o.ProgressLocation.Notification,title:`Switching ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`} to ${e.reference.name}`},(()=>Promise.all(e.repos.map((t=>t.switch(e.reference.ref,{createBranch:e.createBranch,progress:!1})))))),null!=e.fastForwardTo&&e.repos[0].merge("--ff-only",e.fastForwardTo.ref)}isMatch(e){return super.isMatch(e)||"checkout"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"checkout"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,showTags:!1,switchToLocalFrom:void 0,title:this.title};null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===d.Vd)break;e.repos=i}if(e.counter<2||null==e.reference){const r=yield*(0,d.xC)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to switch to`});if(r===d.Vd){i&&e.counter--;continue}e.reference=r}if((0,a.UR)(e.reference)&&e.reference.remote){t.title=`Create Branch and ${this.title}`;const{values:i}=await this.container.git.getBranches(e.reference.repoPath,{filter:t=>t.upstream?.name===e.reference.name,sort:{orderBy:r.Vz.DateDesc}});if(0===i.length){const i=yield*(0,d.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` based on ${(0,a.Wh)(e.reference,{icon:!1})}`,value:e.createBranch??(0,a.Av)(e.reference)});if(i===d.Vd)continue;e.createBranch=i}else t.title=`${this.title} to Local Branch`,t.switchToLocalFrom=e.reference,e.reference=i[0],e.createBranch=void 0}else e.createBranch=void 0;if(this.confirm(e.confirm||null!=t.switchToLocalFrom)){const i=yield*this.confirmStep(e,t);if(i===d.Vd)continue;"switch+fast-forward"===i&&(e.fastForwardTo=t.switchToLocalFrom)}(0,d.uZ)(e),this.execute(e)}return e.counter<0?d.Vd:void 0}*confirmStep(e,t){let i;i=null!=t.switchToLocalFrom&&1===e.repos.length?[{label:`${t.title} and Fast-Forward`,description:"",detail:`Will switch to and fast-forward local ${(0,a.Wh)(e.reference)} in $(repo) ${e.repos[0].formattedName}`,item:"switch+fast-forward"}]:[];const r=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,description:e.createBranch?"-b":"",detail:`Will ${e.createBranch?`create and switch to a new branch named ${e.createBranch} from ${(0,a.Wh)(e.reference)}`:`switch to ${null!=t.switchToLocalFrom?"local ":""}${(0,a.Wh)(e.reference)}`} in ${1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`}`,item:"switch"},...i],void 0,{placeholder:`Confirm ${t.title}`}),n=yield r;return(0,d.i9)(r,e,n)?n[0].item:d.Vd}}const ee=new Map([["create","Create"],["delete","Delete"]]);function te(e,t){return null==t?e:`${ee.get(t)} ${e}`}class TagGitCommand extends d.tR{subcommand;constructor(e,t){super(e,"tag","tag","Tag",{description:"create, or delete tags"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"create":null!=t.state.reference&&i++,null!=t.state.name&&i++,null!=t.state.message&&i++;break;case"delete":null==t.state.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.tagsView,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===d.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)continue;e.repo=i}switch(t.title=te("delete"===e.subcommand?"Tags":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":yield*this.deleteCommandSteps(e,t);break;default:(0,d.uZ)(e)}i&&e.counter--}return e.counter<0?d.Vd:void 0}*pickSubcommandStep(e){const t=(0,d.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new tag",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified tags",picked:"delete"===e.subcommand,item:"delete"}],buttons:[o.QuickInputButtons.Back]}),i=yield t;return(0,d.i9)(t,e,i)?i[0].item:d.Vd}async*createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new tag from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:(0,a.FT)(e.reference)?e.reference.ref:void 0});if(i===d.Vd)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*(0,d.fG)(e,t,{placeholder:"Please provide a name for the new tag",titleContext:` at ${(0,a.Wh)(e.reference,{capitalize:!0,icon:!1})}`,value:e.name??(0,a.Av)(e.reference)});if(i===d.Vd)continue;e.name=i}if(e.counter<5||null==e.message){const i=yield*this.createCommandInputMessageStep(e,t);if(i===d.Vd)continue;e.message=i}if(0===e.message.length||e.flags.includes("-m")||e.flags.push("-m"),this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===d.Vd)continue;e.flags=i}(0,d.uZ)(e),e.repo.tag(...e.flags,...0!==e.message.length?[`"${e.message}"`]:[],e.name,e.reference.ref)}}async*createCommandInputMessageStep(e,t){const i=(0,d.Ke)({title:(0,d.C8)(`${t.title} at ${(0,a.Wh)(e.reference,{capitalize:!0,icon:!1})}`,e,t),placeholder:"Please provide an optional message to annotate the tag",value:e.message,prompt:"Enter optional message"}),r=yield i;return(0,d.$V)(i,e,r)&&await(0,d.Wm)(i,e,r)?r:d.Vd}*createCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,0!==e.message.length?["-m"]:[],{label:t.title,description:0!==e.message.length?"-m":"",detail:`Will create a new tag named ${e.name} at ${(0,a.Wh)(e.reference)}`}),c(e.flags,0!==e.message.length?["--force","-m"]:["--force"],{label:`Force ${t.title}`,description:"--force"+(0!==e.message.length?" -m":""),detail:`Will forcibly create a new tag named ${e.name} at ${(0,a.Wh)(e.reference)}`})],t),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}async*deleteCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||0===e.references.length){t.title=te("Tags",e.subcommand);const i=yield*(0,d.yY)(e,t,{picked:e.references?.map((e=>e.ref)),placeholder:"Choose tags to delete"});if(i===d.Vd)break;e.references=i}t.title=te((0,u._6)("Tag",e.references.length,{only:!0}),e.subcommand);(yield*this.deleteCommandConfirmStep(e,t))!==d.Vd&&((0,d.uZ)(e),e.repo.tagDelete(e.references))}}*deleteCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${(0,a.Wh)(e.references)}`}],t),r=yield i;return(0,d.i9)(i,e,r)?void 0:d.Vd}}var ie=i(8887),re=i(5025),ne=i(2674);function se(e){if(null==e.repo||"string"==typeof e.repo)throw new Error("Missing repository")}const oe=new Map([["create","Create"],["delete","Delete"],["open","Open"]]);function ae(e,t){return null==t?e:`${oe.get(t)} ${e}`}class WorktreeGitCommand extends d.tR{subcommand;canSkipConfirmOverride;constructor(e,t){super(e,"worktree","worktree","Worktree",{description:"open, create, or delete worktrees"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"create":null!=t.state.uri&&i++,null!=t.state.reference&&i++;break;case"delete":null==t.state.uris||Array.isArray(t.state.uris)&&0===t.state.uris.length||i++;break;case"open":null!=t.state.uri&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return this.canSkipConfirmOverride??!1}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.worktreesView,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===d.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===d.Vd)continue;e.repo=i}e.repo=await e.repo.getMainRepository()??e.repo,se(e);if((yield*(0,d.Oz)(e,t,ie.x.Worktrees))===d.Vd)break;switch(t.title=ae("delete"===e.subcommand?"Worktrees":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.uri=void 0;break;case"delete":null==e.uris||Array.isArray(e.uris)||(e.uris=[e.uris]),yield*this.deleteCommandSteps(e,t);break;case"open":yield*this.openCommandSteps(e,t);break;default:(0,d.uZ)(e)}i&&e.counter--}return e.counter<0?d.Vd:void 0}*pickSubcommandStep(e){const t=(0,d.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"open",description:"opens the specified worktree",picked:"open"===e.subcommand,item:"open"},{label:"create",description:"creates a new worktree",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified worktrees",picked:"delete"===e.subcommand,item:"delete"}],buttons:[o.QuickInputButtons.Back]}),i=yield t;return(0,d.i9)(t,e,i)?i[0].item:d.Vd}async*createCommandSteps(e,t){for(null==t.defaultUri&&(t.defaultUri=await e.repo.getWorktreesDefaultUri()),null==e.flags&&(e.flags=[]),t.pickedUri=void 0,e.confirm=!0,this.canSkipConfirmOverride=void 0;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new worktree for`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" for",value:(0,a.FT)(e.reference)?e.reference.ref:void 0});if(i===d.Vd)break;e.reference=i}if(e.counter<4||null==e.uri)if(null==e.reference||n.D.get("worktrees.promptForLocation",e.repo.folder)||null==t.defaultUri){const i=yield*this.createCommandChoosePathStep(e,t,{titleContext:` for ${(0,a.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,defaultUri:t.defaultUri});if(i===d.Vd)continue;e.uri=i,t.pickedUri=e.uri}else e.uri=t.defaultUri;if(this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===d.Vd)continue;[e.uri,e.flags]=i}e.confirm=!0,this.canSkipConfirmOverride=void 0;if("branch"===e.reference?.refType&&e.reference?.remote&&!e.flags.includes("-b")){e.flags.push("-b"),e.createBranch=(0,a.Av)(e.reference);null!=await e.repo.getBranch(e.createBranch)&&(e.createBranch=e.reference.name)}if(e.flags.includes("-b")){let i;if(null!=e.createBranch){let t=await this.container.git.validateBranchOrTagName(e.repo.path,e.createBranch);if(t){t=null==await e.repo.getBranch(e.createBranch)}t||(i=e.createBranch,e.createBranch=void 0)}if(null==e.createBranch){const r=yield*(0,d.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${(0,a.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:i??e.createBranch??(0,a.Av)(e.reference)});if(r===d.Vd){e.flags=[];continue}e.createBranch=r}}const i=e.flags.includes("--direct")?e.uri:o.Uri.joinPath(e.uri,...(e.createBranch??e.reference.name).replace(/\\/g,"/").split("/"));let r;try{r=await e.repo.createWorktree(i,{commitish:e.reference?.name,createBranch:e.flags.includes("-b")?e.createBranch:void 0,detach:e.flags.includes("--detach"),force:e.flags.includes("--force")}),!1!==e.reveal&&(0,re.ay)(void 0,{select:!0,focus:!0})}catch(t){if(J.P6.is(t,J.hK.AlreadyCheckedOut)&&!e.flags.includes("--force")){const t={title:"Create New Branch"},i={title:"Create Anyway"},r={title:"Cancel",isCloseAffordance:!0},n=await o.window.showWarningMessage(`Unable to create the new worktree because ${(0,a.Wh)(e.reference,{icon:!1,quoted:!0})} is already checked out.\n\nWould you like to create a new branch for this worktree or forcibly create it anyway?`,{modal:!0},t,i,r);if(n===t){e.flags.push("-b"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}if(n===i){e.flags.push("--force"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}}else J.P6.is(t,J.hK.AlreadyExists)?o.window.showErrorMessage(`Unable to create a new worktree in '${ne.e.getFriendlyPath(i)}' because the folder already exists and is not empty.`,"OK"):(0,E.W8)(`Unable to create a new worktree in '${ne.e.getFriendlyPath(i)}.`)}if((0,d.uZ)(e),null==r)break;const s=n.D.get("worktrees.openAfterCreate");if("never"===s)break;if("prompt"===s){yield*this.openCommandSteps({subcommand:"open",repo:e.repo,uri:r.uri,counter:3,confirm:!0},t);break}queueMicrotask((()=>{switch(s){case"always":(0,F.ic)(r.uri,{location:F.Tc.CurrentWindow});break;case"alwaysNewWindow":(0,F.ic)(r.uri,{location:F.Tc.NewWindow});break;case"onlyWhenEmpty":(0,F.ic)(r.uri,{location:o.workspace.workspaceFolders?.length?F.Tc.CurrentWindow:F.Tc.NewWindow})}}))}}async*createCommandChoosePathStep(e,t,i){const r=(0,d.jf)({show:async r=>{const n=null!=i?.defaultUri,s=await o.window.showInformationMessage(`Choose a location in which to create the worktree${i.titleContext}.`,{modal:!0},{title:"Choose Location"},...n?[{title:"Use Default Location"}]:[]);if(null==s)return _.Xe.Back;if("Use Default Location"===s.title)return i.defaultUri;const a=await o.window.showOpenDialog({canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1,defaultUri:t.pickedUri??e.uri??t.defaultUri,openLabel:"Select Worktree Location",title:`${(0,d.C8)(`Choose a Worktree Location${i.titleContext}`,e,t)}`});return null==a||0===a.length?_.Xe.Back:a[0]}}),n=yield r;return(0,d.$V)(r,e,n)&&await(0,d.Wm)(r,e,n)?n:d.Vd}*createCommandConfirmStep(e,t){const i=t.pickedUri??e.uri,r=(0,u.AO)(ne.e.getFriendlyPath(i),60);let n,s=!0;const l=e.repo.uri,h=`${(0,b.EZ)(l.path)}.worktrees`;l.toString()!==i.toString()?n=(0,b.$d)(i,l)?o.Uri.joinPath(l,"..",h):(0,b.EZ)(i.path)===h?i:o.Uri.joinPath(i,h):(n=o.Uri.joinPath(l,"..",h),s=!1);const p=e.createBranch??(null!=e.reference?(0,a.Av)(e.reference):void 0),m=p?o.Uri.joinPath(n,...p.replace(/\\/g,"/").split("/")):n,g=(0,u.AO)(ne.e.getFriendlyPath(m),65),f=(0,u.AO)(ne.e.getFriendlyPath(o.Uri.joinPath(n,"<new-branch-name>")),60),w="branch"===e.reference?.refType&&e.reference?.remote,v=(0,d.Tv)((0,d.C8)(`Confirm ${t.title} • ${(0,a.Wh)(e.reference,{icon:!1,label:!1})}`,e,t),[c(e.flags,w?["-b"]:[],{label:w?"Create Local Branch and Worktree":t.title,description:" in subfolder",detail:`Will create worktree in $(folder) ${g}`},n),c(e.flags,["-b"],{label:w?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" in subfolder",detail:`Will create worktree in $(folder) ${f}`},n),...s?[(0,G.fz)(),c(e.flags,["--direct"],{label:w?"Create Local Branch and Worktree":t.title,description:" directly in folder",detail:`Will create worktree directly in $(folder) ${r}`},i),c(e.flags,["-b","--direct"],{label:w?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" directly in folder",detail:`Will create worktree directly in $(folder) ${r}`},i)]:[]],t),y=yield v;return(0,d.i9)(v,e,y)?[y[0].context,y[0].item]:d.Vd}async*deleteCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uris||0===e.uris.length){t.title=ae("Worktrees",e.subcommand);const i=yield*(0,d.Mb)(e,t,{filter:e=>e.main||!e.opened,includeStatus:!0,picked:e.uris?.map((e=>e.toString())),placeholder:"Choose worktrees to delete"});if(i===d.Vd)break;e.uris=i.map((e=>e.uri))}t.title=ae((0,u._6)("Worktree",e.uris.length,{only:!0}),e.subcommand);const i=yield*this.deleteCommandConfirmStep(e,t);if(i!==d.Vd){e.flags=i,(0,d.uZ)(e);for(const i of e.uris){let r=!1;do{r=!1;const n=e.flags.includes("--force");try{if(n){const e=t.worktrees.find((e=>e.uri.toString()===i.toString()));let r;try{r=await(e?.getStatus())}catch{}if(r?.hasChanges){const e={title:"Force Delete"},t={title:"Cancel",isCloseAffordance:!0};if(await o.window.showWarningMessage(`The worktree in '${i.fsPath}' has uncommitted changes.\n\nDeleting it will cause those changes to be FOREVER LOST.\nThis is IRREVERSIBLE!\n\nAre you sure you still want to delete it?`,{modal:!0},e,t)!==e)return}}await e.repo.deleteWorktree(i,{force:n})}catch(t){if(J.Nk.is(t)){if(t.reason===J.xe.MainWorkingTree)o.window.showErrorMessage("Unable to delete the main worktree");else if(!n){const n={title:"Force Delete"},s={title:"Cancel",isCloseAffordance:!0};await o.window.showErrorMessage(t.reason===J.xe.HasChanges?`Unable to delete worktree because there are UNCOMMITTED changes in '${i.fsPath}'.\n\nForcibly deleting it will cause those changes to be FOREVER LOST.\nThis is IRREVERSIBLE!\n\nWould you like to forcibly delete it?`:`Unable to delete worktree in '${i.fsPath}'.\n\nWould you like to try to forcibly delete it?`,{modal:!0},n,s)===n&&(e.flags.push("--force"),r=!0)}}else(0,E.W8)(`Unable to delete worktree in '${i.fsPath}.`)}}while(r)}}}}*deleteCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will delete ${(0,u._6)("worktree",e.uris.length,{only:1===e.uris.length})}${1===e.uris.length?` in $(folder) ${ne.e.getFriendlyPath(e.uris[0])}`:""}`}),c(e.flags,["--force"],{label:`Force ${t.title}`,description:"including ANY UNCOMMITTED changes",detail:`Will forcibly delete ${(0,u._6)("worktree",e.uris.length,{only:1===e.uris.length})} ${1===e.uris.length?` in $(folder) ${ne.e.getFriendlyPath(e.uris[0])}`:""}`})],t),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}async*openCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uri){t.title=ae("Worktree",e.subcommand);const i=yield*(0,d.UP)(e,t,{includeStatus:!0,picked:e.uri?.toString(),placeholder:"Choose worktree to open"});if(i===d.Vd)break;e.uri=i.uri}t.title=ae("Worktree",e.subcommand);const i=yield*this.openCommandConfirmStep(e,t);if(i===d.Vd)continue;e.flags=i,(0,d.uZ)(e);const r=t.worktrees.find((t=>t.uri.toString()===e.uri.toString()));if(null==r)break;e.flags.includes("--reveal-explorer")?(0,re.qM)(r):(0,F.ic)(r.uri,{location:(0,re.BC)(e.flags)})}}*openCommandConfirmStep(e,t){const i=(0,d.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will open in the current window, the worktree in $(folder) ${ne.e.getFriendlyPath(e.uri)}`}),c(e.flags,["--new-window"],{label:`${t.title} in a New Window`,detail:`Will open in a new window, the worktree in $(folder) ${ne.e.getFriendlyPath(e.uri)}`}),c(e.flags,["--add-to-workspace"],{label:"Add Worktree to Workspace",detail:`Will add into the current workspace, the worktree in $(folder) ${ne.e.getFriendlyPath(e.uri)}`}),c(e.flags,["--reveal-explorer"],{label:"Reveal in File Explorer",detail:`Will open in the File Explorer, the worktree in $(folder) ${ne.e.getFriendlyPath(e.uri)}`})],t),r=yield i;return(0,d.i9)(i,e,r)?r[0].item:d.Vd}}function le(e,t,i){const r=new PickCommandStep(e,t),n=r.find(t.command);return null==n?function*(){}():(r.setCommand(n,i),n.executeSteps())}class PickCommandStep{constructor(e,t){this.container=e;const i=(0,s.fw)("gitlens:hasVirtualFolders",!1),o=i||(0,s.fw)("gitlens:readonly",!1)||(0,s.fw)("gitlens:untrusted",!1);if(this.items=[o?void 0:new BranchGitCommand(e,"branch"===t?.command?t:void 0),o?void 0:new CherryPickGitCommand(e,"cherry-pick"===t?.command?t:void 0),i?void 0:new CoAuthorsGitCommand(e,"co-authors"===t?.command?t:void 0),o?void 0:new FetchGitCommand(e,"fetch"===t?.command?t:void 0),new LogGitCommand(e,"log"===t?.command?t:void 0),o?void 0:new MergeGitCommand(e,"merge"===t?.command?t:void 0),o?void 0:new PullGitCommand(e,"pull"===t?.command?t:void 0),o?void 0:new PushGitCommand(e,"push"===t?.command?t:void 0),o?void 0:new RebaseGitCommand(e,"rebase"===t?.command?t:void 0),o?void 0:new RemoteGitCommand(e,"remote"===t?.command?t:void 0),o?void 0:new ResetGitCommand(e,"reset"===t?.command?t:void 0),o?void 0:new RevertGitCommand(e,"revert"===t?.command?t:void 0),new SearchGitCommand(e,"search"===t?.command||"grep"===t?.command?t:void 0),new ShowGitCommand(e,"show"===t?.command?t:void 0),i?void 0:new StashGitCommand(e,"stash"===t?.command?t:void 0),i?void 0:new StatusGitCommand(e,"status"===t?.command?t:void 0),o?void 0:new SwitchGitCommand(e,"switch"===t?.command||"checkout"===t?.command?t:void 0),o?void 0:new TagGitCommand(e,"tag"===t?.command?t:void 0),i?void 0:new WorktreeGitCommand(e,"worktree"===t?.command?t:void 0)].filter((e=>null!=e)),n.D.get("gitCommands.sortBy")===r.zL.Usage){const e=this.container.storage.getWorkspace("gitComandPalette:usage");null!=e&&this.items.sort(((t,i)=>(e[i.key]??0)-(e[t.key]??0)))}this.hiddenItems=[]}buttons=[];hiddenItems;ignoreFocusOut=!1;items;matchOnDescription=!0;placeholder="Choose a git command";title="GitLens";_command;get command(){return this._command}find(e,t=!1){if(t){const t=e.toLowerCase();return this.items.find((e=>e.isFuzzyMatch(t)))??this.hiddenItems.find((e=>e.isFuzzyMatch(t)))}return this.items.find((t=>t.isMatch(e)))??this.hiddenItems.find((t=>t.isMatch(e)))}setCommand(e,t){null!=this._command&&(this._command.picked=!1),null!=e&&(e.picked=!0,e.pickedVia=t),this._command=e,null!=e&&this.updateCommandUsage(e.key,Date.now())}async updateCommandUsage(e,t){let i=this.container.storage.getWorkspace("gitComandPalette:usage");void 0===i&&(i=Object.create(null)),i[e]=t,await this.container.storage.storeWorkspace("gitComandPalette:usage",i)}}},3016:(e,t,i)=>{i.d(t,{DY:()=>f,Ft:()=>h,I4:()=>a,Lp:()=>b,Mn:()=>c,My:()=>s,Nv:()=>p,Q0:()=>o,_9:()=>g,_r:()=>d,cq:()=>v,eY:()=>l,ip:()=>m,jQ:()=>ToggleQuickInputButton,vU:()=>w,v_:()=>u,zY:()=>y});var r=i(9496),n=i(963);class ToggleQuickInputButton{constructor(e,t=!1){this.state=e,this._on=t}get iconPath(){const e=this.getToggledState().icon;return"string"==typeof e?{dark:r.Uri.file(n.W.instance.context.asAbsolutePath(`images/dark/${e}.svg`)),light:r.Uri.file(n.W.instance.context.asAbsolutePath(`images/light/${e}.svg`))}:e}get tooltip(){return this.getToggledState().tooltip}get on(){return this._on}set on(e){this._on=e}getState(){return"function"==typeof this.state?this.state():this.state}getToggledState(){return this.on?this.getState().on:this.getState().off}}class SelectableQuickInputButton extends ToggleQuickInputButton{constructor(e,t,i=!1){super({off:{tooltip:e,icon:t.off},on:{tooltip:e,icon:t.on}},i)}}const s={iconPath:new r.ThemeIcon("sync"),tooltip:"Fetch"},o={iconPath:new r.ThemeIcon("refresh"),tooltip:"Load More"},a=class extends SelectableQuickInputButton{constructor(e=!1){super("Match Case",{off:"icon-match-case",on:"icon-match-case-selected"},e)}},l=class extends SelectableQuickInputButton{constructor(e=!1){super("Match All",{off:"icon-match-all",on:"icon-match-all-selected"},e)}},c=class extends SelectableQuickInputButton{constructor(e=!1){super("Match using Regular Expressions",{off:"icon-match-regex",on:"icon-match-regex-selected"},e)}},h={iconPath:new r.ThemeIcon("git-commit"),tooltip:"Choose a Specific Commit"},u=class extends ToggleQuickInputButton{constructor(e=!1,t,i){super((()=>({on:{tooltip:"Choose a Specific Commit",icon:new r.ThemeIcon("git-commit")},off:{tooltip:"Choose a Branch"+(t.showTags?" or Tag":""),icon:new r.ThemeIcon("git-branch")}})),e),this.onDidClick=i}},d={iconPath:new r.ThemeIcon("empty-window"),tooltip:"Open in New Window"},p={iconPath:new r.ThemeIcon("search"),tooltip:"Reveal in Side Bar"},m={iconPath:new r.ThemeIcon("settings-gear"),tooltip:"Set as Default Remote"},g={iconPath:new r.ThemeIcon("eye"),tooltip:"Open Details"},f={iconPath:new r.ThemeIcon("compare-changes"),tooltip:"Open Changes"},w={iconPath:new r.ThemeIcon("link-external"),tooltip:"Show Results in Side Bar"},v=class extends SelectableQuickInputButton{constructor(e=!1){super("Show Tags",{off:new r.ThemeIcon("tag"),on:"icon-tag-selected"},e)}},y={iconPath:new r.ThemeIcon("check"),tooltip:"Will always confirm"},b=class extends ToggleQuickInputButton{constructor(e=!1,t){super((()=>({on:{tooltip:"Will confirm",icon:{dark:r.Uri.file(n.W.instance.context.asAbsolutePath("images/dark/icon-check.svg")),light:r.Uri.file(n.W.instance.context.asAbsolutePath("images/light/icon-check.svg"))}},off:{tooltip:"Skips confirm",icon:{dark:r.Uri.file(n.W.instance.context.asAbsolutePath("images/dark/icon-no-check.svg")),light:r.Uri.file(n.W.instance.context.asAbsolutePath("images/light/icon-no-check.svg"))}}})),e),this.onDidClick=t}}},6270:(e,t,i)=>{i.d(t,{My:()=>s.My,Q0:()=>s.Q0,eY:()=>s.eY,I4:()=>s.I4,Mn:()=>s.Mn,DY:()=>s.DY,_r:()=>s._r,Ft:()=>s.Ft,v_:()=>s.v_,tR:()=>QuickCommand,Nv:()=>s.Nv,_9:()=>s._9,vU:()=>s.vU,cq:()=>s.cq,Vd:()=>we,C8:()=>B,Wm:()=>ye,i9:()=>be,$V:()=>Ce,Tv:()=>Ae,jf:()=>Re,Ke:()=>Pe,xf:()=>Se,uZ:()=>De,Oz:()=>pe,B$:()=>U,v$:()=>N,f6:()=>G,NQ:()=>H,Kf:()=>V,fG:()=>q,a:()=>me,YB:()=>ve,Gj:()=>ge,Dr:()=>fe,Yv:()=>j,xC:()=>z,sd:()=>Q,FO:()=>Y,s4:()=>K,Rj:()=>J,bR:()=>X,Lt:()=>Z,j8:()=>te,lA:()=>ee,Qp:()=>ie,yY:()=>re,UP:()=>ne,Mb:()=>se,nI:()=>ce,fD:()=>le,KT:()=>oe,up:()=>ue});var r=i(3599),n=i(5148),s=i(3016),o=i(2540),a=i(5255),l=i(963),c=i(3401),h=i(6897),u=i(7445),d=i(4155),p=i(8834),m=i(252),g=i(6713),f=i(5025),w=i(5367),v=i(6450),y=i(4321),b=i(3050),C=i(6503),A=i(3646),P=i(9502),S=i(4794),R=i(3931),D=i(9729),k=i(1742),_=i(5009),T=i(4968),F=i(2800),O=i(1774),E=i(3105),$=i(7469),I=i(3620),x=i(2509);function B(e,t,i,r){if(1===i.repos.length)return r?`${e}${(0,I.$G)(r,a.d$-e.length)}`:e;let n;return n=null!=t.repo?`${r??""}${(0,I.vk)(a.NE.Dot,2,2)}${t.repo.formattedName}`:1===t.repos.length?`${r??""}${(0,I.vk)(a.NE.Dot,2,2)}${t.repos[0].formattedName}`:`${(0,I.vk)(a.NE.Dot,2,2)}${t.repos.length} repositories`,`${e}${(0,I.$G)(n,a.d$-e.length)}`}async function W(e,t){return U(e,["branches"],{buttons:t?.buttons,filter:null!=t?.filter?{branches:t.filter}:void 0,picked:t?.picked,sort:null==t?.sort||{branches:t.sort}})}async function M(e,t){if(null==e)return[];return(await e.getRemotes(null!=t?.filter?{filter:t.filter}:void 0)).map((e=>(0,k.vl)(e,null!=t?.picked&&("string"==typeof t.picked?e.name===t.picked:t.picked.includes(e.name)),{buttons:t?.buttons,upstream:!0})))}async function L(e,{buttons:t,filter:i,includeStatus:r,picked:n}){const s=e instanceof A._j?await e.getWorktrees():e;return Promise.all([...s.filter((e=>null==i||i(e))).map((async e=>{let i,s=!1;if(r)try{i=await e.getStatus()}catch{s=!0}return(0,k.E0)(e,null!=n&&("string"==typeof n?e.uri.toString()===n:n.includes(e.uri.toString())),s,{buttons:t,path:!0,status:i})}))])}async function U(e,t,{buttons:i,filter:r,picked:n,sort:s}={}){if(null==e)return[];let o,a,l=!1;if(e instanceof A._j||1===e.length){l=!0;const i=e instanceof A._j?e:e[0],[n,c]=await Promise.allSettled([t.includes("branches")?i.getBranches({filter:r?.branches,sort:"boolean"==typeof s?s:s?.branches}):void 0,t.includes("tags")?i.getTags({filter:r?.tags,sort:!0}):void 0]);o=(0,$.Sb)(n)?.values??[],a=(0,$.Sb)(c)?.values??[]}else{const[i,n]=await Promise.allSettled([t.includes("branches")?Promise.allSettled(e.map((e=>e.getBranches({filter:r?.branches,sort:"boolean"==typeof s?s:s?.branches})))):void 0,t.includes("tags")?Promise.allSettled(e.map((e=>e.getTags({filter:r?.tags,sort:"boolean"==typeof s?s:s?.tags})))):void 0]),l="fulfilled"===i.status?i.value?.filter((e=>"fulfilled"===e.status))?.map((e=>e.value.values)):void 0,c="fulfilled"===n.status?n.value?.filter((e=>"fulfilled"===e.status))?.map((e=>e.value.values)):void 0;t.includes("branches")&&null!=l&&(o=(0,w.YF)((0,F.jV)(l,((e,t)=>e.name===t.name)))),t.includes("tags")&&null!=c&&(a=(0,P.Pj)((0,F.jV)(c,((e,t)=>e.name===t.name))))}return null!=o&&0!==o.length||null!=a&&0!==a.length?null==o||0===o.length||null!=a&&0!==a.length?null==a||0===a.length||null!=o&&0!==o.length?[(0,D.fz)("Branches"),...await Promise.all(o.filter((e=>!e.remote)).map((e=>(0,k.RE)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l})))),(0,D.fz)("Tags"),...a.map((e=>(0,k.MH)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:i,message:!1,ref:l,type:!0}))),(0,D.fz)("Remote Branches"),...await Promise.all(o.filter((e=>e.remote)).map((e=>(0,k.RE)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"}))))]:a.map((e=>(0,k.MH)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:i,message:!1,ref:l}))):[(0,D.fz)("Branches"),...await Promise.all(o.filter((e=>!e.remote)).map((e=>(0,k.RE)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"})))),(0,D.fz)("Remote Branches"),...await Promise.all(o.filter((e=>e.remote)).map((e=>(0,k.RE)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"}))))]:[]}function N(e,t){return async(i,n)=>{let s=!1;if(n.startsWith("#")&&(s=!0,n=n.substring(1)),null==e)return!1;if(Array.isArray(e)){if(1!==e.length)return!1;e=e[0]}if(s&&t?.ranges&&(0,y.yk)(n))return i.items=[(0,k.RP)(n,e.path,!0,{alwaysShow:!0,buttons:t?.buttons,ref:!1,icon:!1})],!0;if(!await l.W.instance.git.validateReference(e.path,n))return!!s&&(i.items=[(0,r.fw)(r.Xe.Back,!0,{label:"Enter a reference or commit SHA"})],!0);if(!s&&await l.W.instance.git.hasBranchOrTag(e.path,{filter:{branches:e=>e.name.includes(n),tags:e=>e.name.includes(n)}}))return!1;const o=await l.W.instance.git.getCommit(e.path,n);return i.items=[(0,k.YY)(o,!0,{alwaysShow:!0,buttons:t?.buttons,compact:!0,icon:!0})],!0}}async function*G(e,t,i){const r=Pe({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter branch name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid branch name"];if("repo"in e){if(!await l.W.instance.git.validateBranchOrTagName(e.repo.path,t))return[!1,`'${t}' isn't a valid branch name`];return await e.repo.getBranch(t)?[!1,`A branch named '${t}' already exists`]:[!0,void 0]}let i=!0;for(const r of e.repos){if(i=await l.W.instance.git.validateBranchOrTagName(r.path,t),!i)return[!1,`'${t}' isn't a valid branch name`];if(await r.getBranch(t))return[!1,`A branch named '${t}' already exists`]}return[!0,void 0]}}),n=yield r;return Ce(r,e,n)&&await ye(r,e,n)?n:we}async function*H(e,t,i){const r=Pe({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid remote name"];if(!!/[^a-zA-Z0-9-_.]/.test(t))return[!1,`'${t}' isn't a valid remote name`];if("repo"in e){if(0!==(await e.repo.getRemotes({filter:e=>e.name===t})).length)return[!1,`A remote named '${t}' already exists`]}return[!0,void 0]}}),n=yield r;return Ce(r,e,n)&&await ye(r,e,n)?n:we}async function*V(e,t,i){const r=Pe({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote URL",validate:e=>{if(null==e)return[!1,void 0];if(0===(e=e.trim()).length)return[!1,"Please enter a valid remote URL"];const t=S.gK.test(e);return[t,t?void 0:`'${e}' isn't a valid remote URL`]}}),n=yield r;return Ce(r,e,n)&&await ye(r,e,n)?n:we}async function*q(e,t,i){const r=Pe({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter tag name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid tag name"];if("repo"in e){const i=await l.W.instance.git.validateBranchOrTagName(e.repo.path,t);return[i,i?void 0:`'${t}' isn't a valid tag name`]}let i=!0;for(const r of e.repos)if(i=await l.W.instance.git.validateBranchOrTagName(r.path,t),!i)return[!1,`'${t}' isn't a valid branch name`];return[!0,void 0]}}),n=yield r;return Ce(r,e,n)&&await ye(r,e,n)?n:we}async function*Q(e,t,{filter:i,picked:n,placeholder:o,titleContext:a}){const l=await W(e.repo,{buttons:[s.Nv],filter:i,picked:n}),h={title:B(`${t.title}${a??""}`,e,t),placeholder:0===l.length?`No branches found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===l.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:l,onDidClickItemButton:(e,t,{item:i})=>{t===s.Nv&&c.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await c.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},u=yield h;return be(h,e,u)?u[0].item:we}async function*Y(e,t,{filter:i,picked:n,placeholder:o,sort:a,titleContext:l}){const h=await W(e.repo,{buttons:[s.Nv],filter:i,picked:n,sort:a}),u={multiselect:0!==h.length,title:B(`${t.title}${l??""}`,e,t),placeholder:0===h.length?`No branches found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===h.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:h,onDidClickItemButton:(e,t,{item:i})=>{t===s.Nv&&c.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await c.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},d=yield u;return be(u,e,d)?d.map((e=>e.item)):we}async function*j(e,t,{filter:i,picked:n,placeholder:o,titleContext:l,value:u,additionalButtons:d,ranges:p}){t.showTags=!0;const m=new s.cq(t.showTags),f=async()=>U(e.repo,t.showTags?["branches","tags"]:["branches"],{buttons:"boolean"==typeof t.pickCommitForItem?[s.Ft,s.Nv]:[s.Nv],filter:i,picked:n,sort:!0}),w=await f(),v={title:B(`${t.title}${l??""}`,e,t),placeholder:0===w.length?`No branches${t.showTags?" or tags":""} found in ${e.repo.formattedName}`:`${"string"==typeof o?o:o(t)}${a.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:u,selectValueWhenShown:!0,items:0===w.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:w,additionalButtons:[...d??[],m],onDidClickItemButton:(e,i,{item:r})=>i===s.Ft?(t.pickCommitForItem=!0,!0):(i===s.Nv&&((0,y.UR)(r)?c.ay(r,{select:!0,focus:!1,expand:!0}):(0,y.gA)(r)?g.ay(r,{select:!0,focus:!1,expand:!0}):(0,y.FT)(r)&&h.Fw(r,{pin:!1,preserveFocus:!0})),!1),onDidClickButton:async(i,r)=>{if(r===m){i.busy=!0;try{t.showTags=!t.showTags,m.on=t.showTags;const r=await f();i.placeholder=0===r.length?`${e.repo.formattedName} has no branches${t.showTags?" or tags":""}`:`${"string"==typeof o?o:o(t)}${a.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=r}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;const t=e.activeItems[0].item;(0,y.UR)(t)?c.ay(t,{select:!0,focus:!1,expand:!0}):(0,y.gA)(t)?g.ay(t,{select:!0,focus:!1,expand:!0}):(0,y.FT)(t)&&h.Fw(t,{pin:!1,preserveFocus:!0})},onValidateValue:N(e.repo,{ranges:p})},b=yield v;return be(v,e,b)?b[0].item:we}async function*z(e,t,{filter:i,picked:n,placeholder:l,titleContext:u,value:d}){t.showTags=1===e.repos.length;const p=new s.cq(t.showTags),m=()=>U(e.repos,t.showTags?["branches","tags"]:["branches"],{buttons:[s.Nv],filter:{branches:1===e.repos.length?void 0:e=>!e.remote,...i},picked:n??e.reference?.ref,sort:{branches:{orderBy:o.Vz.DateDesc},tags:{orderBy:o.RV.DateDesc}}}),f=await m(),w={title:B(`${t.title}${u??""}`,e,t),placeholder:0===f.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof l?l:l(t)}${a.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:d??((0,y.FT)(e.reference)?e.reference.ref:void 0),selectValueWhenShown:!0,items:0===f.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:f,additionalButtons:[p],onDidClickItemButton:(e,t,{item:i})=>{t===s.Nv&&((0,y.UR)(i)?c.ay(i,{select:!0,focus:!1,expand:!0}):(0,y.gA)(i)?g.ay(i,{select:!0,focus:!1,expand:!0}):(0,y.FT)(i)&&h.Fw(i,{pin:!1,preserveFocus:!0}))},onDidClickButton:async(i,r)=>{if(r===p){i.busy=!0;try{t.showTags=!t.showTags,p.on=t.showTags;const r=await m();i.placeholder=0===r.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof l?l:l(t)}${a.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=r}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;const t=e.activeItems[0].item;(0,y.UR)(t)?c.ay(t,{select:!0,focus:!1,expand:!0}):(0,y.gA)(t)?g.ay(t,{select:!0,focus:!1,expand:!0}):(0,y.FT)(t)&&h.Fw(t,{pin:!1,preserveFocus:!0})},onValidateValue:N(e.repos)},v=yield w;return be(w,e,v)?v[0].item:we}async function*K(e,t,{ignoreFocusOut:i,log:o,onDidLoadMore:a,picked:l,placeholder:c,showInSideBarCommand:u,showInSideBarButton:d,titleContext:p}){function m(e){if(null==e)return[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)];const t=[s._9,s.Nv];return null!=(0,E.Ps)(e.commits)?.[1].file&&t.splice(0,0,s.DY),[...(0,E.UI)(e.commits.values(),(e=>(0,k.YY)(e,null!=l&&("string"==typeof l?e.ref===l:l.includes(e.ref)),{buttons:t,compact:!0,icon:!0}))),...e?.hasMore?[(0,r.fw)(r.Xe.LoadMore)]:[]]}const g={title:B(`${t.title}${p??""}`,e,t),placeholder:"string"==typeof c?c:c(t,o),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,value:"string"==typeof l&&0===o?.count?l:void 0,selectValueWhenShown:!0,items:null!=u?[u,...m(o)]:m(o),onDidLoadMore:async e=>(e.keepScrollPosition=!0,o=await(o?.more?.(n.D.get("advanced.maxListItems"))),a?.(o),"string"!=typeof c&&(e.placeholder=c(t,o)),m(o)),additionalButtons:[...null!=d?.button?[d?.button]:[],...o?.hasMore?[s.Q0]:[]],onDidClickItemButton:(e,t,i)=>{if(!D.$w.is(i))switch(t){case s._9:h.Fw(i.item,{pin:!1,preserveFocus:!0});break;case s.Nv:h.ay(i.item,{select:!0,focus:!1,expand:!0});break;case s.DY:{const e=i.item.file?.path;null!=e&&h.vw(e,i.item);break}}},onDidClickButton:(e,t)=>{if(null==o)return;const i=e.activeItems.filter((e=>!D.$w.is(e)));t===d?.button&&d.onDidClick(i)},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{if(0===e.activeItems.length)return;const i=e.activeItems.filter((e=>!D.$w.is(e)));"ctrl+right"===t?h.Fw(i[0].item,{pin:!1,preserveFocus:!0}):await h.ay(i[0].item,{select:!0,focus:!1,expand:!0})},onValidateValue:N(e.repo,{buttons:[s._9,s.Nv]})},f=yield g;return be(g,e,f)?D.$w.is(f[0])?(De(e),await f[0].execute(),we):f[0].item:we}function*J(e,t,{log:i,onDidLoadMore:o,picked:a,placeholder:l,titleContext:c}){function u(e){return null==e?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:[...(0,E.UI)(e.commits.values(),(e=>(0,k.YY)(e,null!=a&&("string"==typeof a?e.ref===a:a.includes(e.ref)),{buttons:[s._9,s.Nv],compact:!0,icon:!0})))]}const d={title:B(`${t.title}${c??""}`,e,t),multiselect:null!=i,placeholder:"string"==typeof l?l:l(t,i),matchOnDescription:!0,matchOnDetail:!0,items:u(i),onDidLoadMore:async e=>(e.keepScrollPosition=!0,i=await(i?.more?.(n.D.get("advanced.maxListItems"))),o?.(i),"string"!=typeof l&&(e.placeholder=l(t,i)),u(i)),additionalButtons:[...i?.hasMore?[s.Q0]:[]],onDidClickItemButton:(e,t,{item:i})=>{switch(t){case s._9:h.Fw(i,{pin:!1,preserveFocus:!0});break;case s.Nv:h.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&("ctrl+right"===t?h.Fw(e.activeItems[0].item,{pin:!1,preserveFocus:!0}):await h.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0}))}},p=yield d;return be(d,e,p)?p.map((e=>e.item)):we}async function*X(e,t,i="Choose contributors"){const r=(await l.W.instance.git.getOrOpenScmRepository(e.repo.path))?.inputBox.value,n={title:B(t.title,e,t),allowEmpty:!0,multiselect:!0,placeholder:i,matchOnDescription:!0,items:(await l.W.instance.git.getContributors(e.repo.path)).map((e=>(0,k.RI)(e,r?.includes(e.getCoauthor()),{buttons:[s.Nv]}))),onDidClickItemButton:(e,t,{item:i})=>{t===s.Nv&&u.a(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&u.a(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},o=yield n;return be(n,e,o)?o.map((e=>e.item)):we}async function*Z(e,t,{filter:i,picked:n,placeholder:o,titleContext:a}){const l=await M(e.repo,{buttons:[s.Nv],filter:i,picked:n}),c={title:B(`${t.title}${a??""}`,e,t),placeholder:0===l.length?`No remotes found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===l.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:l,onDidClickItemButton:(e,t,{item:i})=>{t===s.Nv&&d.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await d.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},h=yield c;return be(c,e,h)?h[0].item:we}async function*ee(e,t,i="Choose a repository"){if("string"==typeof e.repo&&(e.repo=l.W.instance.git.getRepository(e.repo),null!=e.repo))return e.repo;const n=e.repo??await l.W.instance.git.getOrOpenRepositoryForEditor(),o={title:t.title,placeholder:i,items:0===t.repos.length?[(0,r.fw)(r.Xe.Cancel)]:await Promise.all(t.repos.map((e=>(0,k.FO)(e,e.id===n?.id,{branch:!0,buttons:[s.Nv],fetched:!0,status:!0})))),onDidClickItemButton:(e,i,{item:r})=>{i===s.Nv&&p.ay(r.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&p.ay(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}},a=yield o;return be(o,e,a)?a[0].item:we}async function*te(e,t,i){let n;if(i={placeholder:"Choose repositories",skipIfPossible:!1,...i},null!=e.repos)if((0,F.GI)(e.repos)){if(n=(0,F.DZ)(e.repos,(e=>t.repos.find((t=>t.path===e)))),i.skipIfPossible&&0!==n.length&&e.repos.length===n.length)return n}else n=e.repos;else{const e=await l.W.instance.git.getOrOpenRepositoryForEditor();n=null!=e?[e]:[]}const o={multiselect:!0,title:t.title,placeholder:i.placeholder,items:0===t.repos.length?[(0,r.fw)(r.Xe.Cancel)]:await Promise.all(t.repos.map((e=>(0,k.FO)(e,n.some((t=>t.id===e.id)),{branch:!0,buttons:[s.Nv],fetched:!0,status:!0})))),onDidClickItemButton:(e,i,{item:r})=>{i===s.Nv&&p.ay(r.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&p.ay(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}},a=yield o;return be(o,e,a)?a.map((e=>e.item)):we}function*ie(e,t,{ignoreFocusOut:i,stash:n,picked:o,placeholder:a,titleContext:l}){const c={title:B(`${t.title}${l??""}`,e,t),placeholder:"string"==typeof a?a:a(t,n),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,items:null==n?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:[...(0,E.UI)(n.commits.values(),(e=>(0,k.YY)(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:[s._9],compact:!0,icon:!0})))],onDidClickItemButton:(e,t,{item:i})=>{t===s._9&&m.Fw(i,{pin:!1,preserveFocus:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await m.Fw(e.activeItems[0].item,{pin:!1,preserveFocus:!0})}},h=yield c;return be(c,e,h)?h[0].item:we}async function*re(e,t,{filter:i,picked:n,placeholder:o,titleContext:a}){const l=await async function(e,t){return U(e,["tags"],{buttons:t?.buttons,filter:null!=t?.filter?{tags:t.filter}:void 0,picked:t?.picked,sort:null==t?.sort||{tags:t.sort}})}(e.repo,{buttons:[s.Nv],filter:i,picked:n}),c={multiselect:0!==l.length,title:B(`${t.title}${a??""}`,e,t),placeholder:0===l.length?`No tags found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===l.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:l,onDidClickItemButton:(e,t,{item:i})=>{t===s.Nv&&g.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await g.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},h=yield c;return be(c,e,h)?h.map((e=>e.item)):we}async function*ne(e,t,{filter:i,includeStatus:n,picked:o,placeholder:a,titleContext:l}){const c=await L(t.worktrees??e.repo,{buttons:[s._r,s.Nv],filter:i,includeStatus:n,picked:o}),h={title:B(`${t.title}${l??""}`,e,t),placeholder:0===c.length?`No worktrees found in ${e.repo.formattedName}`:a,matchOnDetail:!0,items:0===c.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:c,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case s._r:(0,x.ic)(i.uri,{location:x.Tc.NewWindow});break;case s.Nv:f.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await f.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},u=yield h;return be(h,e,u)?u[0].item:we}async function*se(e,t,{filter:i,includeStatus:n,picked:o,placeholder:a,titleContext:l}){const c=await L(t.worktrees??e.repo,{buttons:[s._r,s.Nv],filter:i,includeStatus:n,picked:o}),h={multiselect:0!==c.length,title:B(`${t.title}${l??""}`,e,t),placeholder:0===c.length?`No worktrees found in ${e.repo.formattedName}`:a,matchOnDetail:!0,items:0===c.length?[(0,r.fw)(r.Xe.Back,!0),(0,r.fw)(r.Xe.Cancel)]:c,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case s._r:(0,x.ic)(i.uri,{location:x.Tc.NewWindow});break;case s.Nv:f.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await f.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},u=yield h;return be(h,e,u)?u.map((e=>e.item)):we}async function*oe(e,t){const i={title:B((0,y.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:(0,y.Wh)(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:await ae(e),onDidClickItemButton:(t,i,r)=>{switch(i){case s._9:(0,y.pZ)(e.reference)?m.Fw(e.reference,{pin:!1,preserveFocus:!0}):h.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case s.Nv:(0,y.pZ)(e.reference)?m.ay(e.reference,{select:!0,focus:!1,expand:!0}):h.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},r=yield i;return be(i,e,r)?r[0]:we}async function ae(e){const t=[new R.EE(e.reference),new R.sQ(e.reference)];let i;if((0,v.G2)(e.reference))t.push((0,D.fz)("Actions"),new k.Wv("Apply Stash...",{command:"stash",state:{subcommand:"apply",repo:e.repo,reference:e.reference}}),new k.Wv("Delete Stash...",{command:"stash",state:{subcommand:"drop",repo:e.repo,reference:e.reference}}),(0,D.fz)(),new R.NC(e.reference));else{const r=await l.W.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});r?.length&&t.push((0,D.fz)(b.ss.getHighlanderProviderName(r)??"Remote"),new _.az(r,{type:C.J.Commit,sha:e.reference.sha}),new _.eO(r,{type:C.J.Commit,sha:e.reference.sha})),t.push((0,D.fz)("Actions"));const n=await l.W.instance.git.getBranch(e.repo.path),[s,o]=await Promise.all([null!=n?l.W.instance.git.getCommitBranches(e.repo.path,e.reference.ref,{branch:n.name,commitDate:(0,v.f_)(e.reference)?e.reference.committer.date:void 0}):void 0,n?.remote||null==n?.upstream?void 0:e.reference.isPushed()]);Boolean(s?.length)?(i=!o,i&&t.push(new k.Wv("Push to Commit...",{command:"push",state:{repos:e.repo,reference:e.reference}})),t.push(new k.Wv("Revert Commit...",{command:"revert",state:{repo:e.repo,references:[e.reference]}}),new k.Wv(`Reset ${n?.name??"Current Branch"} to Commit...`,{command:"reset",state:{repo:e.repo,reference:e.reference}}),new k.Wv(`Reset ${n?.name??"Current Branch"} to Previous Commit...`,{command:"reset",state:{repo:e.repo,reference:(0,y.xB)(`${e.reference.ref}^`,e.reference.repoPath,{refType:"revision",name:`${e.reference.name}^`,message:e.reference.message})}}))):t.push(new k.Wv("Cherry Pick Commit...",{command:"cherry-pick",state:{repo:e.repo,references:[e.reference]}})),t.push(new k.Wv(`Rebase ${n?.name??"Current Branch"} onto Commit...`,{command:"rebase",state:{repo:e.repo,reference:e.reference}}),new k.Wv("Switch to Commit...",{command:"switch",state:{repos:[e.repo],reference:e.reference}}),(0,D.fz)(),new k.Wv("Create Branch at Commit...",{command:"branch",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),new k.Wv("Create Tag at Commit...",{command:"tag",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),(0,D.fz)("Copy"),new R.OT(e.reference),new R.NC(e.reference))}return t.push((0,D.fz)("Open"),new R.CV(e.reference),new R.Y4(e.reference),new R.o$(e.reference),(0,D.fz)(),new R.lN(e.reference),new R.A1(e.reference)),t.push((0,D.fz)("Compare"),new R.Jw(e.reference),new R.m5(e.reference)),t.push((0,D.fz)(),new R.eG(e.reference),new R.nl(e.reference)),t.push((0,D.fz)("Browse"),new R.Lf(e.reference,{openInNewWindow:!1}),new R.Lf(e.reference,{before:!0,openInNewWindow:!1}),new R.Lf(e.reference,{openInNewWindow:!0}),new R.Lf(e.reference,{before:!0,openInNewWindow:!0})),t.unshift(new R.PF(e.reference,{unpublished:i,hint:"Click to see all changed files"})),t}function*le(e,t,i){e.reference.files;const r={title:B((0,y.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:(0,y.Wh)(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:[new R.PF(e.reference,{picked:null==e.fileName,hint:`Click to see ${(0,v.G2)(e.reference)?"stash":"commit"} actions`}),(0,D.fz)("Files"),...e.reference.files?.map((t=>new R.zr(e.reference,t,i?.picked===t.path)))??[]],matchOnDescription:!0,onDidClickItemButton:(t,i,r)=>{switch(i){case s._9:(0,y.pZ)(e.reference)?m.Fw(e.reference,{pin:!1,preserveFocus:!0}):h.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case s.Nv:(0,y.pZ)(e.reference)?m.ay(e.reference,{select:!0,focus:!1,expand:!0}):h.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},n=yield r;return be(r,e,n)?n[0]:we}async function*ce(e,t){const i={title:B((0,y.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t,`${(0,I.vk)(a.NE.Dot,2,2)}${(0,O.d)(e.fileName,{fileOnly:!0})}`),placeholder:`${(0,O.d)(e.fileName,{relativeTo:e.repo.path})} in ${(0,y.Wh)(e.reference,{icon:!1})}`,ignoreFocusOut:!0,items:await he(e),matchOnDescription:!0,onDidClickItemButton:(t,i,r)=>{switch(i){case s._9:(0,y.pZ)(e.reference)?m.Fw(e.reference,{pin:!1,preserveFocus:!0}):h.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case s.Nv:(0,y.pZ)(e.reference)?m.ay(e.reference,{select:!0,focus:!1,expand:!0}):h.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},r=yield i;return be(i,e,r)?r[0]:we}async function he(e){const t=await e.reference.findFile(e.fileName);if(null==t)return[];const i=[new R.EE(e.reference),new R.sQ(e.reference)];if((0,v.G2)(e.reference))i.push((0,D.fz)(),new R.NC(e.reference),(0,D.fz)("Actions"),new R.do(e.reference,t),new R.QP(e.reference,t),(0,D.fz)(),new R.NC(e.reference));else{const r=await l.W.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});r?.length&&i.push((0,D.fz)(b.ss.getHighlanderProviderName(r)??"Remote"),new _.az(r,{type:C.J.Revision,fileName:e.fileName,commit:e.reference}),new _.eO(r,{type:C.J.Revision,fileName:e.fileName,commit:e.reference}),(0,D.fz)(),new _.az(r,{type:C.J.Commit,sha:e.reference.ref}),new _.eO(r,{type:C.J.Commit,sha:e.reference.sha})),i.push((0,D.fz)("Actions"),new R.do(e.reference,t),new R.QP(e.reference,t),(0,D.fz)("Copy"),new R.OT(e.reference),new R.NC(e.reference))}return i.push((0,D.fz)("Open"),new R.lp(e.reference,e.fileName),new R.aU(e.reference,e.fileName),new R.xL(e.reference,e.fileName),(0,D.fz)()),"D"!==t.status&&i.push(new R.ZO(e.reference,t)),i.push(new R.Wt(e.reference,t)),i.push((0,D.fz)("Compare"),new R.Jw(e.reference),new R.m5(e.reference)),i.push((0,D.fz)("Browse"),new R.Lf(e.reference,{openInNewWindow:!1}),new R.Lf(e.reference,{before:!0,openInNewWindow:!1}),new R.Lf(e.reference,{openInNewWindow:!0}),new R.Lf(e.reference,{before:!0,openInNewWindow:!0})),i.unshift(new R.PF(e.reference,{file:t,hint:"Click to see all changed files"})),i}function*ue(e,t){const i=t.status.getUpstreamStatus({expand:!0,separator:", "}),r=t.status.getFormattedDiffStatus({expand:!0,separator:", "}),n={title:B(t.title,e,t),placeholder:`${i?`${i}, ${r}`:r}`,ignoreFocusOut:!0,items:de(e,t),keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},s=yield n;return be(n,e,s)?s[0]:we}function de(e,t){const i=[],n=t.status.computeWorkingTreeStatus();let s;return s=0===n.staged&&0===n.unstaged?"No working tree changes":`$(files) ${n.staged?`${(0,I._6)("staged file",n.staged)} (${n.stagedStatus})`:""}${n.unstaged?`${n.staged?", ":""}${(0,I._6)("unstaged file",n.unstaged)} (${n.unstagedStatus})`:""}`,t.status.upstream?(0===t.status.state.ahead&&0===t.status.state.behind?i.push((0,r.fw)(r.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is up to date with $(git-branch) ${t.status.upstream}`,detail:s})):0!==t.status.state.ahead&&0!==t.status.state.behind?i.push((0,r.fw)(r.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has diverged from $(git-branch) ${t.status.upstream}`,detail:s})):0!==t.status.state.ahead?i.push((0,r.fw)(r.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is ahead of $(git-branch) ${t.status.upstream}`,detail:s})):0!==t.status.state.behind&&i.push((0,r.fw)(r.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is behind $(git-branch) ${t.status.upstream}`,detail:s})),0!==t.status.state.behind&&i.push(new k.Wv(`$(cloud-download) ${(0,I._6)("commit",t.status.state.behind)} behind`,{command:"log",state:{repo:e.repo,reference:(0,y.xB)((0,y.oI)(t.status.ref,t.status.upstream),e.repo.path)}})),0!==t.status.state.ahead&&i.push(new k.Wv(`$(cloud-upload) ${(0,I._6)("commit",t.status.state.ahead)} ahead`,{command:"log",state:{repo:e.repo,reference:(0,y.xB)((0,y.oI)(t.status.upstream,t.status.ref),e.repo.path)}}))):i.push((0,r.fw)(r.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has no upstream`,detail:s})),t.status.files.length&&(i.push(new R.K6(n.stagedAddsAndChanges.concat(n.unstagedAddsAndChanges))),i.push(new R.rl(n.stagedAddsAndChanges.concat(n.unstagedAddsAndChanges)))),n.staged>0&&(i.push(new R.K6(n.stagedAddsAndChanges,{label:"$(files) Open Staged Files"})),i.push(new R.rl(n.stagedAddsAndChanges,{label:"$(files) Open Only Staged Files"}))),n.unstaged>0&&(i.push(new R.K6(n.unstagedAddsAndChanges,{label:"$(files) Open Unstaged Files"})),i.push(new R.rl(n.unstagedAddsAndChanges,{label:"$(files) Open Only Unstaged Files"}))),t.status.files.length&&i.push(new D.$w("$(x) Close Unchanged Files",a.Gh.CloseUnchangedFiles)),i}async function*pe(e,t,i){const n=await l.W.instance.git.access(i,e.repo.path);if(n.allowed)return;const s=[];let o;if(!1===n.subscription.current.account?.verified)s.push((0,r.fw)(r.Xe.RequiresVerification,!0)),o="You must verify your email before you can continue";else{if(null==n.subscription.required)return;o="✨ Requires a trial or paid plan for use on privately hosted repos",(0,T.aG)(n.subscription.required)&&null!=n.subscription.current.account?(o="✨ Requires a paid plan for use on privately hosted repos",s.push((0,r.fw)(r.Xe.RequiresPaidSubscription,!0))):null!=n.subscription.current.account||(0,T.gA)(n.subscription.current)?s.push((0,r.fw)(r.Xe.ExtendTrial)):s.push((0,r.fw)(r.Xe.StartPreviewTrial,!0))}const a={title:B(t.title,e,t),placeholder:o,items:[...s,(0,r.fw)(r.Xe.Cancel)]};return be(a,e,yield a)?void 0:we}function me(e){return"object"==typeof e&&null!=e.show}function ge(e){return"object"==typeof e&&null==e.items&&null==e.show}function fe(e){return"object"==typeof e&&null!=e.items}const we=Symbol("BreakStep");class QuickCommand{constructor(e,t,i,r,n={}){this.container=e,this.key=t,this.label=i,this.title=r,this.description=n.description,this.detail=n.detail}description;detail;initialState;_currentStep;_stepsIterator;get canConfirm(){return!0}get canSkipConfirm(){return!0}_picked=!1;get picked(){return this._picked}set picked(e){this._picked=e,e||(this._pickedVia="menu")}_pickedVia="menu";get pickedVia(){return this._pickedVia}set pickedVia(e){this._pickedVia=e}get skipConfirmKey(){return`${this.key}:${this.pickedVia}`}get value(){return this._currentStep}confirm(e){return!this.canConfirm||!this.canSkipConfirm||(null!=e?e:!n.D.get("gitCommands.skipConfirmations").includes(this.skipConfirmKey))}isMatch(e){return this.key===e}isFuzzyMatch(e){return this.label===e}executeSteps(){return this.steps(this.getStepState(!0))}async previous(){return(await this.next(r.Xe.Back)).value}async next(e){null==this._stepsIterator&&(this._stepsIterator=this.steps(this.getStepState(!1)));const t=await this._stepsIterator.next(e);return t.done&&(this.initialState=void 0,this._stepsIterator=void 0),t.value===we?(this._currentStep=void 0,{...t,value:void 0}):(this._currentStep=t.value,t)}async retry(){return await this.next(r.Xe.Noop),this.value}canStepsContinue(e){return e.counter>=(e.startingStep??0)}createConfirmStep(e,t,i,r={}){return Ae(e,t,{title:this.title},i,r)}getStepState(e){return{counter:0,...this.initialState,startingStep:e?this.initialState?.counter??0:0}}}function ve(e){return e instanceof QuickCommand}async function ye(e,t,i){if(!Ce(e,t,i))return!1;const[r]=await(e.validate?.(i))??[!0];return!!r&&(t.counter++,!0)}function be(e,t,i){return!!Ce(e,t,i)&&(!!(e.validate?.(i)??1)&&(t.counter++,!0))}function Ce(e,t,i){if(null==i)return!1;if((0,r.wX)(i)){switch(i){case r.Xe.Back:t.counter--,t.counter<=(t.startingStep??0)&&(t.counter=0);break;case r.Xe.Cancel:De(t)}return!1}return!0}function Ae(e,t,i,n,s={}){return{placeholder:`Confirm ${i.title}`,title:e,ignoreFocusOut:!0,items:[...t,n??(0,r.fw)(r.Xe.Cancel)],selectedItems:[t.find((e=>e.picked))??t[0]],...s}}function Pe(e){return e.ignoreFocusOut=!0,e}function Se(e){return e}function Re(e){return e}function De(e){e.counter=-1}},2540:(e,t,i)=>{i.d(t,{CZ:()=>A,DH:()=>S,Dn:()=>m,M7:()=>y,N4:()=>c,RV:()=>C,S4:()=>k,TA:()=>D,TF:()=>n,Uy:()=>h,VP:()=>g,Vc:()=>P,Vn:()=>p,Vz:()=>a,ef:()=>b,fH:()=>s,hp:()=>l,iP:()=>u,il:()=>w,kl:()=>R,o9:()=>v,oE:()=>_,y0:()=>o,zL:()=>f,zW:()=>d});var r=i(8227),n=(e=>(e.File="file",e.Window="window",e))(n||{}),s=(e=>(e.Issue="Issue",e.PullRequest="PullRequest",e))(s||{}),o=(e=>(e.Gutter="gutter",e.Line="line",e.Scrollbar="overview",e))(o||{}),a=(e=>(e.DateDesc="date:desc",e.DateAsc="date:asc",e.NameAsc="name:asc",e.NameDesc="name:desc",e))(a||{}),l=(e=>(e.Gutter="gutter",e.Line="line",e.Scrollbar="overview",e))(l||{}),c=(e=>(e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",e.DiffWithPrevious="gitlens.diffWithPrevious",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.RevealCommitInView="gitlens.revealCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",e.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e))(c||{}),h=(e=>(e.Document="document",e.Containers="containers",e.Blocks="blocks",e))(h||{}),u=(e=>(e.CountDesc="count:desc",e.CountAsc="count:asc",e.DateDesc="date:desc",e.DateAsc="date:asc",e.NameAsc="name:asc",e.NameDesc="name:desc",e))(u||{}),d=(e=>(e.AzureDevOps="AzureDevOps",e.Bitbucket="Bitbucket",e.BitbucketServer="BitbucketServer",e.Custom="Custom",e.Gerrit="Gerrit",e.GoogleSource="GoogleSource",e.Gitea="Gitea",e.GitHub="GitHub",e.GitLab="GitLab",e))(d||{}),p=(e=>(e.Authored="authored",e.Committed="committed",e))(p||{}),m=(e=>(e.Absolute="absolute",e.Relative="relative",e))(m||{}),g=(e=>(e.Blame="blame",e.Changes="changes",e.Heatmap="heatmap",e))(g||{}),f=(e=>(e.Name="name",e.Usage="usage",e))(f||{}),w=(e=>(e.Faces="wavatar",e.Geometric="identicon",e.Monster="monsterid",e.MysteryPerson="mp",e.Retro="retro",e.Robot="robohash",e))(w||{}),v=(e=>(e.Gutter="gutter",e.Line="line",e.Scrollbar="overview",e))(v||{}),y=(e=>(e.Silent="silent",e.Errors="errors",e.Verbose="verbose",e.Debug="debug",e))(y||{}),b=(e=>(e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",e.DiffWithPrevious="gitlens.diffWithPrevious",e.DiffWithWorking="gitlens.diffWithWorking",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.RevealCommitInView="gitlens.revealCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",e.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ToggleCodeLens="gitlens.toggleCodeLens",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e))(b||{}),C=(e=>(e.DateDesc="date:desc",e.DateAsc="date:asc",e.NameAsc="name:asc",e.NameDesc="name:desc",e))(C||{}),A=(e=>(e.List="list",e.Tree="tree",e))(A||{}),P=(e=>(e.Auto="auto",e.List="list",e.Tree="tree",e))(P||{}),S=(e=>(e.Branch="branch",e.Working="working",e))(S||{}),R=(e=>(e.CommitHasNoPreviousCommitWarning="suppressCommitHasNoPreviousCommitWarning",e.CommitNotFoundWarning="suppressCommitNotFoundWarning",e.CreatePullRequestPrompt="suppressCreatePullRequestPrompt",e.SuppressDebugLoggingWarning="suppressDebugLoggingWarning",e.FileNotUnderSourceControlWarning="suppressFileNotUnderSourceControlWarning",e.GitDisabledWarning="suppressGitDisabledWarning",e.GitMissingWarning="suppressGitMissingWarning",e.GitVersionWarning="suppressGitVersionWarning",e.LineUncommittedWarning="suppressLineUncommittedWarning",e.NoRepositoryWarning="suppressNoRepositoryWarning",e.RebaseSwitchToTextWarning="suppressRebaseSwitchToTextWarning",e.IntegrationDisconnectedTooManyFailedRequestsWarning="suppressIntegrationDisconnectedTooManyFailedRequestsWarning",e.IntegrationRequestFailed500Warning="suppressIntegrationRequestFailed500Warning",e.IntegrationRequestTimedOutWarning="suppressIntegrationRequestTimedOutWarning",e))(R||{});const D=["defaultItemLimit","formats","pageItemLimit","showRelativeDateMarkers"],k=["branches","commits","commitDetails","contributors","fileHistory","lineHistory","remotes","repositories","searchAndCompare","stashes","tags","worktrees"];function _(e){switch(e){case"silent":return r.i.Off;case"errors":return r.i.Error;case"verbose":return r.i.Info;case"debug":return r.i.Debug;default:return e}}},5255:(e,t,i)=>{i.d(t,{Gh:()=>a,NE:()=>c,XP:()=>h,ZY:()=>s,_h:()=>l,d$:()=>n,lw:()=>d,m1:()=>r,mN:()=>o,sN:()=>u});const r="gitlens",n=80,s={".png":"image/png",".gif":"image/gif",".jpg":"image/jpeg",".jpeg":"image/jpeg",".jpe":"image/jpeg",".webp":"image/webp",".tif":"image/tiff",".tiff":"image/tiff",".bmp":"image/bmp"};var o=(e=>(e[e.Hash=35]="Hash",e[e.Slash=47]="Slash",e[e.Digit0=48]="Digit0",e[e.Digit1=49]="Digit1",e[e.Digit2=50]="Digit2",e[e.Digit3=51]="Digit3",e[e.Digit4=52]="Digit4",e[e.Digit5=53]="Digit5",e[e.Digit6=54]="Digit6",e[e.Digit7=55]="Digit7",e[e.Digit8=56]="Digit8",e[e.Digit9=57]="Digit9",e[e.Backslash=92]="Backslash",e[e.A=65]="A",e[e.B=66]="B",e[e.C=67]="C",e[e.D=68]="D",e[e.E=69]="E",e[e.F=70]="F",e[e.Z=90]="Z",e[e.a=97]="a",e[e.b=98]="b",e[e.c=99]="c",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.z=122]="z",e))(o||{}),a=(e=>(e.ActionPrefix="gitlens.action.",e.AddAuthors="gitlens.addAuthors",e.BrowseRepoAtRevision="gitlens.browseRepoAtRevision",e.BrowseRepoAtRevisionInNewWindow="gitlens.browseRepoAtRevisionInNewWindow",e.BrowseRepoBeforeRevision="gitlens.browseRepoBeforeRevision",e.BrowseRepoBeforeRevisionInNewWindow="gitlens.browseRepoBeforeRevisionInNewWindow",e.ClearFileAnnotations="gitlens.clearFileAnnotations",e.CloseUnchangedFiles="gitlens.closeUnchangedFiles",e.CloseWelcomeView="gitlens.closeWelcomeView",e.CompareWith="gitlens.compareWith",e.CompareHeadWith="gitlens.compareHeadWith",e.CompareWorkingWith="gitlens.compareWorkingWith",e.ComputingFileAnnotations="gitlens.computingFileAnnotations",e.ConnectRemoteProvider="gitlens.connectRemoteProvider",e.CopyAutolinkUrl="gitlens.copyAutolinkUrl",e.CopyCurrentBranch="gitlens.copyCurrentBranch",e.CopyDeepLinkToBranch="gitlens.copyDeepLinkToBranch",e.CopyDeepLinkToCommit="gitlens.copyDeepLinkToCommit",e.CopyDeepLinkToComparison="gitlens.copyDeepLinkToComparison",e.CopyDeepLinkToRepo="gitlens.copyDeepLinkToRepo",e.CopyDeepLinkToTag="gitlens.copyDeepLinkToTag",e.CopyMessageToClipboard="gitlens.copyMessageToClipboard",e.CopyRemoteBranchesUrl="gitlens.copyRemoteBranchesUrl",e.CopyRemoteBranchUrl="gitlens.copyRemoteBranchUrl",e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteComparisonUrl="gitlens.copyRemoteComparisonUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrlToClipboard",e.CopyRemoteFileUrlWithoutRange="gitlens.copyRemoteFileUrlWithoutRange",e.CopyRemoteFileUrlFrom="gitlens.copyRemoteFileUrlFrom",e.CopyRemoteIssueUrl="gitlens.copyRemoteIssueUrl",e.CopyRemotePullRequestUrl="gitlens.copyRemotePullRequestUrl",e.CopyRemoteRepositoryUrl="gitlens.copyRemoteRepositoryUrl",e.CopyShaToClipboard="gitlens.copyShaToClipboard",e.CopyRelativePathToClipboard="gitlens.copyRelativePathToClipboard",e.CreatePullRequestOnRemote="gitlens.createPullRequestOnRemote",e.DiffDirectory="gitlens.diffDirectory",e.DiffDirectoryWithHead="gitlens.diffDirectoryWithHead",e.DiffWith="gitlens.diffWith",e.DiffWithNext="gitlens.diffWithNext",e.DiffWithNextInDiffLeft="gitlens.diffWithNextInDiffLeft",e.DiffWithNextInDiffRight="gitlens.diffWithNextInDiffRight",e.DiffWithPrevious="gitlens.diffWithPrevious",e.DiffWithPreviousInDiffLeft="gitlens.diffWithPreviousInDiffLeft",e.DiffWithPreviousInDiffRight="gitlens.diffWithPreviousInDiffRight",e.DiffLineWithPrevious="gitlens.diffLineWithPrevious",e.DiffWithRevision="gitlens.diffWithRevision",e.DiffWithRevisionFrom="gitlens.diffWithRevisionFrom",e.DiffWithWorking="gitlens.diffWithWorking",e.DiffWithWorkingInDiffLeft="gitlens.diffWithWorkingInDiffLeft",e.DiffWithWorkingInDiffRight="gitlens.diffWithWorkingInDiffRight",e.DiffLineWithWorking="gitlens.diffLineWithWorking",e.DisconnectRemoteProvider="gitlens.disconnectRemoteProvider",e.DisableDebugLogging="gitlens.disableDebugLogging",e.EnableDebugLogging="gitlens.enableDebugLogging",e.DisableRebaseEditor="gitlens.disableRebaseEditor",e.EnableRebaseEditor="gitlens.enableRebaseEditor",e.ExternalDiff="gitlens.externalDiff",e.ExternalDiffAll="gitlens.externalDiffAll",e.FetchRepositories="gitlens.fetchRepositories",e.GenerateCommitMessage="gitlens.generateCommitMessage",e.GetStarted="gitlens.getStarted",e.InviteToLiveShare="gitlens.inviteToLiveShare",e.OpenAutolinkUrl="gitlens.openAutolinkUrl",e.OpenBlamePriorToChange="gitlens.openBlamePriorToChange",e.OpenBranchesOnRemote="gitlens.openBranchesOnRemote",e.OpenBranchOnRemote="gitlens.openBranchOnRemote",e.OpenCurrentBranchOnRemote="gitlens.openCurrentBranchOnRemote",e.OpenChangedFiles="gitlens.openChangedFiles",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenComparisonOnRemote="gitlens.openComparisonOnRemote",e.OpenFileHistory="gitlens.openFileHistory",e.OpenFileFromRemote="gitlens.openFileFromRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.OpenFileOnRemoteFrom="gitlens.openFileOnRemoteFrom",e.OpenFileAtRevision="gitlens.openFileRevision",e.OpenFileAtRevisionFrom="gitlens.openFileRevisionFrom",e.OpenFolderHistory="gitlens.openFolderHistory",e.OpenOnRemote="gitlens.openOnRemote",e.OpenIssueOnRemote="gitlens.openIssueOnRemote",e.OpenPullRequestOnRemote="gitlens.openPullRequestOnRemote",e.OpenAssociatedPullRequestOnRemote="gitlens.openAssociatedPullRequestOnRemote",e.OpenRepoOnRemote="gitlens.openRepoOnRemote",e.OpenRevisionFile="gitlens.openRevisionFile",e.OpenRevisionFileInDiffLeft="gitlens.openRevisionFileInDiffLeft",e.OpenRevisionFileInDiffRight="gitlens.openRevisionFileInDiffRight",e.OpenWalkthrough="gitlens.openWalkthrough",e.OpenWorkingFile="gitlens.openWorkingFile",e.OpenWorkingFileInDiffLeft="gitlens.openWorkingFileInDiffLeft",e.OpenWorkingFileInDiffRight="gitlens.openWorkingFileInDiffRight",e.PullRepositories="gitlens.pullRepositories",e.PushRepositories="gitlens.pushRepositories",e.GitCommands="gitlens.gitCommands",e.GitCommandsBranch="gitlens.gitCommands.branch",e.GitCommandsCherryPick="gitlens.gitCommands.cherryPick",e.GitCommandsMerge="gitlens.gitCommands.merge",e.GitCommandsRebase="gitlens.gitCommands.rebase",e.GitCommandsReset="gitlens.gitCommands.reset",e.GitCommandsRevert="gitlens.gitCommands.revert",e.GitCommandsSwitch="gitlens.gitCommands.switch",e.GitCommandsTag="gitlens.gitCommands.tag",e.GitCommandsWorktree="gitlens.gitCommands.worktree",e.GitCommandsWorktreeOpen="gitlens.gitCommands.worktree.open",e.OpenOrCreateWorktreeForGHPR="gitlens.ghpr.views.openOrCreateWorktree",e.PlusHide="gitlens.plus.hide",e.PlusLoginOrSignUp="gitlens.plus.loginOrSignUp",e.PlusLogout="gitlens.plus.logout",e.PlusManage="gitlens.plus.manage",e.PlusPurchase="gitlens.plus.purchase",e.PlusResendVerification="gitlens.plus.resendVerification",e.PlusRestore="gitlens.plus.restore",e.PlusShowPlans="gitlens.plus.showPlans",e.PlusStartPreviewTrial="gitlens.plus.startPreviewTrial",e.PlusValidate="gitlens.plus.validate",e.QuickOpenFileHistory="gitlens.quickOpenFileHistory",e.RefreshFocus="gitlens.focus.refresh",e.RefreshGraph="gitlens.graph.refresh",e.RefreshHover="gitlens.refreshHover",e.RefreshTimelinePage="gitlens.timeline.refresh",e.ResetAvatarCache="gitlens.resetAvatarCache",e.ResetOpenAIKey="gitlens.resetOpenAIKey",e.ResetSuppressedWarnings="gitlens.resetSuppressedWarnings",e.ResetTrackedUsage="gitlens.resetTrackedUsage",e.ResetViewsLayout="gitlens.resetViewsLayout",e.RevealCommitInView="gitlens.revealCommitInView",e.SearchCommits="gitlens.showCommitSearch",e.SearchCommitsInView="gitlens.views.searchAndCompare.searchCommits",e.ShowBranchesView="gitlens.showBranchesView",e.ShowCommitDetailsView="gitlens.showCommitDetailsView",e.ShowCommitInView="gitlens.showCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowCommitsView="gitlens.showCommitsView",e.ShowContributorsView="gitlens.showContributorsView",e.ShowFileHistoryView="gitlens.showFileHistoryView",e.ShowFocusPage="gitlens.showFocusPage",e.ShowGraph="gitlens.showGraph",e.ShowGraphPage="gitlens.showGraphPage",e.ShowGraphView="gitlens.showGraphView",e.ShowHomeView="gitlens.showHomeView",e.ShowAccountView="gitlens.showAccountView",e.ShowInCommitGraph="gitlens.showInCommitGraph",e.ShowInCommitGraphView="gitlens.showInCommitGraphView",e.ShowInDetailsView="gitlens.showInDetailsView",e.ShowLastQuickPick="gitlens.showLastQuickPick",e.ShowLineCommitInView="gitlens.showLineCommitInView",e.ShowLineHistoryView="gitlens.showLineHistoryView",e.OpenOnlyChangedFiles="gitlens.openOnlyChangedFiles",e.ShowQuickBranchHistory="gitlens.showQuickBranchHistory",e.ShowQuickCommit="gitlens.showQuickCommitDetails",e.ShowQuickCommitFile="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ShowQuickRepoStatus="gitlens.showQuickRepoStatus",e.ShowQuickCommitRevision="gitlens.showQuickRevisionDetails",e.ShowQuickCommitRevisionInDiffLeft="gitlens.showQuickRevisionDetailsInDiffLeft",e.ShowQuickCommitRevisionInDiffRight="gitlens.showQuickRevisionDetailsInDiffRight",e.ShowQuickStashList="gitlens.showQuickStashList",e.ShowRemotesView="gitlens.showRemotesView",e.ShowRepositoriesView="gitlens.showRepositoriesView",e.ShowSearchAndCompareView="gitlens.showSearchAndCompareView",e.ShowSettingsPage="gitlens.showSettingsPage",e.ShowSettingsPageAndJumpToBranchesView="gitlens.showSettingsPage#branches-view",e.ShowSettingsPageAndJumpToCommitsView="gitlens.showSettingsPage#commits-view",e.ShowSettingsPageAndJumpToContributorsView="gitlens.showSettingsPage#contributors-view",e.ShowSettingsPageAndJumpToFileHistoryView="gitlens.showSettingsPage#file-history-view",e.ShowSettingsPageAndJumpToLineHistoryView="gitlens.showSettingsPage#line-history-view",e.ShowSettingsPageAndJumpToRemotesView="gitlens.showSettingsPage#remotes-view",e.ShowSettingsPageAndJumpToRepositoriesView="gitlens.showSettingsPage#repositories-view",e.ShowSettingsPageAndJumpToSearchAndCompareView="gitlens.showSettingsPage#search-compare-view",e.ShowSettingsPageAndJumpToStashesView="gitlens.showSettingsPage#stashes-view",e.ShowSettingsPageAndJumpToTagsView="gitlens.showSettingsPage#tags-view",e.ShowSettingsPageAndJumpToWorkTreesView="gitlens.showSettingsPage#worktrees-view",e.ShowSettingsPageAndJumpToViews="gitlens.showSettingsPage#views",e.ShowSettingsPageAndJumpToCommitGraph="gitlens.showSettingsPage#commit-graph",e.ShowSettingsPageAndJumpToAutolinks="gitlens.showSettingsPage#autolinks",e.ShowStashesView="gitlens.showStashesView",e.ShowTagsView="gitlens.showTagsView",e.ShowTimelinePage="gitlens.showTimelinePage",e.ShowTimelineView="gitlens.showTimelineView",e.ShowWelcomePage="gitlens.showWelcomePage",e.ShowWorktreesView="gitlens.showWorktreesView",e.ShowWorkspacesView="gitlens.showWorkspacesView",e.StashApply="gitlens.stashApply",e.StashSave="gitlens.stashSave",e.StashSaveFiles="gitlens.stashSaveFiles",e.SwitchAIModel="gitlens.switchAIModel",e.SwitchMode="gitlens.switchMode",e.ToggleCodeLens="gitlens.toggleCodeLens",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileBlameInDiffLeft="gitlens.toggleFileBlameInDiffLeft",e.ToggleFileBlameInDiffRight="gitlens.toggleFileBlameInDiffRight",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e.ToggleFileHeatmapInDiffLeft="gitlens.toggleFileHeatmapInDiffLeft",e.ToggleFileHeatmapInDiffRight="gitlens.toggleFileHeatmapInDiffRight",e.ToggleGraph="gitlens.toggleGraph",e.ToggleMaximizedGraph="gitlens.toggleMaximizedGraph",e.ToggleLineBlame="gitlens.toggleLineBlame",e.ToggleReviewMode="gitlens.toggleReviewMode",e.ToggleZenMode="gitlens.toggleZenMode",e.ViewsCopy="gitlens.views.copy",e.ViewsOpenDirectoryDiff="gitlens.views.openDirectoryDiff",e.ViewsOpenDirectoryDiffWithWorking="gitlens.views.openDirectoryDiffWithWorking",e.Deprecated_DiffHeadWith="gitlens.diffHeadWith",e.Deprecated_DiffWorkingWith="gitlens.diffWorkingWith",e.Deprecated_OpenBranchesInRemote="gitlens.openBranchesInRemote",e.Deprecated_OpenBranchInRemote="gitlens.openBranchInRemote",e.Deprecated_OpenCommitInRemote="gitlens.openCommitInRemote",e.Deprecated_OpenFileInRemote="gitlens.openFileInRemote",e.Deprecated_OpenInRemote="gitlens.openInRemote",e.Deprecated_OpenRepoInRemote="gitlens.openRepoInRemote",e.Deprecated_ShowFileHistoryInView="gitlens.showFileHistoryInView",e))(a||{});const l=new Map([["workbench.view.scm",["branches","commits","remotes","repositories","stashes","tags","worktrees","contributors"]],["workbench.view.extension.gitlensPanel",["graph","graphDetails"]],["workbench.view.extension.gitlensInspect",["commitDetails","fileHistory","lineHistory","timeline","searchAndCompare"]],["workbench.view.extension.gitlens",["home","workspaces","account"]]]);var c=(e=>(e.AngleBracketLeftHeavy="❰",e.AngleBracketRightHeavy="❱",e.ArrowBack="↩",e.ArrowDown="↓",e.ArrowDownUp="⇵",e.ArrowDropRight="⤷",e.ArrowHeadRight="➤",e.ArrowLeft="←",e.ArrowLeftDouble="⇐",e.ArrowLeftRight="↔",e.ArrowLeftRightDouble="⇔",e.ArrowLeftRightDoubleStrike="⇎",e.ArrowLeftRightLong="⟷",e.ArrowRight="→",e.ArrowRightDouble="⇒",e.ArrowRightHollow="⇨",e.ArrowUp="↑",e.ArrowUpDown="⇅",e.ArrowUpRight="↗",e.ArrowsHalfLeftRight="⇋",e.ArrowsHalfRightLeft="⇌",e.ArrowsLeftRight="⇆",e.ArrowsRightLeft="⇄",e.Asterisk="∗",e.Check="✔",e.Dash="—",e.Dot="•",e.Ellipsis="…",e.EnDash="–",e.Envelope="✉",e.EqualsTriple="≡",e.Flag="⚑",e.FlagHollow="⚐",e.MiddleEllipsis="⋯",e.MuchLessThan="≪",e.MuchGreaterThan="≫",e.Pencil="✎",e.Space=" ",e.SpaceThin=" ",e.SpaceThinnest=" ",e.SquareWithBottomShadow="❏",e.SquareWithTopShadow="❐",e.Warning="⚠",e.ZeroWidthSpace="​",e))(c||{});const h=["left","alt+left","ctrl+left","right","alt+right","ctrl+right","alt+,","alt+.","alt+enter","ctrl+enter","escape"];var u=(e=>(e.DebugConsole="debug",e.File="file",e.Git="git",e.GitHub="github",e.GitLens="gitlens",e.Output="output",e.PRs="pr",e.Terminal="vscode-terminal",e.Vsls="vsls",e.VslsScc="vsls-scc",e.Virtual="vscode-vfs",e))(u||{}),d=(e=>(e.Version="gitlens:synced:version",e.PreReleaseVersion="gitlens:synced:preVersion",e.HomeViewWelcomeVisible="gitlens:views:welcome:visible",e))(d||{})},963:(e,t,i)=>{i.d(t,{W:()=>bn,N:()=>Cn});var r=i(9496),n=i(185),s=i(5255),o=i(3148),a=i(4575),l=i(8887),c=i(6592),h=i(2380),u=i(7462),d=i(5367),p=i(6450),m=i(439),g=i(1719),f=i(7881),w=i(5069),v=i(4321),y=i(3050),b=i(3646),C=i(827),A=i(9502);var P=i(2540),S=i(4336),R=i(2795);const D=/\/_git\/?/i,k=/^DefaultCollection\//i,_=/^(.*?)\/(.*?)\/(.*)/,T=/^(ssh|vs-ssh)\./i,F=/^\/?v\d\//i,O=/path=([^&]+)/i,E=/line=(\d+)(?:&lineEnd=(\d+))?/;class AzureDevOpsRemote extends R.x{constructor(e,t,i,r,n=!1){if(T.test(e)){t=t.replace(F,""),e=e.replace(T,"");const i=_.exec(t);if(null!=i){const[,r,s,o]=i;n?(e=`${r}.${e}`,t=`${s}/_git/${o}`):t=`${r}/${s}/_git/${o}`}}super(e,t=decodeURIComponent(t),i,r)}_autolinks;get autolinks(){if(void 0===this._autolinks){const e=this.baseUrl.replace(D,"/");this._autolinks=[{prefix:"#",url:`${e}/_workitems/edit/<num>`,title:`Open Work Item #<num> on ${this.name}`,type:P.fH.Issue,description:`${this.name} Work Item #<num>`},{prefix:"Merged PR ",url:`${this.baseUrl}/pullrequest/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:P.fH.PullRequest,description:`${this.name} Pull Request #<num>`}]}return this._autolinks}get icon(){return"azdo"}get id(){return"azure-devops"}get name(){return"Azure DevOps"}_displayPath;get displayPath(){return void 0===this._displayPath&&(this._displayPath=this.path.replace(D,"/").replace(k,"")),this._displayPath}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return Promise.resolve(void 0);let r,n;if(t.query){const e=E.exec(t.query);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(n=parseInt(i,10)))}}const s=O.exec(t.query);if(null==s)return Promise.resolve(void 0);const[,o]=s,a=e.toAbsoluteUri(o,{validate:i?.validate});return Promise.resolve(null!=a?{uri:a,startLine:r,endLine:n}:void 0)}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/?version=GB${e}&_a=history`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branchCompare?baseVersion=GB${e}&targetVersion=GB${t}`)}getUrlForFile(e,t,i,r){let n;return n=null!=r?r.start.line===r.end.line?`&line=${r.start.line}&lineStartColumn=${r.start.character+1}&lineEndColumn=${r.end.character+1}`:`&line=${r.start.line}&lineEnd=${r.end.line}&lineStartColumn=${r.start.character+1}&lineEndColumn=${r.end.character+1}`:"",i?this.encodeUrl(`${this.baseUrl}?path=${e}&version=GC${i}${n}&_a=contents`):t?this.encodeUrl(`${this.baseUrl}/?path=/${e}&version=GB${t}&_a=contents${n}`):this.encodeUrl(`${this.baseUrl}?path=/${e}${n}`)}}const $=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,I=/^lines-(\d+)(?::(\d+))?$/;class BitbucketRemote extends R.x{constructor(e,t,i,r,n=!1){super(e,t,i,r,n)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:P.fH.Issue,description:`${this.name} Issue #<num>`},{prefix:"pull request #",url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:P.fH.PullRequest,description:`${this.name} Pull Request #<num>`}]),this._autolinks}get icon(){return"bitbucket"}get id(){return"bitbucket"}get name(){return this.formatName("Bitbucket")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,n;if(t.fragment){const e=I.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(n=parseInt(i,10)))}}const s=$.exec(t.path);if(null==s)return;const[,,,o]=s;let a,l=o.indexOf("/",1);if(-1!==l){const t=o.substring(1,l);if((0,v.D3)(t)){const t=e.toAbsoluteUri(o.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:n}}}const c=new Map;l=o.length;do{l=o.lastIndexOf("/",l-1),a=o.substring(1,l),c.set(a,o.substr(l))}while(l>0);if(0!==c.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&c.has(e.getNameWithoutRemote())});for(const s of t){const t=c.get(s.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:n}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,r){let n;return n=null!=r?r.start.line===r.end.line?`#${e}-${r.start.line}`:`#${e}-${r.start.line}:${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/src/${i}/${e}`)}${n}`:t?`${this.encodeUrl(`${this.baseUrl}/src/${t}/${e}`)}${n}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${n}`}}const x=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,B=/^lines-(\d+)(?::(\d+))?$/;class BitbucketServerRemote extends R.x{constructor(e,t,i,r,n=!1){super(e,t,i,r,n)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:P.fH.Issue,description:`${this.name} Issue #<num>`},{prefix:"pull request #",ignoreCase:!0,url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:P.fH.PullRequest,description:`${this.name} Pull Request #<num>`}]),this._autolinks}get baseUrl(){const[e,t]=this.path.startsWith("scm/")?this.path.replace("scm/","").split("/"):this.splitPath();return`${this.protocol}://${this.domain}/projects/${e}/repos/${t}`}get icon(){return"bitbucket"}get id(){return"bitbucket-server"}get name(){return this.formatName("Bitbucket Server")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,n;if(t.fragment){const e=B.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(n=parseInt(i,10)))}}const s=x.exec(t.path);if(null==s)return;const[,,,o]=s;let a,l=o.indexOf("/",1);if(-1!==l){const t=o.substring(1,l);if((0,v.D3)(t)){const t=e.toAbsoluteUri(o.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:n}}}const c=new Map;l=o.length;do{l=o.lastIndexOf("/",l-1),a=o.substring(1,l),c.set(a,o.substr(l))}while(l>0);if(0!==c.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&c.has(e.getNameWithoutRemote())});for(const s of t){const t=c.get(s.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:n}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/commits?until=${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,r){let n;return n=null!=r?r.start.line===r.end.line?`#${r.start.line}`:`#${r.start.line}-${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${i}`)}${n}`:t?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${t}`)}${n}`:`${this.encodeUrl(`${this.baseUrl}/browse/${e}`)}${n}`}}var W=i(3620);class CustomRemote extends R.x{urls;constructor(e,t,i,r,n){super(e,t,r,n,!0),this.urls=i}get id(){return"custom"}get name(){return this.formatName("Custom")}getLocalInfoFromRemoteUri(e,t){return Promise.resolve(void 0)}getUrlForRepository(){return this.getUrl(this.urls.repository,this.getContext())}getUrlForBranches(){return this.getUrl(this.urls.branches,this.getContext())}getUrlForBranch(e){return this.getUrl(this.urls.branch,this.getContext({branch:e}))}getUrlForCommit(e){return this.getUrl(this.urls.commit,this.getContext({id:e}))}getUrlForComparison(e,t,i){if(null!=this.urls.comparison)return this.getUrl(this.urls.comparison,this.getContext({ref1:e,ref2:t,notation:i}))}getUrlForFile(e,t,i,r){let n,s,o;n=null!=r?r.start.line===r.end.line?(0,W.sX)(this.urls.fileLine,{line:r.start.line,line_encoded:r.start.line}):(0,W.sX)(this.urls.fileRange,{start:r.start.line,start_encoded:r.start.line,end:r.end.line,end_encoded:r.end.line}):"",i?(s=this.urls.fileInCommit,o=this.getContext({id:i,file:e,line:n})):t?(s=this.urls.fileInBranch,o=this.getContext({branch:t,file:e,line:n})):(s=this.urls.file,o=this.getContext({file:e,line:n}));let a=(0,W.sX)(s,o);if((0,W.Gg)(s).some((e=>e.key.endsWith("_encoded"))))return a;const l=a.includes("#");if(a=this.encodeUrl(a),l){const e=a.lastIndexOf("%23");-1!==e&&(a=`${a.substring(0,e)}#${a.substring(e+3)}`)}return a}getUrl(e,t){const i=(0,W.sX)(e,t);return(0,W.Gg)(e).some((e=>e.key.endsWith("_encoded")))?i:this.encodeUrl(i)}getContext(e){const[t,i]=this.splitPath(),r={repo:this.path,repoBase:t,repoPath:i,...e??{}};for(const[e,t]of Object.entries(r))r[`${e}_encoded`]=encodeURIComponent(t);return r}}const M=/^\/([^/]+)\/\+(.+)$/i,L=/^(\d+)$/;class GerritRemote extends R.x{constructor(e,t,i,r,n=!1,s=!0){s&&"ssh"!==i&&(t=t.replace(/^a\//,"")),super(e,t,i,r,n)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"Change-Id: ",url:`${this.baseReviewUrl}/q/<num>`,title:`Open Change #<num> on ${this.name}`,alphanumeric:!0,description:`${this.name} Change #<num>`}]),this._autolinks}get icon(){return"gerrit"}get id(){return"gerrit"}get name(){return this.formatName("Gerrit")}get baseUrl(){return`${this.protocol}://${this.domain}/plugins/gitiles/${this.path}`}get baseReviewUrl(){return`${this.protocol}://${this.domain}`}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r;if(t.fragment){const e=L.exec(t.fragment);if(null!=e){const[,t]=e;t&&(r=parseInt(t,10))}}const n=M.exec(t.path);if(null==n)return;const[,,s]=n;let o=s.indexOf("/",1);if(-1!==o){const t=s.substring(1,o);if((0,v.D3)(t)||"HEAD"==t){const t=e.toAbsoluteUri(s.substr(o),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r}}}if(s.startsWith("/refs/heads/")){const t=s.substr(12);let n;const a=new Map;o=t.length;do{o=t.lastIndexOf("/",o-1),n=t.substring(1,o),a.set(n,t.substr(o))}while(o>0);if(0!==a.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&a.has(e.getNameWithoutRemote())});for(const n of t){const t=a.get(n.getNameWithoutRemote());if(null==t)continue;const s=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=s)return{uri:s,startLine:r}}}}else if(s.startsWith("/refs/tags/")){const t=s.substr(11);let n;const a=new Map;o=t.length;do{o=t.lastIndexOf("/",o-1),n=t.substring(1,o),a.set(n,t.substr(o))}while(o>0);if(0!==a.size){const{values:t}=await e.getTags({filter:e=>a.has(e.name)});for(const n of t){const t=a.get(n.name);if(null==t)continue;const s=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=s)return{uri:s,startLine:r}}}}else;}getUrlForBranches(){return this.encodeUrl(`${this.baseReviewUrl}/admin/repos/${this.path},branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/+/refs/heads/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseReviewUrl}/q/${e}`)}getUrlForFile(e,t,i,r){const n=null!=r?`#${r.start.line}`:"";return i?`${this.encodeUrl(`${this.baseUrl}/+/${i}/${e}`)}${n}`:t?`${this.encodeUrl(`${this.getUrlForBranch(t)}/${e}`)}${n}`:`${this.encodeUrl(`${this.baseUrl}/+/HEAD/${e}`)}${n}`}}const U=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,N=/^L(\d+)(?:-L(\d+))?$/;class GiteaRemote extends R.x{constructor(e,t,i,r,n=!1){super(e,t,i,r,n)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:P.fH.Issue,description:`${this.name} Issue #<num>`}]),this._autolinks}get icon(){return"gitea"}get id(){return"gitea"}get name(){return this.formatName("Gitea")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,n;if(t.fragment){const e=N.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(n=parseInt(i,10)))}}const s=U.exec(t.path);if(null==s)return;const[,,,o]=s;let a,l;if(o.startsWith("/commit/")&&(a=8,l=o.indexOf("/",a),-1!==l)){const t=o.substring(a,l);if((0,v.D3)(t)){const t=e.toAbsoluteUri(o.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:n}}}if(o.startsWith("/branch/")){let t;const s=new Map;a=8,l=a;do{t=o.substring(a,l),s.set(t,o.substr(l)),l=o.indexOf("/",l+1)}while(l<o.length&&-1!==l);if(0!==s.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&s.has(e.getNameWithoutRemote())});for(const o of t){const t=s.get(o.getNameWithoutRemote());if(null==t)continue;const a=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=a)return{uri:a,startLine:r,endLine:n}}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/src/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}...${t}`)}getUrlForFile(e,t,i,r){let n;return n=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-L${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/src/commit/${i}/${e}`)}${n}`:t?`${this.encodeUrl(`${this.baseUrl}/src/branch/${t}/${e}`)}${n}`:`${this.encodeUrl(`${this.baseUrl}/src/${e}`)}${n}`}}var G=i(2075),H=i(4241),V=i(8786),q=i(2509),Q=i(3084),Y=Object.defineProperty,j=Object.getOwnPropertyDescriptor;const z=/\b(?<repo>[^/\s]+\/[^/\s]+)#(?<num>[0-9]+)\b(?!]\()/g,K=/\b(?<repo>[^/\s]+\/[^/\s]+)!(?<num>[0-9]+)\b(?!]\()/g,J=/^\/([^/]+)\/([^/]+?)\/-\/blob(.+)$/i,X=/^L(\d+)(?:-(\d+))?$/,Z=Object.freeze({id:"gitlab",scopes:["read_api","read_user","read_repository"]});class GitLabRemote extends Q.D{get authProvider(){return Z}constructor(e,t,i,r,n,s=!1){super(e,t,i,r,n,s)}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api`:`https://${this.domain}/api`}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/-/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:P.fH.Issue,description:`${this.name} Issue #<num>`},{prefix:"!",url:`${this.baseUrl}/-/merge_requests/<num>`,title:`Open Merge Request !<num> on ${this.name}`,type:P.fH.PullRequest,description:`${this.name} Merge Request !<num>`},{tokenize:(e,t,i)=>"plaintext"===t?e:e.replace(z,((e,r,n)=>{const s=(0,V.M)(`${this.protocol}://${this.domain}/${r}/-/issues/${n}`),o=` "Open Issue #${n} from ${r} on ${this.name}"`,a=`\0${i.size}\0`;return"markdown"===t?i.set(a,`[${e}](${s}${o})`):"html"===t&&i.set(a,`<a href="${s}" title=${o}>${e}</a>`),a})),parse:(e,t)=>{let i,r,n;for(;;){if(n=z.exec(e),null==n?.groups)break;({repo:i,num:r}=n.groups),t.set(r,{provider:this,id:r,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/-/issues/${r}`,title:`Open Issue #<num> from ${i} on ${this.name}`,type:P.fH.Issue,description:`${this.name} Issue ${i}#${r}`})}}},{tokenize:(e,t,i)=>"plaintext"===t?e:e.replace(K,((e,r,n)=>{const s=(0,V.M)(`${this.protocol}://${this.domain}/${r}/-/merge_requests/${n}`),o=` "Open Merge Request !${n} from ${r} on ${this.name}"`,a=`\0${i.size}\0`;return"markdown"===t?i.set(a,`[${e}](${s}${o})`):"html"===t&&i.set(a,`<a href="${s}" title=${o}>${e}</a>`),a})),parse:(e,t)=>{let i,r,n;for(;;){if(n=K.exec(e),null==n?.groups)break;({repo:i,num:r}=n.groups),t.set(r,{provider:this,id:r,prefix:`${i}!`,url:`${this.protocol}://${this.domain}/${i}/-/merge_requests/${r}`,title:`Open Merge Request !<num> from ${i} on ${this.name}`,type:P.fH.PullRequest,description:`Merge Request !${r} from ${i} on ${this.name}`})}}}]),this._autolinks}get icon(){return"gitlab"}get id(){return"gitlab"}get name(){return this.formatName("GitLab")}async connect(){return!(!(0,W.qq)(this.domain,"gitlab.com")&&!await(0,Q.e)("GitLab self-managed instance",this.container))&&super.connect()}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,n;if(t.fragment){const e=X.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(n=parseInt(i,10)))}}const s=J.exec(t.path);if(null==s)return;const[,,,o]=s;let a,l=o.indexOf("/",1);if(-1!==l){const t=o.substring(1,l);if((0,v.D3)(t)){const t=e.toAbsoluteUri(o.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:n}}}const c=new Map;l=o.length;do{l=o.lastIndexOf("/",l-1),a=o.substring(1,l),c.set(a,o.substr(l))}while(l>0);if(0!==c.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&c.has(e.getNameWithoutRemote())});for(const s of t){const t=c.get(s.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:n}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/-/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/-/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/-/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/-/compare/${e}${i}${t}`)}getUrlForFile(e,t,i,r){let n;return n=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/-/blob/${i}/${e}`)}${n}`:t?`${this.encodeUrl(`${this.baseUrl}/-/blob/${t}/${e}`)}${n}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${n}`}async getProviderAccountForCommit({accessToken:e},t,i){const[r,n]=this.splitPath();return(await this.container.gitlab)?.getAccountForCommit(this,e,r,n,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i){const[r,n]=this.splitPath();return(await this.container.gitlab)?.getAccountForEmail(this,e,r,n,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.gitlab)?.getDefaultBranch(this,e,t,i,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t){const[i,r]=this.splitPath();return(await this.container.gitlab)?.getIssueOrPullRequest(this,e,i,r,Number(t),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,r){const[n,s]=this.splitPath(),{include:o,...a}=r??{},l=(await Promise.resolve().then(i.bind(i,6630))).toGitLabMergeRequestState;return(await this.container.gitlab)?.getPullRequestForBranch(this,e,n,s,t,{...a,include:o?.map((e=>l(e))),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t){const[i,r]=this.splitPath();return(await this.container.gitlab)?.getPullRequestForCommit(this,e,i,r,t,{baseUrl:this.apiBaseUrl})}async getProviderRepositoryMetadata({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.gitlab)?.getRepositoryMetadata(this,e,t,i,{baseUrl:this.apiBaseUrl})}async searchProviderMyPullRequests(e){return Promise.resolve(void 0)}async searchProviderMyIssues(e){return Promise.resolve(void 0)}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?j(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&Y(t,i,s)})([(0,H.cM)()],GitLabRemote.prototype,"connect",1);class GitLabAuthenticationProvider{_disposable;constructor(e){this._disposable=e.integrationAuthentication.registerProvider("gitlab",this)}dispose(){this._disposable.dispose()}getSessionId(e){return e?.domain??""}async createSession(e){const t=r.window.createInputBox();t.ignoreFocusOut=!0;const i=[];let n;try{const s={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the GitLab Access Tokens Page"};n=await new Promise((n=>{i.push(t.onDidHide((()=>n(void 0))),t.onDidChangeValue((()=>t.validationMessage=void 0)),t.onDidAccept((()=>{const e=t.value.trim();e?n(e):t.validationMessage="A personal access token is required"})),t.onDidTriggerButton((t=>{t===s&&r.env.openExternal(r.Uri.parse(`https://${e?.domain??"gitlab.com"}/-/profile/personal_access_tokens`))}))),t.password=!0,t.title="GitLab Authentication"+(e?.domain?`  • ${e.domain}`:""),t.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,t.prompt=t.prompt=(0,q.gn)("input-prompt-links")?`Paste your [GitLab Personal Access Token](https://${e?.domain??"gitlab.com"}/-/profile/personal_access_tokens "Get your GitLab Access Token")`:"Paste your GitLab Personal Access Token",t.buttons=[s],t.show()}))}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}if(n)return{id:this.getSessionId(e),accessToken:n,scopes:[],account:{id:"",label:""}}}}class GoogleSourceRemote extends GerritRemote{constructor(e,t,i,r,n=!1){super(e,t,i,r,n,!1)}get id(){return"google-source"}get name(){return this.formatName("Google Source")}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}get reviewDomain(){const[e,...t]=this.domain.split(".");return[`${e}-review`,...t].join(".")}get baseReviewUrl(){return`${this.protocol}://${this.reviewDomain}`}}const ee=[{custom:!1,matcher:"bitbucket.org",creator:(e,t,i)=>new BitbucketRemote(t,i)},{custom:!1,matcher:"github.com",creator:(e,t,i)=>new G.gu(e,t,i)},{custom:!1,matcher:"gitlab.com",creator:(e,t,i)=>new GitLabRemote(e,t,i)},{custom:!1,matcher:/\bdev\.azure\.com$/i,creator:(e,t,i)=>new AzureDevOpsRemote(t,i)},{custom:!0,matcher:/^(.+\/(?:bitbucket|stash))\/scm\/(.+)$/i,creator:(e,t,i)=>new BitbucketServerRemote(t,i)},{custom:!1,matcher:/\bgitlab\b/i,creator:(e,t,i)=>new GitLabRemote(e,t,i)},{custom:!1,matcher:/\bvisualstudio\.com$/i,creator:(e,t,i)=>new AzureDevOpsRemote(t,i,void 0,void 0,!0)},{custom:!1,matcher:/\bgitea\b/i,creator:(e,t,i)=>new GiteaRemote(t,i)},{custom:!1,matcher:/\bgerrithub\.io$/i,creator:(e,t,i)=>new GerritRemote(t,i)},{custom:!1,matcher:/\bgooglesource\.com$/i,creator:(e,t,i)=>new GoogleSourceRemote(t,i)}];function te(e){switch(e.type){case P.zW.AzureDevOps:return(t,i,r)=>new AzureDevOpsRemote(i,r,e.protocol,e.name,!0);case P.zW.Bitbucket:return(t,i,r)=>new BitbucketRemote(i,r,e.protocol,e.name,!0);case P.zW.BitbucketServer:return(t,i,r)=>new BitbucketServerRemote(i,r,e.protocol,e.name,!0);case P.zW.Custom:return(t,i,r)=>new CustomRemote(i,r,e.urls,e.protocol,e.name);case P.zW.Gerrit:return(t,i,r)=>new GerritRemote(i,r,e.protocol,e.name,!0);case P.zW.GoogleSource:return(t,i,r)=>new GoogleSourceRemote(i,r,e.protocol,e.name,!0);case P.zW.Gitea:return(t,i,r)=>new GiteaRemote(i,r,e.protocol,e.name,!0);case P.zW.GitHub:return(t,i,r)=>new G.gu(t,i,r,e.protocol,e.name,!0);case P.zW.GitLab:return(t,i,r)=>new GitLabRemote(t,i,r,e.protocol,e.name,!0);default:return}}function ie(e,t){return(i,r,n)=>function(e,t,i,r,n){try{const s=r.toLowerCase();for(const{custom:o,matcher:a,creator:l}of t){if("string"==typeof a){if(a===s)return l(e,r,n);continue}if(a.test(s))return l(e,r,n);if(!o)continue;const t=a.exec(i);if(null!=t)return l(e,t[1],t[2])}return}catch(e){return void S.Yd.error(e,"createRemoteProvider")}}(e,t,i,r,n)}var re=i(6934),ne=i(5148),se=i(2061),oe=i(5432),ae=i(3105),le=i(6004),ce=i(3700),he=i(7469),ue=i(9701),de=i(2185),pe=i(9796);class TrackedDocument{constructor(e,t,i,r){this.document=e,this.dirty=t,this._eventDelegates=i,this.container=r}static async create(e,t,i,r){const n=new TrackedDocument(e,t,i,r);return await n.initialize(),n}_onDidBlameStateChange=new r.EventEmitter;get onDidBlameStateChange(){return this._onDidBlameStateChange.event}state;_disposable;_disposed=!1;_uri;dispose(){this.state=void 0,this._disposed=!0,this._disposable?.dispose()}initializing=!0;async initialize(){const e=this.document.uri;this._uri=await u.YY.fromUri(e),this._disposed||await this.update(),this.initializing=!1}_forceDirtyStateChangeOnNextDocumentChange=!1;get forceDirtyStateChangeOnNextDocumentChange(){return this._forceDirtyStateChangeOnNextDocumentChange}_hasRemotes=!1;get hasRemotes(){return this._hasRemotes}get isBlameable(){return!this._blameFailed&&this._isTracked}_isDirtyIdle=!1;get isDirtyIdle(){return this._isDirtyIdle}set isDirtyIdle(e){this._isDirtyIdle=e}get isRevision(){return null!=this._uri&&(Boolean(this._uri.sha)&&this._uri.sha!==m.Ii)}_isTracked=!1;get isTracked(){return this._isTracked}get lineCount(){return this.document.lineCount}get uri(){return this._uri}async activate(){this._requiresUpdate&&await this.update(),(0,se.v)("gitlens:activeFileStatus",this.getStatus())}is(e){return e===this.document}_updateDebounced;reset(e){this._requiresUpdate=!0,this._blameFailed=!1,this._isDirtyIdle=!1,null!=this.state&&(this.state=void 0,S.Yd.log(`Reset state for '${this.document.uri.toString(!0)}', reason=${e}`)),"repository"===e&&(0,q.$S)(this.document)&&(null==this._updateDebounced&&(this._updateDebounced=(0,pe.Ds)(this.update.bind(this),250)),this._updateDebounced())}_blameFailed=!1;setBlameFailure(){const e=this.isBlameable;this._blameFailed=!0,e&&(0,q.$S)(this.document)&&this.update({forceBlameChange:!0})}resetForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!1}setForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!0}_requiresUpdate=!0;async update({forceBlameChange:e}={}){if(this._requiresUpdate=!1,this._disposed||null==this._uri)return this._hasRemotes=!1,void(this._isTracked=!1);this._isDirtyIdle=!1;const t=(0,q.aW)(this.document),i=e?void 0:this.isBlameable,r=this.container.git.getRepository(this._uri);if(null==r?(this._isTracked=!1,this._hasRemotes=!1):[this._isTracked,this._hasRemotes]=await Promise.all([this.container.git.isTracked(this._uri),r.hasRemotes()]),null!=t){const e=this.isBlameable;if((0,se.v)("gitlens:activeFileStatus",this.getStatus()),!this.initializing&&i!==e){const i={editor:t,document:this,blameable:e};this._onDidBlameStateChange.fire(i),this._eventDelegates.onDidBlameStateChange(i)}}}getStatus(){let e="";return this.isTracked&&(e+="tracked|"),this.isBlameable&&(e+="blameable|"),this.isRevision&&(e+="revision|"),this.hasRemotes&&(e+="remotes|"),e||void 0}}var me=Object.defineProperty,ge=Object.getOwnPropertyDescriptor;class DocumentTracker{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),ne.D.onDidChange(this.onConfigurationChanged,this),r.window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged,this),r.workspace.onDidChangeTextDocument((0,pe.Ds)(this.onTextDocumentChanged,50),this),r.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),r.workspace.onDidSaveTextDocument(this.onTextDocumentSaved,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this)),this._dirtyIdleTriggerDelay=ne.D.get("advanced.blame.delayAfterEdit")}_onDidChangeBlameState=new r.EventEmitter;get onDidChangeBlameState(){return this._onDidChangeBlameState.event}_onDidChangeContent=new r.EventEmitter;get onDidChangeContent(){return this._onDidChangeContent.event}_onDidChangeDirtyState=new r.EventEmitter;get onDidChangeDirtyState(){return this._onDidChangeDirtyState.event}_onDidTriggerDirtyIdle=new r.EventEmitter;get onDidTriggerDirtyIdle(){return this._onDidTriggerDirtyIdle.event}_dirtyIdleTriggerDelay;_disposable;_documentMap=new Map;dispose(){this._disposable.dispose(),this.clear()}onReady(){this.onConfigurationChanged(),this.onActiveTextEditorChanged(r.window.activeTextEditor)}_timer;onActiveTextEditorChanged(e){if(null!=e&&!(0,q.PH)(e))return;if(null!=this._timer&&(clearTimeout(this._timer),this._timer=void 0),null==e)return void(this._timer=setTimeout((()=>{this._timer=void 0,(0,se.v)("gitlens:activeFileStatus",void 0)}),250));const t=this._documentMap.get(e.document);null==t?this.addCore(e.document):t.then((e=>e.activate()),(()=>{}))}onConfigurationChanged(e){null!=e&&(ne.D.changed(e,"blame.ignoreWhitespace")||ne.D.changed(e,"advanced.caching.enabled"))&&this.reset("config"),ne.D.changed(e,"advanced.blame.delayAfterEdit")&&(this._dirtyIdleTriggerDelay=ne.D.get("advanced.blame.delayAfterEdit"),this._dirtyIdleTriggeredDebounced=void 0)}onRepositoriesChanged(e){this.reset("repository",e.added.length?new Set(e.added.map((e=>e.path))):void 0,e.removed.length?new Set(e.removed.map((e=>e.path))):void 0)}onRepositoryChanged(e){e.changed(b.I6.Index,b.I6.Heads,b.I6.Status,b.I6.Unknown,b.du.Any)&&this.reset("repository",new Set([e.repository.path]))}async onTextDocumentChanged(e){const{scheme:t}=e.document.uri;if(!this.container.git.supportedSchemes.has(t))return;const i=await(this._documentMap.get(e.document)??this.addCore(e.document));i.reset("document");const n=e.document.isDirty,s=r.window.activeTextEditor;null!=this._dirtyIdleTriggeredDebounced&&(n?this._dirtyIdleTriggeredDebounced({editor:s,document:i}):this._dirtyIdleTriggeredDebounced.cancel()),s?.document===e.document&&this._onDidChangeContent.fire({editor:s,document:i,contentChanges:e.contentChanges}),(i.forceDirtyStateChangeOnNextDocumentChange||i.dirty!==n)&&(i.resetForceDirtyStateChangeOnNextDocumentChange(),i.dirty=n,null!=s&&s.document===e.document&&this.fireDocumentDirtyStateChanged({editor:s,document:i,dirty:i.dirty}))}onTextDocumentClosed(e){this.remove(e)}async onTextDocumentSaved(e){const t=this._documentMap.get(e);null==t?(0,q.$S)(e)&&this.addCore(e):(await t).update({forceBlameChange:!0})}async add(e){let t;if((0,u.uy)(e))try{t=await r.workspace.openTextDocument(e.documentUri())}catch(i){const n=i?.toString()??"";if(r.env.language.startsWith("en"))if(n.includes("File seems to be binary and cannot be opened as text"))t=new BinaryTextDocument(e);else{if(!(n.includes("File not found")||n.includes("Unable to read file")||n.includes("Unable to resolve non-existing file")))throw i;t=new MissingRevisionTextDocument(e)}else{if(!n.includes("cannot open"))throw i;t=new MissingRevisionTextDocument(e)}}else t=e instanceof r.Uri?await r.workspace.openTextDocument(e):e;return this.addCore(t)}async addCore(e){const t=TrackedDocument.create(e,!1,{onDidBlameStateChange:e=>this._onDidChangeBlameState.fire(e)},this.container);return this._documentMap.set(e,t),t}async clear(){for(const e of this._documentMap.values())(await e).dispose();this._documentMap.clear()}get(e){if(e instanceof r.Uri){const t=(0,q.s5)(e);if(null==t)return;e=t}return this._documentMap.get(e)}async getOrAdd(e){e instanceof r.Uri&&(e=(0,q.s5)(e)??e);return this.get(e)??this.add(e)}has(e){if(e instanceof r.Uri){const t=(0,q.s5)(e);if(null==t)return!1;e=t}return this._documentMap.has(e)}async remove(e,t){let i;null!=t&&(i=this._documentMap.get(e)),this._documentMap.delete(e),(t??await i)?.dispose()}_dirtyIdleTriggeredDebounced;_dirtyStateChangedDebounced;fireDocumentDirtyStateChanged(e){if(e.dirty)return queueMicrotask((()=>{this._dirtyStateChangedDebounced?.cancel(),r.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)})),void(this._dirtyIdleTriggerDelay>0&&(null==this._dirtyIdleTriggeredDebounced&&(this._dirtyIdleTriggeredDebounced=(0,pe.Ds)((e=>{this._dirtyIdleTriggeredDebounced?.pending()||(e.document.isDirtyIdle=!0,this._onDidTriggerDirtyIdle.fire(e))}),this._dirtyIdleTriggerDelay)),this._dirtyIdleTriggeredDebounced({editor:e.editor,document:e.document})));null==this._dirtyStateChangedDebounced&&(this._dirtyStateChangedDebounced=(0,pe.Ds)((e=>{r.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)}),250)),this._dirtyStateChangedDebounced(e)}reset(e,t,i){Promise.allSettled((0,ae.UI)((0,ae.hX)(this._documentMap,(([e])=>"string"==typeof e)),(async([,r])=>{const n=await r;i?.has(n.uri.repoPath)?this.remove(n.document,n):(null==t||t.has(n.uri.repoPath))&&n.reset(e)})))}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?ge(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&me(t,i,s)})([(0,H.fF)({args:{1:e=>null!=e?(0,ae.v_)(e,","):"",2:e=>null!=e?(0,ae.v_)(e,","):""}})],DocumentTracker.prototype,"reset",1);class EmptyTextDocument{constructor(e){this.gitUri=e,this.uri=e.documentUri(),this.eol=r.EndOfLine.LF,this.fileName=this.uri.fsPath,this.isClosed=!1,this.isDirty=!1,this.isUntitled=!1,this.languageId="",this.lineCount=0,this.version=0}eol;fileName;isClosed;isDirty;isUntitled;languageId;lineCount;uri;version;getText(e){throw new Error("Method not supported.")}getWordRangeAtPosition(e,t){throw new Error("Method not supported.")}lineAt(e){throw new Error("Method not supported.")}offsetAt(e){throw new Error("Method not supported.")}positionAt(e){throw new Error("Method not supported.")}save(){throw new Error("Method not supported.")}validatePosition(e){throw new Error("Method not supported.")}validateRange(e){throw new Error("Method not supported.")}}class BinaryTextDocument extends EmptyTextDocument{}class MissingRevisionTextDocument extends EmptyTextDocument{}class GitDocumentState{blameCache=new Map;diffCache=new Map;logCache=new Map;clearBlame(e){null!=e?this.blameCache.delete(e):this.blameCache.clear()}clearDiff(e){null!=e?this.diffCache.delete(e):this.diffCache.clear()}clearLog(e){null!=e?this.logCache.delete(e):this.logCache.clear()}getBlame(e){return this.blameCache.get(e)}getDiff(e){return this.diffCache.get(e)}getLog(e){return this.logCache.get(e)}setBlame(e,t){null!=t?this.blameCache.set(e,t):this.blameCache.delete(e)}setDiff(e,t){null!=t?this.diffCache.set(e,t):this.diffCache.delete(e)}setLog(e,t){null!=t?this.logCache.set(e,t):this.logCache.delete(e)}}class GitDocumentTracker extends DocumentTracker{async resetCache(e,t){const i=this.get(e);if(null!=i)switch(t){case"blame":(await i).state?.clearBlame();break;case"diff":(await i).state?.clearDiff();break;case"log":(await i).state?.clearLog()}}}async function fe(e){try{const e=r.extensions.getExtension("ms-vscode.remote-repositories")??r.extensions.getExtension("GitHub.remotehub");if(null==e)throw S.Yd.log("GitHub Repositories extension is not installed or enabled"),new a.R5("GitHub Repositories","GitHub.remotehub");return e.isActive?e.exports:await e.activate()}catch(t){if(S.Yd.error(t,"Unable to get required api from the GitHub Repositories extension"),a.R5,e)return;throw t}}var we=(e=>(e[e.Branch=0]="Branch",e[e.RemoteBranch=1]="RemoteBranch",e[e.Tag=2]="Tag",e[e.Commit=3]="Commit",e))(we||{}),ve=i(3878),ye=Object.defineProperty,be=Object.getOwnPropertyDescriptor,Ce=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?be(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ye(t,i,s),s};const Ae=/"/g,Pe=Object.freeze([]),Se=Object.freeze({values:[]}),Re=Promise.resolve(void 0),De=["repo","read:user","user:email"],ke=/^[^/](?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ~^:?*[\\]+[^./]$/;class GitHubGitProvider{constructor(e){this.container=e,this._disposables.push(this.container.events.on("git:cache:reset",(e=>e.data.repoPath?this.resetCache(e.data.repoPath,...e.data.caches??Pe):this.resetCaches(...e.data.caches??Pe)),r.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged,this)))}descriptor={id:h.pq.GitHub,name:"GitHub",virtual:!0};supportedSchemes=new Set([s.sN.Virtual,s.sN.GitHub,s.sN.PRs]);_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeRepository=new r.EventEmitter;get onDidChangeRepository(){return this._onDidChangeRepository.event}_onDidCloseRepository=new r.EventEmitter;get onDidCloseRepository(){return this._onDidCloseRepository.event}_onDidOpenRepository=new r.EventEmitter;get onDidOpenRepository(){return this._onDidOpenRepository.event}_branchesCache=new Map;_repoInfoCache=new Map;_tagsCache=new Map;_disposables=[];dispose(){this._disposables.forEach((e=>{e.dispose()}))}onAuthenticationSessionsChanged(e){"github"===e.provider.id&&(this._sessionPromise=void 0,this.ensureSession(!1,!0))}onRepositoryChanged(e,t){this._branchesCache.delete(e.path),this._tagsCache.delete(e.path),this._repoInfoCache.delete(e.path),this._onDidChangeRepository.fire(t)}async discoverRepositories(e,t){if(!this.supportedSchemes.has(e.scheme))return[];try{const{remotehub:i}=await this.ensureRepositoryContext(e.toString(),!0),r=i.getVirtualWorkspaceUri(e);return null==r?[]:this.openRepository(void 0,r,!0,void 0,t?.silent)}catch(t){return t.message.startsWith("No provider registered with")&&(S.Yd.error(t,"No GitHub provider registered with Remote Repositories (yet); queuing pending discovery"),this._pendingDiscovery.add(e),this.ensurePendingRepositoryDiscovery()),[]}}_pendingDiscovery=new Set;_pendingTimer;ensurePendingRepositoryDiscovery(){null==this._pendingTimer&&0!==this._pendingDiscovery.size&&(this._pendingTimer=setTimeout((async()=>{try{const e=await fe();for(const t of this._pendingDiscovery){if(null==e.getProvider(t))return this._pendingTimer=void 0,void this.ensurePendingRepositoryDiscovery();this._pendingDiscovery.delete(t)}this._pendingTimer=void 0,setTimeout((()=>this._onDidChange.fire()),1),0!==this._pendingDiscovery.size&&this.ensurePendingRepositoryDiscovery()}catch{this._pendingTimer=void 0,this.ensurePendingRepositoryDiscovery()}}),250))}updateContext(){(0,se.v)("gitlens:hasVirtualFolders",this.container.git.hasOpenRepositories(this.descriptor.id))}openRepository(e,t,i,n,s){return[new b._j(this.container,this.onRepositoryChanged.bind(this),this.descriptor,e,t,i,n??!r.window.state.focused,s)]}async supports(e){switch(e){case l.A.Stashes:case l.A.Worktrees:case l.A.StashOnlyStaged:return!1;default:return!0}}async visibility(e){const t=await this.getRemotes(e,{sort:!0});if(0===t.length)return[h.q4.Local,void 0];for await(const e of(0,he.rX)(t.map((e=>this.getRemoteVisibility(e)))))if("fulfilled"===e.status&&e.value[0]===h.q4.Public)return[h.q4.Public,(0,y.Ym)(e.value[1])];return[h.q4.Private,(0,y.Ym)(t)]}async getRemoteVisibility(e){if("github"===e.provider?.id){const{github:t,metadata:i,session:r}=await this.ensureRepositoryContext(e.repoPath);return[await t.getRepositoryVisibility(r.accessToken,i.repo.owner,i.repo.name)??h.q4.Private,e]}return[h.q4.Private,e]}async getOpenScmRepositories(){return[]}async getScmRepository(e){}async getOrOpenScmRepository(e){}canHandlePathOrUri(e,t){if(this.supportedSchemes.has(e))return"string"==typeof t?t:t.toString()}getAbsoluteUri(e,t){if("string"==typeof t){if(!(0,ce.tE)(t))throw r.window.showErrorMessage(`Unable to get absolute uri between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be a uri`),new Error(`Base path '${t}' must be a uri`);t=r.Uri.parse(t,!0)}if("string"==typeof e&&!(0,ce.tE)(e)){const i=(0,ce.AH)(e);if(!(0,ce.YP)(i))return r.Uri.joinPath(t,i)}const i=this.getRelativePath(e,t);return r.Uri.joinPath(t,i)}async getBestRevisionUri(e,t,i){return i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t)}getRelativePath(e,t){if("string"==typeof t){if(!(0,ce.tE)(t))throw r.window.showErrorMessage(`Unable to get relative path between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be a uri`),new Error(`Base path '${t}' must be a uri`);t=r.Uri.parse(t,!0)}let i;if("string"==typeof e){if(!(0,ce.tE)(e))return e=(0,ce.AH)(e),i=(0,ce.YP)(e)&&e.startsWith(t.path)?e.slice(t.path.length):e,i.charCodeAt(0)===s.mN.Slash&&(i=i.slice(1)),i;e=r.Uri.parse(e,!0)}return i=(0,ce.AH)((0,ce.Gf)(t.path.slice(1),e.path.slice(1))),i}getRevisionUri(e,t,i){const r=this.createProviderUri(e,i,t);return i===m.Ii?r.with({query:"~"}):r}async getWorkingUri(e,t){return this.createVirtualUri(e,void 0,t.path)}async addRemote(e,t,i,r){}async pruneRemote(e,t){}async removeRemote(e,t){}async applyChangesToWorkingFile(e,t,i){}async branchContainsCommit(e,t,i){return!1}async checkout(e,t,i){}resetCache(e,...t){(0===t.length||t.includes("branches"))&&this._branchesCache.delete(e),(0===t.length||t.includes("tags"))&&this._tagsCache.delete(e),0===t.length&&this._repoInfoCache.delete(e)}resetCaches(...e){(0===e.length||e.includes("branches"))&&this._branchesCache.clear(),(0===e.length||e.includes("tags"))&&this._tagsCache.clear(),0===e.length&&this._repoInfoCache.clear()}async excludeIgnoredUris(e,t){return t}async fetch(e,t){}async pull(e,t){}async push(e,t){}async findRepositoryUri(e,t){const i=(0,le.UH)();try{const t=await this.ensureRemoteHubApi();return t.getProviderRootUri(e).with({scheme:s.sN.Virtual})}catch(e){return a.R5,void S.Yd.error(e,i)}}async getAheadBehindCommitCount(e,t){}async getBlame(e,t){const i=(0,le.UH)();if(t?.isDirty)return;let r="blame";null!=e.sha&&(r+=`:${e.sha}`);const n=await this.container.tracker.getOrAdd(e);if(null!=n.state){const e=n.state.getBlame(r);if(null!=e)return S.Yd.debug(i,`Cache hit: '${r}'`),e.item}S.Yd.debug(i,`Cache miss: '${r}'`),null==n.state&&(n.state=new GitDocumentState);const s=this.getBlameCore(e,n,r,i);if(null!=n.state){S.Yd.debug(i,`Cache add: '${r}'`);const e={item:s};n.state.setBlame(r,e)}return s}async getBlameCore(e,t,i,n){try{const t=await this.ensureRepositoryContext(e.repoPath);if(null==t)return;const{metadata:i,github:n,remotehub:o,session:a}=t,l=o.getVirtualUri(o.getProviderRootUri(e)),c=this.getRelativePath(e,l);if(e.scheme===s.sN.Virtual){const[t,i]=await Promise.allSettled([r.workspace.fs.stat(e),r.workspace.fs.stat(e.with({scheme:s.sN.GitHub}))]);if("fulfilled"!==t.status||"fulfilled"!==i.status||t.value.mtime!==i.value.mtime)return}const h=e.sha&&"HEAD"!==e.sha?e.sha:(await i.getRevision()).revision,u=await n.getBlame(a.accessToken,i.repo.owner,i.repo.name,h,c),d=new Map,m=new Map,g=[];for(const t of u.ranges){const i=t.commit,{viewer:r=a.account.label}=u,n=null!=r&&i.author.name===r?"You":i.author.name,s=null!=r&&i.committer.name===r?"You":i.committer.name;let o=d.get(n);null==o&&(o={name:n,lineCount:0},d.set(n,o)),o.lineCount+=t.endingLine-t.startingLine+1;let h=m.get(i.oid);null==h&&(h=new p.aM(this.container,e.repoPath,i.oid,new p._j(n,i.author.email,new Date(i.author.date),i.author.avatarUrl),new p._j(s,i.committer.email,new Date(i.author.date)),i.message.split("\n",1)[0],i.parents.nodes[0]?.oid?[i.parents.nodes[0]?.oid]:[],i.message,new f.K8(l.toString(),c,f.NV.Modified),{changedFiles:i.changedFiles??0,additions:i.additions??0,deletions:i.deletions??0},[]),m.set(i.oid,h));for(let e=t.startingLine;e<=t.endingLine;e++){const t={sha:i.oid,originalLine:e,line:e};h.lines.push(t),g[e-1]=t}}const w=new Map([...d.entries()].sort(((e,t)=>t[1].lineCount-e[1].lineCount)));return{repoPath:e.repoPath,authors:w,commits:m,lines:g}}catch(e){if(null!=t.state&&!String(e).includes("No provider registered with")){const r=e?.toString()??"";S.Yd.debug(n,`Cache replace (with empty promise): '${i}'`);const s={item:Re,errorMessage:r};return t.state.setBlame(i,s),t.setBlameFailure(),Re}return}}async getBlameContents(e,t){}async getBlameForLine(e,t,i,r){const n=(0,le.UH)();if(!i?.isDirty){if(!r?.forceSingleLine){const i=await this.getBlame(e);if(null==i)return;let r=i.lines[t];if(null==r){if(i.lines.length!==t)return;r=i.lines[t-1]}const n=i.commits.get(r.sha);if(null==n)return;return{author:{...i.authors.get(n.author.name),lineCount:n.lines.length},commit:n,line:r}}try{const i=await this.ensureRepositoryContext(e.repoPath);if(null==i)return;const{metadata:r,github:n,remotehub:s,session:o}=i,a=s.getVirtualUri(s.getProviderRootUri(e)),l=this.getRelativePath(e,a),c=e.sha&&"HEAD"!==e.sha?e.sha:(await r.getRevision()).revision,h=await n.getBlame(o.accessToken,r.repo.owner,r.repo.name,c,l),u=t+1,d=h.ranges.find((e=>e.startingLine===u));if(null==d)return;const m=d.commit,{viewer:g=o.account.label}=h,w=null!=g&&m.author.name===g?"You":m.author.name,v=null!=g&&m.committer.name===g?"You":m.committer.name,y=new p.aM(this.container,e.repoPath,m.oid,new p._j(w,m.author.email,new Date(m.author.date),m.author.avatarUrl),new p._j(v,m.committer.email,new Date(m.author.date)),m.message.split("\n",1)[0],m.parents.nodes[0]?.oid?[m.parents.nodes[0]?.oid]:[],m.message,new f.K8(a.toString(),l,f.NV.Modified),{changedFiles:m.changedFiles??0,additions:m.additions??0,deletions:m.deletions??0},[]);for(let e=d.startingLine;e<=d.endingLine;e++){const t={sha:m.oid,originalLine:e,line:e};y.lines.push(t)}return{author:{name:w,lineCount:d.endingLine-d.startingLine+1},commit:y,line:{sha:m.oid,originalLine:d.startingLine,line:d.startingLine}}}catch(e){return void S.Yd.error(n,e)}}}async getBlameForLineContents(e,t,i,r){}async getBlameForRange(e,t){const i=await this.getBlame(e);if(null!=i)return this.getBlameRange(i,e,t)}async getBlameForRangeContents(e,t,i){const r=await this.getBlameContents(e,i);if(null!=r)return this.getBlameRange(r,e,t)}getBlameRange(e,t,i){if(0===e.lines.length)return{allLines:e.lines,...e};if(0===i.start.line&&i.end.line===e.lines.length-1)return{allLines:e.lines,...e};const r=e.lines.slice(i.start.line,i.end.line+1),n=new Set(r.map((e=>e.sha))),s=i.start.line+1,o=i.end.line+1,a=new Map,l=new Map;for(const t of e.commits.values()){if(!n.has(t.sha))continue;const e=t.with({lines:t.lines.filter((e=>e.line>=s&&e.line<=o))});l.set(t.sha,e);let i=a.get(e.author.name);null==i&&(i={name:e.author.name,lineCount:0},a.set(i.name,i)),i.lineCount+=e.lines.length}const c=new Map([...a.entries()].sort(((e,t)=>t[1].lineCount-e[1].lineCount)));return{repoPath:t.repoPath,authors:c,commits:l,lines:r,allLines:e.lines}}async getBranch(e){const{values:[t]}=await this.getBranches(e,{filter:e=>e.current});return t}async getBranches(e,t){if(null==e)return Se;const i=(0,le.UH)();let r=t?.cursor?void 0:this._branchesCache.get(e);if(null==r){async function s(){try{const{metadata:i,github:r,session:n}=await this.ensureRepositoryContext(e),s=await i.getRevision(),o=0===s.type?s.name:void 0,a=[];let l=t?.cursor;const c=null==l;for(;;){const t=await r.getBranches(n.accessToken,i.repo.owner,i.repo.name,{cursor:l});for(const i of t.values){const t=new Date("author-date"===ne.D.get("advanced.commitOrdering")?i.target.authoredDate:i.target.committedDate),r=i.target.oid;a.push(new d.XI(e,i.name,!1,i.name===o,t,r,{name:`origin/${i.name}`,missing:!1}),new d.XI(e,`origin/${i.name}`,!0,!1,t,r))}if(!t.paging?.more||!c)return{...t,values:a};l=t.paging.cursor}}catch(t){return S.Yd.error(t,i),this._branchesCache.delete(e),Se}}r=s.call(this),null==t?.cursor&&this._branchesCache.set(e,r)}let n=await r;return null!=t?.filter&&(n={...n,values:n.values.filter(t.filter)}),null!=t?.sort&&(0,d.YF)(n.values,"boolean"==typeof t.sort?void 0:t.sort),n}async getChangedFilesCount(e,t){if(!t)return;const i=await this.getCommit(e,t);if(null==i?.stats)return;const{stats:r}=i,n=(0,p.By)(r.changedFiles);return{additions:r.additions,deletions:r.deletions,changedFiles:n}}async getCommit(e,t){if(null==e)return;const i=(0,le.UH)();try{const{metadata:i,github:r,session:n}=await this.ensureRepositoryContext(e),s=await r.getCommit(n.accessToken,i.repo.owner,i.repo.name,t);if(null==s)return;const{viewer:o=n.account.label}=s,a=null!=o&&s.author.name===o?"You":s.author.name,l=null!=o&&s.committer.name===o?"You":s.committer.name;return new p.aM(this.container,e,s.oid,new p._j(a,s.author.email,new Date(s.author.date),s.author.avatarUrl),new p._j(l,s.committer.email,new Date(s.committer.date)),s.message.split("\n",1)[0],s.parents.nodes.map((e=>e.oid)),s.message,s.files?.map((t=>new f.K8(e,t.filename??"",(0,ve.fromCommitFileStatus)(t.status)??f.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0})))??[],{changedFiles:s.changedFiles??0,additions:s.additions??0,deletions:s.deletions??0},[])}catch(e){return void S.Yd.error(e,i)}}async getCommitBranches(e,t,i){if(null==e||null==i?.commitDate)return[];const r=(0,le.UH)();try{const{metadata:r,github:n,session:s}=await this.ensureRepositoryContext(e);let o;return o=i?.branch?await n.getCommitOnBranch(s.accessToken,r.repo.owner,r.repo.name,i?.branch,t,i?.commitDate):await n.getCommitBranches(s.accessToken,r.repo.owner,r.repo.name,t,i?.commitDate),o}catch(e){return S.Yd.error(e,r),[]}}async getCommitCount(e,t){if(null==e)return;const i=(0,le.UH)();try{const{metadata:i,github:r,session:n}=await this.ensureRepositoryContext(e);return await r.getCommitCount(n?.accessToken,i.repo.owner,i.repo.name,t)}catch(e){return void S.Yd.error(e,i)}}async getCommitForFile(e,t,i){if(null==e)return;const r=(0,le.UH)();try{const{metadata:r,github:n,remotehub:s,session:o}=await this.ensureRepositoryContext(e),a=this.getRelativePath(t,s.getProviderRootUri(t)),l=i?.ref&&"HEAD"!==i.ref?i.ref:(await r.getRevision()).revision,c=await n.getCommitForFile(o.accessToken,r.repo.owner,r.repo.name,l,a);if(null==c)return;const{viewer:h=o.account.label}=c,u=null!=h&&c.author.name===h?"You":c.author.name,d=null!=h&&c.committer.name===h?"You":c.committer.name,m=c.files?.map((t=>new f.K8(e,t.filename??"",(0,ve.fromCommitFileStatus)(t.status)??f.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),g=m?.find((e=>e.path===a));return new p.aM(this.container,e,c.oid,new p._j(u,c.author.email,new Date(c.author.date),c.author.avatarUrl),new p._j(d,c.committer.email,new Date(c.committer.date)),c.message.split("\n",1)[0],c.parents.nodes.map((e=>e.oid)),c.message,{file:g,files:m},{changedFiles:c.changedFiles??0,additions:c.additions??0,deletions:c.deletions??0},[])}catch(e){return void S.Yd.error(e,r)}}async getCommitsForGraph(e,t,i){const r=i?.limit??ne.D.get("graph.defaultItemLimit")??5e3,n=ne.D.get("graph.commitOrdering",void 0,"date"),s=ne.D.get("graph.avatars",void 0,!0),[o,a,l,c,h,u]=await Promise.allSettled([this.getLog(e,{all:!0,ordering:n,limit:r}),this.getBranch(e),this.getBranches(e,{filter:e=>e.remote}),this.getRemotes(e),this.getTags(e),this.getCurrentUser(e)]),d=new Map,p=(0,he.Sb)(a),m=new Map,g=new Map;null!=p&&(m.set(p.name,p),null!=p.sha&&g.set(p.sha,[p.name]));const f=(0,he.Sb)(l)?.values;if(null!=f)for(const e of f){if(m.set(e.name,e),null==e.sha)continue;const t=g.get(e.sha);null==t?g.set(e.sha,[e.name]):t.push(e.name)}const w=new Set,v=(0,he.Sb)(c)[0],y=null!=v?new Map([[v.name,v]]):new Map,b=new Map,C=(0,he.Sb)(h)?.values;if(null!=C)for(const e of C){if(null==e.sha)continue;const t=b.get(e.sha);null==t?b.set(e.sha,[e.name]):t.push(e.name)}return this.getCommitsForGraphCore(e,t,(0,he.Sb)(o),p,m,g,v,y,b,(0,he.Sb)(u),d,w,{...i,useAvatars:s})}async getCommitsForGraphCore(e,t,i,r,n,s,a,l,c,h,u,m,g){const f={...g?.include,stats:!0},b=new Map;if(null==i)return{repoPath:e,avatars:u,ids:m,includes:f,branches:n,remotes:l,downstreams:b,rows:[]};const C=(i.pagedCommits?.()??i.commits)?.values();if(null==C)return{repoPath:e,avatars:u,ids:m,includes:f,branches:n,remotes:l,downstreams:b,rows:[]};const P=[];let S,R,D,k,_,T,F,O,E,$,I=!1,x=!1;const B=r.upstream?.name;for(const i of C){if(m.add(i.sha),I=i.sha===r.sha,I)if(D={webviewItem:`gitlens:branch${I?"+current":""}${null!=r?.upstream?"+tracking":""}`,webviewItemValue:{type:"branch",ref:(0,v.xB)(r.name,e,{id:r.id,refType:"branch",name:r.name,remote:!1,upstream:r.upstream})}},_=[{id:r.id,name:r.name,isCurrentHead:!0,context:(0,ue.BH)(D),upstream:null!=r.upstream?{name:r.upstream.name,id:(0,d.Vx)(e,!0,r.upstream.name)}:void 0}],null!=r.upstream){if(O=(0,d.Vx)(e,!0,r.name),S=((g?.useAvatars?a.provider?.avatarUri:void 0)??(0,y.dM)(this.container,a,t))?.toString(!0),D={webviewItem:"gitlens:branch+remote",webviewItemValue:{type:"branch",ref:(0,v.xB)(r.name,e,{id:O,refType:"branch",name:r.name,remote:!0,upstream:{name:a.name,missing:!1}})}},T=[{id:O,name:r.name,owner:a.name,url:a.url,avatarUrl:S,context:(0,ue.BH)(D),current:!0}],null!=B){let e=b.get(B);null==e&&(e=[],b.set(B,e)),e.push(r.name)}}else T=[];else{_=[],T=[];const r=s.get(i.sha);if(null!=r)for(const i of r)O=(0,d.Vx)(e,!0,i),R=(0,d.S3)(i),S=((g?.useAvatars?a.provider?.avatarUri:void 0)??(0,y.dM)(this.container,a,t))?.toString(!0),D={webviewItem:"gitlens:branch+remote",webviewItemValue:{type:"branch",ref:(0,v.xB)(i,e,{id:O,refType:"branch",name:i,remote:!0,upstream:{name:a.name,missing:!1}})}},T.push({id:O,name:R,owner:a.name,url:a.url,avatarUrl:S,context:(0,ue.BH)(D)})}F=[];const n=c.get(i.sha);if(null!=n)for(const t of n)$=(0,A.YU)(e,t),D={webviewItem:"gitlens:tag",webviewItemValue:{type:"tag",ref:(0,v.xB)(t,e,{id:$,refType:"tag",name:t})}},F.push({id:$,name:t,annotated:!0,context:(0,ue.BH)(D)});if(i.author.email&&!u.has(i.author.email)){const e=i.getCachedAvatarUri();null!=e&&u.set(i.author.email,e.toString(!0))}x="You"===i.author.name,k={row:(0,ue.BH)({webviewItem:`gitlens:commit${I?"+HEAD":""}+current`,webviewItemValue:{type:"commit",ref:(0,v.xB)(i.sha,e,{refType:"revision",message:i.message})}}),avatar:(0,ue.BH)({webviewItem:"gitlens:contributor"+(x?"+current":""),webviewItemValue:{type:"contributor",repoPath:e,name:x&&null!=h?.name?h.name:i.author.name,email:i.author.email,current:x}})},P.push({sha:i.sha,parents:i.parents,author:i.author.name,email:i.author.email??"",date:i.committer.date.getTime(),message:(0,o.X)(i.message&&String(i.message).length?i.message:i.summary),type:i.parents.length>1?w.e.MergeCommit:w.e.Commit,heads:_,remotes:T,tags:F,contexts:k}),null!=i.stats&&(null==E&&(E=new Map),E.set(i.sha,{files:(0,p.By)(i.stats.changedFiles),additions:i.stats.additions,deletions:i.stats.deletions}))}return"HEAD"===g?.ref?g.ref=(0,ae.Ps)(i.commits.values())?.sha:null!=g?.ref&&(g.ref=void 0),{repoPath:e,avatars:u,ids:m,includes:f,branches:n,remotes:l,downstreams:b,rows:P,id:g?.ref,paging:{limit:i.limit,startingCursor:i.startingCursor,hasMore:i.hasMore},more:async o=>{const d=await(i.more?.(o));return this.getCommitsForGraphCore(e,t,d,r,n,s,a,l,c,h,u,m,g)}}}async getContributors(e,t){if(null==e)return[];const i=(0,le.UH)();try{const{metadata:t,github:i,session:a}=await this.ensureRepositoryContext(e),l=await i.getContributors(a.accessToken,t.repo.owner,t.repo.name),c=await this.getCurrentUser(e),h=[];for(const t of l)"User"===t.type&&h.push(new g.V(e,t.name,t.email,t.contributions,void 0,(r=c,n=t.name,s=t.email,o=t.login,!(null==r||null==r.name&&null==r.email&&null==r.username||null!=r.name&&r.name!==n||null!=r.email&&r.email!==s||null!=r.username&&r.username!==o)),void 0,t.login,t.avatar_url,t.node_id));return h}catch(e){return S.Yd.error(e,i),[]}var r,n,s,o}async getCurrentUser(e){if(!e)return;const t=(0,le.UH)(),i=this._repoInfoCache.get(e);let r=i?.user;if(null!=r)return r;if(null!==r)try{const{metadata:t,github:n,session:s}=await this.ensureRepositoryContext(e);return r=await n.getCurrentUser(s.accessToken,t.repo.owner,t.repo.name),this._repoInfoCache.set(e,{...i,user:r??null}),r}catch(r){return S.Yd.error(r,t),void this._repoInfoCache.set(e,{...i,user:null})}}async getDefaultBranchName(e,t){if(null==e)return;const i=(0,le.UH)();try{const{metadata:t,github:i,session:r}=await this.ensureRepositoryContext(e);return await i.getDefaultBranchName(r.accessToken,t.repo.owner,t.repo.name)}catch(e){return void S.Yd.error(e,i)}}async getDiffForFile(e,t,i){}async getDiffForFileContents(e,t,i){}async getDiffForLine(e,t,i,r){}async getDiffStatus(e,t,i,r){}async getFileStatusForCommit(e,t,i){if(i===m.Ii||(0,v.l3)(i))return;const r=await this.getCommitForFile(e,t,{ref:i});return null!=r?r.findFile(t):void 0}async getLastFetchedTimestamp(e){}async getLog(e,t){if(null==e)return;const i=(0,le.UH)(),r=this.getPagingLimit(t?.limit);try{const{metadata:i,github:n,session:s}=await this.ensureRepositoryContext(e),o=t?.ref&&"HEAD"!==t.ref?t.ref:(await i.getRevision()).revision,a=await n.getCommits(s.accessToken,i.repo.owner,i.repo.name,o,{all:t?.all,authors:t?.authors,after:t?.cursor,limit:r,since:t?.since?new Date(t.since):void 0}),l=new Map,{viewer:c=s.account.label}=a;for(const t of a.values){const i=null!=c&&t.author.name===c?"You":t.author.name,r=null!=c&&t.committer.name===c?"You":t.committer.name;let n=l.get(t.oid);null==n&&(n=new p.aM(this.container,e,t.oid,new p._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new p._j(r,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,t.files?.map((t=>new f.K8(e,t.filename??"",(0,ve.fromCommitFileStatus)(t.status)??f.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),l.set(t.oid,n))}const h={repoPath:e,commits:l,sha:o,range:void 0,count:l.size,limit:r,hasMore:a.paging?.more??!1,endingCursor:a.paging?.cursor,query:i=>this.getLog(e,{...t,limit:i})};return h.hasMore&&(h.more=this.getLogMoreFn(h,t)),h}catch(e){return void S.Yd.error(e,i)}}async getLogRefsOnly(e,t){const i=await this.getLog(e,t);if(null!=i)return new Set([...i.commits.values()].map((e=>e.ref)))}getLogMoreFn(e,t){return async i=>{const r=null!=i&&"object"==typeof i?i.until:void 0;let n="number"==typeof i?i:void 0;if(r&&(0,ae.G)(e.commits.values(),(e=>e.ref===r)))return e;n=this.getPagingLimit(n);const s=await this.getLog(e.repoPath,{...t,limit:n,cursor:e.endingCursor});if(null==s)return{...e,hasMore:!1,more:void 0};const o=new Map([...e.commits,...s.commits]),a={repoPath:e.repoPath,commits:o,sha:e.sha,range:void 0,count:o.size,limit:null==r?(e.limit??0)+n:void 0,hasMore:null!=r||s.hasMore,startingCursor:(0,ae.Z$)(e.commits)?.[0],endingCursor:s.endingCursor,pagedCommits:()=>{for(const t of e.commits.keys())s.commits.delete(t);return s.commits},query:e.query};return a.hasMore&&(a.more=this.getLogMoreFn(a,t)),a}}async getLogForFile(e,t,i){if(null==e)return;const r=(0,le.UH)(),n=this.getRelativePath(t,e);if(null!=e&&e===n)throw new Error(`File name cannot match the repository path; path=${n}`);(i={reverse:!1,...i}).renames=!1,i.all=!1;let s="log";null!=i.ref&&(s+=`:${i.ref}`),i.limit=this.getPagingLimit(i?.limit),i.limit&&(s+=`:n${i.limit}`),i.renames&&(s+=":follow"),i.reverse&&(s+=":reverse"),i.since&&(s+=`:since=${i.since}`),i.skip&&(s+=`:skip${i.skip}`),i.cursor&&(s+=`:cursor=${i.cursor}`);const o=await this.container.tracker.getOrAdd(u.YY.fromFile(n,e,i.ref));if(!i.force&&null==i.range){if(null!=o.state){const n=o.state.getLog(s);if(null!=n)return S.Yd.debug(r,`Cache hit: '${s}'`),n.item;if(null!=i.ref||null!=i.limit){const n=o.state.getLog(`log${i.renames?":follow":""}${i.reverse?":reverse":""}`);if(null!=n){if(null==i.ref)return S.Yd.debug(r,`Cache hit: ~'${s}'`),n.item;S.Yd.debug(r,`Cache ?: '${s}'`);let o=await n.item;if(null!=o&&!o.hasMore&&o.commits.has(i.ref)){S.Yd.debug(r,`Cache hit: '${s}'`);let n=!0,a=0;const l=new Map((0,ae.DZ)(o.commits.entries(),(([e,t])=>{if(n){if(e!==i?.ref)return;n=!1}if(a++,!(null!=i?.limit&&a>i.limit))return[e,t]}))),c={...i};return o={...o,limit:i.limit,count:l.size,commits:l,query:i=>this.getLogForFile(e,t,{...c,limit:i})},o}}}}S.Yd.debug(r,`Cache miss: '${s}'`),null==o.state&&(o.state=new GitDocumentState)}const a=this.getLogForFileCore(e,n,o,s,r,i);if(null!=o.state&&null==i.range){S.Yd.debug(r,`Cache add: '${s}'`);const e={item:a};o.state.setLog(s,e)}return a}async getLogForFileCore(e,t,i,r,n,s){if(null==e)return;const o=this.getPagingLimit(s?.limit);try{const i=await this.ensureRepositoryContext(e);if(null==i)return;const{metadata:r,github:n,remotehub:a,session:l}=i,c=this.getAbsoluteUri(t,e),h=this.getRelativePath(c,a.getProviderRootUri(c)),u=s?.ref&&"HEAD"!==s.ref?s.ref:(await r.getRevision()).revision,d=await n.getCommits(l.accessToken,r.repo.owner,r.repo.name,u,{all:s?.all,after:s?.cursor,path:h,limit:o,since:s?.since?new Date(s.since):void 0}),m=new Map,{viewer:g=l.account.label}=d;for(const t of d.values){const i=null!=g&&t.author.name===g?"You":t.author.name,r=null!=g&&t.committer.name===g?"You":t.committer.name;let n=m.get(t.oid);if(null==n){const s=t.files?.map((t=>new f.K8(e,t.filename??"",(0,ve.fromCommitFileStatus)(t.status)??f.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),o=(0,ce.Mh)(h)?void 0:s?.find((e=>e.path===h))??new f.K8(e,h,f.NV.Modified,void 0,void 0,1===t.changedFiles?{additions:t.additions??0,deletions:t.deletions??0,changes:0}:void 0);n=new p.aM(this.container,e,t.oid,new p._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new p._j(r,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,{file:o,files:s},{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),m.set(t.oid,n)}}const w={repoPath:e,commits:m,sha:u,range:void 0,count:m.size,limit:o,hasMore:d.paging?.more??!1,endingCursor:d.paging?.cursor,query:i=>this.getLogForFile(e,t,{...s,limit:i})};return w.hasMore&&(w.more=this.getLogForFileMoreFn(w,t,s)),w}catch(e){if(null!=i.state&&null==s?.range&&!s?.reverse){const t=e?.toString()??"";S.Yd.debug(n,`Cache replace (with empty promise): '${r}'`);const s={item:Re,errorMessage:t};return i.state.setLog(r,s),Re}return}}getLogForFileMoreFn(e,t,i){return async r=>{const n=null!=r&&"object"==typeof r?r.until:void 0;let s="number"==typeof r?r:void 0;if(n&&(0,ae.G)(e.commits.values(),(e=>e.ref===n)))return e;s=this.getPagingLimit(s);const o=await this.getLogForFile(e.repoPath,t,{...i,limit:null==n?s:0,cursor:e.endingCursor});if(null==o)return{...e,hasMore:!1,more:void 0};const a=new Map([...e.commits,...o.commits]),l={repoPath:e.repoPath,commits:a,sha:e.sha,range:e.range,count:a.size,limit:null==n?(e.limit??0)+s:void 0,hasMore:null!=n||o.hasMore,endingCursor:o.endingCursor,query:e.query};return l.hasMore&&(l.more=this.getLogForFileMoreFn(l,t,i)),l}}async getMergeBase(e,t,i,r){}async getMergeStatus(e){}async getRebaseStatus(e){}async getNextComparisonUris(e,t,i,r=0){if(!i)return;const n=(0,le.UH)();try{const n=await this.ensureRepositoryContext(e);if(null==n)return;const{metadata:s,github:o,remotehub:a,session:l}=n,c=this.getRelativePath(t,a.getProviderRootUri(t)),h=(await s.getRevision()).revision;"HEAD"===i&&(i=h);const d=await o.getNextCommitRefs(l.accessToken,s.repo.owner,s.repo.name,h,c,i);return{current:0===r?u.YY.fromFile(c,e,i):new u.YY(await this.getBestRevisionUri(e,c,d[r-1])),next:new u.YY(await this.getBestRevisionUri(e,c,d[r]))}}catch(e){throw S.Yd.error(e,n),e}}async getOldestUnpushedRefForFile(e,t){}async getPreviousComparisonUris(e,t,i,r=0,n=!1){if(i===m.Ii)return;const s=(0,le.UH)();i===m.CL&&(i=void 0);try{const n=await this.ensureRepositoryContext(e);if(null==n)return;const{metadata:s,github:o,remotehub:a,session:l}=n,c=this.getRelativePath(t,a.getProviderRootUri(t)),h=null!=i?1:0,d=await o.getCommitRefs(l.accessToken,s.repo.owner,s.repo.name,i&&"HEAD"!==i?i:(await s.getRevision()).revision,{path:c,first:h+r+1});if(null==d)return;const p=0===r?u.YY.fromFile(c,e,i):new u.YY(await this.getBestRevisionUri(e,c,d.values[h+r-1]?.oid??m.Ii));if(null==p||p.sha===m.Ii)return;return{current:p,previous:new u.YY(await this.getBestRevisionUri(e,c,d.values[h+r]?.oid??m.Ii))}}catch(e){throw S.Yd.error(e,s),e}}async getPreviousComparisonUrisForLine(e,t,i,r,n=0){if(r===m.Ii)return;const s=(0,le.UH)();try{const s=await this.ensureRepositoryContext(e);if(null==s)return;const{remotehub:o}=s;let a,l=this.getRelativePath(t,o.getProviderRootUri(t)),c=u.YY.fromFile(l,e,r),h=i,d=i,p=i;for(let t=0;t<Math.max(0,n)+2;t++){const t=await this.getBlameForLine(a??c,p,void 0,{forceSingleLine:!0});if(null==t)break;r=t.commit.sha,l=t.commit.file?.path??t.commit.file?.originalPath??l,p=t.line.originalLine-1;const i=u.YY.fromFile(l,e,r);null==a?(a=i,d=p):(c=a,h=d,a=i,d=p)}if(null==c)return;return{current:c,previous:a,line:(h??i)+1}}catch(e){throw S.Yd.error(e,s),e}}async getIncomingActivity(e,t){}async getRemotes(e,t){if(null==e)return[];const i=function(e){const t=[];if(e?.length)for(const i of e){const e=te(i);if(null==e)continue;let r;try{if(r=i.regex?new RegExp(i.regex,"i"):i.domain?.toLowerCase(),null==r)throw new Error("No matcher found")}catch(e){S.Yd.error(e,`Loading remote provider '${i.name??""}' failed`)}t.push({custom:!0,matcher:r,creator:e})}return t.push(...ee),t}(ne.D.get("remotes",null)),n=r.Uri.parse(e,!0),[,s,o]=n.path.split("/",3),a=`https://github.com/${s}/${o}.git`,l="github.com",c=`${s}/${o}`;return[new y.ss(e,"origin","https",l,c,ie(this.container,i)(a,l,c),[{type:y.XG.Fetch,url:a},{type:y.XG.Push,url:a}])]}async getRevisionContent(e,t,i){const n=i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t);return r.workspace.fs.readFile(n)}async getStash(e){}async getStatusForFile(e,t){}async getStatusForFiles(e,t){}async getStatusForRepo(e){if(null==e)return;const t=await this.ensureRepositoryContext(e);if(null==t)return;const i=await t.metadata.getRevision();return null!=i?new C.Hk(e,i.name,i.revision,[],{ahead:0,behind:0},i.type===we.Branch||i.type===we.RemoteBranch?`origin/${i.name}`:void 0):void 0}async getTags(e,t){if(null==e)return Se;const i=(0,le.UH)();let r=t?.cursor?void 0:this._tagsCache.get(e);if(null==r){async function s(){try{const{metadata:i,github:r,session:n}=await this.ensureRepositoryContext(e),s=[];let o=t?.cursor;const a=null==o;let l,c;for(;;){const t=await r.getTags(n.accessToken,i.repo.owner,i.repo.name,{cursor:o});for(const i of t.values)l=i.target.authoredDate??i.target.target?.authoredDate??i.target.tagger?.date,c=i.target.committedDate??i.target.target?.committedDate??i.target.tagger?.date,s.push(new A.gE(e,i.name,i.target.target?.oid??i.target.oid,i.target.message??i.target.target?.message??"",null!=l?new Date(l):void 0,null!=c?new Date(c):void 0));if(!t.paging?.more||!a)return{...t,values:s};o=t.paging.cursor}}catch(t){return S.Yd.error(t,i),this._tagsCache.delete(e),Se}}r=s.call(this),null==t?.cursor&&this._tagsCache.set(e,r)}let n=await r;return null!=t?.filter&&(n={...n,values:n.values.filter(t.filter)}),null!=t?.sort&&(0,A.Pj)(n.values,"boolean"==typeof t.sort?void 0:t.sort),n}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;if("HEAD"===i){const t=await this.ensureRepositoryContext(e);if(null==t)return;const r=await t.metadata.getRevision();i=r?.revision}const n=i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t),s=await r.workspace.fs.stat(n);return null!=s?{path:this.getRelativePath(n,e),commitSha:i,size:s.size,type:(s.type&r.FileType.Directory)===r.FileType.Directory?"tree":"blob"}:void 0}async getTreeForRevision(e,t){if(null==e)return[];if("HEAD"===t){const i=await this.ensureRepositoryContext(e);if(null==i)return[];const r=await i.metadata.getRevision();t=r?.revision}const i=t?this.createProviderUri(e,t):this.createVirtualUri(e,t),n=await r.workspace.fs.readDirectory(i);if(null==n)return[];const s=[];for(const[e,o]of n){const n=this.getAbsoluteUri(e,i);s.push({path:this.getRelativePath(e,n),commitSha:t,size:0,type:(o&r.FileType.Directory)===r.FileType.Directory?"tree":"blob"})}return[]}async getUniqueRepositoryId(e){}async hasBranchOrTag(e,t){const[{values:i},{values:r}]=await Promise.all([this.getBranches(e,{filter:t?.filter?.branches,sort:!1}),this.getTags(e,{filter:t?.filter?.tags,sort:!1})]);return 0!==i.length||0!==r.length}async hasCommitBeenPushed(e,t){return!0}isTrackable(e){return this.supportedSchemes.has(e.scheme)}async isTracked(e){if(!this.isTrackable(e)||null==this.container.git.getRepository(e))return!1;const t=e.with({scheme:s.sN.GitHub});return null!=await r.workspace.fs.stat(t)}async getDiffTool(e){}async openDiffTool(e,t,i){}async openDirectoryCompare(e,t,i,r){}async resolveReference(e,t,i,r){if(!t||t===m.Ii||null==i&&(0,v.D3)(t)||null!=i&&(0,v.l3)(t))return t;let n;if(null!=i)n=this.getRelativePath(i,e);else if(!(0,v.yo)(t)||t.endsWith("^3"))return t;const s=await this.ensureRepositoryContext(e);if(null==s)return t;const{metadata:o,github:a,session:l}=s,c=await a.resolveReference(l.accessToken,o.repo.owner,o.repo.name,t,n);return null!=c?c:n?m.Ii:t}async richSearchCommits(e,t,i){if(null==e)return;const r=(0,le.UH)(),n=(0,re.pD)(t),s=n.get("commit:");if(null!=s){const t=await this.getCommit(e,s[0]);if(null==t)return;return{repoPath:e,commits:new Map([[t.sha,t]]),sha:t.sha,range:void 0,count:1,limit:1,hasMore:!1}}const o=await this.getQueryArgsFromSearchQuery(t,n,e);if(0===o.length)return;const a=this.getPagingLimit(i?.limit);try{const{metadata:r,github:n,session:s}=await this.ensureRepositoryContext(e),l=`repo:${r.repo.owner}/${r.repo.name}+${o.join("+").trim()}`,c=await n.searchCommits(s.accessToken,l,{cursor:i?.cursor,limit:a,sort:"date"===i?.ordering?"committer-date":"author-date"===i?.ordering?"author-date":void 0});if(null==c)return;const h=new Map,u=s.account.label;for(const t of c.values){const i=null!=u&&t.author.name===u?"You":t.author.name,r=null!=u&&t.committer.name===u?"You":t.committer.name;let n=h.get(t.oid);null==n&&(n=new p.aM(this.container,e,t.oid,new p._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new p._j(r,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,t.files?.map((t=>new f.K8(e,t.filename??"",(0,ve.fromCommitFileStatus)(t.status)??f.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),h.set(t.oid,n))}const d={repoPath:e,commits:h,sha:void 0,range:void 0,count:h.size,limit:a,hasMore:c.pageInfo?.hasNextPage??!1,endingCursor:c.pageInfo?.endCursor??void 0,query:t=>this.getLog(e,{...i,limit:t})};if(d.hasMore){let e=function(r){return async n=>{n=this.getPagingLimit(n);const s=await this.richSearchCommits(r.repoPath,t,{...i,limit:n,cursor:r.endingCursor});if(null==s)return{...r,hasMore:!1,more:void 0};const o=new Map([...r.commits,...s.commits]),a={repoPath:r.repoPath,commits:o,sha:r.sha,range:void 0,count:o.size,limit:(r.limit??0)+n,hasMore:s.hasMore,endingCursor:s.endingCursor,query:r.query};return a.hasMore&&(a.more=e.call(this,a)),a}};d.more=e.call(this,d)}return d}catch(e){return void S.Yd.error(e,r)}}async searchCommits(e,t,i){t={matchAll:!1,matchCase:!1,matchRegex:!0,...t};const r=(0,re.FL)(t);try{const n=new Map,s=(0,re.pD)(t),o=s.get("commit:");if(null!=o){const m=await Promise.allSettled(o.map((t=>this.getCommit(e,t.replace(Ae,"")))));let g=0;for(const f of m){const w=(0,he.Sb)(f);null!=w&&n.set(w.sha,{i:g++,date:Number("author-date"===i?.ordering?w.author.date:w.committer.date)})}return{repoPath:e,query:t,comparisonKey:r,results:n}}const a=await this.getQueryArgsFromSearchQuery(t,s,e);if(0===a.length)return{repoPath:e,query:t,comparisonKey:r,results:n};const{metadata:l,github:h,session:u}=await this.ensureRepositoryContext(e),d=`repo:${l.repo.owner}/${l.repo.name}+${a.join("+").trim()}`;async function p(s,o){if(i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:r,results:n};s=this.getPagingLimit(s??ne.D.get("advanced.maxSearchItems"));const a=await h.searchCommitShas(u.accessToken,d,{cursor:o,limit:s,sort:"date"===i?.ordering?"committer-date":"author-date"===i?.ordering?"author-date":void 0});if(null==a||i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:r,results:n};for(const e of a.values)n.set(e.sha,{i:n.size,date:Number("author-date"===i?.ordering?e.authorDate:e.committerDate)});return o=a.pageInfo?.endCursor??void 0,{repoPath:e,query:t,comparisonKey:r,results:n,paging:a.pageInfo?.hasNextPage?{limit:s,hasMore:!0}:void 0,more:async e=>p.call(this,e,o)}}return p.call(this,i?.limit)}catch(v){if(v instanceof c.l0)throw v;throw new c.l0(v)}}async validateBranchOrTagName(e,t){return ke.test(e)}async validateReference(e,t){return!0}async stageFile(e,t){}async stageDirectory(e,t){}async unStageFile(e,t){}async unStageDirectory(e,t){}async ensureRepositoryContext(e,t){let i=r.Uri.parse(e,!0);if(!/^github\+?/.test(i.authority))throw new a.kX(e,a.sh.NotAGitHubRepository);if(!t){const t=this.container.git.getRepository(i);if(null==t)throw new a.kX(e,a.sh.NotAGitHubRepository);i=t.uri}let n=this._remotehub;if(null==n)try{n=await this.ensureRemoteHubApi()}catch(t){throw a.R5,new a.kX(e,a.sh.RemoteHubApiNotFound,t)}const s=await(n?.getMetadata(i));if("github"!==s?.provider.id)throw new a.kX(e,a.sh.NotAGitHubRepository);let o,l;try{[o,l]=await Promise.all([this.ensureGitHub(),this.ensureSession()])}catch(t){if(t instanceof a._7)throw new a.kX(e,t.reason===a.Jx.UserDidNotConsent?a.sh.GitHubAuthenticationDenied:a.sh.GitHubAuthenticationNotFound,t);throw new a.kX(e)}if(null==o)throw new a.kX(e);return{github:o,metadata:s,remotehub:n,session:l}}_github;async ensureGitHub(){if(null==this._github){const e=await this.container.github;null!=e&&this._disposables.push(e.onDidReauthenticate((()=>{this.ensureSession(!0)}))),this._github=e}return this._github}_remotehub;_remotehubPromise;async ensureRemoteHubApi(e){if(null==this._remotehubPromise&&(this._remotehubPromise=fe(),this._remotehubPromise.then((e=>this._remotehub=e),(()=>this._remotehub=void 0))),!e)return this._remotehubPromise;try{return await this._remotehubPromise}catch{return}}_sessionPromise;async ensureSession(e=!1,t=!1){if(e||null==this._sessionPromise){async function i(){let n=this.container.storage.get(`provider:authentication:skip:${this.descriptor.id}`,!1);try{if(e)return n=!1,this.container.storage.delete(`provider:authentication:skip:${this.descriptor.id}`),await r.authentication.getSession("github",De,{forceNewSession:!0});if(!n&&!t)return await r.authentication.getSession("github",De,{createIfNone:!0});const i=await r.authentication.getSession("github",De,{createIfNone:!1,silent:t});if(null!=i)return i;throw new Error("User did not consent")}catch(s){if(s instanceof Error&&s.message.includes("User did not consent")){if(!t&&(await this.container.storage.store(`provider:authentication:skip:${this.descriptor.id}`,!0),!n))return e||queueMicrotask((async()=>{const e="Re-enable";await r.window.showInformationMessage("GitLens has been disabled. Authentication is required for GitLens to work with remote GitHub repositories.",e)===e&&this.ensureSession(!0)})),e=!1,i.call(this);throw new a._7("github",a.Jx.UserDidNotConsent)}throw S.Yd.error(s),new a._7("github",void 0,s)}}this._sessionPromise=i.call(this)}return this._sessionPromise}createVirtualUri(e,t,i){let n;if("string"==typeof t)t&&(n=(0,v.D3)(t)?{v:1,ref:{id:t,type:2}}:{v:1,ref:{id:t,type:4}});else switch(t?.refType){case"revision":case"stash":n={v:1,ref:{id:t.ref,type:2}};break;case"branch":case"tag":n={v:1,ref:{id:t.name,type:4}}}if("string"==typeof e&&(e=r.Uri.parse(e,!0)),i){let t=e.path;t.endsWith("/")&&(t=t.slice(0,-1)),i=`${t}/${(i=this.getRelativePath(i,e)).startsWith("/")?i.slice(0,-1):i}`}return e.with({scheme:s.sN.Virtual,authority:_e("github",n),path:i??e.path})}createProviderUri(e,t,i){const r=this.createVirtualUri(e,t,i);return null==this._remotehub?r.scheme!==s.sN.Virtual?r:r.with({scheme:s.sN.GitHub}):this._remotehub.getProviderUri(r)}getPagingLimit(e){return 0===(e=Math.min(100,e??ne.D.get("advanced.maxListItems")??100))&&(e=100),e}async resolveReferenceCore(e,t,i){if(null==i||"HEAD"===i){return(await t.getRevision()).revision}if((0,v.D3)(i))return i;if((0,v.yk)(i))return;const[r,n]=await Promise.allSettled([this.getBranches(e,{filter:e=>e.name===i}),this.getTags(e,{filter:e=>e.name===i})]);return i=(0,he.Sb)(r)?.values[0]?.sha??(0,he.Sb)(n)?.values[0]?.sha}async getQueryArgsFromSearchQuery(e,t,i){const r=[];for(const[n,s]of t.entries())switch(n){case"message:":r.push(...s.map((e=>e.replace(/ /g,"+"))));break;case"author:":{let t;s.includes("@me")&&(t=await this.getCurrentUser(i));for(let i of s)if(i&&(i=i.replace(Ae,e.matchRegex?"\\b":""),i)){if("@me"===i){if(null==t?.username)continue;i=`@${t.username}`}i=i.replace(/ /g,"+"),i.startsWith("@")?r.push(`author:${i.slice(1)}`):i.includes("@")?r.push(`author-email:${i}`):r.push(`author-name:${i}`)}break}}return r}}function _e(e,t){return`${e}${null!=t?`+${(0,n.e)(JSON.stringify(t))}`:""}`}Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getBestRevisionUri",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getWorkingUri",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"addRemote",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"pruneRemote",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"removeRemote",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"applyChangesToWorkingFile",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"branchContainsCommit",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"checkout",1),Ce([(0,H.cM)({singleLine:!0})],GitHubGitProvider.prototype,"resetCache",1),Ce([(0,H.cM)({singleLine:!0})],GitHubGitProvider.prototype,"resetCaches",1),Ce([(0,H.cM)({args:{1:e=>e.length}})],GitHubGitProvider.prototype,"excludeIgnoredUris",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"fetch",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"pull",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"push",1),Ce([(0,oe.H)(),(0,H.fF)()],GitHubGitProvider.prototype,"findRepositoryUri",1),Ce([(0,H.cM)({args:{1:e=>e.join(",")}})],GitHubGitProvider.prototype,"getAheadBehindCommitCount",1),Ce([(0,oe.H)(((e,t)=>`${e.toString()}|${t?.isDirty}`)),(0,H.cM)({args:{1:e=>e?.isDirty}})],GitHubGitProvider.prototype,"getBlame",1),Ce([(0,H.cM)({args:{1:"<contents>"}})],GitHubGitProvider.prototype,"getBlameContents",1),Ce([(0,oe.H)(((e,t,i,r)=>`${e.toString()}|${t}|${i?.isDirty}|${r?.forceSingleLine}`)),(0,H.cM)({args:{2:e=>e?.isDirty}})],GitHubGitProvider.prototype,"getBlameForLine",1),Ce([(0,H.cM)({args:{2:"<contents>"}})],GitHubGitProvider.prototype,"getBlameForLineContents",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getBlameForRange",1),Ce([(0,H.cM)({args:{2:"<contents>"}})],GitHubGitProvider.prototype,"getBlameForRangeContents",1),Ce([(0,H.cM)({args:{0:"<blame>"}})],GitHubGitProvider.prototype,"getBlameRange",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getBranch",1),Ce([(0,H.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getBranches",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getChangedFilesCount",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getCommit",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitBranches",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitCount",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitForFile",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitsForGraph",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getContributors",1),Ce([(0,oe.H)(),(0,H.cM)()],GitHubGitProvider.prototype,"getCurrentUser",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getDefaultBranchName",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffForFile",1),Ce([(0,H.cM)({args:{1:e=>"<contents>"}})],GitHubGitProvider.prototype,"getDiffForFileContents",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffForLine",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffStatus",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getFileStatusForCommit",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getLog",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getLogRefsOnly",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getLogForFile",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getMergeBase",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getMergeStatus",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getRebaseStatus",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getNextComparisonUris",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getOldestUnpushedRefForFile",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getPreviousComparisonUris",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getPreviousComparisonUrisForLine",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getIncomingActivity",1),Ce([(0,H.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getRemotes",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getRevisionContent",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getStash",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getStatusForFile",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getStatusForFiles",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getStatusForRepo",1),Ce([(0,H.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getTags",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getTreeEntryForRevision",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getTreeForRevision",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"hasBranchOrTag",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"hasCommitBeenPushed",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffTool",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"openDiffTool",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"openDirectoryCompare",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"resolveReference",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"richSearchCommits",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"searchCommits",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"validateBranchOrTagName",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"validateReference",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"stageFile",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"stageDirectory",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"unStageFile",1),Ce([(0,H.cM)()],GitHubGitProvider.prototype,"unStageDirectory",1),Ce([(0,oe.H)()],GitHubGitProvider.prototype,"ensureRepositoryContext",1),Ce([(0,oe.H)()],GitHubGitProvider.prototype,"ensureGitHub",1);class RepositoryWebPathMappingProvider{constructor(e){this._container=e}dispose(){}async getLocalRepoPaths(e){return[]}async writeLocalRepoPath(e,t){}}class WorkspacesWebPathMappingProvider{async getCloudWorkspaceRepoPath(e,t){}async getCloudWorkspaceCodeWorkspacePath(e){}async removeCloudWorkspaceCodeWorkspaceFilePath(e){}async writeCloudWorkspaceCodeWorkspaceFilePathToMap(e,t){}async confirmCloudWorkspaceCodeWorkspaceFilePath(e){return!1}async writeCloudWorkspaceRepoDiskPathToMap(e,t,i){}async getLocalWorkspaceData(){return{workspaces:{}}}async writeCodeWorkspaceFile(e,t,i){return!1}async updateCodeWorkspaceFileSettings(e,t){return!1}}var Te=i(9827);class AnthropicProvider{constructor(e){this.container=e}id="anthropic";name="Anthropic";get model(){return ne.D.get("ai.experimental.anthropic.model")||"claude-v1"}dispose(){}async generateCommitMessage(e,t){const i=await Fe(this.container.storage);if(null==i)return;const n=this.model,s=Oe(n),o=e.substring(0,s);e.length>s&&r.window.showWarningMessage(`The diff of the staged changes had to be truncated to ${s} characters to fit within the Anthropic's limits.`);let a=ne.D.get("experimental.generateCommitMessagePrompt");a.endsWith(".")||(a+=".");let l="\n\nHuman: You are an AI programming assistant tasked with writing a meaningful commit message by summarizing code changes.\n- Follow the user's instructions carefully & to the letter!\n- Don't repeat yourself or make anything up!\n- Minimize any other prose.";l+=`\n${a}\n- Avoid phrases like "this commit", "this change", etc.`,l+="\n\nAssistant: OK",t?.context&&(l+=`\n\nHuman: Use "${t.context}" to help craft the commit message.\n\nAssistant: OK`),l+=`\n\nHuman: Write a meaningful commit message for the following code changes:\n\n${o}`,l+="\n\nAssistant:";const c={model:n,prompt:l,stream:!1,max_tokens_to_sample:5e3,stop_sequences:["\n\nHuman:"]},h=await(0,Te.he)("https://api.anthropic.com/v1/complete",{headers:{Accept:"application/json",Authorization:`Bearer ${i}`,"Content-Type":"application/json",Client:"anthropic-typescript/0.4.3","X-API-Key":i},method:"POST",body:JSON.stringify(c)});if(!h.ok){let e;try{e=await h.json()}catch{}throw new Error(`Unable to generate commit message: (${this.name}:${h.status}) ${e?.error.message||h.statusText})`)}return(await h.json()).completion.trim()}async explainChanges(e,t){const i=await Fe(this.container.storage);if(null==i)return;const n=this.model,s=Oe(n),o=t.substring(0,s);t.length>s&&r.window.showWarningMessage(`The diff of the commit changes had to be truncated to ${s} characters to fit within the OpenAI's limits.`);let a="\n\nHuman: You are an AI programming assistant tasked with providing an easy to understand but detailed explanation of a commit by summarizing the code changes while also using the commit message as additional context and framing.\nDon't make anything up!";a+=`\nUse the following user-provided commit message, which should provide some explanation to why these changes where made, when attempting to generate the rich explanation:\n\n${e}`,a+="\n\nAssistant: OK",a+=`\n\nHuman: Explain the following code changes:\n\n${o}`,a+="\n\nAssistant:";const l={model:n,prompt:a,stream:!1,max_tokens_to_sample:5e3,stop_sequences:["\n\nHuman:"]},c=await(0,Te.he)("https://api.anthropic.com/v1/complete",{headers:{Accept:"application/json",Authorization:`Bearer ${i}`,"Content-Type":"application/json",Client:"anthropic-typescript/0.4.3","X-API-Key":i,"anthropic-version":"2023-06-01"},method:"POST",body:JSON.stringify(l)});if(!c.ok){let e;try{e=await c.json()}catch{}throw new Error(`Unable to explain commit: (${this.name}:${c.status}) ${e?.error.message||c.statusText})`)}return(await c.json()).completion.trim()}}async function Fe(e){let t=await e.getSecret("gitlens.anthropic.key");if(!t){const i=r.window.createInputBox();i.ignoreFocusOut=!0;const n=[];try{const e={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the Anthropic API Key Page"};t=await new Promise((t=>{n.push(i.onDidHide((()=>t(void 0))),i.onDidChangeValue((e=>{!e||/sk-[a-zA-Z0-9-_]{32,}/.test(e)?i.validationMessage=void 0:i.validationMessage="Please enter a valid Anthropic API key"})),i.onDidAccept((()=>{const e=i.value.trim();e&&/sk-[a-zA-Z0-9-_]{32,}/.test(e)?t(e):i.validationMessage="Please enter a valid Anthropic API key"})),i.onDidTriggerButton((t=>{t===e&&r.env.openExternal(r.Uri.parse("https://console.anthropic.com/account/keys"))}))),i.password=!0,i.title="Connect to Anthropic",i.placeholder="Please enter your Anthropic API key to use this feature",i.prompt=(0,q.gn)("input-prompt-links")?'Enter your [Anthropic API Key](https://console.anthropic.com/account/keys "Get your Anthropic API key")':"Enter your Anthropic API Key",i.buttons=[e],i.show()}))}finally{i.dispose(),n.forEach((e=>{e.dispose()}))}if(!t)return;e.storeSecret("gitlens.anthropic.key",t)}return t}function Oe(e){return"claude-2"===e||"claude-v1-100k"===e||"claude-instant-v1-100k"===e?135e3:12e3}class OpenAIProvider{constructor(e){this.container=e}id="openai";name="OpenAI";get model(){return ne.D.get("ai.experimental.openai.model")||"gpt-3.5-turbo"}dispose(){}get url(){return ne.D.get("ai.experimental.openai.url")??"https://api.openai.com/v1/chat/completions"}async generateCommitMessage(e,t){const i=await Ee(this.container.storage);if(null==i)return;const n=this.model,s=$e(n),o=e.substring(0,s);e.length>s&&r.window.showWarningMessage(`The diff of the staged changes had to be truncated to ${s} characters to fit within the OpenAI's limits.`);let a=ne.D.get("experimental.generateCommitMessagePrompt");a.endsWith(".")||(a+=".");const l={model:n,messages:[{role:"system",content:"You are an AI programming assistant tasked with writing a meaningful commit message by summarizing code changes.\n\n- Follow the user's instructions carefully & to the letter!\n- Don't repeat yourself or make anything up!\n- Minimize any other prose."},{role:"user",content:`${a}\n- Avoid phrases like "this commit", "this change", etc.`}]};t?.context&&l.messages.push({role:"user",content:`Use "${t.context}" to help craft the commit message.`}),l.messages.push({role:"user",content:`Write a meaningful commit message for the following code changes:\n\n${o}`});const c=await(0,Te.he)(this.url,{headers:{Accept:"application/json",Authorization:`Bearer ${i}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(l)});if(!c.ok){if(429===c.status)throw new Error(`Unable to generate commit message: (${this.name}:${c.status}) Too many requests (rate limit exceeded) or your API key is associated with an expired trial`);throw new Error(`Unable to generate commit message: (${this.name}:${c.status}) ${c.statusText}`)}return(await c.json()).choices[0].message.content.trim()}async explainChanges(e,t){const i=await Ee(this.container.storage);if(null==i)return;const n=this.model,s=$e(n),o=t.substring(0,s);t.length>s&&r.window.showWarningMessage(`The diff of the commit changes had to be truncated to ${s} characters to fit within the OpenAI's limits.`);const a={model:n,messages:[{role:"system",content:"You are an AI programming assistant tasked with providing an easy to understand but detailed explanation of a commit by summarizing the code changes while also using the commit message as additional context and framing.\n\n- Don't make anything up!"},{role:"user",content:`Use the following user-provided commit message, which should provide some explanation to why these changes where made, when attempting to generate the rich explanation:\n\n${e}`},{role:"assistant",content:"OK"},{role:"user",content:`Explain the following code changes:\n\n${o}`}]},l=await(0,Te.he)(this.url,{headers:{Accept:"application/json",Authorization:`Bearer ${i}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(a)});if(!l.ok){if(429===l.status)throw new Error(`Unable to explain commit: (${this.name}:${l.status}) Too many requests (rate limit exceeded) or your API key is associated with an expired trial`);throw new Error(`Unable to explain commit: (${this.name}:${l.status}) ${l.statusText}`)}return(await l.json()).choices[0].message.content.trim()}}async function Ee(e){let t=await e.getSecret("gitlens.openai.key");if(!t){const i=r.window.createInputBox();i.ignoreFocusOut=!0;const n=[];try{const e={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the OpenAI API Key Page"};t=await new Promise((t=>{n.push(i.onDidHide((()=>t(void 0))),i.onDidChangeValue((e=>{!e||/sk-[a-zA-Z0-9]{32}/.test(e)?i.validationMessage=void 0:i.validationMessage="Please enter a valid OpenAI API key"})),i.onDidAccept((()=>{const e=i.value.trim();e&&/sk-[a-zA-Z0-9]{32}/.test(e)?t(e):i.validationMessage="Please enter a valid OpenAI API key"})),i.onDidTriggerButton((t=>{t===e&&r.env.openExternal(r.Uri.parse("https://platform.openai.com/account/api-keys"))}))),i.password=!0,i.title="Connect to OpenAI",i.placeholder="Please enter your OpenAI API key to use this feature",i.prompt=(0,q.gn)("input-prompt-links")?'Enter your [OpenAI API Key](https://platform.openai.com/account/api-keys "Get your OpenAI API key")':"Enter your OpenAI API Key",i.buttons=[e],i.show()}))}finally{i.dispose(),n.forEach((e=>{e.dispose()}))}if(!t)return;e.storeSecret("gitlens.openai.key",t)}return t}function $e(e){switch(e){case"gpt-4-32k":case"gpt-4-32k-0314":case"gpt-4-32k-0613":return 43e3;case"gpt-3.5-turbo-16k":return 21e3;default:return 12e3}}class AIProviderService{constructor(e){this.container=e}_provider;get provider(){const e=ne.D.get("ai.experimental.provider");return e===this._provider?.id||(this._provider?.dispose(),this._provider="anthropic"===e?new AnthropicProvider(this.container):new OpenAIProvider(this.container)),this._provider}dispose(){this._provider?.dispose()}async generateCommitMessage(e,t){const i=(0,b.uC)(e)?e:this.container.git.getRepository(e);if(null==i)throw new Error("Unable to find repository");const n=await this.container.git.getDiff(i.uri,m.pw);if(null==n)throw new Error("No staged changes to generate a commit message from.");const s=this.provider;if(await Ie(s,this.container.storage))return null!=t?.progress?r.window.withProgress(t.progress,(async()=>s.generateCommitMessage(n.contents,{context:t?.context}))):s.generateCommitMessage(n.contents,{context:t?.context})}async explainCommit(e,t,i){let n;if("string"==typeof e||e instanceof r.Uri){if("string"!=typeof t||!t)throw new Error("Invalid arguments provided");n=await this.container.git.getCommit(e,t)}else{if("string"==typeof t)throw new Error("Invalid arguments provided");n=(0,p.f_)(e)?e:await this.container.git.getCommit(e.repoPath,e.ref),i=t}if(null==n)throw new Error("Unable to find commit");const s=await this.container.git.getDiff(n.repoPath,n.sha);if(null==s)throw new Error("No changes found to explain.");const o=this.provider;if(await Ie(o,this.container.storage))return n.hasFullDetails()||(await n.ensureFullDetails(),(0,p.yp)(n)),null!=i?.progress?r.window.withProgress(i.progress,(async()=>o.explainChanges(n.message,s.contents))):o.explainChanges(n.message,s.contents)}}async function Ie(e,t){if(t.get(`confirm:ai:tos:${e.id}`,!1)||t.getWorkspace(`confirm:ai:tos:${e.id}`,!1))return!0;const i={title:"Yes"},n={title:"Always for this Workspace"},s={title:"Always"},o=await r.window.showInformationMessage(`This GitLens experimental feature requires sending a diff of the code changes to ${e.name}. This may contain sensitive information.\n\nDo you want to continue?`,{modal:!0},i,n,s,{title:"No",isCloseAffordance:!0});return o===i||(o===n?(t.storeWorkspace(`confirm:ai:tos:${e.id}`,!0),!0):o===s&&(t.store(`confirm:ai:tos:${e.id}`,!0),!0))}var xe=i(3139),Be=i(623),We=i(9338),Me=i(1062),Le=i(248),Ue=Object.defineProperty,Ne=Object.getOwnPropertyDescriptor,Ge=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ne(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ue(t,i,s),s};const He=r.window.createTextEditorDecorationType({after:{margin:"0 0 0 3em",textDecoration:"none"},rangeBehavior:r.DecorationRangeBehavior.ClosedOpen}),Ve=2**30;class LineAnnotationController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),ne.D.onDidChange(this.onConfigurationChanged,this),e.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled,this),e.richRemoteProviders.onDidChangeConnectionState((()=>{this.refresh(r.window.activeTextEditor)})))}_cancellation;_disposable;_editor;_enabled=!1;dispose(){this.clearAnnotations(this._editor),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){ne.D.changed(e,"currentLine")&&(ne.D.changed(e,"currentLine.enabled")&&(ne.D.get("currentLine.enabled")?(this._enabled=!0,this.resume()):(this._enabled=!1,this.setLineTracker(!1))),this.refresh(r.window.activeTextEditor))}_suspended=!1;get suspended(){return!this._enabled||this._suspended}resume(){return this.setLineTracker(!0),!!this._suspended&&(this._suspended=!1,!0)}suspend(){return this.setLineTracker(!1),!this._suspended&&(this._suspended=!0,!0)}onActiveLinesChanged(e){e.pending||void 0===e.selections?this.clear(e.editor):this.refresh(e.editor)}onFileAnnotationsToggled(){this.refresh(r.window.activeTextEditor)}clear(e){this._cancellation?.cancel(),this._editor!==e&&null!=this._editor&&this.clearAnnotations(this._editor),this.clearAnnotations(e)}async toggle(e){this._enabled=!(this._enabled&&!this.suspended),this._enabled?this.resume()&&await this.refresh(e):this.suspend()&&await this.refresh(e)}clearAnnotations(e){void 0!==e&&!0!==e._disposed&&e.setDecorations(He,[])}async getPullRequests(e,t,{timeout:i}={}){if(0===t.length)return;const r=await this.container.git.getBestRemoteWithRichProvider(e);if(null==r?.provider)return;const n=new Set;for(const[,e]of t)n.add(e.ref);if(0===n.size)return;const{provider:s}=r,o=await(0,he.xu)(n.values(),(e=>this.container.git.getPullRequestForCommit(e,s)),i);return 0===o.size||(0,ae.yW)(o.values(),(e=>null==e))?void 0:o}async refresh(e,t){if(null==e&&null==this._editor)return;const i=(0,le.UH)(),n=this.container.lineTracker.selections;if(null==e||null==n||!(0,q.PH)(e))return(0,le.lH)(i,` ${s.NE.Dot} Skipped because there is no valid editor or no valid selections`),void this.clear(this._editor);this._editor!==e&&(this.clear(this._editor),this._editor=e);const o=ne.D.get("currentLine");if(this.suspended)return(0,le.lH)(i,` ${s.NE.Dot} Skipped because the controller is suspended`),void this.clear(e);const a=await this.container.tracker.getOrAdd(e.document);if(!a.isBlameable&&this.suspended)return null!=i&&(i.exitDetails=` ${s.NE.Dot} Skipped because the ${this.suspended?"controller is suspended":`document(${a.uri.toString(!0)}) is not blameable`}`),void this.clear(e);if(null==e.document||!this.container.lineTracker.includes(n))return void(null!=i&&(i.exitDetails=` ${s.NE.Dot} Skipped because the ${null==e.document?"editor is gone":`selection(s)=${n.map((e=>`[${e.anchor}-${e.active}]`)).join()} are no longer current`}`));null!=i&&(i.exitDetails=` ${s.NE.Dot} selection(s)=${n.map((e=>`[${e.anchor}-${e.active}]`)).join()}`);const l=new Map;for(const e of n){const t=this.container.lineTracker.getState(e.active);null!=t?.commit?l.set(e.active,t.commit):S.Yd.debug(i,`Line ${e.active} returned no commit`)}const c=a.uri.repoPath,[h,u]=await Promise.all([We.i.has(o.format,"tips")?this.container.git.getBranchesAndTagsTipsFn(c):void 0,null!=c&&o.pullRequests.enabled&&We.i.has(o.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")?t?.prs??this.getPullRequests(c,[...(0,ae.hX)(l,(([,e])=>!e.isUncommitted))],{timeout:100}):void 0]);null!=u&&(this._cancellation?.cancel(),this._cancellation=new r.CancellationTokenSource,this.waitForAnyPendingPullRequests(e,u,this._cancellation.token,100,i));const d=[];let p;if(e.document.uri.scheme===s.sN.Vsls||e.document.uri.scheme===s.sN.VslsScc){const e=ne.D.get("hovers");p={autolinks:e.autolinks.enabled,dateFormat:ne.D.get("defaultDateFormat"),format:e.detailsMarkdownFormat,pullRequests:{enabled:e.pullRequests.enabled}}}for(const[t,i]of l){if(i.isUncommitted&&""===o.uncommittedChangesFormat)continue;const n=u?.get(i.ref),l=(0,Le.sV)(i,i.isUncommitted?o.uncommittedChangesFormat??o.format:o.format,{dateFormat:null===o.dateFormat?ne.D.get("defaultDateFormat"):o.dateFormat,getBranchAndTagTips:h,pullRequestOrRemote:n,pullRequestPendingMessage:`PR ${s.NE.Ellipsis}`},o.scrollable);l.range=e.document.validateRange(new r.Range(t,Ve,t,Ve)),null!=p&&(l.hoverMessage=await(0,Me.nN)(i,a.uri,t,null!=n?{...p,pullRequests:{...p.pullRequests,pr:n}}:p)),d.push(l)}e.setDecorations(He,d)}setLineTracker(e){e?this.container.lineTracker.subscribed(this)||this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this)):this.container.lineTracker.unsubscribe(this)}async waitForAnyPendingPullRequests(e,t,i,r,n){const o=(0,ae.QX)(t.values(),(e=>e instanceof he.PK));if(i.isCancellationRequested||0===o)return;S.Yd.debug(n,`${s.NE.Dot} ${o} pull request queries took too long (over ${r} ms)`);const a=new Map;for(const[e,i]of t)a.set(e,i instanceof he.PK?await i.promise:i);i.isCancellationRequested||e!==this._editor||(S.Yd.debug(n,`${s.NE.Dot} ${o} pull request queries completed; refreshing...`),this.refresh(e,{prs:a}))}}Ge([(0,H.cM)()],LineAnnotationController.prototype,"resume",1),Ge([(0,H.cM)()],LineAnnotationController.prototype,"suspend",1),Ge([(0,H.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineAnnotationController.prototype,"onActiveLinesChanged",1),Ge([(0,H.fF)({args:!1,singleLine:!0})],LineAnnotationController.prototype,"clear",1),Ge([(0,H.cM)({args:!1})],LineAnnotationController.prototype,"toggle",1),Ge([(0,H.fF)({args:!1})],LineAnnotationController.prototype,"refresh",1);var qe=i(8294),Qe=i(8388);class GitCodeLensController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),ne.D.onDidChange(this.onConfigurationChanged,this))}_canToggle=!1;_disposable;_provider;_providerDisposable;dispose(){this._providerDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(ne.D.changed(e,["codeLens","defaultDateFormat","defaultDateSource","defaultDateStyle"])){null!=e&&S.Yd.log("CodeLens config changed; resetting CodeLens provider");const t=ne.D.get("codeLens");t.enabled&&(t.recentChange.enabled||t.authors.enabled)?this.ensureProvider():(this._providerDisposable?.dispose(),this._provider=void 0),this._canToggle=t.recentChange.enabled||t.authors.enabled,(0,se.v)("gitlens:disabledToggleCodeLens",!this._canToggle)}}onBlameStateChanged(e){null!=this._provider&&e.blameable&&(S.Yd.log("Blame state changed; resetting CodeLens provider"),this._provider.reset("saved"))}onDirtyIdleTriggered(e){if(null==this._provider||!e.document.isBlameable)return;const t=ne.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||(S.Yd.log("Dirty idle triggered; resetting CodeLens provider"),this._provider.reset("idle"))}toggleCodeLens(){if(this._canToggle){if(S.Yd.log("toggleCodeLens()"),null!=this._provider)return this._providerDisposable?.dispose(),void(this._provider=void 0);this.ensureProvider()}}async ensureProvider(){if(null!=this._provider)return void this._provider.reset();this._providerDisposable?.dispose();const{GitCodeLensProvider:e}=await Promise.resolve().then(i.bind(i,5183));this._provider=new e(this.container),this._providerDisposable=r.Disposable.from(r.languages.registerCodeLensProvider(e.selector,this._provider),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))}}const Ye=new Set(["commit:selected","file:selected"]),je=new Map;class EventBus{_emitter=new r.EventEmitter;dispose(){this._emitter.dispose()}fire(e,t,i){(function(e){return Ye.has(e)})(e)&&je.set(e,t),this._emitter.fire({name:e,data:t,source:i?.source})}fireAsync(e,t,i){queueMicrotask((()=>this.fire(e,t,i)))}getCachedEventArgs(e){return je.get(e)}on(e,t,i,r){return this._emitter.event((function(r){e===r.name&&t.call(i,r)}),i,r)}}var ze=i(429);const Ke={done:!0,value:void 0};class StringIterator{_value="";_pos=0;reset(e){return this._value=e,this._pos=0,this}next(){return this._pos+=1,this}hasNext(){return this._pos<this._value.length-1}cmp(e){return e.charCodeAt(0)-this._value.charCodeAt(this._pos)}value(){return this._value[this._pos]}}class PathIterator{constructor(e=!0,t=!0){this._splitOnBackslash=e,this._caseSensitive=t}_value;_from;_to;reset(e){return this._value=e.replace(/\\$|\/$/,""),this._from=0,this._to=0,this.next()}hasNext(){return this._to<this._value.length}next(){this._from=this._to;let e=!0;for(;this._to<this._value.length;this._to++){const t=this._value.charCodeAt(this._to);if(t===s.mN.Slash||this._splitOnBackslash&&t===s.mN.Backslash){if(!e)break;this._from++}else e=!1}return this}cmp(e){return this._caseSensitive?(0,W.TT)(e,this._value,0,e.length,this._from,this._to):(0,W.j_)(e,this._value,0,e.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class TernarySearchTreeNode{segment;value;key;left;mid;right;isEmpty(){return!(this.left||this.mid||this.right||this.value)}}class TernarySearchTree{static forPaths(){return new TernarySearchTree(new PathIterator)}static forStrings(){return new TernarySearchTree(new StringIterator)}_iter;_root;constructor(e){this._iter=e}clear(){this._root=void 0}set(e,t){const i=this._iter.reset(e);let r;for(this._root||(this._root=new TernarySearchTreeNode,this._root.segment=i.value()),r=this._root;;){const e=i.cmp(r.segment);if(e>0)r.left||(r.left=new TernarySearchTreeNode,r.left.segment=i.value()),r=r.left;else if(e<0)r.right||(r.right=new TernarySearchTreeNode,r.right.segment=i.value()),r=r.right;else{if(!i.hasNext())break;i.next(),r.mid||(r.mid=new TernarySearchTreeNode,r.mid.segment=i.value()),r=r.mid}}const n=r.value;return r.value=t,r.key=e,n}get(e){return this._getNode(e)?.value}_getNode(e){const t=this._iter.reset(e);let i=this._root;for(;i;){const e=t.cmp(i.segment);if(e>0)i=i.left;else if(e<0)i=i.right;else{if(!t.hasNext())break;t.next(),i=i.mid}}return i}has(e){const t=this._getNode(e);return!(void 0===t?.value&&void 0===t?.mid)}delete(e){this._delete(e,!1)}deleteSuperstr(e){this._delete(e,!0)}_delete(e,t){const i=this._iter.reset(e),r=[];let n=this._root;for(;n;){const e=i.cmp(n.segment);if(e>0)r.push([1,n]),n=n.left;else if(e<0)r.push([-1,n]),n=n.right;else{if(!i.hasNext()){for(t?(n.left=void 0,n.mid=void 0,n.right=void 0):n.value=void 0;r.length>0&&n.isEmpty();){const[e,t]=r.pop();switch(e){case 1:t.left=void 0;break;case 0:t.mid=void 0;break;case-1:t.right=void 0}n=t}break}i.next(),r.push([0,n]),n=n.mid}}}findSubstr(e){const t=this._iter.reset(e);let i,r=this._root;for(;r;){const e=t.cmp(r.segment);if(e>0)r=r.left;else if(e<0)r=r.right;else{if(!t.hasNext())break;t.next(),i=r.value||i,r=r.mid}}return r?.value||i}findSuperstr(e,t=!1){const i=this._iter.reset(e);let r=this._root;for(;r;){const e=i.cmp(r.segment);if(e>0)r=r.left;else if(e<0)r=r.right;else{if(!i.hasNext()){if(!r.mid)return;return r=r.mid,{[Symbol.iterator]:()=>this._nodeIterator(r,t)}}i.next(),r=r.mid}}}_nodeIterator(e,t=!1){let i,r,n;return{next:()=>(n||(n=[],r=0,this._forEach(e,(e=>n.push(e)),t)),r>=n.length?Ke:(i?i.value=n[r++]:i={done:!1,value:n[r++]},i))}}forEach(e){this._forEach(this._root,e)}_forEach(e,t,i=!1){void 0!==e&&(this._forEach(e.left,t,i),e.value&&t(e.value,e.key),i||this._forEach(e.mid,t,i),this._forEach(e.right,t,i))}any(){return void 0!==this._root&&!this._root.isEmpty()}count(e){return void 0===this._root||this._root.isEmpty()?0:(0,ae.QX)(this.entries(),void 0===e?void 0:([,t])=>e(t))}entries(){return this._iterator(this._root)}values(){return(0,ae.UI)(this.entries(),(([,e])=>e))}highlander(){if(void 0===this._root||this._root.isEmpty())return;const e=this.entries();let t,i,r=0;for(;t=e.next(),!t.done;)if(i=t.value,r++,r>1)return;return i}some(e){return void 0!==this._root&&!this._root.isEmpty()&&(0,ae.G)(this.entries(),(([,t])=>e(t)))}*[Symbol.iterator](){yield*this._iterator(this._root)}*_iterator(e){e&&(yield*this._iterator(e.left),e.value&&(yield[e.key,e.value]),yield*this._iterator(e.mid),yield*this._iterator(e.right))}}var Je=Object.defineProperty,Xe=Object.getOwnPropertyDescriptor,Ze=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Xe(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Je(t,i,s),s};const et=new Uint8Array(0);function tt(e){const t=(0,u.uy)(e)?e:u.YY.fromRevisionUri(e);return{path:t.relativePath,ref:t.sha,repoPath:t.repoPath}}class GitFileSystemProvider{constructor(e){this.container=e,this._disposable=r.Disposable.from(r.workspace.registerFileSystemProvider(s.sN.GitLens,this,{isCaseSensitive:ze.IJ,isReadonly:!0}))}_disposable;_searchTreeMap=new Map;dispose(){this._disposable.dispose()}_onDidChangeFile=new r.EventEmitter;get onDidChangeFile(){return this._onDidChangeFile.event}copy(e,t,i){throw r.FileSystemError.NoPermissions(e)}createDirectory(e){throw r.FileSystemError.NoPermissions(e)}delete(e,t){throw r.FileSystemError.NoPermissions(e)}async readDirectory(e){const{path:t,ref:i,repoPath:n}=tt(e),s=await this.getTree(t,i,n);if(void 0===s)throw r.FileSystemError.FileNotFound(e);return[...(0,ae.UI)(s,(e=>[null!=t&&0!==t.length?(0,ce.AH)((0,ce.Gf)(t,e.path)):e.path,it(e.type)]))]}async readFile(e){const{path:t,ref:i,repoPath:r}=tt(e);if(i===m.Ii)return et;const n=await this.container.git.getRevisionContent(r,t,i);return null!=n?n:et}rename(e,t,i){throw r.FileSystemError.NoPermissions(e)}async stat(e){const{path:t,ref:i,repoPath:n}=tt(e);if(i===m.Ii)return{type:r.FileType.File,size:0,ctime:0,mtime:0};let s;const o=this._searchTreeMap.get(i);if(void 0!==o)s=(await o).get(`/~/${t}`);else{if(null==t||0===t.length){if(void 0===await this.getTree(t,i,n))throw r.FileSystemError.FileNotFound(e);return{type:r.FileType.Directory,size:0,ctime:0,mtime:0}}s=await this.container.git.getTreeEntryForRevision(n,t,i)}if(void 0===s)throw r.FileSystemError.FileNotFound(e);return{type:it(s.type),size:s.size,ctime:0,mtime:0}}watch(){return{dispose:()=>{}}}writeFile(e){throw r.FileSystemError.NoPermissions(e)}async createSearchTree(e,t){const i=TernarySearchTree.forPaths(),r=await this.container.git.getTreeForRevision(t,e);i.set("~",{commitSha:"",path:"~",size:0,type:"tree"});for(const e of r)i.set(`~/${e.path}`,e);return i}getOrCreateSearchTree(e,t){let i=this._searchTreeMap.get(e);return void 0===i&&(i=this.createSearchTree(e,t),this._searchTreeMap.set(e,i)),i}async getTree(e,t,i){return(await this.getOrCreateSearchTree(t,i)).findSuperstr(`/~/${e}`,!0)}}function it(e){switch(e){case"blob":return r.FileType.File;case"tree":return r.FileType.Directory;default:return r.FileType.Unknown}}Ze([(0,H.fF)()],GitFileSystemProvider.prototype,"readDirectory",1),Ze([(0,H.fF)()],GitFileSystemProvider.prototype,"readFile",1),Ze([(0,H.fF)()],GitFileSystemProvider.prototype,"stat",1);var rt=i(2133),nt=i(4968),st=i(2800),ot=i(9529),at=i(1526),lt=Object.defineProperty,ct=Object.getOwnPropertyDescriptor,ht=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?ct(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&lt(t,i,s),s};const ut=Object.freeze([]),dt=Object.freeze({dispose:()=>{}}),pt=new Map([["master",100],["main",15],["default",10],["develop",5],["development",1]]);class GitProviderService{constructor(e){this.container=e,this._disposable=r.Disposable.from(e.subscription.onDidChange(this.onSubscriptionChanged,this),r.window.onDidChangeWindowState(this.onWindowStateChanged,this),r.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this),ne.D.onDidChange(this.onConfigurationChanged,this),e.richRemoteProviders.onDidChangeConnectionState((e=>{"connected"===e.reason&&(0,Qe.E3)("failed"),this.resetCaches("providers"),this.updateContext()})),r.workspace.isTrusted?dt:r.workspace.onDidGrantWorkspaceTrust((()=>{r.workspace.isTrusted&&r.workspace.workspaceFolders?.length&&this.discoverRepositories(r.workspace.workspaceFolders,{force:!0})})),...this.registerCommands()),this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.CommitShaFormatting.reset(),this.container.PullRequestDateFormatting.reset(),this.updateContext()}_onDidChangeProviders=new r.EventEmitter;get onDidChangeProviders(){return this._onDidChangeProviders.event}fireProvidersChanged(e,t){this.container.telemetry.enabled&&(this.container.telemetry.setGlobalAttributes({"providers.count":this._providers.size,"providers.ids":(0,ae.v_)(this._providers.keys(),",")}),this.container.telemetry.sendEvent("providers/changed",{"providers.added":e?.length??0,"providers.removed":t?.length??0})),this._etag=Date.now(),this._onDidChangeProviders.fire({added:e??[],removed:t??[],etag:this._etag})}_onDidChangeRepositories=new r.EventEmitter;get onDidChangeRepositories(){return this._onDidChangeRepositories.event}fireRepositoriesChanged(e,t){const i=this.openRepositories.map((e=>e.uri.scheme));this.container.telemetry.enabled&&(this.container.telemetry.setGlobalAttributes({"repositories.count":i.length,"repositories.schemes":(0,st.h8)(i,",")}),this.container.telemetry.sendEvent("repositories/changed",{"repositories.added":e?.length??0,"repositories.removed":t?.length??0})),this._etag=Date.now(),this._accessCache.clear(),this._reposVisibilityCache=void 0,this._onDidChangeRepositories.fire({added:e??[],removed:t??[],etag:this._etag}),e?.length&&this.container.telemetry.enabled&&queueMicrotask((async()=>{for(const t of e){const e=new Set,i=await t.getRemotes();for(const t of i)e.add(t.provider?.id??"unknown");this.container.telemetry.sendEvent("repository/opened",{"repository.id":t.idHash,"repository.scheme":t.uri.scheme,"repository.closed":t.closed,"repository.folder.scheme":t.folder?.uri.scheme,"repository.provider.id":t.provider.id,"repository.remoteProviders":(0,ae.v_)(e,",")})}}))}_onDidChangeRepository=new r.EventEmitter;get onDidChangeRepository(){return this._onDidChangeRepository.event}supportedSchemes=new Set;_disposable;_pendingRepositories=new Map;_providers=new Map;_repositories=new rt.x8;_bestRemotesCache=new Map;_visitedPaths=new at.u$;dispose(){this._disposable.dispose(),this._providers.clear(),this._repositories.forEach((e=>e.dispose())),this._repositories.clear()}_etag=0;get etag(){return this._etag}onConfigurationChanged(e){(ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle"))&&(this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.PullRequestDateFormatting.reset()),ne.D.changed(e,"advanced.abbreviatedShaLength")&&this.container.CommitShaFormatting.reset(),ne.D.changed(e,"views.contributors.showAllBranches")&&this.resetCaches("contributors"),null!=e&&ne.D.changed(e,"integrations.enabled")&&this.updateContext()}registerCommands(){return[(0,ot.xR)("gitlens.plus.resetRepositoryAccess",(()=>this.clearAllRepoVisibilityCaches())),(0,ot.xR)("gitlens.plus.refreshRepositoryAccess",(()=>this.clearAllOpenRepoVisibilityCaches()))]}onSubscriptionChanged(e){this._accessCache.clear(),this._subscription=e.current}onWindowStateChanged(e){e.focused?this._repositories.forEach((e=>e.resume())):this._repositories.forEach((e=>e.suspend()))}onWorkspaceFoldersChanged(e){if(this.container.telemetry.enabled){const e=r.workspace.workspaceFolders?.map((e=>e.uri.scheme));this.container.telemetry.setGlobalAttributes({"folders.count":e?.length??0,"folders.schemes":null!=e?(0,st.h8)(e,", "):""})}if(e.added.length&&this.discoverRepositories(e.added),e.removed.length){const t=[];for(const i of e.removed){const e=this._repositories.getClosest(i.uri);null!=e&&(this._repositories.remove(e.uri,!1),t.push(e))}t.length&&(this.updateContext(),queueMicrotask((()=>{this.fireRepositoriesChanged([],t),t.forEach((e=>e.dispose()))})))}}get hasProviders(){return 0!==this._providers.size}get registeredProviders(){return[...(0,ae.UI)(this._providers.values(),(e=>({...e.descriptor})))]}get openRepositories(){if(0===this.repositoryCount)return ut;const e=[...(0,ae.hX)(this.repositories,(e=>!e.closed))];return 0===e.length?e:b._j.sort(e)}get openRepositoryCount(){return 0===this.repositoryCount?0:(0,ae.QX)(this.repositories,(e=>!e.closed))}get repositories(){return this._repositories.values()}get repositoryCount(){return this._repositories.count}get highlander(){return 1===this.repositoryCount?(0,ae.Ps)(this._repositories.values()):void 0}register(e,t){if(e!==t.descriptor.id)throw new Error(`Id '${e}' must match provider id '${t.descriptor.id}'`);if(this._providers.has(e))throw new Error(`Provider '${e}' has already been registered`);this._providers.set(e,t);for(const e of t.supportedSchemes)this.supportedSchemes.add(e);const i=[],n=t.openRepositoryInitWatcher?.();null!=n&&i.push(n,n.onDidCreate((e=>{const t=r.workspace.getWorkspaceFolder(e);null!=t&&this.discoverRepositories([t],{force:!0})})));const s=r.Disposable.from(t,...i,t.onDidChange((()=>{const{workspaceFolders:e}=r.workspace;e?.length&&this.discoverRepositories(e,{force:!0})})),t.onDidChangeRepository((async e=>{if(e.changed(b.I6.Remotes,b.I6.RemoteProviders,b.du.Any)&&this._bestRemotesCache.clear(),e.changed(b.I6.Closed,b.du.Any)?(this.updateContext(),queueMicrotask((()=>this.fireRepositoriesChanged([],[e.repository])))):e.changed(b.I6.Opened,b.du.Any)&&(this.updateContext(),queueMicrotask((()=>this.fireRepositoriesChanged([e.repository],[])))),e.changed(b.I6.Remotes,b.du.Any)){const i=await t.getRemotes(e.repository.path),r=this.getVisibilityInfoFromCache(e.repository.path);null!=r&&this.checkVisibilityCachedRemotes(e.repository.path,r,i)}this._onDidChangeRepository.fire(e)})),t.onDidCloseRepository((e=>{const t=this._repositories.get(e.uri);null!=t&&(t.closed=!0)})),t.onDidOpenRepository((e=>{const t=this._repositories.get(e.uri);null!=t?t.closed=!1:this.getOrOpenRepository(e.uri)})));return this.fireProvidersChanged([t]),this._initializing||this.onWorkspaceFoldersChanged({added:r.workspace.workspaceFolders??[],removed:[]}),{dispose:()=>{s.dispose(),this._providers.delete(e);const i=[];for(const t of[...this._repositories.values()])t?.provider.id===e&&(this._repositories.remove(t.uri,!1),i.push(t));const{deactivating:r}=this.container;r||this.updateContext(),i.length&&queueMicrotask((()=>{r||this.fireRepositoriesChanged([],i),i.forEach((e=>e.dispose()))})),r||this.fireProvidersChanged([],[t])}}}_initializing=!0;async registrationComplete(){const e=(0,le.UH)();this._initializing=!1;let{workspaceFolders:t}=r.workspace;t?.length?(await this.discoverRepositories(t),0===this.repositoryCount&&ze.$L&&setTimeout((()=>{({workspaceFolders:t}=r.workspace),t?.length&&this.discoverRepositories(t,{force:!0})}),1e3)):this.updateContext();const i=ne.D.getAny("git.autoRepositoryDetection");this.container.telemetry.enabled&&queueMicrotask((()=>this.container.telemetry.sendEvent("providers/registrationComplete",{"config.git.autoRepositoryDetection":i}))),(0,le.lH)(e,` ${s.NE.Dot} workspaceFolders=${t?.length}, git.autoRepositoryDetection=${i}`)}getOpenProviders(){return[...this.getOpenRepositoriesByProvider().keys()].map((e=>this._providers.get(e)))}getOpenRepositories(e){return(0,ae.hX)(this.repositories,(t=>!t.closed&&(null==e||e===t.provider.id)))}getOpenRepositoriesByProvider(){const e=[...(0,ae.hX)(this.repositories,(e=>!e.closed))];return 0===e.length?new Map:(0,st.XI)(e,(e=>e.provider.id))}hasOpenRepositories(e){return(0,ae.G)(this.repositories,(t=>!t.closed&&(null==e||e===t.provider.id)))}_discoveredWorkspaceFolders=new Map;_isDiscoveringRepositories;get isDiscoveringRepositories(){return this._isDiscoveringRepositories}async discoverRepositories(e,t){null!=this._isDiscoveringRepositories&&(await this._isDiscoveringRepositories,this._isDiscoveringRepositories=void 0);const i=(0,he.PQ)();this._isDiscoveringRepositories=i.promise;try{const i=[];for(const r of e){if(!t?.force&&this._discoveredWorkspaceFolders.has(r))continue;const e=this.discoverRepositoriesCore(r);i.push(e),this._discoveredWorkspaceFolders.set(r,e)}if(0===i.length)return;const r=await Promise.allSettled(i),n=(0,ae.VS)((0,ae.hX)(r,(e=>"fulfilled"===e.status)),(e=>e.value)),s=[];for(const e of n)this._repositories.add(e),e.closed||s.push(e);this.updateContext(),s.length&&queueMicrotask((()=>this.fireRepositoriesChanged(s)))}finally{i.fulfill()}}async discoverRepositoriesCore(e){const{provider:t}=this.getProvider(e.uri);try{return await t.discoverRepositories(e.uri)}catch(i){return this._discoveredWorkspaceFolders.delete(e),S.Yd.error(i,`${t.descriptor.name} Provider(${t.descriptor.id}) failed discovering repositories in ${e.uri.toString(!0)}`),[]}}async findRepositories(e,t){const{provider:i}=this.getProvider(e);return i.discoverRepositories(e,t)}_subscription;async getSubscription(){return this._subscription??(this._subscription=await this.container.subscription.getSubscription())}_accessCache=new Map;async access(e,t){if(null==t){let i=this._accessCache.get(void 0);return null==i&&(i=this.accessCore(e,t),this._accessCache.set(void 0,i)),i}const{path:i}=this.getProvider(t),r=i;let n=this._accessCache.get(r);return null==n&&(n=this.accessCore(e,t),this._accessCache.set(r,n)),n}async accessCore(e,t){const i=await this.getSubscription();this.container.telemetry.enabled&&queueMicrotask((()=>{this.visibility()}));const r=i.plan.effective.id;if((0,nt.aG)(r))return{allowed:!1!==i.account?.verified,subscription:{current:i}};function n(e,t=!1){const{path:r}=this.getProvider(e);let n=t?void 0:this._accessCache.get(r);return null==n&&(n=this.visibility(e).then((e=>e===h.q4.Private?{allowed:!1,subscription:{current:i,required:nt.Cx.Pro},visibility:e}:{allowed:!0,subscription:{current:i},visibility:e}),(()=>({allowed:!0,subscription:{current:i}}))),this._accessCache.set(r,n)),n}if(null==t){const e=this.openRepositories;if(0===e.length)return{allowed:!1,subscription:{current:i}};if(1===e.length)return n.call(this,e[0].path);switch(await this.visibility()){case"private":return{allowed:!1,subscription:{current:i,required:nt.Cx.Pro},visibility:h.q4.Private};case"mixed":return{allowed:"mixed",subscription:{current:i,required:nt.Cx.Pro}};default:return{allowed:!0,subscription:{current:i},visibility:h.q4.Public}}}return n.call(this,t,!0)}async ensureAccess(e,t){const{allowed:i,subscription:r}=await this.access(e,t);if(!1===i)throw new a.$y(r.current,r.required)}supports(e,t){const{provider:i}=this.getProvider(e);return i.supports(t)}_reposVisibilityCache;_repoVisibilityCache;ensureRepoVisibilityCache(){if(null==this._repoVisibilityCache){const e=this.container.storage.get("repoVisibility")?.map((([e,t])=>[e,{visibility:t.visibility,timestamp:t.timestamp,remotesHash:t.remotesHash}]));this._repoVisibilityCache=new Map(e)}}clearRepoVisibilityCache(e){if(null==e)this._repoVisibilityCache=void 0,this.container.storage.delete("repoVisibility");else{e?.forEach((e=>this._repoVisibilityCache?.delete(e)));const t=Array.from(this._repoVisibilityCache?.entries()??[]);0===t.length?this.container.storage.delete("repoVisibility"):this.container.storage.store("repoVisibility",t)}}getVisibilityInfoFromCache(e){this.ensureRepoVisibilityCache();const t=this._repoVisibilityCache?.get(e);if(null==t)return;if(!(Date.now()-t.timestamp>2592e6))return t;this.clearRepoVisibilityCache([e])}checkVisibilityCachedRemotes(e,t,i){if(null==t)return!0;if(t.visibility===h.q4.Public){if(0==i.length||!i.some((e=>e.urlKey===t.remotesHash)))return this.clearRepoVisibilityCache([e]),!1}else if(t.visibility===h.q4.Private){if((0,y.Ym)(i)!==t.remotesHash)return this.clearRepoVisibilityCache([e]),!1}return!0}updateVisibilityCache(e,t){this.ensureRepoVisibilityCache(),this._repoVisibilityCache?.set(e,t),this.container.storage.store("repoVisibility",Array.from(this._repoVisibilityCache.entries()))}clearAllRepoVisibilityCaches(){this.clearRepoVisibilityCache()}clearAllOpenRepoVisibilityCaches(){const e=this.openRepositories.map((e=>this.getProvider(e.path).path));this.clearRepoVisibilityCache(e)}async visibility(e){if(null==e){let e=this._reposVisibilityCache;return null==e&&(e=await this.visibilityCore(),this.container.telemetry.enabled&&(this.container.telemetry.setGlobalAttribute("repositories.visibility",e),this.container.telemetry.sendEvent("repositories/visibility")),this._reposVisibilityCache=e),e}const{path:t}=this.getProvider(e);let i=this.getVisibilityInfoFromCache(t)?.visibility;return null==i&&(i=await this.visibilityCore(e),this.container.telemetry.enabled&&queueMicrotask((()=>{const t=this.getRepository(e);this.container.telemetry.sendEvent("repository/visibility",{"repository.visibility":i,"repository.id":t?.idHash,"repository.scheme":t?.uri.scheme,"repository.closed":t?.closed,"repository.folder.scheme":t?.folder?.uri.scheme,"repository.provider.id":t?.provider.id})}))),i}async visibilityCore(e){async function t(e){const{provider:t,path:i}=this.getProvider(e),r=await t.getRemotes(i,{sort:!0}),n=this.getVisibilityInfoFromCache(i);if(null==n||!this.checkVisibilityCachedRemotes(i,n,r)){const[e,r]=await t.visibility(i);return e!==h.q4.Local&&this.updateVisibilityCache(i,{visibility:e,timestamp:Date.now(),remotesHash:r}),e}return n.visibility}if(null==e){const e=this.openRepositories;if(0===e.length)return"private";if(1===e.length)return t.call(this,e[0].path);let i=!1,r=!1,n=!1;for await(const s of(0,he.rX)(e.map((e=>t.call(this,e.path)))))if("fulfilled"===s.status)if(s.value===h.q4.Public){if(n||r)return"mixed";i=!0}else if(s.value===h.q4.Local){if(i||r)return"mixed";n=!0}else if(s.value===h.q4.Private){if(i||n)return"mixed";r=!0}return i?"public":n?"local":"private"}return t.call(this,e)}_context={enabled:!1,disabled:!1};async setEnabledContext(e){let t=!e;if(!e&&this._initializing&&(t=!this.container.storage.getWorkspace("assumeRepositoriesOnStartup")),this.container.telemetry.setGlobalAttribute("enabled",e),this._context.enabled===e&&this._context.disabled===t)return;const i=[];this._context.enabled!==e&&(this._context.enabled=e,i.push((0,se.v)("gitlens:enabled",e))),this._context.disabled!==t&&(this._context.disabled=t,i.push((0,se.v)("gitlens:disabled",t))),await Promise.allSettled(i),this._initializing||this.container.storage.storeWorkspace("assumeRepositoriesOnStartup",e).catch()}_sendProviderContextTelemetryDebounced;updateContext(){if(this.container.deactivating)return;const e=this.openRepositoryCount,t=0!==e;this.setEnabledContext(t),this._initializing||(this.container.telemetry.setGlobalAttributes({enabled:t,"repositories.count":e}),t&&(async function(){const e=ne.D.get("integrations.enabled"),i=this.container.telemetry.enabled,r=new Set;let n=!1,s=!1,o=!1;if(t)for(const t of this._repositories.values()){if(i){const e=await t.getRemotes();for(const t of e)r.add(t.provider?.id??"unknown")}if(!o&&e&&(o=await t.hasRichRemote(!0),o&&(s=!0,n=!0)),!s&&e&&(s=await t.hasRichRemote(),s&&(n=!0)),n||(n=await t.hasRemotes()),n&&(s&&o||!e))break}i&&(this.container.telemetry.setGlobalAttributes({"repositories.hasRemotes":n,"repositories.hasRichRemotes":s,"repositories.hasConnectedRemotes":o,"repositories.remoteProviders":(0,ae.v_)(r,",")}),null==this._sendProviderContextTelemetryDebounced&&(this._sendProviderContextTelemetryDebounced=(0,pe.Ds)((()=>this.container.telemetry.sendEvent("providers/context")),2500)),this._sendProviderContextTelemetryDebounced()),await Promise.allSettled([(0,se.v)("gitlens:hasRemotes",n),(0,se.v)("gitlens:hasRichRemotes",s),(0,se.v)("gitlens:hasConnectedRemotes",o)])}.call(this),this._providers.forEach((e=>e.updateContext?.()))))}getProvider(e){if(null==e||"string"!=typeof e&&!this.supportedSchemes.has(e.scheme))throw new a.MO(e);let t;"string"==typeof e?t=(0,ce.UG)(e)??s.sN.File:({scheme:t}=e);const i=new Set;for(const r of this._providers.values()){const n=r.canHandlePathOrUri(t,e);null!=n&&i.add({provider:r,path:n})}if(0===i.size)throw new a.MO(e);if(i.size>1)for(const e of i)if(this.hasOpenRepositories(e.provider.descriptor.id))return e;return(0,ae.Ps)(i)}getAbsoluteUri(e,t){if(null==t)return"string"==typeof e?(0,ce.tE)(e)?r.Uri.parse(e,!0):r.Uri.file(e):e;if("string"!=typeof t&&"string"==typeof e){const i=(0,ce.AH)(e);if(!(0,ce.YP)(i))return r.Uri.joinPath(t,i)}const{provider:i}=this.getProvider(t);return i.getAbsoluteUri(e,t)}async getBestRevisionUri(e,t,i){if(null==e||i===m.Ii)return;const{provider:r,path:n}=this.getProvider(e);return r.getBestRevisionUri(n,r.getRelativePath(t,n),i)}getRelativePath(e,t){const{provider:i}=this.getProvider(e instanceof r.Uri?e:t);return i.getRelativePath(e,t)}getRevisionUri(e,t,i){let r,n;"string"==typeof e?(n=e,r="string"==typeof t?t:t?.originalPath??t?.path??""):(n=e.sha,i=e.repoPath,r=(0,ce.M)(e));const{provider:s,path:o}=this.getProvider(i);return s.getRevisionUri(o,s.getRelativePath(r,o),n)}getWorkingUri(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getWorkingUri(r,t)}addRemote(e,t,i,r){const{provider:n,path:s}=this.getProvider(e);return n.addRemote(s,t,i,r)}pruneRemote(e,t){const{provider:i,path:r}=this.getProvider(e);return i.pruneRemote(r,t)}removeRemote(e,t){const{provider:i,path:r}=this.getProvider(e);return i.removeRemote(r,t)}applyChangesToWorkingFile(e,t,i){const{provider:r}=this.getProvider(e);return r.applyChangesToWorkingFile(e,t,i)}checkout(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.checkout(n,t,i)}async clone(e,t){const{provider:i}=this.getProvider(t);return i.clone?.(e,t)}resetCaches(...e){(0===e.length||e.includes("providers"))&&this._bestRemotesCache.clear(),this.container.events.fire("git:cache:reset",{caches:e})}excludeIgnoredUris(e,t){const{provider:i,path:r}=this.getProvider(e);return i.excludeIgnoredUris(r,t)}fetch(e,t){const{provider:i,path:r}=this.getProvider(e);return i.fetch(r,t)}async fetchAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Fetching ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.fetch({progress:!1,...t})))))):await e[0].fetch(t))}pull(e,t){const{provider:i,path:r}=this.getProvider(e);return i.pull(r,t)}async pullAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Pulling ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.pull({progress:!1,...t})))))):await e[0].pull(t))}push(e,t){const{provider:i,path:r}=this.getProvider(e);return i.push(r,t)}async pushAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Pushing ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.push({progress:!1,...t})))))):await e[0].push(t))}getAheadBehindCommitCount(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getAheadBehindCommitCount(r,t)}async getBlame(e,t){const{provider:i}=this.getProvider(e);return i.getBlame(e,t)}async getBlameContents(e,t){const{provider:i}=this.getProvider(e);return i.getBlameContents(e,t)}async getBlameForLine(e,t,i,r){const{provider:n}=this.getProvider(e);return n.getBlameForLine(e,t,i,r)}async getBlameForLineContents(e,t,i,r){const{provider:n}=this.getProvider(e);return n.getBlameForLineContents(e,t,i,r)}async getBlameForRange(e,t){const{provider:i}=this.getProvider(e);return i.getBlameForRange(e,t)}async getBlameForRangeContents(e,t,i){const{provider:r}=this.getProvider(e);return r.getBlameForRangeContents(e,t,i)}getBlameRange(e,t,i){const{provider:r}=this.getProvider(t);return r.getBlameRange(e,t,i)}async getBranch(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getBranch(i)}async getBranchAheadRange(e){if(e.state.ahead>0)return(0,v.oI)(e.upstream?.name,e.ref);if(null==e.upstream){const{values:t}=await this.getBranches(e.repoPath,{filter:e=>pt.has(e.name)});if(t.length>0){let i;for(const e of t){const t=pt.get(e.name);if((null==i||i.weight<t)&&(i={weight:t,branch:e}),100===i.weight)break}const r=i.branch.upstream?.name??i.branch.ref;if(r!==e.ref)return(0,v.oI)(r,e.ref)}}}async getBranches(e,t){if(null==e)return{values:[]};const{provider:i,path:r}=this.getProvider(e);return i.getBranches(r,t)}async getBranchesAndTagsTipsFn(e,t){const[i,r]=await Promise.allSettled([this.getBranches(e),this.getTags(e)]),n=(0,he.Sb)(i)?.values??[],o=(0,he.Sb)(r)?.values??[],a=(0,st.Qy)(n.concat(o),(e=>e.sha),(e=>{if(t){if(e.name===t)return;if("branch"===e.refType&&e.getNameWithoutRemote()===t)return{name:e.name,compactName:e.getRemoteName(),type:e.refType}}return{name:e.name,compactName:void 0,type:e.refType}}));return(e,t)=>{const i=a.get(e);if(null!=i&&0!==i.length){if(!t?.compact)return i.map((e=>`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.name}`)).join(", ");if(i.length>1){const[e]=i;return`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.compactName??e.name}, ${s.NE.Ellipsis}`}return i.map((e=>`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.compactName??e.name}`)).join(", ")}}}getChangedFilesCount(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getChangedFilesCount(r,t)}async getCommit(e,t){const{provider:i,path:r}=this.getProvider(e);if(t===m.CL||t===m.pw){const i=new Date,n=await this.getCurrentUser(e);return new p.aM(this.container,r,t,new p._j("You",n?.email??void 0,i),new p._j("You",n?.email??void 0,i),"Uncommitted changes",[],"Uncommitted changes",void 0,void 0,[])}return i.getCommit(r,t)}getCommitBranches(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.getCommitBranches(n,t,i)}getCommitCount(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getCommitCount(r,t)}async getCommitForFile(e,t,i){if(null==e)return;const{provider:r,path:n}=this.getProvider(e);return r.getCommitForFile(n,t,i)}getCommitsForGraph(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.getCommitsForGraph(n,t,i)}async getConfig(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getConfig?.(r,t)}async setConfig(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.setConfig?.(n,t,i)}async getContributors(e,t){if(null==e)return[];const{provider:i,path:r}=this.getProvider(e);return i.getContributors(r,t)}getCurrentUser(e){const{provider:t,path:i}=this.getProvider(e);return t.getCurrentUser(i)}async getDefaultBranchName(e,t){if(null==e)return;const{provider:i,path:r}=this.getProvider(e);return i.getDefaultBranchName(r,t)}async getDiff(e,t,i,r){const{provider:n,path:s}=this.getProvider(e);return n.getDiff?.(s,t,i,r)}getDiffForFile(e,t,i){const{provider:r}=this.getProvider(e);return r.getDiffForFile(e,t,i)}getDiffForFileContents(e,t,i){const{provider:r}=this.getProvider(e);return r.getDiffForFileContents(e,t,i)}getDiffForLine(e,t,i,r){const{provider:n}=this.getProvider(e);return n.getDiffForLine(e,t,i,r)}getDiffStatus(e,t,i,r){const{provider:n,path:s}=this.getProvider(e);return n.getDiffStatus(s,t,i,r)}async getFileStatusForCommit(e,t,i){if(i===m.Ii||(0,v.l3)(i))return;const{provider:r,path:n}=this.getProvider(e);return r.getFileStatusForCommit(n,t,i)}getGitDir(e){const{provider:t,path:i}=this.getProvider(e);return Promise.resolve(t.getGitDir?.(i))}getLastFetchedTimestamp(e){const{provider:t,path:i}=this.getProvider(e);return t.getLastFetchedTimestamp(i)}async getLog(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getLog(r,t)}async getLogRefsOnly(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getLogRefsOnly(r,t)}async getLogForFile(e,t,i){if(null==e)return;const{provider:r,path:n}=this.getProvider(e);return r.getLogForFile(n,t,i)}async getMergeBase(e,t,i,r){const{provider:n,path:s}=this.getProvider(e);return n.getMergeBase(s,t,i,r)}async getMergeStatus(e){const{provider:t,path:i}=this.getProvider(e);return t.getMergeStatus(i)}async getRebaseStatus(e){const{provider:t,path:i}=this.getProvider(e);return t.getRebaseStatus(i)}getNextComparisonUris(e,t,i,r=0){if(!i)return Promise.resolve(void 0);const{provider:n,path:s}=this.getProvider(e);return n.getNextComparisonUris(s,t,i,r)}async getOldestUnpushedRefForFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getOldestUnpushedRefForFile(r,t)}getPreviousComparisonUris(e,t,i,r=0,n=!1){if(i===m.Ii)return Promise.resolve(void 0);const{provider:s,path:o}=this.getProvider(e);return s.getPreviousComparisonUris(o,t,i,r,n)}getPreviousComparisonUrisForLine(e,t,i,r,n=0){if(r===m.Ii)return Promise.resolve(void 0);const{provider:s,path:o}=this.getProvider(e);return s.getPreviousComparisonUrisForLine(o,t,i,r,n)}async getPullRequestForBranch(e,t,i){let r,n;if(y.ss.is(t)){if(({provider:r}=t),!r?.hasRichIntegration())return}else r=t;null!=i&&({timeout:n,...i}=i);let s=r.getPullRequestForBranch(e,i);if(null==s||!(0,he.tI)(s))return s;null!=n&&n>0&&(s=(0,he.HO)(s,n));try{return await s}catch(e){if(e instanceof he.PK)throw e;return}}async getPullRequestForCommit(e,t,i){if((0,v.l3)(e))return;let r;if(y.ss.is(t)){if(({provider:r}=t),!r?.hasRichIntegration())return}else r=t;let n=r.getPullRequestForCommit(e);if(null==n||!(0,he.tI)(n))return n;null!=i?.timeout&&i.timeout>0&&(n=(0,he.HO)(n,i.timeout));try{return await n}catch(e){if(e instanceof he.PK)throw e;return}}async getMyPullRequests(e,t){let i,r;if(y.ss.is(e)){if(({provider:i}=e),!i?.hasRichIntegration())return}else i=e;null!=t&&({timeout:r,...t}=t);let n=i.searchMyPullRequests();if(null==n||!(0,he.tI)(n))return n;null!=r&&r>0&&(n=(0,he.HO)(n,r));try{return await n}catch(e){if(e instanceof he.PK)throw e;return}}async getMyIssues(e,t){let i,r;if(y.ss.is(e)){if(({provider:i}=e),!i?.hasRichIntegration())return}else i=e;null!=t&&({timeout:r,...t}=t);let n=i.searchMyIssues();if(null==n||!(0,he.tI)(n))return n;null!=r&&r>0&&(n=(0,he.HO)(n,r));try{return await n}catch(e){if(e instanceof he.PK)throw e;return}}async getIncomingActivity(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getIncomingActivity(r,t)}async getBestRemoteWithProvider(e){if(null==e)return;let t,i;if(Array.isArray(e)){if(0===e.length)return;t=e,i=e[0].repoPath}else i=e;"string"==typeof i&&(i=this.getAbsoluteUri(i));const r=(0,rt.YW)(i);let n=this._bestRemotesCache.get(r);if(void 0!==n)return n??void 0;if(t=(t??await this.getRemotesWithProviders(i)).filter((e=>null!=e.provider)),0!==t.length){if(1===t.length)n=t[0];else{const e=new Map([["upstream",15],["origin",10]]),i=await this.getBranch(t[0].repoPath),r=i?.getRemoteName();let s;null!=r&&e.set(r,100);let o=0;for(const i of t){if(i.default){s=i;break}let t=e.get(i.name)??-1;const r=i.provider;if(r.hasRichIntegration()&&r.maybeConnected){const e=await r.getRepositoryMetadata();!1===e?.isFork&&(t+=101)}t>o&&(s=i,o=t)}n=s??null}return this._bestRemotesCache.set(r,n),n??void 0}}async getBestRemoteWithRichProvider(e,t){if(null==e)return;let i,r;if(Array.isArray(e)){if(0===e.length)return;i=e,r=e[0].repoPath}else r=e;"string"==typeof r&&(r=this.getAbsoluteUri(r));const n=(0,rt.YW)(r);let s=this._bestRemotesCache.get(`rich+connected|${n}`);if(null!=s)return s;if(null===s&&!t?.includeDisconnected)return;if(t?.includeDisconnected&&(s=this._bestRemotesCache.get(`rich|${n}`),void 0!==s))return s??void 0;const o=await(null!=i?this.getBestRemoteWithProvider(i):this.getBestRemoteWithProvider(r));if(!o?.hasRichProvider())return this._bestRemotesCache.set(`rich|${n}`,null),void this._bestRemotesCache.set(`rich+connected|${n}`,null);const{provider:a}=o;if(a.maybeConnected??await a.isConnected())this._bestRemotesCache.set(`rich|${n}`,o),this._bestRemotesCache.set(`rich+connected|${n}`,o);else if(this._bestRemotesCache.set(`rich|${n}`,o),this._bestRemotesCache.set(`rich+connected|${n}`,null),!t?.includeDisconnected)return;return o}async getRemotes(e,t){if(null==e)return[];const{provider:i,path:r}=this.getProvider(e);return i.getRemotes(r,t)}async getRemotesWithProviders(e,t){if(null==e)return[];const i=this.container.git.getRepository(e);return(await(null!=i?i.getRemotes(t):this.getRemotes(e,t))).filter((e=>null!=e.provider))}getBestRepository(e,t){const i=this.repositoryCount;if(0!==i){if(1===i)return this.highlander;if(null!=e&&e instanceof r.Uri){const t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??r.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??this.highlander}}getBestRepositoryOrFirst(e,t){const i=this.repositoryCount;if(0!==i){if(1===i)return(0,ae.Ps)(this._repositories.values());if(null!=e&&e instanceof r.Uri){const t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??r.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??(0,ae.Ps)(this._repositories.values())}}async getOrOpenRepository(e,t){const i=(0,le.UH)(),n=(0,ce.M)(e);let s,o;s=this.getRepository(e),null==s&&null!=this._isDiscoveringRepositories&&(await this._isDiscoveringRepositories,s=this.getRepository(e));if(t?.detectNested??ne.D.get("detectNestedRepositories",e)){if(!t?.force&&this._visitedPaths.has(n))return s;if(((await r.workspace.fs.stat(e)).type&r.FileType.Directory)!==r.FileType.Directory&&(e=r.Uri.joinPath(e,".."),!t?.force&&this._visitedPaths.has((0,ce.M)(e))))return s;o=!0}else if(null!=s)return s;const a=(0,rt.YW)(e);let l=this._pendingRepositories.get(a);if(null==l){async function c(){const{provider:r}=this.getProvider(e),l=await r.findRepositoryUri(e,o);if(this._visitedPaths.set(n),null==l)return;let c;if(0!==this._repositories.count){if(s=this._repositories.get(l),null!=s)return s;c=this._repositories.getClosest(r.getAbsoluteUri(e,l))}const h=ne.D.getAny("git.autoRepositoryDetection")??!0,u=t?.closeOnOpen??(!0!==h&&"openEditors"!==h);S.Yd.log(i,`Repository found in '${l.toString(!0)}'`);const d=r.openRepository(c?.folder,l,!1,void 0,u),p=[];for(const e of d)this._repositories.add(e),e.closed||p.push(e);return this._pendingRepositories.delete(a),this.updateContext(),p.length&&queueMicrotask((()=>this.fireRepositoriesChanged(p))),s=1===d.length?d[0]:this.getRepository(e),s}l=c.call(this),this._pendingRepositories.set(a,l)}return l}async getOrOpenRepositoryForEditor(e){return null==(e=e??r.window.activeTextEditor)?this.highlander:this.getOrOpenRepository(e.document.uri)}getRepository(e){if(0!==this.repositoryCount&&null!=e){if("string"==typeof e){if(!e)return;return this._repositories.getClosest(this.getAbsoluteUri(e))}return this._repositories.getClosest(e)}}async getLocalInfoFromRemoteUri(e,t){for(const i of this.openRepositories)for(const r of await i.getRemotes()){const n=await(r?.provider?.getLocalInfoFromRemoteUri(i,e,t));if(null!=n)return n}}async getStash(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getStash(i)}async getStatusForFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getStatusForFile(r,t)}async getStatusForFiles(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getStatusForFiles(r,t)}async getStatusForRepo(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getStatusForRepo(i)}async getTags(e,t){if(null==e)return{values:[]};const{provider:i,path:r}=this.getProvider(e);return i.getTags(r,t)}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;const{provider:r,path:n}=this.getProvider(e);return r.getTreeEntryForRevision(n,r.getRelativePath(t,n),i)}async getTreeForRevision(e,t){if(null==e)return[];const{provider:i,path:r}=this.getProvider(e);return i.getTreeForRevision(r,t)}getRevisionContent(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.getRevisionContent(n,t,i)}async getUniqueRepositoryId(e){const{provider:t,path:i}=this.getProvider(e),r=await t.getUniqueRepositoryId(i);return null!=r?r:"-"}async hasBranchOrTag(e,t){if(null==e)return!1;const{provider:i,path:r}=this.getProvider(e);return i.hasBranchOrTag(r,t)}async hasCommitBeenPushed(e,t){if(null==e)return!1;const{provider:i,path:r}=this.getProvider(e);return i.hasCommitBeenPushed(r,t)}async hasRemotes(e){if(null==e)return!1;const t=this.getRepository(e);return null!=t&&t.hasRemotes()}async hasTrackingBranch(e){if(null==e)return!1;const t=this.getRepository(e);return null!=t&&t.hasUpstreamBranch()}hasUnsafeRepositories(){for(const e of this._providers.values())if(e.hasUnsafeRepositories?.())return!0;return!1}isRepositoryForEditor(e,t){return null!=(t=t??r.window.activeTextEditor)&&e===this.getRepository(t.document.uri)}isTrackable(e){if(!this.supportedSchemes.has(e.scheme))return!1;const{provider:t}=this.getProvider(e);return t.isTrackable(e)}async isTracked(e){if(!this.supportedSchemes.has(e.scheme))return!1;const{provider:t}=this.getProvider(e);return t.isTracked(e)}async getDiffTool(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getDiffTool(i)}async openDiffTool(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.openDiffTool(n,t,i)}async openDirectoryCompare(e,t,i,r){const{provider:n,path:s}=this.getProvider(e);return n.openDirectoryCompare(s,t,i,r)}async resolveReference(e,t,i,r){if(null!=i&&(0,v.j$)(t)&&(t="HEAD"),!t||t===m.Ii||null==i&&(0,v.D3)(t)||null!=i&&(0,v.l3)(t))return t;const{provider:n,path:s}=this.getProvider(e);return n.resolveReference(s,t,i,r)}async richSearchCommits(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.richSearchCommits(n,t,i)}searchCommits(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.searchCommits(n,t,i)}async runGitCommandViaTerminal(e,t,i,r){const{provider:n,path:s}=this.getProvider(e);return n.runGitCommandViaTerminal?.(s,t,i,r)}validateBranchOrTagName(e,t){const{provider:i,path:r}=this.getProvider(e);return i.validateBranchOrTagName(r,t)}async validateReference(e,t){if(null==t||0===t.length)return!1;if(t===m.Ii||(0,v.l3)(t))return!0;const{provider:i,path:r}=this.getProvider(e);return i.validateReference(r,t)}stageFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.stageFile(r,t)}stageDirectory(e,t){const{provider:i,path:r}=this.getProvider(e);return i.stageDirectory(r,t)}unStageFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.unStageFile(r,t)}unStageDirectory(e,t){const{provider:i,path:r}=this.getProvider(e);return i.unStageDirectory(r,t)}async stashApply(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.stashApply?.(n,t,i)}async stashDelete(e,t,i){const{provider:r,path:n}=this.getProvider(e);return r.stashDelete?.(n,t,i)}async stashRename(e,t,i,r,n){const{provider:s,path:o}=this.getProvider(e);return s.stashRename?.(o,t,i,r,n)}async stashSave(e,t,i,r){const{provider:n,path:s}=this.getProvider(e);return n.stashSave?.(s,t,i,r)}createWorktree(e,t,i){const{provider:r,path:n}=this.getProvider(e);return Promise.resolve(r.createWorktree?.(n,t,i))}async getWorktree(e,t){const{provider:i,path:r}=this.getProvider(e);return(await(i.getWorktrees?.(r))??[]).find(t)}async getWorktrees(e){const{provider:t,path:i}=this.getProvider(e);return await(t.getWorktrees?.(i))??[]}async getWorktreesDefaultUri(e){const{provider:t,path:i}=this.getProvider(e);let n=await(t.getWorktreesDefaultUri?.(i));return null!=n||(n=this.getRepository(i)?.uri,null!=n&&(n=r.Uri.joinPath(n,".."))),n}deleteWorktree(e,t,i){const{provider:r,path:n}=this.getProvider(e);return Promise.resolve(r.deleteWorktree?.(n,t,i))}async getOpenScmRepositories(){const e=await Promise.allSettled([...this._providers.values()].map((e=>e.getOpenScmRepositories())));return[...(0,ae.VS)((0,ae.hX)(e,(e=>"fulfilled"===e.status)),(e=>e.value))]}getScmRepository(e){const{provider:t,path:i}=this.getProvider(e);return t.getScmRepository(i)}getOrOpenScmRepository(e){const{provider:t,path:i}=this.getProvider(e);return t.getOrOpenScmRepository(i)}}ht([(0,H.fF)()],GitProviderService.prototype,"onSubscriptionChanged",1),ht([(0,H.fF)({args:{0:e=>`focused=${e.focused}`}})],GitProviderService.prototype,"onWindowStateChanged",1),ht([(0,H.fF)({args:{0:e=>`added=${e.added.length}, removed=${e.removed.length}`},singleLine:!0})],GitProviderService.prototype,"onWorkspaceFoldersChanged",1),ht([(0,H.cM)({args:{1:!1},singleLine:!0})],GitProviderService.prototype,"register",1),ht([(0,H.cM)({singleLine:!0})],GitProviderService.prototype,"registrationComplete",1),ht([(0,H.cM)({args:{0:e=>e.length}})],GitProviderService.prototype,"discoverRepositories",1),ht([(0,H.fF)({exit:!0})],GitProviderService.prototype,"discoverRepositoriesCore",1),ht([(0,H.cM)()],GitProviderService.prototype,"findRepositories",1),ht([(0,H.fF)({exit:!0})],GitProviderService.prototype,"access",1),ht([(0,H.fF)({exit:!0})],GitProviderService.prototype,"accessCore",1),ht([(0,H.fF)({exit:!0})],GitProviderService.prototype,"supports",1),ht([(0,H.fF)({exit:e=>`returned ${e?.visibility}`})],GitProviderService.prototype,"getVisibilityInfoFromCache",1),ht([(0,H.fF)()],GitProviderService.prototype,"clearAllRepoVisibilityCaches",1),ht([(0,H.fF)()],GitProviderService.prototype,"clearAllOpenRepoVisibilityCaches",1),ht([(0,H.fF)({exit:!0})],GitProviderService.prototype,"visibility",1),ht([(0,H.fF)({exit:!0})],GitProviderService.prototype,"visibilityCore",1),ht([(0,H.fF)()],GitProviderService.prototype,"setEnabledContext",1),ht([(0,H.cM)()],GitProviderService.prototype,"getBestRevisionUri",1),ht([(0,H.cM)()],GitProviderService.prototype,"getRevisionUri",1),ht([(0,H.cM)()],GitProviderService.prototype,"getWorkingUri",1),ht([(0,H.cM)()],GitProviderService.prototype,"addRemote",1),ht([(0,H.cM)()],GitProviderService.prototype,"pruneRemote",1),ht([(0,H.cM)()],GitProviderService.prototype,"removeRemote",1),ht([(0,H.cM)()],GitProviderService.prototype,"applyChangesToWorkingFile",1),ht([(0,H.cM)()],GitProviderService.prototype,"checkout",1),ht([(0,H.cM)()],GitProviderService.prototype,"clone",1),ht([(0,H.cM)({singleLine:!0})],GitProviderService.prototype,"resetCaches",1),ht([(0,H.cM)({args:{1:e=>e.length}})],GitProviderService.prototype,"excludeIgnoredUris",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"fetch",1),ht([(0,oe.H)(((e,t)=>`${null==e?"":e.map((e=>e.id)).join(",")}|${JSON.stringify(t)}`)),(0,H.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"fetchAll",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"pull",1),ht([(0,oe.H)(((e,t)=>`${null==e?"":e.map((e=>e.id)).join(",")}|${JSON.stringify(t)}`)),(0,H.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"pullAll",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"push",1),ht([(0,oe.H)((e=>`${null==e?"":e.map((e=>e.id)).join(",")}`)),(0,H.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"pushAll",1),ht([(0,H.cM)({args:{1:e=>e.join(",")}})],GitProviderService.prototype,"getAheadBehindCommitCount",1),ht([(0,H.cM)({args:{1:e=>e?.isDirty}})],GitProviderService.prototype,"getBlame",1),ht([(0,H.cM)({args:{1:"<contents>"}})],GitProviderService.prototype,"getBlameContents",1),ht([(0,H.cM)({args:{2:e=>e?.isDirty}})],GitProviderService.prototype,"getBlameForLine",1),ht([(0,H.cM)({args:{2:"<contents>"}})],GitProviderService.prototype,"getBlameForLineContents",1),ht([(0,H.cM)()],GitProviderService.prototype,"getBlameForRange",1),ht([(0,H.cM)({args:{2:"<contents>"}})],GitProviderService.prototype,"getBlameForRangeContents",1),ht([(0,H.cM)({args:{0:"<blame>"}})],GitProviderService.prototype,"getBlameRange",1),ht([(0,H.cM)()],GitProviderService.prototype,"getBranch",1),ht([(0,H.cM)({args:{0:e=>e.name}})],GitProviderService.prototype,"getBranchAheadRange",1),ht([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"getBranches",1),ht([(0,H.cM)()],GitProviderService.prototype,"getBranchesAndTagsTipsFn",1),ht([(0,H.cM)()],GitProviderService.prototype,"getChangedFilesCount",1),ht([(0,H.cM)()],GitProviderService.prototype,"getCommit",1),ht([(0,H.cM)()],GitProviderService.prototype,"getCommitBranches",1),ht([(0,H.cM)()],GitProviderService.prototype,"getCommitCount",1),ht([(0,H.cM)()],GitProviderService.prototype,"getCommitForFile",1),ht([(0,H.cM)()],GitProviderService.prototype,"getCommitsForGraph",1),ht([(0,H.cM)()],GitProviderService.prototype,"getConfig",1),ht([(0,H.cM)()],GitProviderService.prototype,"setConfig",1),ht([(0,H.cM)()],GitProviderService.prototype,"getContributors",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"getCurrentUser",1),ht([(0,H.cM)()],GitProviderService.prototype,"getDefaultBranchName",1),ht([(0,H.cM)()],GitProviderService.prototype,"getDiff",1),ht([(0,H.cM)()],GitProviderService.prototype,"getDiffForFile",1),ht([(0,H.cM)({args:{1:"<contents>"}})],GitProviderService.prototype,"getDiffForFileContents",1),ht([(0,H.cM)()],GitProviderService.prototype,"getDiffForLine",1),ht([(0,H.cM)()],GitProviderService.prototype,"getDiffStatus",1),ht([(0,H.cM)()],GitProviderService.prototype,"getFileStatusForCommit",1),ht([(0,H.fF)()],GitProviderService.prototype,"getGitDir",1),ht([(0,H.fF)()],GitProviderService.prototype,"getLastFetchedTimestamp",1),ht([(0,H.cM)()],GitProviderService.prototype,"getLog",1),ht([(0,H.cM)()],GitProviderService.prototype,"getLogRefsOnly",1),ht([(0,H.cM)()],GitProviderService.prototype,"getLogForFile",1),ht([(0,H.cM)()],GitProviderService.prototype,"getMergeBase",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"getMergeStatus",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"getRebaseStatus",1),ht([(0,H.cM)()],GitProviderService.prototype,"getNextComparisonUris",1),ht([(0,H.cM)()],GitProviderService.prototype,"getOldestUnpushedRefForFile",1),ht([(0,H.cM)()],GitProviderService.prototype,"getPreviousComparisonUris",1),ht([(0,H.cM)()],GitProviderService.prototype,"getPreviousComparisonUrisForLine",1),ht([(0,oe.H)(((e,t,i)=>{const r=y.ss.is(t)?t.provider:t;return`${e}${null!=r?`|${r.id}:${r.domain}/${r.path}`:""}|${JSON.stringify(i)}`})),(0,H.fF)({args:{1:e=>e.name}})],GitProviderService.prototype,"getPullRequestForBranch",1),ht([(0,oe.H)(((e,t,i)=>{const r=y.ss.is(t)?t.provider:t;return`${e}${null!=r?`|${r.id}:${r.domain}/${r.path}`:""}|${i?.timeout}`})),(0,H.fF)({args:{1:e=>e.name}})],GitProviderService.prototype,"getPullRequestForCommit",1),ht([(0,H.fF)({args:{0:e=>e.name}})],GitProviderService.prototype,"getMyPullRequests",1),ht([(0,H.fF)({args:{0:e=>e.name}})],GitProviderService.prototype,"getMyIssues",1),ht([(0,H.cM)()],GitProviderService.prototype,"getIncomingActivity",1),ht([(0,oe.H)((e=>`${null==e||"string"==typeof e?e:e instanceof r.Uri?e.toString():`${e.length}:${e[0]?.repoPath??""}`}`)),(0,H.cM)({args:{0:e=>Array.isArray(e)?e.map((e=>e.name)).join(","):e}})],GitProviderService.prototype,"getBestRemoteWithProvider",1),ht([(0,oe.H)(((e,t)=>`${null==e||"string"==typeof e?e:e instanceof r.Uri?e.toString():`${e.length}:${e[0]?.repoPath??""}`}|${t?.includeDisconnected??!1}`)),(0,H.cM)({args:{0:e=>Array.isArray(e)?e.map((e=>e.name)).join(","):e}})],GitProviderService.prototype,"getBestRemoteWithRichProvider",1),ht([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"getRemotes",1),ht([(0,H.cM)()],GitProviderService.prototype,"getRemotesWithProviders",1),ht([(0,H.cM)({exit:!0})],GitProviderService.prototype,"getBestRepository",1),ht([(0,H.cM)({exit:!0})],GitProviderService.prototype,"getBestRepositoryOrFirst",1),ht([(0,H.cM)({exit:!0})],GitProviderService.prototype,"getOrOpenRepository",1),ht([(0,H.cM)({args:{0:e=>null!=e?`TextEditor(${S.Yd.toLoggable(e.document.uri)})`:void 0}})],GitProviderService.prototype,"getOrOpenRepositoryForEditor",1),ht([(0,H.cM)({exit:!0})],GitProviderService.prototype,"getRepository",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"getStash",1),ht([(0,H.cM)()],GitProviderService.prototype,"getStatusForFile",1),ht([(0,H.cM)()],GitProviderService.prototype,"getStatusForFiles",1),ht([(0,H.cM)()],GitProviderService.prototype,"getStatusForRepo",1),ht([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"getTags",1),ht([(0,H.cM)()],GitProviderService.prototype,"getTreeEntryForRevision",1),ht([(0,H.cM)()],GitProviderService.prototype,"getTreeForRevision",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"getRevisionContent",1),ht([(0,H.cM)()],GitProviderService.prototype,"getUniqueRepositoryId",1),ht([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"hasBranchOrTag",1),ht([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"hasCommitBeenPushed",1),ht([(0,H.cM)()],GitProviderService.prototype,"hasRemotes",1),ht([(0,H.cM)()],GitProviderService.prototype,"hasTrackingBranch",1),ht([(0,H.cM)()],GitProviderService.prototype,"hasUnsafeRepositories",1),ht([(0,H.cM)({args:{0:e=>e.uri.toString(!0),1:e=>null!=e?`TextEditor(${S.Yd.toLoggable(e.document.uri)})`:void 0}})],GitProviderService.prototype,"isRepositoryForEditor",1),ht([(0,H.cM)()],GitProviderService.prototype,"getDiffTool",1),ht([(0,H.cM)()],GitProviderService.prototype,"openDiffTool",1),ht([(0,H.cM)()],GitProviderService.prototype,"openDirectoryCompare",1),ht([(0,oe.H)(),(0,H.cM)()],GitProviderService.prototype,"resolveReference",1),ht([(0,H.cM)({args:{1:e=>`[${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}]: ${e.query.length>500?`${e.query.substring(0,500)}...`:e.query}`}})],GitProviderService.prototype,"richSearchCommits",1),ht([(0,H.cM)()],GitProviderService.prototype,"searchCommits",1),ht([(0,H.cM)({args:!1})],GitProviderService.prototype,"runGitCommandViaTerminal",1),ht([(0,H.cM)()],GitProviderService.prototype,"validateBranchOrTagName",1),ht([(0,H.cM)()],GitProviderService.prototype,"validateReference",1),ht([(0,H.cM)()],GitProviderService.prototype,"stageFile",1),ht([(0,H.cM)()],GitProviderService.prototype,"stageDirectory",1),ht([(0,H.cM)()],GitProviderService.prototype,"unStageFile",1),ht([(0,H.cM)()],GitProviderService.prototype,"unStageDirectory",1),ht([(0,H.cM)()],GitProviderService.prototype,"stashApply",1),ht([(0,H.cM)()],GitProviderService.prototype,"stashDelete",1),ht([(0,H.cM)()],GitProviderService.prototype,"stashRename",1),ht([(0,H.cM)({args:{2:e=>e?.length}})],GitProviderService.prototype,"stashSave",1),ht([(0,H.cM)()],GitProviderService.prototype,"createWorktree",1),ht([(0,H.cM)()],GitProviderService.prototype,"getWorktree",1),ht([(0,H.cM)()],GitProviderService.prototype,"getWorktrees",1),ht([(0,H.cM)()],GitProviderService.prototype,"getWorktreesDefaultUri",1),ht([(0,H.cM)()],GitProviderService.prototype,"deleteWorktree",1),ht([(0,H.cM)()],GitProviderService.prototype,"getOpenScmRepositories",1),ht([(0,H.cM)()],GitProviderService.prototype,"getScmRepository",1),ht([(0,H.cM)()],GitProviderService.prototype,"getOrOpenScmRepository",1);class RichRemoteProviderService{constructor(e){this.container=e}_onDidChangeConnectionState=new r.EventEmitter;get onDidChangeConnectionState(){return this._onDidChangeConnectionState.event}_connectedCache=new Set;connected(e){this._connectedCache.has(e)||(this._connectedCache.add(e),this.container.telemetry.sendEvent("remoteProviders/connected",{"remoteProviders.key":e}),this._onDidChangeConnectionState.fire({key:e,reason:"connected"}))}disconnected(e){this._connectedCache.delete(e),this.container.telemetry.sendEvent("remoteProviders/disconnected",{"remoteProviders.key":e}),this._onDidChangeConnectionState.fire({key:e,reason:"disconnected"})}}var mt=i(4298),gt=Object.defineProperty,ft=Object.getOwnPropertyDescriptor,wt=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?ft(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&gt(t,i,s),s};const vt=2**30;class LineHoverController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),ne.D.onDidChange(this.onConfigurationChanged,this))}_disposable;_hoverProviderDisposable;_uri;dispose(){this.unregister(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(!ne.D.changed(e,"hovers.enabled")&&!ne.D.changed(e,"hovers.currentLine.enabled"))return;const t=ne.D.get("hovers");t.enabled&&t.currentLine.enabled?(this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this)),this.register(r.window.activeTextEditor)):(this.container.lineTracker.unsubscribe(this),this.unregister())}onActiveLinesChanged(e){e.pending||(null!=e.editor&&null!=e.selections?this.isRegistered(e.editor?.document.uri)||this.register(e.editor):this.unregister())}async provideDetailsHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;const n=this.container.lineTracker.getState(t.line),s=n?.commit;if(null==s)return;const o=ne.D.get("hovers");if(o.annotations.details){if(await this.container.fileAnnotations.getAnnotationType(r.window.activeTextEditor)===P.VP.Blame)return}const a="line"===o.currentLine.over;if(!a&&this.container.lineAnnotations.suspended)return;const l=e.validateRange(new r.Range(t.line,a?t.character:vt,t.line,vt));if(!a&&l.start.character!==t.character)return;let c=t.line;const h=c+1;c=(s.lines.find((e=>e.line===h))??s.lines[0]).originalLine-1;const u=await this.container.tracker.get(e);if(null==u)return;const d=await(0,Me.nN)(s,u.uri,c,{autolinks:o.autolinks.enabled,dateFormat:ne.D.get("defaultDateFormat"),format:o.detailsMarkdownFormat,pullRequests:{enabled:o.pullRequests.enabled}});return new r.Hover(d,l)}async provideChangesHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;const n=this.container.lineTracker.getState(t.line),s=n?.commit;if(null==s)return;const o=ne.D.get("hovers");if(o.annotations.changes){if(await this.container.fileAnnotations.getAnnotationType(r.window.activeTextEditor)===P.VP.Blame)return}const a="line"===o.currentLine.over;if(!a&&this.container.lineAnnotations.suspended)return;const l=e.validateRange(new r.Range(t.line,a?t.character:vt,t.line,vt));if(!a&&l.start.character!==t.character)return;const c=await this.container.tracker.get(e);if(null==c)return;const h=await(0,Me.jw)(s,c.uri,t.line,c.document);return null!=h?new r.Hover(h,l):void 0}isRegistered(e){return null!=this._hoverProviderDisposable&&mt.n.equals(this._uri,e)}register(e){if(this.unregister(),null==e)return;const t=ne.D.get("hovers");if(!t.enabled||!t.currentLine.enabled||!t.currentLine.details&&!t.currentLine.changes)return;this._uri=e.document.uri;const i=[];t.currentLine.changes&&i.push(r.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideChangesHover.bind(this)})),t.currentLine.details&&i.push(r.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideDetailsHover.bind(this)})),this._hoverProviderDisposable=r.Disposable.from(...i)}unregister(){this._uri=void 0,null!=this._hoverProviderDisposable&&(this._hoverProviderDisposable.dispose(),this._hoverProviderDisposable=void 0)}}wt([(0,H.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineHoverController.prototype,"onActiveLinesChanged",1),wt([(0,H.fF)({args:{0:e=>S.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],LineHoverController.prototype,"provideDetailsHover",1),wt([(0,H.fF)({args:{0:e=>S.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],LineHoverController.prototype,"provideChangesHover",1);var yt=i(4290),bt=Object.defineProperty,Ct=Object.getOwnPropertyDescriptor,At=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ct(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&bt(t,i,s),s};const Pt="did-authenticate";class AuthenticationConnection{constructor(e,t){this.container=e,this.connection=t}_cancellationSource;_deferredCodeExchanges=new Map;_pendingStates=new Map;_statusBarItem;dispose(){}abort(){return null==this._cancellationSource?Promise.resolve():(this._cancellationSource.cancel(),new Promise((e=>setTimeout(e,50))))}async getAccountInfo(e){const t=(0,le.UH)();let i;try{i=await this.connection.fetch(r.Uri.joinPath(this.connection.baseApiUri,"user").toString(),void 0,e)}catch(e){throw S.Yd.error(e,t),e}if(!i.ok)throw S.Yd.error(void 0,`Getting account info failed: (${i.status}) ${i.statusText}`),new Error(i.statusText);const n=await i.json();return{id:n.id,accountName:n.username}}async login(e,t){this.updateStatusBarItem(!0);const i=(0,yt.Vj)(),n=this._pendingStates.get(t)??[];this._pendingStates.set(t,[...n,i]);const s=await r.env.asExternalUri(r.Uri.parse(`${r.env.uriScheme}://${this.container.context.extension.id}/${Pt}?gkstate=${i}`)),o=r.Uri.joinPath(this.connection.baseAccountUri,"register").with({query:`${e.includes("gitlens")?"referrer=gitlens&":""}pass-token=true&return-url=${encodeURIComponent(s.toString())}`});await r.env.openExternal(o);let a=this._deferredCodeExchanges.get(t);return null==a&&(a=(0,de.ue)(this.container.uri.onDidReceiveAuthenticationUri,this.getUriHandlerDeferredExecutor(t)),this._deferredCodeExchanges.set(t,a)),null!=this._cancellationSource&&(this._cancellationSource.cancel(),this._cancellationSource.dispose(),this._cancellationSource=void 0),this._cancellationSource=new r.CancellationTokenSource,this.openCompletionInputFallback(this._cancellationSource.token),Promise.race([a.promise,new Promise(((e,t)=>this._cancellationSource?.token.onCancellationRequested((()=>t("Cancelled"))))),new Promise(((e,t)=>setTimeout(t,12e4,"Cancelled")))]).finally((()=>{this._cancellationSource?.cancel(),this._cancellationSource?.dispose(),this._cancellationSource=void 0,this._pendingStates.delete(t),a?.cancel(),this._deferredCodeExchanges.delete(t),this.updateStatusBarItem(!1)}))}async openCompletionInputFallback(e){const t=r.window.createInputBox();t.ignoreFocusOut=!0;const i=[];try{if(e.isCancellationRequested)return;const n=await new Promise((n=>{i.push(e.onCancellationRequested((()=>t.hide())),t.onDidHide((()=>n(void 0))),t.onDidChangeValue((e=>{if(e){try{const i=r.Uri.parse(e.trim());if(i.scheme&&"file"!==i.scheme)return void(t.validationMessage=void 0)}catch{}t.validationMessage="Please enter a valid authorization URL"}else t.validationMessage=void 0})),t.onDidAccept((()=>n(r.Uri.parse(t.value.trim()))))),t.title="GitKraken Sign In",t.placeholder="Please enter the provided authorization URL",t.prompt="If the auto-redirect fails, paste the authorization URL",t.show()}));null!=n&&this.container.uri.handleUri(n)}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}}getUriHandlerDeferredExecutor(e){return(t,i,r)=>{const n=new URLSearchParams(t.query),s=this._pendingStates.get(e),o=n.get("gkstate");if(null==s||!o||!s.includes(o))return void S.Yd.log("State not found in accepted state. Skipping this execution...");const a=n.get("access-token"),l=n.get("code"),c=a??l;null==c?r("Token not returned"):i(c)}}updateStatusBarItem(e){e&&null==this._statusBarItem&&(this._statusBarItem=r.window.createStatusBarItem("gitlens.plus.signIn",r.StatusBarAlignment.Left),this._statusBarItem.name="GitKraken Sign in",this._statusBarItem.text="Signing in to GitKraken...",this._statusBarItem.show()),e||null==this._statusBarItem||(this._statusBarItem.dispose(),this._statusBarItem=void 0)}}At([(0,H.fF)({args:!1})],AuthenticationConnection.prototype,"getAccountInfo",1),At([(0,H.fF)()],AuthenticationConnection.prototype,"login",1);var St=Object.defineProperty,Rt=Object.getOwnPropertyDescriptor,Dt=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Rt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&St(t,i,s),s};const kt="gitlens+",_t=["gitlens"];class AccountAuthenticationProvider{constructor(e,t){this.container=e,this._authConnection=new AuthenticationConnection(e,t),this._sessionsPromise=this.getSessionsFromStorage(),this._disposable=r.Disposable.from(this._authConnection,r.authentication.registerAuthenticationProvider(kt,"GitKraken: GitLens",this,{supportsMultipleAccounts:!1}),this.container.storage.onDidChangeSecrets((()=>this.checkForUpdates())))}_onDidChangeSessions=new r.EventEmitter;get onDidChangeSessions(){return this._onDidChangeSessions.event}_disposable;_authConnection;_sessionsPromise;dispose(){this._disposable.dispose()}get secretStorageKey(){return`gitlens.plus.auth:${this.container.env}`}abort(){return this._authConnection.abort()}async createSession(e){const t=(0,le.UH)(),i=Tt(e=e.sort());try{const t=await this._authConnection.login(e,i),r=await this.createSessionForToken(t,e),n=await this._sessionsPromise,s=n.findIndex((e=>e.id===r.id||Tt(e.scopes)===i));return s>-1?n.splice(s,1,r):n.push(r),await this.storeSessions(n),this._onDidChangeSessions.fire({added:[r],removed:[],changed:[]}),r}catch(e){if("Cancelled"===e)throw e;throw S.Yd.error(e,t),r.window.showErrorMessage(`Unable to sign in to GitKraken: ${e}`),e}}async getSessions(e){const t=(0,le.UH)();e=e?.sort();const i=Tt(e),r=await this._sessionsPromise,n=null!=e?r.filter((e=>Tt(e.scopes)===i)):r;return(0,le.lH)(t,` • Found ${n.length} sessions`),n}async removeSession(e){const t=(0,le.UH)();try{const t=await this._sessionsPromise,i=t.findIndex((t=>t.id===e));if(-1===i)return void S.Yd.log(`Unable to remove session ${e}; Not found`);const r=t[i];t.splice(i,1),await this.storeSessions(t),this._onDidChangeSessions.fire({added:[],removed:[r],changed:[]})}catch(e){throw S.Yd.error(e,t),r.window.showErrorMessage(`Unable to sign out of GitKraken: ${e}`),e}}async removeSessionsByScopes(e){const t=(0,le.UH)();try{e=e?.sort();const t=Tt(e),i=[];let r=0;const n=await this._sessionsPromise;for(const e of n)Tt(e.scopes)===t?(n.splice(r,1),i.push(e)):r++;if(0===i.length)return;await this.storeSessions(n),this._onDidChangeSessions.fire({added:[],removed:i,changed:[]})}catch(e){throw S.Yd.error(e,t),r.window.showErrorMessage(`Unable to sign out of GitKraken: ${e}`),e}}async checkForUpdates(){const e=await this._sessionsPromise;this._sessionsPromise=this.getSessionsFromStorage();const t=await this._sessionsPromise,i=[],r=[];for(const r of t)e.some((e=>e.id===r.id))||i.push(r);for(const i of e)t.some((e=>e.id===i.id))||r.push(i);(i.length||r.length)&&(S.Yd.debug(`Firing sessions changed event; added=${i.length}, removed=${r.length}`),this._onDidChangeSessions.fire({added:i,removed:r,changed:[]}))}async createSessionForToken(e,t){const i=await this._authConnection.getAccountInfo(e);return{id:(0,yt.Vj)(),accessToken:e,account:{label:i.accountName,id:i.id},scopes:t}}async getSessionsFromStorage(){let e;try{const t=await this.container.storage.getSecret(this.secretStorageKey);if(!t||"[]"===t)return[];try{e=JSON.parse(t)}catch(e){try{await this.container.storage.deleteSecret(this.secretStorageKey)}catch{}throw e}}catch(e){return S.Yd.error(e,"Unable to read sessions from storage"),[]}const t=e.map((async e=>{const t=Tt(e.scopes);let i;if(S.Yd.debug(`Read session from storage with scopes=${t}`),null==e.account)try{i=await this._authConnection.getAccountInfo(e.accessToken),S.Yd.debug(`Verified session with scopes=${t}`)}catch(e){if("Unauthorized"===e.message)return}return{id:e.id,account:{label:null!=e.account?e.account.label??e.account.displayName??"<unknown>":i?.accountName??"<unknown>",id:e.account?.id??i?.id??"<unknown>"},scopes:e.scopes,accessToken:e.accessToken}})),i=(await Promise.allSettled(t)).filter((e=>"fulfilled"===e.status)).map((e=>e.value)).filter((e=>Boolean(e)));return S.Yd.debug(`Found ${i.length} verified sessions`),i.length!==e.length&&await this.storeSessions(i),i}async storeSessions(e){try{this._sessionsPromise=Promise.resolve(e),await this.container.storage.storeSecret(this.secretStorageKey,JSON.stringify(e))}catch(t){S.Yd.error(t,`Unable to store ${e.length} sessions`)}}}function Tt(e){return e?.join("|")}Dt([(0,H.fF)()],AccountAuthenticationProvider.prototype,"createSession",1),Dt([(0,H.fF)()],AccountAuthenticationProvider.prototype,"getSessions",1),Dt([(0,H.fF)()],AccountAuthenticationProvider.prototype,"removeSession",1),Dt([(0,H.fF)()],AccountAuthenticationProvider.prototype,"removeSessionsByScopes",1);var Ft=i(4488),Ot=Object.defineProperty,Et=Object.getOwnPropertyDescriptor,$t=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Et(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ot(t,i,s),s};class ServerConnection{constructor(e){this.container=e}dispose(){}get baseApiUri(){return"staging"===this.container.env?r.Uri.parse("https://stagingapi.gitkraken.com"):"dev"===this.container.env?r.Uri.parse("https://devapi.gitkraken.com"):r.Uri.parse("https://api.gitkraken.com")}get baseAccountUri(){return"staging"===this.container.env?r.Uri.parse("https://stagingapp.gitkraken.com"):"dev"===this.container.env?r.Uri.parse("https://devapp.gitkraken.com"):r.Uri.parse("https://app.gitkraken.com")}get baseGkApiUri(){return"staging"===this.container.env?r.Uri.parse("https://staging-api.gitkraken.dev"):"dev"===this.container.env?r.Uri.parse("https://dev-api.gitkraken.dev"):r.Uri.parse("https://api.gitkraken.dev")}get baseSiteUri(){const{env:e}=this.container;return"staging"===e?r.Uri.parse("https://staging.gitkraken.com"):"dev"===e?r.Uri.parse("https://dev.gitkraken.com"):r.Uri.parse("https://gitkraken.com")}get userAgent(){return"Visual-Studio-Code-GitLens"}async fetch(e,t,i){const r=(0,le.UH)();try{i??=await this.getAccessToken();const r={agent:(0,Te.Nx)(),...t,headers:{Authorization:`Bearer ${i}`,"User-Agent":this.userAgent,"Content-Type":"application/json",...t?.headers}};return await(0,Te.he)(e,r)}catch(e){throw S.Yd.error(e,r),e}}async fetchGraphQL(e,t,i){return this.fetch(e,{method:"POST",...i,body:JSON.stringify(t)})}async getAccessToken(){const e=await this.container.subscription.getAuthenticationSession();if(null!=e)return e.accessToken;throw new Error("Authentication required")}}$t([(0,Ft.H)()],ServerConnection.prototype,"baseApiUri",1),$t([(0,Ft.H)()],ServerConnection.prototype,"baseAccountUri",1),$t([(0,Ft.H)()],ServerConnection.prototype,"baseGkApiUri",1),$t([(0,Ft.H)()],ServerConnection.prototype,"baseSiteUri",1),$t([(0,Ft.H)()],ServerConnection.prototype,"userAgent",1);var It=Object.defineProperty,xt=Object.getOwnPropertyDescriptor,Bt=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?xt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&It(t,i,s),s};class IntegrationAuthenticationService{constructor(e){this.container=e}providers=new Map;dispose(){this.providers.clear()}registerProvider(e,t){if(this.providers.has(e))throw new Error(`Provider with id ${e} already registered`);return this.providers.set(e,t),{dispose:()=>this.providers.delete(e)}}hasProvider(e){return this.providers.has(e)}async createSession(e,t){const i=this.providers.get(e);if(null==i)throw new Error(`Provider with id ${e} not registered`);const r=await(i?.createSession(t));if(null==r)return;const n=this.getSecretKey(e,i.getSessionId(t));return await this.container.storage.storeSecret(n,JSON.stringify(r)),r}async getSession(e,t,i){const r=this.providers.get(e);if(null==r)throw new Error(`Provider with id ${e} not registered`);const n=this.getSecretKey(e,r.getSessionId(t));let s;i?.forceNewSession&&await this.container.storage.deleteSecret(n);try{const e=await this.container.storage.getSecret(n);e&&(s=JSON.parse(e))}catch(e){try{await this.container.storage.deleteSecret(n)}catch{}if(!i?.createIfNeeded)throw e}return i?.createIfNeeded&&null==s?this.createSession(e,t):s}async deleteSession(e,t){const i=this.providers.get(e);if(null==i)throw new Error(`Provider with id ${e} not registered`);const r=this.getSecretKey(e,i.getSessionId(t));await this.container.storage.deleteSecret(r)}getSecretKey(e,t){return`gitlens.integration.auth:${e}|${t}`}}Bt([(0,H.fF)()],IntegrationAuthenticationService.prototype,"createSession",1),Bt([(0,H.fF)()],IntegrationAuthenticationService.prototype,"getSession",1),Bt([(0,H.fF)()],IntegrationAuthenticationService.prototype,"deleteSession",1);var Wt=i(7512),Mt=i(9967),Lt=i(4550),Ut=i(2215),Nt=Object.defineProperty,Gt=Object.getOwnPropertyDescriptor,Ht=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Gt(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Nt(t,i,s),s};class SubscriptionService{constructor(e,t,i){this.container=e,this.connection=t,this._disposable=r.Disposable.from((0,pe.IH)(e.onReady)(this.onReady,this),this.container.accountAuthentication.onDidChangeSessions((e=>setTimeout((()=>this.onAuthenticationChanged(e)),0)),this),ne.D.onDidChange((e=>{ne.D.changed(e,"plusFeatures")&&this.updateContext()})));const n=this.getStoredSubscription();null!=n&&(0,Lt.L5)(i,"< 14.0")&&(n.previewTrial=void 0),this.changeSubscription(n,!0),setTimeout((()=>{this.ensureSession(!1)}),1e4)}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_disposable;_subscription;_statusBarSubscription;_validationTimer;dispose(){this._statusBarSubscription?.dispose(),this._disposable.dispose()}async onAuthenticationChanged(e){let t=this._session;if(null==t&&null!=this._sessionPromise&&(t=await this._sessionPromise),null!=t&&e.removed?.some((e=>e.id===t.id)))return this._session=void 0,this._sessionPromise=void 0,void this.logout();const i=e.added?.[0]??e.changed?.[0];null!=i&&(i.id===t?.id&&i.accessToken===t?.accessToken||(this._session=t,this.validate()))}_etag=0;get etag(){return this._etag}onReady(){this._disposable=r.Disposable.from(this._disposable,this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),...this.registerCommands()),this.updateContext()}onRepositoriesChanged(e){this.updateContext()}registerCommands(){return this.container.viewCommands,[(0,ot.xR)(s.Gh.PlusLoginOrSignUp,(()=>this.loginOrSignUp())),(0,ot.xR)(s.Gh.PlusLogout,(()=>this.logout())),(0,ot.xR)(s.Gh.PlusStartPreviewTrial,(()=>this.startPreviewTrial())),(0,ot.xR)(s.Gh.PlusManage,(()=>this.manage())),(0,ot.xR)(s.Gh.PlusPurchase,(()=>this.purchase())),(0,ot.xR)(s.Gh.PlusResendVerification,(()=>this.resendVerification())),(0,ot.xR)(s.Gh.PlusValidate,(()=>this.validate())),(0,ot.xR)(s.Gh.PlusShowPlans,(()=>this.showPlans())),(0,ot.xR)(s.Gh.PlusHide,(()=>ne.D.updateEffective("plusFeatures.enabled",!1))),(0,ot.xR)(s.Gh.PlusRestore,(()=>ne.D.updateEffective("plusFeatures.enabled",!0))),(0,ot.xR)("gitlens.plus.reset",(()=>this.logout(!0)))]}async getAuthenticationSession(e=!1){return this.ensureSession(e)}async getSubscription(e=!1){const t=this.ensureSession(!1);return e||await t,this._subscription}async learnAboutPreviewOrTrial(){const e=await this.getSubscription();e.state===nt.jc.FreeInPreviewTrial?(0,q.lN)(this.container.context.extension.id,"gitlens.welcome","gitlens.welcome.preview",!1):e.state===nt.jc.FreePlusInTrial&&(0,q.lN)(this.container.context.extension.id,"gitlens.welcome","gitlens.welcome.trial",!1)}async loginOrSignUp(){if(!await(0,Ut.C)())return!1;await this.container.accountAuthentication.abort(),this.showAccountView();const e=await this.ensureSession(!0),t=Boolean(e);if(t){const{account:e,plan:{actual:t,effective:i}}=this._subscription;if(!1===e?.verified){const e={title:"Resend Verification",isCloseAffordance:!0},t={title:"Cancel"};await r.window.showInformationMessage(`You must verify your email before you can access ${i.name}.`,e,t)===e&&this.resendVerification()}else if((0,nt.dz)(this._subscription)){const e=(0,nt.PY)(this._subscription,"days"),t={title:"OK",isCloseAffordance:!0},n={title:"Learn More"};await r.window.showInformationMessage(`Welcome to ${i.name} (Trial). You can now try Pro features on privately hosted repos for ${(0,W._6)("more day",e??0)}.`,{modal:!0},t,n)===n&&this.learnAboutPreviewOrTrial()}else(0,nt.ww)(this._subscription)?r.window.showInformationMessage(`Welcome to ${t.name}. You can now use Pro features on privately hosted repos.`,"OK"):r.window.showInformationMessage(`Welcome to ${t.name}. You can use Pro features on local & publicly hosted repos.`,"OK")}return t}async logout(e=!1){return this.logoutCore(e)}async logoutCore(e=!1){null!=this._validationTimer&&(clearInterval(this._validationTimer),this._validationTimer=void 0),await this.container.accountAuthentication.abort(),this._sessionPromise=void 0,null!=this._session?(this.container.accountAuthentication.removeSession(this._session.id),this._session=void 0):this.container.accountAuthentication.removeSessionsByScopes(_t),e&&this.container.debugging?this.changeSubscription(void 0):this.changeSubscription({...this._subscription,plan:{actual:(0,nt.fV)(nt.Cx.Free,!1,void 0,null!=this._subscription.plan?.actual?.startedOn?new Date(this._subscription.plan.actual.startedOn):void 0),effective:(0,nt.fV)(nt.Cx.Free,!1,void 0,null!=this._subscription.plan?.effective?.startedOn?new Date(this._subscription.plan.actual.startedOn):void 0)},account:void 0})}manage(){r.env.openExternal(this.connection.baseAccountUri)}async purchase(){await(0,Ut.C)()&&(null==this._subscription.account?this.showPlans():r.env.openExternal(r.Uri.joinPath(this.connection.baseAccountUri,"subscription").with({query:"product=gitlens&license=PRO"})),await this.showAccountView())}async resendVerification(){if(this._subscription.account?.verified)return!0;const e=(0,le.UH)();this.showAccountView(!0);const t=await this.ensureSession(!1);if(null==t)return!1;try{const i=await this.connection.fetch(r.Uri.joinPath(this.connection.baseApiUri,"resend-email").toString(),{method:"POST",body:JSON.stringify({id:t.account.id})},t.accessToken);if(!i.ok)return S.Yd.error("",e,`Unable to resend verification email; status=(${i.status}): ${i.statusText}`),r.window.showErrorMessage(`Unable to resend verification email; Status: ${i.statusText}`,"OK"),!1;const n={title:"Recheck"},s={title:"Cancel"};if(await r.window.showInformationMessage("Once you have verified your email address, click 'Recheck'.",n,s)===n)return await this.validate(),!0}catch(t){S.Yd.error(t,e),r.window.showErrorMessage("Unable to resend verification email","OK")}return!1}async showAccountView(e=!1){e&&!ne.D.get("plusFeatures.enabled",void 0,!0)||this.container.accountView.visible||await(0,ot.P0)(s.Gh.ShowAccountView)}showPlans(){r.env.openExternal(r.Uri.joinPath(this.connection.baseSiteUri,"gitlens/pricing"))}async startPreviewTrial(e){if(!await(0,Ut.C)())return;let{plan:t,previewTrial:i}=this._subscription;if(null!=i){if(this.showAccountView(),!e&&t.effective.id===nt.Cx.Free){const e={title:"Start Free Pro Trial",isCloseAffordance:!0},t={title:"Cancel"};await r.window.showInformationMessage("Your 3-day Pro preview has ended, start a free Pro trial to get an additional 7 days.\n\n✨ A trial or paid plan is required to use Pro features on privately hosted repos.",{modal:!0},e,t)===e&&this.loginOrSignUp()}return}if((0,nt._n)(this._subscription))return;const n=new Date;let s,o=new Date(n);this.container.debugging?(o=(0,Wt.IH)(o,{minutes:1}),s=0):(o.setHours(23,59,59,999),o=(0,Wt.IH)(o,{days:3}),s=3),i={startedOn:n.toISOString(),expiresOn:o.toISOString()},this.changeSubscription({...this._subscription,plan:{...this._subscription.plan,effective:(0,nt.fV)(nt.Cx.Pro,!1,void 0,n,o)},previewTrial:i}),e||setTimeout((async()=>{const e={title:"Learn More"};await r.window.showInformationMessage(`You can now preview Pro features for ${(0,W._6)("day",s)}. After which, you can start a free Pro trial for an additional 7 days.`,{title:"OK",isCloseAffordance:!0},e)===e&&this.learnAboutPreviewOrTrial()}),1)}async validate(){const e=(0,le.UH)(),t=await this.ensureSession(!1);if(null!=t)try{await this.checkInAndValidate(t)}catch(t){S.Yd.error(t,e)}else this.changeSubscription(this._subscription)}_lastCheckInDate;async checkInAndValidate(e,t=!1){if(!t)return this.checkInAndValidateCore(e);const i=this.checkInAndValidateCore(e);await Promise.race([i,new Promise((e=>setTimeout(e,3e3,!0)))])&&await r.window.withProgress({location:r.ProgressLocation.Notification,title:"Validating your GitKraken account..."},(()=>i))}async checkInAndValidateCore(e){const t=(0,le.UH)();try{const t={id:e.account.id,platform:(0,ze.Xf)(),gitlensVersion:this.container.version,machineId:r.env.machineId,sessionId:r.env.sessionId,vscodeEdition:r.env.appName,vscodeHost:r.env.appHost,vscodeVersion:r.version,previewStartedOn:this._subscription.previewTrial?.startedOn,previewExpiresOn:this._subscription.previewTrial?.expiresOn},i=await this.connection.fetch(r.Uri.joinPath(this.connection.baseApiUri,"gitlens/checkin").toString(),{method:"POST",body:JSON.stringify(t)},e.accessToken);if(!i.ok)throw new a.dt("Unable to validate account",void 0,i.status,i.statusText);const n=await i.json();this.validateSubscription(n),this._lastCheckInDate=new Date}catch(e){if(S.Yd.error(e,t),e instanceof a.dt)throw e;throw new a.dt("Unable to validate account",e)}finally{this.startDailyValidationTimer()}}startDailyValidationTimer(){null!=this._validationTimer&&clearInterval(this._validationTimer),this._validationTimer=setInterval((()=>{null!=this._lastCheckInDate&&this._lastCheckInDate.getDate()===(new Date).getDate()||this.ensureSession(!1,!0)}),216e5)}validateSubscription(e){const t={id:e.user.id,name:e.user.name,email:e.user.email,verified:"activated"===e.user.status,createdOn:e.user.createdDate,organizationIds:e.orgIds??[]},i=Object.entries(e.licenses.effectiveLicenses),r=Object.entries(e.licenses.paidLicenses);let n,s;if(r.length>0){r.length>1&&r.sort(((e,t)=>(0,nt.kU)(qt(t[0]))+Yt(t[1].latestStatus)-((0,nt.kU)(qt(e[0]))+Yt(e[1].latestStatus))));const[e,t]=r[0];n=(0,nt.fV)(qt(e),Qt(e),t.organizationId,new Date(t.latestStartDate),new Date(t.latestEndDate),"cancelled"===t.latestStatus)}if(null==n&&(n=(0,nt.fV)(nt.Cx.FreePlus,!1,void 0,null!=e.user.firstGitLensCheckIn?new Date(e.user.firstGitLensCheckIn):null!=e.user.createdDate?new Date(e.user.createdDate):void 0)),i.length>0){i.length>1&&i.sort(((e,t)=>(0,nt.kU)(qt(t[0]))+Yt(t[1].latestStatus)-((0,nt.kU)(qt(e[0]))+Yt(e[1].latestStatus))));const[e,t]=i[0];s=(0,nt.fV)(qt(e),Qt(e),t.organizationId,new Date(t.latestStartDate),new Date(t.latestEndDate),"cancelled"===t.latestStatus)}(null==s||(0,nt.kU)(n.id)>=(0,nt.kU)(s.id))&&(s={...n}),this.changeSubscription({...this._subscription,plan:{actual:n,effective:s},account:t})}_sessionPromise;_session;async ensureSession(e,t){if(null!=this._sessionPromise&&void 0===this._session&&await this._sessionPromise,!t&&null!=this._session)return this._session;if(null===this._session&&!e)return;void 0===this._sessionPromise&&(this._sessionPromise=this.getOrCreateSession(e).then((e=>(this._session=e,this._sessionPromise=void 0,this._session)),(()=>(this._session=null,this._sessionPromise=void 0,this._session))));return await this._sessionPromise??void 0}async getOrCreateSession(e){const t=(0,le.UH)();let i;try{i=await r.authentication.getSession(kt,_t,{createIfNone:e,silent:!e})}catch(e){if(i=null,e instanceof Error&&e.message.includes("User did not consent"))return S.Yd.debug(t,"User declined authentication"),await this.logoutCore(),null;S.Yd.error(e,t)}if(null==i)return S.Yd.debug(t,"No valid session was found"),await this.logoutCore(),i??null;try{await this.checkInAndValidate(i,e)}catch(n){if(S.Yd.error(n,t),this.container.telemetry.sendEvent("account/validation/failed",{"account.id":i.account.id,exception:String(n),code:n.original?.code,statusCode:n.statusCode}),S.Yd.debug(t,`Account validation failed (${n.statusCode??n.original?.code})`),n instanceof a.dt){const t=i.account.label;if("ENOTFOUND"!==n.original?.code&&null!=n.statusCode&&n.statusCode<500&&n.statusCode>=400){if(i=null,await this.logoutCore(),e){const e=401===n.statusCode;queueMicrotask((async()=>{const i={title:"Retry Sign In"};await r.window.showErrorMessage(`Unable to sign in to your (${t}) GitKraken account. Please try again. If this issue persists, please contact support.${e?"":` Error=${n.message}`}`,i)===i&&this.loginOrSignUp()}))}}else i=i??null}}return i}changeSubscription(e,t=!1){null==e&&(e={plan:{actual:(0,nt.fV)(nt.Cx.Free,!1,void 0),effective:(0,nt.fV)(nt.Cx.Free,!1,void 0)},account:void 0,state:nt.jc.Free}),(0,nt.Z1)(e)&&(e={...e,plan:{...e.plan,effective:e.plan.actual}}),!(0,nt.ww)(e)&&null!=e.previewTrial&&((0,nt.EE)(e.previewTrial.expiresOn)??0)>0&&(e={...e,plan:{...e.plan,effective:(0,nt.fV)(nt.Cx.Pro,!1,void 0,new Date(e.previewTrial.startedOn),new Date(e.previewTrial.expiresOn))}}),e.state=(0,nt.RE)(e);const i=this._subscription,r=null!=i&&JSON.stringify(i)===JSON.stringify(e);r||(queueMicrotask((()=>{let t=Vt(e);this.container.telemetry.setGlobalAttributes(t),t={...t,...r?{}:Vt(i,"previous")},this.container.telemetry.sendEvent(null==i?"subscription":"subscription/changed",t)})),this.storeSubscription(e),this._subscription=e,this._etag=Date.now(),t||(this.updateContext(),null!=i&&this._onDidChange.fire({current:e,previous:i,etag:this._etag})))}getStoredSubscription(){const e=this.container.storage.get("premium:subscription"),t=e?.data;return null!=t&&(t.plan.actual.name=(0,nt.tL)(t.plan.actual.id),t.plan.effective.name=(0,nt.tL)(t.plan.effective.id)),t}async storeSubscription(e){return this.container.storage.store("premium:subscription",{v:1,data:e})}_cancellationSource;_updateAccessContextDebounced;updateContext(){this._updateAccessContextDebounced?.cancel(),null==this._updateAccessContextDebounced&&(this._updateAccessContextDebounced=(0,pe.Ds)(this.updateAccessContext.bind(this),500)),null!=this._cancellationSource&&(this._cancellationSource.cancel(),this._cancellationSource.dispose()),this._cancellationSource=new r.CancellationTokenSource,this._updateAccessContextDebounced(this._cancellationSource.token),this.updateStatusBar();const{plan:{actual:e},state:t}=this._subscription;(0,se.v)("gitlens:plus",e.id!=nt.Cx.Free?e.id:void 0),(0,se.v)("gitlens:plus:state",t)}async updateAccessContext(e){let t=!1;if(0!==this.container.git.repositoryCount&&(({allowed:t}=await this.container.git.access()),e.isCancellationRequested))return;const i=ne.D.get("plusFeatures.enabled")??!0;let r;if(!i&&"mixed"===t){r=[];for(const t of this.container.git.repositories){if(t.closed)continue;const i=await this.container.git.access(void 0,t.uri);if(e.isCancellationRequested)return;i.allowed||r.push(t.uri.toString())}}(0,se.v)("gitlens:plus:enabled",Boolean(t)||i),(0,se.v)("gitlens:plus:required",!1===t),(0,se.v)("gitlens:plus:disallowedRepos",r)}updateStatusBar(){const{account:e,plan:{effective:t}}=this._subscription;if(t.id===nt.Cx.Free)return this._statusBarSubscription?.dispose(),void(this._statusBarSubscription=void 0);const i=(0,nt.dz)(this._subscription);if(!i&&!1!==e?.verified)return this._statusBarSubscription?.dispose(),void(this._statusBarSubscription=void 0);if(null==this._statusBarSubscription&&(this._statusBarSubscription=r.window.createStatusBarItem("gitlens.plus.subscription",r.StatusBarAlignment.Left,1)),this._statusBarSubscription.name="GitKraken Subscription",this._statusBarSubscription.command=s.Gh.ShowHomeView,!1===e?.verified)this._statusBarSubscription.text=`$(warning) ${t.name} (Unverified)`,this._statusBarSubscription.backgroundColor=new r.ThemeColor("statusBarItem.warningBackground"),this._statusBarSubscription.tooltip=new r.MarkdownString(i?`**Please verify your email**\n\nYou must verify your email before you can start your **${t.name}** trial.\n\nClick for details`:"**Please verify your email**\n\nYou must verify your email before you can use Pro features on privately hosted repos.\n\nClick for details",!0);else{const e=(0,nt.PY)(this._subscription,"days");this._statusBarSubscription.text=`${t.name} (Trial)`,this._statusBarSubscription.tooltip=new r.MarkdownString(`You have ${(0,W._6)("day",e??0)} left in your free **${t.name}** trial, which gives you additional access to Pro features on privately hosted repos.\n\nClick for details`,!0)}this._statusBarSubscription.show()}}function Vt(e,t){return null==e?{}:{...(0,Mt.xH)(e.account,{arrays:"join",prefix:(t?`${t}.`:"")+"account",skipPaths:["name","email"],skipNulls:!0,stringify:!0}),...(0,Mt.xH)(e.plan,{prefix:(t?`${t}.`:"")+"subscription",skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),...(0,Mt.xH)(e.previewTrial,{prefix:(t?`${t}.`:"")+"subscription.previewTrial",skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),"subscription.state":e.state}}function qt(e){switch(e){case"gitlens-pro":case"bundle-pro":return nt.Cx.Pro;case"gitlens-teams":case"bundle-teams":return nt.Cx.Teams;case"gitlens-hosted-enterprise":case"gitlens-self-hosted-enterprise":case"gitlens-standalone-enterprise":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":return nt.Cx.Enterprise;default:return nt.Cx.FreePlus}}function Qt(e){switch(e){case"bundle-pro":case"bundle-teams":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":return!0;default:return!1}}function Yt(e){switch(e){case"active":return 100;case"expired":case"cancelled":return-100;case"in_trial":case"trial":return 1;case"canceled":case"non_renewing":return 0}}function jt(e,t){return r.Disposable.from((0,ot.xR)(s.Gh.ShowGraph,((...e)=>"panel"===ne.D.get("graph.layout")?(0,ot.P0)(s.Gh.ShowGraphView,...e):(0,ot.P0)(s.Gh.ShowGraphPage,...e))),(0,ot.xR)("gitlens.graph.switchToEditorLayout",(async()=>{await ne.D.updateEffective("graph.layout","editor"),queueMicrotask((()=>{(0,ot.P0)(s.Gh.ShowGraphPage)}))})),(0,ot.xR)("gitlens.graph.switchToPanelLayout",(async()=>{await ne.D.updateEffective("graph.layout","panel"),queueMicrotask((async()=>{await(0,ot.dO)("gitlens.views.graph.resetViewLocation"),await(0,ot.dO)("gitlens.views.graphDetails.resetViewLocation"),(0,ot.P0)(s.Gh.ShowGraphView)}))})),(0,ot.xR)(s.Gh.ToggleGraph,((...e)=>{(0,se.fw)("gitlens:webviewView:graph:visible")?(0,ot.dO)("workbench.action.closePanel"):(0,ot.P0)(s.Gh.ShowGraphView,...e)})),(0,ot.xR)(s.Gh.ToggleMaximizedGraph,((...e)=>{(0,se.fw)("gitlens:webviewView:graph:visible")||(0,ot.P0)(s.Gh.ShowGraphView,...e),(0,ot.dO)("workbench.action.toggleMaximizedPanel")})),(0,ot.xR)(s.Gh.ShowInCommitGraph,(i=>{const r="preserveFocus"in i&&(i.preserveFocus??!1);"panel"===ne.D.get("graph.layout")?e.graphView.show({preserveFocus:r},i):t.show({preserveFocus:r},i)})),(0,ot.xR)(s.Gh.ShowInCommitGraphView,(t=>{const i="preserveFocus"in t&&(t.preserveFocus??!1);e.graphView.show({preserveFocus:i},t)})))}Ht([(0,H.fF)()],SubscriptionService.prototype,"learnAboutPreviewOrTrial",1),Ht([(0,H.cM)()],SubscriptionService.prototype,"loginOrSignUp",1),Ht([(0,H.cM)()],SubscriptionService.prototype,"logout",1),Ht([(0,H.cM)()],SubscriptionService.prototype,"manage",1),Ht([(0,H.cM)()],SubscriptionService.prototype,"purchase",1),Ht([(0,oe.H)(),(0,H.cM)()],SubscriptionService.prototype,"resendVerification",1),Ht([(0,H.cM)()],SubscriptionService.prototype,"showAccountView",1),Ht([(0,oe.H)(),(0,H.cM)()],SubscriptionService.prototype,"startPreviewTrial",1),Ht([(0,oe.H)(),(0,H.cM)()],SubscriptionService.prototype,"validate",1),Ht([(0,oe.H)((e=>e.account.id))],SubscriptionService.prototype,"checkInAndValidate",1),Ht([(0,H.fF)({args:{0:e=>e?.account.label}})],SubscriptionService.prototype,"checkInAndValidateCore",1),Ht([(0,H.fF)()],SubscriptionService.prototype,"validateSubscription",1),Ht([(0,oe.H)(),(0,H.fF)()],SubscriptionService.prototype,"ensureSession",1),Ht([(0,H.fF)()],SubscriptionService.prototype,"getOrCreateSession",1),Ht([(0,H.fF)()],SubscriptionService.prototype,"changeSubscription",1);class GraphStatusBarController{_disposable;_statusBarItem;constructor(e){this._disposable=r.Disposable.from(ne.D.onDidChange(this.onConfigurationChanged,this),e.subscription.onDidChange(this.onSubscriptionChanged,this),(0,pe.IH)(e.onReady)((()=>queueMicrotask((()=>this.updateStatusBar())))),(0,se.ve)((e=>{"gitlens:enabled"!==e&&"gitlens:plus:enabled"!==e||this.updateStatusBar()})),{dispose:()=>this._statusBarItem?.dispose()})}dispose(){this._disposable.dispose()}onConfigurationChanged(e){(ne.D.changed(e,"graph.statusBar.enabled")||ne.D.changed(e,"plusFeatures.enabled"))&&this.updateStatusBar()}onSubscriptionChanged(e){this.updateStatusBar()}updateStatusBar(){ne.D.get("graph.statusBar.enabled")&&(0,se.fw)("gitlens:enabled")&&(0,Ut.L)()?(null==this._statusBarItem&&(this._statusBarItem=r.window.createStatusBarItem("gitlens.graph",r.StatusBarAlignment.Left,9997),this._statusBarItem.name="GitLens Commit Graph",this._statusBarItem.command=s.Gh.ShowGraph,this._statusBarItem.text="$(gitlens-graph)",this._statusBarItem.tooltip=new r.MarkdownString("Visualize commits on the Commit Graph ✨"),this._statusBarItem.accessibilityInformation={label:"Show the GitLens Commit Graph"}),this._statusBarItem.show()):(this._statusBarItem?.dispose(),this._statusBarItem=void 0)}}var zt=i(6503),Kt=i(635),Jt=i(1907);class WorkspacesApi{constructor(e,t){this.container=e,this.connection=t}async getWorkspace(e,t){let i;if(t?.includeRepositories){let e=`(first: ${t?.repoCount??Jt.CL}`;t?.repoPage&&(e+=`, page: ${t.repoPage}`),e+=")",i=`\n\t\t\t\tprovider_data {\n\t\t\t\t\trepositories ${e} {\n\t\t\t\t\t\ttotal_count\n\t\t\t\t\t\tpage_info {\n\t\t\t\t\t\t\tend_cursor\n\t\t\t\t\t\t\thas_next_page\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\trepository_id\n\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\tprovider_project_name\n\t\t\t\t\t\t\tprovider_organization_id\n\t\t\t\t\t\t\tprovider_organization_name\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`}const r=`\n\t\t\tquery getWorkspace {\n\t\t\t\tproject(id: "${e}") { ${`\n\t\t\tid\n\t\t\tdescription\n\t\t\tname\n\t\t\torganization {\n\t\t\t\tid\n\t\t\t}\n\t\t\tprovider\n\t\t\tazure_organization_id\n\t\t\tazure_project\n\t\t\trepo_relation\n\t\t\t${i??""}\n\t\t`} }\n\t\t\t}\n\t\t`,n=await this.fetch({query:r});if(!n.ok)throw S.Yd.error(void 0,`Getting workspace failed: (${n.status}) ${n.statusText}`),new Error(n.statusText);return await n.json()}async getWorkspaces(e){let t;if(e?.includeRepositories){let i=`(first: ${e?.repoCount??Jt.CL}`;e?.repoPage&&(i+=`, page: ${e.repoPage}`),i+=")",t=`\n\t\t\t\tprovider_data {\n\t\t\t\t\trepositories ${i} {\n\t\t\t\t\t\ttotal_count\n\t\t\t\t\t\tpage_info {\n\t\t\t\t\t\t\tend_cursor\n\t\t\t\t\t\t\thas_next_page\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\trepository_id\n\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\tprovider_project_name\n\t\t\t\t\t\t\tprovider_organization_id\n\t\t\t\t\t\t\tprovider_organization_name\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`}const i=`\n\t\t\ttotal_count\n\t\t\tpage_info {\n\t\t\t\tend_cursor\n\t\t\t\thas_next_page\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t\tname\n\t\t\t\torganization {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t\tprovider\n\t\t\t\tazure_organization_id\n\t\t\t\tazure_project\n\t\t\t\trepo_relation\n\t\t\t\t${t??""}\n\t\t\t}\n\t\t`;let r=`(first: ${e?.count??Jt.U1}`;e?.cursor?r+=`, after: "${e.cursor}"`:e?.page&&(r+=`, page: ${e.page}`),r+=")";let n="query getWorkpaces {";if(n+=`memberProjects: projects ${r} { ${i} }`,null==e?.cursor&&e?.includeOrganizations){const t=(await this.container.subscription.getSubscription())?.account?.organizationIds??[];for(const r of t){let t=`(first: ${e?.count??Jt.U1}`;e?.page&&(t+=`, page: ${e.page}`),t+=`, organization_id: "${r}")`,n+=`organizationProjects_${r}: projects ${t} { ${i} }`}}n+="}";const s=await this.fetch({query:n});if(!s.ok)throw S.Yd.error(void 0,`Getting workspaces failed: (${s.status}) ${s.statusText}`),new Error(s.statusText);const o=new Set,a=await s.json();if(null==a?.data)return;let l;for(const e of Object.values(a.data))if(null!=e)if(null==l){l={data:{projects:e}};for(const t of e.nodes)o.add(t.id)}else for(const t of e.nodes)o.has(t.id)||(o.add(t.id),l.data.projects.nodes.push(t));return null!=l&&(l.data.projects.total_count=o.size),l}async getWorkspaceRepositories(e,t){let i=`(first: ${t?.count??Jt.CL}`;t?.cursor?i+=`, after: "${t.cursor}"`:t?.page&&(i+=`, page: ${t.page}`),i+=")";const r=await this.fetch({query:`\n\t\t\t\t\tquery getWorkspaceRepos {\n\t\t\t\t\t\tproject (id: "${e}") {\n\t\t\t\t\t\t\tprovider_data {\n\t\t\t\t\t\t\t\trepositories ${i} {\n\t\t\t\t\t\t\t\t\ttotal_count\n\t\t\t\t\t\t\t\t\tpage_info {\n\t\t\t\t\t\t\t\t\t\tend_cursor\n\t\t\t\t\t\t\t\t\t\thas_next_page\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\trepository_id\n\t\t\t\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\t\t\t\tprovider_project_name\n\t\t\t\t\t\t\t\t\t\tprovider_organization_id\n\t\t\t\t\t\t\t\t\t\tprovider_organization_name\n\t\t\t\t\t\t\t\t\t\turl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!r.ok)throw S.Yd.error(void 0,`Getting workspace repos failed: (${r.status}) ${r.statusText}`),new Error(r.statusText);return await r.json()}async createWorkspace(e){if(!e.name||!e.description||!e.provider)return;if(!(e.provider!==Jt.Xu.Azure||e.azureOrganizationName&&e.azureProjectName))return;if((e.provider===Jt.Xu.GitHubEnterprise||e.provider===Jt.Xu.GitLabSelfHosted)&&!e.hostUrl)return;const t=await this.fetch({query:`\n\t\t\t\t\tmutation createWorkspace {\n\t\t\t\t\t\tcreate_project(\n\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t  \t\ttype: GK_PROJECT\n\t\t\t\t\t\t  \t\tname: "${e.name}"\n\t\t\t\t\t\t  \t\tdescription: "${e.description}"\n\t\t\t\t\t\t  \t\tprovider: ${e.provider}\n\t\t\t\t\t\t\t\t${e.hostUrl?`host_url: "${e.hostUrl}"`:""}\n\t\t\t\t\t\t\t\t${e.azureOrganizationName?`azure_organization_id: "${e.azureOrganizationName}"`:""}\n\t\t\t\t\t\t\t\t${e.azureProjectName?`azure_project: "${e.azureProjectName}"`:""}\n\t\t\t\t\t\t  \t\tprofile_id: "shared-services"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\torganization {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\tazure_organization_id\n\t\t\t\t\t\t\tazure_project\n\t\t\t\t\t\t\trepo_relation\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!t.ok)throw S.Yd.error(void 0,`Creating workspace failed: (${t.status}) ${t.statusText}`),new Error(t.statusText);return await t.json()}async deleteWorkspace(e){const t=await this.fetch({query:`\n\t\t\t\t\tmutation deleteWorkspace {\n\t\t\t\t\t\tdelete_project(\n\t\t\t\t\t\t\tid: "${e}"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!t.ok)throw S.Yd.error(void 0,`Deleting workspace failed: (${t.status}) ${t.statusText}`),new Error(t.statusText);const i=await t.json();if(i?.errors?.some((e=>e.message.includes("permission")))){const e="Adding repositories to workspace failed: you do not have permission to delete this workspace";throw S.Yd.error(void 0,e),new Error(e)}return i}async addReposToWorkspace(e,t){if(0===t.length)return;let i="[";i+=t.map((e=>`{ provider_organization_id: "${e.owner}", name: "${e.repoName}" }`)).join(","),i+="]";let r=1;const n=t.map((e=>`Repository${r++}: repository(provider_organization_id: "${e.owner}", name: "${e.repoName}") {\n\t\t\tid\n\t\t\tname\n\t\t\trepository_id\n\t\t\tprovider\n\t\t\tprovider_project_name\n\t\t\tprovider_organization_id\n\t\t\tprovider_organization_name\n\t\t\turl\n\t\t}`)).join(","),s=await this.fetch({query:`\n\t\t\t\t\tmutation addReposToWorkspace {\n\t\t\t\t\t\tadd_repositories_to_project(\n\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\tproject_id: "${e}",\n\t\t\t\t\t\t\t\trepositories: ${i}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tprovider_data {\n\t\t\t\t\t\t\t\t${n}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!s.ok)throw S.Yd.error(void 0,`Adding repositories to workspace failed: (${s.status}) ${s.statusText}`),new Error(s.statusText);const o=await s.json();if(o?.errors?.some((e=>e.message.includes("permission")))){const e="Adding repositories to workspace failed: you do not have permission to add repositories to this workspace";throw S.Yd.error(void 0,e),new Error(e)}return o}async removeReposFromWorkspace(e,t){if(0===t.length)return;let i="[";i+=t.map((e=>`{ provider_organization_id: "${e.owner}", name: "${e.repoName}" }`)).join(","),i+="]";const r=await this.fetch({query:`\n\t\t\t\t\tmutation removeReposFromWorkspace {\n\t\t\t\t\t\tremove_repositories_from_project(\n\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\tproject_id: "${e}",\n\t\t\t\t\t\t\t\trepositories: ${i}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!r.ok)throw S.Yd.error(void 0,`Removing repositories from workspace failed: (${r.status}) ${r.statusText}`),new Error(r.statusText);const n=await r.json();if(n?.errors?.some((e=>e.message.includes("permission")))){const e="Adding repositories to workspace failed: you do not have permission to remove repositories from this workspace";throw S.Yd.error(void 0,e),new Error(e)}return n}async fetch(e,t){return this.connection.fetchGraphQL(r.Uri.joinPath(this.connection.baseApiUri,"api/projects/graphql").toString(),e,t)}}class WorkspacesService{constructor(e,t){this.container=e,this.connection=t,this._workspacesApi=new WorkspacesApi(this.container,this.connection),this._workspacesPathProvider=new WorkspacesWebPathMappingProvider,this._currentWorkspaceId=Zt(),this._currentWorkspaceAutoAddSetting=r.workspace.getConfiguration("gitkraken")?.get("workspaceAutoAddSetting")??Jt.XU.Disabled,this._disposable=r.Disposable.from(e.subscription.onDidChange(this.onSubscriptionChanged,this))}_onDidResetWorkspaces=new r.EventEmitter;get onDidResetWorkspaces(){return this._onDidResetWorkspaces.event}_cloudWorkspaces;_disposable;_localWorkspaces;_workspacesApi;_workspacesPathProvider;_currentWorkspaceId;_currentWorkspaceAutoAddSetting=Jt.XU.Disabled;_currentWorkspace;dispose(){this._disposable.dispose()}get currentWorkspaceId(){return this._currentWorkspaceId}get currentWorkspace(){return this._currentWorkspace}onSubscriptionChanged(e){null!=e.current.account&&e.current.account.id===e.previous?.account?.id&&e.current.state===e.previous?.state||this.resetWorkspaces({cloud:!0})}async loadCloudWorkspaces(e=!1){const t=await this.container.subscription.getSubscription();if(null==t?.account)return{cloudWorkspaces:void 0,cloudWorkspaceInfo:"Please sign in to use cloud workspaces."};const i=[];let r;try{const t=await this._workspacesApi.getWorkspaces({includeRepositories:!e,includeOrganizations:!0});r=t?.data?.projects?.nodes}catch{return{cloudWorkspaces:void 0,cloudWorkspaceInfo:"Failed to load cloud workspaces."}}let n=0;const s=t.state===nt.jc.FreeInPreviewTrial||t.state===nt.jc.FreePlusInTrial||t.state===nt.jc.Paid;if(r?.length)for(const t of r){const r=await this._workspacesPathProvider.getCloudWorkspaceCodeWorkspacePath(t.id);if(!s&&t.organization?.id){n+=1;continue}const o=t.provider_data?.repositories?.nodes;let a=null!=o?o.map((e=>({...e,workspaceId:t.id}))):o;null!=a||e||(a=[]),i.push(new Jt.CH(this.container,t.id,t.name,t.organization?.id,t.provider,t.repo_relation,null!=this._currentWorkspaceId&&this._currentWorkspaceId===t.id,t.provider===Jt._N.Azure?{organizationId:t.azure_organization_id??void 0,project:t.azure_project??void 0}:void 0,a,r))}return{cloudWorkspaces:i,cloudWorkspaceInfo:n>0?`${n} shared workspaces hidden - upgrade to GitLens Pro to access.`:void 0}}async loadLocalWorkspaces(){const e=[],t=(await this._workspacesPathProvider.getLocalWorkspaceData())?.workspaces||{};for(const i of Object.values(t))e.push(new Jt.qP(this.container,i.localId,i.name,i.repositories.map((e=>({localPath:e.localPath,name:e.localPath.split(/[\\/]/).pop()??"unknown",workspaceId:i.localId}))),null!=this._currentWorkspaceId&&this._currentWorkspaceId===i.localId));return{localWorkspaces:e,localWorkspaceInfo:void 0}}getCloudWorkspace(e){return this._cloudWorkspaces?.find((t=>t.id===e))}getLocalWorkspace(e){return this._localWorkspaces?.find((t=>t.id===e))}async getWorkspaces(e){const t={cloudWorkspaces:[],localWorkspaces:[],cloudWorkspaceInfo:void 0,localWorkspaceInfo:void 0};if(null==this._cloudWorkspaces||e?.force){const i=await this.loadCloudWorkspaces(e?.excludeRepositories);this._cloudWorkspaces=i.cloudWorkspaces,t.cloudWorkspaceInfo=i.cloudWorkspaceInfo}if(null==this._localWorkspaces||e?.force){const e=await this.loadLocalWorkspaces();this._localWorkspaces=e.localWorkspaces,t.localWorkspaceInfo=e.localWorkspaceInfo}const i=[...this._cloudWorkspaces??[],...this._localWorkspaces??[]].find((e=>e.current));return null!=i&&(this._currentWorkspaceId=i.id,this._currentWorkspace=i),t.cloudWorkspaces=this._cloudWorkspaces??[],t.localWorkspaces=this._localWorkspaces??[],t}async getCloudWorkspaceRepositories(e){const t=await this._workspacesApi.getWorkspaceRepositories(e),i=t?.data?.project?.provider_data?.repositories?.nodes;return i?.map((t=>({...t,workspaceId:e})))??[]}async addMissingCurrentWorkspaceRepos(e){if(null==this._currentWorkspaceId)return;let t=[...this._cloudWorkspaces??[],...this._localWorkspaces??[]].find((e=>e.current));if(null==t)try{const e=await this._workspacesApi.getWorkspace(this._currentWorkspaceId,{includeRepositories:!0});if(null==e?.data?.project)return;const i=e.data.project.provider_data?.repositories?.nodes,n=null!=i?i.map((t=>({...t,workspaceId:e.data.project.id}))):[];t=new Jt.CH(this.container,e.data.project.id,e.data.project.name,e.data.project.organization?.id,e.data.project.provider,e.data.project.repo_relation,!0,e.data.project.provider===Jt._N.Azure?{organizationId:e.data.project.azure_organization_id??void 0,project:e.data.project.azure_project??void 0}:void 0,n,r.workspace.workspaceFile?.fsPath)}catch{return}if(!e?.force&&this._currentWorkspaceAutoAddSetting===Jt.XU.Disabled||!t?.current)return;if(this._currentWorkspace=t,!(await t.getRepositoryDescriptors())?.length)return;const i=[...(await this.resolveWorkspaceRepositoriesByName(t,{resolveFromPath:!0,usePathMapping:!0})).values()].map((e=>e.repository)),n=new Map;for(const e of this.container.git.openRepositories)n.set(e.id,e);const s=i.filter((e=>!n.has(e.id)));if(0===s.length)return void(e?.force&&r.window.showInformationMessage("No new repositories found to add.",{modal:!0}));let o=[];if(!e?.force&&this._currentWorkspaceAutoAddSetting===Jt.XU.Prompt){const e={title:"Add..."},t={title:"Change Auto-Add Behavior..."},i={title:"Cancel",isCloseAffordance:!0},n=await r.window.showInformationMessage("New repositories found in the linked GitKraken workspace. Would you like to add them to the current VS Code workspace?",e,t,i);if(null==n||n===i)return;if(n===t)return void this.chooseCodeWorkspaceAutoAddSetting({current:!0})}if(e?.force||this._currentWorkspaceAutoAddSetting===Jt.XU.Prompt){const e=await(0,Kt.rf)("Add Repositories to Workspace","Choose which repositories to add to the current workspace",s);if(0===e.length)return;o=e.map((e=>e.repoPath))}else o=s.map((e=>e.path));if(0===o.length)return;const a=r.workspace.workspaceFolders?.length??0;r.window.withProgress({location:r.ProgressLocation.Notification,title:"Adding new repositories from linked cloud workspace...",cancellable:!1},(()=>new Promise((e=>{r.workspace.updateWorkspaceFolders(a,0,...o.map((e=>({uri:r.Uri.file(e)})))),e(!0)}))))}resetWorkspaces(e){(e?.cloud??1)&&(this._cloudWorkspaces=void 0),(e?.local??1)&&(this._localWorkspaces=void 0),this._onDidResetWorkspaces.fire()}async getCloudWorkspaceRepoPath(e,t){return this._workspacesPathProvider.getCloudWorkspaceRepoPath(e,t)}async updateCloudWorkspaceRepoLocalPath(e,t,i){await this._workspacesPathProvider.writeCloudWorkspaceRepoDiskPathToMap(e,t,i)}async getRepositoriesInParentFolder(e){const t=(await r.window.showOpenDialog({title:"Choose a folder containing repositories for this workspace",canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0];if(null!=t&&!e?.isCancellationRequested)try{return this.container.git.findRepositories(t,{cancellation:e,depth:1,silent:!0})}catch(e){return}}async locateAllCloudWorkspaceRepos(e,t){const i=this.getCloudWorkspace(e);if(null==i)return;const r=await i.getRepositoryDescriptors();if(null==r||0===r.length)return;const n=await this.getRepositoriesInParentFolder(t);if(null!=n&&0!==n.length&&!t?.isCancellationRequested)for(const i of(await this.resolveWorkspaceRepositoriesByName(e,{cancellation:t,repositories:n})).values())if(await this.locateWorkspaceRepo(e,i.descriptor,i.repository),t?.isCancellationRequested)return}async locateWorkspaceRepo(e,t,i){let n;if(null==i||i instanceof r.Uri){let e=i;if(null==e&&(e=(await r.window.showOpenDialog({title:`Choose a location for ${t.name}`,canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0]),null==e)return;if(n=await this.container.git.getOrOpenRepository(e,{closeOnOpen:!0,detectNested:!1}),null==n)return}else n=i;const s=n.uri.fsPath,o=await n.getRemotes(),a=[];for(const e of o){const t=e.provider?.url({type:zt.J.Repo});null!=t&&a.push(t)}for(const e of a)await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:e},s);const l=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);let c;null==c&&l?.type===Jt.EI.Cloud&&(c=l.provider),null!=t.id&&null!=t.url&&null!=c&&(await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:t.url,repoInfo:{provider:c,owner:t.provider_organization_id,repoName:t.name}},s),await this.updateCloudWorkspaceRepoLocalPath(e,t.id,s))}async createCloudWorkspace(e){const t=r.window.createInputBox();t.title="Create Cloud Workspace";const i=r.window.createQuickPick();i.title="Create Cloud Workspace";const n={GitHub:Jt.Xu.GitHub,"GitHub Enterprise":Jt.Xu.GitHubEnterprise};t.ignoreFocusOut=!0;const s=[];let o,a,l,c,h,u;if(null!=e?.repos&&e.repos.length>0){for(const t of e.repos){if(0===(await t.getRemotes({filter:e=>"github.com"===e.domain})).length)return void await r.window.showErrorMessage("Only GitHub is supported for this operation. Please ensure all open repositories are hosted on GitHub.",{modal:!0})}u=Jt.Xu.GitHub}try{if(o=await new Promise((e=>{s.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty name for the workspace"}))),t.placeholder="Please enter a name for the new workspace",t.prompt="Enter your workspace name",t.show()})),!o)return;if(a=await new Promise((e=>{s.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty description for the workspace"}))),t.value="",t.title="Create Workspace",t.placeholder="Please enter a description for the new workspace",t.prompt="Enter your workspace description",t.show()})),!a)return;if(null==u&&(u=await new Promise((e=>{s.push(i.onDidHide((()=>e(void 0))),i.onDidAccept((()=>{0!==i.activeItems.length&&e(n[i.activeItems[0].label])}))),i.placeholder="Please select a provider for the new workspace",i.items=Object.keys(n).map((e=>({label:e}))),i.canSelectMany=!1,i.show()}))),!u)return;if((u==Jt.Xu.GitHubEnterprise||u==Jt.Xu.GitLabSelfHosted)&&(l=await new Promise((e=>{s.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty host URL for the workspace"}))),t.value="",t.placeholder="Please enter a host URL for the new workspace",t.prompt="Enter your workspace host URL",t.show()})),!l))return;if(u==Jt.Xu.Azure){if(c=await new Promise((e=>{s.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty organization name for the workspace"}))),t.value="",t.placeholder="Please enter an organization name for the new workspace",t.prompt="Enter your workspace organization name",t.show()})),!c)return;if(h=await new Promise((e=>{s.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty project name for the workspace"}))),t.value="",t.placeholder="Please enter a project name for the new workspace",t.prompt="Enter your workspace project name",t.show()})),!h)return}}finally{t.dispose(),i.dispose(),s.forEach((e=>{e.dispose()}))}const d={name:o,description:a,provider:u,hostUrl:l,azureOrganizationName:c,azureProjectName:h};let p;try{const e=await this._workspacesApi.createWorkspace(d);p=e?.data?.create_project}catch{return}if(null!=p){null==this._cloudWorkspaces&&(this._cloudWorkspaces=[]);const t=await this._workspacesPathProvider.getCloudWorkspaceCodeWorkspacePath(p.id);this._cloudWorkspaces?.push(new Jt.CH(this.container,p.id,p.name,p.organization?.id,p.provider,p.repo_relation,null!=this._currentWorkspaceId&&this._currentWorkspaceId===p.id,p.provider===Jt._N.Azure?{organizationId:p.azure_organization_id??void 0,project:p.azure_project??void 0}:void 0,[],t));const i=this.getCloudWorkspace(p.id);null!=i&&await this.addCloudWorkspaceRepos(i.id,{repos:e?.repos,suppressNotifications:!0})}}async deleteCloudWorkspace(e){const t=await r.window.showWarningMessage("Are you sure you want to delete this workspace? This cannot be undone.",{modal:!0},{title:"Confirm"},{title:"Cancel",isCloseAffordance:!0});if(null!=t&&"Cancel"!=t.title)try{const t=await this._workspacesApi.deleteWorkspace(e);t?.data?.delete_project?.id===e&&(this._cloudWorkspaces=this._cloudWorkspaces?.filter((t=>t.id!==e)))}catch(e){r.window.showErrorMessage(e.message)}}async filterReposForProvider(e,t){const i=[];for(const r of e){(await r.getRemotes({filter:e=>e.provider?.id===Jt.Jv[t]})).length&&i.push(r)}return i}async filterReposForCloudWorkspace(e,t){const i=this.getCloudWorkspace(t)??this.getLocalWorkspace(t);if(null==i)return e;const r=[...(await i.getRepositoriesByName()).values()].map((e=>e.repository));return e.filter((e=>!r.find((t=>t.id===e.id))))}async addCloudWorkspaceRepos(e,t){const i=this.getCloudWorkspace(e);if(null==i)return;const n=[];let s=t?.repos;if(!t?.repos){let n=await this.filterReposForProvider(this.container.git.openRepositories,i.provider);n=await this.filterReposForCloudWorkspace(n,e);const o=[{label:"Choose repositories from a folder",description:void 0,choice:Jt.Pv.ParentFolder}];n.length>0&&o.unshift({label:"Choose repositories from the current window",description:void 0,choice:Jt.Pv.CurrentWindow}),o[0].picked=!0;const a=await r.window.showQuickPick(o,{placeHolder:"Choose repositories from the current window or a folder",ignoreFocusOut:!0});if(null==a)return;a.choice===Jt.Pv.ParentFolder&&await r.window.withProgress({location:r.ProgressLocation.Notification,title:"Finding repositories to add to the workspace...",cancellable:!0},(async(s,o)=>{const a=await this.getRepositoriesInParentFolder(o);null!=a&&(0!==a.length?o.isCancellationRequested||(n=await this.filterReposForProvider(a,i.provider),0!==n.length?o.isCancellationRequested||(n=await this.filterReposForCloudWorkspace(n,e),0===n.length&&(t?.suppressNotifications||r.window.showInformationMessage("All possible repositories are already in this workspace.",{modal:!0}))):t?.suppressNotifications||r.window.showInformationMessage(`No matching repositories found for provider ${i.provider}.`,{modal:!0})):t?.suppressNotifications||r.window.showInformationMessage("No repositories found in the chosen folder.",{modal:!0}))}));const l=await(0,Kt.rf)("Add Repositories to Workspace","Choose which repositories to add to the workspace",n);if(0===l.length)return;s=l.map((e=>e.repoPath))}if(null==s)return;for(const e of s){const t=e instanceof b._j?e:await this.container.git.getOrOpenRepository(r.Uri.file(e),{closeOnOpen:!0});if(null==t)continue;const i=Xt(await t.getRemote("origin")||(await t.getRemotes())?.[0]);null!=i&&n.push({owner:i.owner,repoName:i.repoName,repo:t,url:i.url})}if(0===n.length)return;let o=[];const a=new Set((await i.getRepositoryDescriptors()).map((e=>e.id)));await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Adding repositories to workspace ${i.name}...`,cancellable:!1},(async()=>{try{const t=await this._workspacesApi.addReposToWorkspace(e,n.map((e=>({owner:e.owner,repoName:e.repoName}))));if(null==t?.data.add_repositories_to_project)return;o=Object.values(t.data.add_repositories_to_project.provider_data).filter((e=>null!=e)).map((t=>({...t,workspaceId:e})))}catch(e){return void r.window.showErrorMessage(e.message)}o.length>0&&i.addRepositories(o),o.length<n.length&&(o=(await i.getRepositoryDescriptors({force:!0})).filter((e=>!a.has(e.id))));for(const{repo:t,repoName:i,url:r}of n){const n=o.find((e=>e.name.toLowerCase()===i||e.url===r));null!=n&&await this.locateWorkspaceRepo(e,n,t)}}))}async removeCloudWorkspaceRepo(e,t){const i=this.getCloudWorkspace(e);if(null==i)return;const n=await r.window.showWarningMessage(`Are you sure you want to remove ${t.name} from this workspace? This cannot be undone.`,{modal:!0},{title:"Confirm"},{title:"Cancel",isCloseAffordance:!0});if(null!=n&&"Cancel"!=n.title)try{const r=await this._workspacesApi.removeReposFromWorkspace(e,[{owner:t.provider_organization_id,repoName:t.name}]);if(null==r?.data.remove_repositories_from_project)return;i.removeRepositories([t.name])}catch(e){r.window.showErrorMessage(e.message)}}async resolveWorkspaceRepositoriesByName(e,t){const i=new Map,n=e instanceof Jt.CH||e instanceof Jt.qP?e:this.getLocalWorkspace(e)??this.getCloudWorkspace(e);if(null==n)return i;const s=await n.getRepositoryDescriptors();if(null==s||0===s.length)return i;const o=t?.repositories??this.container.git.repositories,a=new Map,l=new Map;for(const e of o){if(t?.cancellation?.isCancellationRequested)break;if(l.set((0,ce.AH)(e.uri.fsPath.toLowerCase()),e),n instanceof Jt.CH){const t=await e.getRemotes();for(const i of t){const t=Xt(i);null!=t&&a.set(`${t.provider}/${t.owner}/${t.repoName}`,e)}}}for(const e of s){let n=null,s=null;null==e.id?n=e.localPath:!0===t?.usePathMapping&&(n=await this.getMappedPathForCloudWorkspaceRepoDescriptor(e)),null!=n&&(s=l.get((0,ce.AH)(n.toLowerCase()))),null==s&&null!=e.id&&null!=e.provider&&(s=a.get(`${e.provider.toLowerCase()}/${e.provider_organization_id.toLowerCase()}/${e.name.toLowerCase()}`)),null!=n&&null==s&&!0===t?.resolveFromPath&&(s=await this.container.git.getOrOpenRepository(r.Uri.file(n),{closeOnOpen:!0,force:!0})),null!=s&&i.set(e.name,{descriptor:e,repository:s})}return i}async saveAsCodeWorkspaceFile(e){const t=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);if(null==t)return;const i=await t.getRepositoryDescriptors();if(null==i)return;const n=await t.getRepositoriesByName();if(0===n.size)return void r.window.showErrorMessage("No repositories in this workspace could be found locally. Please locate at least one repository.",{modal:!0});const s=[];for(const e of n.values()){const t=e.repository;t.virtual||s.push(t.uri.fsPath)}if(s.length<i.length){const e=await r.window.showWarningMessage("Some repositories in this workspace could not be located locally. Do you want to continue?",{modal:!0},{title:"Continue"},{title:"Cancel",isCloseAffordance:!0});if(null==e||"Cancel"==e.title)return}const o=await r.window.showSaveDialog({defaultUri:r.Uri.file(`${t.name}.code-workspace`),filters:{"Code Workspace":["code-workspace"]},title:"Choose a location for the new code workspace file"});if(null==o)return;const a=await this.chooseCodeWorkspaceAutoAddSetting();if(!await this._workspacesPathProvider.writeCodeWorkspaceFile(o,s,{workspaceId:e,workspaceAutoAddSetting:a}))return void r.window.showErrorMessage("Could not create the new workspace file. Check logs for details");t.setLocalPath(o.fsPath);const l=await r.window.showInformationMessage(`Workspace file created for ${t.name}. Would you like to open it now?`,{modal:!0},{title:"Open in New Window",location:q.Tc.NewWindow},{title:"Open in Current Window",location:q.Tc.CurrentWindow},{title:"Cancel",isCloseAffordance:!0});null!=l&&"Cancel"!=l.title&&this.openCodeWorkspaceFile(e,{location:l.location})}async chooseCodeWorkspaceAutoAddSetting(e){if(e?.current&&(null==r.workspace.workspaceFile||null==this._currentWorkspaceId||null==this._currentWorkspaceAutoAddSetting))return Jt.XU.Disabled;const t=e?.current?this._currentWorkspaceAutoAddSetting:Jt.XU.Disabled,i=[{label:"Add on Workspace (Window) Open",description:this._currentWorkspaceAutoAddSetting===Jt.XU.Enabled?"current":void 0,option:Jt.XU.Enabled},{label:"Prompt on Workspace (Window) Open",description:this._currentWorkspaceAutoAddSetting===Jt.XU.Prompt?"current":void 0,option:Jt.XU.Prompt},{label:"Never",description:this._currentWorkspaceAutoAddSetting===Jt.XU.Disabled?"current":void 0,option:Jt.XU.Disabled}],n=await r.window.showQuickPick(i,{placeHolder:"Choose the behavior of automatically adding missing repositories to the current VS Code workspace",title:"Linked Workspace: Automatically Add Repositories"});if(null==n?.option)return t;const s=n.option;if(e?.current&&null!=r.workspace.workspaceFile){if(!await this._workspacesPathProvider.updateCodeWorkspaceFileSettings(r.workspace.workspaceFile,{workspaceAutoAddSetting:s}))return this._currentWorkspaceAutoAddSetting;this._currentWorkspaceAutoAddSetting=s}return s}async openCodeWorkspaceFile(e,t){const i=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);if(null==i)return;if(null==i.localPath){const t=await r.window.showInformationMessage(`The workspace file for ${i.name} has not been created. Would you like to create it now?`,{modal:!0},{title:"Create"},{title:"Cancel",isCloseAffordance:!0});if(null==t||"Cancel"==t.title)return;return void this.saveAsCodeWorkspaceFile(e)}let n=t?.location===q.Tc.CurrentWindow?q.Tc.CurrentWindow:q.Tc.NewWindow;if(!t?.location){const e=await r.window.showInformationMessage(`How would you like to open the workspace file for ${i.name}?`,{modal:!0},{title:"Open in New Window",location:q.Tc.NewWindow},{title:"Open in Current Window",location:q.Tc.CurrentWindow},{title:"Cancel",isCloseAffordance:!0});if(null==e||"Cancel"==e.title)return;n=e.location??q.Tc.NewWindow}if(!await this._workspacesPathProvider.confirmCloudWorkspaceCodeWorkspaceFilePath(i.id)){await this._workspacesPathProvider.removeCloudWorkspaceCodeWorkspaceFilePath(i.id),i.setLocalPath(void 0);const e=await r.window.showInformationMessage(`The workspace file for ${i.name} could not be found. Would you like to locate it now?`,{modal:!0},{title:"Locate"},{title:"Cancel",isCloseAffordance:!0});if("Locate"!==e?.title)return;const t=(await r.window.showOpenDialog({defaultUri:r.Uri.file(i.localPath),canSelectFiles:!0,canSelectFolders:!1,canSelectMany:!1,filters:{"Code Workspace":["code-workspace"]},title:"Locate the workspace file"}))?.[0]?.fsPath;if(null==t)return;await this._workspacesPathProvider.writeCloudWorkspaceCodeWorkspaceFilePathToMap(i.id,t),i.setLocalPath(t)}(0,q.ic)(r.Uri.file(i.localPath),{location:n})}async getMappedPathForCloudWorkspaceRepoDescriptor(e){let t=await this.getCloudWorkspaceRepoPath(e.workspaceId,e.id);return null==t&&(t=(await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:e.url??void 0,repoInfo:{repoName:e.name,provider:e.provider??void 0,owner:e.provider_organization_id}}))?.[0]),t}}function Xt(e){if(null==e.provider?.owner)return;const t=e.provider.path.split("/").pop();return null!=t?{provider:e.provider.id.toLowerCase(),owner:e.provider.owner.toLowerCase(),repoName:t.toLowerCase(),url:e.provider.url({type:zt.J.Repo})}:void 0}function Zt(){return r.workspace.getConfiguration("gitkraken")?.get("workspaceId")}var ei=Object.defineProperty,ti=Object.getOwnPropertyDescriptor,ii=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?ti(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ei(t,i,s),s};class StatusBarController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),ne.D.onDidChange(this.onConfigurationChanged,this))}_pullRequestCancellation;_tooltipCancellation;_tooltipDelayTimer;_disposable;_statusBarBlame;_statusBarMode;dispose(){this.clearBlame(),this._statusBarBlame?.dispose(),this._statusBarMode?.dispose(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(ne.D.changed(e,"mode")){const t=ne.D.get("mode.statusBar.enabled")?this.container.mode:void 0;if(t?.statusBarItemName){const i="left"!==ne.D.get("mode.statusBar.alignment")?r.StatusBarAlignment.Right:r.StatusBarAlignment.Left;ne.D.changed(e,"mode.statusBar.alignment")&&this._statusBarMode?.alignment!==i&&(this._statusBarMode?.dispose(),this._statusBarMode=void 0),this._statusBarMode=this._statusBarMode??r.window.createStatusBarItem("gitlens.mode",i,i===r.StatusBarAlignment.Right?999:1),this._statusBarMode.name="GitLens Modes",this._statusBarMode.command=s.Gh.SwitchMode,this._statusBarMode.text=t.statusBarItemName,this._statusBarMode.tooltip=new r.MarkdownString(`**${t.statusBarItemName}** ${s.NE.Dash} ${t.description}\n\n---\n\nClick to Switch GitLens Modes`,!0),this._statusBarMode.accessibilityInformation={label:`GitLens Mode: ${t.statusBarItemName}\nClick to Switch GitLens Modes`},this._statusBarMode.show()}else this._statusBarMode?.dispose(),this._statusBarMode=void 0}if(ne.D.changed(e,"statusBar"))if(ne.D.get("statusBar.enabled")){const t="left"!==ne.D.get("statusBar.alignment")?r.StatusBarAlignment.Right:r.StatusBarAlignment.Left;ne.D.changed(e,"statusBar.alignment")&&this._statusBarBlame?.alignment!==t&&(this._statusBarBlame?.dispose(),this._statusBarBlame=void 0),this._statusBarBlame=this._statusBarBlame??r.window.createStatusBarItem("gitlens.blame",t,t===r.StatusBarAlignment.Right?1e3:0),this._statusBarBlame.name="GitLens Current Line Blame",this._statusBarBlame.command=ne.D.get("statusBar.command"),ne.D.changed(e,"statusBar.enabled")&&this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this))}else ne.D.changed(e,"statusBar.enabled")&&(this.container.lineTracker.unsubscribe(this),this._statusBarBlame?.dispose(),this._statusBarBlame=void 0)}onActiveLinesChanged(e){let t=!(ne.D.get("statusBar.reduceFlicker")&&"selection"===e.reason&&(e.pending||null!=e.selections));if(!e.pending&&null!=e.selections){const i=this.container.lineTracker.getState(e.selections[0].active);if(null!=i?.commit)return void this.updateBlame(e.editor,i.commit);t=!0}t?this.clearBlame():null!=this._statusBarBlame&&(this._statusBarBlame.text=this._statusBarBlame.text.replace("$(git-commit)","$(watch)"))}clearBlame(){this._pullRequestCancellation?.cancel(),this._tooltipCancellation?.cancel(),this._statusBarBlame?.hide()}async updateBlame(e,t,i){const n=ne.D.get("statusBar");if(!n.enabled||null==this._statusBarBlame||!(0,q.PH)(e))return;const o=(0,le.UH)(),a=n.pullRequests.enabled&&(We.i.has(n.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")||We.i.has(n.tooltipFormat,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")),[l,c]=await Promise.all([We.i.has(n.format,"tips")||We.i.has(n.tooltipFormat,"tips")?this.container.git.getBranchesAndTagsTipsFn(t.repoPath):void 0,a&&void 0===i?.pr?this.getPullRequest(t,{timeout:100}):i?.pr??void 0]);let h;switch(null!=c&&(this._pullRequestCancellation?.cancel(),this._pullRequestCancellation=new r.CancellationTokenSource,this.waitForPendingPullRequest(e,t,c,this._pullRequestCancellation.token,100,o)),this._statusBarBlame.text=`$(git-commit) ${We.i.fromTemplate(n.format,t,{dateFormat:null===n.dateFormat?ne.D.get("defaultDateFormat"):n.dateFormat,getBranchAndTagTips:l,messageTruncateAtNewLine:!0,pullRequestOrRemote:c,pullRequestPendingMessage:"PR $(watch)"})}`,n.command){case P.ef.CopyRemoteCommitUrl:h="Click to Copy Remote Commit URL";break;case P.ef.CopyRemoteFileUrl:this._statusBarBlame.command=s.Gh.CopyRemoteFileUrl,h="Click to Copy Remote File Revision URL";break;case P.ef.DiffWithPrevious:this._statusBarBlame.command=s.Gh.DiffLineWithPrevious,h="Click to Open Line Changes with Previous Revision";break;case P.ef.DiffWithWorking:this._statusBarBlame.command=s.Gh.DiffLineWithWorking,h="Click to Open Line Changes with Working File";break;case P.ef.OpenCommitOnRemote:h="Click to Open Commit on Remote";break;case P.ef.OpenFileOnRemote:h="Click to Open Revision on Remote";break;case P.ef.RevealCommitInView:h="Click to Reveal Commit in the Side Bar";break;case P.ef.ShowCommitsInView:h="Click to Search for Commit";break;case P.ef.ShowQuickCommitDetails:h="Click to Show Commit";break;case P.ef.ShowQuickCommitFileDetails:h="Click to Show Commit (file)";break;case P.ef.ShowQuickCurrentBranchHistory:h="Click to Show Branch History";break;case P.ef.ShowQuickFileHistory:h="Click to Show File History";break;case P.ef.ToggleCodeLens:h="Click to Toggle Git CodeLens";break;case P.ef.ToggleFileBlame:h="Click to Toggle File Blame";break;case P.ef.ToggleFileChanges:null!=t.file&&(this._statusBarBlame.command=(0,ot._N)({title:"Toggle File Changes",command:s.Gh.ToggleFileChanges,arguments:[t.file.uri,{type:P.VP.Changes,context:{sha:t.sha,only:!1,selection:!1}}]})),h="Click to Toggle File Changes";break;case P.ef.ToggleFileChangesOnly:null!=t.file&&(this._statusBarBlame.command=(0,ot._N)({title:"Toggle File Changes",command:s.Gh.ToggleFileChanges,arguments:[t.file.uri,{type:P.VP.Changes,context:{sha:t.sha,only:!0,selection:!1}}]})),h="Click to Toggle File Changes";break;case P.ef.ToggleFileHeatmap:h="Click to Toggle File Heatmap"}this._statusBarBlame.tooltip=h,this._statusBarBlame.accessibilityInformation={label:`${this._statusBarBlame.text}\n${h}`},null!=this._tooltipDelayTimer&&clearTimeout(this._tooltipDelayTimer),this._tooltipCancellation?.cancel(),this._tooltipDelayTimer=setTimeout((()=>{this._tooltipDelayTimer=void 0,this._tooltipCancellation=new r.CancellationTokenSource,this.updateCommitTooltip(this._statusBarBlame,t,h,l,{enabled:a||null!=c,pr:c},this._tooltipCancellation.token)}),500),this._statusBarBlame.show()}async getPullRequest(e,{timeout:t}={}){const i=await this.container.git.getBestRemoteWithRichProvider(e.repoPath);if(null==i?.provider)return;const{provider:r}=i;try{return await this.container.git.getPullRequestForCommit(e.ref,r,{timeout:t})}catch(e){return e instanceof he.PK?e:void 0}}async updateCommitTooltip(e,t,i,r,n,s){if(s.isCancellationRequested)return;const o=await(0,Me.nN)(t,t.getGitUri(),t.lines[0].line,{autolinks:!0,cancellationToken:s,dateFormat:ne.D.get("defaultDateFormat"),format:ne.D.get("statusBar.tooltipFormat"),getBranchAndTagTips:r,pullRequests:n});s.isCancellationRequested||(o.appendMarkdown(`\n\n---\n\n${i}`),e.tooltip=o,e.accessibilityInformation={label:`${e.text}\n${i}`})}async waitForPendingPullRequest(e,t,i,r,n,o){!r.isCancellationRequested&&i instanceof he.PK&&(S.Yd.debug(o,`${s.NE.Dot} pull request query took too long (over ${n} ms)`),i=await i.promise,r.isCancellationRequested||(S.Yd.debug(o,`${s.NE.Dot} pull request query completed; refreshing...`),this.updateBlame(e,t,{pr:i??null})))}}ii([(0,H.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],StatusBarController.prototype,"onActiveLinesChanged",1),ii([(0,H.fF)({args:!1})],StatusBarController.prototype,"updateBlame",1);var ri=Object.defineProperty,ni=Object.getOwnPropertyDescriptor,si=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?ni(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&ri(t,i,s),s};const oi=Object.create(null),ai=[];class KeyboardScope{_mapping;constructor(e){this._mapping=e;for(const e in this._mapping)this._mapping[e]=this._mapping[e]??oi;ai.push(this._mapping)}async dispose(){const e=ai.indexOf(this._mapping),t=(0,le.UH)();(0,le.lH)(t,` • index=${e}`),e===ai.length-1?(ai.pop(),await this.updateKeyCommandsContext(ai[ai.length-1])):ai.splice(e,1)}_paused=!0;get paused(){return this._paused}async clearKeyCommand(e){const t=(0,le.UH)(),i=ai[ai.length-1];i===this._mapping&&null!=i[e]?(i[e]=void 0,await(0,se.v)(`${s.m1}:key:${e}`,!1)):(0,le.lH)(t," • skipped")}async pause(e){if(this._paused)return;this._paused=!0;const t=Object.keys(this._mapping).reduce(((t,i)=>(t[i]=null==e||e.includes(i)?void 0:this._mapping[i],t)),Object.create(null));await this.updateKeyCommandsContext(t)}async resume(){this._paused&&(this._paused=!1,await this.updateKeyCommandsContext(this._mapping))}async start(){await this.resume()}async setKeyCommand(e,t){const i=(0,le.UH)(),r=ai[ai.length-1];if(r!==this._mapping)return void(0,le.lH)(i," • skipped");const n=Boolean(r[e]);r[e]=t,n||await(0,se.v)(`${s.m1}:key:${e}`,!0)}async updateKeyCommandsContext(e){await Promise.all(s.XP.map((t=>(0,se.v)(`${s.m1}:key:${t}`,Boolean(e?.[t])))))}}si([(0,H.cM)({args:!1,prefix:e=>`${e.prefix}[${ai.length}]`})],KeyboardScope.prototype,"dispose",1),si([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${ai.length}](${t})`})],KeyboardScope.prototype,"clearKeyCommand",1),si([(0,H.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],KeyboardScope.prototype,"pause",1),si([(0,H.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],KeyboardScope.prototype,"resume",1),si([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${ai.length}](${t})`})],KeyboardScope.prototype,"setKeyCommand",1);class Keyboard{_disposable;constructor(){const e=s.XP.map((e=>(0,ot.xR)(`${s.m1}.key.${e}`,(()=>this.execute(e)),this)));this._disposable=r.Disposable.from(...e)}dispose(){this._disposable.dispose()}createScope(e){return new KeyboardScope({...e})}async beginScope(e){const t=this.createScope(e);return await t.start(),t}async execute(e){const t=(0,le.UH)();if(ai.length)try{let i=ai[ai.length-1][e];if("function"==typeof i&&(i=await i()),"function"!=typeof i?.onDidPressKey)return void(0,le.lH)(t," • skipped, no callback");await i.onDidPressKey(e)}catch(e){S.Yd.error(e,t)}else(0,le.lH)(t," • skipped, no mappings")}}si([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${ai.length}](${void 0===t?"":Object.keys(t).join(",")})`})],Keyboard.prototype,"createScope",1),si([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${ai.length}](${void 0===t?"":Object.keys(t).join(",")})`})],Keyboard.prototype,"beginScope",1),si([(0,H.cM)()],Keyboard.prototype,"execute",1);class TelemetryService{constructor(e){this.container=e,e.context.subscriptions.push(ne.D.onDidChange((t=>{ne.D.changed(t,"telemetry.enabled")&&this.ensureTelemetry(e)})),r.env.onDidChangeTelemetryEnabled((()=>this.ensureTelemetry(e)))),this.ensureTelemetry(e)}_enabled=!1;get enabled(){return this._enabled}provider;globalAttributes=new Map;eventQueue=[];dispose(){this.provider?.dispose(),this.provider=void 0}_initializationTimer;ensureTelemetry(e){if(this._enabled=r.env.isTelemetryEnabled&&ne.D.get("telemetry.enabled",void 0,!0),!this._enabled)return null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.eventQueue.length=0,this.provider?.dispose(),void(this.provider=void 0);null==this._initializationTimer&&(this._initializationTimer=setTimeout((()=>this.initializeTelemetry(e)),7500))}async initializeTelemetry(e){if(null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.provider=new((await Promise.resolve().then(i.bind(i,2020))).OpenTelemetryProvider)({env:e.env,extensionId:e.id,extensionVersion:e.version,machineId:r.env.machineId,sessionId:r.env.sessionId,language:r.env.language,platform:(0,ze.Xf)(),vscodeEdition:r.env.appName,vscodeHost:r.env.appHost,vscodeRemoteName:r.env.remoteName??"",vscodeShell:r.env.shell,vscodeUIKind:String(r.env.uiKind),vscodeVersion:r.version},(0,Te.Nx)(),e.debugging),this.eventQueue.length){const e=[...this.eventQueue];this.eventQueue.length=0;for(const{type:t,name:i,data:r,global:n}of e)"sendEvent"===t&&(this.provider.setGlobalAttributes(n),this.provider.sendEvent(i,li(r)))}this.provider.setGlobalAttributes(this.globalAttributes)}sendEvent(e,t,i,r){this._enabled&&(null!=this.provider?this.provider.sendEvent(e,li(t),i,r):this.eventQueue.push({type:"sendEvent",name:e,data:t,global:new Map([...this.globalAttributes]),startTime:i??Date.now(),endTime:r??Date.now()}))}startEvent(e,t,i){if(this._enabled){if(null!=this.provider){const r=this.provider.startEvent(e,li(t),i);return{dispose:()=>r?.end()}}return i=i??Date.now(),{dispose:()=>this.sendEvent(e,t,i,Date.now())}}}setGlobalAttribute(e,t){null==t?this.globalAttributes.delete(e):this.globalAttributes.set(e,t),this.provider?.setGlobalAttributes(this.globalAttributes)}setGlobalAttributes(e){for(const[t,i]of Object.entries(e))null==i?this.globalAttributes.delete(t):this.globalAttributes.set(t,i);this.provider?.setGlobalAttributes(this.globalAttributes)}deleteGlobalAttribute(e){this.globalAttributes.delete(e),this.provider?.setGlobalAttributes(this.globalAttributes)}}function li(e){if(null==e)return;const t=Object.create(null);for(const[i,r]of Object.entries(e))null!=r&&(t[i]=r);return t}class UsageTracker{constructor(e,t){this.container=e,this.storage=t}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}dispose(){}get(e){return this.storage.get("usages")?.[e]}async reset(e){let t=this.storage.get("usages");if(null!=t){if(null==e)return await this.storage.delete("usages"),void this._onDidChange.fire(void 0);t=(0,Mt.iC)(t,e,void 0),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:void 0})}}async track(e){let t=this.storage.get("usages");null==t&&(t=Object.create(null));const i=Date.now();let r=t[e];null==r?(r={count:0,firstUsedAt:i,lastUsedAt:i},t[e]=r):(r.count!==Number.MAX_SAFE_INTEGER&&r.count++,r.lastUsedAt=i),this.container.telemetry.sendEvent("usage/track",{"usage.key":e,"usage.count":r.count}),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:r})}}const ci=/\b(g(?:it)?\b\s*)\b(branch|checkout|cherry-pick|fetch|grep|log|merge|pull|push|rebase|reset|revert|show|stash|status|tag)\b/gi,hi=/\b((?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ,~^:?*[\\]+[^ ./])\b/gi,ui=/^[0-9a-f]{7,40}\.\.\.?[0-9a-f]{7,40}$/,di=/^[0-9a-f]{7,40}$/;class GitTerminalLinkProvider{constructor(e){this.container=e,this.disposable=r.window.registerTerminalLinkProvider(this)}disposable;dispose(){this.disposable.dispose()}async provideTerminalLinks(e){if(0===e.line.trim().length)return[];const t=this.container.git.highlander?.path;if(!t)return[];const i=ne.D.get("terminalLinks.showDetailsView"),r=[];let n,o;const a=new RegExp(hi,hi.flags),l=new RegExp(ci,ci.flags);let c;for(;;){if(c=l.exec(e.line),null!=c){const[e,t,i]=c,n={startIndex:c.index+t.length,length:i.length,tooltip:"Open in Git Command Palette",command:{command:s.Gh.GitCommands,args:{command:i}}};r.push(n)}if(c=a.exec(e.line),null==c)break;const[h,u]=c;if("HEAD"===u.toUpperCase()){const e={startIndex:c.index,length:u.length,tooltip:"Show HEAD",command:{command:s.Gh.ShowQuickBranchHistory,args:{branch:"HEAD",repoPath:t}}};r.push(e);continue}void 0===n&&(n=await this.container.git.getBranches(t));let p=n.values.find((e=>e.name===u));if(null==p&&(p=n.values.find((e=>(0,d.S3)(e.name)===u))),null!=p){const e={startIndex:c.index,length:u.length,tooltip:"Show Branch",command:{command:s.Gh.ShowQuickBranchHistory,args:{repoPath:t,branch:p.name}}};r.push(e);continue}void 0===o&&(o=await this.container.git.getTags(t));const m=o.values.find((e=>e.name===u));if(null==m){if(di.test(u)){if(await this.container.git.validateReference(t,u)){const e={startIndex:c.index,length:u.length,tooltip:"Show Commit",command:i?{command:s.Gh.ShowInDetailsView,args:{repoPath:t,refs:[u]}}:{command:s.Gh.ShowQuickCommit,args:{repoPath:t,sha:u}}};r.push(e)}}else if(ui.test(u)){const e={startIndex:c.index,length:u.length,tooltip:"Show Commits",command:{command:s.Gh.GitCommands,args:{command:"log",state:{repo:t,reference:(0,v.xB)(u,t,{refType:"revision"})}}}};r.push(e)}}else{const e={startIndex:c.index,length:u.length,tooltip:"Show Tag",command:{command:s.Gh.ShowQuickBranchHistory,args:{repoPath:t,tag:m.name}}};r.push(e)}}return r}handleTerminalLink(e){r.commands.executeCommand(e.command.command,e.command.args)}}var pi=Object.defineProperty,mi=Object.getOwnPropertyDescriptor,gi=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?mi(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&pi(t,i,s),s};const fi=class _LineTracker{_onDidChangeActiveLines=new r.EventEmitter;get onDidChangeActiveLines(){return this._onDidChangeActiveLines.event}_disposable;_editor;_state=new Map;dispose(){for(const e of this._subscriptions.keys())this.unsubscribe(e)}onActiveTextEditorChanged(e){e!==this._editor&&(null==e||(0,q.PH)(e))&&(this.reset(),this._editor=e,this._selections=_LineTracker.toLineSelections(e?.selections),this.trigger("editor"))}onTextEditorSelectionChanged(e){if(this._editor!==e.textEditor&&!(0,q.PH)(e.textEditor))return;const t=_LineTracker.toLineSelections(e.selections);this._editor===e.textEditor&&this.includes(t)||(this.reset(),this._editor=e.textEditor,this._selections=t,this.trigger(this._editor===e.textEditor?"selection":"editor"))}getState(e){return this._state.get(e)}setState(e,t){this._state.set(e,t)}_selections;get selections(){return this._selections}includes(e,t){if("number"!=typeof e)return _LineTracker.includes(e,this._selections);if(null==this._selections||0===this._selections.length)return!1;const i=e,r=t?.activeOnly??!0;for(const e of this._selections)if(i===e.active||!r&&(e.anchor>=i&&i>=e.active||e.active>=i&&i>=e.anchor))return!0;return!1}refresh(){this.trigger("editor")}reset(){this._state.clear()}_subscriptions=new Map;subscribed(e){return this._subscriptions.has(e)}subscribe(e,t){const i=(0,le.UH)(),n={dispose:()=>this.unsubscribe(e)},s=0===this._subscriptions.size;let o=this._subscriptions.get(e);return null==o?(o=[t],this._subscriptions.set(e,o)):o.push(t),s&&(S.Yd.debug(i,"Starting line tracker..."),this._disposable=r.Disposable.from(r.window.onDidChangeActiveTextEditor((0,pe.Ds)(this.onActiveTextEditorChanged,0),this),r.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this),this.onStart?.()??{dispose:()=>{}}),queueMicrotask((()=>this.onActiveTextEditorChanged(r.window.activeTextEditor)))),n}unsubscribe(e){const t=this._subscriptions.get(e);if(null!=t){this._subscriptions.delete(e);for(const e of t)e.dispose();0===this._subscriptions.size&&(null!=this._linesChangedDebounced&&this._linesChangedDebounced.cancel(),this._disposable?.dispose(),this._disposable=void 0)}}_suspended=!1;get suspended(){return this._suspended}resume(e){(e?.force||this._suspended)&&(this._suspended=!1,this.onResume?.(),this.trigger("editor"))}suspend(e){!e?.force&&this._suspended||(this._suspended=!0,this.onSuspend?.(),this.trigger("editor"))}fireLinesChanged(e){this._onDidChangeActiveLines.fire(e)}trigger(e){this.onLinesChanged({editor:this._editor,selections:this.selections,reason:e})}_linesChangedDebounced;onLinesChanged(e){null!=e.selections?(null==this._linesChangedDebounced&&(this._linesChangedDebounced=(0,pe.Ds)((e=>{e.editor===r.window.activeTextEditor&&_LineTracker.includes(e.selections,_LineTracker.toLineSelections(e.editor?.selections))&&this.fireLinesChanged(e)}),250)),this._linesChangedDebounced.pending?.()||this.fireLinesChanged({...e,pending:!0}),this._linesChangedDebounced(e)):queueMicrotask((()=>{e.editor===r.window.activeTextEditor&&(null!=this._linesChangedDebounced&&this._linesChangedDebounced.cancel(),this.fireLinesChanged(e))}))}static includes(e,t){if(null==e&&null==t)return!0;if(null==e||null==t||e.length!==t.length)return!1;let i;return e.every(((e,r)=>(i=t[r],e.active===i.active&&e.anchor===i.anchor)))}static toLineSelections(e){return e?.map((e=>({active:e.active.line,anchor:e.anchor.line})))}};gi([(0,H.fF)({args:!1})],fi.prototype,"subscribe",1),gi([(0,H.fF)({args:!1})],fi.prototype,"unsubscribe",1),gi([(0,H.fF)()],fi.prototype,"resume",1),gi([(0,H.fF)()],fi.prototype,"suspend",1);let wi=fi;var vi=Object.defineProperty,yi=Object.getOwnPropertyDescriptor,bi=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?yi(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&vi(t,i,s),s};class GitLineState{constructor(e){this.commit=e,null!=e&&e.file}}class GitLineTracker extends wi{constructor(e){super(),this.container=e}async fireLinesChanged(e){this.reset();let t=!1;this.suspended||e.pending||null==e.selections||null==e.editor||(t=await this.updateState(e.selections,e.editor)),super.fireLinesChanged(t?e:{...e,selections:void 0})}_subscriptionOnlyWhenActive;onStart(){return this.onResume(),r.Disposable.from({dispose:()=>this.onSuspend()},this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))}onResume(){null==this._subscriptionOnlyWhenActive&&(this._subscriptionOnlyWhenActive=this.container.tracker.onDidChangeContent(this.onContentChanged,this))}onSuspend(){this._subscriptionOnlyWhenActive?.dispose(),this._subscriptionOnlyWhenActive=void 0}onBlameStateChanged(e){this.trigger("editor")}onContentChanged(e){e.contentChanges.some((e=>this.selections?.some((t=>e.range.end.line>=t.active&&t.active>=e.range.start.line||e.range.start.line>=t.active&&t.active>=e.range.end.line))))&&this.trigger("editor")}onDirtyIdleTriggered(e){const t=ne.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||this.resume()}onDirtyStateChanged(e){e.dirty?this.suspend():this.resume({force:!0})}async updateState(e,t){const i=(0,le.UH)();if(!this.includes(e))return(0,le.lH)(i,` ${s.NE.Dot} lines no longer match`),!1;const r=await this.container.tracker.getOrAdd(t.document);if(!r.isBlameable)return(0,le.lH)(i,` ${s.NE.Dot} document is not blameable`),!1;if(1===e.length){const n=await this.container.git.getBlameForLine(r.uri,e[0].active,t?.document);if(null==n)return(0,le.lH)(i,` ${s.NE.Dot} blame failed`),!1;this.setState(n.line.line-1,new GitLineState(n.commit))}else{const n=await this.container.git.getBlame(r.uri,t.document);if(null==n)return(0,le.lH)(i,` ${s.NE.Dot} blame failed`),!1;for(const t of e){const e=n.lines[t.active];this.setState(t.active,new GitLineState(n.commits.get(e.sha)))}}return this.includes(e)?r.isBlameable?(t.document.isDirty&&r.setForceDirtyStateChangeOnNextDocumentChange(),!0):((0,le.lH)(i,` ${s.NE.Dot} document is not blameable`),!1):((0,le.lH)(i,` ${s.NE.Dot} lines no longer match`),!1)}}bi([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}, blameable=${e.blameable}`}})],GitLineTracker.prototype,"onBlameStateChanged",1),bi([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}`}})],GitLineTracker.prototype,"onContentChanged",1),bi([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}`}})],GitLineTracker.prototype,"onDirtyIdleTriggered",1),bi([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}, dirty=${e.dirty}`}})],GitLineTracker.prototype,"onDirtyStateChanged",1),bi([(0,H.fF)({args:{0:e=>e?.map((e=>e.active)).join(","),1:e=>e.document.uri.toString(!0)},exit:!0})],GitLineTracker.prototype,"updateState",1);var Ci=i(4794),Ai=i(4043);class DeepLinkService{constructor(e){this.container=e,this._context={state:Ai.mg.Idle},this._onDeepLinkProgressUpdated=new r.EventEmitter,this._disposables.push(e.uri.onDidReceiveUri((async e=>{const t=(0,Ai.lX)(e);if(null!=t&&this._context.state===Ai.mg.Idle){if(this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories,!t.type||!t.repoId&&!t.remoteUrl&&!t.repoPath)return r.window.showErrorMessage("Unable to resolve link"),void S.Yd.warn(`Unable to resolve link - missing basic properties: ${e.toString()}`);if(!Object.values(Ai._n).includes(t.type))return r.window.showErrorMessage("Unable to resolve link"),void S.Yd.warn(`Unable to resolve link - unknown link type: ${e.toString()}`);if(t.type!==Ai._n.Repository&&null==t.targetId)return r.window.showErrorMessage("Unable to resolve link"),void S.Yd.warn(`Unable to resolve link - no target id provided: ${e.toString()}`);if(t.type===Ai._n.Comparison&&null==t.secondaryTargetId)return r.window.showErrorMessage("Unable to resolve link"),void S.Yd.warn(`Unable to resolve link - no secondary target id provided: ${e.toString()}`);this.setContextFromDeepLink(t,e.toString()),await this.processDeepLink()}})));const t=this.container.storage.get("deepLinks:pending");null!=t&&(this.container.storage.delete("deepLinks:pending"),this.processPendingDeepLink(t))}_disposables=[];_context;_onDeepLinkProgressUpdated;dispose(){r.Disposable.from(...this._disposables).dispose()}resetContext(){this._context={state:Ai.mg.Idle,url:void 0,repoId:void 0,repo:void 0,remoteUrl:void 0,remote:void 0,secondaryRemote:void 0,repoPath:void 0,targetId:void 0,secondaryTargetId:void 0,secondaryRemoteUrl:void 0,targetType:void 0,targetSha:void 0}}setContextFromDeepLink(e,t){this._context={...this._context,repoId:e.repoId,targetType:e.type,url:t,remoteUrl:e.remoteUrl,repoPath:e.repoPath,targetId:e.targetId,secondaryTargetId:e.secondaryTargetId,secondaryRemoteUrl:e.secondaryRemoteUrl}}async processPendingDeepLink(e){if(null==e.url)return;const t=(0,Ai.lX)(r.Uri.parse(e.url));if(null==t)return;this._context={state:Ai.mg.CloneOrAddRepo},this.setContextFromDeepLink(t,e.url);let i=Ai.WA.OpenRepo;if(this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories,null!=e.repoPath){const t=r.Uri.parse(e.repoPath);try{const e=await this.container.git.getOrOpenRepository(t,{detectNested:!1});null!=e&&(this._context.repo=e,i=Ai.WA.RepoOpened)}catch{}}queueMicrotask((()=>{this.processDeepLink(i)}))}async getShaForBranch(e){const{repo:t,remote:i,secondaryRemote:r}=this._context;if(!t)return;let n=e;null==i||n.startsWith(`${i.name}/`)?null==r||n.startsWith(`${r.name}/`)||(n=`${r.name}/${n}`):n=`${i.name}/${n}`;let s=await t.getBranch(n);if(null!=s?.sha)return s.sha;if(e.includes(":")){const[i,r]=e.split(":");if(null!=i&&null!=n){const[e,o]=i.split("/");if(null!=e&&null!=o){const i=await t.getRemotes();for(const o of i)if(o.provider?.owner===e&&(n=`${o.name}/${r}`,s=await t.getBranch(n),null!=s?.sha))return s.sha}}}return s=await t.getBranch(e),null!=s?.sha?s.sha:void 0}async getShaForTag(e){const{repo:t}=this._context;if(!t)return;const i=await t.getTag(e);return null!=i?.sha?i.sha:void 0}async getShaForCommit(e){const{repo:t}=this._context;if(t)return await this.container.git.validateReference(t.path,e)?e:void 0}async getShasForComparison(e,t){const i=await this.getComparisonRefSha(e);if(null==i)return;const r=await this.getComparisonRefSha(t);return null!=r?[i,r]:void 0}async getComparisonRefSha(e){if(""===e)return e;if((0,v.D3)(e))return this.getShaForCommit(e);const t=e.toLocaleLowerCase();if(!t.startsWith("refs/tags/")&&!t.startsWith("tags/")){const t=await this.getShaForBranch(e);if(null!=t)return t}const i=await this.getShaForTag(e);return null!=i?i:this.getShaForCommit(e)}async getShasForTargets(){const{repo:e,targetType:t,targetId:i,secondaryTargetId:r}=this._context;if(null!=e&&t!==Ai._n.Repository&&null!=i){if(t===Ai._n.Branch)return this.getShaForBranch(i);if(t===Ai._n.Tag)return this.getShaForTag(i);if(t===Ai._n.Commit)return this.getShaForCommit(i);if(t===Ai._n.Comparison){if(null==r)return;return this.getShasForComparison(i,r)}}}async showOpenTypePrompt(e){const t=[{title:"Open Folder",action:Ai.HP.Folder},{title:"Open Workspace",action:Ai.HP.Workspace}];null!=this._context.remoteUrl&&t.push({title:"Clone",action:Ai.HP.Clone}),e?.includeCurrent&&t.push({title:"Use Current Window",action:Ai.HP.Current}),t.push({title:"Cancel",isCloseAffordance:!0});const i=await r.window.showInformationMessage(e?.customMessage??"No matching repository found. Please choose an option.",{modal:!0},...t);return i?.action}async showOpenLocationPrompt(e){const t=[{title:"Open",action:q.Tc.CurrentWindow},{title:"Open in New Window",action:q.Tc.NewWindow}];e!==Ai.HP.Workspace&&t.push({title:"Add to Workspace",action:q.Tc.AddToWorkspace}),t.push({title:"Cancel",isCloseAffordance:!0});const i=await r.window.showInformationMessage(`Please choose an option to open the repository ${e===Ai.HP.Clone?"after cloning":e}.`,{modal:!0},...t);return i?.action}async showFetchPrompt(){const e=await r.window.showInformationMessage("The link target(s) couldn't be found. Would you like to fetch from the remote?",{modal:!0},{title:"Fetch",action:!0},{title:"Cancel",isCloseAffordance:!0});return e?.action||!1}async showAddRemotePrompt(e,t){let i;const n=await r.window.showInformationMessage(`Unable to find a remote for '${e}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});return"Yes"!==n?.title||(i=await r.window.showInputBox({prompt:"Enter a name for the remote",validateInput:e=>e?t.includes(e)?"A remote with that name already exists":void 0:"A name is required"})),i}async processDeepLink(e=Ai.WA.DeepLinkEventFired){let t="",i=e,n=[];for(queueMicrotask((()=>{r.window.withProgress({cancellable:!0,location:r.ProgressLocation.Notification,title:`Opening repository for link: ${this._context.url}}`},((e,t)=>(e.report({increment:0}),new Promise((i=>{t.onCancellationRequested((()=>{queueMicrotask((()=>this.processDeepLink(Ai.WA.DeepLinkCancelled))),i()})),this._disposables.push(this._onDeepLinkProgressUpdated.event((({message:t,increment:r})=>{e.report({message:t,increment:r}),100===r&&i()})))})))))}));;){this._context.state=Ai.eT[this._context.state][i];const{state:e,repoId:o,repo:a,url:l,remoteUrl:c,secondaryRemoteUrl:h,remote:u,secondaryRemote:d,repoPath:p,targetId:m,secondaryTargetId:g,targetSha:f,secondaryTargetSha:w,targetType:y}=this._context;switch(this._onDeepLinkProgressUpdated.fire(Ai.gn[e]),e){case Ai.mg.Idle:return i===Ai.WA.DeepLinkErrored&&(r.window.showErrorMessage("Unable to resolve link"),S.Yd.warn(`Unable to resolve link - ${t}: ${l}`)),void this.resetContext();case Ai.mg.RepoMatch:case Ai.mg.AddedRepoMatch:{if(!o&&!c&&!p){i=Ai.WA.DeepLinkErrored,t="No repository id, remote url or path was provided.";break}let r="",s="";null!=c&&([,r,s]=(0,Ci.Sk)(c));for(const e of this.container.git.repositories){if(null!=p&&(0,ce.AH)(e.path.toLowerCase())===(0,ce.AH)(p.toLowerCase())){this._context.repo=e,i=Ai.WA.RepoMatched;break}if(null!=r&&null!=s){const t=await e.getRemotes({filter:e=>e.matches(r,s)});if(t.length>0){this._context.repo=e,this._context.remote=t[0],i=Ai.WA.RepoMatched;break}}if(null!=o&&"-"!==o&&await this.container.git.validateReference(e.path,o)){this._context.repo=e,i=Ai.WA.RepoMatched;break}}if(!this._context.repo&&e===Ai.mg.RepoMatch&&(n=await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:c}),n.length>0)){i=Ai.WA.RepoMatchedInLocalMapping;break}this._context.repo||(e===Ai.mg.RepoMatch?i=Ai.WA.RepoMatchFailed:(i=Ai.WA.DeepLinkErrored,t="No matching repository found."));break}case Ai.mg.CloneOrAddRepo:{if(!o&&!c&&!p){i=Ai.WA.DeepLinkErrored,t="Missing repository id, remote url and path.";break}let e,s,a;if(n.length>0){if(e=await r.window.showQuickPick([...n,"Choose a different location"],{placeHolder:"Matching repository found. Choose a location to open it."}),null==e){i=Ai.WA.DeepLinkCancelled;break}"Choose a different location"!==e&&(a=r.Uri.file(e),s=Ai.HP.Folder)}if(null==s&&(s=await this.showOpenTypePrompt({customMessage:"Choose a different location"===e?"Please choose an option to open the repository":void 0})),!s){i=Ai.WA.DeepLinkCancelled;break}const l=await this.showOpenLocationPrompt(s);if(!l){i=Ai.WA.DeepLinkCancelled;break}if(null==a&&(a=(await r.window.showOpenDialog({title:`Choose a ${s===Ai.HP.Workspace?"workspace":"folder"} to ${s===Ai.HP.Clone?"clone the repository to":"open the repository"}`,canSelectFiles:s===Ai.HP.Workspace,canSelectFolders:s!==Ai.HP.Workspace,canSelectMany:!1,...s===Ai.HP.Workspace&&{filters:{Workspaces:["code-workspace"]}}}))?.[0]),!a){i=Ai.WA.DeepLinkCancelled;break}if(null!=a&&null!=c&&s===Ai.HP.Clone){let e;try{e=await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Cloning repository for link: ${this._context.url}}`},(async()=>this.container.git.clone(c,a?.fsPath??"")))}catch{i=Ai.WA.DeepLinkErrored,t="Unable to clone repository";break}if(!e){i=Ai.WA.DeepLinkErrored,t="Unable to clone repository";break}a=r.Uri.file(e)}if(s!==Ai.HP.Current&&s!==Ai.HP.Workspace&&!n.includes(a.fsPath)){const e=await this.container.git.getOrOpenRepository(a,{closeOnOpen:!0,detectNested:!1});null!=e&&await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:c},e.uri.fsPath)}l===q.Tc.AddToWorkspace&&(r.workspace.workspaceFolders?.length||0)>1?i=Ai.WA.OpenRepo:(await this.container.storage.store("deepLinks:pending",{url:this._context.url,repoPath:a.toString()}),i=Ai.WA.DeepLinkStored),(0,q.ic)(a,{location:l});break}case Ai.mg.OpeningRepo:return void this._disposables.push((0,de.IH)(this.container.git.onDidChangeRepositories)((()=>{queueMicrotask((()=>this.processDeepLink(Ai.WA.RepoAdded)))})));case Ai.mg.RemoteMatch:if(p&&a&&!c&&!h){i=Ai.WA.RemoteMatchUnneeded;break}if(!a||!c&&!h){i=Ai.WA.DeepLinkErrored,t="Missing repository or remote url.";break}if(c&&!u){const e=await a.getRemotes({filter:e=>e.url===c});e.length>0&&(this._context.remote=e[0])}if(h&&!d){const e=await a.getRemotes({filter:e=>e.url===h});e.length>0&&(this._context.secondaryRemote=e[0])}i=c&&!this._context.remote||h&&!this._context.secondaryRemote?Ai.WA.RemoteMatchFailed:Ai.WA.RemoteMatched;break;case Ai.mg.AddRemote:{if(!a||!c&&!h){i=Ai.WA.DeepLinkErrored,t="Missing repository or remote url.";break}let e,r;if(c&&!u&&(e=await this.showAddRemotePrompt(c,(await a.getRemotes()).map((e=>e.name))),e)){try{await a.addRemote(e,c,{fetch:!0})}catch{i=Ai.WA.DeepLinkErrored,t="Failed to add remote.";break}if([this._context.remote]=await a.getRemotes({filter:e=>e.url===c}),!this._context.remote){i=Ai.WA.DeepLinkErrored,t="Failed to add remote.";break}}if(h&&!d&&(r=await this.showAddRemotePrompt(h,(await a.getRemotes()).map((e=>e.name))),r)){try{await a.addRemote(r,h,{fetch:!0})}catch{i=Ai.WA.DeepLinkErrored,t="Failed to add remote.";break}if([this._context.secondaryRemote]=await a.getRemotes({filter:e=>e.url===h}),!this._context.secondaryRemote){i=Ai.WA.DeepLinkErrored,t="Failed to add remote.";break}}this._context.secondaryRemote&&!this._context.remote&&(this._context.remote=this._context.secondaryRemote),e||r?this._context.remote||(i=Ai.WA.DeepLinkErrored,t="Failed to add remote."):i=Ai.WA.DeepLinkCancelled,i=Ai.WA.RemoteAdded;break}case Ai.mg.TargetMatch:case Ai.mg.FetchedTargetMatch:if(!a||!y){i=Ai.WA.DeepLinkErrored,t="Missing repository or target type.";break}if(y===Ai._n.Repository){i=Ai.WA.TargetMatched;break}if(y===Ai._n.Comparison?[this._context.targetSha,this._context.secondaryTargetSha]=await this.getShasForTargets()??[]:this._context.targetSha=await this.getShasForTargets(),null==this._context.targetSha||null==this._context.secondaryTargetSha&&y===Ai._n.Comparison){e===Ai.mg.TargetMatch&&null!=u?i=Ai.WA.TargetMatchFailed:(i=Ai.WA.DeepLinkErrored,t=`No matching ${null==f?"target":"secondary target"} found.`);break}i=y===Ai._n.Comparison?Ai.WA.TargetsMatched:Ai.WA.TargetMatched;break;case Ai.mg.Fetch:if(!a||!u){i=Ai.WA.DeepLinkErrored,t="Missing repository or remote.";break}if(!await this.showFetchPrompt()){i=Ai.WA.DeepLinkCancelled;break}try{await a.fetch({remote:u.name,progress:!0})}catch{i=Ai.WA.DeepLinkErrored,t="Error fetching remote.";break}if(d&&d.name!==u.name)try{await a.fetch({remote:d.name,progress:!0})}catch{}i=Ai.WA.TargetFetched;break;case Ai.mg.OpenGraph:if(!a||!y){i=Ai.WA.DeepLinkErrored,t="Missing repository or target type.";break}if(y===Ai._n.Repository){await(0,ot.P0)(s.Gh.ShowInCommitGraph,a),i=Ai.WA.DeepLinkResolved;break}if(!f){i=Ai.WA.DeepLinkErrored,t=`Cannot find target ${y} in repo.`;break}await(0,ot.P0)(s.Gh.ShowInCommitGraph,{ref:(0,v.xB)(f,a.path)}),i=Ai.WA.DeepLinkResolved;break;case Ai.mg.OpenComparison:if(!a){i=Ai.WA.DeepLinkErrored,t="Missing repository.";break}if(null==m||null==g||null==f||null==w){i=Ai.WA.DeepLinkErrored,t="Missing target or secondary target.";break}await this.container.searchAndCompareView.compare(a.path,""===g||(0,v.D3)(g)?g:{label:g,ref:w},""===m||(0,v.D3)(m)?m:{label:m,ref:f}),i=Ai.WA.DeepLinkResolved;break;default:i=Ai.WA.DeepLinkErrored,t="Unknown state."}}}async copyDeepLinkUrl(e,t,i,n){const s=await("string"==typeof e?this.generateDeepLinkUrl(e,t,i,n):this.generateDeepLinkUrl(e,t));await r.env.clipboard.writeText(s.toString())}async generateDeepLinkUrl(e,t,i,n){const s="string"!=typeof e?e.repoPath:e;let o,a,l,c;try{o=await this.container.git.getUniqueRepositoryId(s)}catch{o="-"}if("string"!=typeof e)switch(e.refType){case"branch":a=Ai._n.Branch,l=e.remote?(0,d.S3)(e.name):e.name;break;case"revision":a=Ai._n.Commit,l=e.ref;break;case"tag":a=Ai._n.Tag,l=e.name}null!=i&&null!=n&&(a=Ai._n.Comparison,l=i.label??i.ref,c=n.label??n.ref);const h=ne.D.get("deepLinks.schemeOverride"),u=h?!0===h?r.env.uriScheme:h:"vscode";let p;p=a===Ai._n.Comparison?`/${a}/${c}...${l}`:null!=a&&a!==Ai._n.Repository?`/${a}/${l}`:"";const m=new URL(`${u}://${this.container.context.extension.id}/${Ai.I$.DeepLink}/${Ai._n.Repository}/${o}${p}`);m.searchParams.set("url",t);(new URLSearchParams).set("url",t);let g="";"dev"===this.container.env?g="dev.":"staging"===this.container.env&&(g="staging.");return new URL(`https://${g}gitkraken.dev/link/${encodeURIComponent(Buffer.from(m.href).toString("base64"))}`)}}var Pi=Object.defineProperty,Si=Object.getOwnPropertyDescriptor;class UriService{constructor(e){this.container=e,this._disposable=r.window.registerUriHandler(this)}_disposable;_onDidReceiveAuthenticationUri=new r.EventEmitter;get onDidReceiveAuthenticationUri(){return this._onDidReceiveAuthenticationUri.event}_onDidReceiveUri=new r.EventEmitter;get onDidReceiveUri(){return this._onDidReceiveUri.event}dispose(){this._disposable.dispose()}handleUri(e){const[,t]=e.path.split("/");t!==Pt?this._onDidReceiveUri.fire(e):this._onDidReceiveAuthenticationUri.fire(e)}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?Si(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&Pi(t,i,s)})([(0,H.cM)({args:{0:e=>e.with({query:""}).toString(!0)}})],UriService.prototype,"handleUri",1);var Ri=i(3608),Di=i(7382),ki=i(4004),_i=i(6922),Ti=i(5517),Fi=i(5688),Oi=Object.defineProperty,Ei=Object.getOwnPropertyDescriptor,$i=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ei(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Oi(t,i,s),s};class BranchesRepositoryNode extends _i.vb{async getChildren(){return null==this.child&&(this.child=new Ri.r(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(b.I6.Config,b.I6.Heads,b.I6.Index,b.I6.Remotes,b.I6.RemoteProviders,b.I6.Status,b.I6.Unknown,b.du.Any)}}class BranchesViewNode extends _i.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No branches could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new BranchesRepositoryNode(u.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getBranches({filter:e=>!e.remote});return 0===t.values.length?(this.view.message="No branches could be found.",this.view.title="Branches",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Branches (${t.values.length})`,e.getChildren())}return this.view.title="Branches",this.children}getTreeItem(){return new r.TreeItem("Branches",r.TreeItemCollapsibleState.Expanded)}}class BranchesView extends Ti._{configKey="branches";constructor(e){super(e,"branches","Branches","branchesView")}get canReveal(){return this.config.reveal||!ne.D.get("views.repositories.showBranches")}getRoot(){return new BranchesViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches"),this.refresh(!0))),this),(0,Fi.i)(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout(P.CZ.List)),this),(0,Fi.i)(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout(P.CZ.Tree)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(P.Vc.Auto)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(P.Vc.List)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(P.Vc.Tree)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateLocale")||ne.D.changed(e,"defaultDateShortFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle")||ne.D.changed(e,"defaultGravatarsStyle")||ne.D.changed(e,"defaultTimeFormat")||ne.D.changed(e,"sortBranchesBy"))}findBranch(e,t){if(e.remote)return;const{repoPath:i}=e;return this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:4,canTraverse:e=>e instanceof BranchesViewNode||(e instanceof BranchesRepositoryNode||e instanceof ki.n)&&e.repoPath===i,token:t})}async findCommit(e,t){const{repoPath:i}=e,r=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,p.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==r.length)return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:async t=>t instanceof BranchesViewNode||(t instanceof BranchesRepositoryNode||t instanceof ki.n?t.repoPath===i:!!(t instanceof Di.E&&t.repoPath===i&&r.includes(t.branch.name))&&(await t.loadMore({until:e.ref}),!0)),token:t})}revealBranch(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,v.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findBranch(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,v.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findCommit(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof _i.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof BranchesViewNode||e instanceof _i.vb});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return ne.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return ne.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return ne.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return ne.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&P.DH.Branch)}async setShowBranchPullRequest(e){await ne.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await ne.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}$i([(0,oe.H)((()=>""))],BranchesView.prototype,"revealBranch",1),$i([(0,oe.H)((()=>""))],BranchesView.prototype,"revealCommit",1),$i([(0,oe.H)((()=>""))],BranchesView.prototype,"revealRepository",1);var Ii=i(9354),xi=i(2601),Bi=i(2925),Wi=i(21),Mi=i(9719),Li=Object.defineProperty,Ui=Object.getOwnPropertyDescriptor,Ni=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ui(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Li(t,i,s),s};class CommitsRepositoryNode extends _i.vb{async getChildren(){if(null==this.child){const e=await this.repo.getBranch();if(null==e)return this.view.message="No commits could be found.",[];let t;if(this.view.message=void 0,this.view.state.myCommitsOnly){const e=await this.view.container.git.getCurrentUser(this.repo.path);null!=e&&(t=[{name:e.name,email:e.email,username:e.username,id:e.id}])}this.child=new Di.E(this.uri,this.view,this.splatted?this.parent??this:this,this.repo,e,!0,{expanded:!0,limitCommits:!this.splatted,showComparison:this.view.config.showBranchComparison,showCurrent:!1,showTracking:!0,authors:t})}return this.child.getChildren()}async refresh(e=!1){e?this.child=void 0:this.parent?.triggerChange(!1),await this.ensureSubscription()}async subscribe(){const e=await(this.repo?.getLastFetched())??0,t=b._j.getLastFetchedUpdateInterval(e);return 0!==e&&t>0?r.Disposable.from(await super.subscribe(),(0,pe.DH)((()=>{t!==b._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)}),t)):super.subscribe()}changed(e){return e.changed(b.I6.Config,b.I6.Heads,b.I6.Index,b.I6.Remotes,b.I6.RemoteProviders,b.I6.Status,b.I6.Unknown,b.du.Any)}}Ni([(0,oe.H)(),(0,H.fF)()],CommitsRepositoryNode.prototype,"refresh",1),Ni([(0,H.fF)()],CommitsRepositoryNode.prototype,"subscribe",1);class CommitsViewNode extends _i.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No commits could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new CommitsRepositoryNode(u.YY.fromRepoPath(e.path),this.view,this,e,t,{showBranchAndLastFetched:!0})))}const e=ne.D.get("plusFeatures.enabled")&&null==this.view.container.usage.get("graphView:shown")&&null==this.view.container.usage.get("graphWebview:shown")?new Wi.$h(this.view,this,(0,ot.fA)(s.Gh.ShowGraph,"Show Commit Graph"),"Visualize commits on the Commit Graph ✨",void 0,"Visualize commits on the Commit Graph ✨",new r.ThemeIcon("gitlens-graph")):void 0;if(1===this.children.length){const[t]=this.children,i=await t.repo.getBranch();if(null!=i){const e=await t.repo.getLastFetched()??0,r=i.getTrackingStatus();this.view.description=`${r?`${r} ${s.NE.Dot} `:""}${i.name}${i.rebasing?" (Rebasing)":""}${e?` ${s.NE.Dot} Last fetched ${b._j.formatLastFetched(e)}`:""}`}return null==e?t.getChildren():[e,...await t.getChildren()]}return null==e?this.children:[e,...this.children]}getTreeItem(){return new r.TreeItem("Commits",r.TreeItemCollapsibleState.Expanded)}}class CommitsView extends Ti._{configKey="commits";constructor(e){super(e,"commits","Commits","commitsView"),this.disposables.push(e.usage.onDidChange(this.onUsageChanged,this))}onUsageChanged(e){null!=e&&"graphView:shown"!==e.key&&"graphWebview:shown"!==e.key||this.refresh()}get canReveal(){return this.config.reveal||!ne.D.get("views.repositories.showCommits")}_state={};get state(){return this._state}getRoot(){return new CommitsViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","status","tags"),this.refresh(!0))),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(P.Vc.Auto)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(P.Vc.List)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(P.Vc.Tree)),this),(0,Fi.i)(this.getQualifiedCommand("setMyCommitsOnlyOn"),(()=>this.setMyCommitsOnly(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setMyCommitsOnlyOff"),(()=>this.setMyCommitsOnly(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateLocale")||ne.D.changed(e,"defaultDateShortFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle")||ne.D.changed(e,"defaultGravatarsStyle")||ne.D.changed(e,"defaultTimeFormat")||ne.D.changed(e,"plusFeatures.enabled"))}onSelectionChanged(e){super.onSelectionChanged(e),this.notifySelections()}onVisibilityChanged(e){super.onVisibilityChanged(e),e.visible&&this.notifySelections()}notifySelections(){const e=this.selection?.[0];null!=e&&((e instanceof Bi.D||e instanceof Mi.m||e instanceof xi.R)&&this.container.events.fire("commit:selected",{commit:e.commit,interaction:"passive",preserveFocus:!0,preserveVisibility:!0},{source:this.id}),(e instanceof Mi.m||e instanceof xi.R)&&this.container.events.fire("file:selected",{uri:e.uri,preserveFocus:!0,preserveVisibility:!0},{source:this.id}))}async findCommit(e,t){const{repoPath:i}=e,r=await this.container.git.getBranch(e.repoPath);if(null==r)return;return(await this.container.git.getCommitBranches(e.repoPath,e.ref,{branch:r.name,commitDate:(0,p.f_)(e)?e.committer.date:void 0})).length?this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:2,canTraverse:async t=>{if(t instanceof CommitsViewNode){let i=await(t.getSplattedChild?.());return i instanceof CommitsRepositoryNode&&(i=await(i.getSplattedChild?.()),i instanceof Di.E&&await i.loadMore({until:e.ref})),!0}if(t instanceof CommitsRepositoryNode&&t.repoPath===i){const i=await(t.getSplattedChild?.());if(i instanceof Di.E)return await i.loadMore({until:e.ref}),!0}return t instanceof Ii.V&&t.repoPath===i},token:t}):void 0}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,v.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findCommit(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof _i.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof CommitsViewNode||e instanceof _i.vb});return void 0!==i&&await this.reveal(i,t),i}setFilesLayout(e){return ne.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setMyCommitsOnly(e){(0,se.v)("gitlens:views:commits:myCommitsOnly",e),this.state.myCommitsOnly=e,this.refresh(!0)}setShowAvatars(e){return ne.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return ne.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&P.DH.Working)}async setShowBranchPullRequest(e){await ne.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await ne.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}Ni([(0,oe.H)((()=>""))],CommitsView.prototype,"revealCommit",1),Ni([(0,oe.H)((()=>""))],CommitsView.prototype,"revealRepository",1);var Gi=i(5310),Hi=i(4562),Vi=Object.defineProperty,qi=Object.getOwnPropertyDescriptor,Qi=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?qi(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Vi(t,i,s),s};class ContributorsRepositoryNode extends _i.vb{async getChildren(){return null==this.child&&(this.child=new Hi.I(this.uri,this.view,this,this.repo)),this.child.getChildren()}async subscribe(){return r.Disposable.from(await super.subscribe(),(0,Qe.cL)((e=>this.child?.updateAvatar(e.email))))}changed(e){return e.changed(b.I6.Config,b.I6.Heads,b.I6.Remotes,b.I6.Unknown,b.du.Any)}}Qi([(0,H.fF)()],ContributorsRepositoryNode.prototype,"subscribe",1);class ContributorsViewNode extends _i.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No contributors could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new ContributorsRepositoryNode(u.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.getChildren();return 0===t.length?(this.view.message="No contributors could be found.",this.view.title="Contributors",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Contributors (${t.length})`,t)}return this.view.title="Contributors",this.children}getTreeItem(){return new r.TreeItem("Contributors",r.TreeItemCollapsibleState.Expanded)}}class ContributorsView extends Ti._{configKey="contributors";constructor(e){super(e,"contributors","Contributors","contributorsView")}get canReveal(){return this.config.reveal||!ne.D.get("views.repositories.showContributors")}getRoot(){return new ContributorsViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("contributors"),this.refresh(!0))),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(P.Vc.Auto)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(P.Vc.List)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(P.Vc.Tree)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAllBranchesOn"),(()=>this.setShowAllBranches(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAllBranchesOff"),(()=>this.setShowAllBranches(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowStatisticsOn"),(()=>this.setShowStatistics(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowStatisticsOff"),(()=>this.setShowStatistics(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateLocale")||ne.D.changed(e,"defaultDateShortFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle")||ne.D.changed(e,"defaultGravatarsStyle")||ne.D.changed(e,"defaultTimeFormat")||ne.D.changed(e,"sortContributorsBy"))}findContributor(e,t){const{repoPath:i,username:r,email:n,name:s}=e;return this.findNode((e=>e instanceof Gi.K&&e.contributor.username===r&&e.contributor.email===n&&e.contributor.name===s),{maxDepth:2,canTraverse:e=>e instanceof ContributorsViewNode||e instanceof ContributorsRepositoryNode&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof _i.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof ContributorsViewNode||e instanceof _i.vb});return void 0!==i&&await this.reveal(i,t),i}async revealContributor(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing contributor '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findContributor(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}setFilesLayout(e){return ne.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAllBranches(e){return ne.D.updateEffective(`views.${this.configKey}.showAllBranches`,e)}setShowAvatars(e){return ne.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowStatistics(e){return ne.D.updateEffective(`views.${this.configKey}.showStatistics`,e)}}Qi([(0,oe.H)((()=>""))],ContributorsView.prototype,"revealRepository",1),Qi([(0,oe.H)((()=>""))],ContributorsView.prototype,"revealContributor",1);var Yi=i(145),ji=i(1614);const zi=" (pinned)";class FileHistoryView extends Ti._{configKey="fileHistory";_followCursor=!1;_followEditor=!0;constructor(e){super(e,"fileHistory","File History","fileHistoryView"),(0,se.v)("gitlens:views:fileHistory:cursorFollowing",this._followCursor),(0,se.v)("gitlens:views:fileHistory:editorFollowing",this._followEditor)}get showCollapseAll(){return!1}getRoot(){return this._followCursor?new ji.A(this):new Yi._(this)}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),(0,Fi.i)(this.getQualifiedCommand("changeBase"),(()=>this.changeBase()),this),(0,Fi.i)(this.getQualifiedCommand("setCursorFollowingOn"),(()=>this.setCursorFollowing(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setCursorFollowingOff"),(()=>this.setCursorFollowing(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setEditorFollowingOn"),(()=>this.setEditorFollowing(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setEditorFollowingOff"),(()=>this.setEditorFollowing(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setRenameFollowingOn"),(()=>this.setRenameFollowing(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setRenameFollowingOff"),(()=>this.setRenameFollowing(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAllBranchesOn"),(()=>this.setShowAllBranches(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAllBranchesOff"),(()=>this.setShowAllBranches(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateLocale")||ne.D.changed(e,"defaultDateShortFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle")||ne.D.changed(e,"defaultGravatarsStyle")||ne.D.changed(e,"defaultTimeFormat")||ne.D.changed(e,"advanced.fileHistoryFollowsRenames")||ne.D.changed(e,"advanced.fileHistoryShowAllBranches"))}async showHistoryForUri(e){this.setCursorFollowing(!1);const t=this.ensureRoot(!0);return t instanceof Yi._&&(await t.showHistoryForUri(e),this.setEditorFollowing(!1)),this.show()}changeBase(){this.root?.changeBase()}setCursorFollowing(e){const t=!this._followEditor&&this.root?.hasUri?this.root.uri:void 0;this._followCursor=e,(0,se.v)("gitlens:views:fileHistory:cursorFollowing",e),this.title=this._followCursor?"Line History":"File History";const i=this.ensureRoot(!0);null!=t&&i.setUri(t),i.setEditorFollowing(this._followEditor),i.ensureSubscription(),this.refresh(!0)}setEditorFollowing(e){const t=this.ensureRoot();t.hasUri&&(this._followEditor=e,(0,se.v)("gitlens:views:fileHistory:editorFollowing",e),t.setEditorFollowing(e),this.description?.endsWith(zi)?e&&(this.description=this.description.substr(0,this.description.length-9)):e||null==this.description||(this.description+=zi),e&&(t.ensureSubscription(),this.refresh(!0)))}setRenameFollowing(e){return ne.D.updateEffective("advanced.fileHistoryFollowsRenames",e)}setShowAllBranches(e){return ne.D.updateEffective("advanced.fileHistoryShowAllBranches",e)}setShowAvatars(e){return ne.D.updateEffective(`views.${this.configKey}.avatars`,e)}}const Ki=" (pinned)";class LineHistoryView extends Ti._{configKey="lineHistory";constructor(e){super(e,"lineHistory","Line History","lineHistoryView"),(0,se.v)("gitlens:views:lineHistory:editorFollowing",!0)}get showCollapseAll(){return!1}getRoot(){return new ji.A(this)}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),(0,Fi.i)(this.getQualifiedCommand("changeBase"),(()=>this.changeBase()),this),(0,Fi.i)(this.getQualifiedCommand("setEditorFollowingOn"),(()=>this.setEditorFollowing(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setEditorFollowingOff"),(()=>this.setEditorFollowing(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateLocale")||ne.D.changed(e,"defaultDateShortFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle")||ne.D.changed(e,"defaultGravatarsStyle")||ne.D.changed(e,"defaultTimeFormat"))}changeBase(){this.root?.changeBase()}setEditorFollowing(e){const t=this.ensureRoot();t.hasUri&&((0,se.v)("gitlens:views:lineHistory:editorFollowing",e),this.root?.setEditorFollowing(e),this.description?.endsWith(Ki)?e&&(this.description=this.description.substr(0,this.description.length-9)):e||null==this.description||(this.description+=Ki),e&&(t.ensureSubscription(),this.refresh(!0)))}setShowAvatars(e){return ne.D.updateEffective(`views.${this.configKey}.avatars`,e)}}var Ji=i(3479),Xi=i(5478),Zi=i(3636);class ComparePickerNode extends _i.Re{constructor(e,t,i){super(u.Wj,e,t),this.selectedRef=i}order=Date.now();pinned=!1;get canDismiss(){return!0}getChildren(){return[]}getTreeItem(){const e=this.selectedRef,t=e?.repoPath;let i,n;if(void 0!==t&&this.view.container.git.repositoryCount>1){const e=this.view.container.git.getRepository(t);i=e?.formattedName??t}return null==e?(n=new r.TreeItem("Compare <branch, tag, or ref> with <branch, tag, or ref>",r.TreeItemCollapsibleState.None),n.contextValue=_i.Td.ComparePicker,n.description=i,n.tooltip=`Click to select or enter a reference for compare${s.NE.Ellipsis}`,n.command={title:`Compare${s.NE.Ellipsis}`,command:this.view.getQualifiedCommand("selectForCompare")}):(n=new r.TreeItem(`Compare ${e.label} with <branch, tag, or ref>`,r.TreeItemCollapsibleState.None),n.contextValue=_i.Td.ComparePickerWithRef,n.description=i,n.tooltip=`Click to compare ${e.label} with${s.NE.Ellipsis}`,n.command={title:`Compare ${e.label} with${s.NE.Ellipsis}`,command:this.view.getQualifiedCommand("compareWithSelected")}),n}}var er=i(5538),tr=i(812),ir=i(4655),rr=Object.defineProperty,nr=Object.getOwnPropertyDescriptor,sr=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?nr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&rr(t,i,s),s};class SearchAndCompareViewNode extends _i.Re{splatted=!0;comparePicker;constructor(e){super(u.Wj,e)}_children;get children(){if(null==this._children){this._children=[];const e=this.view.getPinned();0!==e.length&&this._children.push(...e)}return this._children}getChildren(){return 0===this.children.length?[]:(this.view.message=void 0,this.children.sort(((e,t)=>(e.pinned?-1:1)-(t.pinned?-1:1)||t.order-e.order)))}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("SearchAndCompare",r.TreeItemCollapsibleState.Expanded);return e.contextValue=_i.Td.SearchAndCompare,e}addOrReplace(e,t){this.children.includes(e)||(t&&this.clear(),this.children.push(e),this.view.triggerNodeChange())}clear(e=!1){if(0===this.children.length)return;this.removeComparePicker(!0);const t=this._children.findIndex((e=>!e.pinned));-1!==t&&this._children.splice(t,this._children.length),e||this.view.triggerNodeChange()}dismiss(e){if(e===this.comparePicker)return void this.removeComparePicker();if(0===this.children.length)return;const t=this.children.indexOf(e);-1!==t&&(this.children.splice(t,1),this.view.triggerNodeChange())}async refresh(){if(0===this.children.length)return;const e=[...(0,st.DZ)(this.children,(e=>{const t=void 0!==e.refresh&&e.refresh();return(0,he.tI)(t)?t:void 0}))];await Promise.all(e)}async compareWithSelected(e,t){const i=this.comparePicker?.selectedRef;if(null!=i){if(null==e)e=i.repoPath;else if(e!==i.repoPath)return void this.selectForCompare(e,t);if(null==t){const r=await(0,Zi.V)(e,`Compare ${this.getRefName(i.ref)} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:"string"==typeof i.ref?i.ref:i.ref.ref,include:Zi.H.BranchesAndTags|Zi.H.HEAD,sort:{branches:{current:!0}}});if(null==r)return void(null!=this.comparePicker&&(await this.view.show(),await this.view.reveal(this.comparePicker,{focus:!0,select:!0})));t=r.ref}this.removeComparePicker(),await this.view.compare(e,i.ref,t)}}async selectForCompare(e,t,i){if(null==e&&(e=(await(0,Kt.vJ)("Compare"))?.path),null==e)return;this.removeComparePicker(!0);let r,n=i?.prompt??!1;if(null==t){const i=await(0,Zi.V)(e,"Compare","Choose a reference to compare",{allowEnteringRefs:{ranges:!0},include:Zi.H.BranchesAndTags|Zi.H.HEAD|Zi.H.WorkingTree,sort:{branches:{current:!0},tags:{}}});if(null==i)return void await this.triggerChange();if(t=i.ref,(0,v.yk)(t)){const e=(0,v.t6)(t);null!=e&&(t=e.ref1||"HEAD",r=e.ref2||"HEAD")}n=!0}this.comparePicker=new ComparePickerNode(this.view,this,{label:this.getRefName(t),repoPath:e,ref:t}),this.children.unshift(this.comparePicker),(0,se.v)("gitlens:views:canCompare",!0),await this.triggerChange(),await this.view.reveal(this.comparePicker,{focus:!1,select:!0}),n&&await this.compareWithSelected(e,r)}getRefName(e){return"string"==typeof e?(0,v.zL)(e,{strings:{working:"Working Tree"}}):e.label??(0,v.zL)(e.ref)}removeComparePicker(e=!1){if((0,se.v)("gitlens:views:canCompare",!1),null!=this.comparePicker){const t=this.children.indexOf(this.comparePicker);-1!==t&&(this.children.splice(t,1),e||this.triggerChange()),this.comparePicker=void 0}}}sr([(0,H.cM)()],SearchAndCompareViewNode.prototype,"clear",1),sr([(0,H.cM)({args:{0:e=>e.toString()}})],SearchAndCompareViewNode.prototype,"dismiss",1),sr([(0,oe.H)(),(0,H.fF)()],SearchAndCompareViewNode.prototype,"refresh",1);class SearchAndCompareView extends Ti._{configKey="searchAndCompare";constructor(e){super(e,"searchAndCompare","Search & Compare","searchAndCompareView"),(0,se.v)("gitlens:views:searchAndCompare:keepResults",this.keepResults)}getRoot(){return new SearchAndCompareViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("clear"),(()=>this.clear()),this),(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(P.Vc.Auto)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(P.Vc.List)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(P.Vc.Tree)),this),(0,Fi.i)(this.getQualifiedCommand("setKeepResultsToOn"),(()=>this.setKeepResults(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setKeepResultsToOff"),(()=>this.setKeepResults(!1)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,Fi.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),(0,Fi.i)(this.getQualifiedCommand("pin"),this.pin,this),(0,Fi.i)(this.getQualifiedCommand("unpin"),this.unpin,this),(0,Fi.i)(this.getQualifiedCommand("swapComparison"),this.swapComparison,this),(0,Fi.i)(this.getQualifiedCommand("selectForCompare"),(()=>this.selectForCompare())),(0,Fi.i)(this.getQualifiedCommand("compareWithSelected"),this.compareWithSelected,this),(0,Fi.i)(this.getQualifiedCommand("setFilesFilterOnLeft"),(e=>this.setFilesFilter(e,tr.W.Left)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesFilterOnRight"),(e=>this.setFilesFilter(e,tr.W.Right)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesFilterOff"),(e=>this.setFilesFilter(e,void 0)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateLocale")||ne.D.changed(e,"defaultDateShortFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle")||ne.D.changed(e,"defaultGravatarsStyle")||ne.D.changed(e,"defaultTimeFormat"))}get keepResults(){return this.container.storage.getWorkspace("views:searchAndCompare:keepResults",!0)}clear(){this.root?.clear()}dismissNode(e){null!=this.root&&(e instanceof ComparePickerNode||e instanceof er.f||e instanceof ir.V)&&e.canDismiss&&this.root.dismiss(e)}compare(e,t,i){return this.addResults(new er.f(this,this.ensureRoot(),e,"string"==typeof t?{ref:t}:t,"string"==typeof i?{ref:i}:i))}compareWithSelected(e,t){this.ensureRoot().compareWithSelected(e,t)}selectForCompare(e,t,i){this.ensureRoot().selectForCompare(e,t,i)}async search(e,t,{label:i,reveal:r},n,s){this.visible||await this.show();const o={label:`Results ${"string"==typeof i?i:i.label}`,queryLabel:i};null==s?await this.addResults(new ir.V(this,this.root,e,t,o,n),r):await s.edit({pattern:t,labels:o,log:n})}getPinned(){let e=this.container.storage.getWorkspace("views:searchAndCompare:pinned");if(null==e){const t=this.container.storage.getWorkspace("pinned:comparisons");if(null==t)return[];e=Object.create(null);for(const i of Object.values(t))e[er.f.getPinnableId(i.path,i.ref1.ref,i.ref2.ref)]={type:"comparison",timestamp:Date.now(),path:i.path,ref1:i.ref1,ref2:i.ref2};this.container.storage.storeWorkspace("views:searchAndCompare:pinned",e),this.container.storage.deleteWorkspace("pinned:comparisons")}const t=Object.create(null);let i=!1;const r=this.ensureRoot(),n=Object.entries(e).sort((([,e],[,t])=>(t.timestamp??0)-(e.timestamp??0))).map((([e,n])=>{if("comparison"===n.type){const s=er.f.getPinnableId(n.path,n.ref1.ref,n.ref2.ref);return e!==s?(i=!0,t[s]=n):t[e]=n,new er.f(this,r,n.path,{label:n.ref1.label,ref:n.ref1.ref??n.ref1.name??n.ref1.sha},{label:n.ref2.label,ref:n.ref2.ref??n.ref2.name??n.ref2.sha},n.timestamp)}const s=ir.V.getPinnableId(n.path,n.search);return e!==s?(i=!0,t[s]=n):t[e]=n,new ir.V(this,r,n.path,(0,re.uP)(n.search),n.labels,void 0,n.timestamp)}));return i&&this.container.storage.storeWorkspace("views:searchAndCompare:pinned",t),n}async updatePinned(e,t){let i=this.container.storage.getWorkspace("views:searchAndCompare:pinned");i=(0,Mt.iC)(i,e,t),await this.container.storage.storeWorkspace("views:searchAndCompare:pinned",i),this.triggerNodeChange(this.ensureRoot())}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof _i.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof SearchAndCompareViewNode||e instanceof _i.vb});return void 0!==i&&await this.reveal(i,t),i}async addResults(e,t={expand:!0,focus:!0,select:!0}){this.visible||await this.show();this.ensureRoot().addOrReplace(e,!this.keepResults),queueMicrotask((()=>this.reveal(e,t)))}setFilesLayout(e){return ne.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setKeepResults(e){this.container.storage.storeWorkspace("views:searchAndCompare:keepResults",e),(0,se.v)("gitlens:views:searchAndCompare:keepResults",e)}setShowAvatars(e){return ne.D.updateEffective(`views.${this.configKey}.avatars`,e)}pin(e){if(e instanceof er.f||e instanceof ir.V)return e.pin()}setFilesFilter(e,t){e instanceof tr.V&&(e.filter=t)}swapComparison(e){if(e instanceof er.f)return e.swap()}unpin(e){if(e instanceof er.f||e instanceof ir.V)return e.unpin()}}sr([(0,oe.H)((()=>""))],SearchAndCompareView.prototype,"revealRepository",1);var or=i(727),ar=i(2758),lr=i(1101),cr=Object.defineProperty,hr=Object.getOwnPropertyDescriptor,ur=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?hr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&cr(t,i,s),s};class StashesRepositoryNode extends _i.vb{async getChildren(){return null==this.child&&(this.child=new or.m(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(b.I6.Stash,b.I6.Unknown,b.du.Any)}}class StashesViewNode extends _i.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No stashes could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new StashesRepositoryNode(u.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getStash();return null==t||0===t.commits.size?(this.view.message="No stashes could be found.",this.view.title="Stashes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Stashes (${t.commits.size})`,e.getChildren())}return this.view.title="Stashes",this.children}getTreeItem(){return new r.TreeItem("Stashes",r.TreeItemCollapsibleState.Expanded)}}class StashesView extends Ti._{configKey="stashes";constructor(e){super(e,"stashes","Stashes","stashesView")}get canReveal(){return this.config.reveal||!ne.D.get("views.repositories.showStashes")}getRoot(){return new StashesViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("stashes"),this.refresh(!0))),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(P.Vc.Auto)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(P.Vc.List)),this),(0,Fi.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(P.Vc.Tree)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||ne.D.changed(e,"defaultDateFormat")||ne.D.changed(e,"defaultDateLocale")||ne.D.changed(e,"defaultDateShortFormat")||ne.D.changed(e,"defaultDateSource")||ne.D.changed(e,"defaultDateStyle")||ne.D.changed(e,"defaultGravatarsStyle")||ne.D.changed(e,"defaultTimeFormat"))}onSelectionChanged(e){super.onSelectionChanged(e),this.notifySelections()}onVisibilityChanged(e){super.onVisibilityChanged(e),e.visible&&this.notifySelections()}notifySelections(){const e=this.selection?.[0];null!=e&&((e instanceof lr.i||e instanceof ar.y)&&this.container.events.fire("commit:selected",{commit:e.commit,interaction:"passive",preserveFocus:!0,preserveVisibility:!0},{source:this.id}),e instanceof ar.y&&this.container.events.fire("file:selected",{uri:e.uri,preserveFocus:!0,preserveVisibility:!0},{source:this.id}))}findStash(e,t){const{repoPath:i}=e;return this.findNode((t=>t.commit?.ref===e.ref),{maxDepth:2,canTraverse:e=>e instanceof StashesViewNode||e instanceof StashesRepositoryNode&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof _i.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof StashesViewNode||e instanceof _i.vb});return void 0!==i&&await this.reveal(i,t),i}async revealStash(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,v.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findStash(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}setFilesLayout(e){return ne.D.updateEffective(`views.${this.configKey}.files.layout`,e)}}ur([(0,oe.H)((()=>""))],StashesView.prototype,"revealRepository",1),ur([(0,oe.H)((()=>""))],StashesView.prototype,"revealStash",1);var dr=i(9137),pr=i(4398);class ViewFileDecorationProvider{_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}disposable;constructor(){this.disposable=r.Disposable.from(r.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"===e.scheme)return"branch"===e.authority?this.provideBranchCurrentDecoration(e,t):"remote"===e.authority?this.provideRemoteDefaultDecoration(e,t):"workspaces"===e.authority?this.provideWorkspaceDecoration(e,t):void 0}}),r.window.registerFileDecorationProvider(this))}dispose(){this.disposable.dispose()}provideWorkspaceDecoration(e,t){const[,i,n]=e.path.split("/");if("repository"===i){if("open"===n)return{badge:"●",color:new r.ThemeColor("gitlens.decorations.workspaceRepoOpenForegroundColor"),tooltip:""};if("missing"===n)return{badge:"?",color:new r.ThemeColor("gitlens.decorations.workspaceRepoMissingForegroundColor"),tooltip:""}}if("workspace"===i&&"current"===n)return{badge:"●",color:new r.ThemeColor("gitlens.decorations.workspaceCurrentForegroundColor"),tooltip:""}}provideFileDecoration(e,t){if(e.scheme===s.sN.Git){const t=(0,pr.h)(e);null!=t?.decoration&&(e=r.Uri.parse(t?.decoration))}if("gitlens-view"===e.scheme)switch(e.authority){case"branch":return this.provideBranchStatusDecoration(e,t);case"commit-file":return this.provideCommitFileStatusDecoration(e,t)}}provideCommitFileStatusDecoration(e,t){const[,,i]=e.path.split("/");switch(i){case"!":return{badge:"I",color:new r.ThemeColor("gitlens.decorations.ignoredForegroundColor"),tooltip:"Ignored"};case"?":return{badge:"U",color:new r.ThemeColor("gitlens.decorations.untrackedForegroundColor"),tooltip:"Untracked"};case"A":return{badge:"A",color:new r.ThemeColor("gitlens.decorations.addedForegroundColor"),tooltip:"Added"};case"C":return{badge:"C",color:new r.ThemeColor("gitlens.decorations.copiedForegroundColor"),tooltip:"Copied"};case"D":return{badge:"D",color:new r.ThemeColor("gitlens.decorations.deletedForegroundColor"),tooltip:"Deleted"};case"M":return{badge:"M",tooltip:"Modified"};case"R":return{badge:"R",color:new r.ThemeColor("gitlens.decorations.renamedForegroundColor"),tooltip:"Renamed"};default:return}}provideBranchStatusDecoration(e,t){const[,,i]=e.path.split("/");switch(i){case d.Yu.Ahead:return{badge:"▲",color:new r.ThemeColor("gitlens.decorations.branchAheadForegroundColor"),tooltip:"Ahead"};case d.Yu.Behind:return{badge:"▼",color:new r.ThemeColor("gitlens.decorations.branchBehindForegroundColor"),tooltip:"Behind"};case d.Yu.Diverged:return{badge:"▼▲",color:new r.ThemeColor("gitlens.decorations.branchDivergedForegroundColor"),tooltip:"Diverged"};case d.Yu.MissingUpstream:return{badge:"!",color:new r.ThemeColor("gitlens.decorations.branchMissingUpstreamForegroundColor"),tooltip:"Missing Upstream"};case d.Yu.UpToDate:return{badge:"",color:new r.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor"),tooltip:"Up to Date"};case d.Yu.Unpublished:return{badge:"▲+",color:new r.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor"),tooltip:"Unpublished"};default:return}}provideBranchCurrentDecoration(e,t){const[,,i,n]=e.path.split("/");if(!n)return;let o;switch(i){case d.Yu.Ahead:o=new r.ThemeColor("gitlens.decorations.branchAheadForegroundColor");break;case d.Yu.Behind:o=new r.ThemeColor("gitlens.decorations.branchBehindForegroundColor");break;case d.Yu.Diverged:o=new r.ThemeColor("gitlens.decorations.branchDivergedForegroundColor");break;case d.Yu.UpToDate:o=new r.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor");break;case d.Yu.Unpublished:o=new r.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor")}return{badge:s.NE.Check,color:o,tooltip:"Current Branch"}}provideRemoteDefaultDecoration(e,t){const[,i]=e.path.split("/");if(i)return{badge:s.NE.Check,tooltip:"Default Remote"}}}var mr=i(9100);class WorkspaceMissingRepositoryNode extends _i.Re{constructor(e,t,i,r){super(u.Wj,e,t),this.workspace=i,this.wsRepositoryDescriptor=r,this.updateContext({wsRepositoryDescriptor:r}),this._uniqueId=(0,_i.tO)("missing-workspace-repository",this.context)}get id(){return this._uniqueId}toClipboard(){return this.name}get name(){return this.wsRepositoryDescriptor.name}get workspaceId(){return this.wsRepositoryDescriptor.workspaceId}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.name,r.TreeItemCollapsibleState.None);return e.id=this.id,e.description="missing",e.tooltip=new r.MarkdownString(`${this.name}\n\nRepository could not be found`),e.contextValue=_i.Td.WorkspaceMissingRepository,e.iconPath=new r.ThemeIcon("question",new r.ThemeColor("gitlens.decorations.workspaceRepoMissingForegroundColor")),e.resourceUri=r.Uri.parse("gitlens-view://workspaces/repository/missing"),e}}var gr=Object.defineProperty,fr=Object.getOwnPropertyDescriptor,wr=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?fr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&gr(t,i,s),s};class WorkspaceNode extends _i.CF{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.workspace=r,this.updateContext({workspace:r}),this._uniqueId=(0,_i.tO)("workspace",this.context)}dispose(){super.dispose(),this.resetChildren()}resetChildren(){if(null!=this._children){for(const e of this._children)"dispose"in e&&e.dispose();this._children=void 0}}get id(){return this._uniqueId}toClipboard(){return this.workspace.name}_children;async getChildren(){if(null==this._children){this._children=[];try{const e=await this.workspace.getRepositoryDescriptors();if(null==e||0===e.length)return this._children.push(new Wi.$h(this.view,this,(0,ot.fA)("gitlens.views.workspaces.addRepos","Add Repositories...",this),"No repositories")),this._children;const t=await this.workspace.getRepositoriesByName({force:!0});for(const i of e){const e=t.get(i.name)?.repository;e?this._children.push(new mr.q(u.YY.fromRepoPath(e.path),this.view,this,e,this.getNewContext({wsRepositoryDescriptor:i}))):this._children.push(new WorkspaceMissingRepositoryNode(this.view,this,this.workspace,i))}}catch(e){return[new Wi.AE(this.view,this,"Failed to load repositories")]}}return this._children}async getTreeItem(){const e=new r.TreeItem(this.workspace.name,r.TreeItemCollapsibleState.Collapsed);let t=`${_i.Td.Workspace}`;e.resourceUri=void 0;const i=[];return this.workspace.type===Jt.EI.Cloud?t+="+cloud":t+="+local",this.workspace.current&&(t+="+current",i.push("current"),e.resourceUri=r.Uri.parse("gitlens-view://workspaces/workspace/current")),null!=this.workspace.localPath&&(t+="+hasPath"),0===(await this.workspace.getRepositoryDescriptors())?.length&&(t+="+empty"),e.id=this.id,e.contextValue=t,e.iconPath=new r.ThemeIcon(this.workspace.type==Jt.EI.Cloud?"cloud":"folder"),e.tooltip=`${this.workspace.name}\n${this.workspace.type===Jt.EI.Cloud?"Cloud Workspace "+(this.workspace.shared?"(Shared)":""):"Local Workspace"}${this.workspace.type===Jt.EI.Cloud&&null!=this.workspace.provider?`\nProvider: ${this.workspace.provider}`:""}`,this.workspace.type===Jt.EI.Cloud&&null!=this.workspace.organizationId&&i.push("shared"),e.description=i.join(", "),e}refresh(e=!1){null!=this._children&&e&&this.resetChildren()}etag(){return this.view.container.git.etag}subscribe(){return r.Disposable.from(this.view.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this))}onRepositoriesChanged(e){this.triggerChange(!0)}}wr([(0,oe.H)(),(0,H.fF)()],WorkspaceNode.prototype,"refresh",1),wr([(0,H.fF)()],WorkspaceNode.prototype,"subscribe",1);var vr=i(7424),yr=Object.defineProperty,br=Object.getOwnPropertyDescriptor;class WorkspacesViewNode extends _i.Re{_children;async getChildren(){if(null==this._children){const e=[],{cloudWorkspaces:t,cloudWorkspaceInfo:i,localWorkspaces:r,localWorkspaceInfo:n}=await this.view.container.workspaces.getWorkspaces();if(t.length||r.length){e.push(new vr.S(this.view));for(const i of t)e.push(new WorkspaceNode(this.uri,this.view,this,i));null!=i&&e.push(new Wi.AE(this.view,this,i));for(const t of r)e.push(new WorkspaceNode(this.uri,this.view,this,t));0===t.length&&null==i&&e.push(new Wi.AE(this.view,this,"No cloud workspaces found.")),null!=n&&e.push(new Wi.AE(this.view,this,n))}this._children=e}return this._children}getTreeItem(){return new r.TreeItem("Workspaces",r.TreeItemCollapsibleState.Expanded)}refresh(){if(null!=this._children){if(this._children.length)for(const e of this._children)"dispose"in e&&e.dispose();this._children=void 0}}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?br(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&yr(t,i,s)})([(0,oe.H)(),(0,H.fF)()],WorkspacesViewNode.prototype,"refresh",1);class WorkspacesView extends Ti._{configKey="repositories";_disposable;constructor(e){super(e,"workspaces","Workspaces","workspaceView"),this.description="PREVIEW  ☁️"}dispose(){this._disposable?.dispose(),super.dispose()}get canSelectMany(){return!1}getRoot(){return new WorkspacesViewNode(u.Wj,this)}async show(e){if(await(0,Ut.C)())return null==this._disposable&&(this._disposable=r.Disposable.from(this.container.workspaces.onDidResetWorkspaces((()=>{this.ensureRoot().triggerChange(!0)})))),super.show(e)}get canReveal(){return!1}registerCommands(){return this.container.viewCommands,[(0,Fi.i)(this.getQualifiedCommand("info"),(()=>r.env.openExternal(r.Uri.parse("https://help.gitkraken.com/gitlens/side-bar/#workspaces-☁%ef%b8%8f"))),this),(0,Fi.i)(this.getQualifiedCommand("copy"),(()=>(0,ot.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,Fi.i)(this.getQualifiedCommand("refresh"),(()=>{this.container.workspaces.resetWorkspaces()}),this),(0,Fi.i)(this.getQualifiedCommand("addRepos"),(async e=>{await this.container.workspaces.addCloudWorkspaceRepos(e.workspace.id),e.getParent()?.triggerChange(!0)})),(0,Fi.i)(this.getQualifiedCommand("addReposFromLinked"),(async e=>{await this.container.workspaces.addMissingCurrentWorkspaceRepos({force:!0}),e.getParent()?.triggerChange(!0)})),(0,Fi.i)(this.getQualifiedCommand("convert"),(async e=>{const t=[];for(const i of e.getChildren())i instanceof mr.q&&t.push(i.repo);0!==t.length&&(await this.container.workspaces.createCloudWorkspace({repos:t}),this.ensureRoot().triggerChange(!0))}),this),(0,Fi.i)(this.getQualifiedCommand("create"),(async()=>{await this.container.workspaces.createCloudWorkspace(),this.ensureRoot().triggerChange(!0)}),this),(0,Fi.i)(this.getQualifiedCommand("createLocal"),(async e=>{await this.container.workspaces.saveAsCodeWorkspaceFile(e.workspace.id),this.ensureRoot().triggerChange(!0)}),this),(0,Fi.i)(this.getQualifiedCommand("openLocal"),(async e=>{await this.container.workspaces.openCodeWorkspaceFile(e.workspace.id,{location:q.Tc.CurrentWindow}),this.ensureRoot().triggerChange(!0)}),this),(0,Fi.i)(this.getQualifiedCommand("openLocalNewWindow"),(async e=>{await this.container.workspaces.openCodeWorkspaceFile(e.workspace.id,{location:q.Tc.NewWindow})}),this),(0,Fi.i)(this.getQualifiedCommand("changeAutoAddSetting"),(async()=>{await this.container.workspaces.chooseCodeWorkspaceAutoAddSetting({current:!0})}),this),(0,Fi.i)(this.getQualifiedCommand("delete"),(async e=>{await this.container.workspaces.deleteCloudWorkspace(e.workspace.id),e.getParent()?.triggerChange(!0)}),this),(0,Fi.i)(this.getQualifiedCommand("locateAllRepos"),(async e=>{e.workspace.type===Jt.EI.Cloud&&(await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Locating Repositories for '${e.workspace.name}'...`,cancellable:!0},((t,i)=>this.container.workspaces.locateAllCloudWorkspaceRepos(e.workspace.id,i))),e.triggerChange(!0))}),this),(0,Fi.i)(this.getQualifiedCommand("repo.locate"),(async e=>{const t=e.wsRepositoryDescriptor;null!=t&&null!=e.workspace?.id&&(await this.container.workspaces.locateWorkspaceRepo(e.workspace.id,t),e.getParent()?.triggerChange(!0))}),this),(0,Fi.i)(this.getQualifiedCommand("repo.openInNewWindow"),(e=>{const t=e.getParent();null!=t&&t instanceof WorkspaceNode&&(0,q.ic)(e.repo.uri,{location:q.Tc.NewWindow})}),this),(0,Fi.i)(this.getQualifiedCommand("repo.open"),(e=>{const t=e.getParent();null!=t&&t instanceof WorkspaceNode&&(0,q.ic)(e.repo.uri,{location:q.Tc.CurrentWindow})}),this),(0,Fi.i)(this.getQualifiedCommand("repo.addToWindow"),(e=>{const t=e.getParent();null!=t&&t instanceof WorkspaceNode&&(0,q.ic)(e.repo.uri,{location:q.Tc.AddToWorkspace})}),this),(0,Fi.i)(this.getQualifiedCommand("repo.remove"),(async e=>{const t=e.wsRepositoryDescriptor;null!=t?.id&&null!=e.workspace?.id&&(await this.container.workspaces.removeCloudWorkspaceRepo(e.workspace.id,t),e.getParent()?.getParent()?.triggerChange(!0))}))]}}var Cr=i(7933),Ar=i(6767);class RequestType{constructor(e){this.name=e}}const Pr=new RequestType("git"),Sr=new RequestType("git/logStreamTo"),Rr=new RequestType("repositories/inFolder");var Dr=Object.defineProperty,kr=Object.getOwnPropertyDescriptor,_r=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?kr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Dr(t,i,s),s};const Tr=()=>!0,Fr=new Map([["blame",Tr],["branch",e=>"--contains"===e[1]],["cat-file",Tr],["check-mailmap",Tr],["check-ref-format",Tr],["config",e=>"--get"===e[1]||"--get-regex"===e[1]],["diff",Tr],["difftool",Tr],["for-each-ref",Tr],["log",Tr],["ls-files",Tr],["ls-tree",Tr],["merge-base",Tr],["remote",e=>"-v"===e[1]||"get-url"===e[1]],["rev-list",Tr],["rev-parse",Tr],["show",Tr],["show-ref",Tr],["stash",e=>"list"===e[1]],["status",Tr],["symbolic-ref",Tr],["tag",e=>"-l"===e[1]],["worktree",e=>"list"===e[1]]]),Or=/^[/|\\]/,Er=class _VslsHostService{constructor(e,t,i){this._api=e,this._service=t,this.container=i,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this._disposable=r.Disposable.from(r.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this)),this.onRequest(Pr,this.onGitCommandRequest.bind(this)),this.onRequest(Sr,this.onGitLogStreamToCommandRequest.bind(this)),this.onRequest(Rr,this.onGetRepositoriesForUriRequest.bind(this)),this.onWorkspaceFoldersChanged()}static ServiceId="proxy";static async share(e,t){const i=await e.shareService(this.ServiceId);if(null==i)throw new Error("Failed to share host service");return new _VslsHostService(e,i,t)}_disposable;_localPathsRegex;_localToSharedPaths=new Map;_sharedPathsRegex;_sharedToLocalPaths=new Map;dispose(){this._disposable.dispose(),this._api.unshareService(_VslsHostService.ServiceId)}onRequest(e,t){this._service.onRequest(e.name,(function(e,i){let r;for(const t of e)if("object"==typeof t&&"__type"in t){r=t;break}return t(r??e[0],i)}))}onAvailabilityChanged(e){}onWorkspaceFoldersChanged(e){if(null==r.workspace.workspaceFolders||0===r.workspace.workspaceFolders.length)return;const t=(0,le.UH)();let i,n;this._localToSharedPaths.clear(),this._sharedToLocalPaths.clear();for(const e of r.workspace.workspaceFolders)i=(0,ce.AH)(e.uri.fsPath),n=(0,ce.AH)(this.convertLocalUriToShared(e.uri).toString()),S.Yd.debug(t,`shared='${n}' ↔ local='${i}'`),this._localToSharedPaths.set(i,n),this._sharedToLocalPaths.set(n,i);let s=(0,ae.v_)(this._sharedToLocalPaths.values(),"|");s=s.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._localPathsRegex=new RegExp(`(${s})`,"gi");let o=(0,ae.v_)(this._localToSharedPaths.values(),"|");o=o.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._sharedPathsRegex=new RegExp(`^(${o})`,"i")}async onGitCommandRequest(e,t){const i=Fr.get(e.args[0]);if(null==i||!i(e.args))throw new Error(`Git ${e.args[0]} command is not allowed`);const{options:r,args:n}=e,[s,o]=this.convertGitCommandCwd(r.cwd);r.cwd=s;let a=await function(e,...t){return Promise.resolve("")}(r,...this.convertGitCommandArgs(n,o));return"string"==typeof a?(null!=this._localPathsRegex&&a.length>0&&(a=a.replace(this._localPathsRegex,((e,t)=>{const i=this._localToSharedPaths.get((0,ce.AH)(t));return null!=i?i:t}))),{data:a}):{data:a.toString("binary"),isBuffer:!0}}async onGitLogStreamToCommandRequest(e,t){const{options:i,args:r}=e,[n,s]=this.convertGitCommandCwd(e.repoPath);let[o,a]=await function(e,t,i,r,...n){return Promise.resolve([[""],0])}(n,e.sha,e.limit,i,...this.convertGitCommandArgs(r,s));return null!=this._localPathsRegex&&o.length>0&&(o=o.map((e=>e.replace(this._localPathsRegex,((e,t)=>{const i=this._localToSharedPaths.get((0,ce.AH)(t));return null!=i?i:t}))))),{data:o,count:a}}async onGetRepositoriesForUriRequest(e,t){const i=[],n=this.convertSharedUriToLocal(r.Uri.parse(e.folderUri,!0)),s=this.container.git.getRepository(n);if(null!=s){const e=this.convertLocalUriToShared(s.uri);i.push({folderUri:e.toString(),root:s.root,closed:s.closed})}return{repositories:i}}convertLocalUriToShared(e){const t=(0,le.UH)();let i=this._api.convertLocalUriToShared(e);S.Yd.debug(t,`LiveShare.convertLocalUriToShared(${e.toString(!0)}) returned ${i.toString(!0)}`);const n=e.path;let s=i.path;if(i.authority.length>0&&(s=`/${i.authority}${s}`),new RegExp(`${n}$`,"i").test(s))if(s.length===n.length){const t=r.workspace.getWorkspaceFolder(e);i=i.with({path:`/~${t.index}`})}else i=i.with({path:s.substr(0,s.length-n.length)});else if(!s.startsWith("/~")){const t=r.workspace.getWorkspaceFolder(e);i=i.with({path:`/~${t.index}${s}`})}return i}convertGitCommandCwd(e){let t=!1;if(null!=e&&e.length>0&&null!=this._sharedToLocalPaths)if(this._sharedPathsRegex?.test(e))e=(0,ce.AH)(e).replace(this._sharedPathsRegex,((e,i)=>{t||(t="/~0"===i);const r=this._sharedToLocalPaths.get(i);return null!=r?r:i}));else if(Or.test(e)){const i=this._sharedToLocalPaths.get("vsls:/~0");null!=i&&(t=!0,e=(0,ce.AH)(this.container.git.getAbsoluteUri(e,i).fsPath))}return[e,t]}convertGitCommandArgs(e,t){let i=!1,r=-1;for(const n of e)r++,"--"!==n?i&&"string"==typeof n&&(t&&Or.test(n[0])&&e.splice(r,1,n.substr(1)),this._sharedPathsRegex?.test(n)&&e.splice(r,1,(0,ce.AH)(n).replace(this._sharedPathsRegex,((e,t)=>{const i=this._sharedToLocalPaths.get(t);return null!=i?i:t})))):i=!0;return e}convertSharedUriToLocal(e){(0,ce.tD)(e.path)&&(e=e.with({path:`${e.path}/`}));const t=this._api.convertSharedUriToLocal(e);let i=t.path;const r=e.path;return i.endsWith(r)&&(i=i.substr(0,i.length-r.length)),47===i.charCodeAt(i.length-1)&&(i=i.slice(0,-1)),t.with({path:i})}};_r([(0,H.cM)()],Er.prototype,"onAvailabilityChanged",1),_r([(0,H.fF)()],Er.prototype,"onWorkspaceFoldersChanged",1),_r([(0,H.cM)()],Er.prototype,"onGitCommandRequest",1),_r([(0,H.cM)()],Er.prototype,"onGitLogStreamToCommandRequest",1),_r([(0,H.cM)()],Er.prototype,"onGetRepositoriesForUriRequest",1),_r([(0,H.fF)({exit:!0})],Er.prototype,"convertLocalUriToShared",1),_r([(0,H.cM)()],Er,"share",1);let $r=Er;var Ir=Object.defineProperty,xr=Object.getOwnPropertyDescriptor,Br=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?xr(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Ir(t,i,s),s};const Wr=class _VslsGuestService{constructor(e,t,i){this._api=e,this._service=t,this.container=i,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this.onAvailabilityChanged(t.isServiceAvailable)}static async connect(e,t){const i=(0,le.UH)();try{const i=await e.getSharedService($r.ServiceId);if(null==i)throw new Error("Failed to connect to host service");return new _VslsGuestService(e,i,t)}catch(e){return void S.Yd.error(e,i)}}dispose(){}onAvailabilityChanged(e){e?this.container.git.setEnabledContext(!0):(this.container.git.setEnabledContext(!1),r.window.showWarningMessage("GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed."))}async git(e,...t){const i=await this.sendRequest(Pr,{__type:"gitlens",options:e,args:t});return i.isBuffer?Buffer.from(i.data,"binary"):i.data}async gitLogStreamTo(e,t,i,r,...n){const s=await this.sendRequest(Sr,{__type:"gitlens",repoPath:e,sha:t,limit:i,options:r,args:n});return[s.data,s.count]}async getRepositoriesForUri(e){return(await this.sendRequest(Rr,{__type:"gitlens",folderUri:e.toString()})).repositories}sendRequest(e,t,i){return this._service.request(e.name,[t],i)}};Br([(0,H.cM)()],Wr.prototype,"onAvailabilityChanged",1),Br([(0,H.cM)()],Wr.prototype,"git",1),Br([(0,H.cM)()],Wr.prototype,"gitLogStreamTo",1),Br([(0,H.cM)()],Wr.prototype,"getRepositoriesForUri",1),Br([(0,H.fF)()],Wr.prototype,"sendRequest",1),Br([(0,H.cM)()],Wr,"connect",1);let Mr=Wr;var Lr=Object.defineProperty,Ur=Object.getOwnPropertyDescriptor,Nr=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ur(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Lr(t,i,s),s};function Gr(e){switch(e){case"available":return{status:"online",statusText:"Available"};case"away":return{status:"away",statusText:"Away"};case"busy":return{status:"busy",statusText:"Busy"};case"doNotDisturb":return{status:"dnd",statusText:"DND"};default:return{status:"offline",statusText:"Offline"}}}class VslsController{constructor(e){this.container=e,this._ready=(0,he.PQ)(),this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this))}_api;_disposable;_guest;_host;_ready;dispose(){this._ready.fulfill(),this._disposable.dispose(),this._host?.dispose(),this._guest?.dispose()}onReady(){this.initialize()}async initialize(){r.workspace.workspaceFolders?.some((e=>e.uri.scheme===s.sN.Vsls))&&this.setReadonly(!0);try{this._api=this.getLiveShareApi();const e=await this._api;if(null==e)return(0,se.v)("gitlens:vsls",!1),void this._ready.fulfill();(0,se.v)("gitlens:vsls",!0),this._disposable=r.Disposable.from(this._disposable,e.onDidChangeSession((t=>this.onLiveShareSessionChanged(e,t)),this)),this.onLiveShareSessionChanged(e,{session:e.session})}catch(e){S.Yd.error(e)}}async onLiveShareSessionChanged(e,t){switch(this._host?.dispose(),this._host=void 0,this._guest?.dispose(),this._guest=void 0,t.session.role){case 1:this.setReadonly(!1),(0,se.v)("gitlens:vsls","host"),ne.D.get("liveshare.allowGuestAccess")&&(this._host=await $r.share(e,this.container)),this._ready.fulfill();break;case 2:this.setReadonly(!0),(0,se.v)("gitlens:vsls","guest"),this._guest=await Mr.connect(e,this.container),this._ready.fulfill();break;default:this.setReadonly(!1),(0,se.v)("gitlens:vsls",!0),this._ready.pending||(this._ready=(0,he.PQ)())}}async getLiveShareApi(){try{const e=r.extensions.getExtension("ms-vsliveshare.vsliveshare");if(null!=e){const t=e.isActive?e.exports:await e.activate();return await t.getApi("1.0.4753")??void 0}}catch(e){S.Yd.error(e)}}_readonly=!1;get readonly(){return this._readonly}setReadonly(e){this._readonly=e,(0,se.v)("gitlens:readonly",!!e||void 0)}async guest(){return null!=this._guest||await this._ready.promise,this._guest}async getContact(e){if(null==e)return;const t=await this._api;if(null==t)return;return(await t.getContacts([e])).contacts[e]}async getContacts(e){const t=await this._api;if(null==t)return;const i=await t.getContacts(e);return Object.values(i.contacts)}async getContactPresence(e){const t=await this.getContact(e);if(null!=t)return Gr(t.status)}async getContactsPresence(e){const t=await this.getContacts(e);if(null!=t)return new Map(Object.values(t).map((e=>[e.email,Gr(e.status)])))}maybeGetPresence(e){return this.getContactPresence(e)}async invite(e){if(null==e)return;const t=await this.getContact(e);return null!=t?t.invite():void 0}async startSession(){const e=await this._api;if(null!=e)return e.share()}}Nr([(0,H.fF)()],VslsController.prototype,"getContact",1),Nr([(0,H.fF)({args:{0:e=>e.length}})],VslsController.prototype,"getContacts",1),Nr([(0,H.fF)()],VslsController.prototype,"getContactPresence",1),Nr([(0,H.fF)({args:{0:e=>e.length}})],VslsController.prototype,"getContactsPresence",1),Nr([(0,H.fF)(),(0,Ar.V)(250)],VslsController.prototype,"maybeGetPresence",1);var Hr=i(2421),Vr=i(7925),qr=i(5798),Qr=i(6260);const Yr=new qr.ke("rebase/abort"),jr=new qr.ke("rebase/disable"),zr=new qr.ke("rebase/search"),Kr=new qr.ke("rebase/start"),Jr=new qr.ke("rebase/switch"),Xr=new qr.ke("rebase/reorder"),Zr=new qr.ke("rebase/change/entry"),en=new qr.ke("rebase/move/entry"),tn=new qr.ke("rebase/selection/update"),rn=new qr.jH("rebase/didChange");var nn=Object.defineProperty,sn=Object.getOwnPropertyDescriptor,on=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?sn(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&nn(t,i,s),s};const an=2**30,ln=new TextDecoder("utf8");let cn=0;let hn=0;const un=/^\s?#\s?Rebase\s([0-9a-f]+)(?:..([0-9a-f]+))?\sonto\s([0-9a-f]+)\s.*$/im,dn=/^\s?(p|pick|r|reword|e|edit|s|squash|f|fixup|d|drop)\s([0-9a-f]+?)\s(.*)$/gm,pn=new Map([["p","pick"],["pick","pick"],["r","reword"],["reword","reword"],["e","edit"],["edit","edit"],["s","squash"],["squash","squash"],["f","fixup"],["fixup","fixup"],["d","drop"],["drop","drop"]]);class RebaseEditorProvider{constructor(e){this.container=e,this._disposable=r.Disposable.from(r.window.registerCustomEditorProvider("gitlens.rebase",this,{supportsMultipleEditorsPerDocument:!1,webviewOptions:{enableFindWidget:!0,retainContextWhenHidden:!0}})),this.ascending="asc"===ne.D.get("rebaseEditor.ordering")}_disposable;ascending=!1;dispose(){this._disposable.dispose()}get contextKeyPrefix(){return"gitlens:webview:rebase"}get enabled(){const e=ne.D.inspectAny("workbench.editorAssociations")?.globalValue;if(null==e||0===e.length)return!0;if(Array.isArray(e)){const t=e.find((e=>"git-rebase-todo"===e.filenamePattern));return null==t||"gitlens.rebase"===t.viewType}const t=e["git-rebase-todo"];return null==t||"gitlens.rebase"===t}_disableAfterNextUse=!1;async enableForNextUse(){this.enabled||(await this.setEnabled(!0),this._disableAfterNextUse=!0)}async setEnabled(e){this._disableAfterNextUse=!1;const t=ne.D.inspectAny("workbench.editorAssociations");let i=t?.globalValue;if(Array.isArray(i)&&(i=i.reduce(((e,t)=>(e[t.filenamePattern]=t.viewType,e)),Object.create(null))),null==i){if(e)return;i={"git-rebase-todo":"default"}}else i["git-rebase-todo"]=e?"gitlens.rebase":"default";await ne.D.updateAny("workbench.editorAssociations",i,r.ConfigurationTarget.Global)}async resolveCustomTextEditor(e,t,i){this.container.usage.track("rebaseEditor:shown");const n=(0,ce.AH)(r.Uri.joinPath(e.uri,"..","..","..").fsPath),s=this.container.git.getRepository(n),o=[],a={dispose:()=>{r.Disposable.from(...o).dispose()},id:(hn===an?hn=1:hn++,hn),subscriptions:o,document:e,panel:t,repoPath:s?.path??n,firstSelection:!0};o.push(t.onDidDispose((()=>{(0,Qr.qW)(this.contextKeyPrefix),r.Disposable.from(...o).dispose()})),t.onDidChangeViewState((e=>this.onViewStateChanged(a,e))),t.webview.onDidReceiveMessage((e=>this.onMessageReceived(a,e))),r.workspace.onDidChangeTextDocument((t=>{0!==t.contentChanges.length&&t.document.uri.toString()===e.uri.toString()&&this.updateState(a,!0)})),r.workspace.onDidSaveTextDocument((t=>{t.uri.toString()===e.uri.toString()&&this.updateState(a,!0)}))),null!=s&&o.push(s.onDidChange((e=>{e.changed(b.I6.Rebase,b.du.Any)&&this.updateState(a)}))),t.webview.options={enableCommandUris:!0,enableScripts:!0},t.webview.html=await this.getHtml(a),this._disableAfterNextUse&&(this._disableAfterNextUse=!1,this.setEnabled(!1))}onViewFocusChanged(e){(0,Qr.Db)(this.contextKeyPrefix,e.focused,e.focused,e.inputFocused)}onViewStateChanged(e,t){const{active:i,visible:r}=t.webviewPanel;r?(0,Qr.Db)(this.contextKeyPrefix,i):(0,Qr.qW)(this.contextKeyPrefix),e.pendingChange&&this.updateState(e)}async parseState(e){if(void 0===e.branchName){const t=await this.container.git.getBranch(e.repoPath);e.branchName=t?.name??null}const t=await async function(e,t,i){const r=t.document.getText(),n=mn(r);let[,,,s]=un.exec(r)??["","",""];null!=t.authors&&null!=t.commits||await async function(e,t,i,r){t.commits=[],t.authors=new Map;const n=await e.git.richSearchCommits(t.repoPath,{query:`${i?`#:${i} `:""}${(0,ae.v_)((0,ae.UI)(r,(e=>`#:${e.sha}`))," ")}`},{limit:0});if(null!=n)for(const e of n.commits.values())if(t.commits.push(e),t.authors.has(e.author.name)||t.authors.set(e.author.name,{author:e.author.name,avatarUrl:(await e.getAvatarUri()).toString(!0),email:e.author.email}),!t.authors.has(e.committer.name)){const i=await e.committer.getAvatarUri(e);t.authors.set(e.committer.name,{author:e.committer.name,avatarUrl:i.toString(!0),email:e.committer.email})}}(e,t,s,n);const a=ne.D.get("defaultDateFormat"),l=Hr.CE.getMarkdownCommandArgs("${commit}",t.repoPath),c=s?t.commits?.find((e=>e.sha.startsWith(s))):void 0;let h;for(const e of n)h=t.commits?.find((t=>t.sha.startsWith(e.sha))),null!=h&&(h.sha===c?.sha&&(s=""),e.commit={sha:h.sha,author:h.author.name,committer:h.committer.name,date:h.formatDate(a),dateFromNow:h.formatDateFromNow(),message:(0,o.X)(h.message??h.summary)});return{webviewId:"gitlens.rebase",timestamp:Date.now(),branch:t.branchName??"",onto:s?{sha:s,commit:null!=c?{sha:c.sha,author:c.author.name,committer:c.committer.name,date:c.formatDate(a),dateFromNow:c.formatDateFromNow(),message:(0,o.X)(c.message||"root")}:void 0}:void 0,entries:n,authors:null!=t.authors?Object.fromEntries(t.authors):{},commands:{commit:l},ascending:i}}(this.container,e,this.ascending);return t}async postMessage(e,t){try{const i=await e.panel.webview.postMessage(t);return e.pendingChange=!i,i}catch(t){return S.Yd.error(t),e.pendingChange=!0,!1}}onMessageReceived(e,t){switch(t.method){case qr.W2.method:(0,qr.mq)(qr.W2,t,(e=>{this.onViewFocusChanged(e)}));break;case Yr.method:(0,qr.mq)(Yr,t,(()=>this.abort(e)));break;case jr.method:(0,qr.mq)(jr,t,(()=>this.disable(e)));break;case zr.method:(0,qr.mq)(zr,t,(()=>(0,ot.dO)("editor.action.webvieweditor.showFind")));break;case Kr.method:(0,qr.mq)(Kr,t,(()=>this.rebase(e)));break;case Jr.method:(0,qr.mq)(Jr,t,(()=>this.switchToText(e)));break;case Xr.method:(0,qr.mq)(Xr,t,(t=>this.swapOrdering(t,e)));break;case Zr.method:(0,qr.mq)(Zr,t,(t=>this.onEntryChanged(e,t)));break;case en.method:(0,qr.mq)(en,t,(t=>this.onEntryMoved(e,t)));break;case tn.method:(0,qr.mq)(tn,t,(t=>this.onSelectionChanged(e,t)))}}async onEntryChanged(e,t){const i=mn(e.document),n=i.find((e=>e.sha===t.sha));if(null==n)return;const s=e.document.positionAt(n.index),o=e.document.validateRange(new r.Range(new r.Position(s.line,0),new r.Position(s.line,an)));let a=t.action;const l=new r.WorkspaceEdit,c=[...i];c.splice(i.indexOf(n),1,{...n,action:t.action});let h=!1;for(const e of c)"squash"===e.action||"fixup"===e.action?h=!0:h&&"drop"!==e.action&&(h=!1);if(h){const t=c[c.length-1];if(n.sha===t.sha)a="pick";else{const i=e.document.positionAt(t.index),n=e.document.validateRange(new r.Range(new r.Position(i.line,0),new r.Position(i.line,an)));l.replace(e.document.uri,n,`pick ${t.sha} ${t.message}`)}}l.replace(e.document.uri,o,`${a} ${n.sha} ${n.message}`),await r.workspace.applyEdit(l)}async onEntryMoved(e,t){const i=mn(e.document),n=i.find((e=>e.sha===t.sha));if(null==n)return;const s=i.findIndex((e=>e.sha===t.sha));let o;if(t.relative){if(-1===t.to&&0===s||1===t.to&&s===i.length-1)return;o=s+t.to}else{if(s===t.to)return;o=t.to}const a=i[o];let l=e.document.positionAt(a.index).line;o<s&&l++;const c=e.document.positionAt(n.index),h=e.document.validateRange(new r.Range(new r.Position(c.line,0),new r.Position(c.line+1,0))),u=[...i];u.splice(s,1),u.splice(o,0,n);let d=!1;for(const e of u)"squash"===e.action||"fixup"===e.action?d=!0:d&&"drop"!==e.action&&(d=!1);const p=new r.WorkspaceEdit;let m=n.action;if(d){const t=u[u.length-1];if(n.sha===t.sha)m="pick";else{const i=e.document.positionAt(t.index),n=e.document.validateRange(new r.Range(new r.Position(i.line,0),new r.Position(i.line,an)));p.replace(e.document.uri,n,`pick ${t.sha} ${t.message}`)}}p.delete(e.document.uri,h),p.insert(e.document.uri,new r.Position(l,0),`${m} ${n.sha} ${n.message}\n`),await r.workspace.applyEdit(p)}onSelectionChanged(e,t){null==e.fireSelectionChangedDebounced&&(e.fireSelectionChangedDebounced=(0,pe.Ds)(this.fireSelectionChanged.bind(this),250)),e.fireSelectionChangedDebounced(e,t.sha)}fireSelectionChanged(e,t){if(null==t)return;const i=ne.D.get("rebaseEditor.showDetailsView");t=e.commits?.find((e=>e.sha.startsWith(t)))?.sha??t,this.container.events.fire("commit:selected",{commit:(0,v.xB)(t,e.repoPath,{refType:"revision"}),interaction:"passive",preserveFocus:!0,preserveVisibility:e.firstSelection?!1===i:"selection"!==i},{source:"gitlens.rebase"}),e.firstSelection=!1}updateState(e,t=!1){if(t)return e.notifyDidChangeStateDebounced?.cancel(),void this.notifyDidChangeState(e);null==e.notifyDidChangeStateDebounced&&(e.notifyDidChangeStateDebounced=(0,pe.Ds)(this.notifyDidChangeState.bind(this),250)),e.notifyDidChangeStateDebounced(e)}async notifyDidChangeState(e){if(!e.panel.visible)return void(e.pendingChange=!0);const t=await this.parseState(e);this.postMessage(e,{id:(cn===an?cn=1:cn++,`host:${cn}`),method:rn.method,params:{state:t}})}async abort(e){e.dispose();const t=new r.WorkspaceEdit;t.replace(e.document.uri,new r.Range(0,0,e.document.lineCount,0),""),await r.workspace.applyEdit(t),await e.document.save(),e.panel.dispose()}async disable(e){await this.abort(e),await this.setEnabled(!1)}async rebase(e){e.dispose(),await e.document.save(),e.panel.dispose()}swapOrdering(e,t){this.ascending=e.ascending??!1,ne.D.updateEffective("rebaseEditor.ordering",this.ascending?"asc":"desc"),this.updateState(t,!0)}switchToText(e){(0,Vr.QP)(),(0,ot.dO)("vscode.open",e.document.uri,{override:!1,preview:!1})}async getHtml(e){const t=r.Uri.joinPath(this.container.context.extensionUri,"dist","webviews"),i=r.Uri.joinPath(t,"rebase.html"),[n,s]=await Promise.all([r.workspace.fs.readFile(i),this.parseState(e)]);return(0,Qr.Q5)(ln.decode(n),"gitlens.rebase",e.panel.webview.cspSource,(0,yt.Vu)(),e.panel.webview.asWebviewUri(this.container.context.extensionUri).toString(),e.panel.webview.asWebviewUri(t).toString(),"editor",s)}}function mn(e){const t="string"==typeof e?e:e.getText(),i=[];let r,n,s,o;for(;;){if(r=dn.exec(t),null==r)break;[,n,s,o]=r,i.push({index:r.index,action:pn.get(n)??"pick",sha:` ${s}`.substr(1),message:null==o||0===o.length?"":` ${o}`.substr(1)})}return i.reverse()}on([(0,H.fF)({args:{0:e=>e.uri.toString(!0)}})],RebaseEditorProvider.prototype,"resolveCustomTextEditor",1),on([(0,H.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],RebaseEditorProvider.prototype,"onViewFocusChanged",1),on([(0,H.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`,1:e=>`active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`}})],RebaseEditorProvider.prototype,"onViewStateChanged",1),on([(0,H.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],RebaseEditorProvider.prototype,"updateState",1),on([(0,H.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],RebaseEditorProvider.prototype,"notifyDidChangeState",1),on([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"abort",1),on([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"disable",1),on([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"rebase",1),on([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"swapOrdering",1),on([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"switchToText",1);var gn=i(620);var fn=Object.defineProperty,wn=Object.getOwnPropertyDescriptor,vn=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?wn(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&fn(t,i,s),s};const yn=class _Container{static#e;static#t=new Proxy({},{get:function(e,t){if(null!=_Container.#e)return _Container.#e[t];if("config"===t)return ne.D.getAll();throw new Error("Container is not initialized")}});static create(e,t,i,r,n){if(null!=_Container.#e)throw new Error("Container is already initialized");return _Container.#e=new _Container(e,t,i,r,n),_Container.#e}static get instance(){return _Container.#e??_Container.#t}_onReady=new r.EventEmitter;get onReady(){return this._onReady.event}BranchDateFormatting={dateFormat:void 0,dateStyle:void 0,reset:()=>{this.BranchDateFormatting.dateFormat=ne.D.get("defaultDateFormat"),this.BranchDateFormatting.dateStyle=ne.D.get("defaultDateStyle")}};CommitDateFormatting={dateFormat:null,dateSource:P.Vn.Authored,dateStyle:P.Dn.Relative,reset:()=>{this.CommitDateFormatting.dateFormat=ne.D.get("defaultDateFormat"),this.CommitDateFormatting.dateSource=ne.D.get("defaultDateSource"),this.CommitDateFormatting.dateStyle=ne.D.get("defaultDateStyle")}};CommitShaFormatting={length:7,reset:()=>{this.CommitShaFormatting.length=Math.max(5,ne.D.get("advanced.abbreviatedShaLength"))}};PullRequestDateFormatting={dateFormat:null,dateStyle:P.Dn.Relative,reset:()=>{this.PullRequestDateFormatting.dateFormat=ne.D.get("defaultDateFormat"),this.PullRequestDateFormatting.dateStyle=ne.D.get("defaultDateStyle")}};TagDateFormatting={dateFormat:null,dateStyle:P.Dn.Relative,reset:()=>{this.TagDateFormatting.dateFormat=ne.D.get("defaultDateFormat"),this.TagDateFormatting.dateStyle=ne.D.get("defaultDateStyle")}};_connection;_disposables;_terminalLinks;_webviews;constructor(e,t,n,o,a){this._context=e,this._prerelease=n,this._version=o,this.ensureModeApplied(),this._disposables=[this._storage=t,this._telemetry=new TelemetryService(this),this._usage=new UsageTracker(this,t),ne.D.onDidChangeAny(this.onAnyConfigurationChanged,this)],this._richRemoteProviders=new RichRemoteProviderService(this),this._disposables.push(this._connection=new ServerConnection(this)),this._disposables.push(this._accountAuthentication=new AccountAuthenticationProvider(this,this._connection)),this._disposables.push(this._subscription=new SubscriptionService(this,this._connection,a)),this._disposables.push(this._git=new GitProviderService(this)),this._disposables.push(new GitFileSystemProvider(this)),this._disposables.push(this._uri=new UriService(this)),this._disposables.push(this._deepLinks=new DeepLinkService(this)),this._disposables.push(this._actionRunners=new qe.AR(this)),this._disposables.push(this._tracker=new GitDocumentTracker(this)),this._disposables.push(this._lineTracker=new GitLineTracker(this)),this._disposables.push(this._keyboard=new Keyboard),this._disposables.push(this._vsls=new VslsController(this)),this._disposables.push(this._eventBus=new EventBus),this._disposables.push(this._fileAnnotationController=new Be.fK(this)),this._disposables.push(this._lineAnnotationController=new LineAnnotationController(this)),this._disposables.push(this._lineHoverController=new LineHoverController(this)),this._disposables.push(this._statusBarController=new StatusBarController(this)),this._disposables.push(this._codeLensController=new GitCodeLensController(this)),this._disposables.push(this._webviews=new gn.V(this)),this._disposables.push(this._webviews.registerWebviewPanel(s.Gh.ShowTimelinePage,{id:"gitlens.timeline",fileName:"timeline.html",iconPath:"images/gitlens-icon.png",title:"Visual File History",contextKeyPrefix:"gitlens:webview:timeline",trackingFeature:"timelineWebview",plusFeature:!0,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!1}},(async(e,t)=>{const{TimelineWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9042));return new r(e,t)}))),this._disposables.push(this._timelineView=function(e){return e.registerWebviewView({id:"gitlens.views.timeline",fileName:"timeline.html",title:"Visual File History",contextKeyPrefix:"gitlens:webviewView:timeline",trackingFeature:"timelineView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{TimelineWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9042));return new r(e,t)}))}(this._webviews)),this._disposables.push(this._graphPanel=function(e){return e.registerWebviewPanel(s.Gh.ShowGraphPage,{id:"gitlens.graph",fileName:"graph.html",iconPath:"images/gitlens-icon.png",title:"Commit Graph",contextKeyPrefix:"gitlens:webview:graph",trackingFeature:"graphWebview",plusFeature:!0,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!0,enableFindWidget:!1}},(async(e,t)=>{const{GraphWebviewProvider:r}=await Promise.resolve().then(i.bind(i,1302));return new r(e,t)}))}(this._webviews)),this._disposables.push(jt(this,this._graphPanel)),this._disposables.push(this._graphView=function(e){return e.registerWebviewView({id:"gitlens.views.graph",fileName:"graph.html",title:"Commit Graph",contextKeyPrefix:"gitlens:webviewView:graph",trackingFeature:"graphView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!0}},(async(e,t)=>{const{GraphWebviewProvider:r}=await Promise.resolve().then(i.bind(i,1302));return new r(e,t)}))}(this._webviews)),this._disposables.push(new GraphStatusBarController(this));const l=function(e){return e.registerWebviewPanel(s.Gh.ShowSettingsPage,{id:"gitlens.settings",fileName:"settings.html",iconPath:"images/gitlens-icon.png",title:"GitLens Settings",contextKeyPrefix:"gitlens:webview:settings",trackingFeature:"settingsWebview",plusFeature:!1,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!0}},(async(e,t)=>{const{SettingsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,5596));return new r(e,t)}))}(this._webviews);var c;this._disposables.push(l),this._disposables.push(function(e){return r.Disposable.from(...[s.Gh.ShowSettingsPageAndJumpToBranchesView,s.Gh.ShowSettingsPageAndJumpToCommitsView,s.Gh.ShowSettingsPageAndJumpToContributorsView,s.Gh.ShowSettingsPageAndJumpToFileHistoryView,s.Gh.ShowSettingsPageAndJumpToLineHistoryView,s.Gh.ShowSettingsPageAndJumpToRemotesView,s.Gh.ShowSettingsPageAndJumpToRepositoriesView,s.Gh.ShowSettingsPageAndJumpToSearchAndCompareView,s.Gh.ShowSettingsPageAndJumpToStashesView,s.Gh.ShowSettingsPageAndJumpToTagsView,s.Gh.ShowSettingsPageAndJumpToWorkTreesView,s.Gh.ShowSettingsPageAndJumpToViews,s.Gh.ShowSettingsPageAndJumpToCommitGraph,s.Gh.ShowSettingsPageAndJumpToAutolinks].map((t=>{let i;const r=/.*?#(.*)/.exec(t);return null!=r&&([,i]=r),(0,ot.xR)(t,((...t)=>{e.show(void 0,i,...t)}))})))}(l)),this._disposables.push(function(e){return e.registerWebviewPanel(s.Gh.ShowWelcomePage,{id:"gitlens.welcome",fileName:"welcome.html",iconPath:"images/gitlens-icon.png",title:"Welcome to GitLens",contextKeyPrefix:"gitlens:webview:welcome",trackingFeature:"welcomeWebview",plusFeature:!1,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!0}},(async(e,t)=>{const{WelcomeWebviewProvider:r}=await Promise.resolve().then(i.bind(i,7338));return new r(e,t)}))}(this._webviews)),this._disposables.push(this._rebaseEditor=new RebaseEditorProvider(this)),this._disposables.push(function(e){return e.registerWebviewPanel(s.Gh.ShowFocusPage,{id:"gitlens.focus",fileName:"focus.html",iconPath:"images/gitlens-icon.png",title:"Focus View",contextKeyPrefix:"gitlens:webview:focus",trackingFeature:"focusWebview",plusFeature:!0,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!0,enableFindWidget:!0}},(async(e,t)=>{const{FocusWebviewProvider:r}=await Promise.resolve().then(i.bind(i,1629));return new r(e,t)}))}(this._webviews)),this._disposables.push(new ViewFileDecorationProvider),this._disposables.push(this._repositoriesView=new Xi.a(this)),this._disposables.push(this._commitDetailsView=function(e){return e.registerWebviewView({id:"gitlens.views.commitDetails",fileName:"commitDetails.html",title:"Commit Details",contextKeyPrefix:"gitlens:webviewView:commitDetails",trackingFeature:"commitDetailsView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{CommitDetailsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9206));return new r(e,t,{mode:"default"})}))}(this._webviews)),this._disposables.push(this._graphDetailsView=function(e){return e.registerWebviewView({id:"gitlens.views.graphDetails",fileName:"commitDetails.html",title:"Commit Graph Details",contextKeyPrefix:"gitlens:webviewView:graphDetails",trackingFeature:"graphDetailsView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{CommitDetailsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9206));return new r(e,t,{mode:"graph"})}))}(this._webviews)),this._disposables.push(this._commitsView=new CommitsView(this)),this._disposables.push(this._fileHistoryView=new FileHistoryView(this)),this._disposables.push(this._lineHistoryView=new LineHistoryView(this)),this._disposables.push(this._branchesView=new BranchesView(this)),this._disposables.push(this._remotesView=new Ji.L5(this)),this._disposables.push(this._stashesView=new StashesView(this)),this._disposables.push(this._tagsView=new dr.wc(this)),this._disposables.push(this._worktreesView=new Cr.m9(this)),this._disposables.push(this._contributorsView=new ContributorsView(this)),this._disposables.push(this._searchAndCompareView=new SearchAndCompareView(this)),this._disposables.push(this._workspacesView=new WorkspacesView(this)),this._disposables.push(this._homeView=function(e){return e.registerWebviewView({id:"gitlens.views.home",fileName:"home.html",title:"Home",contextKeyPrefix:"gitlens:webviewView:home",trackingFeature:"homeView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{HomeWebviewProvider:r}=await Promise.resolve().then(i.bind(i,2384));return new r(e,t)}))}(this._webviews)),this._disposables.push(this._accountView=function(e){return e.registerWebviewView({id:"gitlens.views.account",fileName:"account.html",title:"GitKraken Account",contextKeyPrefix:"gitlens:webviewView:account",trackingFeature:"accountView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{AccountWebviewProvider:r}=await Promise.resolve().then(i.bind(i,420));return new r(e,t)}))}(this._webviews)),ne.D.get("terminalLinks.enabled")&&this._disposables.push(this._terminalLinks=new GitTerminalLinkProvider(this)),this._disposables.push(ne.D.onDidChange((e=>{ne.D.changed(e,"terminalLinks.enabled")&&(this._terminalLinks?.dispose(),ne.D.get("terminalLinks.enabled")&&this._disposables.push(this._terminalLinks=new GitTerminalLinkProvider(this)))}))),e.subscriptions.push({dispose:()=>this._disposables.reverse().forEach((e=>{e.dispose()}))}),c=this,null!=Zt()&&setTimeout((()=>c.workspaces.addMissingCurrentWorkspaceRepos()),1e4)}deactivate(){this._deactivating=!0}_deactivating=!1;get deactivating(){return this._deactivating}_ready=!1;async ready(){if(this._ready)throw new Error("Container is already ready");this._ready=!0,await this.registerGitProviders(),queueMicrotask((()=>this._onReady.fire()))}async registerGitProviders(){const e=await async function(e){return[new GitHubGitProvider(e)]}(this);for(const t of e)this._disposables.push(this._git.register(t.descriptor.id,t));this._git.registrationComplete()}onAnyConfigurationChanged(e){ne.D.changedAny(e,s.m1)&&(this._mode=void 0,ne.D.changed(e,"outputLevel")&&(S.Yd.logLevel=(0,P.oE)(ne.D.get("outputLevel"))),ne.D.changed(e,"defaultGravatarsStyle")&&(0,Qe.Wr)(ne.D.get("defaultGravatarsStyle")),ne.D.changed(e,"mode")&&this.ensureModeApplied())}_accountAuthentication;get accountAuthentication(){return this._accountAuthentication}_actionRunners;get actionRunners(){return this._actionRunners}_ai;get ai(){return null==this._ai&&this._disposables.push(this._ai=new AIProviderService(this)),this._ai}_autolinks;get autolinks(){return null==this._autolinks&&this._disposables.push(this._autolinks=new xe.P(this)),this._autolinks}_branchesView;get branchesView(){return this._branchesView}_codeLensController;get codeLens(){return this._codeLensController}_commitsView;get commitsView(){return this._commitsView}_commitDetailsView;get commitDetailsView(){return this._commitDetailsView}_context;get context(){return this._context}_contributorsView;get contributorsView(){return this._contributorsView}get debugging(){return this._context.extensionMode===r.ExtensionMode.Development}get env(){if(this.prereleaseOrDebugging){const e=ne.D.getAny("gitkraken.env");if("dev"===e)return"dev";if("staging"===e)return"staging"}return"production"}_eventBus;get events(){return this._eventBus}_fileAnnotationController;get fileAnnotations(){return this._fileAnnotationController}_fileHistoryView;get fileHistoryView(){return this._fileHistoryView}_git;get git(){return this._git}_uri;get uri(){return this._uri}_deepLinks;get deepLinks(){return this._deepLinks}_github;get github(){return null==this._github&&(this._github=this._loadGitHubApi()),this._github}async _loadGitHubApi(){try{const e=new((await Promise.resolve().then(i.bind(i,9616))).GitHubApi)(this);return this._disposables.push(e),e}catch(e){return void S.Yd.error(e)}}_gitlab;get gitlab(){return null==this._gitlab&&(this._gitlab=this._loadGitLabApi()),this._gitlab}async _loadGitLabApi(){try{const e=new((await Promise.resolve().then(i.bind(i,1848))).GitLabApi)(this);return this._disposables.push(e),e}catch(e){return void S.Yd.error(e)}}_graphDetailsView;get graphDetailsView(){return this._graphDetailsView}_graphPanel;_graphView;get graphView(){return this._graphView}_homeView;get homeView(){return this._homeView}_accountView;get accountView(){return this._accountView}get id(){return this._context.extension.id}_integrationAuthentication;get integrationAuthentication(){return null==this._integrationAuthentication&&this._disposables.push(this._integrationAuthentication=new IntegrationAuthenticationService(this),new G.z4(this),new GitLabAuthenticationProvider(this)),this._integrationAuthentication}_keyboard;get keyboard(){return this._keyboard}_lineAnnotationController;get lineAnnotations(){return this._lineAnnotationController}_lineHistoryView;get lineHistoryView(){return this._lineHistoryView}_lineHoverController;get lineHovers(){return this._lineHoverController}_lineTracker;get lineTracker(){return this._lineTracker}_repositoryPathMapping;get repositoryPathMapping(){return null==this._repositoryPathMapping&&this._disposables.push(this._repositoryPathMapping=new RepositoryWebPathMappingProvider(this)),this._repositoryPathMapping}_prerelease;get prerelease(){return this._prerelease}get prereleaseOrDebugging(){return this._prerelease||this.debugging}_rebaseEditor;get rebaseEditor(){return this._rebaseEditor}_remotesView;get remotesView(){return this._remotesView}_repositoriesView;get repositoriesView(){return this._repositoriesView}_searchAndCompareView;get searchAndCompareView(){return this._searchAndCompareView}_subscription;get subscription(){return this._subscription}_richRemoteProviders;get richRemoteProviders(){return this._richRemoteProviders}_stashesView;get stashesView(){return this._stashesView}_statusBarController;get statusBar(){return this._statusBarController}_storage;get storage(){return this._storage}_tagsView;get tagsView(){return this._tagsView}_telemetry;get telemetry(){return this._telemetry}_timelineView;get timelineView(){return this._timelineView}_tracker;get tracker(){return this._tracker}_usage;get usage(){return this._usage}_version;get version(){return this._version}_viewCommands;get viewCommands(){return null==this._viewCommands&&(this._viewCommands=new Fi.s(this)),this._viewCommands}_vsls;get vsls(){return this._vsls}_workspaces;get workspaces(){return null==this._workspaces&&this._disposables.push(this._workspaces=new WorkspacesService(this,this._connection)),this._workspaces}_workspacesView;get workspacesView(){return this._workspacesView}_worktreesView;get worktreesView(){return this._worktreesView}_mode;get mode(){return null==this._mode&&(this._mode=ne.D.get("modes")?.[ne.D.get("mode.active")]),this._mode}ensureModeApplied(){const e=this.mode;if(null!=e){if(null!=e.annotations){let t;switch(e.annotations){case"blame":t=s.Gh.ToggleFileBlame;break;case"changes":t=s.Gh.ToggleFileChanges;break;case"heatmap":t=s.Gh.ToggleFileHeatmap}if(null!=t){const i={type:e.annotations,on:!0};setTimeout(ot.P0,50,t,i)}}ne.D.applyOverrides({get:(t,i)=>{if(null!=e.annotations){if(ne.D.matches(`${e.annotations}.toggleMode`,t,i))return i=P.TF.Window;if(ne.D.matches(e.annotations,t,i))return i.toggleMode=P.TF.Window,i}for(const r of["codeLens","currentLine","hovers","statusBar"])if(null!=e[r]){if(ne.D.matches(`${r}.enabled`,t,i))return i=e[r];if(ne.D.matches(r,t,i))return i.enabled=e[r],i}return i},getAll:t=>(null!=e.annotations&&(t[e.annotations].toggleMode=P.TF.Window),null!=e.codeLens&&(t.codeLens.enabled=e.codeLens),null!=e.currentLine&&(t.currentLine.enabled=e.currentLine),null!=e.hovers&&(t.hovers.enabled=e.hovers),null!=e.statusBar&&(t.statusBar.enabled=e.statusBar),t),onDidChange:e=>{if(!ne.D.changed(e,["mode","modes"]))return e;const t=e.affectsConfiguration;return{...e,affectsConfiguration:(e,i)=>!!/^gitlens\.(?:modes?|blame|changes|heatmap|codeLens|currentLine|hovers|statusBar)\b/.test(e)||t(e,i)}}})}else ne.D.clearOverrides()}};vn([(0,H.cM)()],yn.prototype,"registerGitProviders",1),vn([(0,Ft.H)()],yn.prototype,"debugging",1),vn([(0,Ft.H)()],yn.prototype,"env",1),vn([(0,Ft.H)()],yn.prototype,"id",1),vn([(0,Ft.H)()],yn.prototype,"prereleaseOrDebugging",1);let bn=yn;function Cn(e){return e instanceof bn}},3148:(e,t,i)=>{i.d(t,{X:()=>a});const r="";var n=i(3620);const s=/:([-+_a-z0-9]+):/g;let o;function a(e){return null==o&&(o=JSON.parse((0,n.QC)(r))),e.replace(s,((e,t)=>o[t]||e))}},3317:(e,t,i)=>{i.d(t,{U:()=>s});const{fromCharCode:r}=String,n=new TextEncoder;function s(e){let t="string"==typeof e?n.encode(e):e,i="";for(let e=0,{length:n}=t;e<n;e++)i+=r(t[e]);return globalThis.btoa(i)}},4290:(e,t,i)=>{i.d(t,{Vu:()=>c,FB:()=>h,Vj:()=>u});var r=i(3317);function n(e,t){let[i,r,n,s]=e;i+=(r&n|~r&s)+t[0]-680876936|0,i=(i<<7|i>>>25)+r|0,s+=(i&r|~i&n)+t[1]-389564586|0,s=(s<<12|s>>>20)+i|0,n+=(s&i|~s&r)+t[2]+606105819|0,n=(n<<17|n>>>15)+s|0,r+=(n&s|~n&i)+t[3]-1044525330|0,r=(r<<22|r>>>10)+n|0,i+=(r&n|~r&s)+t[4]-176418897|0,i=(i<<7|i>>>25)+r|0,s+=(i&r|~i&n)+t[5]+1200080426|0,s=(s<<12|s>>>20)+i|0,n+=(s&i|~s&r)+t[6]-1473231341|0,n=(n<<17|n>>>15)+s|0,r+=(n&s|~n&i)+t[7]-45705983|0,r=(r<<22|r>>>10)+n|0,i+=(r&n|~r&s)+t[8]+1770035416|0,i=(i<<7|i>>>25)+r|0,s+=(i&r|~i&n)+t[9]-1958414417|0,s=(s<<12|s>>>20)+i|0,n+=(s&i|~s&r)+t[10]-42063|0,n=(n<<17|n>>>15)+s|0,r+=(n&s|~n&i)+t[11]-1990404162|0,r=(r<<22|r>>>10)+n|0,i+=(r&n|~r&s)+t[12]+1804603682|0,i=(i<<7|i>>>25)+r|0,s+=(i&r|~i&n)+t[13]-40341101|0,s=(s<<12|s>>>20)+i|0,n+=(s&i|~s&r)+t[14]-1502002290|0,n=(n<<17|n>>>15)+s|0,r+=(n&s|~n&i)+t[15]+1236535329|0,r=(r<<22|r>>>10)+n|0,i+=(r&s|n&~s)+t[1]-165796510|0,i=(i<<5|i>>>27)+r|0,s+=(i&n|r&~n)+t[6]-1069501632|0,s=(s<<9|s>>>23)+i|0,n+=(s&r|i&~r)+t[11]+643717713|0,n=(n<<14|n>>>18)+s|0,r+=(n&i|s&~i)+t[0]-373897302|0,r=(r<<20|r>>>12)+n|0,i+=(r&s|n&~s)+t[5]-701558691|0,i=(i<<5|i>>>27)+r|0,s+=(i&n|r&~n)+t[10]+38016083|0,s=(s<<9|s>>>23)+i|0,n+=(s&r|i&~r)+t[15]-660478335|0,n=(n<<14|n>>>18)+s|0,r+=(n&i|s&~i)+t[4]-405537848|0,r=(r<<20|r>>>12)+n|0,i+=(r&s|n&~s)+t[9]+568446438|0,i=(i<<5|i>>>27)+r|0,s+=(i&n|r&~n)+t[14]-1019803690|0,s=(s<<9|s>>>23)+i|0,n+=(s&r|i&~r)+t[3]-187363961|0,n=(n<<14|n>>>18)+s|0,r+=(n&i|s&~i)+t[8]+1163531501|0,r=(r<<20|r>>>12)+n|0,i+=(r&s|n&~s)+t[13]-1444681467|0,i=(i<<5|i>>>27)+r|0,s+=(i&n|r&~n)+t[2]-51403784|0,s=(s<<9|s>>>23)+i|0,n+=(s&r|i&~r)+t[7]+1735328473|0,n=(n<<14|n>>>18)+s|0,r+=(n&i|s&~i)+t[12]-1926607734|0,r=(r<<20|r>>>12)+n|0,i+=(r^n^s)+t[5]-378558|0,i=(i<<4|i>>>28)+r|0,s+=(i^r^n)+t[8]-2022574463|0,s=(s<<11|s>>>21)+i|0,n+=(s^i^r)+t[11]+1839030562|0,n=(n<<16|n>>>16)+s|0,r+=(n^s^i)+t[14]-35309556|0,r=(r<<23|r>>>9)+n|0,i+=(r^n^s)+t[1]-1530992060|0,i=(i<<4|i>>>28)+r|0,s+=(i^r^n)+t[4]+1272893353|0,s=(s<<11|s>>>21)+i|0,n+=(s^i^r)+t[7]-155497632|0,n=(n<<16|n>>>16)+s|0,r+=(n^s^i)+t[10]-1094730640|0,r=(r<<23|r>>>9)+n|0,i+=(r^n^s)+t[13]+681279174|0,i=(i<<4|i>>>28)+r|0,s+=(i^r^n)+t[0]-358537222|0,s=(s<<11|s>>>21)+i|0,n+=(s^i^r)+t[3]-722521979|0,n=(n<<16|n>>>16)+s|0,r+=(n^s^i)+t[6]+76029189|0,r=(r<<23|r>>>9)+n|0,i+=(r^n^s)+t[9]-640364487|0,i=(i<<4|i>>>28)+r|0,s+=(i^r^n)+t[12]-421815835|0,s=(s<<11|s>>>21)+i|0,n+=(s^i^r)+t[15]+530742520|0,n=(n<<16|n>>>16)+s|0,r+=(n^s^i)+t[2]-995338651|0,r=(r<<23|r>>>9)+n|0,i+=(n^(r|~s))+t[0]-198630844|0,i=(i<<6|i>>>26)+r|0,s+=(r^(i|~n))+t[7]+1126891415|0,s=(s<<10|s>>>22)+i|0,n+=(i^(s|~r))+t[14]-1416354905|0,n=(n<<15|n>>>17)+s|0,r+=(s^(n|~i))+t[5]-57434055|0,r=(r<<21|r>>>11)+n|0,i+=(n^(r|~s))+t[12]+1700485571|0,i=(i<<6|i>>>26)+r|0,s+=(r^(i|~n))+t[3]-1894986606|0,s=(s<<10|s>>>22)+i|0,n+=(i^(s|~r))+t[10]-1051523|0,n=(n<<15|n>>>17)+s|0,r+=(s^(n|~i))+t[1]-2054922799|0,r=(r<<21|r>>>11)+n|0,i+=(n^(r|~s))+t[8]+1873313359|0,i=(i<<6|i>>>26)+r|0,s+=(r^(i|~n))+t[15]-30611744|0,s=(s<<10|s>>>22)+i|0,n+=(i^(s|~r))+t[6]-1560198380|0,n=(n<<15|n>>>17)+s|0,r+=(s^(n|~i))+t[13]+1309151649|0,r=(r<<21|r>>>11)+n|0,i+=(n^(r|~s))+t[4]-145523070|0,i=(i<<6|i>>>26)+r|0,s+=(r^(i|~n))+t[11]-1120210379|0,s=(s<<10|s>>>22)+i|0,n+=(i^(s|~r))+t[2]+718787259|0,n=(n<<15|n>>>17)+s|0,r+=(s^(n|~i))+t[9]-343485551|0,r=(r<<21|r>>>11)+n|0,e[0]=i+e[0]|0,e[1]=r+e[1]|0,e[2]=n+e[2]|0,e[3]=s+e[3]|0}function s(e){const t=[];for(let i=0;i<64;i+=4)t[i>>2]=e.charCodeAt(i)+(e.charCodeAt(i+1)<<8)+(e.charCodeAt(i+2)<<16)+(e.charCodeAt(i+3)<<24);return t}const o=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function a(e){let t="";for(let i=0;i<4;i+=1)t+=o[e>>8*i+4&15]+o[e>>8*i&15];return t}function l(e,t="hex"){const i=(r=function(e){const t=e.length;let i,r=[1732584193,-271733879,-1732584194,271733878];for(i=64;i<=t;i+=64)n(r,s(e.substring(i-64,i)));let o=(e=e.substring(i-64)).length,a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;i<o;i+=1)a[i>>2]|=e.charCodeAt(i)<<(i%4<<3);if(a[i>>2]|=128<<(i%4<<3),i>55)for(n(r,a),i=0;i<16;i+=1)a[i]=0;const l=(8*t).toString(16).match(/(.*?)(.{0,8})$/),c=parseInt(l[2],16),h=parseInt(l[1],16)||0;return a[14]=c,a[15]=h,n(r,a),r}(e),r.map(a).join(""));var r;return"hex"===t?i:btoa(function(e){const t=[],i=e.length;for(let r=0;r<i-1;r+=2)t.push(parseInt(e.substr(r,2),16));return String.fromCharCode.apply(String,t)}(i))}function c(){return(0,r.U)(globalThis.crypto.getRandomValues(new Uint8Array(16)))}function h(e,t="hex"){return l(e,t)}function u(){return globalThis.crypto.randomUUID()}},9827:(e,t,i)=>{i.d(t,{Nx:()=>n,a_:()=>s,he:()=>r});const r=globalThis.fetch;function n(e){}async function s(e,t){return t()}},185:(e,t,i)=>{i.d(t,{d:()=>a,e:()=>o});const r=new TextDecoder,n=new TextEncoder,s=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function o(e){const t=n.encode(e),i=new Array(t.length);for(let e=0;e<t.length;++e)i[e]=s[t[e]];return i.join("")}function a(e){const t=e.match(/(\w{2})/g);if(null===t)return"";const i=new Uint8Array(t.map((e=>parseInt(e,16))));return r.decode(i)}},9376:(e,t,i)=>{function r(e){const t=.001*performance.now();let i=Math.floor(t),r=Math.floor(t%1*1e9);return void 0!==e&&(i-=e[0],r-=e[1],r<0&&(i--,r+=1e9)),[i,r]}i.d(t,{a:()=>r})},429:(e,t,i)=>{i.d(t,{$L:()=>r,ED:()=>l,IJ:()=>o,Xf:()=>c});const r=!0,n=navigator?.userAgentData?.platform,s=navigator.userAgent,o="Linux"===n||s.indexOf("Linux")>=0,a="macOS"===n||s.indexOf("Macintosh")>=0,l="Windows"===n||s.indexOf("Windows")>=0;function c(){return l?"web-windows":a?"web-macOS":o?"web-linux":"web"}},4575:(e,t,i)=>{i.d(t,{$y:()=>AccessDeniedError,Bn:()=>ProviderRequestClientError,Jx:()=>n,MO:()=>ProviderNotFoundError,R5:()=>ExtensionNotFoundError,Ww:()=>ProviderRequestNotFoundError,Xq:()=>ProviderFetchError,_7:()=>AuthenticationError,dt:()=>AccountValidationError,kX:()=>OpenVirtualRepositoryError,sh:()=>s,yx:()=>ProviderRequestRateLimitError});var r=i(4968);class AccessDeniedError extends Error{subscription;required;constructor(e,t){let i;i=!1===e.account?.verified?"Email verification required":null!=t&&(0,r.aG)(t)?"Paid plan required":"Plan required",super(i),this.subscription=e,this.required=t,Error.captureStackTrace?.(this,AccessDeniedError)}}class AccountValidationError extends Error{original;statusCode;statusText;constructor(e,t,i,r){super(e+=`; status=${i}: ${r}`),this.original=t,this.statusCode=i,this.statusText=r,Error.captureStackTrace?.(this,AccountValidationError)}}var n=(e=>(e[e.UserDidNotConsent=1]="UserDidNotConsent",e[e.Unauthorized=2]="Unauthorized",e[e.Forbidden=3]="Forbidden",e))(n||{});class AuthenticationError extends Error{id;original;reason;constructor(e,t,i){let r,n;if(null==t)r=`Unable to get required authentication session for '${e}'`;else if("string"==typeof t)r=t,n=void 0;else switch(n=t,n){case 1:r=`'${e}' authentication is required for this operation`;break;case 2:r=`Your '${e}' credentials are either invalid or expired`;break;case 3:r=`Your '${e}' credentials do not have the required access`}super(r),this.id=e,this.original=i,this.reason=n,Error.captureStackTrace?.(this,AuthenticationError)}}class ExtensionNotFoundError extends Error{constructor(e,t){super(`Unable to find the ${t} extension (${e}). Please ensure it is installed and enabled.`),this.extensionId=e,this.extensionName=t,Error.captureStackTrace?.(this,ExtensionNotFoundError)}}var s=(e=>(e[e.RemoteHubApiNotFound=1]="RemoteHubApiNotFound",e[e.NotAGitHubRepository=2]="NotAGitHubRepository",e[e.GitHubAuthenticationNotFound=3]="GitHubAuthenticationNotFound",e[e.GitHubAuthenticationDenied=4]="GitHubAuthenticationDenied",e))(s||{});class OpenVirtualRepositoryError extends Error{original;reason;repoPath;constructor(e,t,i){let r,n;if(null==t)r=`Unable to open the virtual repository: ${e}`;else if("string"==typeof t)r=t,n=void 0;else switch(n=t,r=`Unable to open the virtual repository: ${e}; `,n){case 1:r+="Unable to get required api from the GitHub Repositories extension. Please ensure that the GitHub Repositories extension is installed and enabled";break;case 2:r+="Only GitHub repositories are supported currently";break;case 3:r+="Unable to get required GitHub authentication";break;case 4:r+="GitHub authentication is required"}super(r),this.original=i,this.reason=n,this.repoPath=e,Error.captureStackTrace?.(this,OpenVirtualRepositoryError)}}class ProviderFetchError extends Error{constructor(e,t,i){super(`${e} request failed: ${t.ok?"":`(${t.status}) ${t.statusText}. `}${i?.length?i[0].message:""}`),this.response=t,Error.captureStackTrace?.(this,ProviderFetchError)}get status(){return this.response.status}get statusText(){return this.response.statusText}}class ProviderNotFoundError extends Error{constructor(e){super(`No provider registered for '${null==e?String(e):"string"==typeof e?e:e.toString(!0)}'`),Error.captureStackTrace?.(this,ProviderNotFoundError)}}class ProviderRequestClientError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,ProviderRequestClientError)}}class ProviderRequestNotFoundError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,ProviderRequestNotFoundError)}}class ProviderRequestRateLimitError extends Error{constructor(e,t,i){super(e.message),this.original=e,this.token=t,this.resetAt=i,Error.captureStackTrace?.(this,ProviderRequestRateLimitError)}}},8887:(e,t,i)=>{i.d(t,{A:()=>r,x:()=>n});var r=(e=>(e.Stashes="stashes",e.Timeline="timeline",e.Worktrees="worktrees",e.StashOnlyStaged="stashOnlyStaged",e))(r||{}),n=(e=>(e.Timeline="timeline",e.Worktrees="worktrees",e.Graph="graph",e.Focus="focus",e))(n||{})},9311:(e,t,i)=>{i.d(t,{g:()=>a,m:()=>o});var r=i(5255),n=i(9529),s=i(7469);async function o(e){const t=(0,s.PQ)();return await(0,n.P0)(r.Gh.GitCommands,{...e,completion:t}),t.promise}async function a(e,t){await(0,n.b2)(r.Gh.BrowseRepoAtRevision,void 0,{uri:e,before:t?.before,openInNewWindow:t?.openInNewWindow})}},3401:(e,t,i)=>{i.d(t,{Od:()=>o,PQ:()=>a,Ue:()=>s,ay:()=>l});var r=i(963),n=i(9311);function s(e,t,i){return(0,n.m)({command:"branch",state:{subcommand:"create",repo:e,reference:t,name:i}})}function o(e,t){return(0,n.m)({command:"branch",state:{subcommand:"delete",repo:e,references:t}})}function a(e,t,i){return(0,n.m)({command:"branch",state:{subcommand:"rename",repo:e,reference:t,name:i}})}async function l(e,t){const i=e.remote?r.W.instance.remotesView:r.W.instance.branchesView,n=i.canReveal?await i.revealBranch(e,t):await r.W.instance.repositoriesView.revealBranch(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}},6897:(e,t,i)=>{i.d(t,{$H:()=>p,$J:()=>O,Dh:()=>_,E4:()=>$,Fw:()=>E,GM:()=>I,Gp:()=>g,Hl:()=>T,Os:()=>P,Ou:()=>w,SJ:()=>m,Uc:()=>x,Xy:()=>y,YM:()=>D,YS:()=>R,ZB:()=>S,aE:()=>k,ay:()=>F,ce:()=>b,iK:()=>C,tc:()=>A,vw:()=>v,wr:()=>f,zb:()=>d});var r=i(9496),n=i(5255),s=i(963),o=i(9529),a=i(2509),l=i(7462),c=i(6450),h=i(439),u=i(4321);async function d(e,t,i){await S(e,t,{preserveFocus:!0,preview:!1});let r=t.ref;"string"!=typeof e&&"?"===e.status&&(r=`${r}^3`),await s.W.instance.git.applyChangesToWorkingFile(l.YY.fromFile(e,t.repoPath,r),r,i?.ref)}async function p(e){await r.env.clipboard.writeText(e.ref)}async function m(e){let t;if((0,c.f_)(e))t=e,null==t.message&&await t.ensureFullDetails();else if(t=await s.W.instance.git.getCommit(e.repoPath,e.ref),null==t)return;const i=t.message??t.summary;await r.env.clipboard.writeText(i)}async function g(e,t,i){let n,s;if((0,c.f_)(e)?(null==e.files&&await e.ensureFullDetails(),n=e.files??[],s={repoPath:e.repoPath,ref1:e.unresolvedPreviousSha,ref2:e.sha},i=t):(n=e,s=t),n.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${n.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}i={preserveFocus:!0,preview:!1,...i};for(const e of n)await v(e,s,i)}async function f(e,t){let i;if((0,c.f_)(e)?(null==e.files&&await e.ensureFullDetails(),i=e.files??[],t={repoPath:e.repoPath,ref:e.sha}):i=e,i.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${i.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}for(const e of i)y(e,t)}async function w(e,t,i){let n,s;if((0,c.f_)(e)?(null==e.files&&await e.ensureFullDetails(),n=e.files??[],s={repoPath:e.repoPath,ref:e.sha},i=t):(n=e,s=t),n.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${n.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}i={preserveFocus:!0,preview:!1,...i};for(const e of n)await b(e,s,i)}async function v(e,t,i){const r=(0,c.f_)(t);if("string"==typeof e){if(!r)throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}if(i={preserveFocus:!0,preview:!1,...i},"A"===e.status&&r){const r=await t.getCommitForFile(e);return void(0,o.P0)(n.Gh.DiffWithPrevious,{commit:r,showOptions:i})}const s=r?{repoPath:t.repoPath,ref1:t.unresolvedPreviousSha,ref2:t.sha}:t,a=l.YY.fromFile(e,s.repoPath),h="R"===e.status||"C"===e.status?l.YY.fromFile(e,s.repoPath,s.ref1,!0):a;await(0,o.P0)(n.Gh.DiffWith,{repoPath:s.repoPath,lhs:{uri:h,sha:s.ref1},rhs:{uri:a,sha:s.ref2},showOptions:i})}async function y(e,t,i){if("string"==typeof e){if(!(0,c.f_)(t))throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}return s.W.instance.git.openDiffTool(t.repoPath,l.YY.fromFile(e,e.repoPath??t.repoPath),{ref1:(0,u.l3)(t.ref)?"":`${t.ref}^`,ref2:(0,u.l3)(t.ref)?"":t.ref,staged:(0,u.rD)(t.ref)||null!=e.indexStatus,tool:i})}async function b(e,t,i){if("string"==typeof e){if(!(0,c.f_)(t))throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}if("D"===e.status)return;let r;r=(0,c.f_)(t)?{repoPath:t.repoPath,ref:t.sha}:t,i={preserveFocus:!0,preview:!1,...i},await(0,o.b2)(n.Gh.DiffWithWorking,void 0,{uri:l.YY.fromFile(e,r.repoPath,r.ref),showOptions:i})}async function C(e,t,i,r){return s.W.instance.git.openDirectoryCompare(e,t,i,r)}async function A(e){return C(e.repoPath,e.ref,`${e.ref}^`)}async function P(e){return C(e.repoPath,e.ref,void 0)}async function S(e,t,i){let s;if(e instanceof r.Uri)s=e,i=t;else{const i=t;if(s=l.YY.fromFile(e,i.repoPath,i.ref),"string"!=typeof e&&"?"===e.status)return}i={preserveFocus:!0,preview:!1,...i},await(0,o.b2)(n.Gh.OpenWorkingFile,void 0,{uri:s,showOptions:i})}async function R(e,t,i){let n;if(e instanceof r.Uri){if((0,c.f_)(t))throw new Error("Invalid arguments");n=e,i=t}else{if(!(0,c.f_)(t))throw new Error("Invalid arguments");const i=t;let r;if("string"==typeof e){const t=await i.findFile(e);if(null==t)throw new Error("Invalid arguments");r=t}else r=e;n=s.W.instance.git.getRevisionUri("D"===r.status?await i.getPreviousSha()??h.Ii:i.sha,r,i.repoPath)}const{annotationType:o,line:l,...u}={preserveFocus:!0,preview:!1,...i};null!=l&&0!==l&&(u.selection=new r.Range(l,0,l,0));const d=await(0,a.GR)(n,u);null!=o&&null!=d&&await s.W.instance.fileAnnotations.show(d,o,{selection:{line:l}})}async function D(e,t){let i;if(e instanceof r.Uri)i=e;else{if(null==t)throw new Error("Invalid arguments");if(i=l.YY.fromFile(e,t.repoPath,t.ref),"string"!=typeof e&&"?"===e.status)return}await(0,o.P0)(n.Gh.OpenFileOnRemote,i,{sha:t?.ref})}async function k(e,t,i){let n;if((0,c.f_)(e)?(null==e.files&&await e.ensureFullDetails(),n=e.files??[],t=e.repoPath,i=e.sha):n=e,n.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open all ${n.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}const o=(await Promise.all(n.map((e=>s.W.instance.git.getWorkingUri(t,l.YY.fromFile(e,t,i)))))).filter((e=>Boolean(e)));(0,a.$_)(o)}async function _(e,t,i,n){let o;if((0,c.f_)(e)?(null==e.files&&await e.ensureFullDetails(),o=e.files??[],t=e.repoPath,i=e.sha,n=await e.getPreviousSha()):o=e,o.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open all ${o.length} file revisions?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}(0,a.$_)(o.map((e=>s.W.instance.git.getRevisionUri("D"===e.status?n:i,e,t))))}async function T(e,t){let i,r;"string"==typeof e?(i=e,r=t.ref):(i=e.path,r="?"===e.status?`${t.ref}^3`:"D"===e.status?`${t.ref}^`:t.ref),await s.W.instance.git.checkout(t.repoPath,r,{path:i})}async function F(e,t){const i=[s.W.instance.commitsView,s.W.instance.branchesView,s.W.instance.remotesView];for(const r of i){const i=r.canReveal?await r.revealCommit(e,t):await s.W.instance.repositoriesView.revealCommit(e,t);if(null!=i)return i}i[0].show({preserveFocus:!t?.focus})}async function O(e,t){if(null==t)return void await(0,o.P0)(n.Gh.ShowQuickCommit,{commit:e});let i;i=t instanceof r.Uri?t:l.YY.fromFile(t,e.repoPath,e.ref),await(0,o.P0)(n.Gh.ShowQuickCommitFile,i,{sha:e.sha})}function E(e,t){const{preserveFocus:i,...r}={...t,commit:e};return s.W.instance.commitDetailsView.show({preserveFocus:i},r)}function $(e,t){const{preserveFocus:i,...r}={...t,commit:e};return s.W.instance.graphDetailsView.show({preserveFocus:i},r)}async function I(e,t){await(0,o.P0)(n.Gh.ShowInCommitGraph,{ref:(0,u.qj)(e),preserveFocus:t?.preserveFocus})}async function x(e){await e.ensureFullDetails();const t=e.files??[];if(t.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open all ${t.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}await(0,o.P0)(n.Gh.OpenOnlyChangedFiles,{uris:t.filter((e=>"D"!==e.status)).map((e=>e.uri))})}},7445:(e,t,i)=>{i.d(t,{a:()=>o,q:()=>s});var r=i(963),n=i(9311);function s(e,t){return(0,n.m)({command:"co-authors",state:{repo:e,contributors:t}})}async function o(e,t){const i=r.W.instance.contributorsView,n=i.canReveal?await i.revealContributor(e,t):await r.W.instance.repositoriesView.revealContributor(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}},4155:(e,t,i)=>{i.d(t,{IH:()=>s,Od:()=>l,Qs:()=>a,ay:()=>c,he:()=>o});var r=i(963),n=i(9311);function s(e,t,i,r){return(0,n.m)({command:"remote",confirm:r?.confirm,state:{repo:e,subcommand:"add",name:t,url:i,flags:r?.fetch?["-f"]:void 0,reveal:r?.reveal}})}async function o(e,t){if("string"==typeof e){const t=r.W.instance.git.getRepository(e);if(null==t)return;e=t}await e.fetch({remote:t})}async function a(e,t){return(0,n.m)({command:"remote",state:{repo:e,subcommand:"prune",remote:t}})}async function l(e,t){return(0,n.m)({command:"remote",state:{repo:e,subcommand:"remove",remote:t}})}async function c(e,t){const i=r.W.instance.remotesView,n=null!=e?i.canReveal?await i.revealRemote(e,t):await r.W.instance.repositoriesView.revealRemote(e,t):void 0;return null==n&&i.show({preserveFocus:!t?.focus}),n}},8834:(e,t,i)=>{i.d(t,{CU:()=>p,DW:()=>u,QP:()=>o,TS:()=>l,VF:()=>h,X4:()=>c,ay:()=>g,gu:()=>m,he:()=>a,mc:()=>d,qM:()=>f});var r=i(963),n=i(9529),s=i(9311);function o(e,t){return(0,s.m)({command:"cherry-pick",state:{repo:e,references:t}})}function a(e,t){return(0,s.m)({command:"fetch",state:{repos:e,reference:t}})}function l(e,t){return(0,s.m)({command:"merge",state:{repo:e,reference:t}})}function c(e,t){return(0,s.m)({command:"pull",state:{repos:e,reference:t}})}function h(e,t,i){return(0,s.m)({command:"push",state:{repos:e,flags:t?["--force"]:[],reference:i}})}function u(e,t,i=!0){return(0,s.m)({command:"rebase",state:{repo:e,reference:t,flags:i?["--interactive"]:[]}})}function d(e,t,i){return(0,s.m)({command:"reset",confirm:null==i||i.includes("--hard"),state:{repo:e,reference:t,flags:i}})}function p(e,t){return(0,s.m)({command:"revert",state:{repo:e,references:t}})}function m(e,t,i){return(0,s.m)({command:"switch",state:{repos:e,reference:t},confirm:i})}async function g(e,t,i){const n=t?.canReveal?await t.revealRepository(e,i):await r.W.instance.repositoriesView.revealRepository(e,i);return null==n&&(t??r.W.instance.repositoriesView).show({preserveFocus:!i?.focus}),n}async function f(e){await(0,n.dO)("revealFileInOS",e.uri)}},252:(e,t,i)=>{i.d(t,{Cw:()=>o,Fw:()=>u,PQ:()=>a,Sw:()=>l,VF:()=>c,ay:()=>h,nn:()=>s});var r=i(963),n=i(9311);function s(e,t){return(0,n.m)({command:"stash",state:{subcommand:"apply",repo:e,reference:t}})}function o(e,t){return(0,n.m)({command:"stash",state:{subcommand:"drop",repo:e,reference:t}})}function a(e,t,i){return(0,n.m)({command:"stash",state:{subcommand:"rename",repo:e,reference:t,message:i}})}function l(e,t){return(0,n.m)({command:"stash",state:{subcommand:"pop",repo:e,reference:t}})}function c(e,t,i,r=!1,s=!1,o){return(0,n.m)({command:"stash",state:{subcommand:"push",repo:e,uris:t,onlyStagedUris:o,message:i,flags:[...r?["--keep-index"]:[],...s?["--staged"]:[]]}})}async function h(e,t){const i=r.W.instance.stashesView,n=i.canReveal?await i.revealStash(e,t):await r.W.instance.repositoriesView.revealStash(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}function u(e,t){const{preserveFocus:i,...n}={...t,commit:e};return r.W.instance.commitDetailsView.show({preserveFocus:i},n)}},6713:(e,t,i)=>{i.d(t,{Od:()=>o,Ue:()=>s,ay:()=>a});var r=i(963),n=i(9311);function s(e,t,i){return(0,n.m)({command:"tag",state:{subcommand:"create",repo:e,reference:t,name:i}})}function o(e,t){return(0,n.m)({command:"tag",state:{subcommand:"delete",repo:e,references:t}})}async function a(e,t){const i=r.W.instance.tagsView,n=i.canReveal?await i.revealTag(e,t):await r.W.instance.repositoriesView.revealTag(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}},5025:(e,t,i)=>{i.d(t,{BC:()=>m,Od:()=>h,Ue:()=>l,ay:()=>u,bA:()=>c,qM:()=>d});var r=i(963),n=i(2800),s=i(9529),o=i(2509),a=i(9311);function l(e,t,i,r){return(0,a.m)({command:"worktree",state:{subcommand:"create",repo:e,uri:t,reference:i,createBranch:r?.createBranch,flags:r?.createBranch?["-b"]:void 0,reveal:r?.reveal}})}function c(e,t){return(0,a.m)({command:"worktree",state:{subcommand:"open",repo:e.repoPath,uri:e.uri,flags:p(t?.location)}})}function h(e,t){return(0,a.m)({command:"worktree",state:{subcommand:"delete",repo:e,uris:(0,n.zx)(t)}})}async function u(e,t){const i=r.W.instance.worktreesView,n=null!=e?i.canReveal?await i.revealWorktree(e,t):await r.W.instance.repositoriesView.revealWorktree(e,t):void 0;return null==n&&i.show({preserveFocus:!t?.focus}),n}async function d(e){await(0,s.dO)("revealFileInOS",e.uri)}function p(e){if(null!=e)switch(e){case o.Tc.NewWindow:return["--new-window"];case o.Tc.AddToWorkspace:return["--add-to-workspace"];case o.Tc.CurrentWindow:default:return[]}}function m(e){if(null!=e)return e.includes("--new-window")?o.Tc.NewWindow:e.includes("--add-to-workspace")?o.Tc.AddToWorkspace:o.Tc.CurrentWindow}},6592:(e,t,i)=>{i.d(t,{Nk:()=>WorktreeDeleteError,P6:()=>WorktreeCreateError,bk:()=>r,ef:()=>StashApplyError,g1:()=>n,hK:()=>s,l0:()=>GitSearchError,s8:()=>StashPushError,xe:()=>o});class GitSearchError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,GitSearchError)}}var r=(e=>(e[e.WorkingChanges=1]="WorkingChanges",e))(r||{});class StashApplyError extends Error{static is(e,t){return e instanceof StashApplyError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;null==e?i="Unable to apply stash":"string"==typeof e?(i=e,r=void 0):(r=e,i="Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"),super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,StashApplyError)}}var n=(e=>(e[e.ConflictingStagedAndUnstagedLines=1]="ConflictingStagedAndUnstagedLines",e))(n||{});class StashPushError extends Error{static is(e,t){return e instanceof StashPushError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to stash";else if("string"==typeof e)i=e,r=void 0;else if(r=e,1===r)i="Stash was created, but the working tree cannot be updated because at least one file has staged and unstaged changes on the same line(s).\n\nDo you want to try again by stashing both your staged and unstaged changes?";else i="Unable to stash";super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,StashApplyError)}}var s=(e=>(e[e.AlreadyCheckedOut=1]="AlreadyCheckedOut",e[e.AlreadyExists=2]="AlreadyExists",e))(s||{});class WorktreeCreateError extends Error{static is(e,t){return e instanceof WorktreeCreateError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to create worktree";else if("string"==typeof e)i=e,r=void 0;else switch(r=e,r){case 1:i="Unable to create worktree because it is already checked out";break;case 2:i="Unable to create worktree because it already exists"}super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,WorktreeCreateError)}}var o=(e=>(e[e.HasChanges=1]="HasChanges",e[e.MainWorkingTree=2]="MainWorkingTree",e))(o||{});class WorktreeDeleteError extends Error{static is(e,t){return e instanceof WorktreeDeleteError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to delete worktree";else if("string"==typeof e)i=e,r=void 0;else switch(r=e,r){case 1:i="Unable to delete worktree because there are uncommitted changes";break;case 2:i="Unable to delete worktree because it is a main working tree"}super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,WorktreeDeleteError)}}},9338:(e,t,i)=>{i.d(t,{i:()=>CommitFormatter});var r=i(8388),n=i(2421),s=i(7139),o=i(2540),a=i(5255),l=i(963),c=i(3148),h=i(2215),u=i(5148),d=i(3105),p=i(7469),m=i(3620),g=i(6450),f=i(439),w=i(4092),v=i(4321),y=i(3050),b=i(5485);class CommitFormatter extends b.M{reset(e,t){super.reset(e,t),null==this._options.outputFormat&&(this._options.outputFormat="plaintext")}get _authorDate(){return this._item.author.formatDate(this._options.dateFormat)}get _authorDateAgo(){return this._item.author.fromNow()}get _authorDateAgoShort(){return this._item.author.fromNow(!0)}get _committerDate(){return this._item.committer.formatDate(this._options.dateFormat)}get _committerDateAgo(){return this._item.committer.fromNow()}get _committerDateAgoShort(){return this._item.committer.fromNow(!0)}get _date(){return this._item.formatDate(this._options.dateFormat)}get _dateAgo(){return this._item.formatDateFromNow()}get _dateAgoShort(){return this._item.formatDateFromNow(!0)}get _pullRequestDate(){const{pullRequestOrRemote:e}=this._options;return null!=e&&w.i7.is(e)?e.formatDate(this._options.dateFormat)??"":""}get _pullRequestDateAgo(){const{pullRequestOrRemote:e}=this._options;return null!=e&&w.i7.is(e)?e.formatDateFromNow()??"":""}get _pullRequestDateOrAgo(){return(null!=this._options.dateStyle?this._options.dateStyle:u.D.get("defaultDateStyle"))===o.Dn.Absolute?this._pullRequestDate:this._pullRequestDateAgo}get ago(){return this._padOrTruncate(this._dateAgo,this._options.tokenOptions.ago)}get agoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:u.D.get("defaultDateStyle");return this._padOrTruncate(e===o.Dn.Absolute?this._date:this._dateAgo,this._options.tokenOptions.agoOrDate)}get agoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:u.D.get("defaultDateStyle");return this._padOrTruncate(e===o.Dn.Absolute?this._date:this._dateAgoShort,this._options.tokenOptions.agoOrDateShort)}get author(){let{name:e,email:t}=this._item.author;const i=this._padOrTruncate(e,this._options.tokenOptions.author);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,m.se)(e),t=(0,m.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get authorAgo(){return this._padOrTruncate(this._authorDateAgo,this._options.tokenOptions.authorAgo)}get authorAgoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:u.D.get("defaultDateStyle");return this._padOrTruncate(e===o.Dn.Absolute?this._authorDate:this._authorDateAgo,this._options.tokenOptions.authorAgoOrDate)}get authorAgoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:u.D.get("defaultDateStyle");return this._padOrTruncate(e===o.Dn.Absolute?this._authorDate:this._authorDateAgoShort,this._options.tokenOptions.authorAgoOrDateShort)}get authorDate(){return this._padOrTruncate(this._authorDate,this._options.tokenOptions.authorDate)}get authorNotYou(){let{name:e,email:t}=this._item.author;if("You"===e)return this._padOrTruncate("",this._options.tokenOptions.authorNotYou);const i=this._padOrTruncate(e,this._options.tokenOptions.authorNotYou);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,m.se)(e),t=(0,m.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get avatar(){const{outputFormat:e}=this._options;if("plaintext"===e||!u.D.get("hovers.avatars"))return this._padOrTruncate("",this._options.tokenOptions.avatar);let{name:t}=this._item.author;const i=this._options.presence;if(null!=i){let r=`${t} ${"You"===t?"are":"is"} ${"dnd"===i.status?"in ":""}${i.statusText.toLocaleLowerCase()}`;"html"===e&&(r=(0,m.se)(r));return this._getAvatar(e,r,this._options.avatarSize).then((t=>this._padOrTruncate(`${t}${this._getPresence(e,i,r)}`,this._options.tokenOptions.avatar)))}return"html"===e&&(t=(0,m.se)(t)),this._getAvatar(e,t,this._options.avatarSize)}async _getAvatar(e,t,i){i=i??u.D.get("hovers.avatarSize");const r=this._item.getAvatarUri({defaultStyle:u.D.get("defaultGravatarsStyle"),size:i}),n=(await r).toString(!0);return this._padOrTruncate("html"===e?`<img src="${n}" alt="title)" title="${t}" width="${i}" height="${i}"${this._options.htmlFormat?.classes?.avatar?` class="${this._options.htmlFormat.classes.avatar}"`:""} />`:`![${t}](${n}|width=${i},height=${i} "${t}")`,this._options.tokenOptions.avatar)}_getPresence(e,t,i){return"html"===e?`<img src="${(0,r.TU)(t.status)}" alt="${i}" title="${i}"${this._options.htmlFormat?.classes?.avatarPresence?` class="${this._options.htmlFormat.classes.avatarPresence}"`:""}/>`:`![${i}](${(0,r.TU)(t.status)} "${i}")`}get changes(){return this._padOrTruncate((0,g.f_)(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate((0,g.f_)(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate((0,g.f_)(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}get commands(){if("plaintext"===this._options.outputFormat||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.commands);let e;if(this._item.isUncommitted){const{previousLineComparisonUris:t}=this._options;return null!=t?.previous?(e=`[\`${this._padOrTruncate((0,v.zL)((0,v.rD)(t.current.sha)?t.current.sha:f.CL),this._options.tokenOptions.commands)}\`](${n.CE.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e+=` &nbsp;[$(chevron-left)$(compare-changes)](${n.V.getMarkdownCommandArgs({lhs:{sha:t.previous.sha??"",uri:t.previous.documentUri()},rhs:{sha:t.current.sha??"",uri:t.current.documentUri()},repoPath:this._item.repoPath,line:this._options.editor?.line})} "Open Changes with Previous Revision")`,e+=` &nbsp;[$(versions)](${n.DA.getMarkdownCommandArgs(l.W.instance.git.getRevisionUri(t.previous),o.VP.Blame,this._options.editor?.line)} "Open Blame Prior to this Change")`):e=`[\`${this._padOrTruncate((0,v.zL)(this._item.isUncommittedStaged?f.pw:f.CL),this._options.tokenOptions.commands)}\`](${n.CE.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e}const t=" &nbsp;&nbsp;|&nbsp;&nbsp; ";if(e=`---\n\n[\`$(git-commit) ${this.id}\`](${n.CE.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e+=` &nbsp;[$(chevron-left)$(compare-changes)](${n.V.getMarkdownCommandArgs(this._item,this._options.editor?.line)} "Open Changes with Previous Revision")`,null!=this._item.file&&null!=this._item.unresolvedPreviousSha){const t=l.W.instance.git.getRevisionUri(this._item.unresolvedPreviousSha,this._item.file.originalPath??this._item.file?.path,this._item.repoPath);e+=` &nbsp;[$(versions)](${n.DA.getMarkdownCommandArgs(t,o.VP.Blame,this._options.editor?.line)} "Open Blame Prior to this Change")`}if(e+=` &nbsp;[$(search)](${s.mY.getMarkdownCommandArgsCore(a.Gh.RevealCommitInView,{repoPath:this._item.repoPath,sha:this._item.sha,revealInView:!0})} "Reveal in Side Bar")`,(0,h.L)()&&(e+=` &nbsp;[$(gitlens-graph)](${s.mY.getMarkdownCommandArgsCore(a.Gh.ShowInCommitGraph,{ref:(0,v.qj)(this._item)})} "Open in Commit Graph")`),null!=this._options.remotes&&0!==this._options.remotes.length){const t=y.ss.getHighlanderProviders(this._options.remotes);e+=` &nbsp;[$(globe)](${n._f.getMarkdownCommandArgs(this._item.sha)} "Open Commit on ${t?.length?t[0].name:"Remote"}")`}const{pullRequestOrRemote:i}=this._options;if(null!=i&&(w.i7.is(i)?e+=`${t}[$(git-pull-request) PR #${i.id}](${C("openPullRequest",{repoPath:this._item.repoPath,provider:{id:i.provider.id,name:i.provider.name,domain:i.provider.domain},pullRequest:{id:i.id,url:i.url}})} "Open Pull Request \\#${i.id}${1==l.W.instance.actionRunners.count("openPullRequest")?` on ${i.provider.name}`:"..."}\n${a.NE.Dash.repeat(2)}\n${(0,m.ry)(i.title).replace(/"/g,'\\"')}\n${i.state}, ${i.formatDateFromNow()}")`:i instanceof p.PK?e+=`${t}[$(git-pull-request) PR $(loading~spin)](command:${a.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`:null!=i.provider&&u.D.get("integrations.enabled")&&(e+=`${t}[$(plug) Connect to ${i.provider.name}${a.NE.Ellipsis}](${n.tM.getMarkdownCommandArgs(i)} "Connect to ${i.provider.name} to enable the display of the Pull Request (if any) that introduced this commit")`)),l.W.instance.actionRunners.count("hover.commands")>0){const{name:i,email:r}=this._item.author;e+=`${t}[$(organization) Team${a.NE.SpaceThinnest}${a.NE.Ellipsis}](${C("hover.commands",{repoPath:this._item.repoPath,commit:{sha:this._item.sha,author:{name:i,email:r,presence:this._options.presence}},file:null!=this._options.editor?{uri:this._options.editor?.uri.toString(),line:this._options.editor?.line}:void 0})} "Show Team Actions")`}const r=this._item.getGitUri();return e+=`${t}[$(ellipsis)](${n.MZ.getMarkdownCommandArgs(null!=r?{revisionUri:l.W.instance.git.getRevisionUri(r).toString(!0)}:{commit:this._item})} "Show More Actions")`,this._padOrTruncate(e,this._options.tokenOptions.commands)}get committerAgo(){return this._padOrTruncate(this._committerDateAgo,this._options.tokenOptions.committerAgo)}get committerAgoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:u.D.get("defaultDateStyle");return this._padOrTruncate(e===o.Dn.Absolute?this._committerDate:this._committerDateAgo,this._options.tokenOptions.committerAgoOrDate)}get committerAgoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:u.D.get("defaultDateStyle");return this._padOrTruncate(e===o.Dn.Absolute?this._committerDate:this._committerDateAgoShort,this._options.tokenOptions.committerAgoOrDateShort)}get committerDate(){return this._padOrTruncate(this._committerDate,this._options.tokenOptions.committerDate)}get date(){return this._padOrTruncate(this._date,this._options.tokenOptions.date)}get email(){const{email:e}=this._item.author;return this._padOrTruncate(e??"",this._options.tokenOptions.email)}get footnotes(){const{outputFormat:e}=this._options;return this._padOrTruncate(null==this._options.footnotes||0===this._options.footnotes.size?"":(0,d.v_)((0,d.UI)(this._options.footnotes,(([t,i])=>"plaintext"===e?`${(0,m.sC)(t)} ${i}`:i)),"html"===e?"<br \\>":"markdown"===e?"\\\n":"\n"),this._options.tokenOptions.footnotes)}get id(){const e=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);return"plaintext"!==this._options.outputFormat&&this._options.unpublished?`<span style="color:#35b15e;"${this._options.htmlFormat?.classes?.id?` class="${this._options.htmlFormat.classes.id}"`:""}>${e} (unpublished)</span>`:e}get link(){let e;switch(this._options.outputFormat){case"markdown":e=`[\`$(git-commit) ${this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id)}\`](${n.CE.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`;break;case"html":{const t=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);e=`<a href="${n.CE.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)}" title="Open Details"${this._options.htmlFormat?.classes?.link?` class="${this._options.htmlFormat.classes.link}"`:""}><span class="codicon codicon-git-commit"></span>${t}</a>`;break}default:return this.id}return this._padOrTruncate(e,this._options.tokenOptions.link)}get message(){const{outputFormat:e}=this._options;if(this._item.isUncommitted){const t=this._item.file?.hasConflicts??!1,i=this._item.isUncommittedStaged||(this._options.previousLineComparisonUris?.current?.isUncommittedStaged??!1);let r=(t?"Merge":i?"Staged":"Uncommitted")+" changes";switch(e){case"html":r=`<span ${this._options.htmlFormat?.classes?.message?`class="${this._options.htmlFormat.classes.message}"`:""}>${r}</span>`;break;case"markdown":r=`\n> ${r}`}return this._padOrTruncate(r,this._options.tokenOptions.message)}let t=(this._options.messageTruncateAtNewLine?this._item.summary:this._item.message??this._item.summary).trim().replace(/\r?\n/g,"\n");switch(t=(0,c.X)(t),t=this._padOrTruncate(t,this._options.tokenOptions.message),"plaintext"!==e&&(t=(0,m.se)(t)),"markdown"===e&&(t=(0,m.ry)(t,{quoted:!0})),this._options.messageAutolinks&&(t=l.W.instance.autolinks.linkify(t,e,this._options.remotes,this._options.autolinkedIssuesOrPullRequests,this._options.footnotes)),null!=this._options.messageIndent&&"plaintext"===e&&(t=t.replace(/^/gm,a.NE.Space.repeat(this._options.messageIndent))),e){case"html":return`<span ${this._options.htmlFormat?.classes?.id?`class="${this._options.htmlFormat.classes.id}"`:""}>${t}</span>`;case"markdown":return`\n> ${t}`;default:return t}}get pullRequest(){const{pullRequestOrRemote:e}=this._options;if(null==e||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.pullRequest);let t;if(w.i7.is(e))if("markdown"===this._options.outputFormat){const i=(0,m.ry)(e.title).replace(/"/g,'\\"').trim();if(t=`PR [**#${e.id}**](${C("openPullRequest",{repoPath:this._item.repoPath,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain},pullRequest:{id:e.id,url:e.url}})} "Open Pull Request \\#${e.id}${1==l.W.instance.actionRunners.count("openPullRequest")?` on ${e.provider.name}`:"..."}\n${a.NE.Dash.repeat(2)}\n${(0,m.ry)(e.title).replace(/"/g,'\\"')}\n${e.state}, ${e.formatDateFromNow()}")`,null!=this._options.footnotes){const t=this._options.footnotes.size+1;this._options.footnotes.set(t,`${w.i7.getMarkdownIcon(e)} [**${i}**](${e.url} "Open Pull Request \\#${e.id} on ${e.provider.name}")\\\n${a.NE.Space.repeat(4)} #${e.id} ${e.state.toLocaleLowerCase()} ${e.formatDateFromNow()}`)}}else if(null!=this._options.footnotes){const i=this._options.footnotes.size+1;this._options.footnotes.set(i,`PR #${e.id}: ${e.title}  ${a.NE.Dot}  ${e.state}, ${e.formatDateFromNow()}`),t=`PR #${e.id}${(0,m.sC)(i)}`}else t=`PR #${e.id}`;else{if(!(e instanceof p.PK))return this._padOrTruncate("",this._options.tokenOptions.pullRequest);t="markdown"===this._options.outputFormat?`[PR $(loading~spin)](command:${a.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`:this._options?.pullRequestPendingMessage??""}return this._padOrTruncate(t,this._options.tokenOptions.pullRequest)}get pullRequestAgo(){return this._padOrTruncate(this._pullRequestDateAgo,this._options.tokenOptions.pullRequestAgo)}get pullRequestAgoOrDate(){return this._padOrTruncate(this._pullRequestDateOrAgo,this._options.tokenOptions.pullRequestAgoOrDate)}get pullRequestDate(){return this._padOrTruncate(this._pullRequestDate,this._options.tokenOptions.pullRequestDate)}get pullRequestState(){const{pullRequestOrRemote:e}=this._options;return this._padOrTruncate(null!=e&&w.i7.is(e)?e.state??"":"",this._options.tokenOptions.pullRequestState)}get sha(){return this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.sha)}get stashName(){return this._padOrTruncate(this._item.stashName??"",this._options.tokenOptions.stashName)}get stashNumber(){return this._padOrTruncate(this._item.number??"",this._options.tokenOptions.stashNumber)}get stashOnRef(){return this._padOrTruncate(this._item.stashOnRef??"",this._options.tokenOptions.stashOnRef)}get tips(){let e=this._options.getBranchAndTagTips?.(this._item.sha,{icons:"markdown"===this._options.outputFormat});if(null!=e&&"plaintext"!==this._options.outputFormat){const t=e.split(", ");e=t.map((e=>`<span style="color:#ffffff;background-color:#1d76db;"${this._options.htmlFormat?.classes?.tips?` class="${this._options.htmlFormat.classes.tips}"`:""}>&nbsp;&nbsp;${e}&nbsp;&nbsp;</span>`)).join(a.NE.Space.repeat(3))}return this._padOrTruncate(e??"",this._options.tokenOptions.tips)}static fromTemplate(e,t,i){if(null!=i&&"string"!=typeof i||(i={dateFormat:i}),CommitFormatter.has(e,"footnotes")&&null==i.footnotes&&(i.footnotes=new Map),CommitFormatter.has(e,"avatar")&&i?.outputFormat)throw new Error("Invalid template token 'avatar' used in non-async call");return super.fromTemplateCore(this,e,t,i)}static fromTemplateAsync(e,t,i){return CommitFormatter.has(e,"footnotes")&&(null!=i&&"string"!=typeof i||(i={dateFormat:i}),null==i.footnotes&&(i.footnotes=new Map)),super.fromTemplateCoreAsync(this,e,t,i)}static has(e,...t){return super.has(e,...t)}}function C(e,t){return s.mY.getMarkdownCommandArgsCore(`${a.Gh.ActionPrefix}${e}`,{...t,type:e})}},5485:(e,t,i)=>{i.d(t,{M:()=>Formatter});var r=i(3620);const n=new Map,s=/ /g;class Formatter{_item;_options;constructor(e,t){this.reset(e,t)}reset(e,t){this._item=e,this.collapsableWhitespace=0,null==t&&null!=this._options||(null==t&&(t={}),null==t.dateFormat&&(t.dateFormat="MMMM Do, YYYY h:mma"),null==t.tokenOptions&&(t.tokenOptions={}),this._options=t)}collapsableWhitespace=0;_padOrTruncate(e,t){if(null==e||0===e.length)return e;null==t&&(t={collapseWhitespace:!1,padDirection:"left",prefix:void 0,suffix:void 0,truncateTo:void 0});let i=t.truncateTo;if(null==i)this.collapsableWhitespace=0;else{i+=this.collapsableWhitespace,this.collapsableWhitespace=0;const n=(0,r.dz)(e),s=i-n;s>0?(t.collapseWhitespace&&(this.collapsableWhitespace=s),"left"===t.padDirection?e=(0,r.Q_)(e,i,void 0,n):(t.collapseWhitespace&&(i-=s),e=(0,r.eh)(e,i,void 0,n))):s<0&&(e=(0,r.$G)(e,i,void 0,n))}return(t.prefix||t.suffix)&&(e=`${t.prefix??""}${e}${t.suffix??""}`),e}static _formatter=void 0;static fromTemplateCore(e,t,i,n){if(t=t.replace(s," "),e instanceof Formatter)return(0,r.sX)(t,e);let o;if(o=null==n||"string"==typeof n?{dateFormat:n}:n,null==o.tokenOptions){const e=(0,r.Gg)(t).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));o.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,o):this._formatter.reset(i,o),(0,r.sX)(t,this._formatter)}static fromTemplateCoreAsync(e,t,i,n){if(t=t.replace(s," "),e instanceof Formatter)return(0,r.Qu)(t,e);let o;if(o=null==n||"string"==typeof n?{dateFormat:n}:n,null==o.tokenOptions){const e=(0,r.Gg)(t).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));o.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,o):this._formatter.reset(i,o),(0,r.Qu)(t,this._formatter)}static has(e,...t){const i=1===t.length?t[0]:`(${t.join("|")})`;let r=n.get(i);return null==r&&(r=new RegExp(`\\b${i}\\b`),n.set(i,r)),r.test(e)}}},6373:(e,t,i)=>{i.d(t,{o:()=>StatusFileFormatter});var r=i(5255),n=i(3700),s=i(7881),o=i(5485);class StatusFileFormatter extends o.M{get directory(){const e=(0,s.OC)(this._item,!1,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.directory)}get file(){const e=(0,n.EZ)(this._item.path);return this._padOrTruncate(e,this._options.tokenOptions.file)}get filePath(){const e=(0,s.PM)(this._item,{relativeTo:this._options.relativePath,truncateTo:this._options.tokenOptions.filePath?.truncateTo});return this._padOrTruncate(e,this._options.tokenOptions.filePath)}get originalPath(){const e=(0,s.Gv)(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.originalPath)}get path(){const e=(0,s.W5)(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.path)}get status(){const e=(0,s.K9)(this._item.status);return this._padOrTruncate(e,this._options.tokenOptions.status)}get working(){let e="";return e=null!=this._item.workingTreeStatus&&null!=this._item.indexStatus?`${r.NE.Pencil}${r.NE.Space}${r.NE.SpaceThinnest}${r.NE.Check}`:null!=this._item.workingTreeStatus?`${r.NE.Pencil}${r.NE.SpaceThin}${r.NE.SpaceThinnest}${r.NE.EnDash}${r.NE.Space}`:null!=this._item.indexStatus?`${r.NE.Space}${r.NE.EnDash}${r.NE.Space.repeat(2)}${r.NE.Check}`:"",this._padOrTruncate(e,this._options.tokenOptions.working)}get changes(){return this._padOrTruncate(s.K8.is(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate(s.K8.is(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate(s.K8.is(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}static fromTemplate(e,t,i){return super.fromTemplateCore(this,e,t,i)}}},2380:(e,t,i)=>{i.d(t,{pq:()=>r,q4:()=>n});var r=(e=>(e.Git="git",e.GitHub="github",e.Vsls="vsls",e))(r||{}),n=(e=>(e.Private="private",e.Public="public",e.Local="local",e))(n||{})},7462:(e,t,i)=>{i.d(t,{Wj:()=>C,YY:()=>b,uy:()=>A});var r=i(9496),n=i(185),s=i(4398),o=i(5255),a=i(963),l=i(4298),c=i(4241),h=i(4488),u=i(1774),d=i(3700),p=i(2509),m=i(439),g=i(4321),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&f(t,i,s),s};const y=class _GitUri extends r.Uri{repoPath;sha;constructor(e,t){if(null==e)return void super({scheme:"unknown"});if(e.scheme===o.sN.GitLens){super({scheme:e.scheme,authority:e.authority,path:e.path,query:e.query,fragment:e.fragment});const i=function(e){return JSON.parse((0,n.d)(e))}(e.authority);this.repoPath=i.repoPath;let r=i.ref;return null!=t&&"string"!=typeof t&&(r=t.sha),void(!(0,g.rD)(r)&&(0,g.l3)(r)||(this.sha=r))}if((0,p.pt)(e)){super(e);const[,i,r]=e.path.split("/",3);this.repoPath=e.with({path:`/${i}/${r}`}).toString();const s=function(e){const[t,i]=e.authority.split("+");let r;if(i)try{r=JSON.parse((0,n.d)(i))}catch{}return{scheme:t,metadata:r}}(e);let o=s.metadata?.ref?.id;return null!=t&&"string"!=typeof t&&(o=t.sha),void(!o||!(0,g.rD)(o)&&(0,g.l3)(o)||(this.sha=o))}if(void 0===t)return void super(e);if("string"==typeof t)return super(e),void(this.repoPath=t);let i,r=e.authority,s=(0,d.AH)(a.W.instance.git.getAbsoluteUri(t.fileName??e.fsPath,t.repoPath).fsPath);if(47===s.charCodeAt(0)&&47===s.charCodeAt(1)){const e=s.indexOf("/",2);-1===e?(r=s.substring(2),s="/"):(r=s.substring(2,e),s=s.substring(e)||"/")}switch(e.scheme){case"https":case"http":case"file":i=s?47!==s.charCodeAt(0)?`/${s}`:s:"/";break;default:i=47!==s.charCodeAt(0)?`/${s}`:s}super({scheme:e.scheme,authority:r,path:i,query:e.query,fragment:e.fragment}),this.repoPath=t.repoPath,!(0,g.rD)(t.sha)&&(0,g.l3)(t.sha)||(this.sha=t.sha)}get directory(){return(0,d.Fd)(this.relativePath)}get fileName(){return(0,d.EZ)(this.relativePath)}get isUncommitted(){return(0,g.l3)(this.sha)}get isUncommittedStaged(){return(0,g.rD)(this.sha)}get relativePath(){return(0,d.uo)((0,d.M)(this.fsPath),this.repoPath)[0]}get shortSha(){return(0,g.zL)(this.sha)}documentUri(){return r.Uri.from({scheme:this.scheme,authority:this.authority,path:this.path,query:this.query,fragment:this.fragment})}equals(e){return!!l.n.equals(this,e)&&this.sha===(A(e)?e.sha:void 0)}getFormattedFileName(e){return(0,u.d)(this.fsPath,{...e,fileOnly:!0})}toFileUri(){return a.W.instance.git.getAbsoluteUri(this.fsPath,this.repoPath)}static fromFile(e,t,i,r=!1){const n=a.W.instance.git.getAbsoluteUri("string"==typeof e?e:r&&e.originalPath||e.path,t);return new _GitUri(n,i?{repoPath:t,sha:"string"!=typeof e&&"?"===e.status?`${i}^3`:i}:t)}static fromRepoPath(e,t){return new _GitUri(a.W.instance.git.getAbsoluteUri(e,e),t?{repoPath:e,sha:t}:e)}static fromRevisionUri(e){return new _GitUri(e)}static async fromUri(e){if(A(e))return e;if(!a.W.instance.git.isTrackable(e))return new _GitUri(e);if(e.scheme===o.sN.GitLens)return new _GitUri(e);if(e.scheme===o.sN.Git){const t=(0,s.h)(e);if(t?.path){const i=await a.W.instance.git.getOrOpenRepository(r.Uri.file(t.path));if(null==i)throw new Error(`Unable to find repository for uri=${r.Uri.file(t.path).toString(!0)}`);let n;switch(t.ref){case"":case"~":n=m.pw;break;case null:n=void 0;break;default:n=t.ref}const s={fileName:t.path,repoPath:i.path,sha:n};return new _GitUri(e,s)}}if(e.scheme===o.sN.PRs){let t;try{t=JSON.parse(e.query)}catch{}if(t?.fileName){const i=await a.W.instance.git.getOrOpenRepository(e);if(null==i)throw new Error(`Unable to find repository for uri=${r.Uri.file(t.fileName).toString(!0)}`);const n={fileName:t.fileName,repoPath:i.path,sha:t.isBase?t.baseCommit:t.headCommit};return new _GitUri(e,n)}}const t=await a.W.instance.git.getOrOpenRepository(e);return new _GitUri(e,t?.path)}};v([(0,h.H)()],y.prototype,"directory",1),v([(0,h.H)()],y.prototype,"fileName",1),v([(0,h.H)()],y.prototype,"isUncommitted",1),v([(0,h.H)()],y.prototype,"isUncommittedStaged",1),v([(0,h.H)()],y.prototype,"relativePath",1),v([(0,h.H)()],y.prototype,"shortSha",1),v([(0,h.H)()],y.prototype,"documentUri",1),v([(0,h.H)()],y.prototype,"toFileUri",1),v([(0,c.fF)({exit:!0})],y,"fromUri",1);let b=y;const C=Object.freeze(new b);function A(e){return e instanceof b}},5367:(e,t,i)=>{i.d(t,{$q:()=>P,BF:()=>D,Iq:()=>C,Lo:()=>R,RJ:()=>A,S3:()=>S,Vx:()=>b,XI:()=>GitBranch,YF:()=>_,Yu:()=>y,eK:()=>T,uz:()=>k});var r=i(2540),n=i(963),s=i(5148),o=i(7512),a=i(4241),l=i(4488),c=i(4336),h=i(7469),u=i(3620),d=i(4321),p=i(827),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&m(t,i,s),s};const w=/\s/,v=/^(?=.*\bHEAD\b)?(?=.*\bdetached\b).*$/;var y=(e=>(e.Ahead="ahead",e.Behind="behind",e.Diverged="diverged",e.Local="local",e.MissingUpstream="missingUpstream",e.Remote="remote",e.UpToDate="upToDate",e.Unpublished="unpublished",e))(y||{});function b(e,t,i){return`${e}|${t?"remotes/":"heads/"}${i}`}class GitBranch{constructor(e,t,i,r,n,s,o,a=0,l=0,c=!1,h=!1){this.repoPath=e,this.name=t,this.remote=i,this.current=r,this.date=n,this.sha=s,this.rebasing=h,this.id=b(e,i,t),this.detached=c||!!this.current&&k(t),this.detached&&(this.name=C(this.sha)),this.upstream=null==o?.name||0===o.name.length?void 0:o,this.state={ahead:a,behind:l}}refType="branch";detached;id;upstream;state;toString(){return`${(0,c.q4)(this)}(${this.id})`}get formattedDate(){return n.W.instance.BranchDateFormatting.dateStyle===r.Dn.Absolute?this.formatDate(n.W.instance.BranchDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.detached?this.sha:this.name}formatDate(e){return null!=this.date?(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,o.Zh)(this.date):""}_pullRequest;async getAssociatedPullRequest(e){if(null==this._pullRequest){async function t(){const t=await this.getRemoteWithProvider();if(null==t)return;const i=this.getTrackingWithoutRemote()??this.getNameWithoutRemote();return n.W.instance.git.getPullRequestForBranch(i,t,e)}this._pullRequest=t.call(this)}return(0,h.HO)(this._pullRequest,e?.timeout)}getBasename(){const e=this.getNameWithoutRemote(),t=e.lastIndexOf("/");return-1!==t?e.substring(t+1):e}getNameWithoutRemote(){return this.remote?this.name.substring(A(this.name)+1):this.name}getTrackingWithoutRemote(){return(0,d.Gn)(this)}async getRemote(){const e=this.getRemoteName();if(null==e)return;const t=await n.W.instance.git.getRemotes(this.repoPath);return 0!==t.length?t.find((t=>t.name===e)):void 0}async getRemoteWithProvider(){const e=this.getRemoteName();if(null==e)return;const t=await n.W.instance.git.getRemotesWithProviders(this.repoPath);return 0!==t.length?t.find((t=>t.name===e)):void 0}getRemoteName(){return this.remote?R(this.name):null!=this.upstream?R(this.upstream.name):void 0}async getStatus(){if(this.remote)return"remote";if(null!=this.upstream)return this.upstream.missing?"missingUpstream":this.state.ahead&&this.state.behind?"diverged":this.state.ahead?"ahead":this.state.behind?"behind":"upToDate";return(await n.W.instance.git.getRemotesWithProviders(this.repoPath)).length>0?"unpublished":"local"}getTrackingStatus(e){return(0,p.JP)(this.upstream,this.state,e)}get starred(){const e=n.W.instance.storage.getWorkspace("starred:branches");return void 0!==e&&!0===e[this.id]}star(){return n.W.instance.git.getRepository(this.repoPath)?.star(this)}unstar(){return n.W.instance.git.getRepository(this.repoPath)?.unstar(this)}}function C(e){return`(${(0,d.zL)(e)}...)`}function A(e){return e.startsWith("remotes/")?e.indexOf("/",8):e.indexOf("/")}function P(e){if(e.remote){const t=A(e.name);return-1===t?[e.name,void 0]:[e.name.substring(t+1),e.name.substring(0,t)]}if(null!=e.upstream?.name){const t=A(e.upstream.name);return-1===t?[e.name,void 0]:[e.name,e.upstream.name.substring(0,t)]}return[e.name,void 0]}function S(e){return e.substring(A(e)+1)}function R(e){return e.substring(0,A(e))}function D(e){return e instanceof GitBranch}function k(e){return w.test(e)||v.test(e)}function _(e,t){switch((t={current:!0,orderBy:s.D.get("sortBranchesBy"),...t}).orderBy){case r.Vz.DateAsc:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==e.date?-1:e.date.getTime())-(null==i.date?-1:i.date.getTime())));case r.Vz.NameAsc:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,u.dm)(e.name,i.name)));case r.Vz.NameDesc:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,u.dm)(i.name,e.name)));case r.Vz.DateDesc:default:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==i.date?-1:i.date.getTime())-(null==e.date?-1:e.date.getTime())))}}async function T(e,t){let i,r;t.startsWith("remotes/")?(i=t,t=t.substring(8)):i=`remotes/${t}`;do{r=await e.getBranches(null!=r?{paging:r.paging}:void 0);for(const e of r.values)if(!e.remote&&null!=e.upstream?.name&&(e.upstream.name===t||e.upstream.name===i))return e}while(r.paging?.more)}f([(0,l.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitBranch.prototype,"formatDate",1),f([(0,a.fF)()],GitBranch.prototype,"getAssociatedPullRequest",1),f([(0,l.H)()],GitBranch.prototype,"getBasename",1),f([(0,l.H)()],GitBranch.prototype,"getNameWithoutRemote",1),f([(0,l.H)()],GitBranch.prototype,"getTrackingWithoutRemote",1),f([(0,l.H)()],GitBranch.prototype,"getRemote",1),f([(0,l.H)()],GitBranch.prototype,"getRemoteWithProvider",1),f([(0,l.H)()],GitBranch.prototype,"getRemoteName",1),f([(0,l.H)()],GitBranch.prototype,"getStatus",1)},6450:(e,t,i)=>{i.d(t,{By:()=>R,G2:()=>S,_j:()=>GitCommitIdentity,aM:()=>A,f_:()=>P,yp:()=>D});var r=i(9496),n=i(8388),s=i(2540),o=i(5255),a=i(7512),l=i(5432),c=i(4488),h=i(4336),u=i(7469),d=i(3620),p=i(7462),m=i(439),g=i(7881),f=i(4321),w=Object.defineProperty,v=Object.getOwnPropertyDescriptor,y=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?v(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&w(t,i,s),s};const b=/stash@{(\d+)}/,C=class _GitCommit{constructor(e,t,i,r,n,s,a,l,c,h,u,d,p,m){this.container=e,this.repoPath=t,this.sha=i,this.author=r,this.committer=n,this.parents=a,this.ref=this.sha,this.shortSha=this.sha.substring(0,this.container.CommitShaFormatting.length),this.tips=d,p?(this.refType="stash",this.stashName=p||void 0,this.stashOnRef=m||void 0,this.number=b.exec(p)?.[1]):this.refType="revision",null!=l?(this._message=l,this._summary=s!==l?`${s} ${o.NE.Ellipsis}`:s):this._summary=`${s} ${o.NE.Ellipsis}`,null!=h&&(this._stats=h),null!=c&&(Array.isArray(c)?this._files=c:c instanceof g.K8?this._file=c:(null!=c.file&&(this._file=c.file),null!=c.files&&(this._files=c.files)),this._recomputeStats=!0),null!=u?Array.isArray(u)?this.lines=u:this.lines=[u]:this.lines=[]}_stashUntrackedFilesLoaded=!1;_recomputeStats=!1;lines;ref;refType;shortSha;stashName;number;stashOnRef;tips;toString(){return`${(0,h.q4)(this)}(${this.repoPath}|${this.shortSha})`}get date(){return this.container.CommitDateFormatting.dateSource===s.Vn.Committed?this.committer.date:this.author.date}_file;get file(){return this._file}_files;get files(){return this._files}get formattedDate(){return this.container.CommitDateFormatting.dateStyle===s.Dn.Absolute?this.formatDate(this.container.CommitDateFormatting.dateFormat):this.formatDateFromNow()}get isUncommitted(){return(0,f.l3)(this.sha)}get isUncommittedStaged(){return(0,f.rD)(this.sha)}_message;get message(){return this._message}get name(){return this.stashName?this.stashName:this.shortSha}_stats;get stats(){return this._recomputeStats&&this.computeFileStats(),this._stats}_summary;get summary(){return this._summary}_resolvedPreviousSha;get unresolvedPreviousSha(){const e=this._resolvedPreviousSha??(null!=this.file?this.file.previousSha:this.parents[0])??`${this.sha}^`;return(0,f.j$)(e)?"HEAD":e}_etagFileSystem;hasFullDetails(){return null!=this.message&&null!=this.files&&(this.isUncommitted&&this._etagFileSystem===this.container.git.getRepository(this.repoPath)?.etagFileSystem||0!==this.parents.length)&&("stash"!==this.refType||this._stashUntrackedFilesLoaded)}async ensureFullDetails(){if(this.hasFullDetails())return;if(this.isUncommitted){this._message="Uncommitted Changes";const e=this.container.git.getRepository(this.repoPath);if(this._etagFileSystem=e?.etagFileSystem,null!=this._etagFileSystem){const t=await this.container.git.getStatusForRepo(this.repoPath);null!=t&&(this._files=t.files.map((e=>new g.K8(this.repoPath,e.path,e.status,e.originalPath)))),this._etagFileSystem=e?.etagFileSystem}return void(null==this._files&&(this._files=null!=this.file?[this.file]:[]))}const[e,t]=await Promise.allSettled(["stash"!==this.refType?this.container.git.getCommit(this.repoPath,this.sha):void 0,"stash"!==this.refType||this._stashUntrackedFilesLoaded?void 0:this.container.git.getCommit(this.repoPath,`${this.stashName}^3`),this.getPreviousSha()]);let i;if("fulfilled"===e.status&&null!=e.value&&(i=e.value,this.parents.push(...i.parents??[]),this._summary=i.summary,this._message=i.message,this._files=i.files,null!=this._file)){const e=this._files.find((e=>e.path===this._file.path));null!=e&&(this._file=new g.K8(e.repoPath,e.path,e.status,e.originalPath??this._file.originalPath,e.previousSha??this._file.previousSha,e.stats??this._file.stats))}if("fulfilled"===t.status&&null!=t.value&&(this._stashUntrackedFilesLoaded=!0,i=t.value,null!=i?.files&&0!==i.files.length)){const e=i.files.map((e=>new g.K8(this.repoPath,e.path,g.Bh.Untracked,e.originalPath)));null==this._files?this._files=e:this._files.push(...e)}this._recomputeStats=!0}computeFileStats(){if(!this._recomputeStats||null==this._files)return;this._recomputeStats=!1;const e={added:0,deleted:0,changed:0};let t=0,i=0;for(const r of this._files)switch(null!=r.stats&&(t+=r.stats.additions,i+=r.stats.deletions),r.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}null!=this._stats&&(0===t&&0!==this._stats.additions&&(t=this._stats.additions),0===i&&0!==this._stats.deletions&&(i=this._stats.deletions)),this._stats={...this._stats,changedFiles:e,additions:t,deletions:i}}async findFile(e){if(!this.hasFullDetails()&&(await this.ensureFullDetails(),null==this._files))return;const t=this.container.git.getRelativePath(e,this.repoPath);return this._files?.find((e=>e.path===t))}formatDate(e){return this.container.CommitDateFormatting.dateSource===s.Vn.Committed?this.committer.formatDate(e):this.author.formatDate(e)}formatDateFromNow(e){return this.container.CommitDateFormatting.dateSource===s.Vn.Committed?this.committer.fromNow(e):this.author.fromNow(e)}formatStats(e){const t=this.stats;if(null==t)return e?.empty??"";const{changedFiles:i,additions:r,deletions:n}=t;if(R(i)<=0&&r<=0&&n<=0)return e?.empty??"";const{compact:s=!1,expand:a=!1,prefix:l="",sectionSeparator:c=` ${(0,d.vk)(o.NE.Dot,1,1,o.NE.Space)} `,separator:h=" ",suffix:u=""}=e??{};let p=l;if("number"==typeof i)i&&(p+=a?`${(0,d._6)("file",i)} changed`:`~${i}`);else{const{added:e,changed:t,deleted:n}=i;e?p+=a?`${(0,d._6)("file",e)} added`:`+${e}`:a||s||(p+="+0"),t?p+=`${e?h:""}${a?`${(0,d._6)("file",t)} changed`:`~${t}`}`:a||s||(p+="~0"),n?p+=`${t|r?h:""}${a?`${(0,d._6)("file",n)} deleted`:`-${n}`}`:a||s||(p+="-0")}return a&&(r&&(p+=`${i?c:""}${(0,d._6)("addition",r)}`),n&&(p+=`${i||r?h:""}${(0,d._6)("deletion",n)}`)),p+=u,p}_pullRequest;async getAssociatedPullRequest(e){if(null==this._pullRequest){async function t(){const t=e?.remote??await this.container.git.getBestRemoteWithRichProvider(this.repoPath);if(null!=t?.provider)return this.container.git.getPullRequestForCommit(this.ref,t,e)}this._pullRequest=t.call(this)}return(0,u.HO)(this._pullRequest,e?.timeout)}getAvatarUri(e){return this.author.getAvatarUri(this,e)}getCachedAvatarUri(e){return this.author.getCachedAvatarUri(e)}async getCommitForFile(e){const t="string"==typeof e?this.container.git.getRelativePath(e,this.repoPath):e.path,i=await this.findFile(t);if(null==i)return;return this.with({files:{file:i}})}async getCommitsForFiles(){if(!this.hasFullDetails()&&(await this.ensureFullDetails(),null==this._files))return[];const e=this._files?.map((e=>this.with({files:{file:e}})));return e??[]}getGitUri(e=!1){const t=this._file?.uri??this.container.git.getAbsoluteUri(this.repoPath,this.repoPath);return e?new p.YY(this._file?.originalUri??t,{repoPath:this.repoPath,sha:this.unresolvedPreviousSha}):new p.YY(t,this)}getPreviousComparisonUrisForLine(e,t){return null!=this.file?this.container.git.getPreviousComparisonUrisForLine(this.repoPath,this.file.uri,e,t??(this.sha===m.CL?void 0:this.sha)):Promise.resolve(void 0)}_previousShaPromise;async getPreviousSha(){if(null==this._previousShaPromise){async function e(){if(null!=this.file){if(null!=this.file.previousSha&&(0,f.D3)(this.file.previousSha))return this.file.previousSha;const e=await this.container.git.resolveReference(this.repoPath,(0,f.l3)(this.sha,!0)?"HEAD":`${this.sha}^`,this.file.originalPath??this.file.path);return this._resolvedPreviousSha=e,e}const e=this.parents[0];if(null!=e&&(0,f.D3)(e))return e;const t=await this.container.git.resolveReference(this.repoPath,(0,f.l3)(this.sha,!0)?"HEAD":`${this.sha}^`);return this._resolvedPreviousSha=t,t}this._previousShaPromise=e.call(this)}return this._previousShaPromise}getRepository(){return this.container.git.getRepository(this.repoPath)}async isPushed(){return this.container.git.hasCommitBeenPushed(this.repoPath,this.ref)}with(e){let t;return null!=e.files?(t={file:this._file,files:this._files},null!=e.files.file?t.file=e.files.file:null===e.files.file&&(t.file=void 0),null!=e.files.files?t.files=e.files.files:null===e.files.files&&(t.files=void 0)):null===e.files&&(t=void 0),new _GitCommit(this.container,this.repoPath,e.sha??this.sha,this.author,this.committer,this.summary,this.getChangedValue(e.parents,this.parents)??[],this.message,t,this.stats,this.getChangedValue(e.lines,this.lines),this.tips,this.stashName,this.stashOnRef)}getChangedValue(e,t){return void 0===e?t:null!==e?e:void 0}};y([(0,c.H)()],C.prototype,"isUncommitted",1),y([(0,c.H)()],C.prototype,"isUncommittedStaged",1),y([(0,l.H)()],C.prototype,"ensureFullDetails",1),y([(0,c.H)()],C.prototype,"getGitUri",1),y([(0,c.H)(((e,t)=>`${e}|${t??""}`))],C.prototype,"getPreviousComparisonUrisForLine",1),y([(0,l.H)()],C.prototype,"isPushed",1);let A=C;function P(e){return e instanceof A}function S(e){return e instanceof A&&"stash"===e.refType&&Boolean(e.stashName)}class GitCommitIdentity{constructor(e,t,i,r){this.name=e,this.email=t,this.date=i,this.avatarUrl=r}formatDate(e){return(0,a.p6)(this.date,e??"MMMM Do, YYYY h:mma")}fromNow(e){return(0,a.Zh)(this.date,e)}getAvatarUri(e,t){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,n.oP)(this.email,e,t)}getCachedAvatarUri(e){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,n.x4)(this.email,e)}}function R(e){return null==e?0:"number"==typeof e?e:e.added+e.changed+e.deleted}function D(e){if(!e.hasFullDetails())throw new Error(`GitCommit(${e.sha}) is not fully loaded`)}y([(0,c.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitCommitIdentity.prototype,"formatDate",1)},439:(e,t,i)=>{i.d(t,{CL:()=>n,Ii:()=>r,pw:()=>s});const r="0000000000000000000000000000000000000000-",n="0000000000000000000000000000000000000000",s="0000000000000000000000000000000000000000:"},1719:(e,t,i)=>{i.d(t,{V:()=>p});var r=i(9496),n=i(8388),s=i(2540),o=i(5148),a=i(7512),l=i(4488),c=i(3620),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor;const d=class _GitContributor{constructor(e,t,i,r,n,s=!1,o,a,l,c){this.repoPath=e,this.name=t,this.email=i,this.count=r,this.date=n,this.current=s,this.stats=o,this.username=a,this.avatarUrl=l,this.id=c}static is(e){return e instanceof _GitContributor}static sort(e,t){switch((t={current:!0,orderBy:o.D.get("sortContributorsBy"),...t}).orderBy){case s.iP.CountAsc:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||e.count-t.count||(e.date?.getTime()??0)-(t.date?.getTime()??0)));case s.iP.DateDesc:return e.sort(((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(i.date?.getTime()??0)-(e.date?.getTime()??0)||i.count-e.count));case s.iP.DateAsc:return e.sort(((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.date?.getTime()??0)-(i.date?.getTime()??0)||i.count-e.count));case s.iP.NameAsc:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,c.dm)(e.name??e.username,t.name??t.username)));case s.iP.NameDesc:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,c.dm)(t.name??t.username,e.name??e.username)));case s.iP.CountDesc:default:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||t.count-e.count||(t.date?.getTime()??0)-(e.date?.getTime()??0)))}}get label(){return this.name??this.username}formatDate(e){return null!=this.date?(0,a.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(e){return null!=this.date?(0,a.Zh)(this.date,e):""}getAvatarUri(e){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,n.oP)(this.email,void 0,e)}getCoauthor(){return`${this.name}${this.email?` <${this.email}>`:""}`}};((e,t,i,r)=>{for(var n,s=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&h(t,i,s)})([(0,l.H)((e=>e??"MMMM Do, YYYY h:mma"))],d.prototype,"formatDate",1);let p=d},7881:(e,t,i)=>{i.d(t,{Bh:()=>m,Gv:()=>w,K8:()=>D,K9:()=>S,NV:()=>p,OC:()=>g,PM:()=>f,Qw:()=>A,Vz:()=>d,W5:()=>v,tK:()=>b});var r=i(5255),n=i(963),s=i(4488),o=i(1774),a=i(3700),l=i(3620),c=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&c(t,i,s),s},d=(e=>(e.AddedByBoth="AA",e.AddedByUs="AU",e.AddedByThem="UA",e.DeletedByBoth="DD",e.DeletedByUs="DU",e.DeletedByThem="UD",e.ModifiedByBoth="UU",e))(d||{}),p=(e=>(e.Modified="M",e.Added="A",e.Deleted="D",e.Renamed="R",e.Copied="C",e.Unchanged=".",e.Untracked="?",e.Ignored="!",e.UpdatedButUnmerged="U",e))(p||{}),m=(e=>(e.Modified="M",e.Added="A",e.Deleted="D",e.Untracked="?",e.Ignored="!",e))(m||{});function g(e,t=!1,i){const n=(0,a.Fd)(e.path,i);return t&&("R"===e.status||"C"===e.status)&&e.originalPath?`${n} ${(0,l.vk)(r.NE.ArrowLeft,1,1)} ${e.originalPath}`:n}function f(e,t={}){return(0,o.d)(e.path,t)}function w(e,t){return e.originalPath?(0,a.uo)(e.originalPath,t)[0]:""}function v(e,t){return(0,a.uo)(e.path,t)[0]}const y={".":void 0,"!":"icon-status-ignored.svg","?":"icon-status-untracked.svg",A:"icon-status-added.svg",D:"icon-status-deleted.svg",M:"icon-status-modified.svg",R:"icon-status-renamed.svg",C:"icon-status-copied.svg",AA:"icon-status-conflict.svg",AU:"icon-status-conflict.svg",UA:"icon-status-conflict.svg",DD:"icon-status-conflict.svg",DU:"icon-status-conflict.svg",UD:"icon-status-conflict.svg",UU:"icon-status-conflict.svg",T:"icon-status-modified.svg",U:"icon-status-modified.svg"};function b(e){return y[e]??"icon-status-unknown.svg"}const C={".":void 0,"!":"$(diff-ignored)","?":"$(diff-added)",A:"$(diff-added)",D:"$(diff-removed)",M:"$(diff-modified)",R:"$(diff-renamed)",C:"$(diff-added)",AA:"$(warning)",AU:"$(warning)",UA:"$(warning)",DD:"$(warning)",DU:"$(warning)",UD:"$(warning)",UU:"$(warning)",T:"$(diff-modified)",U:"$(diff-modified)"};function A(e,t=r.NE.Space.repeat(4)){return C[e]??t}const P={".":"Unchanged","!":"Ignored","?":"Untracked",A:"Added",D:"Deleted",M:"Modified",R:"Renamed",C:"Copied",AA:"Conflict",AU:"Conflict",UA:"Conflict",DD:"Conflict",DU:"Conflict",UD:"Conflict",UU:"Conflict",T:"Modified",U:"Updated but Unmerged"};function S(e){return P[e]??"Unknown"}const R=class _GitFileChange{constructor(e,t,i,r,n,s){this.repoPath=e,this.path=t,this.status=i,this.originalPath=r,this.previousSha=n,this.stats=s}static is(e){return e instanceof _GitFileChange}get hasConflicts(){switch(this.status){case"UA":case"AU":case"AA":case"UD":case"DU":case"DD":case"UU":return!0;default:return!1}}get uri(){return n.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}get originalUri(){return this.originalPath?n.W.instance.git.getAbsoluteUri(this.originalPath,this.repoPath):void 0}getWorkingUri(){return n.W.instance.git.getWorkingUri(this.repoPath,this.uri)}formatStats(e){if(null==this.stats)return e?.empty??"";const{additions:t,deletions:i}=this.stats;if(t<0&&i<0)return e?.empty??"";const{compact:r=!1,expand:n=!1,prefix:s="",separator:o=" ",suffix:a=""}=e??{};let c=s;return t?c+=n?`${(0,l._6)("line",t)} added`:`+${t}`:n||r||(c+="+0"),i?c+=`${t?o:""}${n?`${(0,l._6)("line",i)} deleted`:`-${i}`}`:n||r||(c+="-0"),c+=a,c}};u([(0,s.H)()],R.prototype,"uri",1),u([(0,s.H)()],R.prototype,"originalUri",1),u([(0,s.H)()],R.prototype,"getWorkingUri",1);let D=R},5069:(e,t,i)=>{i.d(t,{e:()=>r});var r=(e=>(e.Commit="commit-node",e.MergeCommit="merge-node",e.Stash="stash-node",e.Working="work-dir-changes",e.Conflict="merge-conflict-node",e.Rebase="unsupported-rebase-warning-node",e))(r||{})},8452:(e,t,i)=>{i.d(t,{$9:()=>Issue,Gj:()=>s,Ty:()=>o,mX:()=>n,sy:()=>a,xX:()=>l,y$:()=>c});var r=i(9496),n=(e=>(e.Issue="Issue",e.PullRequest="PullRequest",e))(n||{});function s(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed}}function o(e){return"PullRequest"===e.type?e.closed?`<span class="codicon codicon-git-pull-request" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`:`<span class="codicon codicon-git-pull-request" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`:e.closed?`<span class="codicon codicon-pass" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`:`<span class="codicon codicon-issues" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`}function a(e){return"PullRequest"===e.type?e.closed?`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(git-pull-request)</span>`:`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(git-pull-request)</span>`:e.closed?`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(pass)</span>`:`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(issues)</span>`}function l(e){return"PullRequest"===e.type?e.closed?new r.ThemeIcon("git-pull-request",new r.ThemeColor("gitlens.mergedPullRequestIconColor")):new r.ThemeIcon("git-pull-request",new r.ThemeColor("gitlens.openPullRequestIconColor")):e.closed?new r.ThemeIcon("pass",new r.ThemeColor("gitlens.closedAutolinkedIssueIconColor")):new r.ThemeIcon("issues",new r.ThemeColor("gitlens.openAutolinkedIssueIconColor"))}function c(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,updatedDate:e.updatedDate,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},repository:{owner:e.repository.owner,repo:e.repository.repo},assignees:e.assignees.map((e=>({name:e.name,avatarUrl:e.avatarUrl,url:e.url}))),labels:null==e.labels?void 0:e.labels.map((e=>({color:e.color,name:e.name}))),commentsCount:e.commentsCount,thumbsUpCount:e.thumbsUpCount}}class Issue{constructor(e,t,i,r,n,s,o,a,l,c,h,u,d,p){this.provider=e,this.id=t,this.title=i,this.url=r,this.date=n,this.closed=s,this.updatedDate=o,this.author=a,this.repository=l,this.assignees=c,this.closedDate=h,this.labels=u,this.commentsCount=d,this.thumbsUpCount=p}type="Issue"}},4092:(e,t,i)=>{i.d(t,{Cz:()=>m,i7:()=>w,l1:()=>g,o0:()=>d,pD:()=>p});var r=i(9496),n=i(2540),s=i(963),o=i(7512),a=i(4488),l=i(8452),c=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&c(t,i,s),s},d=(e=>(e.Open="Open",e.Closed="Closed",e.Merged="Merged",e))(d||{}),p=(e=>(e.Approved="Approved",e.ChangesRequested="ChangesRequested",e.ReviewRequired="ReviewRequired",e))(p||{}),m=(e=>(e.Unknown="Unknown",e.Mergeable="Mergeable",e.Conflicting="Conflicting",e))(m||{});function g(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},state:e.state,mergedDate:e.mergedDate,mergeableState:e.mergeableState,refs:e.refs?{head:{exists:e.refs.head.exists,owner:e.refs.head.owner,repo:e.refs.head.repo,sha:e.refs.head.sha,branch:e.refs.head.branch,url:e.refs.head.url},base:{exists:e.refs.base.exists,owner:e.refs.base.owner,repo:e.refs.base.repo,sha:e.refs.base.sha,branch:e.refs.base.branch,url:e.refs.base.url},isCrossRepository:e.refs.isCrossRepository}:void 0,isDraft:e.isDraft,additions:e.additions,deletions:e.deletions,comments:e.comments,reviewDecision:e.reviewDecision,reviewRequests:e.reviewRequests,assignees:e.assignees}}const f=class _PullRequest{constructor(e,t,i,r,n,s,o,a,l,c,h,u,d,p,m,g,f,w){this.provider=e,this.author=t,this.id=i,this.title=r,this.url=n,this.state=s,this.date=o,this.closedDate=a,this.mergedDate=l,this.mergeableState=c,this.refs=h,this.isDraft=u,this.additions=d,this.deletions=p,this.comments=m,this.reviewDecision=g,this.reviewRequests=f,this.assignees=w}static is(e){return e instanceof _PullRequest}static getMarkdownIcon(e){switch(e.state){case"Open":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(git-pull-request)</span>`;case"Closed":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#f85149":"#cf222e"};">$(git-pull-request-closed)</span>`;case"Merged":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(git-merge)</span>`;default:return"$(git-pull-request)"}}static getThemeIcon(e){switch(e.state){case"Open":return new r.ThemeIcon("git-pull-request",new r.ThemeColor("gitlens.openPullRequestIconColor"));case"Closed":return new r.ThemeIcon("git-pull-request-closed",new r.ThemeColor("gitlens.closedPullRequestIconColor"));case"Merged":return new r.ThemeIcon("git-merge",new r.ThemeColor("gitlens.mergedPullRequestIconColor"));default:return new r.ThemeIcon("git-pull-request")}}type=l.mX.PullRequest;get closed(){return"Closed"===this.state}get formattedDate(){return s.W.instance.PullRequestDateFormatting.dateStyle===n.Dn.Absolute?this.formatDate(s.W.instance.PullRequestDateFormatting.dateFormat):this.formatDateFromNow()}formatDate(e){return(0,o.p6)(this.mergedDate??this.closedDate??this.date,e??"MMMM Do, YYYY h:mma")}formatDateFromNow(){return(0,o.Zh)(this.mergedDate??this.closedDate??this.date)}formatClosedDate(e){return null==this.closedDate?"":(0,o.p6)(this.closedDate,e??"MMMM Do, YYYY h:mma")}formatClosedDateFromNow(){return null==this.closedDate?"":(0,o.Zh)(this.closedDate)}formatMergedDate(e){return null==this.mergedDate?"":(0,o.p6)(this.mergedDate,e??"MMMM Do, YYYY h:mma")??""}formatMergedDateFromNow(){return null==this.mergedDate?"":(0,o.Zh)(this.mergedDate)}formatUpdatedDate(e){return(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma")??""}formatUpdatedDateFromNow(){return(0,o.Zh)(this.date)}};u([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],f.prototype,"formatDate",1),u([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],f.prototype,"formatClosedDate",1),u([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],f.prototype,"formatMergedDate",1),u([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],f.prototype,"formatUpdatedDate",1);let w=f},4321:(e,t,i)=>{i.d(t,{Av:()=>k,D3:()=>w,FT:()=>O,Gn:()=>_,LB:()=>R,Nn:()=>E,UR:()=>F,Wh:()=>x,Yn:()=>T,gA:()=>I,j$:()=>b,l3:()=>y,oI:()=>g,pZ:()=>$,qj:()=>D,rD:()=>C,t6:()=>P,xB:()=>S,yk:()=>f,yo:()=>v,zL:()=>A});var r=i(5255),n=i(5148),s=i(5367),o=i(439);const a=/^(\S*?)(\.\.\.?)(\S*)\s*$/,l=/(^[0-9a-f]{40}([\^@~:]\S*)?$)|(^[0]{40}(:|-)$)/,c=/(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/,h=/(^[0-9a-f]{40})\^[0-3]?$/,u=/^(.*?)([\^@~:].*)?$/,d=/^[0]{40}(?:[\^@~:]\S*)?:?$/,p=/^[0]{40}([\^@~]\S*)?:$/;function m(e,t){return!!t&&e.test(t)}function g(e,t,i=".."){return`${e??""}${i}${t??""}`}function f(e){return e?.includes("..")??!1}function w(e){return m(c,e)}function v(e){return m(l,e)}function y(e,t=!1){return e===o.CL||e===o.pw||!t&&m(d,e)}function b(e){return e===`${o.CL}^`||e===`${o.pw}^`}function C(e,t=!1){return e===o.pw||!t&&m(p,e)}function A(e,t){if(e===o.Ii)return"(deleted)";if(!e)return t?.strings?.working??"";if(y(e))return C(e)?t?.strings?.uncommittedStaged??"Index":t?.strings?.uncommitted??"Working Tree";if(f(e))return e;if(!t?.force&&!v(e))return e;const i=Math.max(5,n.D.get("advanced.abbreviatedShaLength")),r=u.exec(e);if(null!=r){const[,e,t]=r;if(null!=t)return`${e.substr(0,i)}${t}`}return e.substr(0,i)}function P(e){const t=a.exec(e);if(null==t)return;const[,i,r,n]=t;return{ref1:i,notation:r,ref2:n}}function S(e,t,i={refType:"revision"}){switch(i.refType){case"branch":return{refType:"branch",repoPath:t,ref:e,name:i.name,id:i.id,remote:i.remote,upstream:i.upstream};case"stash":return{refType:"stash",repoPath:t,ref:e,name:i.name,number:i.number,message:i.message,stashOnRef:i.stashOnRef};case"tag":return{refType:"tag",repoPath:t,ref:e,name:i.name,id:i.id};default:return{refType:"revision",repoPath:t,ref:e,name:i.name??A(e,{force:!0,strings:{working:"Working Tree"}}),message:i.message}}}function R(e){return S(e.ref,e.repoPath,{id:e.id,refType:e.refType,name:e.name,remote:e.remote,upstream:e.upstream})}function D(e){return"stash"===e.refType?S(e.ref,e.repoPath,{refType:e.refType,name:e.name,number:e.number,message:e.message}):S(e.ref,e.repoPath,{refType:e.refType,name:e.name,message:e.message})}function k(e){return"branch"===e.refType&&e.remote?(0,s.S3)(e.name):e.name}function _(e){return e.upstream?.name.substring((0,s.RJ)(e.upstream.name)+1)}function T(e){if(null==e||"object"!=typeof e)return!1;const t=e;return"string"==typeof t.refType&&"string"==typeof t.repoPath&&"string"==typeof t.ref&&"string"==typeof t.name}function F(e){return"branch"===e?.refType}function O(e){return"revision"===e?.refType}function E(e){return"revision"===e?.refType&&f(e.ref)}function $(e){return"stash"===e?.refType||"revision"===e?.refType&&Boolean(e?.stashName)}function I(e){return"tag"===e?.refType}function x(e,t){if(null==e)return"";let i;if(t=!1===t?{}:{expand:!0,icon:!0,label:t?.label??t?.expand??!0,...t},!Array.isArray(e)||1===e.length){const n=Array.isArray(e)?e[0]:e;let o=t?.quoted?`'${n.name}'`:n.name;switch(n.refType){case"branch":n.remote&&(o=`${(0,s.Lo)(o)}: ${(0,s.S3)(o)}`,o=t?.quoted?`'${o}'`:o),i=`${t.label?(n.remote?"remote ":"")+"branch ":""}${t.icon?`$(git-branch)${r.NE.Space}${o}`:o}`;break;case"tag":i=`${t.label?"tag ":""}${t.icon?`$(tag)${r.NE.Space}${o}`:o}`;break;default:if($(n)){let e;t.expand&&n.message&&(e=`${null!=n.number?`#${n.number}: `:""}${n.message.length>20?`${n.message.substring(0,20).trimRight()}${r.NE.Ellipsis}`:n.message}`),i=`${t.label?"stash ":""}${t.icon?`$(archive)${r.NE.Space}${e??n.name}`:`${e??(n.number?`#${n.number}`:n.name)}`}`}else if(f(n.ref))i=o;else{let e,s;t.expand&&n.message&&(e=n.message.length>20?` (${n.message.substring(0,20).trimRight()}${r.NE.Ellipsis})`:` (${n.message})`),t.expand&&t.label&&function(e){return m(h,e)}(n.ref)?(o=n.name.endsWith("^")?n.name.substr(0,n.name.length-1):n.name,t?.quoted&&(o=`'${o}'`),s="before "):s="",i=`${t.label?`${s}commit `:""}${t.icon?`$(git-commit)${r.NE.Space}${o}${e??""}`:`${o}${e??""}`}`}}return t.capitalize&&t.expand&&!1!==t.label?`${i[0].toLocaleUpperCase()}${i.substring(1)}`:i}const n=t.expand?` (${e.map((e=>e.name)).join(", ")})`:"";switch(e[0].refType){case"branch":return`${e.length} branches${n}`;case"tag":return`${e.length} tags${n}`;default:return`${e.length} ${$(e[0])?"stashes":"commits"}${n}`}}},3050:(e,t,i)=>{i.d(t,{XG:()=>p,Ym:()=>v,dM:()=>w,jv:()=>f,ss:()=>g});var r=i(9496),n=i(5255),s=i(963),o=i(4488),a=i(3620),l=i(2509),c=i(4794),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&h(t,i,s),s},p=(e=>(e.Fetch="fetch",e.Push="push",e))(p||{});const m=class _GitRemote{constructor(e,t,i,r,n,s,o){this.repoPath=e,this.name=t,this.scheme=i,this._domain=r,this._path=n,this.provider=s,this.urls=o}static getHighlanderProviders(e){if(0===e.length)return;const t=1===e.length?e[0]:e.find((e=>e.default));if(null!=t)return[t.provider];const i=e[0].provider.name;return e.every((e=>e.provider.name===i))?e.map((e=>e.provider)):void 0}static getHighlanderProviderName(e){if(0===e.length)return;const t=1===e.length?e[0]:e.find((e=>e.default));if(null!=t)return t.provider.name;const i=e[0].provider.name;return e.every((e=>e.provider.name===i))?i:void 0}static is(e){return e instanceof _GitRemote}static sort(e){return e.sort(((e,t)=>(e.default?-1:1)-(t.default?-1:1)||("origin"===e.name?-1:1)-("origin"===t.name?-1:1)||("upstream"===e.name?-1:1)-("upstream"===t.name?-1:1)||(0,a.dm)(e.name,t.name)))}get default(){const e=s.W.instance.storage.getWorkspace("remote:default");return this.name===e||this.urlKey===e}get domain(){return this.provider?.domain??this._domain}get id(){return`${this.name}/${this.urlKey}`}get path(){return this.provider?.path??this._path}get url(){let e;for(const t of this.urls){if("push"===t.type)return t.url;null==e&&(e=t.url)}return e}get urlKey(){return this._domain?`${this._domain}/${this._path}`:this.path}hasRichProvider(){return this.provider?.hasRichIntegration()??!1}matches(e,t){if(null==t){if((0,a.qq)(e,this.url))return!0;[,e,t]=(0,c.Sk)(e)}return(0,a.qq)(e,this.domain)&&(0,a.qq)(t,this.path)}async setAsDefault(e=!0){const t=s.W.instance.git.getRepository(this.repoPath);await(t?.setRemoteAsDefault(this,e))}};d([(0,o.H)()],m.prototype,"domain",1),d([(0,o.H)()],m.prototype,"id",1),d([(0,o.H)()],m.prototype,"path",1),d([(0,o.H)()],m.prototype,"url",1),d([(0,o.H)()],m.prototype,"urlKey",1);let g=m;function f(e){const t=function(e){let t,i,r;for(const{type:t}of e.urls)if("fetch"===t){if(i=!0,r)break}else if("push"===t&&(r=!0,i))break;return t=i&&r?n.NE.ArrowsRightLeft:r?n.NE.ArrowRight:i?n.NE.ArrowLeft:n.NE.Dash,t}(e),{provider:i}=e;return null!=i?`${t}${n.NE.Space} ${i.name} ${n.NE.Space}${n.NE.Dot}${n.NE.Space} ${i.displayPath}`:`${t}${n.NE.Space} ${e.domain?`${e.domain} ${n.NE.Space}${n.NE.Dot}${n.NE.Space} `:""}${e.path}`}function w(e,t,i,n=r.window.activeColorTheme){if(null==t.provider?.icon)return;const s=r.Uri.joinPath(e.context.extensionUri,`images/${(0,l.GC)(n)?"light":"dark"}/icon-${t.provider.icon}.svg`);return null!=i?i(s):s}function v(e){return Array.isArray(e)?e.map((e=>e.urlKey)).sort().join(","):e.urlKey}},6503:(e,t,i)=>{i.d(t,{C:()=>n,J:()=>r});var r=(e=>(e.Branch="branch",e.Branches="branches",e.Commit="commit",e.Comparison="comparison",e.CreatePullRequest="createPullRequest",e.File="file",e.Repo="repo",e.Revision="revision",e))(r||{});function n(e){switch(e.type){case"branch":return"Branch";case"branches":return"Branches";case"commit":return"Commit";case"comparison":return"Comparison";case"createPullRequest":return"Create Pull Request";case"file":case"revision":return"File";case"repo":return"Repository";default:return""}}},3646:(e,t,i)=>{i.d(t,{I6:()=>I,_j:()=>B,du:()=>x,uC:()=>W});var r=i(9496),n=i(4290),s=i(5640),o=i(5255),a=i(7925),l=i(2133),c=i(2800),h=i(9529),u=i(5148),d=i(7512),p=i(5432),m=i(4241),g=i(9796),f=i(3105),w=i(4336),v=i(6004),y=i(9967),b=i(3700),C=i(5367),A=i(4321),P=Object.defineProperty,S=Object.getOwnPropertyDescriptor,R=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?S(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&P(t,i,s),s};const D=Object.freeze([]),k=36e5,_=864e5,T="index,HEAD,*_HEAD,MERGE_*,rebase-merge/**,sequencer/**",F="worktrees/**/index,worktrees/**/HEAD,worktrees/**/*_HEAD,worktrees/**/MERGE_*,worktrees/**/rebase-merge/**,worktrees/**/sequencer/**",O=`{${T}}`,E=`{config,refs/**,${F}}`,$=`{${T},config,refs/**,${F}}`;var I=(e=>(e[e.Unknown=-1]="Unknown",e[e.Index=0]="Index",e[e.Head=1]="Head",e[e.Heads=2]="Heads",e[e.Tags=3]="Tags",e[e.Stash=4]="Stash",e[e.Remotes=5]="Remotes",e[e.Worktrees=6]="Worktrees",e[e.Config=7]="Config",e[e.Status=8]="Status",e[e.CherryPick=9]="CherryPick",e[e.Merge=10]="Merge",e[e.Rebase=11]="Rebase",e[e.Closed=100]="Closed",e[e.Ignores=101]="Ignores",e[e.RemoteProviders=102]="RemoteProviders",e[e.Starred=103]="Starred",e[e.Opened=104]="Opened",e))(I||{}),x=(e=>(e[e.Any=0]="Any",e[e.All=1]="All",e[e.Exclusive=2]="Exclusive",e))(x||{});class RepositoryChangeEvent{constructor(e,t){this.repository=e,this._changes=new Set(t)}_changes;toString(e=!1){return e?`changes=${(0,f.v_)(this._changes,", ")}`:`{ repository: ${this.repository?.name??""}, changes: ${(0,f.v_)(this._changes,", ")} }`}changed(...e){const t=e.slice(0,-1),i=e[e.length-1];if(0===i)return(0,f.G)(this._changes,(e=>t.includes(e)));let r=this._changes;2===i&&(t.includes(9)||t.includes(10)||t.includes(11)?t.includes(8)||t.push(8):t.includes(8)&&(r=new Set(r),r.delete(9),r.delete(10),r.delete(11)));const n=[...(0,f.hX)(r,(e=>t.includes(e)))];return 2===i?n.length===r.size:n.length===t.length}with(e){return new RepositoryChangeEvent(this.repository,[...this._changes,...e])}}let B=class{constructor(e,t,i,n,s,o,a,c=!1){if(this.container=e,this.onDidRepositoryChange=t,this.provider=i,this.folder=n,this.uri=s,this.root=o,null!=(n=r.workspace.getWorkspaceFolder(s)??n))if(o)this.name=n.name;else{const t=e.git.getRelativePath(s,n.uri);this.name=t||n.name}else this.name=(0,b.EZ)(s.path);this.index=n?.index??e.git.repositoryCount,this.id=(0,l.YW)(s),this._suspended=a,this._closed=c,this._disposable=r.Disposable.from(this.setupRepoWatchers(),u.D.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged()}static formatLastFetched(e,t=!0){const i=new Date(e);if(Date.now()-e<_)return(0,d.Zh)(i);if(t)return(0,d.p6)(i,u.D.get("defaultDateShortFormat")??"short");let r=u.D.get("defaultDateFormat")??`dddd, MMMM Do, YYYY [at] ${u.D.get("defaultTimeFormat")??"h:mma"}`;return/[hHm]/.test(r)||(r+=` [at] ${u.D.get("defaultTimeFormat")??"h:mma"}`),(0,d.p6)(i,r)}static getLastFetchedUpdateInterval(e){const t=Date.now()-e;return t<_?(t<k?6e4:k)/2:0}static sort(e){return e.sort(((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||e.index-t.index))}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeFileSystem=new r.EventEmitter;get onDidChangeFileSystem(){return this._onDidChangeFileSystem.event}get formattedName(){return this.name}id;index;name;_idHash;get idHash(){return void 0===this._idHash&&(this._idHash=(0,n.FB)(this.id)),this._idHash}_branch;_disposable;_fireChangeDebounced=void 0;_fireFileSystemChangeDebounced=void 0;_fsWatchCounter=0;_fsWatcherDisposable;_pendingFileSystemChange;_pendingRepoChange;_remotes;_remotesDisposable;_suspended;setupRepoWatchers(){let e;return this.setupRepoWatchersCore().then((t=>e=t)),{dispose:()=>{e?.dispose()}}}async setupRepoWatchersCore(){const e=(0,v.UH)(),t=[];t.push(this.container.events.on("git:cache:reset",(e=>{e.data.repoPath&&e.data.repoPath!==this.path||this.resetCaches(...e.data.caches??D)})));const i=r.workspace.createFileSystemWatcher(new r.RelativePattern(this.uri,"**/.gitignore"));function n(i,n){w.Yd.debug(e,`watching '${i.toString(!0)}' for repository changes`);const s=r.workspace.createFileSystemWatcher(new r.RelativePattern(i,n));return t.push(s,s.onDidChange((e=>this.onRepositoryChanged(e,i))),s.onDidCreate((e=>this.onRepositoryChanged(e,i))),s.onDidDelete((e=>this.onRepositoryChanged(e,i)))),s}t.push(i,i.onDidChange(this.onGitIgnoreChanged,this),i.onDidCreate(this.onGitIgnoreChanged,this),i.onDidDelete(this.onGitIgnoreChanged,this));const s=await this.getGitDir();return null!=s&&(null==s?.commonUri?n.call(this,s.uri,$):(n.call(this,s.uri,O),n.call(this,s.commonUri,E))),r.Disposable.from(...t)}dispose(){this.stopWatchingFileSystem(),this._remotesDisposable?.dispose(),this._disposable.dispose()}toString(){return`${(0,w.q4)(this)}(${this.id})`}get virtual(){return this.provider.virtual}get path(){return this.uri.scheme===o.sN.File?(0,b.AH)(this.uri.fsPath):this.uri.toString()}get etag(){return this._updatedAt}_updatedAt=0;get updatedAt(){return this._updatedAt}onConfigurationChanged(e){null!=e&&u.D.changed(e,"remotes",this.folder?.uri)&&(this.resetCaches("remotes"),this.fireChange(5))}onFileSystemChanged(e){/\.git(?:\/|\\|$)/.test(e.fsPath)||(this._etagFileSystem=Date.now(),this.fireFileSystemChange(e))}onGitIgnoreChanged(e){this.fireChange(101)}onRepositoryChanged(e,t){if(e?.path.includes("/fsmonitor--daemon/"))return;this._lastFetched=void 0;const i=null!=e?/(worktrees|index|HEAD|FETCH_HEAD|ORIG_HEAD|CHERRY_PICK_HEAD|MERGE_HEAD|REBASE_HEAD|rebase-merge|config|refs\/(?:heads|remotes|stash|tags))/.exec(this.container.git.getRelativePath(e,t)):void 0;if(null!=i)switch(i[1]){case"config":return this.resetCaches(),void this.fireChange(7,5);case"index":return void this.fireChange(0);case"FETCH_HEAD":return;case"HEAD":return this.resetCaches("branches"),void this.fireChange(1,2);case"ORIG_HEAD":case"refs/heads":return this.resetCaches("branches"),void this.fireChange(2);case"CHERRY_PICK_HEAD":return void this.fireChange(9,8);case"MERGE_HEAD":return void this.fireChange(10,8);case"REBASE_HEAD":case"rebase-merge":return void this.fireChange(11,8);case"refs/remotes":return this.resetCaches(),void this.fireChange(5);case"refs/stash":return void this.fireChange(4);case"refs/tags":return void this.fireChange(3);case"worktrees":return void this.fireChange(6)}this.fireChange(-1)}_closed=!1;get closed(){return this._closed}set closed(e){const t=this._closed!==e;this._closed=e,t&&this.fireChange(this._closed?100:104)}access(e){return this.container.git.access(e,this.uri)}supports(e){return this.container.git.supports(this.uri,e)}async addRemote(e,t,i){await this.container.git.addRemote(this.path,e,t,i);const[r]=await this.getRemotes({filter:e=>e.url===t});return r}pruneRemote(e){return this.container.git.pruneRemote(this.path,e)}removeRemote(e){return this.container.git.removeRemote(this.path,e)}branch(...e){this.runTerminalCommand("branch",...e)}branchDelete(e,t){Array.isArray(e)||(e=[e]);const i=e.filter((e=>!e.remote));if(0!==i.length){const r=["--delete"];if(t?.force&&r.push("--force"),this.runTerminalCommand("branch",...r,...e.map((e=>e.ref))),t?.remote){const e=i.filter((e=>null!=e.upstream));if(0!==e.length){const t=(0,c.XI)(e,(e=>(0,C.Lo)(e.upstream.name)));for(const[e,i]of t.entries())this.runTerminalCommand("push","-d",e,...i.map((e=>(0,C.S3)(e.upstream.name))))}}}const r=e.filter((e=>e.remote));if(0!==r.length){const e=(0,c.XI)(r,(e=>(0,C.Lo)(e.name)));for(const[t,i]of e.entries())this.runTerminalCommand("push","-d",t,...i.map((e=>(0,A.Av)(e))))}}cherryPick(...e){this.runTerminalCommand("cherry-pick",...e)}containsUri(e){return this===this.container.git.getRepository(e)}async fetch(e){const{progress:t,...i}={progress:!0,...e};return t?r.window.withProgress({location:r.ProgressLocation.Notification,title:null!=i.branch?`${i.pull?"Pulling":"Fetching"} ${i.branch.name}...`:`Fetching ${i.remote?`${i.remote} of `:""}${this.formattedName}...`},(()=>this.fetchCore(i))):this.fetchCore(i)}async fetchCore(e){try{null!=e?.branch||(u.D.get("experimental.nativeGit")??this.container.prereleaseOrDebugging)?await this.container.git.fetch(this.path,e):await(0,h.Zv)("git.fetch",this.path),this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to fetch repository")}}async getBranch(e){if(e){const{values:[t]}=await this.getBranches({filter:t=>t.name===e});return t}return null==this._branch&&(this._branch=this.container.git.getBranch(this.path)),this._branch}getBranches(e){return this.container.git.getBranches(this.path,e)}getChangedFilesCount(e){return this.container.git.getChangedFilesCount(this.path,e)}getCommit(e){return this.container.git.getCommit(this.path,e)}getContributors(e){return this.container.git.getContributors(this.path,e)}_gitDir;_gitDirPromise;getGitDir(){return null==this._gitDirPromise&&(this._gitDirPromise=this.container.git.getGitDir(this.path).then((e=>this._gitDir=e))),this._gitDirPromise}_lastFetched;async getLastFetched(){if(null==this._lastFetched&&!await this.hasRemotes())return 0;try{const e=await this.container.git.getLastFetchedTimestamp(this.path);null!=e&&(this._lastFetched=e)}catch{this._lastFetched=void 0}return this._lastFetched??0}async getMainRepository(){const e=await this.getGitDir();return null==e?.commonUri?this:this.container.git.getOrOpenRepository(e.commonUri,{detectNested:!1,force:!0,closeOnOpen:!0})}getMergeStatus(){return this.container.git.getMergeStatus(this.path)}getRebaseStatus(){return this.container.git.getRebaseStatus(this.path)}async getRemote(e){return(await this.getRemotes()).find((t=>t.name===e))}async getRemotes(e){return null==this._remotes&&(this._remotes=this.container.git.getRemotes(this.path,{sort:!0}),this.subscribeToRemotes(this._remotes)),null!=e?.filter?(await this._remotes).filter(e.filter):this._remotes}async getRichRemote(e=!1){return this.container.git.getBestRemoteWithRichProvider(await this.getRemotes(),{includeDisconnected:!e})}async subscribeToRemotes(e){this._remotesDisposable?.dispose(),this._remotesDisposable=void 0,this._remotesDisposable=r.Disposable.from(...(0,c.DZ)(await e,(e=>{if(e.provider?.hasRichIntegration())return e.provider.onDidChange((()=>this.fireChange(102)))})))}getStash(){return this.container.git.getStash(this.path)}getStatus(){return this.container.git.getStatusForRepo(this.path)}async getTag(e){const{values:[t]}=await this.getTags({filter:t=>t.name===e});return t}getTags(e){return this.container.git.getTags(this.path,e)}async createWorktree(e,t){await this.container.git.createWorktree(this.path,e.fsPath,t);const i=e.toString();return this.container.git.getWorktree(this.path,(e=>e.uri.toString()===i))}getWorktrees(){return this.container.git.getWorktrees(this.path)}async getWorktreesDefaultUri(){return this.container.git.getWorktreesDefaultUri(this.path)}deleteWorktree(e,t){return this.container.git.deleteWorktree(this.path,e.fsPath,t)}async hasRemotes(){const e=await this.getRemotes();return e?.length>0}async hasRichRemote(e=!1){const t=await this.getRichRemote(e);return null!=t?.provider}async hasUpstreamBranch(){const e=await this.getBranch();return null!=e?.upstream}isMaybeWorktree(){if(null!=this._gitDir)return null!=this._gitDir.commonUri}async isWorktree(){return null!=(await this.getGitDir())?.commonUri}merge(...e){this.runTerminalCommand("merge",...e)}async pull(e){const{progress:t,...i}={progress:!0,...e};return t?r.window.withProgress({location:r.ProgressLocation.Notification,title:`Pulling ${this.formattedName}...`},(()=>this.pullCore(i))):this.pullCore()}async pullCore(e){try{if(u.D.get("experimental.nativeGit")??this.container.prereleaseOrDebugging){const t=u.D.getAny("git.pullTags",r.Uri.file(this.path));u.D.getAny("git.fetchOnPull",r.Uri.file(this.path))&&await this.container.git.fetch(this.path),await this.container.git.pull(this.path,{...e,tags:t})}else{await this.hasUpstreamBranch()?await(0,h.Zv)(e?.rebase?"git.pullRebase":"git.pull",this.path):u.D.getAny("git.fetchOnPull",r.Uri.file(this.path))&&await this.container.git.fetch(this.path)}this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to pull repository")}}async showCreatePullRequestPrompt(e,t){if(!this.container.actionRunners.count("createPullRequest"))return;if(!await(0,a.B8)(t.name))return;const i=await this.getRemote(e);(0,h.SI)("createPullRequest",{repoPath:this.path,remote:null!=i?{name:i.name,provider:null!=i.provider?{id:i.provider.id,name:i.provider.name,domain:i.provider.domain}:void 0,url:i.url}:{name:e},branch:{name:t.name,isRemote:t.remote,upstream:t.upstream?.name}})}async push(e){const{progress:t,...i}={progress:!0,...e};return t?r.window.withProgress({location:r.ProgressLocation.Notification,title:(0,A.UR)(i.reference)?`${null!=i.publish?"Publishing ":"Pushing "}${i.reference.name}...`:`Pushing ${this.formattedName}...`},(()=>this.pushCore(i))):this.pushCore(i)}async pushCore(e){try{if(u.D.get("experimental.nativeGit")??this.container.prereleaseOrDebugging){const t=await this.getBranch(e?.reference?.name);await this.container.git.push(this.path,{force:e?.force,branch:(0,A.UR)(e?.reference)?e?.reference:t,...e?.publish&&{publish:e.publish}})}else if((0,A.UR)(e?.reference)){const t=await this.container.git.getOrOpenScmRepository(this.path);if(null==t)return;if(null!=e?.publish)await(t?.push(e.publish.remote,e.reference.name,!0)),this.showCreatePullRequestPrompt(e.publish.remote,e.reference);else{const i=await this.getBranch(e?.reference.name);if(null==i)return;await(t?.push(i.getRemoteName(),i.name,void 0,e?.force?s.QO.ForceWithLease:void 0))}}else if(null!=e?.reference){const t=await this.container.git.getOrOpenScmRepository(this.path);if(null==t)return;const i=await this.getBranch();if(null==i)return;await(t?.push(i.getRemoteName(),`${e.reference.ref}:${i.getNameWithoutRemote()}`,void 0,e?.force?s.QO.ForceWithLease:void 0))}else await(0,h.Zv)(e?.force?"git.pushForce":"git.push",this.path);this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to push repository")}}rebase(e,...t){this.runTerminalCommand(null!=e&&0!==e.length?`${e.join(" ")} rebase`:"rebase",...t)}reset(...e){this.runTerminalCommand("reset",...e)}resetCaches(...e){(0===e.length||e.includes("branches"))&&(this._branch=void 0),(0===e.length||e.includes("remotes"))&&(this._remotes=void 0,this._remotesDisposable?.dispose(),this._remotesDisposable=void 0)}resume(){this._suspended&&(this._suspended=!1,null!=this._pendingRepoChange&&this._fireChangeDebounced(),null!=this._pendingFileSystemChange&&this._fireFileSystemChangeDebounced())}revert(...e){this.runTerminalCommand("revert",...e)}richSearchCommits(e,t){return this.container.git.richSearchCommits(this.path,e,t)}searchCommits(e,t){return this.container.git.searchCommits(this.path,e,t)}async setRemoteAsDefault(e,t=!0){await this.container.storage.storeWorkspace("remote:default",t?e.name:void 0),this.fireChange(5,102)}get starred(){const e=this.container.storage.getWorkspace("starred:repositories");return null!=e&&!0===e[this.id]}star(e){return this.updateStarred(!0,e)}async stashApply(e,t){await this.container.git.stashApply(this.path,e,t),this.fireChange(4)}async stashDelete(e,t){await this.container.git.stashDelete(this.path,e,t),this.fireChange(4)}async stashRename(e,t,i,r){await this.container.git.stashRename(this.path,e,t,i,r),this.fireChange(4)}async stashSave(e,t,i){await this.container.git.stashSave(this.path,e,t,i),this.fireChange(4)}async switch(e,t){const{progress:i,...n}={progress:!0,...t};return i?r.window.withProgress({location:r.ProgressLocation.Notification,title:`Switching ${this.formattedName} to ${e}...`,cancellable:!1},(()=>this.switchCore(e,n))):this.switchCore(e,n)}async switchCore(e,t){try{await this.container.git.checkout(this.path,e,t),this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to switch to reference")}}toAbsoluteUri(e,t){const i=this.container.git.getAbsoluteUri(e,this.path);return!(t?.validate??1)||this.containsUri(i)?i:void 0}unstar(e){return this.updateStarred(!1,e)}async updateStarred(e,t){null!=t?await this.updateStarredCore("branches",t.id,e):await this.updateStarredCore("repositories",this.id,e),this.fireChange(103)}async updateStarredCore(e,t,i){const r=`starred:${e}`;let n=this.container.storage.getWorkspace(r);n=(0,y.iC)(n,t,i),await this.container.storage.storeWorkspace(r,n),this.fireChange(103)}_etagFileSystem;get etagFileSystem(){return this._etagFileSystem}startWatchingFileSystem(){if(this._fsWatchCounter++,null==this._fsWatcherDisposable){const e=r.workspace.createFileSystemWatcher(new r.RelativePattern(this.uri,"**"));this._fsWatcherDisposable=r.Disposable.from(e,e.onDidChange(this.onFileSystemChanged,this),e.onDidCreate(this.onFileSystemChanged,this),e.onDidDelete(this.onFileSystemChanged,this)),this._etagFileSystem=Date.now()}return{dispose:()=>this.stopWatchingFileSystem()}}stopWatchingFileSystem(e=!1){null!=this._fsWatcherDisposable&&(--this._fsWatchCounter>0&&!e||(this._etagFileSystem=void 0,this._fsWatchCounter=0,this._fsWatcherDisposable.dispose(),this._fsWatcherDisposable=void 0))}suspend(){this._suspended=!0}tag(...e){this.runTerminalCommand("tag",...e)}tagDelete(e){Array.isArray(e)||(e=[e]);this.runTerminalCommand("tag","--delete",...e.map((e=>e.ref)))}fireChange(...e){const t=(0,v.UH)();this._updatedAt=Date.now(),null==this._fireChangeDebounced&&(this._fireChangeDebounced=(0,g.Ds)(this.fireChangeCore.bind(this),250)),this._pendingRepoChange=this._pendingRepoChange?.with(e)??new RepositoryChangeEvent(this,e),this.onDidRepositoryChange(this,new RepositoryChangeEvent(this,e)),this._suspended?w.Yd.debug(t,`queueing suspended ${this._pendingRepoChange.toString(!0)}`):this._fireChangeDebounced()}fireChangeCore(){const e=this._pendingRepoChange;null!=e&&(this._pendingRepoChange=void 0,w.Yd.debug(`Repository(${this.id}) firing ${e.toString(!0)}`),this._onDidChange.fire(e))}fireFileSystemChange(e){const t=(0,v.UH)();this._updatedAt=Date.now(),null==this._fireFileSystemChangeDebounced&&(this._fireFileSystemChangeDebounced=(0,g.Ds)(this.fireFileSystemChangeCore.bind(this),2500)),null==this._pendingFileSystemChange&&(this._pendingFileSystemChange={repository:this,uris:[]});const i=this._pendingFileSystemChange;i.uris.push(e),this._suspended?w.Yd.debug(t,`queueing suspended fs changes=${i.uris.map((e=>e.fsPath)).join(", ")}`):this._fireFileSystemChangeDebounced()}async fireFileSystemChangeCore(){let e=this._pendingFileSystemChange;if(null==e)return;this._pendingFileSystemChange=void 0;const t=await this.container.git.excludeIgnoredUris(this.path,e.uris);0!==t.length&&(t.length!==e.uris.length&&(e={...e,uris:t}),w.Yd.debug(`Repository(${this.id}) firing fs changes=${e.uris.map((e=>e.fsPath)).join(", ")}`),this._onDidChangeFileSystem.fire(e))}async runTerminalCommand(e,...t){await(this.container.git.runGitCommandViaTerminal?.(this.uri,e,t,{execute:!0})),setTimeout((()=>this.fireChange(-1)),2500)}};function W(e){return e instanceof B}R([(0,m.fF)({singleLine:!0})],B.prototype,"setupRepoWatchersCore",1),R([(0,m.fF)()],B.prototype,"onGitIgnoreChanged",1),R([(0,m.fF)()],B.prototype,"onRepositoryChanged",1),R([(0,m.cM)()],B.prototype,"access",1),R([(0,m.cM)()],B.prototype,"supports",1),R([(0,m.cM)()],B.prototype,"addRemote",1),R([(0,m.cM)()],B.prototype,"pruneRemote",1),R([(0,m.cM)()],B.prototype,"removeRemote",1),R([(0,m.cM)()],B.prototype,"branch",1),R([(0,m.cM)()],B.prototype,"branchDelete",1),R([(0,m.cM)()],B.prototype,"cherryPick",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"fetch",1),R([(0,p.H)()],B.prototype,"getLastFetched",1),R([(0,p.H)(),(0,m.cM)({exit:!0})],B.prototype,"getMainRepository",1),R([(0,m.cM)()],B.prototype,"createWorktree",1),R([(0,m.cM)()],B.prototype,"merge",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"pull",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"push",1),R([(0,m.cM)()],B.prototype,"rebase",1),R([(0,m.cM)()],B.prototype,"reset",1),R([(0,m.cM)({singleLine:!0})],B.prototype,"resetCaches",1),R([(0,m.cM)()],B.prototype,"revert",1),R([(0,m.fF)()],B.prototype,"richSearchCommits",1),R([(0,m.fF)()],B.prototype,"searchCommits",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"stashApply",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"stashDelete",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"stashRename",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"stashSave",1),R([(0,p.H)(),(0,m.cM)()],B.prototype,"switch",1),R([(0,m.cM)()],B.prototype,"tag",1),R([(0,m.cM)()],B.prototype,"tagDelete",1),R([(0,m.fF)()],B.prototype,"fireChange",1),R([(0,m.fF)()],B.prototype,"fireFileSystemChange",1),B=R([(0,m.hJ)(((e,t)=>`${t}(${e.id})`))],B)},827:(e,t,i)=>{i.d(t,{Hk:()=>GitStatus,JP:()=>m});var r=i(5255),n=i(963),s=i(4488),o=i(3620),a=i(5367),l=i(6450),c=i(439),h=i(7881),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor,p=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&u(t,i,s),s};class GitStatus{constructor(e,t,i,r,n,s,o=!1){this.repoPath=e,this.branch=t,this.sha=i,this.files=r,this.state=n,this.upstream=s,this.rebasing=o,this.detached=(0,a.uz)(t),this.detached&&(this.branch=(0,a.Iq)(this.sha))}detached;get conflicts(){return this.files.filter((e=>e.conflicted))}get hasChanges(){return 0!==this.files.length}get hasConflicts(){return this.files.some((e=>e.conflicted))}get ref(){return this.detached?this.sha:this.branch}computeWorkingTreeStatus(){let e=0,t=0,i=0,r=0,n=0,s=0,o=0,a=0,l=0;const c=[],u=[],d=[];for(const p of this.files){switch(p.conflictStatus){case void 0:break;case h.Vz.AddedByBoth:case h.Vz.AddedByUs:case h.Vz.AddedByThem:e++,u.push(p);break;case h.Vz.DeletedByBoth:case h.Vz.DeletedByUs:case h.Vz.DeletedByThem:t++;break;default:i++,c.push(p)}switch(p.indexStatus){case void 0:break;case h.NV.Added:r++,u.push(p);break;case h.NV.Deleted:a++;break;default:s++,u.push(p)}switch(p.workingTreeStatus){case void 0:case h.Bh.Ignored:break;case h.Bh.Added:case h.Bh.Untracked:n++,d.push(p);break;case h.Bh.Deleted:l++;break;default:o++,d.push(p)}}const p=e+i+t,m=r+s+a,g=n+o+l;return{conflicted:p,conflictedAddsAndChanges:c,conflictedStatus:p>0?`+${e} ~${i} -${t}`:"",staged:m,stagedStatus:m>0?`+${r} ~${s} -${a}`:"",stagedAddsAndChanges:u,unstaged:g,unstagedStatus:g>0?`+${n} ~${o} -${l}`:"",unstagedAddsAndChanges:d}}getDiffStatus(){const e={added:0,deleted:0,changed:0};if(0===this.files.length)return e;for(const t of this.files)switch(t.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}return e}getFormattedDiffStatus({compact:e,empty:t,expand:i,prefix:r="",separator:n=" ",suffix:s=""}={}){const{added:a,changed:l,deleted:c}=this.getDiffStatus();if(0===a&&0===l&&0===c)return t??"";if(i){let e="";return a&&(e+=`${(0,o._6)("file",a)} added`),l&&(e+=`${0===e.length?"":n}${(0,o._6)("file",l)} changed`),c&&(e+=`${0===e.length?"":n}${(0,o._6)("file",c)} deleted`),`${r}${e}${s}`}let h="";return e?(0!==a&&(h+=`+${a}`),0!==l&&(h+=`${0===h.length?"":n}~${l}`),0!==c&&(h+=`${0===h.length?"":n}-${c}`)):h+=`+${a}${n}~${l}${n}-${c}`,`${r}${h}${s}`}async getRemote(){if(null==this.upstream)return;const e=await n.W.instance.git.getRemotesWithProviders(this.repoPath);if(0===e.length)return;const t=(0,a.Lo)(this.upstream);return e.find((e=>e.name===t))}getUpstreamStatus(e){return m(this.upstream?{name:this.upstream,missing:!1}:void 0,this.state,e)}}function m(e,t,i){let n=!0,s=!1,a=!1,l="",c=" ",h="";if(null!=i&&({count:n=!0,expand:s=!1,icons:a=!1,prefix:l="",separator:c=" ",suffix:h=""}=i),null==e||0===t.behind&&0===t.ahead)return i?.empty??"";if(s){let i="";return e.missing?i="missing":(t.behind&&(i+=`${(0,o._6)("commit",t.behind,{infix:a?"$(arrow-down) ":void 0})} behind`),t.ahead&&(i+=`${0===i.length?"":c}${(0,o._6)("commit",t.ahead,{infix:a?"$(arrow-up) ":void 0})} ahead`,h.startsWith(` ${e.name.split("/")[0]}`)&&(i+=" of"))),`${l}${i}${h}`}const u=n&&!e.missing;return`${l}${u?t.behind:""}${u||0!==t.behind?r.NE.ArrowDown:""}${c}${u?t.ahead:""}${u||0!==t.ahead?r.NE.ArrowUp:""}${h}`}p([(0,s.H)()],GitStatus.prototype,"conflicts",1),p([(0,s.H)()],GitStatus.prototype,"hasConflicts",1),p([(0,s.H)()],GitStatus.prototype,"computeWorkingTreeStatus",1),p([(0,s.H)()],GitStatus.prototype,"getDiffStatus",1),p([(0,s.H)()],GitStatus.prototype,"getRemote",1);p([(0,s.H)()],class GitStatusFile{constructor(e,t,i,r,n){if(this.repoPath=e,this.path=r,this.originalPath=n,null!=t&&null!=i)switch(t+i){case"??":this.workingTreeStatus=h.Bh.Untracked;break;case"!!":this.workingTreeStatus=h.Bh.Ignored;break;case"AA":this.conflictStatus=h.Vz.AddedByBoth;break;case"AU":this.conflictStatus=h.Vz.AddedByUs;break;case"UA":this.conflictStatus=h.Vz.AddedByThem;break;case"DD":this.conflictStatus=h.Vz.DeletedByBoth;break;case"DU":this.conflictStatus=h.Vz.DeletedByUs;break;case"UD":this.conflictStatus=h.Vz.DeletedByThem;break;case"UU":this.conflictStatus=h.Vz.ModifiedByBoth}if(null==this.conflictStatus){switch(t){case"A":this.indexStatus=h.NV.Added;break;case"D":this.indexStatus=h.NV.Deleted;break;case"M":this.indexStatus=h.NV.Modified;break;case"R":this.indexStatus=h.NV.Renamed;break;case"C":this.indexStatus=h.NV.Copied}switch(i){case"A":case"?":this.workingTreeStatus=h.Bh.Added;break;case"D":this.workingTreeStatus=h.Bh.Deleted;break;case"M":this.workingTreeStatus=h.Bh.Modified}}}conflictStatus;indexStatus;workingTreeStatus;get conflicted(){return null!=this.conflictStatus}get edited(){return null!=this.workingTreeStatus}get staged(){return null!=this.indexStatus}get status(){return this.conflictStatus??this.indexStatus??this.workingTreeStatus}get uri(){return n.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}getFormattedDirectory(e=!1){return(0,h.OC)(this,e)}getFormattedPath(e={}){return(0,h.PM)(this,e)}getOcticon(){return(0,h.Qw)(this.status)}getStatusText(){return(0,h.K9)(this.status)}getPseudoCommits(e,t){const i=[],r=new Date;if(null!=this.conflictStatus)return i.push(new l.aM(e,this.repoPath,c.CL,new l._j("You",t?.email??void 0,r),new l._j("You",t?.email??void 0,r),"Uncommitted changes",[c.pw],"Uncommitted changes",new h.K8(this.repoPath,this.path,this.status,this.originalPath,c.pw),void 0,[])),i;if(null==this.workingTreeStatus&&null==this.indexStatus)return i;if(null!=this.workingTreeStatus&&null!=this.indexStatus){const n=new Date(r);n.setMilliseconds(n.getMilliseconds()-1),i.push(new l.aM(e,this.repoPath,c.CL,new l._j("You",t?.email??void 0,r),new l._j("You",t?.email??void 0,r),"Uncommitted changes",[c.pw],"Uncommitted changes",new h.K8(this.repoPath,this.path,this.status,this.originalPath,c.pw),void 0,[]),new l.aM(e,this.repoPath,c.pw,new l._j("You",t?.email??void 0,n),new l._j("You",t?.email??void 0,n),"Uncommitted changes",["HEAD"],"Uncommitted changes",new h.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD"),void 0,[]))}else i.push(new l.aM(e,this.repoPath,null!=this.workingTreeStatus?c.CL:c.pw,new l._j("You",t?.email??void 0,r),new l._j("You",t?.email??void 0,r),"Uncommitted changes",["HEAD"],"Uncommitted changes",new h.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD"),void 0,[]));return i}}.prototype,"uri",1)},9502:(e,t,i)=>{i.d(t,{Pj:()=>g,YR:()=>m,YU:()=>p,gE:()=>GitTag});var r=i(2540),n=i(963),s=i(5148),o=i(7512),a=i(4488),l=i(4336),c=i(3620),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&h(t,i,s),s};function p(e,t){return`${e}|tag/${t}`}class GitTag{constructor(e,t,i,r,n,s){this.repoPath=e,this.name=t,this.sha=i,this.message=r,this.date=n,this.commitDate=s,this.id=p(e,t)}refType="tag";id;toString(){return`${(0,l.q4)(this)}(${this.id})`}get formattedDate(){return n.W.instance.TagDateFormatting.dateStyle===r.Dn.Absolute?this.formatDate(n.W.instance.TagDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.name}formatCommitDate(e){return null!=this.commitDate?(0,o.p6)(this.commitDate,e??"MMMM Do, YYYY h:mma"):""}formatCommitDateFromNow(){return null!=this.commitDate?(0,o.Zh)(this.commitDate):""}formatDate(e){return null!=this.date?(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,o.Zh)(this.date):""}getBasename(){const e=this.name.lastIndexOf("/");return-1!==e?this.name.substring(e+1):this.name}}function m(e){return e instanceof GitTag}function g(e,t){switch((t={orderBy:s.D.get("sortTagsBy"),...t}).orderBy){case r.RV.DateAsc:return e.sort(((e,t)=>(e.date?.getTime()??0)-(t.date?.getTime()??0)));case r.RV.NameAsc:return e.sort(((e,t)=>(0,c.dm)(e.name,t.name)));case r.RV.NameDesc:return e.sort(((e,t)=>(0,c.dm)(t.name,e.name)));case r.RV.DateDesc:default:return e.sort(((e,t)=>(t.date?.getTime()??0)-(e.date?.getTime()??0)))}}d([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitTag.prototype,"formatCommitDate",1),d([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitTag.prototype,"formatDate",1),d([(0,a.H)()],GitTag.prototype,"getBasename",1)},2674:(e,t,i)=>{i.d(t,{K:()=>p,e:()=>d});var r=i(9496),n=i(963),s=i(4488),o=i(3700),a=i(4321),l=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&l(t,i,s),s};const u=class _GitWorktree{constructor(e,t,i,r,n,s,o,a){this.main=e,this.type=t,this.repoPath=i,this.uri=r,this.locked=n,this.prunable=s,this.sha=o,this.branch=a}static is(e){return e instanceof _GitWorktree}get opened(){return this.workspaceFolder?.uri.toString()===this.uri.toString()}get name(){switch(this.type){case"bare":return"(bare)";case"detached":return(0,a.zL)(this.sha);default:return this.branch||this.friendlyPath}}get friendlyPath(){return _GitWorktree.getFriendlyPath(this.uri)}get workspaceFolder(){return r.workspace.getWorkspaceFolder(this.uri)}_branch;getBranch(){return"branch"!==this.type||null==this.branch?Promise.resolve(void 0):(null==this._branch&&(this._branch=n.W.instance.git.getBranches(this.repoPath,{filter:e=>e.name===this.branch}).then((e=>e.values[0]))),this._branch)}_status;getStatus(e){return"bare"===this.type?Promise.resolve(void 0):((null==this._status||e?.force)&&(this._status=n.W.instance.git.getStatusForRepo(this.uri.fsPath)),this._status)}static getFriendlyPath(e){const t=r.workspace.getWorkspaceFolder(e);if(null==t)return(0,o.AH)(e.fsPath);const i=(0,o.AH)((0,o.Gf)(t.uri.fsPath,e.fsPath));return 0===i.length?t.name:i}};h([(0,s.H)()],u.prototype,"friendlyPath",1),h([(0,s.H)()],u.prototype,"workspaceFolder",1);let d=u;async function p(e,t,i){null==i||Array.isArray(i)||(i=[i]);const r=await e.getWorktrees();for(const n of r){if(n.branch===t)return n;if(null==i||null==n.branch)continue;const r=await e.getBranch(n.branch);if(null!=r?.upstream?.name&&(i.includes(r.upstream.name)||r.upstream.name.startsWith("remotes/")&&i.includes(r.upstream.name.substring(8))))return n}}},4794:(e,t,i)=>{i.d(t,{Sk:()=>h,gK:()=>c});var r=i(4241),n=i(3050),s=Object.defineProperty,o=Object.getOwnPropertyDescriptor;const a="",l=/^(.*)\t(.*)\s\((.*)\)$/gm;((e,t,i,r)=>{for(var n,a=r>1?void 0:r?o(t,i):t,l=e.length-1;l>=0;l--)(n=e[l])&&(a=(r?n(t,i,a):n(a))||a);r&&a&&s(t,i,a)})([(0,r.fF)({args:!1,singleLine:!0})],class GitRemoteParser{static parse(e,t,i){if(!e)return;const r=new Map;let s,o,a,c,u,d,p,m;for(;;){if(m=l.exec(e),null==m)break;if([,s,o,a]=m,s=` ${s}`.substr(1),o=` ${o}`.substr(1),a=` ${a}`.substr(1),[c,u,d]=h(o),p=r.get(s),null==p)p=new n.ss(t,s,c,u,d,i(o,u,d),[{url:o,type:a}]),r.set(s,p);else{if(p.urls.push({url:o,type:a}),null!=p.provider&&"push"!==a)continue;const e=i(o,u,d);if(null==e)continue;p=new n.ss(t,s,c,u,d,e,p.urls),r.set(s,p)}}return[...r.values()]}},"parse",1);const c=/^(?:(git:\/\/)(.*?)\/|(https?:\/\/)(?:.*?@)?(.*?)\/|git@(.*):|(ssh:\/\/)(?:.*@)?(.*?)(?::.*?)?(?:\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;function h(e){const t=c.exec(e);return null==t?[a,a,e]:[t[1]||t[3]||t[6],t[2]||t[4]||t[5]||t[7]||t[8],t[9].replace(/\.git\/?$/,a)]}},2075:(e,t,i)=>{i.d(t,{at:()=>C,gu:()=>GitHubRemote,z4:()=>GitHubAuthenticationProvider});var r=i(9496),n=i(4241),s=i(4488),o=i(8786),a=i(3620),l=i(2509),c=i(4321),h=i(3084),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor,p=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&u(t,i,s),s};const m=/\b(?<repo>[^/\s]+\/[^/\s]+)#(?<num>[0-9]+)\b(?!]\()/g,g=/^\/([^/]+)\/([^/]+?)\/blob(.+)$/i,f=/^L(\d+)(?:-L(\d+))?$/,w=Object.freeze({id:"github",scopes:["repo","read:user","user:email"]}),v=Object.freeze({id:"github-enterprise",scopes:["repo","read:user","user:email"]});function y(e){return(0,a.qq)(e,"github.com")}class GitHubRemote extends h.D{get authProvider(){return y(this.domain)?w:v}constructor(e,t,i,r,n,s=!1){super(e,t,i,r,n,s)}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api/v3`:`https://api.${this.domain}`}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,description:`${this.name} Issue or Pull Request #<num>`},{prefix:"gh-",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,ignoreCase:!0,description:`${this.name} Issue or Pull Request #<num>`},{tokenize:(e,t,i)=>"plaintext"===t?e:e.replace(m,((e,r,n)=>{const s=(0,o.M)(`${this.protocol}://${this.domain}/${r}/issues/${n}`),a=` "Open Issue or Pull Request #${n} from ${r} on ${this.name}"`,l=`\0${i.size}\0`;return"markdown"===t?i.set(l,`[${e}](${s}${a})`):"html"===t&&i.set(l,`<a href="${s}" title=${a}>${e}</a>`),l})),parse:(e,t)=>{let i,r,n;for(;;){if(n=m.exec(e),null==n?.groups)break;({repo:i,num:r}=n.groups),t.set(r,{provider:this,id:r,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/issues/${r}`,title:`Open Issue or Pull Request #<num> from ${i} on ${this.name}`,description:`${this.name} Issue or Pull Request ${i}#${r}`})}}}]),this._autolinks}get avatarUri(){const[e]=this.splitPath();return r.Uri.parse(`https://avatars.githubusercontent.com/${e}`)}get icon(){return"github"}get id(){return"github"}get name(){return this.formatName("GitHub")}async connect(){return!(!y(this.domain)&&!await(0,h.e)("GitHub Enterprise instance",this.container))&&super.connect()}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,n;if(t.fragment){const e=f.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(n=parseInt(i,10)))}}const s=g.exec(t.path);if(null==s)return;const[,,,o]=s;let a,l=o.indexOf("/",1);if(-1!==l){const t=o.substring(1,l);if((0,c.D3)(t)){const t=e.toAbsoluteUri(o.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:n}}}const h=new Map;l=o.length;do{l=o.lastIndexOf("/",l-1),a=o.substring(1,l),h.set(a,o.substr(l))}while(l>0);if(0!==h.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&h.has(e.getNameWithoutRemote())});for(const s of t){const t=h.get(s.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:n}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}${i}${t}`)}getUrlForCreatePullRequest(e,t){if(e.remote.url===t.remote.url)return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${t.branch}`);const[i]=t.remote.path.split("/",1);return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${i}:${t.branch}`)}getUrlForFile(e,t,i,r){let n;return n=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-L${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/blob/${i}/${e}`)}${n}`:t?`${this.encodeUrl(`${this.baseUrl}/blob/${t}/${e}`)}${n}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${n}`}async getProviderAccountForCommit({accessToken:e},t,i){const[r,n]=this.splitPath();return(await this.container.github)?.getAccountForCommit(this,e,r,n,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i){const[r,n]=this.splitPath();return(await this.container.github)?.getAccountForEmail(this,e,r,n,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.github)?.getDefaultBranch(this,e,t,i,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t){const[i,r]=this.splitPath();return(await this.container.github)?.getIssueOrPullRequest(this,e,i,r,Number(t),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,r){const[n,s]=this.splitPath(),{include:o,...a}=r??{},l=(await Promise.resolve().then(i.bind(i,3878))).toGitHubPullRequestState;return(await this.container.github)?.getPullRequestForBranch(this,e,n,s,t,{...a,include:o?.map((e=>l(e))),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t){const[i,r]=this.splitPath();return(await this.container.github)?.getPullRequestForCommit(this,e,i,r,t,{baseUrl:this.apiBaseUrl})}async getProviderRepositoryMetadata({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.github)?.getRepositoryMetadata(this,e,t,i,{baseUrl:this.apiBaseUrl})}async searchProviderMyPullRequests({accessToken:e}){return(await this.container.github)?.searchMyPullRequests(this,e,{repos:[this.path],baseUrl:this.apiBaseUrl})}async searchProviderMyIssues({accessToken:e}){return(await this.container.github)?.searchMyIssues(this,e,{repos:[this.path],baseUrl:this.apiBaseUrl})}}p([(0,s.H)()],GitHubRemote.prototype,"authProvider",1),p([(0,n.cM)()],GitHubRemote.prototype,"connect",1);const b=/^(?:(\d+)\+)?([a-zA-Z\d-]{1,39})@users\.noreply\.(.*)$/i;function C(e){const t=b.exec(e);if(null==t)return;const[,i,r,n]=t;return{userId:i,login:r,authority:n}}class GitHubAuthenticationProvider{_disposable;constructor(e){this._disposable=e.integrationAuthentication.registerProvider("github-enterprise",this)}dispose(){this._disposable.dispose()}getSessionId(e){return e?.domain??""}async createSession(e){const t=r.window.createInputBox();t.ignoreFocusOut=!0;const i=[];let n;try{const s={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the GitHub Access Tokens Page"};n=await new Promise((n=>{i.push(t.onDidHide((()=>n(void 0))),t.onDidChangeValue((()=>t.validationMessage=void 0)),t.onDidAccept((()=>{const e=t.value.trim();e?n(e):t.validationMessage="A personal access token is required"})),t.onDidTriggerButton((t=>{t===s&&r.env.openExternal(r.Uri.parse(`https://${e?.domain??"github.com"}/settings/tokens`))}))),t.password=!0,t.title="GitHub Authentication"+(e?.domain?`  • ${e.domain}`:""),t.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,t.prompt=(0,l.gn)("input-prompt-links")?`Paste your [GitHub Personal Access Token](https://${e?.domain??"github.com"}/settings/tokens "Get your GitHub Access Token")`:"Paste your GitHub Personal Access Token",t.buttons=[s],t.show()}))}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}if(n)return{id:this.getSessionId(e),accessToken:n,scopes:[],account:{id:"",label:""}}}}},2795:(e,t,i)=>{i.d(t,{x:()=>RemoteProvider});var r=i(9496),n=i(8786),s=i(6503);class RemoteProvider{constructor(e,t,i="https",r,n=!1){this.domain=e,this.path=t,this.protocol=i,this.custom=n,this._name=r}type="simple";_name;get autolinks(){return[]}get avatarUri(){}get displayPath(){return this.path}get icon(){return"remote"}get owner(){return this.path.split("/")[0]}async copy(e){const t=this.url(e);null!=t&&await r.env.clipboard.writeText(t)}hasRichIntegration(){return"rich"===this.type}get maybeConnected(){return!1}open(e){return this.openUrl(this.url(e))}url(e){switch(e.type){case s.J.Branch:return this.getUrlForBranch(e.branch);case s.J.Branches:return this.getUrlForBranches();case s.J.Commit:return this.getUrlForCommit(e.sha);case s.J.Comparison:return this.getUrlForComparison?.(e.base,e.compare,e.notation??"...");case s.J.CreatePullRequest:return this.getUrlForCreatePullRequest?.(e.base,e.compare);case s.J.File:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,void 0,e.range);case s.J.Repo:return this.getUrlForRepository();case s.J.Revision:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,null!=e.sha?e.sha:void 0,e.range);default:return}}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}formatName(e){return null!=this._name?this._name:`${e}${this.custom?` (${this.domain})`:""}`}splitPath(){const e=this.path.indexOf("/");return[this.path.substring(0,e),this.path.substring(e+1)]}getUrlForRepository(){return this.baseUrl}async openUrl(e){if(null!=e)return r.env.openExternal(e)}encodeUrl(e){return(0,n.M)(e)?.replace(/#/g,"%23")}}},3084:(e,t,i)=>{i.d(t,{D:()=>RichRemoteProvider,e:()=>y});var r=i(9496),n=i(9827),s=i(429),o=i(4575),a=i(7925),l=i(4968),c=i(5148),h=i(5432),u=i(4241),d=i(4336),p=i(6004),m=i(7469),g=i(2795),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&f(t,i,s),s};class RichRemoteProvider extends g.x{constructor(e,t,i,n,s,o){super(t,i,n,s,o),this.container=e,e.context.subscriptions.push(c.D.onDidChange((e=>{c.D.changed(e,"remotes")&&this._ignoreSSLErrors.clear()})),e.richRemoteProviders.onDidChangeConnectionState((e=>{e.key===this.key&&("disconnected"===e.reason?this.disconnect({silent:!0}):"connected"===e.reason&&this.ensureSession(!1))})),r.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged,this))}type="rich";_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}get authProviderDescriptor(){return{domain:this.domain,scopes:this.authProvider.scopes}}get key(){return this.custom?`${this.name}:${this.domain}`:this.name}get connectedKey(){return`connected:${this.key}`}get maybeConnected(){return void 0===this._session?void 0:null!==this._session}_session;session(){return void 0===this._session?this.ensureSession(!1):this._session??void 0}onAuthenticationSessionsChanged(e){e.provider.id===this.authProvider.id&&this.ensureSession(!1)}async connect(){try{const e=await this.ensureSession(!0);return Boolean(e)}catch(e){return!1}}async disconnect(e){if(e?.currentSessionOnly&&null===this._session)return;const t=null!=this._session;if(t&&!e?.silent)if(e?.currentSessionOnly)(0,a.mm)(this.name);else{const e={title:"Disable"},t={title:"Disable & Sign Out"},i={title:"Cancel",isCloseAffordance:!0};let n;if(n=this.container.integrationAuthentication.hasProvider(this.authProvider.id)?await r.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?\n\nNote: signing out clears the saved authentication.`,{modal:!0},e,t,i):await r.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?`,{modal:!0},e,i),null==n||n===i)return;n===t&&this.container.integrationAuthentication.deleteSession(this.authProvider.id,this.authProviderDescriptor)}this.resetRequestExceptionCount(),this._repoMetadata=void 0,this._prsByCommit.clear(),this._session=null,t&&(e?.currentSessionOnly||this.container.storage.storeWorkspace(this.connectedKey,!1),this._onDidChange.fire(),e?.silent||e?.currentSessionOnly||this.container.richRemoteProviders.disconnected(this.key))}async reauthenticate(){void 0!==this._session&&(this._session=void 0,await this.ensureSession(!0,!0))}requestExceptionCount=0;resetRequestExceptionCount(){this.requestExceptionCount=0}trackRequestException(){this.requestExceptionCount++,this.requestExceptionCount>=5&&null!==this._session&&this.disconnect({currentSessionOnly:!0})}async isConnected(){return null!=await this.session()}async getAccountForCommit(e,t){const i=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderAccountForCommit(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return d.Yd.error(e,i),void((e instanceof o._7||e instanceof o.Bn)&&this.trackRequestException())}}async getAccountForEmail(e,t){const i=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderAccountForEmail(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return d.Yd.error(e,i),void((e instanceof o._7||e instanceof o.Bn)&&this.trackRequestException())}}async getDefaultBranch(){const e=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const e=await this.getProviderDefaultBranch(this._session);return this.resetRequestExceptionCount(),e}catch(t){return d.Yd.error(t,e),void((t instanceof o._7||t instanceof o.Bn)&&this.trackRequestException())}}_repoMetadata;async getRepositoryMetadata(){if(null!=this._repoMetadata)return this._repoMetadata;const e=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const e=await this.getProviderRepositoryMetadata(this._session);return this._repoMetadata=e,this.resetRequestExceptionCount(),e}catch(t){return d.Yd.error(t,e),void((t instanceof o._7||t instanceof o.Bn)&&this.trackRequestException())}}async searchMyPullRequests(){const e=(0,p.UH)();try{const e=await this.searchProviderMyPullRequests(this._session);return this.resetRequestExceptionCount(),e}catch(t){return d.Yd.error(t,e),void((t instanceof o._7||t instanceof o.Bn)&&this.trackRequestException())}}async searchMyIssues(){const e=(0,p.UH)();try{const e=await this.searchProviderMyIssues(this._session);return this.resetRequestExceptionCount(),e}catch(t){return d.Yd.error(t,e),void((t instanceof o._7||t instanceof o.Bn)&&this.trackRequestException())}}async getIssueOrPullRequest(e){const t=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const t=await this.getProviderIssueOrPullRequest(this._session,e);return this.resetRequestExceptionCount(),t}catch(e){return d.Yd.error(e,t),void((e instanceof o._7||e instanceof o.Bn)&&this.trackRequestException())}}_ignoreSSLErrors=new Map;getIgnoreSSLErrors(){if(s.$L)return!1;let e=this._ignoreSSLErrors.get(this.id);if(void 0===e){const t=c.D.get("remotes")?.find((e=>e.type.toLowerCase()===this.id&&e.domain===this.domain));e=t?.ignoreSSLErrors??!1,this._ignoreSSLErrors.set(this.id,e)}return e}async getPullRequestForBranch(e,t){const i=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderPullRequestForBranch(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return d.Yd.error(e,i),void((e instanceof o._7||e instanceof o.Bn)&&this.trackRequestException())}}_prsByCommit=new Map;getPullRequestForCommit(e){let t=this._prsByCommit.get(e);return void 0===t&&(t=this.getPullRequestForCommitCore(e),this._prsByCommit.set(e,t)),null!=t&&(0,m.tI)(t)?t.then((e=>e??void 0)):t??void 0}async getPullRequestForCommitCore(e){const t=(0,p.UH)();if(!(this.maybeConnected??await this.isConnected()))return null;try{const t=await this.getProviderPullRequestForCommit(this._session,e)??null;return this._prsByCommit.set(e,t),this.resetRequestExceptionCount(),t}catch(i){return d.Yd.error(i,t),this._prsByCommit.delete(e),(i instanceof o._7||i instanceof o.Bn)&&this.trackRequestException(),null}}async ensureSession(e,t=!1){if(null!=this._session)return this._session;if(!c.D.get("integrations.enabled"))return;if(e)await this.container.storage.deleteWorkspace(this.connectedKey);else if(!1===this.container.storage.getWorkspace(this.connectedKey))return;let i;try{i=this.container.integrationAuthentication.hasProvider(this.authProvider.id)?await this.container.integrationAuthentication.getSession(this.authProvider.id,this.authProviderDescriptor,{createIfNeeded:e,forceNewSession:t}):await(0,n.a_)(this.getIgnoreSSLErrors(),(()=>r.authentication.getSession(this.authProvider.id,this.authProvider.scopes,{createIfNone:t?void 0:e,silent:!e&&!t||void 0,forceNewSession:!!t||void 0})))}catch(e){if(await this.container.storage.deleteWorkspace(this.connectedKey),e instanceof Error&&e.message.includes("User did not consent"))return;i=null}return void 0!==i||e||await this.container.storage.deleteWorkspace(this.connectedKey),this._session=i??null,this.resetRequestExceptionCount(),null!=i&&(await this.container.storage.storeWorkspace(this.connectedKey,!0),queueMicrotask((()=>{this._onDidChange.fire(),this.container.richRemoteProviders.connected(this.key)}))),i??void 0}}async function y(e,t){const i=`Connecting to a ${e} instance for rich integration features requires a trial or paid plan.`;for(;;){const e=await t.subscription.getSubscription();if(!1===e.account?.verified){const e={title:"Resend Verification"},n={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${i}\n\nYou must verify your email before you can continue.`,{modal:!0},e,n)===e&&await t.subscription.resendVerification())continue;return!1}const n=e.plan.effective.id;if((0,l.aG)(n))break;if(null==e.account&&!(0,l.gA)(e)){const e={title:"Preview Pro"},n={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${i}\n\nDo you want to preview ✨ features for 3 days?`,{modal:!0},e,n)!==e)return!1;t.subscription.startPreviewTrial();break}if(null==e.account){const e={title:"Start Free Pro Trial"},n={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${i}\n\nDo you want to continue to use ✨ features on privately hosted repos, free for an additional 7 days?`,{modal:!0},e,n)===e&&await t.subscription.loginOrSignUp())continue}else{const e={title:"Upgrade to Pro"},n={title:"Cancel",isCloseAffordance:!0};await r.window.showWarningMessage(`${i}\n\nDo you want to continue to use ✨ features on privately hosted repos?`,{modal:!0},e,n)===e&&t.subscription.purchase()}return!1}return!0}v([(0,u.cM)()],RichRemoteProvider.prototype,"connect",1),v([(0,h.H)(),(0,u.cM)()],RichRemoteProvider.prototype,"disconnect",1),v([(0,u.cM)()],RichRemoteProvider.prototype,"reauthenticate",1),v([(0,u.fF)()],RichRemoteProvider.prototype,"trackRequestException",1),v([(0,h.H)(),(0,u.fF)({exit:!0})],RichRemoteProvider.prototype,"isConnected",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"getAccountForCommit",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"getAccountForEmail",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"getDefaultBranch",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"getRepositoryMetadata",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"searchMyPullRequests",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"searchMyIssues",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"getIssueOrPullRequest",1),v([(0,h.H)(),(0,u.fF)()],RichRemoteProvider.prototype,"getPullRequestForBranch",1),v([(0,u.fF)()],RichRemoteProvider.prototype,"getPullRequestForCommit",1),v([(0,u.fF)()],RichRemoteProvider.prototype,"getPullRequestForCommitCore",1),v([(0,h.H)()],RichRemoteProvider.prototype,"ensureSession",1)},6934:(e,t,i)=>{i.d(t,{FL:()=>a,KQ:()=>o,WY:()=>n,pD:()=>u,pU:()=>l,uP:()=>s});var r=i(4321);const n=new Set(["","=:","message:","@:","author:","#:","commit:","?:","file:","~:","change:"]);function s(e){return{query:e.pattern,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex}}function o(e){return{pattern:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex}}function a(e){return`${"query"in e?e.query:e.pattern}|${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}`}function l(e){return e.map((e=>`#:${"string"==typeof e?(0,r.zL)(e):e.name}`)).join(" ")}const c=new Map([["","message:"],["=:","message:"],["message:","message:"],["@:","author:"],["author:","author:"],["#:","commit:"],["commit:","commit:"],["?:","file:"],["file:","file:"],["~:","change:"],["change:","change:"]]),h=/(?:(?<op>=:|message:|@:|author:|#:|commit:|\?:|file:|~:|change:)\s?(?<value>".+?"|\S+}?))|(?<text>\S+)(?!(?:=|message|@|author|#|commit|\?|file|~|change):)/gi;function u(e){const t=new Map;let i,n,s,o;do{if(o=h.exec(e.query),null==o?.groups)break;if(i=c.get(o.groups.op),({value:n,text:s}=o.groups),s&&(i="@me"===s?"author:":(0,r.D3)(s)?"commit:":"message:",n=s),i&&n){const e=t.get(i);null==e?t.set(i,[n]):e.push(n)}}while(null!=o);return t}},1062:(e,t,i)=>{i.d(t,{jw:()=>b,nN:()=>A,yq:()=>C});var r=i(9496),n=i(9376),s=i(2421),o=i(5255),a=i(963),l=i(9338),c=i(7462),h=i(439),u=i(4321),d=i(3050),p=i(5148),m=i(3105),g=i(4336),f=i(8227),w=i(6004),v=i(7469),y=i(3620);async function b(e,t,i,n){const l=t.sha;let c=null;const d=await async function(){if(null==e.file)return;let r;if(e.isUncommitted)(0,u.rD)(l)&&(r=l);else if(c=await e.getPreviousSha(),r=c,null==r)return`\`\`\`diff\n+ ${n.lineAt(i).text}\n\`\`\``;const s=i+1,o=e.lines.find((e=>e.line===s))??e.lines[0];let d=e.file.originalPath;null==d&&t.fsPath!==e.file.uri.fsPath&&(d=e.file.path),i=o.line-1;let m=await a.W.instance.git.getDiffForLine(t,i,r,l);return null==m&&null==r&&l!==h.pw&&(m=await a.W.instance.git.getDiffForLine(t,i,void 0,h.pw)),null!=m?function(e,t){if("hunk"===t||null==t&&"hunk"===p.D.get("hovers.changesDiff"))return P(e.hunk);return`\`\`\`diff${null==e.previous?"":`\n- ${e.previous.line.trim()}`}${null==e.current?"":`\n+ ${e.current.line.trim()}`}\n\`\`\``}(m):void 0}();if(null==d)return;let m,g,f;if(e.isUncommitted){const t=await e.getPreviousComparisonUrisForLine(i,l);if(null==t?.previous)return;m=`[$(compare-changes)](${s.V.getMarkdownCommandArgs({lhs:{sha:t.previous.sha??"",uri:t.previous.documentUri()},rhs:{sha:t.current.sha??"",uri:t.current.documentUri()},repoPath:e.repoPath,line:i})} "Open Changes")`,g=null==t.previous.sha||t.previous.isUncommitted?`  &nbsp;_${(0,u.zL)(t.previous.sha,{strings:{working:"Working Tree"}})}_ &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; `:`  &nbsp;[$(git-commit) ${(0,u.zL)(t.previous.sha||"")}](${s.oc.getMarkdownCommandArgs(t.previous.sha||"")} "Show Commit") &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; `,f=null==t.current.sha||t.current.isUncommitted?`_${(0,u.zL)(t.current.sha,{strings:{working:"Working Tree"}})}_`:`[$(git-commit) ${(0,u.zL)(t.current.sha||"")}](${s.oc.getMarkdownCommandArgs(t.current.sha||"")} "Show Commit")`}else m=`[$(compare-changes)](${s.V.getMarkdownCommandArgs(e,i)} "Open Changes")`,null===c&&(c=await e.getPreviousSha()),c&&(g=`  &nbsp;[$(git-commit) ${(0,u.zL)(c)}](${s.oc.getMarkdownCommandArgs(c)} "Show Commit") &nbsp;${o.NE.ArrowLeftRightLong}&nbsp;`),f=`[$(git-commit) ${e.shortSha}](${s.oc.getMarkdownCommandArgs(e.sha)} "Show Commit")`;m=`${d}\n---\n\nChanges${g??" added in "}${f} &nbsp;&nbsp;|&nbsp;&nbsp; ${m}`;const w=new r.MarkdownString(m,!0);return w.supportHtml=!0,w.isTrusted=!0,w}async function C(e,t,i,n){const a=P(n);let l,h,u;if(null==e)h="_Working Tree_",u="_Unsaved_";else{const r=await e.findFile(t);if(null==r)return;l=`[$(compare-changes)](${s.V.getMarkdownCommandArgs({lhs:{sha:e.sha,uri:c.YY.fromFile(r,t.repoPath,void 0,!0).toFileUri()},rhs:{sha:"",uri:t.toFileUri()},repoPath:t.repoPath,line:i})} "Open Changes")`,h=`[$(git-commit) ${e.shortSha}](${s.oc.getMarkdownCommandArgs(e.sha)} "Show Commit")`,u="_Working Tree_"}l=`${a}\n---\n\nLocal Changes  &nbsp;${h} &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; ${u}${null==l?"":` &nbsp;&nbsp;|&nbsp;&nbsp; ${l}`}`;const d=new r.MarkdownString(l,!0);return d.supportHtml=!0,d.isTrusted=!0,d}async function A(e,t,i,n){let s=e.message??e.summary;if(null==e.message&&!e.isUncommitted&&(await e.ensureFullDetails(),s=e.message??e.summary,n?.cancellationToken?.isCancellationRequested))return new r.MarkdownString;const o=await a.W.instance.git.getRemotesWithProviders(e.repoPath,{sort:!0});if(n?.cancellationToken?.isCancellationRequested)return new r.MarkdownString;const[c,h,u,p]=await Promise.allSettled([e.isUncommitted?e.getPreviousComparisonUrisForLine(i,t.sha):void 0,S(s,o),n?.pullRequests?.pr??R(e.ref,o,{pullRequests:!1!==n?.pullRequests?.enabled&&l.i.has(n.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")}),a.W.instance.vsls.maybeGetPresence(e.author.email)]);if(n?.cancellationToken?.isCancellationRequested)return new r.MarkdownString;const m=(0,v.Sb)(c),g=(0,v.Sb)(h),f=(0,v.Sb)(u),w=(0,v.Sb)(p);null==f||f instanceof v.PK||f instanceof d.ss||g?.delete(f.id);const y=await l.i.fromTemplateAsync(n.format,e,{autolinkedIssuesOrPullRequests:g,dateFormat:null===n.dateFormat?"MMMM Do, YYYY h:mma":n.dateFormat,editor:{line:i,uri:t},getBranchAndTagTips:n?.getBranchAndTagTips,messageAutolinks:n?.autolinks,pullRequestOrRemote:f,presence:w,previousLineComparisonUris:m,outputFormat:"markdown",remotes:o}),b=new r.MarkdownString(y,!0);return b.supportHtml=!0,b.isTrusted=!0,b}function P(e){return`\`\`\`diff\n${e.contents.trim()}\n\`\`\``}async function S(e,t){const i=(0,w.QR)("Hovers.getAutoLinkedIssuesOrPullRequests");g.Yd.debug(i,`${o.NE.Dash} message=<message>`);const r=(0,n.a)(),s=p.D.get("hovers");if(!s.autolinks.enabled||!s.autolinks.enhanced||!l.i.has(s.detailsMarkdownFormat,"message"))return void g.Yd.debug(i,`completed [${(0,y.qk)(r)}ms]`);const c=await a.W.instance.git.getBestRemoteWithRichProvider(t);if(null==c?.provider)return void g.Yd.debug(i,`completed [${(0,y.qk)(r)}ms]`);try{const t=await a.W.instance.autolinks.getLinkedIssuesAndPullRequests(e,c,{timeout:250});if(null!=t&&g.Yd.enabled(f.i.Debug)){const e=(0,m.QX)(t.values(),(e=>e instanceof v.PK));if(0!==e)return g.Yd.debug(i,`timed out ${o.NE.Dash} ${e} issue/pull request queries took too long (over 250 ms) [${(0,y.qk)(r)}ms]`),t}return g.Yd.debug(i,`completed [${(0,y.qk)(r)}ms]`),t}catch(e){return void g.Yd.error(e,i,`failed [${(0,y.qk)(r)}ms]`)}}async function R(e,t,i){const r=(0,w.QR)("Hovers.getPullRequestForCommit");g.Yd.debug(r,`${o.NE.Dash} ref=${e}`);const s=(0,n.a)();if(!i?.pullRequests)return void g.Yd.debug(r,`completed [${(0,y.qk)(s)}ms]`);const l=await a.W.instance.git.getBestRemoteWithRichProvider(t,{includeDisconnected:!0});if(null==l?.provider)return void g.Yd.debug(r,`completed [${(0,y.qk)(s)}ms]`);const{provider:c}=l;if(!(c.maybeConnected??await c.isConnected()))return g.Yd.debug(r,`completed [${(0,y.qk)(s)}ms]`),l;try{const t=await a.W.instance.git.getPullRequestForCommit(e,c,{timeout:250});return g.Yd.debug(r,`completed [${(0,y.qk)(s)}ms]`),t}catch(e){return e instanceof v.PK?(g.Yd.debug(r,`timed out [${(0,y.qk)(s)}ms]`),e):void g.Yd.error(e,r,`failed [${(0,y.qk)(s)}ms]`)}}},7925:(e,t,i)=>{i.d(t,{B8:()=>d,EB:()=>p,G:()=>u,Nl:()=>f,QP:()=>y,RR:()=>h,W8:()=>m,bi:()=>v,f3:()=>w,mm:()=>b,s$:()=>A,vF:()=>C,xs:()=>P,zk:()=>g});var r=i(9496),n=i(2540),s=i(5255),o=i(9529),a=i(5148),l=i(4336),c=i(8227);function h(e){return S("info",null==e?"There is no previous commit.":`Commit ${e.shortSha} (${e.author.name}, ${e.formattedDate}) has no previous commit.`,n.kl.CommitHasNoPreviousCommitWarning)}function u(e){return S("warn",`${e}. The commit could not be found.`,n.kl.CommitNotFoundWarning)}async function d(e){const t={title:"Create Pull Request..."};return await S("info",`Would you like to create a Pull Request for branch '${e}'?`,n.kl.CreatePullRequestPrompt,{title:"Don't Show Again"},t)===t}async function p(){const e={title:"Disable Debug Logging"};return await S("warn","GitLens debug logging is currently enabled. Unless you are reporting an issue, it is recommended to be disabled. Would you like to disable it?",n.kl.SuppressDebugLoggingWarning,{title:"Don't Show Again"},e)===e}async function m(e){if(l.Yd.enabled(c.i.Error)){null!=await S("error",`${e}. See output channel for more details.`,void 0,null,{title:"Open Output Channel"})&&l.Yd.showOutputChannel()}else{null!=await S("error",`${e}. If the error persists, please enable debug logging and try again.`,void 0,null,{title:"Enable Debug Logging"})&&(0,o.P0)(s.Gh.EnableDebugLogging)}}function g(e){return S("warn",`${e}. The file is probably not under source control.`,n.kl.FileNotUnderSourceControlWarning)}function f(e){return S("error",`This GitLens pre-release version (${e}) has expired. Please upgrade to a more recent version.`)}function w(e){return S("warn",`${e}. The line has uncommitted changes.`,n.kl.LineUncommittedWarning)}function v(e){return S("warn",`${e}. No repository could be found.`,n.kl.NoRepositoryWarning)}function y(){return S("warn","Closing either the git-rebase-todo file or the Rebase Editor will start the rebase.",n.kl.RebaseSwitchToTextWarning)}function b(e){return S("error",`Rich integration with ${e} has been disconnected for this session, because of too many failed requests.`,n.kl.IntegrationDisconnectedTooManyFailedRequestsWarning,void 0,{title:"OK"})}function C(e){return S("error",e,n.kl.IntegrationRequestFailed500Warning,void 0,{title:"OK"})}function A(e){return S("error",`${e} request timed out.`,n.kl.IntegrationRequestTimedOutWarning,void 0,{title:"OK"})}async function P(e){const t={title:"Switch to New Layout"};await S("info",`Upgraded to GitLens ${e} — [see what's new](https://help.gitkraken.com/gitlens/gitlens-release-notes-current/ "See what's new in GitLens ${e}").\nWe've reimagined and rearranged our views for greater focus and productivity, and recommend switching to the new layout — [learn more and tell us what you think](https://github.com/gitkraken/vscode-gitlens/discussions/2721 "Learn more about what's changed")!`,void 0,null,t)===t&&(0,o.P0)(s.Gh.ResetViewsLayout)}async function S(e,t,i,n={title:"Don't Show Again"},...s){if(l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(n)})`),null!=i&&a.D.get(`advanced.messages.${i}`))return void l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(n)}) skipped`);let o;switch(null!=i&&null!==n&&s.push(n),e){case"info":o=await r.window.showInformationMessage(t,...s);break;case"warn":o=await r.window.showWarningMessage(t,...s);break;case"error":o=await r.window.showErrorMessage(t,...s)}return null==i||null!==n&&o!==n||(l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(n)}) don't show again requested`),await function(e){const t={...a.D.get("advanced.messages")};t[e]=!0;for(const[e,i]of Object.entries(t))!0!==i&&delete t[e];return a.D.update("advanced.messages",t,r.ConfigurationTarget.Global)}(i),o!==n)?(l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(n)}) returned ${null!=o?o.title:o}`),o):void 0}},9616:(e,t,i)=>{function r(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}i.r(t),i.d(t,{GitHubApi:()=>GitHubApi});var n=i(5186);function s(e){return"[object Object]"===Object.prototype.toString.call(e)}function o(e){var t,i;return!1!==s(e)&&(void 0===(t=e.constructor)||!1!==s(i=t.prototype)&&!1!==i.hasOwnProperty("isPrototypeOf"))}function a(e,t){const i=Object.assign({},e);return Object.keys(t).forEach((r=>{o(t[r])?r in e?i[r]=a(e[r],t[r]):Object.assign(i,{[r]:t[r]}):Object.assign(i,{[r]:t[r]})})),i}function l(e){for(const t in e)void 0===e[t]&&delete e[t];return e}function c(e,t,i){if("string"==typeof t){let[e,r]=t.split(" ");i=Object.assign(r?{method:e,url:r}:{url:e},i)}else i=Object.assign({},t);var r;i.headers=(r=i.headers)?Object.keys(r).reduce(((e,t)=>(e[t.toLowerCase()]=r[t],e)),{}):{},l(i),l(i.headers);const n=a(e||{},i);return e&&e.mediaType.previews.length&&(n.mediaType.previews=e.mediaType.previews.filter((e=>!n.mediaType.previews.includes(e))).concat(n.mediaType.previews)),n.mediaType.previews=n.mediaType.previews.map((e=>e.replace(/-preview/,""))),n}var h=/\{[^}]+\}/g;function u(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function d(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,i)=>(t[i]=e[i],t)),{})}function p(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function m(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function g(e,t,i){return t="+"===e||"#"===e?p(t):m(t),i?m(i)+"="+t:t}function f(e){return null!=e}function w(e){return";"===e||"&"===e||"?"===e}function v(e,t){var i=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,r,n){if(r){let e="";const n=[];if(-1!==i.indexOf(r.charAt(0))&&(e=r.charAt(0),r=r.substr(1)),r.split(/,/g).forEach((function(i){var r=/([^:\*]*)(?::(\d+)|(\*))?/.exec(i);n.push(function(e,t,i,r){var n=e[i],s=[];if(f(n)&&""!==n)if("string"==typeof n||"number"==typeof n||"boolean"==typeof n)n=n.toString(),r&&"*"!==r&&(n=n.substring(0,parseInt(r,10))),s.push(g(t,n,w(t)?i:""));else if("*"===r)Array.isArray(n)?n.filter(f).forEach((function(e){s.push(g(t,e,w(t)?i:""))})):Object.keys(n).forEach((function(e){f(n[e])&&s.push(g(t,n[e],e))}));else{const e=[];Array.isArray(n)?n.filter(f).forEach((function(i){e.push(g(t,i))})):Object.keys(n).forEach((function(i){f(n[i])&&(e.push(m(i)),e.push(g(t,n[i].toString())))})),w(t)?s.push(m(i)+"="+e.join(",")):0!==e.length&&s.push(e.join(","))}else";"===t?f(n)&&s.push(m(i)):""!==n||"&"!==t&&"?"!==t?""===n&&s.push(""):s.push(m(i)+"=");return s}(t,e,r[1],r[2]||r[3]))})),e&&"+"!==e){var s=",";return"?"===e?s="&":"#"!==e&&(s=e),(0!==n.length?e:"")+n.join(s)}return n.join(",")}return p(n)}))}function y(e){let t,i=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),n=Object.assign({},e.headers),s=d(e,["method","baseUrl","url","headers","request","mediaType"]);const o=function(e){const t=e.match(h);return t?t.map(u).reduce(((e,t)=>e.concat(t)),[]):[]}(r);var a;r=(a=r,{expand:v.bind(null,a)}).expand(s),/^http/.test(r)||(r=e.baseUrl+r);const l=d(s,Object.keys(e).filter((e=>o.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(n.accept)&&(e.mediaType.format&&(n.accept=n.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")),e.mediaType.previews.length)){const t=n.accept.match(/[\w-]+(?=-preview)/g)||[];n.accept=t.concat(e.mediaType.previews).map((t=>`application/vnd.github.${t}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(i)?r=function(e,t){const i=/\?/.test(e)?"&":"?",r=Object.keys(t);return 0===r.length?e:e+i+r.map((e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`)).join("&")}(r,l):"data"in l?t=l.data:Object.keys(l).length&&(t=l),n["content-type"]||void 0===t||(n["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(i)&&void 0===t&&(t=""),Object.assign({method:i,url:r,headers:n},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function b(e,t,i){return y(c(e,t,i))}var C=function e(t,i){const r=c(t,i),n=b.bind(null,r);return Object.assign(n,{DEFAULTS:r,defaults:e.bind(null,r),merge:c.bind(null,r),parse:y})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/7.0.6 ${r()}`},mediaType:{format:"",previews:[]}}),A=i(3300),P=i.n(A);class Deprecation extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var S=i(778),R=i.n(S);const D=R()((e=>console.warn(e))),k=R()((e=>console.warn(e)));class RequestError extends Error{constructor(e,t,i){let r;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,"headers"in i&&void 0!==i.headers&&(r=i.headers),"response"in i&&(this.response=i.response,r=i.response.headers);const n=Object.assign({},i.request);i.request.headers.authorization&&(n.headers=Object.assign({},i.request.headers,{authorization:i.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),n.url=n.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=n,Object.defineProperty(this,"code",{get:()=>(D(new Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),Object.defineProperty(this,"headers",{get:()=>(k(new Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),r||{})})}}function _(e){const t=e.request&&e.request.log?e.request.log:console;(o(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let i,r,n={};return(e.request&&e.request.fetch||globalThis.fetch||P())(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect,...e.body&&{duplex:"half"}},e.request)).then((async s=>{r=s.url,i=s.status;for(const e of s.headers)n[e[0]]=e[1];if("deprecation"in n){const i=n.link&&n.link.match(/<([^>]+)>; rel="deprecation"/),r=i&&i.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${n.sunset}${r?`. See ${r}`:""}`)}if(204!==i&&205!==i){if("HEAD"===e.method){if(i<400)return;throw new RequestError(s.statusText,i,{response:{url:r,status:i,headers:n,data:void 0},request:e})}if(304===i)throw new RequestError("Not modified",i,{response:{url:r,status:i,headers:n,data:await T(s)},request:e});if(i>=400){const t=await T(s),o=new RequestError(function(e){if("string"==typeof e)return e;if("message"in e)return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message;return`Unknown error: ${JSON.stringify(e)}`}(t),i,{response:{url:r,status:i,headers:n,data:t},request:e});throw o}return T(s)}})).then((e=>({status:i,url:r,headers:n,data:e}))).catch((t=>{if(t instanceof RequestError)throw t;if("AbortError"===t.name)throw t;throw new RequestError(t.message,500,{request:e})}))}async function T(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json():!t||/^text\/|charset=utf-8$/.test(t)?e.text():function(e){return e.arrayBuffer()}(e)}var F=function e(t,i){const r=t.defaults(i);return Object.assign((function(t,i){const n=r.merge(t,i);if(!n.request||!n.request.hook)return _(r.parse(n));const s=(e,t)=>_(r.parse(r.merge(e,t)));return Object.assign(s,{endpoint:r,defaults:e.bind(null,r)}),n.request.hook(s,n)}),{endpoint:r,defaults:e.bind(null,r)})}(C,{headers:{"user-agent":`octokit-request.js/6.2.8 ${r()}`}});var O=class extends Error{constructor(e,t,i){super("Request failed due to following response errors:\n"+i.errors.map((e=>` - ${e.message}`)).join("\n")),this.request=e,this.headers=t,this.response=i,this.name="GraphqlResponseError",this.errors=i.errors,this.data=i.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},E=["method","baseUrl","url","headers","request","query","mediaType"],$=["query","method","url"],I=/\/api\/v3\/?$/;function x(e,t){const i=e.defaults(t);return Object.assign(((e,t)=>function(e,t,i){if(i){if("string"==typeof t&&"query"in i)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const e in i)if($.includes(e))return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}const r="string"==typeof t?Object.assign({query:t},i):t,n=Object.keys(r).reduce(((e,t)=>E.includes(t)?(e[t]=r[t],e):(e.variables||(e.variables={}),e.variables[t]=r[t],e)),{}),s=r.baseUrl||e.endpoint.DEFAULTS.baseUrl;return I.test(s)&&(n.url=s.replace(I,"/api/graphql")),e(n).then((e=>{if(e.data.errors){const t={};for(const i of Object.keys(e.headers))t[i]=e.headers[i];throw new O(n,t,e.data)}return e.data.data}))}(i,e,t)),{defaults:x.bind(null,i),endpoint:i.endpoint})}x(F,{headers:{"user-agent":`octokit-graphql.js/5.0.6 ${r()}`},method:"POST",url:"/graphql"});var B=/^v1\./,W=/^ghs_/,M=/^ghu_/;async function L(e){const t=3===e.split(/\./).length,i=B.test(e)||W.test(e),r=M.test(e);return{type:"token",token:e,tokenType:t?"app":i?"installation":r?"user-to-server":"oauth"}}async function U(e,t,i,r){const n=t.endpoint.merge(i,r);return n.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),t(n)}var N=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(L.bind(null,e),{hook:U.bind(null,e)})},G="4.2.4",H=class{static defaults(e){return class extends(this){constructor(...t){const i=t[0]||{};super("function"!=typeof e?Object.assign({},e,i,i.userAgent&&e.userAgent?{userAgent:`${i.userAgent} ${e.userAgent}`}:null):e(i))}}}static plugin(...e){var t;const i=this.plugins;return(t=class extends(this){}).plugins=i.concat(e.filter((e=>!i.includes(e)))),t}constructor(e={}){const t=new n.Collection,i={baseUrl:F.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};var s;if(i.headers["user-agent"]=[e.userAgent,`octokit-core.js/${G} ${r()}`].filter(Boolean).join(" "),e.baseUrl&&(i.baseUrl=e.baseUrl),e.previews&&(i.mediaType.previews=e.previews),e.timeZone&&(i.headers["time-zone"]=e.timeZone),this.request=F.defaults(i),this.graphql=(s=this.request,x(s,{method:"POST",url:"/graphql"})).defaults(i),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=t,e.authStrategy){const{authStrategy:i,...r}=e,n=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:r},e.auth));t.wrap("request",n.hook),this.auth=n}else if(e.auth){const i=N(e.auth);t.wrap("request",i.hook),this.auth=i}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((t=>{Object.assign(this,t(this,e))}))}};H.VERSION=G,H.plugins=[];var V=i(9496),q=i(9827),Q=i(429),Y=i(4575),j=i(2380),z=i(4321),K=i(2075),J=i(7925),X=i(2800),Z=i(5148),ee=i(4241),te=i(4336),ie=i(8227),re=i(6004),ne=i(6398),se=i(3620),oe=i(4550),ae=i(3878),le=Object.defineProperty,ce=Object.getOwnPropertyDescriptor,he=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?ce(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&le(t,i,s),s};const ue=Object.freeze({values:[]}),de=Object.freeze({ranges:[]}),pe="\nassignees(first: 10) {\n\tnodes {\n\t\tlogin\n\t\tavatarUrl\n\t\turl\n\t}\n}\nauthor {\n\tlogin\n\tavatarUrl\n\turl\n}\nbaseRefName\nbaseRefOid\nbaseRepository {\n\tname\n\towner {\n\t\tlogin\n\t}\n\turl\n}\nchecksUrl\nisDraft\nisCrossRepository\nisReadByViewer\nheadRefName\nheadRefOid\nheadRepository {\n\tname\n\towner {\n\t\tlogin\n\t}\n\turl\n}\npermalink\nnumber\ntitle\nstate\nadditions\ndeletions\nupdatedAt\nclosedAt\nmergeable\nmergedAt\nmergedBy {\n\tlogin\n}\nrepository {\n\tisFork\n\towner {\n\t\tlogin\n\t}\n}\nreviewDecision\nreviewRequests(first: 10) {\n\tnodes {\n\t\tasCodeOwner\n\t\tid\n\t\trequestedReviewer {\n\t\t\t... on User {\n\t\t\t\tlogin\n\t\t\t\tavatarUrl\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n}\ntotalCommentsCount\n",me="\n... on Issue {\n\tassignees(first: 100) {\n\t\tnodes {\n\t\t\tlogin\n\t\t\turl\n\t\t\tavatarUrl\n\t\t}\n\t}\n\tauthor {\n\t\tlogin\n\t\tavatarUrl\n\t\turl\n\t}\n\tcomments {\n\t  totalCount\n\t}\n\tnumber\n\ttitle\n\turl\n\tcreatedAt\n\tclosedAt\n\tclosed\n\tupdatedAt\n\tlabels(first: 20) {\n\t\tnodes {\n\t\t\tcolor\n\t\t\tname\n\t\t}\n\t}\n\treactions(content: THUMBS_UP) {\n\t  totalCount\n\t}\n\trepository {\n\t\tname\n\t\towner {\n\t\t\tlogin\n\t\t}\n\t}\n}\n";class GitHubApi{_onDidReauthenticate=new V.EventEmitter;get onDidReauthenticate(){return this._onDidReauthenticate.event}_disposable;constructor(e){this._disposable=Z.D.onDidChangeAny((e=>{(Z.D.changedAny(e,["http.proxy","http.proxyStrictSSL"])||Z.D.changed(e,["outputLevel","proxy"]))&&this.resetCaches()}))}dispose(){this._disposable.dispose()}resetCaches(){this._proxyAgent=null,this._octokits.clear(),this._enterpriseVersions.clear()}_proxyAgent=null;get proxyAgent(){if(!Q.$L)return null===this._proxyAgent&&(this._proxyAgent=(0,q.Nx)()),this._proxyAgent}async getAccountForCommit(e,t,i,r,n,s){const o=(0,re.UH)();try{const a="query getAccountForCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: GitObjectID!\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $ref) {\n\t\t\t... on Commit {\n\t\t\t\tauthor {\n\t\t\t\t\tname\n\t\t\t\t\temail\n\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=await this.graphql(e,t,a,{...s,owner:i,repo:r,ref:n},o),c=l?.repository?.object?.author;if(null==c)return;return{provider:e,name:c.name??void 0,email:c.email??void 0,avatarUrl:!c.avatarUrl||ge(s)?c.avatarUrl??void 0:c.email&&null!=s?.baseUrl?await this.createEnterpriseAvatarUrl(e,t,s.baseUrl,c.email,s.avatarSize):void 0}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,o)}}async getAccountForEmail(e,t,i,r,n,s){const o=(0,re.UH)();try{const a="query getAccountForEmail(\n\t$emailQuery: String!\n\t$avatarSize: Int\n) {\n\tsearch(type: USER, query: $emailQuery, first: 1) {\n\t\tnodes {\n\t\t\t... on User {\n\t\t\t\tname\n\t\t\t\temail\n\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t}\n\t\t}\n\t}\n}",l=await this.graphql(e,t,a,{...s,owner:i,repo:r,emailQuery:`in:email ${n}`},o),c=l?.search?.nodes?.[0];if(null==c)return;return{provider:e,name:c.name??void 0,email:c.email??void 0,avatarUrl:!c.avatarUrl||ge(s)?c.avatarUrl??void 0:c.email&&null!=s?.baseUrl?await this.createEnterpriseAvatarUrl(e,t,s.baseUrl,c.email,s.avatarSize):void 0}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,o)}}async getDefaultBranch(e,t,i,r,n){const s=(0,re.UH)();try{const o="query getDefaultBranch(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tdefaultBranchRef {\n\t\t\tname\n\t\t}\n\t}\n}",a=await this.graphql(e,t,o,{...n,owner:i,repo:r},s),l=a?.repository?.defaultBranchRef?.name??void 0;if(null==l)return;return{provider:e,name:l}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,s)}}async getIssueOrPullRequest(e,t,i,r,n,s){const o=(0,re.UH)();try{const a="query getIssueOrPullRequest(\n\t$owner: String!\n\t$repo: String!\n\t$number: Int!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tissueOrPullRequest(number: $number) {\n\t\t\t__typename\n\t\t\t... on Issue {\n\t\t\t\tcreatedAt\n\t\t\t\tclosed\n\t\t\t\tclosedAt\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t}\n\t\t\t... on PullRequest {\n\t\t\t\tcreatedAt\n\t\t\t\tclosed\n\t\t\t\tclosedAt\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n}",l=await this.graphql(e,t,a,{...s,owner:i,repo:r,number:n},o),c=l?.repository?.issueOrPullRequest;if(null==c)return;return{provider:e,type:c.type,id:String(n),date:new Date(c.createdAt),title:c.title,closed:c.closed,closedDate:null==c.closedAt?void 0:new Date(c.closedAt),url:c.url}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,o)}}async getPullRequestForBranch(e,t,i,r,n,s){const o=(0,re.UH)();try{const a="query getPullRequestForBranch(\n\t$owner: String!\n\t$repo: String!\n\t$branch: String!\n\t$limit: Int!\n\t$include: [PullRequestState!]\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tref(qualifiedName: $branch) {\n\t\t\tassociatedPullRequests(first: $limit, orderBy: {field: UPDATED_AT, direction: DESC}, states: $include) {\n\t\t\t\tnodes {\n\t\t\t\t\tauthor {\n\t\t\t\t\t\tlogin\n\t\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t\tpermalink\n\t\t\t\t\tnumber\n\t\t\t\t\ttitle\n\t\t\t\t\tstate\n\t\t\t\t\tupdatedAt\n\t\t\t\t\tclosedAt\n\t\t\t\t\tmergedAt\n\t\t\t\t\trepository {\n\t\t\t\t\t\tisFork\n\t\t\t\t\t\towner {\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=await this.graphql(e,t,a,{...s,owner:i,repo:r,branch:`refs/heads/${n}`,limit:10},o),c=l?.repository?.ref?.associatedPullRequests?.nodes?.filter((e=>null!=e&&(!e.repository.isFork||e.repository.owner.login===i)));if(null==c||0===c.length)return;return c.length>1&&c.sort(((e,t)=>(e.repository.owner.login===i?-1:1)-(t.repository.owner.login===i?-1:1)||("OPEN"===e.state?-1:1)-("OPEN"===t.state?-1:1)||new Date(t.updatedAt).getTime()-new Date(e.updatedAt).getTime())),(0,ae.fromGitHubPullRequest)(c[0],e)}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,o)}}async getPullRequestForCommit(e,t,i,r,n,s){const o=(0,re.UH)();try{const a="query getPullRequestForCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: GitObjectID!\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $ref) {\n\t\t\t... on Commit {\n\t\t\t\tassociatedPullRequests(first: 2, orderBy: {field: UPDATED_AT, direction: DESC}) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpermalink\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tstate\n\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\tclosedAt\n\t\t\t\t\t\tmergedAt\n\t\t\t\t\t\trepository {\n\t\t\t\t\t\t\tisFork\n\t\t\t\t\t\t\towner {\n\t\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=await this.graphql(e,t,a,{...s,owner:i,repo:r,ref:n},o),c=l?.repository?.object?.associatedPullRequests?.nodes?.filter((e=>null!=e&&(!e.repository.isFork||e.repository.owner.login===i)));if(null==c||0===c.length)return;return c.length>1&&c.sort(((e,t)=>(e.repository.owner.login===i?-1:1)-(t.repository.owner.login===i?-1:1)||("MERGED"===e.state?-1:1)-("MERGED"===t.state?-1:1)||new Date(t.updatedAt).getTime()-new Date(e.updatedAt).getTime())),(0,ae.fromGitHubPullRequest)(c[0],e)}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,o)}}async getRepositoryMetadata(e,t,i,r,n){const s=(0,re.UH)();try{const o="query getRepositoryMetadata(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\towner {\n\t\t\tlogin\n\t\t}\n\t\tname\n\t\tparent {\n\t\t\towner {\n\t\t\t\tlogin\n\t\t\t}\n\t\t\tname\n\t\t}\n\t}\n}",a=await this.graphql(e,t,o,{...n,owner:i,repo:r},s),l=a?.repository??void 0;if(null==l)return;return{provider:e,owner:l.owner.login,name:l.name,isFork:null!=l.parent,parent:null!=l.parent?{owner:l.parent.owner.login,name:l.parent.name}:void 0}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,s)}}async getBlame(e,t,i,r,n){const s=(0,re.UH)();try{const o="query getBlameRanges(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String!\n) {\n\tviewer { name }\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\t...on Commit {\n\t\t\t\tblame(path: $path) {\n\t\t\t\t\tranges {\n\t\t\t\t\t\tstartingLine\n\t\t\t\t\t\tendingLine\n\t\t\t\t\t\tcommit {\n\t\t\t\t\t\t\toid\n\t\t\t\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\tchangedFiles\n\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommitter {\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,path:n},s);if(null==a)return de;const l=a.repository?.object?.blame?.ranges;return null==l||0===l.length?{ranges:[],viewer:a.viewer?.name}:{ranges:l,viewer:a.viewer?.name}}catch(e){if(e instanceof Y.Ww)return de;throw this.handleException(e,void 0,s)}}async getBranches(e,t,i,r){const n=(0,re.UH)();try{const s='query getBranches(\n\t$owner: String!\n\t$repo: String!\n\t$branchQuery: String\n\t$cursor: String\n\t$limit: Int = 100\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(query: $branchQuery, refPrefix: "refs/heads/", first: $limit, after: $cursor) {\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\toid\n\t\t\t\t\t...on Commit {\n\t\t\t\t\t\tauthoredDate\n\t\t\t\t\t\tcommittedDate\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',o=await this.graphql(void 0,e,s,{owner:t,repo:i,branchQuery:r?.query,cursor:r?.cursor,limit:Math.min(100,r?.limit??100)},n);if(null==o)return ue;const a=o.repository?.refs;return null==a?ue:{paging:{cursor:a.pageInfo.endCursor,more:a.pageInfo.hasNextPage},values:a.nodes}}catch(e){if(e instanceof Y.Ww)return ue;throw this.handleException(e,void 0,n)}}async getCommit(e,t,i,r){const n=(0,re.UH)();try{const s=await this.request(void 0,e,"GET /repos/{owner}/{repo}/commits/{ref}",{owner:t,repo:i,ref:r},n),o=s?.data;if(null==o)return;const{commit:a}=o;return{oid:o.sha,parents:{nodes:o.parents.map((e=>({oid:e.sha})))},message:a.message,additions:o.stats?.additions,changedFiles:o.files?.length,deletions:o.stats?.deletions,author:{avatarUrl:o.author?.avatar_url??void 0,date:a.author?.date??(new Date).toString(),email:a.author?.email??void 0,name:a.author?.name??""},committer:{date:a.committer?.date??(new Date).toString(),email:a.committer?.email??void 0,name:a.committer?.name??""},files:o.files}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async getCommitForFile(e,t,i,r,n){if((0,z.D3)(r))return this.getCommit(e,t,i,r);const s=await this.getCommits(e,t,i,r,{limit:1,path:n});if(0===s.values.length)return;return{...await this.getCommit(e,t,i,s.values[0].oid)??s.values[0],viewer:s.viewer}}async getCommitBranches(e,t,i,r,n){const s=(0,re.UH)();try{const o='query getCommitBranches(\n\t$owner: String!\n\t$repo: String!\n\t$since: GitTimestamp!\n\t$until: GitTimestamp!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(first: 20, refPrefix: "refs/heads/") {\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\t... on Commit {\n\t\t\t\t\t\thistory(first: 3, since: $since until: $until) {\n\t\t\t\t\t\t\tnodes { oid }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',a=await this.graphql(void 0,e,o,{owner:t,repo:i,since:n.toISOString(),until:n.toISOString()},s),l=a?.repository?.refs?.nodes;if(null==l)return[];const c=[];for(const e of l)for(const t of e.target.history.nodes)if(t.oid===r){c.push(e.name);break}return c}catch(e){if(e instanceof Y.Ww)return[];throw this.handleException(e,void 0,s)}}async getCommitCount(e,t,i,r){const n=(0,re.UH)();try{const s="query getCommitCount(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tref(qualifiedName: $ref) {\n\t\t\ttarget {\n\t\t\t\t... on Commit {\n\t\t\t\t\thistory(first: 1) {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,s,{owner:t,repo:i,ref:r},n),a=o?.repository?.ref?.target.history.totalCount;return a}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async getCommitOnBranch(e,t,i,r,n,s){const o=(0,re.UH)();try{const a="query getCommitOnBranch(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$since: GitTimestamp!\n\t$until: GitTimestamp!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tref(qualifiedName: $ref) {\n\t\t\ttarget {\n\t\t\t\t... on Commit {\n\t\t\t\t\thistory(first: 3, since: $since until: $until) {\n\t\t\t\t\t\tnodes { oid }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=await this.graphql(void 0,e,a,{owner:t,repo:i,ref:`refs/heads/${r}`,since:s.toISOString(),until:s.toISOString()},o),c=l?.repository?.ref.target.history.nodes;if(null==c)return[];const h=[];for(const e of c)if(e.oid===n){h.push(r);break}return h}catch(e){if(e instanceof Y.Ww)return[];throw this.handleException(e,void 0,o)}}async getCommits(e,t,i,r,n){const s=(0,re.UH)();if(1===n?.limit&&null==n?.path)return this.getCommitsCoreSingle(e,t,i,r);try{const o="query getCommits(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String\n\t$author: CommitAuthor\n\t$after: String\n\t$before: String\n\t$limit: Int = 100\n\t$since: GitTimestamp\n\t$until: GitTimestamp\n) {\n\tviewer { name }\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: $limit, author: $author, path: $path, after: $after, before: $before, since: $since, until: $until) {\n\t\t\t\t\tpageInfo {\n\t\t\t\t\t\tstartCursor\n\t\t\t\t\t\tendCursor\n\t\t\t\t\t\thasNextPage\n\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t}\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t... on Commit {\n\t\t\t\t\t\t\toid\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\tchangedFiles\n\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommitter {\n\t\t\t\t\t\t\t\t date\n\t\t\t\t\t\t\t\t email\n\t\t\t\t\t\t\t\t name\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}";let a;if(null!=n?.authors)if(1===n.authors.length){const[e]=n.authors;a={id:e.id,emails:e.email?[e.email]:void 0}}else{const e=n.authors.filter((e=>e.email)).map((e=>e.email));a=e.length?{emails:e}:void 0}const l=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,after:n?.after,before:n?.before,path:n?.path,author:a,limit:Math.min(100,n?.limit??100),since:"string"==typeof n?.since?n?.since:n?.since?.toISOString(),until:"string"==typeof n?.until?n?.until:n?.until?.toISOString()},s),c=l?.repository?.object?.history;return null==c?ue:{paging:null!=c.pageInfo.endCursor?{cursor:c.pageInfo.endCursor??void 0,more:c.pageInfo.hasNextPage}:void 0,values:c.nodes,viewer:l?.viewer.name}}catch(e){if(e instanceof Y.Ww)return ue;throw this.handleException(e,void 0,s)}}async getCommitsCoreSingle(e,t,i,r){const n=(0,re.UH)();try{const s="query getCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\tviewer { name }\n\trepository(name: $repo owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t...on Commit {\n\t\t\t\toid\n\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\tmessage\n\t\t\t\tadditions\n\t\t\t\tchangedFiles\n\t\t\t\tdeletions\n\t\t\t\tauthor {\n\t\t\t\t\tavatarUrl\n\t\t\t\t\tdate\n\t\t\t\t\temail\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tcommitter {\n\t\t\t\t\tdate\n\t\t\t\t\temail\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,s,{owner:t,repo:i,ref:r},n);if(null==o)return ue;const a=o.repository?.object;return null!=a?{values:[a],viewer:o.viewer.name}:ue}catch(e){if(e instanceof Y.Ww)return ue;throw this.handleException(e,void 0,n)}}async getCommitRefs(e,t,i,r,n){const s=(0,re.UH)();try{const o="query getCommitRefs(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$after: String\n\t$before: String\n\t$first: Int\n\t$last: Int\n\t$path: String\n\t$since: GitTimestamp\n\t$until: GitTimestamp\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: $first, last: $last, path: $path, since: $since, until: $until, after: $after, before: $before) {\n\t\t\t\t\tpageInfo { startCursor, endCursor, hasNextPage, hasPreviousPage }\n\t\t\t\t\ttotalCount\n\t\t\t\t\tnodes { oid }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,path:n?.path,first:n?.first,last:n?.last,after:n?.after,before:n?.before,since:n?.since,until:n?.until},s),l=a?.repository?.object?.history;if(null==l)return;return{pageInfo:l.pageInfo,totalCount:l.totalCount,values:l.nodes}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,s)}}async getNextCommitRefs(e,t,i,r,n,s){const o=await this.getCommitDate(e,t,i,s);if(null==o)return[];let a=await this.getCommitRefs(e,t,i,r,{path:n,first:1,since:o});if(null==a)return[];const l=`${a.pageInfo.startCursor.split(" ",1)[0]} ${a.totalCount}`;let c;if([,c]=l.split(" ",2),c=Math.min(parseInt(c,10),5),a=await this.getCommitRefs(e,t,i,r,{path:n,last:c,before:l}),null==a)return[];const h=[];for(const{oid:e}of a.values){if(e===s)break;h.push(e)}return h.reverse()}async getCommitDate(e,t,i,r){const n=(0,re.UH)();try{const s="query getCommitDate(\n\t$owner: String!\n\t$repo: String!\n\t$sha: GitObjectID!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $sha) {\n\t\t\t... on Commit { committer { date } }\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,s,{owner:t,repo:i,sha:r},n),a=o?.repository?.object?.committer.date;return a}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async getContributors(e,t,i){const r=(0,re.UH)();try{const n=await this.request(void 0,e,"GET /repos/{owner}/{repo}/contributors",{owner:t,repo:i,per_page:100},r),s=n?.data;return null==s?[]:n.data}catch(e){if(e instanceof Y.Ww)return[];throw this.handleException(e,void 0,r)}}async getDefaultBranchName(e,t,i){const r=(0,re.UH)();try{const n="query getDefaultBranch(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tdefaultBranchRef {\n\t\t\tname\n\t\t}\n\t}\n}",s=await this.graphql(void 0,e,n,{owner:t,repo:i},r);if(null==s)return;return s.repository?.defaultBranchRef?.name??void 0}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,r)}}async getCurrentUser(e,t,i){const r=(0,re.UH)();try{const n="query getCurrentUser(\n\t$owner: String!\n\t$repo: String!\n) {\n\tviewer { name, email, login, id }\n\trepository(owner: $owner, name: $repo) { viewerPermission }\n}",s=await this.graphql(void 0,e,n,{owner:t,repo:i},r);if(null==s)return;return{name:s.viewer?.name,email:s.viewer?.email,username:s.viewer?.login,id:s.viewer?.id}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,r)}}async getRepositoryVisibility(e,t,i){const r=(0,re.UH)();try{const n="query getRepositoryVisibility(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tvisibility\n\t}\n}",s=await this.graphql(void 0,e,n,{owner:t,repo:i},r);if(null==s?.repository?.visibility)return;return"PUBLIC"===s.repository.visibility?j.q4.Public:j.q4.Private}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,r)}}async getTags(e,t,i,r){const n=(0,re.UH)();try{const s='query getTags(\n\t$owner: String!\n\t$repo: String!\n\t$tagQuery: String\n\t$cursor: String\n\t$limit: Int = 100\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(query: $tagQuery, refPrefix: "refs/tags/", first: $limit, after: $cursor, orderBy: { field: TAG_COMMIT_DATE, direction: DESC }) {\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\toid\n\t\t\t\t\t...on Tag {\n\t\t\t\t\t\tmessage\n\t\t\t\t\t\ttagger { date }\n\t\t\t\t\t\ttarget {\n\t\t\t\t\t...on Commit {\n\t\t\t\t\t\t\t\toid\n\t\t\t\t\t\tauthoredDate\n\t\t\t\t\t\tcommittedDate\n\t\t\t\t\t\tmessage\n\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',o=await this.graphql(void 0,e,s,{owner:t,repo:i,tagQuery:r?.query,cursor:r?.cursor,limit:Math.min(100,r?.limit??100)},n);if(null==o)return ue;const a=o.repository?.refs;return null==a?ue:{paging:{cursor:a.pageInfo.endCursor,more:a.pageInfo.hasNextPage},values:a.nodes}}catch(e){if(e instanceof Y.Ww)return ue;throw this.handleException(e,void 0,n)}}async resolveReference(e,t,i,r,n){const s=(0,re.UH)();try{if(!n){const n="query resolveReference(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\toid\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,n,{owner:t,repo:i,ref:r},s);return o?.repository?.object?.oid??void 0}const o="query resolveReference(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: 1, path: $path) {\n\t\t\t\t\tnodes { oid }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,path:n},s);return a?.repository?.object?.history.nodes?.[0]?.oid??void 0}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,s)}}async searchCommits(e,t,i){const r=(0,re.UH)(),n=Math.min(100,i?.limit??100);let s,o,a;null!=i?.cursor?([s,o,a]=i.cursor.split(" ",3),s=parseInt(s,10),o=parseInt(o,10),a=parseInt(a,10)):(s=1,o=n,a=0);try{const n=await this.request(void 0,e,"GET /search/commits",{q:t,sort:i?.sort,order:i?.order,per_page:o,page:s},r),l=n?.data;if(null==l||0===l.items.length)return;const c=l.items.map((e=>({oid:e.sha,parents:{nodes:e.parents.map((e=>({oid:e.sha})))},message:e.commit.message,author:{avatarUrl:e.author?.avatar_url??void 0,date:e.commit.author?.date??e.commit.author?.date??(new Date).toString(),email:e.author?.email??e.commit.author?.email??void 0,name:e.author?.name??e.commit.author?.name??""},committer:{date:e.commit.committer?.date??e.committer?.date??(new Date).toString(),email:e.committer?.email??e.commit.committer?.email??void 0,name:e.committer?.name??e.commit.committer?.name??""}}))),h=a+l.items.length,u=l.incomplete_results||l.total_count>h;return{pageInfo:{startCursor:`${s} ${o} ${a}`,endCursor:u?`${s+1} ${o} ${h}`:void 0,hasPreviousPage:l.total_count>0&&s>1,hasNextPage:u},totalCount:l.total_count,values:c}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,r)}}async searchCommitShas(e,t,i){const r=(0,re.UH)(),n=Math.min(100,i?.limit??100);let s,o,a;null!=i?.cursor?([s,o,a]=i.cursor.split(" ",3),s=parseInt(s,10),o=parseInt(o,10),a=parseInt(a,10)):(s=1,o=n,a=0);try{const n=await this.request(void 0,e,"GET /search/commits",{q:t,sort:i?.sort,order:i?.order,per_page:o,page:s},r),l=n?.data;if(null==l||0===l.items.length)return;const c=a+l.items.length,h=l.incomplete_results||l.total_count>c;return{pageInfo:{startCursor:`${s} ${o} ${a}`,endCursor:h?`${s+1} ${o} ${c}`:void 0,hasPreviousPage:l.total_count>0&&s>1,hasNextPage:h},totalCount:l.total_count,values:l.items.map((e=>({sha:e.sha,authorDate:new Date(e.commit.author.date).getTime(),committerDate:new Date(e.commit.committer?.date??e.commit.author.date).getTime()})))}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,r)}}_enterpriseVersions=new Map;async getEnterpriseVersion(e,t,i){let r=this._enterpriseVersions.get(t);if(null!=r)return r;if(null===r)return;const n=(0,re.UH)();try{const s=await this.request(e,t,"GET /meta",i,n),o=s?.data?.installed_version;r=o?(0,oe.mL)(o):null}catch(e){r=null}return this._enterpriseVersions.set(t,r),r??void 0}_octokits=new Map;octokit(e,t){let i=this._octokits.get(e);if(null==i){let r;if(Q.$L){let t=function(e,t){if(null!=t.headers){const{"user-agent":e,...i}=t.headers;e&&(t.headers=i)}return(0,q.he)(e,t)};r=H.defaults({auth:`token ${e}`,request:{fetch:t}})}else r=H.defaults({auth:`token ${e}`,request:{agent:this.proxyAgent}});i=new r(t),this._octokits.set(e,i),(te.Yd.logLevel===ie.i.Debug||te.Yd.isDebugging)&&i.hook.wrap("request",(async(e,t)=>{const i=(0,ne.k)(`[GITHUB] ${t.method} ${t.url}`,{log:!1});try{return await e(t)}finally{let e;try{if("string"==typeof t.query){const i=/(^[^({\n]+)/.exec(t.query);e=` ${i?.[1].trim()??t.query}`}}catch{}i?.stop({message:e})}}))}return i}async graphql(e,t,i,r,n){try{return await(0,q.a_)(e?.getIgnoreSSLErrors()??!1,(()=>this.octokit(t).graphql(i,r)))}catch(i){if(i instanceof O){switch(i.errors?.[0]?.type){case"NOT_FOUND":throw new Y.Ww(i);case"FORBIDDEN":throw new Y._7("github",Y.Jx.Forbidden,i);case"RATE_LIMITED":{let e;const r=i.headers?.["x-ratelimit-reset"];throw null!=r&&(e=parseInt(r,10),Number.isNaN(e)&&(e=void 0)),new Y.yx(i,t,e)}}te.Yd.isDebugging&&V.window.showErrorMessage(`GitHub request failed: ${i.errors?.[0]?.message??i.message}`)}else i instanceof RequestError?this.handleRequestError(e,t,i,n):te.Yd.isDebugging&&V.window.showErrorMessage(`GitHub request failed: ${i.message}`);throw i}}async request(e,t,i,r,n){try{return await(0,q.a_)(e?.getIgnoreSSLErrors()??!1,(()=>this.octokit(t).request(i,r)))}catch(i){throw i instanceof RequestError?this.handleRequestError(e,t,i,n):te.Yd.isDebugging&&V.window.showErrorMessage(`GitHub request failed: ${i.message}`),i}}handleRequestError(e,t,i,r){switch(i.status){case 404:case 410:case 422:throw new Y.Ww(i);case 401:throw new Y._7("github",Y.Jx.Unauthorized,i);case 403:if(i.message.includes("rate limit")){let e;const r=i.response?.headers?.["x-ratelimit-reset"];throw null!=r&&(e=parseInt(r,10),Number.isNaN(e)&&(e=void 0)),new Y.yx(i,t,e)}throw new Y._7("github",Y.Jx.Forbidden,i);case 500:return te.Yd.error(i,r),void(null!=i.response&&(e?.trackRequestException(),(0,J.vF)(`${e?.name??"GitHub"} failed to respond and might be experiencing issues.${e?.custom?"":" Please visit the [GitHub status page](https://githubstatus.com) for more information."}`)));case 502:if(te.Yd.error(i,r),i.message.includes("timeout"))return e?.trackRequestException(),void(0,J.s$)(e?.name??"GitHub");break;default:if(i.status>=400&&i.status<500)throw new Y.Bn(i)}te.Yd.error(i,r),te.Yd.isDebugging&&V.window.showErrorMessage(`GitHub request failed: ${i.response?.errors?.[0]?.message??i.message}`)}handleException(e,t,i){return te.Yd.error(e,i),e instanceof Y._7&&this.showAuthenticationErrorMessage(e,t),e}async showAuthenticationErrorMessage(e,t){if(e.reason===Y.Jx.Unauthorized||e.reason===Y.Jx.Forbidden){const i="Reauthenticate";await V.window.showErrorMessage(`${e.message}. Would you like to try reauthenticating${e.reason===Y.Jx.Forbidden?" to provide additional access":""}?`,i)===i&&(await(t?.reauthenticate()),this._onDidReauthenticate.fire())}else V.window.showErrorMessage(e.message)}async createEnterpriseAvatarUrl(e,t,i,r,n){n=n??16;const s=await this.getEnterpriseVersion(e,t,{baseUrl:i});if((0,oe.L5)(s,">= 3.0.0")){let s;const o=(0,K.at)(r);null!=o&&V.Uri.parse(i).authority===o.authority&&(null!=o.userId?s=`${i}/enterprise/avatars/u/${encodeURIComponent(o.userId)}?s=${n}`:null!=o.login&&(s=`${i}/enterprise/avatars/${encodeURIComponent(o.login)}?s=${n}`)),null==s&&(s=`${i}/enterprise/avatars/u/e?email=${encodeURIComponent(r)}&s=${n}`);const a=await(0,q.a_)(e?.getIgnoreSSLErrors()??!1,(()=>(0,q.he)(s,{method:"GET",headers:{Authorization:`Bearer ${t}`}})));if(a.ok){const e=(0,se.US)(new Uint8Array(await a.arrayBuffer()));return`data:${a.headers.get("content-type")};base64,${e}`}}return`https://avatars.githubusercontent.com/u/e?email=${encodeURIComponent(r)}&s=${n}`}async searchMyPullRequests(e,t,i){const r=(0,re.UH)();try{let n=function(t,i){return{pullRequest:(0,ae.fromGitHubPullRequestDetailed)(t,e),reasons:i?[i]:[]}};const s=`query searchPullRequests(\n\t$authored: String!\n\t$assigned: String!\n\t$reviewRequested: String!\n\t$mentioned: String!\n) {\n\tauthored: search(first: 100, query: $authored, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n\tassigned: search(first: 100, query: $assigned, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n\treviewRequested: search(first: 100, query: $reviewRequested, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n\tmentioned: search(first: 100, query: $mentioned, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n}`;let o=i?.search?.trim()??"";if(i?.user&&(o+=` user:${i.user}`),null!=i?.repos&&i.repos.length>0){const e="  repo:";o+=`${e}${i.repos.join(e)}`}const a="is:pr is:open archived:false",l=await this.graphql(e,t,s,{authored:`${o} ${a} author:@me`.trim(),assigned:`${o} ${a} assignee:@me`.trim(),reviewRequested:`${o} ${a} review-requested:@me`.trim(),mentioned:`${o} ${a} mentions:@me`.trim(),baseUrl:i?.baseUrl},r);if(void 0===l)return[];return fe([...l.assigned.nodes.map((e=>n(e,"assigned"))),...l.reviewRequested.nodes.map((e=>n(e,"review-requested"))),...l.mentioned.nodes.map((e=>n(e,"mentioned"))),...l.authored.nodes.map((e=>n(e,"authored")))],(e=>e.pullRequest.url))}catch(t){throw this.handleException(t,e,r)}}async searchMyIssues(e,t,i){const r=(0,re.UH)(),n=`query searchIssues(\n\t\t\t\t$authored: String!\n\t\t\t\t$assigned: String!\n\t\t\t\t$mentioned: String!\n\t\t\t) {\n\t\t\t\tauthored: search(first: 100, query: $authored, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${me}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassigned: search(first: 100, query: $assigned, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${me}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmentioned: search(first: 100, query: $mentioned, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${me}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}`;let s=i?.search?.trim()??"";if(i?.user&&(s+=` user:${i.user}`),null!=i?.repos&&i.repos.length>0){const e="  repo:";s+=`${e}${i.repos.join(e)}`}const o="type:issue is:open archived:false";try{let a=function(t,i){return{issue:(0,ae.fromGitHubIssueDetailed)(t,e),reasons:i?[i]:[]}};const l=await this.graphql(e,t,n,{authored:`${s} ${o} author:@me`.trim(),assigned:`${s} ${o} assignee:@me`.trim(),mentioned:`${s} ${o} mentions:@me`.trim(),baseUrl:i?.baseUrl},r);if(void 0===l)return[];return fe([...l.assigned.nodes.map((e=>a(e,"assigned"))),...l.mentioned.nodes.map((e=>a(e,"mentioned"))),...l.authored.nodes.map((e=>a(e,"authored")))],(e=>e.issue.url))}catch(t){throw this.handleException(t,e,r)}}}function ge(e){return null==e?.baseUrl||"https://api.github.com"===e.baseUrl}function fe(e,t){return(0,X.uw)(e,t,((e,t)=>(0!==t.reasons.length&&e.reasons.push(...t.reasons),e)))}he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getAccountForCommit",1),he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getAccountForEmail",1),he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getDefaultBranch",1),he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getIssueOrPullRequest",1),he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getPullRequestForBranch",1),he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getPullRequestForCommit",1),he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getRepositoryMetadata",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getBlame",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getBranches",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommit",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitForFile",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitBranches",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitCount",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitOnBranch",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommits",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitRefs",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getNextCommitRefs",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getContributors",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getDefaultBranchName",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCurrentUser",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getRepositoryVisibility",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getTags",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"resolveReference",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchCommits",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchCommitShas",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getEnterpriseVersion",1),he([(0,ee.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"searchMyPullRequests",1),he([(0,ee.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchMyIssues",1)},3878:(e,t,i)=>{i.r(t),i.d(t,{fromCommitFileStatus:()=>g,fromGitHubIssueDetailed:()=>m,fromGitHubPullRequest:()=>o,fromGitHubPullRequestDetailed:()=>p,fromGitHubPullRequestMergeableState:()=>u,fromGitHubPullRequestReviewDecision:()=>c,fromGitHubPullRequestState:()=>a,toGitHubPullRequestMergeableState:()=>d,toGitHubPullRequestReviewDecision:()=>h,toGitHubPullRequestState:()=>l});var r=i(7881),n=i(8452),s=i(4092);function o(e,t){return new s.i7(t,{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},String(e.number),e.title,e.permalink,a(e.state),new Date(e.updatedAt),null==e.closedAt?void 0:new Date(e.closedAt),null==e.mergedAt?void 0:new Date(e.mergedAt))}function a(e){return"MERGED"===e?s.o0.Merged:"CLOSED"===e?s.o0.Closed:s.o0.Open}function l(e){return e===s.o0.Merged?"MERGED":e===s.o0.Closed?"CLOSED":"OPEN"}function c(e){switch(e){case"APPROVED":return s.pD.Approved;case"CHANGES_REQUESTED":return s.pD.ChangesRequested;case"REVIEW_REQUIRED":return s.pD.ReviewRequired}}function h(e){switch(e){case s.pD.Approved:return"APPROVED";case s.pD.ChangesRequested:return"CHANGES_REQUESTED";case s.pD.ReviewRequired:return"REVIEW_REQUIRED"}}function u(e){switch(e){case"MERGEABLE":return s.Cz.Mergeable;case"CONFLICTING":return s.Cz.Conflicting;case"UNKNOWN":return s.Cz.Unknown}}function d(e){switch(e){case s.Cz.Mergeable:return"MERGEABLE";case s.Cz.Conflicting:return"CONFLICTING";case s.Cz.Unknown:return"UNKNOWN"}}function p(e,t){return new s.i7(t,{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},String(e.number),e.title,e.permalink,a(e.state),new Date(e.updatedAt),null==e.closedAt?void 0:new Date(e.closedAt),null==e.mergedAt?void 0:new Date(e.mergedAt),u(e.mergeable),{head:{exists:null!=e.headRepository,owner:e.headRepository?.owner.login,repo:e.baseRepository?.name,sha:e.headRefOid,branch:e.headRefName,url:e.headRepository?.url},base:{exists:null!=e.baseRepository,owner:e.baseRepository?.owner.login,repo:e.baseRepository?.name,sha:e.baseRefOid,branch:e.baseRefName,url:e.baseRepository?.url},isCrossRepository:e.isCrossRepository},e.isDraft,e.additions,e.deletions,e.totalCommentsCount,c(e.reviewDecision),e.reviewRequests.nodes.map((e=>({isCodeOwner:e.asCodeOwner,reviewer:{name:e.requestedReviewer.login,avatarUrl:e.requestedReviewer.avatarUrl,url:e.requestedReviewer.url}}))),e.assignees.nodes.map((e=>({name:e.login,avatarUrl:e.avatarUrl,url:e.url}))))}function m(e,t){return new n.$9({id:t.id,name:t.name,domain:t.domain,icon:t.icon},String(e.number),e.title,e.url,new Date(e.createdAt),e.closed,new Date(e.updatedAt),{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},{owner:e.repository.owner.login,repo:e.repository.name},e.assignees.nodes.map((e=>({name:e.name,avatarUrl:e.avatarUrl,url:e.url}))),null==e.closedAt?void 0:new Date(e.closedAt),null==e.labels?.nodes?void 0:e.labels.nodes.map((e=>({color:e.color,name:e.name}))),e.comments?.totalCount,e.reactions?.totalCount)}function g(e){switch(e){case"added":return r.NV.Added;case"changed":case"modified":return r.NV.Modified;case"removed":return r.NV.Deleted;case"renamed":return r.NV.Renamed;case"copied":return r.NV.Copied}}},1848:(e,t,i)=>{i.r(t),i.d(t,{GitLabApi:()=>GitLabApi});var r=i(9496),n=i(9827),s=i(429),o=i(4575),a=i(8452),l=i(4092),c=i(7925),h=i(5148),u=i(4241),d=i(4336),p=i(6004),m=i(6398),g=i(3620),f=i(6630),w=Object.defineProperty,v=Object.getOwnPropertyDescriptor,y=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?v(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&w(t,i,s),s};class GitLabApi{_disposable;_projectIds=new Map;constructor(e){this._disposable=h.D.onDidChangeAny((e=>{(h.D.changedAny(e,["http.proxy","http.proxyStrictSSL"])||h.D.changed(e,["proxy","remotes"]))&&this.resetCaches()}))}dispose(){this._disposable.dispose()}resetCaches(){this._projectIds.clear(),this._proxyAgents.clear()}_proxyAgents=new Map;getProxyAgent(e){if(s.$L)return;let t=this._proxyAgents.get(e.id);if(void 0===t){const i=e.getIgnoreSSLErrors();t=(0,n.Nx)(!0!==i&&"force"!==i&&void 0),this._proxyAgents.set(e.id,t??null)}return t??void 0}async getAccountForCommit(e,t,i,n,s,a){const l=(0,p.UH)(),c=await this.getProjectId(e,t,i,n,a?.baseUrl);if(c)try{const i=await this.request(e,t,a?.baseUrl,`v4/projects/${c}/repository/commits/${s}?stats=false`,{method:"GET"},l);let n;const o=await this.findUser(e,t,i.author_name,a);for(const e of o)if(e.name===i.author_name||e.publicEmail&&e.publicEmail===i.author_email){if(n=e,"active"===e.state)break}else((0,g.qq)(e.name,i.author_name)||e.publicEmail&&(0,g.qq)(e.publicEmail,i.author_email))&&(n=e);if(null==n)return;return n.avatarUrl&&!/^([a-zA-Z][\w+.-]+):/.test(n.avatarUrl)&&(n.avatarUrl=r.Uri.joinPath(r.Uri.parse(n.webUrl),"..",n.avatarUrl).toString()),{provider:e,name:n.name||void 0,email:i.author_email||void 0,avatarUrl:n.avatarUrl||void 0}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,l)}}async getAccountForEmail(e,t,i,r,n,s){const a=(0,p.UH)();try{const[i]=await this.findUser(e,t,n,s);if(null==i)return;return{provider:e,name:i.name||void 0,email:i.publicEmail||void 0,avatarUrl:i.avatarUrl||void 0}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,a)}}async getDefaultBranch(e,t,i,r,n){const s=(0,p.UH)();try{const o="query getDefaultBranch(\n\t$fullPath: ID!\n) {\n\tproject(fullPath: $fullPath) {\n\t\trepository {\n\t\t\trootRef\n\t\t}\n}",a=await this.graphql(e,t,n?.baseUrl,o,{fullPath:`${i}/${r}`},s),l=a?.data?.project?.repository?.rootRef??void 0;if(null==l)return;return{provider:e,name:l}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,s)}}async getIssueOrPullRequest(e,t,i,r,n,s){const l=(0,p.UH)();try{const o="query getIssueOrMergeRequest(\n\t$fullPath: ID!\n\t$iid: String!\n) {\n\tproject(fullPath: $fullPath) {\n\t\tmergeRequest(iid: $iid) {\n\t\t\tauthor {\n\t\t\t\tname\n\t\t\t\tavatarUrl\n\t\t\t\twebUrl\n\t\t\t}\n\t\t\tiid\n\t\t\ttitle\n\t\t\tdescription\n\t\t\tstate\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tmergedAt\n\t\t\twebUrl\n\t\t}\n\t\tissue(iid: $iid) {\n\t\t\tauthor {\n\t\t\t\tname\n\t\t\t\tavatarUrl\n\t\t\t\twebUrl\n\t\t\t}\n\t\t\tiid\n\t\t\ttitle\n\t\t\tdescription\n\t\t\tstate\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tclosedAt\n\t\t\twebUrl\n\t\t}\n\t}\n}",c=await this.graphql(e,t,s?.baseUrl,o,{fullPath:`${i}/${r}`,iid:String(n)},l);if(null!=c?.data?.project?.issue){const t=c.data.project.issue;return{provider:e,type:a.mX.Issue,id:t.iid,date:new Date(t.createdAt),title:t.title,closed:"closed"===t.state,closedDate:null==t.closedAt?void 0:new Date(t.closedAt),url:t.webUrl}}if(null!=c?.data?.project?.mergeRequest){const t=c.data.project.mergeRequest;return{provider:e,type:a.mX.PullRequest,id:t.iid,date:new Date(t.createdAt),title:t.title,closed:"closed"===t.state,closedDate:"closed"===t.state?new Date(t.updatedAt):void 0,url:t.webUrl}}return}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,l)}}async getPullRequestForBranch(e,t,i,r,n,s){const a=(0,p.UH)();try{const o="\n\t\t\tnodes {\n\t\t\t\tiid\n\t\t\t\tauthor {\n\t\t\t\t\tname\n\t\t\t\t\tavatarUrl\n\t\t\t\t\twebUrl\n\t\t\t\t}\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tstate\n\t\t\t\tcreatedAt\n\t\t\t\tupdatedAt\n\t\t\t\tmergedAt\n\t\t\t\twebUrl\n\t\t\t}",c=`query getMergeRequestForBranch(\n\t$fullPath: ID!\n\t$branches: [String!]\n) {\n\tproject(fullPath: $fullPath) {\n\t\t${null==s?.include?`mergeRequests(sourceBranches: $branches sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t\t${s?.include?.includes(f.GitLabMergeRequestState.OPEN)?`opened: mergeRequests(sourceBranches: $branches state: opened sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t\t${s?.include?.includes(f.GitLabMergeRequestState.MERGED)?`merged: mergeRequests(sourceBranches: $branches state: merged sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t\t${s?.include?.includes(f.GitLabMergeRequestState.CLOSED)?`closed: mergeRequests(sourceBranches: $branches state: closed sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t}\n}`,h=await this.graphql(e,t,s?.baseUrl,c,{fullPath:`${i}/${r}`,branches:[n],state:s?.include},a);let u;if(null==s?.include)u=h?.data?.project?.mergeRequests?.nodes?.[0];else for(const e of s.include){let t;e===f.GitLabMergeRequestState.OPEN?t=h?.data?.project?.opened?.nodes?.[0]:e===f.GitLabMergeRequestState.MERGED?t=h?.data?.project?.merged?.nodes?.[0]:e===f.GitLabMergeRequestState.CLOSED&&(t=h?.data?.project?.closed?.nodes?.[0]),null!=t&&(null==u||new Date(t.updatedAt)>new Date(u.updatedAt))&&(u=t)}if(null==u)return;return new l.i7(e,{name:u.author?.name??"Unknown",avatarUrl:u.author?.avatarUrl??"",url:u.author?.webUrl??""},String(u.iid),u.title,u.webUrl,(0,f.fromGitLabMergeRequestState)(u.state),new Date(u.updatedAt),u.state!==f.GitLabMergeRequestState.CLOSED?void 0:new Date(u.updatedAt),null==u.mergedAt?void 0:new Date(u.mergedAt))}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,a)}}async getPullRequestForCommit(e,t,i,r,n,s){const a=(0,p.UH)(),l=await this.getProjectId(e,t,i,r,s?.baseUrl);if(l)try{const i=await this.request(e,t,s?.baseUrl,`v4/projects/${l}/repository/commits/${n}/merge_requests`,{method:"GET"},a);if(null==i||0===i.length)return;return i.length>1&&i.sort(((e,t)=>(e.state===f.GitLabMergeRequestState.OPEN?-1:1)-(t.state===f.GitLabMergeRequestState.OPEN?-1:1)||new Date(t.updated_at).getTime()-new Date(e.updated_at).getTime())),(0,f.fromGitLabMergeRequestREST)(i[0],e)}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,a)}}async getRepositoryMetadata(e,t,i,r,n){const s=(0,p.UH)(),a=await this.getProjectId(e,t,i,r,n?.baseUrl);if(a)try{const i=await this.request(e,t,n?.baseUrl,`v4/projects/${a}`,{method:"GET"},s);if(null==i)return;return{provider:e,owner:i.namespace.full_path,name:i.path,isFork:null!=i.forked_from_project,parent:null!=i.forked_from_project?{owner:i.forked_from_project.namespace.full_path,name:i.forked_from_project.path}:void 0}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,s)}}async findUser(e,t,i,r){const n=(0,p.UH)();try{const s="query findUser(\n$search: String!\n) {\n\tusers(search: $search) {\n\t\tnodes {\n\t\t\tid\n\t\t\tname\n\t\t\tusername,\n\t\t\tpublicEmail,\n\t\t\tstate\n\t\t\tavatarUrl\n\t\t\twebUrl\n\t\t}\n\t}\n}",o=await this.graphql(e,t,r?.baseUrl,s,{search:i},n),a=o?.data?.users?.nodes;if(null==a||0===a.length)return[];const l=[];for(const e of a){const t=/gid:\/\/gitlab\/User\/([0-9]+)\b/.exec(e.id);null!=t&&l.push({id:parseInt(t[1],10),name:e.name,username:e.username,publicEmail:e.publicEmail||void 0,state:e.state,avatarUrl:e.avatarUrl,webUrl:e.webUrl})}return l}catch(t){return t instanceof o.Ww||this.handleException(t,e,n),[]}}getProjectId(e,t,i,r,n){const s=`${t}|${i}/${r}`;let o=this._projectIds.get(s);return null==o&&(o=this.getProjectIdCore(e,t,i,r,n),this._projectIds.set(s,o)),o}async getProjectIdCore(e,t,i,r,n){const s=(0,p.UH)();try{const o="query getProjectId(\n\t$fullPath: ID!\n) {\n\tproject(fullPath: $fullPath) {\n\t\tid\n\t}\n}",a=await this.graphql(e,t,n,o,{fullPath:`${i}/${r}`},s),l=a?.data?.project?.id;if(null==l)return;const c=/gid:\/\/gitlab\/Project\/([0-9]+)\b/.exec(l);if(null==c)return;const h=c[1];return(0,p.lH)(s,` • projectId=${h}`),h}catch(t){if(t instanceof o.Ww)return;return void this.handleException(t,e,s)}}async graphql(e,t,i,s,a,l){let c;try{const r=(0,m.k)(`[GITLAB] POST ${i}`,{log:!1}),l=this.getProxyAgent(e);try{if(c=await(0,n.a_)(e.getIgnoreSSLErrors(),(()=>(0,n.he)(`${i??"https://gitlab.com/api"}/graphql`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},agent:l,body:JSON.stringify({query:s,variables:a})}))),c.ok){const e=await c.json();if("errors"in e)throw new o.Xq("GitLab",c,e.errors);return e}throw new o.Xq("GitLab",c)}finally{const e=/(^[^({\n]+)/.exec(s),t=` ${e?.[1].trim()??s}`;r?.stop({message:t})}}catch(i){throw i instanceof o.Xq?this.handleRequestError(e,t,i,l):d.Yd.isDebugging&&r.window.showErrorMessage(`GitLab request failed: ${i.message}`),i}}async request(e,t,i,s,a,l){const c=`${i??"https://gitlab.com/api"}/${s}`;let h;try{const i=(0,m.k)(`[GITLAB] ${a?.method??"GET"} ${c}`,{log:!1}),r=this.getProxyAgent(e);try{if(h=await(0,n.a_)(e.getIgnoreSSLErrors(),(()=>(0,n.he)(c,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},agent:r,...a}))),h.ok){return await h.json()}throw new o.Xq("GitLab",h)}finally{i?.stop()}}catch(i){throw i instanceof o.Xq?this.handleRequestError(e,t,i,l):d.Yd.isDebugging&&r.window.showErrorMessage(`GitLab request failed: ${i.message}`),i}}handleRequestError(e,t,i,n){switch(i.status){case 404:case 410:case 422:throw new o.Ww(i);case 401:throw new o._7("gitlab",o.Jx.Unauthorized,i);case 403:if(i.message.includes("rate limit exceeded")){let e;const r=i.response?.headers?.get("x-ratelimit-reset");throw null!=r&&(e=parseInt(r,10),Number.isNaN(e)&&(e=void 0)),new o.yx(i,t,e)}throw new o._7("gitlab",o.Jx.Forbidden,i);case 500:return d.Yd.error(i,n),void(null!=i.response&&(e?.trackRequestException(),(0,c.vF)(`${e?.name??"GitLab"} failed to respond and might be experiencing issues.${e?.custom?"":" Please visit the [GitLab status page](https://status.gitlab.com) for more information."}`)));case 502:if(d.Yd.error(i,n),i.message.includes("timeout"))return e?.trackRequestException(),void(0,c.s$)(e?.name??"GitLab");break;default:if(i.status>=400&&i.status<500)throw new o.Bn(i)}d.Yd.error(i,n),d.Yd.isDebugging&&r.window.showErrorMessage(`GitLab request failed: ${i.response?.errors?.[0]?.message??i.message}`)}handleException(e,t,i){return d.Yd.error(e,i),e instanceof o._7&&this.showAuthenticationErrorMessage(e,t),e}async showAuthenticationErrorMessage(e,t){if(e.reason===o.Jx.Unauthorized||e.reason===o.Jx.Forbidden){const i="Reauthenticate";await r.window.showErrorMessage(`${e.message}. Would you like to try reauthenticating${e.reason===o.Jx.Forbidden?" to provide additional access":""}?`,i)===i&&await t.reauthenticate()}else r.window.showErrorMessage(e.message)}}y([(0,u.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getAccountForCommit",1),y([(0,u.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getAccountForEmail",1),y([(0,u.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getDefaultBranch",1),y([(0,u.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getIssueOrPullRequest",1),y([(0,u.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getPullRequestForBranch",1),y([(0,u.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getPullRequestForCommit",1),y([(0,u.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getRepositoryMetadata",1)},6630:(e,t,i)=>{i.r(t),i.d(t,{GitLabMergeRequestState:()=>n,fromGitLabMergeRequestREST:()=>a,fromGitLabMergeRequestState:()=>s,toGitLabMergeRequestState:()=>o});var r=i(4092),n=(e=>(e.OPEN="opened",e.CLOSED="closed",e.MERGED="merged",e.LOCKED="locked",e))(n||{});function s(e){return"merged"===e?r.o0.Merged:"closed"===e||"locked"===e?r.o0.Closed:r.o0.Open}function o(e){return e===r.o0.Merged?"merged":e===r.o0.Closed?"closed":"opened"}function a(e,t){return new r.i7(t,{name:e.author?.name??"Unknown",avatarUrl:e.author?.avatar_url??"",url:e.author?.web_url??""},String(e.iid),e.title,e.web_url,s(e.state),new Date(e.updated_at),null==e.closed_at?void 0:new Date(e.closed_at),null==e.merged_at?void 0:new Date(e.merged_at))}},2215:(e,t,i)=>{i.d(t,{C:()=>a,L:()=>o});var r=i(9496),n=i(5148),s=i(2061);function o(){return(0,s.fw)("gitlens:plus:enabled",n.D.get("plusFeatures.enabled",void 0,!0))}async function a(){if(o())return!0;const e={title:"Enable"};return await r.window.showInformationMessage("Pro features are currently disabled. Would you like to enable them?",{modal:!0},e,{title:"Cancel",isCloseAffordance:!0})===e&&(await n.D.updateEffective("plusFeatures.enabled",!0),!0)}},420:(e,t,i)=>{i.d(t,{AccountWebviewProvider:()=>AccountWebviewProvider});var r=i(9496),n=i(8388),s=i(9529),o=i(9796);const a=new(i(5798).jH)("subscription/didChange");class AccountWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this))}_disposable;dispose(){this._disposable.dispose()}onSubscriptionChanged(e){this.notifyDidChangeSubscription(e.current)}registerCommands(){return[(0,s.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)),this)]}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChangeSubscription()}onVisibilityChanged(e){e?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}onWindowFocusChanged(e){e&&this.host.visible?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}async getRepoVisibility(){return await this.container.git.visibility()}async getSubscription(e){const t=e??await this.container.subscription.getSubscription(!0);let i;return i=t.account?.email?(0,n.GV)(t.account.email,34).toString():`${this.host.getWebRoot()??""}/media/gitlens-logo.webp`,{subscription:t,avatar:i}}async getState(e){const t=await this.getSubscription(e);return{webviewId:this.host.id,timestamp:Date.now(),webroot:this.host.getWebRoot(),subscription:t.subscription,avatar:t.avatar}}notifyDidChangeSubscription(e){return r.window.withProgress({location:{viewId:this.host.id}},(async()=>{const t=await this.getSubscription(e);return this.host.notify(a,{...t})}))}_validateSubscriptionDebounced=void 0;async validateSubscription(){null==this._validateSubscriptionDebounced&&(this._validateSubscriptionDebounced=(0,o.Ds)(this.validateSubscriptionCore,1e3)),await this._validateSubscriptionDebounced()}_validating;async validateSubscriptionCore(){if(null==this._validating){this._validating=this.container.subscription.validate();try{await this._validating}finally{this._validating=void 0}}}}},1629:(e,t,i)=>{i.d(t,{FocusWebviewProvider:()=>FocusWebviewProvider});var r=i(9496),n=i(5255),s=i(8887),o=i(4155),a=i(8834),l=i(5367),c=i(8452),h=i(4092),u=i(4321),d=i(3646),p=i(2674),m=i(4794),g=i(9529),f=i(7469),w=i(5798);const v=new w.ke("focus/pr/openWorktree"),y=new w.ke("focus/pr/openBranch"),b=new w.ke("focus/pr/switchToBranch"),C=new w.jH("focus/didChange",!0);class FocusWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepositories((()=>{this.host.refresh(!0)})))}_pullRequests=[];_issues=[];_disposable;_etagSubscription;_repositoryEventsDisposable;_repos;dispose(){this._disposable.dispose()}registerCommands(){return[(0,g.xR)(n.Gh.RefreshFocus,(()=>this.host.refresh(!0)))]}onMessageReceived(e){switch(e.method){case y.method:(0,w.mq)(y,e,(e=>this.onOpenBranch(e)));break;case b.method:(0,w.mq)(b,e,(e=>this.onSwitchBranch(e)));break;case v.method:(0,w.mq)(v,e,(e=>this.onOpenWorktree(e)))}}findSearchedPullRequest(e){return this._pullRequests?.find((t=>t.pullRequest.id===e.id))}async getRemoteBranch(e){const t=e.pullRequest,i=e.repoAndRemote,n=i.repo.uri,s=await i.repo.getMainRepository();if(null==s)return void r.window.showWarningMessage(`Unable to find main repository(${n.toString()}) for PR #${t.id}`);const a=t.refs.base.owner,l=r.Uri.parse(t.refs.base.url),c=t.refs.head.branch,h=r.Uri.parse(t.refs.head.url),d=h.toString(),[,p,g]=(0,m.Sk)(d);let f,w;if([f]=await s.getRemotes({filter:e=>e.matches(p,g)}),null!=f)w=`${f.name}/${c}`,await this.container.git.fetch(s.path,{remote:f.name});else{const e=await r.window.showInformationMessage(`Unable to find a remote for '${d}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});if("Yes"!==e?.title)return;const i=t.refs.head.owner;if(await(0,o.IH)(s,i,d,{confirm:!1,fetch:!0,reveal:!1}),[f]=await s.getRemotes({filter:e=>e.url===d}),null==f)return;w=`${f.name}/${c}`;const n=t.refs.base.repo,u=`pr/${l.toString()===h.toString()?c:w}`;this.container.git.setConfig(s.path,`branch.${u}.github-pr-owner-number`,`${a}#${n}#${t.id}`)}return{remote:f,reference:(0,u.xB)(w,s.path,{refType:"branch",name:w,remote:!0})}}async onOpenBranch({pullRequest:e}){const t=this.findSearchedPullRequest(e);if(null==t)return;const i=await this.getRemoteBranch(t);null!=i?(0,g.P0)(n.Gh.ShowInCommitGraph,{ref:i.reference}):r.window.showErrorMessage(`Unable to find remote branch for '${t.pullRequest.refs?.head.owner}:${t.pullRequest.refs?.head.branch}'`)}async onSwitchBranch({pullRequest:e}){const t=this.findSearchedPullRequest(e);if(null==t||t.isCurrentBranch)return;if(null!=t.branch)return a.gu(t.branch.repoPath,t.branch);const i=await this.getRemoteBranch(t);if(null!=i)return a.gu(i.remote.repoPath,i.reference);r.window.showErrorMessage(`Unable to find remote branch for '${t.pullRequest.refs?.head.owner}:${t.pullRequest.refs?.head.branch}'`)}async onOpenWorktree({pullRequest:e}){const t=this.findSearchedPullRequest(e);if(null==t?.repoAndRemote)return;const i=r.Uri.parse(e.refs.base.url),s=t.repoAndRemote.repo.uri;return(0,g.P0)(n.Gh.OpenOrCreateWorktreeForGHPR,{base:{repositoryCloneUrl:{repositoryName:e.refs.base.repo,owner:e.refs.base.owner,url:i}},githubRepository:{rootUri:s},head:{ref:e.refs.head.branch,sha:e.refs.head.sha,repositoryCloneUrl:{repositoryName:e.refs.head.repo,owner:e.refs.head.owner,url:r.Uri.parse(e.refs.head.url)}},item:{number:parseInt(e.id,10)}})}onSubscriptionChanged(e){e.etag!==this._etagSubscription&&(this._etagSubscription=e.etag,this.notifyDidChangeState(!0))}async getState(e){const t=this.host.id,i=await this.container.git.access(s.x.Focus);if(!0!==i.allowed)return{webviewId:t,timestamp:Date.now(),access:i};const r=await this.getRichRepos(),n=r.filter((e=>e.isGitHub));const o=function(e){return e.filter((e=>e.isConnected&&e.isGitHub))}(n);if(!(o.length>0))return{webviewId:t,timestamp:Date.now(),access:i,repos:n.map((e=>A(e)))};const a=o.map((e=>A(e))),l=Promise.allSettled([this.getMyPullRequests(o),this.getMyIssues(o)]);async function u(){const[e,r]=await l;return{webviewId:t,timestamp:Date.now(),access:i,repos:a,pullRequests:(0,f.Sb)(e)?.map((e=>({pullRequest:(0,h.l1)(e.pullRequest),reasons:e.reasons,isCurrentBranch:e.isCurrentBranch??!1,isCurrentWorktree:e.isCurrentWorktree??!1,hasWorktree:e.hasWorktree??!1,hasLocalBranch:e.hasLocalBranch??!1}))),issues:(0,f.Sb)(r)?.map((e=>({issue:(0,c.y$)(e.issue),reasons:e.reasons})))}}if(e)return queueMicrotask((async()=>{const e=await u();this.host.notify(C,{state:e})})),{webviewId:t,timestamp:Date.now(),access:i,repos:a};return await u()}async includeBootstrap(){return this.getState(!0)}async getRichRepos(e){if(null==this._repos||!0===e){const e=[],t=[];for(const i of this.container.git.openRepositories){const r=await i.getRichRemote();null==r||e.findIndex((e=>e.remote===r))>-1||(t.push(i.onDidChange(this.onRepositoryChanged,this)),e.push({repo:i,remote:r,isConnected:await r.provider.isConnected(),isGitHub:"github"===r.provider.id}))}this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0),this._repositoryEventsDisposable=r.Disposable.from(...t),this._repos=e}return this._repos}async onRepositoryChanged(e){e.changed(d.I6.RemoteProviders,d.du.Any)&&(await this.getRichRepos(!0),this.notifyDidChangeState())}async getMyPullRequests(e){const t=[];for(const i of e){const e=i.remote,r=await this.container.git.getMyPullRequests(e);if(null!=r)for(const e of r){if(0===e.reasons.length)continue;const r={...e,repoAndRemote:i,isCurrentWorktree:!1,isCurrentBranch:!1},n=`${r.pullRequest.refs.head.owner}/${r.pullRequest.refs.head.branch}`,s=await(0,p.K)(r.repoAndRemote.repo,r.pullRequest.refs.head.branch,n);r.hasWorktree=null!=s,r.isCurrentWorktree=!0===s?.opened;const o=await(0,l.eK)(i.repo,n);o&&(r.branch=o,r.hasLocalBranch=!0,r.isCurrentBranch=o.current),t.push(r)}}function i(e){let t=0;return e.reasons.includes("authored")?t+=1e3:e.reasons.includes("assigned")?t+=900:e.reasons.includes("review-requested")?t+=800:e.reasons.includes("mentioned")&&(t+=700),e.pullRequest.reviewDecision===h.pD.Approved?e.pullRequest.mergeableState===h.Cz.Mergeable?t+=100:e.pullRequest.mergeableState===h.Cz.Conflicting?t+=90:t+=80:e.pullRequest.reviewDecision===h.pD.ChangesRequested&&(t+=70),t}return this._pullRequests=t.sort(((e,t)=>{const r=i(e),n=i(t);return r===n?e.pullRequest.date.getTime()-t.pullRequest.date.getTime():(n??0)-(r??0)})),this._pullRequests}async getMyIssues(e){const t=[];for(const{remote:i}of e){const e=await this.container.git.getMyIssues(i);null!=e&&t.push(...e.filter((e=>e.reasons.length>0)))}return this._issues=t.sort(((e,t)=>t.issue.updatedDate.getTime()-e.issue.updatedDate.getTime())),this._issues}async notifyDidChangeState(e){this.host.notify(C,{state:await this.getState(e)})}}function A(e){return{repo:e.repo.path,isGitHub:e.isGitHub,isConnected:e.isConnected}}},1302:(e,t,i)=>{i.d(t,{GraphWebviewProvider:()=>GraphWebviewProvider});var r=i(9496),n=i(8388),s=i(7139),o=i(5255),a=i(8887),l=i(3401),c=i(6897),h=i(7445),u=i(8834),d=i(252),p=i(6713),m=i(5025),g=i(6592),f=i(5367),w=i(439),v=i(1719),y=i(5069),b=i(4321),C=i(3050),A=i(6503),P=i(3646),S=i(6934),R=i(635),D=i(9529),k=i(5148),_=i(2061),T=i(5432),F=i(4241),O=i(9796),E=i(3105),$=i(9967),I=i(7469),x=i(2509),B=i(9701),W=i(6922),M=i(5798),L=i(620),U=(e=>(e.Upstream="upstream",e.PullRequest="pullRequest",e))(U||{});const N=Object.values(U),G=new M.ke("graph/chooseRepository"),H=new M.ke("graph/dimMergeCommits"),V=new M.ke("graph/dblclick"),q=new M.ke("graph/rows/ensure"),Q=new M.ke("graph/avatars/get"),Y=new M.ke("graph/refs/metadata/get"),j=new M.ke("graph/rows/get"),z=new M.ke("graph/search"),K=new M.ke("graph/search/openInView"),J=new M.ke("graph/columns/update"),X=new M.ke("graph/refs/update/visibility"),Z=new M.ke("graph/fitlers/update/excludeType"),ee=new M.ke("graph/configuration/update"),te=new M.ke("graph/fitlers/update/includeOnlyRefs"),ie=new M.ke("graph/selection/update"),re=new M.jH("graph/didChange",!0),ne=new M.jH("graph/configuration/didChange"),se=new M.jH("graph/subscription/didChange"),oe=new M.jH("graph/avatars/didChange"),ae=new M.jH("graph/refs/didChangeMetadata"),le=new M.jH("graph/columns/didChange"),ce=new M.jH("graph/scrollMarkers/didChange"),he=new M.jH("graph/focus/didChange"),ue=new M.jH("graph/window/focus/didChange"),de=new M.jH("graph/refs/didChangeVisibility"),pe=new M.jH("graph/rows/didChange"),me=new M.jH("graph/rows/stats/didChange"),ge=new M.jH("graph/selection/didChange"),fe=new M.jH("graph/workingTree/didChange"),we=new M.jH("graph/rows/didEnsure"),ve=new M.jH("graph/didSearch"),ye=new M.jH("graph/didFetch");var be=Object.defineProperty,Ce=Object.getOwnPropertyDescriptor,Ae=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?Ce(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&be(t,i,s),s};const Pe={ref:{width:130,isHidden:!1,order:0},graph:{width:150,mode:void 0,isHidden:!1,order:1},message:{width:300,isHidden:!1,order:2},author:{width:130,isHidden:!1,order:3},changes:{width:200,isHidden:!1,order:4},datetime:{width:130,isHidden:!1,order:5},sha:{width:130,isHidden:!1,order:6}},Se={ref:{width:32,isHidden:!1},graph:{width:150,mode:"compact",isHidden:!1},author:{width:32,isHidden:!1,order:2},message:{width:500,isHidden:!1,order:3},changes:{width:200,isHidden:!1,order:4},datetime:{width:130,isHidden:!0,order:5},sha:{width:130,isHidden:!1,order:6}};class GraphWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._showDetailsView=k.D.get("graph.showDetailsView"),this._theme=r.window.activeColorTheme,this.ensureRepositorySubscriptions(),this.host.isView()&&(this.host.description="✨"),this._disposable=r.Disposable.from(k.D.onDidChange(this.onConfigurationChanged,this),this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepositories((()=>{this.host.refresh(!0)})),r.window.onDidChangeActiveColorTheme(this.onThemeChanged,this),{dispose:()=>{null!=this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0)}})}_repository;get repository(){return this._repository}set repository(e){this._repository!==e?(this._repository=e,this.resetRepositoryState(),this.ensureRepositorySubscriptions(!0),this.host.ready&&this.updateState()):this.ensureRepositorySubscriptions()}_selection;get activeSelection(){return this._selection?.[0]}_disposable;_etagSubscription;_etagRepository;_firstSelection=!0;_graph;_ipcNotificationMap=new Map([[le,this.notifyDidChangeColumns],[ne,this.notifyDidChangeConfiguration],[re,this.notifyDidChangeState],[de,this.notifyDidChangeRefsVisibility],[ce,this.notifyDidChangeScrollMarkers],[ge,this.notifyDidChangeSelection],[se,this.notifyDidChangeSubscription],[fe,this.notifyDidChangeWorkingTree],[ue,this.notifyDidChangeWindowFocus],[ye,this.notifyDidFetch]]);_refsMetadata;_search;_searchCancellation;_selectedId;_selectedRows;_showDetailsView;_theme;_repositoryEventsDisposable;_lastFetchedDisposable;isWindowFocused=!0;dispose(){this._disposable.dispose()}async onShowing(e,t,...i){this._firstSelection=!0;const[r]=i;if((0,P.uC)(r))this.repository=r;else if(null!=(n=r)&&"object"==typeof n&&"ref"in n&&(0,b.Yn)(n.ref)){this.repository=this.container.git.getRepository(r.ref.repoPath);let e=r.ref.ref;if((0,b.D3)(e)||(e=await this.container.git.resolveReference(r.ref.repoPath,e,void 0,{force:!0})),this.setSelectedRows(e),null!=this._graph){if(this._graph?.ids.has(e))return this.notifyDidChangeSelection(),!0;this.onGetMoreRows({id:e},!0)}}else if((0,L.W)(r)&&null!=r.state.selectedRepository&&(this.repository=this.container.git.getRepository(r.state.selectedRepository)),null==this.repository&&this.container.git.repositoryCount>1){const[t]=(0,s.P)(o.Gh.ShowGraph,void 0,...i),r=Array.isArray(t)?t[0]:t;"scm"===r.type&&null!=r.scm.rootUri?this.repository=this.container.git.getRepository(r.scm.rootUri):"viewItem"===r.type&&r.node instanceof W.vb&&(this.repository=r.node.repo),null!=this.repository&&!e&&this.host.ready&&this.updateState()}var n;return!0}onRefresh(e){e&&this.resetRepositoryState()}includeBootstrap(){return this.getState(!0)}registerCommands(){return[(0,D.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0))),...this.host.isView()?[(0,D.xR)(`${this.host.id}.openInTab`,(()=>{(0,D.P0)(o.Gh.ShowGraphPage,this.repository)}))]:[],this.host.registerWebviewCommand("gitlens.graph.push",this.push),this.host.registerWebviewCommand("gitlens.graph.pull",this.pull),this.host.registerWebviewCommand("gitlens.graph.fetch",this.fetch),this.host.registerWebviewCommand("gitlens.graph.publishBranch",this.publishBranch),this.host.registerWebviewCommand("gitlens.graph.switchToAnotherBranch",this.switchToAnother),this.host.registerWebviewCommand("gitlens.graph.createBranch",this.createBranch),this.host.registerWebviewCommand("gitlens.graph.deleteBranch",this.deleteBranch),this.host.registerWebviewCommand("gitlens.graph.copyRemoteBranchUrl",(e=>this.openBranchOnRemote(e,!0))),this.host.registerWebviewCommand("gitlens.graph.openBranchOnRemote",this.openBranchOnRemote),this.host.registerWebviewCommand("gitlens.graph.mergeBranchInto",this.mergeBranchInto),this.host.registerWebviewCommand("gitlens.graph.rebaseOntoBranch",this.rebase),this.host.registerWebviewCommand("gitlens.graph.rebaseOntoUpstream",this.rebaseToRemote),this.host.registerWebviewCommand("gitlens.graph.renameBranch",this.renameBranch),this.host.registerWebviewCommand("gitlens.graph.switchToBranch",this.switchTo),this.host.registerWebviewCommand("gitlens.graph.hideLocalBranch",this.hideRef),this.host.registerWebviewCommand("gitlens.graph.hideRemoteBranch",this.hideRef),this.host.registerWebviewCommand("gitlens.graph.hideRemote",(e=>this.hideRef(e,{remote:!0}))),this.host.registerWebviewCommand("gitlens.graph.hideRefGroup",(e=>this.hideRef(e,{group:!0}))),this.host.registerWebviewCommand("gitlens.graph.hideTag",this.hideRef),this.host.registerWebviewCommand("gitlens.graph.cherryPick",this.cherryPick),this.host.registerWebviewCommand("gitlens.graph.copyRemoteCommitUrl",(e=>this.openCommitOnRemote(e,!0))),this.host.registerWebviewCommand("gitlens.graph.showInDetailsView",this.openInDetailsView),this.host.registerWebviewCommand("gitlens.graph.openCommitOnRemote",this.openCommitOnRemote),this.host.registerWebviewCommand("gitlens.graph.openSCM",this.openSCM),this.host.registerWebviewCommand("gitlens.graph.rebaseOntoCommit",this.rebase),this.host.registerWebviewCommand("gitlens.graph.resetCommit",this.resetCommit),this.host.registerWebviewCommand("gitlens.graph.resetToCommit",this.resetToCommit),this.host.registerWebviewCommand("gitlens.graph.resetToTip",this.resetToTip),this.host.registerWebviewCommand("gitlens.graph.revert",this.revertCommit),this.host.registerWebviewCommand("gitlens.graph.switchToCommit",this.switchTo),this.host.registerWebviewCommand("gitlens.graph.undoCommit",this.undoCommit),this.host.registerWebviewCommand("gitlens.graph.saveStash",this.saveStash),this.host.registerWebviewCommand("gitlens.graph.applyStash",this.applyStash),this.host.registerWebviewCommand("gitlens.graph.stash.delete",this.deleteStash),this.host.registerWebviewCommand("gitlens.graph.stash.rename",this.renameStash),this.host.registerWebviewCommand("gitlens.graph.createTag",this.createTag),this.host.registerWebviewCommand("gitlens.graph.deleteTag",this.deleteTag),this.host.registerWebviewCommand("gitlens.graph.switchToTag",this.switchTo),this.host.registerWebviewCommand("gitlens.graph.createWorktree",this.createWorktree),this.host.registerWebviewCommand("gitlens.graph.createPullRequest",this.createPullRequest),this.host.registerWebviewCommand("gitlens.graph.openPullRequestOnRemote",this.openPullRequestOnRemote),this.host.registerWebviewCommand("gitlens.graph.compareWithUpstream",this.compareWithUpstream),this.host.registerWebviewCommand("gitlens.graph.compareWithHead",this.compareHeadWith),this.host.registerWebviewCommand("gitlens.graph.compareWithWorking",this.compareWorkingWith),this.host.registerWebviewCommand("gitlens.graph.compareAncestryWithWorking",this.compareAncestryWithWorking),this.host.registerWebviewCommand("gitlens.graph.copy",this.copy),this.host.registerWebviewCommand("gitlens.graph.copyMessage",this.copyMessage),this.host.registerWebviewCommand("gitlens.graph.copySha",this.copySha),this.host.registerWebviewCommand("gitlens.graph.addAuthor",this.addAuthor),this.host.registerWebviewCommand("gitlens.graph.columnAuthorOn",(()=>this.toggleColumn("author",!0))),this.host.registerWebviewCommand("gitlens.graph.columnAuthorOff",(()=>this.toggleColumn("author",!1))),this.host.registerWebviewCommand("gitlens.graph.columnDateTimeOn",(()=>this.toggleColumn("datetime",!0))),this.host.registerWebviewCommand("gitlens.graph.columnDateTimeOff",(()=>this.toggleColumn("datetime",!1))),this.host.registerWebviewCommand("gitlens.graph.columnShaOn",(()=>this.toggleColumn("sha",!0))),this.host.registerWebviewCommand("gitlens.graph.columnShaOff",(()=>this.toggleColumn("sha",!1))),this.host.registerWebviewCommand("gitlens.graph.columnChangesOn",(()=>this.toggleColumn("changes",!0))),this.host.registerWebviewCommand("gitlens.graph.columnChangesOff",(()=>this.toggleColumn("changes",!1))),this.host.registerWebviewCommand("gitlens.graph.columnGraphOn",(()=>this.toggleColumn("graph",!0))),this.host.registerWebviewCommand("gitlens.graph.columnGraphOff",(()=>this.toggleColumn("graph",!1))),this.host.registerWebviewCommand("gitlens.graph.columnMessageOn",(()=>this.toggleColumn("message",!0))),this.host.registerWebviewCommand("gitlens.graph.columnMessageOff",(()=>this.toggleColumn("message",!1))),this.host.registerWebviewCommand("gitlens.graph.columnRefOn",(()=>this.toggleColumn("ref",!0))),this.host.registerWebviewCommand("gitlens.graph.columnRefOff",(()=>this.toggleColumn("ref",!1))),this.host.registerWebviewCommand("gitlens.graph.columnGraphCompact",(()=>this.setColumnMode("graph","compact"))),this.host.registerWebviewCommand("gitlens.graph.columnGraphDefault",(()=>this.setColumnMode("graph",void 0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerLocalBranchOn",(()=>this.toggleScrollMarker("localBranches",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerLocalBranchOff",(()=>this.toggleScrollMarker("localBranches",!1))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerRemoteBranchOn",(()=>this.toggleScrollMarker("remoteBranches",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerRemoteBranchOff",(()=>this.toggleScrollMarker("remoteBranches",!1))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerStashOn",(()=>this.toggleScrollMarker("stashes",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerStashOff",(()=>this.toggleScrollMarker("stashes",!1))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerTagOn",(()=>this.toggleScrollMarker("tags",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerTagOff",(()=>this.toggleScrollMarker("tags",!1))),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToBranch",this.copyDeepLinkToBranch),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToCommit",this.copyDeepLinkToCommit),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToRepo",this.copyDeepLinkToRepo),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToTag",this.copyDeepLinkToTag),this.host.registerWebviewCommand("gitlens.graph.openChangedFiles",this.openFiles),this.host.registerWebviewCommand("gitlens.graph.openOnlyChangedFiles",this.openOnlyChangedFiles),this.host.registerWebviewCommand("gitlens.graph.openChangedFileDiffs",this.openAllChanges),this.host.registerWebviewCommand("gitlens.graph.openChangedFileDiffsWithWorking",this.openAllChangesWithWorking),this.host.registerWebviewCommand("gitlens.graph.openChangedFileRevisions",this.openRevisions),this.host.registerWebviewCommand("gitlens.graph.resetColumnsDefault",(()=>this.updateColumns(Pe))),this.host.registerWebviewCommand("gitlens.graph.resetColumnsCompact",(()=>this.updateColumns(Se)))]}onWindowFocusChanged(e){this.isWindowFocused=e,this.notifyDidChangeWindowFocus()}onFocusChanged(e){this.notifyDidChangeFocus(e),e&&null!=this.activeSelection&&this.container.commitDetailsView.visible?this.showActiveSelectionDetails():this._showActiveSelectionDetailsDebounced?.cancel()}onVisibilityChanged(e){if(e||this._showActiveSelectionDetailsDebounced?.cancel(),e&&(null!=this.repository&&this.repository.etag!==this._etagRepository||this.container.subscription.etag!==this._etagSubscription))this.updateState(!0);else if(e){this.host.ready&&this.host.sendPendingIpcNotifications();const{activeSelection:e}=this;if(null==e)return;this.showActiveSelectionDetails()}}onMessageReceived(e){switch(e.method){case G.method:(0,M.mq)(G,e,(()=>this.onChooseRepository()));break;case H.method:(0,M.mq)(H,e,(e=>this.dimMergeCommits(e)));break;case V.method:(0,M.mq)(V,e,(e=>this.onDoubleClick(e)));break;case q.method:(0,M.mq)(q,e,(t=>this.onEnsureRow(t,e.completionId)));break;case Q.method:(0,M.mq)(Q,e,(e=>this.onGetMissingAvatars(e)));break;case Y.method:(0,M.mq)(Y,e,(e=>this.onGetMissingRefMetadata(e)));break;case j.method:(0,M.mq)(j,e,(e=>this.onGetMoreRows(e)));break;case z.method:(0,M.mq)(z,e,(t=>this.onSearch(t,e.completionId)));break;case K.method:(0,M.mq)(K,e,(e=>this.onSearchOpenInView(e)));break;case J.method:(0,M.mq)(J,e,(e=>this.onColumnsChanged(e)));break;case ee.method:(0,M.mq)(ee,e,(e=>this.updateGraphConfig(e)));break;case X.method:(0,M.mq)(X,e,(e=>this.onRefsVisibilityChanged(e)));break;case ie.method:(0,M.mq)(ie,e,this.onSelectionChanged.bind(this));break;case Z.method:(0,M.mq)(Z,e,(e=>this.updateExcludedType(this._graph,e)));break;case te.method:(0,M.mq)(te,e,(e=>this.updateIncludeOnlyRefs(this._graph,e.refs)))}}updateGraphConfig(e){const t=this.getComponentConfig();let i;for(i in e.changes)if(t[i]!==e.changes[i])switch(i){case"minimap":k.D.updateEffective("graph.minimap.enabled",e.changes[i]);break;case"minimapDataType":k.D.updateEffective("graph.minimap.dataType",e.changes[i]);break;case"minimapMarkerTypes":{const t=[],r=e.changes[i]??[];for(const e of r)switch(e){case"localBranches":case"remoteBranches":case"stashes":case"tags":t.push(e)}k.D.updateEffective("graph.minimap.additionalTypes",t);break}}}_showActiveSelectionDetailsDebounced=void 0;showActiveSelectionDetails(){null==this._showActiveSelectionDetailsDebounced&&(this._showActiveSelectionDetailsDebounced=(0,O.Ds)(this.showActiveSelectionDetailsCore.bind(this),250)),this._showActiveSelectionDetailsDebounced()}showActiveSelectionDetailsCore(){const{activeSelection:e}=this;null!=e&&this.container.events.fire("commit:selected",{commit:e,interaction:"passive",preserveFocus:!0,preserveVisibility:!1===this._showDetailsView},{source:this.host.id})}onConfigurationChanged(e){k.D.changed(e,"graph.showDetailsView")&&(this._showDetailsView=k.D.get("graph.showDetailsView")),k.D.changed(e,"graph.commitOrdering")?this.updateState():(k.D.changed(e,"defaultDateFormat")||k.D.changed(e,"defaultDateStyle")||k.D.changed(e,"advanced.abbreviatedShaLength")||k.D.changed(e,"graph.avatars")||k.D.changed(e,"graph.dateFormat")||k.D.changed(e,"graph.dateStyle")||k.D.changed(e,"graph.dimMergeCommits")||k.D.changed(e,"graph.highlightRowsOnRefHover")||k.D.changed(e,"graph.scrollRowPadding")||k.D.changed(e,"graph.scrollMarkers.enabled")||k.D.changed(e,"graph.scrollMarkers.additionalTypes")||k.D.changed(e,"graph.showGhostRefsOnRowHover")||k.D.changed(e,"graph.pullRequests.enabled")||k.D.changed(e,"graph.showRemoteNames")||k.D.changed(e,"graph.showUpstreamStatus")||k.D.changed(e,"graph.minimap.enabled")||k.D.changed(e,"graph.minimap.dataType")||k.D.changed(e,"graph.minimap.additionalTypes"))&&(this.notifyDidChangeConfiguration(),(k.D.changed(e,"graph.minimap.enabled")||k.D.changed(e,"graph.minimap.dataType"))&&k.D.get("graph.minimap.enabled")&&"lines"===k.D.get("graph.minimap.dataType")&&!this._graph?.includes?.stats&&this.updateState())}onRepositoryChanged(e){e.changed(P.I6.Config,P.I6.Head,P.I6.Heads,P.I6.Remotes,P.I6.Stash,P.I6.Status,P.I6.Tags,P.I6.Unknown,P.du.Any)?(e.changed(P.I6.Head,P.du.Any)&&this.setSelectedRows(void 0),this.updateState(!e.changed(P.I6.Unknown,P.du.Exclusive))):this._etagRepository=e.repository.etag}onRepositoryFileSystemChanged(e){e.repository?.path===this.repository?.path&&this.notifyDidChangeWorkingTree()}onSubscriptionChanged(e){e.etag!==this._etagSubscription&&(this._etagSubscription=e.etag,this.notifyDidChangeSubscription())}onThemeChanged(e){null!=this._theme&&((0,x.$o)(e)&&(0,x.$o)(this._theme)||(0,x.GC)(e)&&(0,x.GC)(this._theme))||(this._theme=e,this.updateState())}dimMergeCommits(e){k.D.updateEffective("graph.dimMergeCommits",e.dim)}onColumnsChanged(e){this.updateColumns(e.config)}onRefsVisibilityChanged(e){this.updateExcludedRefs(this._graph,e.refs,e.visible)}onDoubleClick(e){if("ref"===e.type&&e.ref.context){let t=this.getGraphItemContext(e.ref.context);if(_e(t)){if(null!=e.metadata){if(t=this.getGraphItemContext(e.metadata.data.context),"upstream"===e.metadata.type&&ke(t,"upstreamStatus")){const{ahead:e,behind:i,ref:r}=t.webviewItemValue;if(i>0)return void u.X4(r.repoPath,r);if(e>0)return void u.VF(r.repoPath,!1,r)}else if("pullRequest"===e.metadata.type&&ke(t,"pullrequest"))return void this.openPullRequestOnRemote(t);return}const{ref:i}=t.webviewItemValue;return"head"===e.ref.refType&&e.ref.isCurrentHead?u.gu(i.repoPath):u.gu(i.repoPath,i,!!k.D.isUnset("gitCommands.skipConfirmations")||void 0)}}else if("row"===e.type&&e.row){const t=this.getRevisionReference(this.repository?.path,e.row.id,e.row.type);if(null!=t){this.container.events.fire("commit:selected",{commit:t,interaction:"active",preserveFocus:e.preserveFocus,preserveVisibility:!1},{source:this.host.id});const i=this.host.isView()?this.container.graphDetailsView:this.container.commitDetailsView;i.ready||i.show({preserveFocus:e.preserveFocus},{commit:t,interaction:"active",preserveVisibility:!1})}}return Promise.resolve()}async onEnsureRow(e,t){if(null==this._graph)return;const i=this._graph.remappedIds?.get(e.id)??e.id;let r,n;this._graph.ids.has(i)?(r=e.id,n=e.id!==i?i:void 0):(await this.updateGraphWithMoreRows(this._graph,i,this._search),this.notifyDidChangeRows(),this._graph.ids.has(i)&&(r=e.id,n=e.id!==i?i:void 0)),this.host.notify(we,{id:r,remapped:n},t)}async onGetMissingAvatars(e){if(null==this._graph)return;const t=this._graph.repoPath;async function i(e,i){const r=await(0,n.oP)(e,{ref:i,repoPath:t});this._graph.avatars.set(e,r.toString(!0))}const r=[];for(const[t,n]of Object.entries(e.emails))this._graph.avatars.has(t)||r.push(i.call(this,t,n));r.length&&(await Promise.allSettled(r),this.updateAvatars())}async onGetMissingRefMetadata(e){if(null==this._graph||null===this._refsMetadata||!(0,_.fw)("gitlens:hasConnectedRemotes"))return;const t=this._graph.repoPath;async function i(e,i){null==this._refsMetadata&&(this._refsMetadata=new Map);const r=(await this.container.git.getBranches(t,{filter:t=>t.id===e}))?.values?.[0],n={...this._refsMetadata.get(e)};if(null!=r)for(const t of i)if(N.includes(t))if(t!==U.PullRequest){if(t===U.Upstream){const t=r?.upstream;if(null==t||null==t||t.missing){n.upstream=null,this._refsMetadata.set(e,n);continue}const i={name:(0,f.S3)(t.name),owner:(0,f.Lo)(t.name),ahead:r.state.ahead,behind:r.state.behind,context:(0,B.BH)({webviewItem:"gitlens:upstreamStatus",webviewItemValue:{type:"upstreamStatus",ref:(0,b.LB)(r),ahead:r.state.ahead,behind:r.state.behind}})};n.upstream=i,this._refsMetadata.set(e,n)}}else{const t=await(r?.getAssociatedPullRequest());if(null==t){void 0!==n.pullRequest&&0!==n.pullRequest?.length||(n.pullRequest=null),this._refsMetadata.set(e,n);continue}const i={hostingServiceType:t.provider.id,id:Number.parseInt(t.id)||0,title:t.title,author:t.author.name,date:(t.mergedDate??t.closedDate??t.date)?.getTime(),state:t.state,url:t.url,context:(0,B.BH)({webviewItem:"gitlens:pullrequest",webviewItemValue:{type:"pullrequest",id:t.id,url:t.url}})};n.pullRequest=[i],this._refsMetadata.set(e,n)}else n[t]=null,this._refsMetadata.set(e,n);else for(const t of i)n[t]=null,this._refsMetadata.set(e,n)}const r=[];for(const t of Object.keys(e.metadata))r.push(i.call(this,t,e.metadata[t]));r.length&&await Promise.allSettled(r),this.updateRefsMetadata()}async onGetMoreRows(e,t=!1){null!=this._graph?.paging&&(null!=this._graph?.more&&this.repository?.etag===this._etagRepository?(await this.updateGraphWithMoreRows(this._graph,e.id,this._search),this.notifyDidChangeRows(t)):this.updateState(!0))}async onSearch(e,t){if(null==e.search)return void this.resetSearchState();let i=this._search;if(e.more&&null!=i?.more&&i.comparisonKey===(0,S.FL)(e.search))return i=await i.more(e.limit??k.D.get("graph.searchItemLimit")??100),void(null!=i&&(this._search=i,await this.ensureSearchStartsInRange(this._graph,i),this.host.notify(ve,{results:i.results.size>0?{ids:Object.fromEntries((0,E.UI)(i.results,(([e,t])=>[this._graph?.remappedIds?.get(e)??e,t]))),count:i.results.size,paging:{hasMore:i.paging?.hasMore??!1}}:void 0},t)));if(null==i||i.comparisonKey!==(0,S.FL)(e.search)){if(null==this.repository)return;this.repository.etag!==this._etagRepository&&this.updateState(!0),null!=this._searchCancellation&&(this._searchCancellation.cancel(),this._searchCancellation.dispose());const n=new r.CancellationTokenSource;this._searchCancellation=n;try{i=await this.repository.searchCommits(e.search,{limit:k.D.get("graph.searchItemLimit")??100,ordering:k.D.get("graph.commitOrdering"),cancellation:n.token})}catch(e){return this._search=void 0,void this.host.notify(ve,{results:{error:e instanceof g.l0?"Invalid search pattern":"Unexpected error"}},t)}if(n.token.isCancellationRequested)return void(null!=t&&this.host.notify(ve,{results:void 0},t));this._search=i}else i=this._search;const n=await this.ensureSearchStartsInRange(this._graph,i);let s=!1;null!=n&&(s=!0,this.setSelectedRows(n)),this.host.notify(ve,{results:0===i.results.size?{count:0}:{ids:Object.fromEntries((0,E.UI)(i.results,(([e,t])=>[this._graph?.remappedIds?.get(e)??e,t]))),count:i.results.size,paging:{hasMore:i.paging?.hasMore??!1}},selectedRows:s?this._selectedRows:void 0},t)}onSearchOpenInView(e){null!=this.repository&&this.container.searchAndCompareView.search(this.repository.path,e.search,{label:{label:`for ${e.search.query}`},reveal:{select:!0,focus:!1,expand:!0}})}async onChooseRepository(){const e=this.container.git.openRepositories.sort(((e,t)=>(e===this.repository?1:-1)-(t===this.repository?1:-1)||(e.starred?-1:1)-(t.starred?-1:1)||e.index-t.index)),t=await(0,R.E2)(`Switch Repository ${o.NE.Dot} ${this.repository?.name}`,"Choose a repository to switch to",e);null!=t&&(this.repository=t.item)}_fireSelectionChangedDebounced=void 0;onSelectionChanged(e){const t=e.selection[0];this.setSelectedRows(t?.id),null==this._fireSelectionChangedDebounced&&(this._fireSelectionChangedDebounced=(0,O.Ds)(this.fireSelectionChanged.bind(this),250)),this._fireSelectionChangedDebounced(t?.id,t?.type)}fireSelectionChanged(e,t){if(null==this.repository)return;const i=this.getRevisionReference(this.repository.path,e,t),r=null!=i?[i]:void 0;this._selection=r,null!=r&&(this.container.events.fire("commit:selected",{commit:r[0],interaction:"passive",preserveFocus:!0,preserveVisibility:this._firstSelection?!1===this._showDetailsView:"selection"!==this._showDetailsView},{source:this.host.id}),this._firstSelection=!1)}_notifyDidChangeStateDebounced=void 0;getRevisionReference(e,t,i){if(null!=e&&null!=t)switch(i){case y.e.Stash:return(0,b.xB)(t,e,{refType:"stash",name:t,number:void 0});case y.e.Working:return(0,b.xB)(w.CL,e,{refType:"revision"});default:return(0,b.xB)(t,e,{refType:"revision"})}}updateState(e=!1){this.host.clearPendingIpcNotifications(),e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,O.Ds)(this.notifyDidChangeState.bind(this),250)),this._notifyDidChangeStateDebounced())}async notifyDidChangeFocus(e){return!(!this.host.ready||!this.host.visible)&&this.host.notify(he,{focused:e})}async notifyDidChangeWindowFocus(){return this.host.ready&&this.host.visible?this.host.notify(ue,{focused:this.isWindowFocused}):(this.host.addPendingIpcNotification(ue,this._ipcNotificationMap,this),!1)}_notifyDidChangeAvatarsDebounced=void 0;updateAvatars(e=!1){e?this.notifyDidChangeAvatars():(null==this._notifyDidChangeAvatarsDebounced&&(this._notifyDidChangeAvatarsDebounced=(0,O.Ds)(this.notifyDidChangeAvatars.bind(this),100)),this._notifyDidChangeAvatarsDebounced())}async notifyDidChangeAvatars(){if(null==this._graph)return;const e=this._graph;return this.host.notify(oe,{avatars:Object.fromEntries(e.avatars)})}_notifyDidChangeRefsMetadataDebounced=void 0;updateRefsMetadata(e=!1){e?this.notifyDidChangeRefsMetadata():(null==this._notifyDidChangeRefsMetadataDebounced&&(this._notifyDidChangeRefsMetadataDebounced=(0,O.Ds)(this.notifyDidChangeRefsMetadata.bind(this),100)),this._notifyDidChangeRefsMetadataDebounced())}async notifyDidChangeRefsMetadata(){return this.host.notify(ae,{metadata:null!=this._refsMetadata?Object.fromEntries(this._refsMetadata):this._refsMetadata})}async notifyDidChangeColumns(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(le,this._ipcNotificationMap,this),!1;const e=this.getColumns(),t=this.getColumnSettings(e);return this.host.notify(le,{columns:t,context:this.getColumnHeaderContext(t),settingsContext:this.getGraphSettingsIconContext(t)})}async notifyDidChangeScrollMarkers(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(ce,this._ipcNotificationMap,this),!1;const e=this.getColumns(),t=this.getColumnSettings(e);return this.host.notify(ce,{context:this.getGraphSettingsIconContext(t)})}async notifyDidChangeRefsVisibility(){return this.host.ready&&this.host.visible?this.host.notify(de,{excludeRefs:this.getExcludedRefs(this._graph),excludeTypes:this.getExcludedTypes(this._graph),includeOnlyRefs:this.getIncludeOnlyRefs(this._graph)}):(this.host.addPendingIpcNotification(de,this._ipcNotificationMap,this),!1)}async notifyDidChangeConfiguration(){return this.host.ready&&this.host.visible?this.host.notify(ne,{config:this.getComponentConfig()}):(this.host.addPendingIpcNotification(ne,this._ipcNotificationMap,this),!1)}async notifyDidFetch(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(ye,this._ipcNotificationMap,this),!1;const e=await this.repository.getLastFetched();return this.host.notify(ye,{lastFetched:new Date(e)})}async notifyDidChangeRows(e=!1,t){if(null==this._graph)return;const i=this._graph;return this.host.notify(pe,{rows:i.rows,avatars:Object.fromEntries(i.avatars),downstreams:Object.fromEntries(i.downstreams),refsMetadata:null!=this._refsMetadata?Object.fromEntries(this._refsMetadata):this._refsMetadata,rowsStats:i.rowsStats?.size?Object.fromEntries(i.rowsStats):void 0,rowsStatsLoading:null!=i.rowsStatsDeferred?.isLoaded&&!i.rowsStatsDeferred.isLoaded(),selectedRows:e?this._selectedRows:void 0,paging:{startingCursor:i.paging?.startingCursor,hasMore:i.paging?.hasMore??!1}},t)}async notifyDidChangeRowsStats(e){if(null!=e.rowsStats)return this.host.notify(me,{rowsStats:Object.fromEntries(e.rowsStats),rowsStatsLoading:null!=e.rowsStatsDeferred?.isLoaded&&!e.rowsStatsDeferred.isLoaded()})}async notifyDidChangeWorkingTree(){return this.host.ready&&this.host.visible?this.host.notify(fe,{stats:await this.getWorkingTreeStats()??{added:0,deleted:0,modified:0}}):(this.host.addPendingIpcNotification(fe,this._ipcNotificationMap,this),!1)}async notifyDidChangeSelection(){return this.host.ready&&this.host.visible?this.host.notify(ge,{selection:this._selectedRows??{}}):(this.host.addPendingIpcNotification(ge,this._ipcNotificationMap,this),!1)}async notifyDidChangeSubscription(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(se,this._ipcNotificationMap,this),!1;const[e]=await this.getGraphAccess();return this.host.notify(se,{subscription:e.subscription.current,allowed:!1!==e.allowed})}async notifyDidChangeState(){return this.host.ready&&this.host.visible?this.host.notify(re,{state:await this.getState()}):(this.host.addPendingIpcNotification(re,this._ipcNotificationMap,this),!1)}ensureRepositorySubscriptions(e){if(this.ensureLastFetchedSubscription(e),!e&&null!=this._repositoryEventsDisposable)return;null!=this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0);const t=this.repository;null!=t&&(this._repositoryEventsDisposable=r.Disposable.from(t.onDidChange(this.onRepositoryChanged,this),t.startWatchingFileSystem(),t.onDidChangeFileSystem(this.onRepositoryFileSystemChanged,this),(0,_.ve)((e=>{"gitlens:hasConnectedRemotes"===e&&(this.resetRefsMetadata(),this.updateRefsMetadata())}))))}async ensureLastFetchedSubscription(e){if(!e&&null!=this._lastFetchedDisposable)return;null!=this._lastFetchedDisposable&&(this._lastFetchedDisposable.dispose(),this._lastFetchedDisposable=void 0);const t=this.repository;if(null==t)return;const i=await t.getLastFetched()??0;let r=P._j.getLastFetchedUpdateInterval(i);0!==i&&r>0&&(this._lastFetchedDisposable=(0,O.DH)((()=>{const e=P._j.getLastFetchedUpdateInterval(i);r!==P._j.getLastFetchedUpdateInterval(i)&&(r=e),this.notifyDidFetch()}),r))}async ensureSearchStartsInRange(e,t){if(0===t.results.size)return;let i;for(const r of t.results.keys()){const t=e.remappedIds?.get(r)??r;if(e.ids.has(t))return t;i=t;break}return null!=i?(await this.updateGraphWithMoreRows(e,i),this.notifyDidChangeRows(),e.ids.has(i)?i:void 0):void 0}getColumns(){return this.container.storage.getWorkspace("graph:columns")}getExcludedTypes(e){if(null!=e)return this.getFiltersByRepo(e)?.excludeTypes}getExcludedRefs(e){if(null==e)return;let t;const i=this.container.storage.getWorkspace("graph:hiddenRefs");if(null!=i&&0!==Object.keys(i).length){t=this.container.storage.getWorkspace("graph:filtersByRepo")??{};for(const e in i){const r=Te(e);t[r]=t[r]??{},t[r].excludeRefs=(0,$.iC)(t[r].excludeRefs,e,i[e])}this.container.storage.storeWorkspace("graph:filtersByRepo",t),this.container.storage.deleteWorkspace("graph:hiddenRefs")}const r=(t?.[e.repoPath]??this.getFiltersByRepo(e))?.excludeRefs;if(null==r||0===Object.keys(r).length)return;const n=k.D.get("graph.avatars",void 0,!0),s={},o=e=>this.host.asWebviewUri(e);for(const t in r){const i={...r[t]};if("remote"===i.type&&i.owner){const t=e.remotes.get(i.owner);null!=t&&(i.avatarUrl=((n?t.provider?.avatarUri:void 0)??(0,C.dM)(this.container,t,o))?.toString(!0))}s[t]=i}return s}getIncludeOnlyRefs(e){if(null==e)return;const t=this.getFiltersByRepo(e),i=t?.includeOnlyRefs;if(null==i||0===Object.keys(i).length)return;const r={};for(const[t,n]of Object.entries(i)){let i;if("HEAD"===n.id){if(i=(0,E.sE)(e.branches.values(),(e=>e.current)),null==i)continue;r[i.id]={...n,id:i.id,name:i.name}}else r[t]=n;if("head"===n.type&&(i=i??e.branches.get(n.name),null!=i?.upstream&&!i.upstream.missing)){const t=(0,f.Vx)(e.repoPath,!0,i.upstream.name);r[t]={id:t,type:"remote",name:(0,f.S3)(i.upstream.name),owner:(0,f.Lo)(i.upstream.name)}}}return r}getFiltersByRepo(e){if(null==e)return;const t=this.container.storage.getWorkspace("graph:filtersByRepo");return t?.[e.repoPath]}getColumnSettings(e){const t={...Pe};if(null!=e)for(const[i,r]of Object.entries(e))t[i]={...Pe[i],...r};return t}getColumnHeaderContext(e){return(0,B.BH)({webviewItem:"gitlens:graph:columns",webviewItemValue:this.getColumnContextItems(e).join(",")})}getGraphSettingsIconContext(e){return(0,B.BH)({webviewItem:"gitlens:graph:settings",webviewItemValue:this.getSettingsIconContextItems(e).join(",")})}getColumnContextItems(e){const t=[],i=["author","changes","datetime","graph","message","ref","sha"];let r=0;for(const[n,s]of Object.entries(e))i.includes(n)&&(s.isHidden||r++,t.push(`column:${n}:${s.isHidden?"hidden":"visible"}${s.mode?`+${s.mode}`:""}`));return r>1&&t.push("columns:canHide"),t}getSettingsIconContextItems(e){const t=null!=e?this.getColumnContextItems(e):[];if(k.D.get("graph.scrollMarkers.enabled")){const e=["localBranches","remoteBranches","stashes","tags"],i=k.D.get("graph.scrollMarkers.additionalTypes");for(const r of e)t.push(`scrollMarker:${r}:${i.includes(r)?"enabled":"disabled"}`)}return t}getComponentConfig(){return{avatars:k.D.get("graph.avatars"),dateFormat:k.D.get("graph.dateFormat")??k.D.get("defaultDateFormat")??"short+short",dateStyle:k.D.get("graph.dateStyle")??k.D.get("defaultDateStyle"),enabledRefMetadataTypes:this.getEnabledRefMetadataTypes(),dimMergeCommits:k.D.get("graph.dimMergeCommits"),enableMultiSelection:!1,highlightRowsOnRefHover:k.D.get("graph.highlightRowsOnRefHover"),minimap:k.D.get("graph.minimap.enabled"),minimapDataType:k.D.get("graph.minimap.dataType"),minimapMarkerTypes:this.getMinimapMarkerTypes(),scrollRowPadding:k.D.get("graph.scrollRowPadding"),scrollMarkerTypes:this.getScrollMarkerTypes(),showGhostRefsOnRowHover:k.D.get("graph.showGhostRefsOnRowHover"),showRemoteNamesOnRefs:k.D.get("graph.showRemoteNames"),idLength:k.D.get("advanced.abbreviatedShaLength")}}getScrollMarkerTypes(){if(!k.D.get("graph.scrollMarkers.enabled"))return[];return["selection","highlights","head","upstream",...k.D.get("graph.scrollMarkers.additionalTypes")]}getMinimapMarkerTypes(){if(!k.D.get("graph.minimap.enabled"))return[];return["selection","highlights","head","upstream",...k.D.get("graph.minimap.additionalTypes")]}getEnabledRefMetadataTypes(){const e=[];return k.D.get("graph.pullRequests.enabled")&&e.push(U.PullRequest),k.D.get("graph.showUpstreamStatus")&&e.push(U.Upstream),e}async getGraphAccess(){let e=await this.container.git.access(a.x.Graph,this.repository?.path);this._etagSubscription=this.container.subscription.etag,!1===e.allowed&&null==e.subscription.current.previewTrial&&(await this.container.subscription.startPreviewTrial(),e=await this.container.git.access(a.x.Graph,this.repository?.path));let t=e?.visibility;return null==t&&null!=this.repository&&(t=await this.container.git.visibility(this.repository?.path)),[e,t]}getGraphItemContext(e){const t="string"==typeof e?JSON.parse(e):e;return null==t||"webview"in t||(t.webview=this.host.id),t}async getWorkingTreeStats(){if(null==this.repository||0===this.container.git.repositoryCount)return;const e=await this.container.git.getStatusForRepo(this.repository.path),t=e?.getDiffStatus();return{added:t?.added??0,deleted:t?.deleted??0,modified:t?.changed??0,context:(0,B.BH)({webviewItem:"gitlens:wip",webviewItemValue:{type:"commit",ref:this.getRevisionReference(this.repository.path,w.CL,y.e.Working)}})}}async getState(e){if(0===this.container.git.repositoryCount)return{webviewId:this.host.id,timestamp:Date.now(),allowed:!0,repositories:[]};if(null==this.repository&&(this.repository=this.container.git.getBestRepositoryOrFirst(),null==this.repository))return{webviewId:this.host.id,timestamp:Date.now(),allowed:!0,repositories:[]};this._etagRepository=this.repository?.etag,this.host.title=`${this.host.originalTitle}: ${this.repository.formattedName}`;const{defaultItemLimit:t}=k.D.get("graph"),i=Math.max(t,this._graph?.ids.size??t),r=null==this._selectedId||this._selectedId===w.CL?"HEAD":this._selectedId,n=this.getColumns(),s=this.getColumnSettings(n),o=this.container.git.getCommitsForGraph(this.repository.path,(e=>this.host.asWebviewUri(e)),{include:{stats:k.D.get("graph.minimap.enabled")&&"lines"===k.D.get("graph.minimap.dataType")||!s.changes.isHidden},limit:i,ref:r}),a=Promise.allSettled([this.getGraphAccess(),this.getWorkingTreeStats(),this.repository.getBranch(),this.repository.getLastFetched()]);let l;e?queueMicrotask((async()=>{const e=await o;this.setGraph(e),this.setSelectedRows(e.id),this.notifyDidChangeRefsVisibility(),this.notifyDidChangeRows(!0)})):(l=await o,this.setGraph(l),this.setSelectedRows(l.id));const[c,h,u,d]=await a,[p,m]=(0,I.Sb)(c)??[];let g;const f=(0,I.Sb)(u);if(null!=f&&(g={...f.state},null!=f.upstream)){g.upstream=f.upstream.name;const e=await f.getRemote();null!=e?.provider&&(g.provider={name:e.provider.name,icon:"remote"===e.provider.icon?"cloud":e.provider.icon,url:e.provider.url({type:A.J.Repo})})}return{webviewId:this.host.id,timestamp:Date.now(),windowFocused:this.isWindowFocused,repositories:Re(this.container.git.openRepositories),selectedRepository:this.repository.path,selectedRepositoryVisibility:m,branchName:f?.name,branchState:g,lastFetched:new Date((0,I.Sb)(d)),selectedRows:this._selectedRows,subscription:p?.subscription.current,allowed:!1!==(p?.allowed??!1),avatars:null!=l?Object.fromEntries(l.avatars):void 0,refsMetadata:null===this.resetRefsMetadata()?null:{},loading:e,rowsStatsLoading:null!=l?.rowsStatsDeferred?.isLoaded&&!l.rowsStatsDeferred.isLoaded(),rows:l?.rows,downstreams:null!=l?Object.fromEntries(l.downstreams):void 0,paging:null!=l?{startingCursor:l.paging?.startingCursor,hasMore:l.paging?.hasMore??!1}:void 0,columns:s,config:this.getComponentConfig(),context:{header:this.getColumnHeaderContext(s),settings:this.getGraphSettingsIconContext(s)},excludeRefs:null!=l?this.getExcludedRefs(l)??{}:{},excludeTypes:this.getExcludedTypes(l)??{},includeOnlyRefs:null!=l?this.getIncludeOnlyRefs(l)??{}:{},nonce:this.host.cspNonce,workingTreeStats:(0,I.Sb)(h)??{added:0,deleted:0,modified:0}}}updateColumns(e){let t=this.container.storage.getWorkspace("graph:columns");for(const[i,r]of Object.entries(e))t=(0,$.iC)(t,i,r);this.container.storage.storeWorkspace("graph:columns",t),this.notifyDidChangeColumns()}updateExcludedRefs(e,t,i){if(null==t||0===t.length)return;let r=this.getFiltersByRepo(e)?.excludeRefs??{};for(const e of t)r=(0,$.iC)(r,e.id,i?void 0:{id:e.id,type:e.type,name:e.name,owner:e.owner});this.updateFiltersByRepo(e,{excludeRefs:r}),this.notifyDidChangeRefsVisibility()}updateFiltersByRepo(e,t){if(null==e)throw new Error("Cannot save repository filters since Graph is undefined");const i=this.container.storage.getWorkspace("graph:filtersByRepo");return this.container.storage.storeWorkspace("graph:filtersByRepo",(0,$.iC)(i,e.repoPath,{...i?.[e.repoPath],...t}))}updateIncludeOnlyRefs(e,t){let i;if(null==t||0===t.length){if(null==this.getFiltersByRepo(e)?.includeOnlyRefs)return;i=void 0}else{i={};for(const e of t)i[e.id]={id:e.id,type:e.type,name:e.name,owner:e.owner}}this.updateFiltersByRepo(e,{includeOnlyRefs:i}),this.notifyDidChangeRefsVisibility()}updateExcludedType(e,{key:t,value:i}){let r=this.getFiltersByRepo(e)?.excludeTypes;(null!=r&&0!==Object.keys(r).length||!1!==i)&&(r=(0,$.iC)(r,t,i),this.updateFiltersByRepo(e,{excludeTypes:r}),this.notifyDidChangeRefsVisibility())}resetRefsMetadata(){return this._refsMetadata=(0,_.fw)("gitlens:hasConnectedRemotes")?void 0:null,this._refsMetadata}resetRepositoryState(){this.setGraph(void 0),this.setSelectedRows(void 0)}resetSearchState(){this._search=void 0,this._searchCancellation?.dispose(),this._searchCancellation=void 0}setSelectedRows(e){this._selectedId!==e&&(this._selectedId=e,e===w.CL&&(e=y.e.Working),this._selectedRows=null!=e?{[e]:!0}:void 0)}setGraph(e){this._graph=e,null==e?(this.resetRefsMetadata(),this.resetSearchState()):e.rowsStatsDeferred?.promise.then((()=>{this.notifyDidChangeRowsStats(e)}))}async updateGraphWithMoreRows(e,t,i){const{defaultItemLimit:r,pageItemLimit:n}=k.D.get("graph"),s=await(e.more?.(n??r,t));if(null!=s){if(this.setGraph(s),!i?.paging?.hasMore)return;const e=(0,E.Z$)(i.results)?.[0];if(null==e)return;const t=s.remappedIds?.get(e)??e;s.ids.has(t)&&queueMicrotask((()=>{this.onSearch({search:i.query,more:!0})}))}}fetch(e){const t=null!=e?this.getGraphItemRef(e,"branch"):void 0;u.he(this.repository,t)}pull(e){const t=null!=e?this.getGraphItemRef(e,"branch"):void 0;u.X4(this.repository,t)}push(e){const t=null!=e?this.getGraphItemRef(e):void 0;u.VF(this.repository,void 0,t)}createBranch(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():l.Ue(t.repoPath,t)}deleteBranch(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;return l.Od(t.repoPath,t)}return Promise.resolve()}mergeBranchInto(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;return u.TS(t.repoPath,t)}return Promise.resolve()}openBranchOnRemote(e,t){if(_e(e,"branch")){const{ref:i}=e.webviewItemValue;return(0,D.P0)(o.Gh.OpenOnRemote,{repoPath:i.repoPath,resource:{type:A.J.Branch,branch:i.name},remote:i.upstream?.name,clipboard:t})}return Promise.resolve()}publishBranch(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;return u.VF(t.repoPath,void 0,t)}return Promise.resolve()}rebase(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():u.DW(t.repoPath,t)}rebaseToRemote(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;if(null!=t.upstream)return u.DW(t.repoPath,(0,b.xB)(t.upstream.name,t.repoPath,{refType:"branch",name:t.upstream.name,remote:!0}))}return Promise.resolve()}renameBranch(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;return l.PQ(t.repoPath,t)}return Promise.resolve()}cherryPick(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.QP(t.repoPath,t)}async copy(e){const t=this.getGraphItemRef(e);if(null!=t)await r.env.clipboard.writeText("revision"===t.refType&&t.message?`${t.name}: ${t.message}`:t.name);else if(ke(e,"contributor")){const{name:t,email:i}=e.webviewItemValue;await r.env.clipboard.writeText(`${t}${i?` <${i}>`:""}`)}else if(ke(e,"pullrequest")){const{url:t}=e.webviewItemValue;await r.env.clipboard.writeText(t)}return Promise.resolve()}copyMessage(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():(0,D.P0)(o.Gh.CopyMessageToClipboard,{repoPath:t.repoPath,sha:t.ref,message:"message"in t?t.message:void 0})}async copySha(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();let i=t.ref;return(0,b.D3)(i)||(i=await this.container.git.resolveReference(t.repoPath,i,void 0,{force:!0})),(0,D.P0)(o.Gh.CopyShaToClipboard,{sha:i})}openInDetailsView(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():this.host.isView()?void(0,c.E4)(t,{preserveFocus:!0,preserveVisibility:!1}):(0,D.P0)(o.Gh.ShowInDetailsView,{repoPath:t.repoPath,refs:[t.ref]})}openSCM(e){return null==this.getGraphItemRef(e,"revision")?Promise.resolve():(0,D.dO)("workbench.view.scm")}openCommitOnRemote(e,t){const i=this.getGraphItemRef(e,"revision");return null==i?Promise.resolve():(0,D.P0)(o.Gh.OpenOnRemote,{repoPath:i.repoPath,resource:{type:A.J.Commit,sha:i.ref},clipboard:t})}copyDeepLinkToBranch(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;return(0,D.P0)(o.Gh.CopyDeepLinkToBranch,{refOrRepoPath:t})}return Promise.resolve()}copyDeepLinkToCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():(0,D.P0)(o.Gh.CopyDeepLinkToCommit,{refOrRepoPath:t})}copyDeepLinkToRepo(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;return t.remote?(0,D.P0)(o.Gh.CopyDeepLinkToRepo,{refOrRepoPath:t.repoPath,remote:(0,f.Lo)(t.name)}):Promise.resolve()}return Promise.resolve()}copyDeepLinkToTag(e){if(_e(e,"tag")){const{ref:t}=e.webviewItemValue;return(0,D.P0)(o.Gh.CopyDeepLinkToTag,{refOrRepoPath:t})}return Promise.resolve()}resetCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.mc(t.repoPath,(0,b.xB)(`${t.ref}^`,t.repoPath,{refType:"revision",name:`${t.name}^`,message:t.message}))}resetToCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.mc(t.repoPath,t)}resetToTip(e){const t=this.getGraphItemRef(e,"branch");return null==t?Promise.resolve():u.mc(t.repoPath,(0,b.xB)(t.ref,t.repoPath,{refType:"revision",name:t.name}))}revertCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.CU(t.repoPath,t)}switchTo(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():u.gu(t.repoPath,t)}hideRef(e,t){let i;if(t?.group&&function(e){return null!=e&&(function(e){return null!=e&&((0,B.dH)(e)&&("gitlens.graph"===e.webview||"gitlens.views.graph"===e.webview))}(e)&&"object"==typeof e.webviewItemGroupValue&&"refGroup"===e.webviewItemGroupValue.type)}(e))({refs:i}=e.webviewItemGroupValue);else if(!t?.group&&_e(e)){const{ref:t}=e.webviewItemValue;null!=t.id&&(i=[t])}return null!=i&&this.updateExcludedRefs(this._graph,i.map((e=>{const i="branch"===e.refType&&e.remote;return{id:e.id,name:i?t?.remote?"*":(0,f.S3)(e.name):e.name,owner:i?(0,f.Lo)(e.name):void 0,type:"branch"===e.refType?e.remote?"remote":"head":"tag"}})),!1),Promise.resolve()}switchToAnother(e){const t=this.getGraphItemRef(e);return null==t?u.gu(this.repository?.path):u.gu(t.repoPath)}async undoCommit(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();const i=await this.container.git.getOrOpenScmRepository(t.repoPath),n=await(i?.getCommit("HEAD"));n?.hash===t.ref?(0,D.Zv)("git.undoCommit",t.repoPath):r.window.showWarningMessage(`Commit ${(0,b.Wh)(t,{capitalize:!0,icon:!1})} cannot be undone, because it is no longer the most recent commit.`)}saveStash(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():d.VF(t.repoPath)}applyStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():d.nn(t.repoPath,t)}deleteStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():d.Cw(t.repoPath,t)}renameStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():d.PQ(t.repoPath,t)}async createTag(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():p.Ue(t.repoPath,t)}deleteTag(e){if(_e(e,"tag")){const{ref:t}=e.webviewItemValue;return p.Od(t.repoPath,t)}return Promise.resolve()}async createWorktree(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():m.Ue(t.repoPath,void 0,t)}async createPullRequest(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue,i=this.container.git.getRepository(t.repoPath),r=await(i?.getBranch(t.name)),n=await(r?.getRemote());return(0,D.SI)("createPullRequest",{repoPath:t.repoPath,remote:null!=n?{name:n.name,provider:null!=n.provider?{id:n.provider.id,name:n.provider.name,domain:n.provider.domain}:void 0,url:n.url}:void 0,branch:{name:t.name,upstream:t.upstream?.name,isRemote:t.remote}})}return Promise.resolve()}openPullRequestOnRemote(e,t){if(De(e)&&"object"==typeof e.webviewItemValue&&"pullrequest"===e.webviewItemValue.type){const{url:i}=e.webviewItemValue;return(0,D.P0)(o.Gh.OpenPullRequestOnRemote,{pr:{url:i},clipboard:t})}return Promise.resolve()}async compareAncestryWithWorking(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();const i=await this.container.git.getBranch(t.repoPath);if(null==i)return;const r=await this.container.git.getMergeBase(t.repoPath,i.ref,t.ref);return null!=r?this.container.searchAndCompareView.compare(t.repoPath,{ref:r,label:`ancestry with ${t.ref} (${(0,b.zL)(r)})`},""):void 0}compareHeadWith(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():this.container.searchAndCompareView.compare(t.repoPath,"HEAD",t.ref)}compareWithUpstream(e){if(_e(e,"branch")){const{ref:t}=e.webviewItemValue;if(null!=t.upstream)return this.container.searchAndCompareView.compare(t.repoPath,t.ref,t.upstream.name)}return Promise.resolve()}compareWorkingWith(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():this.container.searchAndCompareView.compare(t.repoPath,"",t.ref)}async openFiles(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,c.aE)(t)}async openAllChanges(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,c.Gp)(t)}async openAllChangesWithWorking(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,c.Ou)(t)}async openRevisions(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,c.Dh)(t)}async openOnlyChangedFiles(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,c.Uc)(t)}addAuthor(e){if(ke(e,"contributor")){const{repoPath:t,name:i,email:r,current:n}=e.webviewItemValue;return h.q(t,new v.V(t,i,r,0,void 0,n))}return Promise.resolve()}async toggleColumn(e,t){let i=this.container.storage.getWorkspace("graph:columns"),r=i?.[e];null!=r?r.isHidden=!t:r={isHidden:!t},i=(0,$.iC)(i,e,r),await this.container.storage.storeWorkspace("graph:columns",i),this.notifyDidChangeColumns(),"changes"!==e||r.isHidden||this._graph?.includes?.stats||this.updateState()}async toggleScrollMarker(e,t){let i=k.D.get("graph.scrollMarkers.additionalTypes"),r=!1;t&&!i.includes(e)?(i=i.concat(e),r=!0):!t&&i.includes(e)&&(i=i.filter((t=>t!==e)),r=!0),r&&(await k.D.updateEffective("graph.scrollMarkers.additionalTypes",i),this.notifyDidChangeScrollMarkers())}async setColumnMode(e,t){let i=this.container.storage.getWorkspace("graph:columns"),r=i?.[e];null!=r?r.mode=t:r={mode:t},i=(0,$.iC)(i,e,r),await this.container.storage.storeWorkspace("graph:columns",i),this.notifyDidChangeColumns()}getCommitFromGraphItemRef(e){let t=this.getGraphItemRef(e,"revision");return null!=t?this.container.git.getCommit(t.repoPath,t.ref):(t=this.getGraphItemRef(e,"stash"),null!=t?this.container.git.getCommit(t.repoPath,t.ref):Promise.resolve(void 0))}getGraphItemRef(e,t){if(null==e){const e=this.activeSelection;return null==e||null!=t&&t!==e.refType?void 0:e}switch(t){case"branch":return _e(e,"branch")||ke(e,"upstreamStatus")?e.webviewItemValue.ref:void 0;case"revision":return _e(e,"revision")?e.webviewItemValue.ref:void 0;case"stash":return _e(e,"stash")?e.webviewItemValue.ref:void 0;case"tag":return _e(e,"tag")?e.webviewItemValue.ref:void 0;default:return _e(e)?e.webviewItemValue.ref:void 0}}}function Re(e){return 0===e.length?[]:e.map((e=>({formattedName:e.formattedName,id:e.id,name:e.name,path:e.path,isVirtual:e.provider.virtual})))}function De(e){return null!=e&&((0,B.tM)(e)&&("gitlens.graph"===e.webview||"gitlens.views.graph"===e.webview))}function ke(e,t){return null!=e&&(De(e)&&"object"==typeof e.webviewItemValue&&e.webviewItemValue.type===t)}function _e(e,t){return null!=e&&(De(e)&&"object"==typeof e.webviewItemValue&&"ref"in e.webviewItemValue&&(null==t||e.webviewItemValue.ref.refType===t))}function Te(e){return e.split("|",1)[0]}Ae([(0,F.fF)({args:{0:e=>e.toString()}})],GraphWebviewProvider.prototype,"onRepositoryChanged",1),Ae([(0,F.fF)({args:!1})],GraphWebviewProvider.prototype,"onRepositoryFileSystemChanged",1),Ae([(0,F.fF)({args:!1})],GraphWebviewProvider.prototype,"onSubscriptionChanged",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"onEnsureRow",1),Ae([(0,T.H)(),(0,F.fF)()],GraphWebviewProvider.prototype,"onGetMoreRows",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"onSearch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"updateState",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeFocus",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeWindowFocus",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"updateAvatars",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeAvatars",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"updateRefsMetadata",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeRefsMetadata",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeColumns",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeScrollMarkers",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeRefsVisibility",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeConfiguration",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidFetch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeRows",1),Ae([(0,F.fF)({args:!1})],GraphWebviewProvider.prototype,"notifyDidChangeRowsStats",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeWorkingTree",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeSelection",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeSubscription",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeState",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"fetch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"pull",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"push",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"createBranch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"deleteBranch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"mergeBranchInto",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openBranchOnRemote",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"publishBranch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"rebase",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"rebaseToRemote",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"renameBranch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"cherryPick",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"copy",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"copyMessage",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"copySha",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openInDetailsView",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openSCM",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openCommitOnRemote",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToBranch",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToCommit",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToRepo",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToTag",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"resetCommit",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"resetToCommit",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"resetToTip",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"revertCommit",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"switchTo",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"hideRef",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"switchToAnother",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"undoCommit",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"saveStash",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"applyStash",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"deleteStash",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"renameStash",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"createTag",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"deleteTag",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"createWorktree",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"createPullRequest",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openPullRequestOnRemote",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"compareAncestryWithWorking",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"compareHeadWith",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"compareWithUpstream",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"compareWorkingWith",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openFiles",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openAllChanges",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openAllChangesWithWorking",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openRevisions",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"openOnlyChangedFiles",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"addAuthor",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"toggleColumn",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"toggleScrollMarker",1),Ae([(0,F.fF)()],GraphWebviewProvider.prototype,"setColumnMode",1)},9042:(e,t,i)=>{i.d(t,{TimelineWebviewProvider:()=>TimelineWebviewProvider});var r=i(9496),n=i(5255),s=i(8887),o=i(7462),a=i(6450),l=i(3646),c=i(9529),h=i(5148),u=i(7512),d=i(4241),p=i(9796),m=i(3105),g=i(2509),f=i(6922),w=i(5798),v=i(6260),y=i(620);const b=new w.jH("timeline/didChange"),C=new w.ke("timeline/point/open"),A=new w.ke("timeline/period/update");var P=Object.defineProperty,S=Object.getOwnPropertyDescriptor,R=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?S(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&P(t,i,s),s};class TimelineWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._context={uri:void 0,period:"3|M",etagRepositories:this.container.git.etag,etagRepository:0,etagSubscription:this.container.subscription.etag},this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.host.isEditor()?this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this)):(this.host.description="✨",this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),r.window.onDidChangeActiveTextEditor((0,p.Ds)(this.onActiveEditorChanged,250),this),this.container.events.on("file:selected",(0,p.Ds)(this.onFileSelected,250),this)))}_bootstraping=!0;_context;_pendingContext;_disposable;dispose(){this._disposable.dispose()}onReloaded(){this.notifyDidChangeState(!0)}onShowing(e,t,...i){const[n]=i;return null!=n?n instanceof r.Uri?this.updatePendingUri(n):(0,f.w8)(n)?this.updatePendingUri(n.uri):(0,y.W)(n)&&this.updatePendingContext({period:n.state.period,uri:null!=n.state.uri?r.Uri.parse(n.state.uri):void 0}):this.updatePendingEditor(r.window.activeTextEditor),e?(this._context={...this._context,...this._pendingContext},this._pendingContext=void 0):this.updateState(),!0}includeBootstrap(){return this._bootstraping=!0,this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.getState(this._context)}registerCommands(){return this.host.isEditor()?[(0,c.xR)(n.Gh.RefreshTimelinePage,(()=>this.host.refresh(!0)))]:[(0,c.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)),this),(0,c.xR)(`${this.host.id}.openInTab`,(()=>this.openInTab()),this)]}onVisibilityChanged(e){e&&(this.host.isView()&&this.updatePendingEditor(r.window.activeTextEditor),this._bootstraping&&(this._bootstraping=!1,null==this._pendingContext||!("uri"in this._pendingContext))||this.updateState())}onMessageReceived(e){switch(e.method){case C.method:(0,w.mq)(C,e,(async e=>{if(null==e.data||!e.data.selected||null==this._context.uri)return;const t=this.container.git.getRepository(this._context.uri);if(null==t)return;const i=await t.getCommit(e.data.id);null!=i&&(this.container.events.fire("commit:selected",{commit:i,interaction:"active",preserveFocus:!0,preserveVisibility:!1},{source:this.host.id}),this.container.commitDetailsView.ready||this.container.commitDetailsView.show({preserveFocus:!0},{commit:i,interaction:"active",preserveVisibility:!1}))}));break;case A.method:(0,w.mq)(A,e,(e=>{this.updatePendingContext({period:e.period})&&this.updateState(!0)}))}}onActiveEditorChanged(e){if(null!=e){if(!(0,g.PH)(e))return;this.container.git.isTrackable(e.document.uri)||(e=void 0)}this.updatePendingEditor(e)&&this.updateState()}onFileSelected(e){if(null==e.data)return;let t=e.data.uri;null!=t&&(this.container.git.isTrackable(t)||(t=void 0)),this.updatePendingUri(t)&&this.updateState()}onRepositoriesChanged(e){const t=this.updatePendingUri(this._context.uri);(this.updatePendingContext({etagRepositories:e.etag})||t)&&this.updateState()}onRepositoryChanged(e){e.changed(l.I6.Heads,l.I6.Index,l.du.Any)&&this.updatePendingContext({etagRepository:e.repository.etag})&&this.updateState()}onSubscriptionChanged(e){this.updatePendingContext({etagSubscription:e.etag})&&this.updateState()}async getState(e){const t=h.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",i=h.D.get("defaultDateShortFormat")??"short",n=e.period??"3|M",l=null!=e.uri?await o.YY.fromUri(e.uri):void 0,c=l?.repoPath;this.host.isEditor()?this.host.title=null==l?this.host.originalTitle:`${this.host.originalTitle}: ${l.fileName}`:this.host.description=l?.fileName??"✨";const u=await this.container.git.access(s.x.Timeline,c);if(null==e.uri||null==l||null==c||!1===u.allowed){const r=await this.container.git.access(s.x.Timeline,c);return{webviewId:this.host.id,timestamp:Date.now(),period:n,title:l?.relativePath,sha:l?.shortSha,uri:e.uri?.toString(),dateFormat:t,shortDateFormat:i,access:r}}const[d,p]=await Promise.all([this.container.git.getCurrentUser(c),this.container.git.getLogForFile(c,l.fsPath,{limit:0,ref:l.sha,since:D(n)?.toISOString()})]);if(null==p)return{webviewId:this.host.id,timestamp:Date.now(),dataset:[],period:n,title:l.relativePath,sha:l.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:u};let g=[...(0,m.hX)(p.commits.values(),(e=>null==e.file?.stats&&1!==(0,a.By)(e.stats?.changedFiles)))];if(0!==g.length){const t=h.D.get("visualHistory.queryLimit")??20,i=this.container.git.getRepository(e.uri),n=i?.provider.name;g.length>t&&(r.window.showWarningMessage(`Unable able to show more than the first ${t} commits for the specified time period because of ${n?`${n} `:""}rate limits.`),g=g.slice(0,20)),await Promise.allSettled(g.map((e=>e.ensureFullDetails())))}const f=d?.name?`${d.name} (you)`:"You",w=[];for(const e of p.commits.values()){const t=e.file?.stats??(1===(0,a.By)(e.stats?.changedFiles)?e.stats:void 0);w.push({author:"You"===e.author.name?f:e.author.name,additions:t?.additions,deletions:t?.deletions,commit:e.sha,date:e.date.toISOString(),message:e.message??e.summary,sort:e.date.getTime()})}return w.sort(((e,t)=>t.sort-e.sort)),{webviewId:this.host.id,timestamp:Date.now(),dataset:w,period:n,title:l.relativePath,sha:l.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:u}}updatePendingContext(e,t){const[i,r]=(0,v.OY)(this._context,this._pendingContext,e,t);return i&&(this._pendingContext=r),i}updatePendingEditor(e,t){return(null!=e||!(0,g.JM)(this._context.uri??this._pendingContext?.uri))&&(!(null!=e&&!(0,g.PH)(e))&&this.updatePendingUri(e?.document.uri,t))}updatePendingUri(e,t){let i;if(null!=e){const t=this.container.git.getRepository(e);i=t?.etag??0}else i=0;return this.updatePendingContext({uri:e,etagRepository:i},t)}_notifyDidChangeStateDebounced=void 0;updateState(e=!1){e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,p.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced())}async notifyDidChangeState(e=!1){if(this._notifyDidChangeStateDebounced?.cancel(),!e&&null==this._pendingContext)return!1;let t;null!=this._pendingContext?(t={...this._context,...this._pendingContext},this._context=t,this._pendingContext=void 0):t=this._context;const i=async()=>this.host.notify(b,{state:await this.getState(t)});return this.host.isView()?r.window.withProgress({location:{viewId:this.host.id}},i):i()}openInTab(){const e=this._context.uri;null!=e&&r.commands.executeCommand(n.Gh.ShowTimelinePage,e)}}function D(e){if("all"==e)return;const[t,i]=e.split("|");let r;switch(i){case"D":r=(0,u.IH)(new Date,{days:-parseInt(t,10)});break;case"M":r=(0,u.IH)(new Date,{months:-parseInt(t,10)});break;case"Y":r=(0,u.IH)(new Date,{years:-parseInt(t,10)});break;default:r=(0,u.IH)(new Date,{months:-3})}return r.getHours()>=12&&r.setDate(r.getDate()+1),r.setHours(0,0,0,0),r}R([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onActiveEditorChanged",1),R([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onFileSelected",1),R([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onRepositoriesChanged",1),R([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onRepositoryChanged",1),R([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onSubscriptionChanged",1),R([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"getState",1),R([(0,d.fF)()],TimelineWebviewProvider.prototype,"updateState",1),R([(0,d.fF)()],TimelineWebviewProvider.prototype,"notifyDidChangeState",1)},1907:(e,t,i)=>{i.d(t,{CH:()=>CloudWorkspace,CL:()=>h,EI:()=>r,Jv:()=>a,Pv:()=>l,U1:()=>c,XU:()=>n,Xu:()=>s,_N:()=>o,qP:()=>LocalWorkspace});var r=(e=>(e.Local="local",e.Cloud="cloud",e))(r||{}),n=(e=>(e.Disabled="disabled",e.Enabled="enabled",e.Prompt="prompt",e))(n||{});class CloudWorkspace{constructor(e,t,i,r,n,s,o,a,l,c){this.container=e,this.id=t,this.name=i,this.organizationId=r,this.provider=n,this.repoRelation=s,this.current=o,this.azureInfo=a,this._repositoryDescriptors=l,this._localPath=c,this._disposable=this.container.git.onDidChangeRepositories(this.resetRepositoriesByName,this)}type="cloud";_repositoryDescriptors;_repositoriesByName;_localPath;_disposable;dispose(){this._disposable.dispose()}get shared(){return null!=this.organizationId}get localPath(){return this._localPath}resetRepositoriesByName(){this._repositoriesByName=void 0}async getRepositoriesByName(e){return(null==this._repositoriesByName||e?.force)&&(this._repositoriesByName=await this.container.workspaces.resolveWorkspaceRepositoriesByName(this.id,{resolveFromPath:!0,usePathMapping:!0})),this._repositoriesByName}async getRepositoryDescriptors(e){return(null==this._repositoryDescriptors||e?.force)&&(this._repositoryDescriptors=await this.container.workspaces.getCloudWorkspaceRepositories(this.id),this.resetRepositoriesByName()),this._repositoryDescriptors}async getRepositoryDescriptor(e){return(await this.getRepositoryDescriptors()).find((t=>t.name===e))}addRepositories(e){null==this._repositoryDescriptors?this._repositoryDescriptors=e:this._repositoryDescriptors=this._repositoryDescriptors.concat(e),this.resetRepositoriesByName()}removeRepositories(e){null!=this._repositoryDescriptors&&(this._repositoryDescriptors=this._repositoryDescriptors.filter((t=>!e.includes(t.name))),this.resetRepositoriesByName())}setLocalPath(e){this._localPath=e}}var s=(e=>(e.GitHub="GITHUB",e.GitHubEnterprise="GITHUB_ENTERPRISE",e.GitLab="GITLAB",e.GitLabSelfHosted="GITLAB_SELF_HOSTED",e.Bitbucket="BITBUCKET",e.Azure="AZURE",e))(s||{}),o=(e=>(e.GitHub="github",e.GitHubEnterprise="github_enterprise",e.GitLab="gitlab",e.GitLabSelfHosted="gitlab_self_hosted",e.Bitbucket="bitbucket",e.Azure="azure",e))(o||{});const a={azure:"azure-devops",bitbucket:"bitbucket",github:"github",github_enterprise:"github",gitlab:"gitlab",gitlab_self_hosted:"gitlab"};var l=(e=>(e.CurrentWindow="Current Window",e.ParentFolder="Parent Folder",e))(l||{});const c=100,h=100;class LocalWorkspace{constructor(e,t,i,r,n,s){this.container=e,this.id=t,this.name=i,this.repositoryDescriptors=r,this.current=n,this._localPath=s,this._disposable=this.container.git.onDidChangeRepositories(this.resetRepositoriesByName,this)}type="local";_localPath;_repositoriesByName;_disposable;dispose(){this._disposable.dispose()}get shared(){return!1}get localPath(){return this._localPath}resetRepositoriesByName(){this._repositoriesByName=void 0}async getRepositoriesByName(e){return(null==this._repositoriesByName||e?.force)&&(this._repositoriesByName=await this.container.workspaces.resolveWorkspaceRepositoriesByName(this.id,{resolveFromPath:!0,usePathMapping:!0})),this._repositoriesByName}getRepositoryDescriptors(){return Promise.resolve(this.repositoryDescriptors)}getRepositoryDescriptor(e){return Promise.resolve(this.repositoryDescriptors.find((t=>t.name===e)))}setLocalPath(e){this._localPath=e}}},3931:(e,t,i)=>{i.d(t,{A1:()=>CommitOpenRevisionsCommandQuickPickItem,CV:()=>CommitOpenAllChangesCommandQuickPickItem,EE:()=>CommitOpenDetailsCommandQuickPickItem,Jw:()=>CommitCompareWithHEADCommandQuickPickItem,K6:()=>OpenChangedFilesCommandQuickPickItem,Lf:()=>CommitBrowseRepositoryFromHereCommandQuickPickItem,NC:()=>CommitCopyMessageQuickPickItem,OT:()=>CommitCopyIdQuickPickItem,PF:()=>CommitFilesQuickPickItem,QP:()=>CommitRestoreFileChangesCommandQuickPickItem,Wt:()=>CommitOpenRevisionCommandQuickPickItem,Y4:()=>CommitOpenAllChangesWithWorkingCommandQuickPickItem,ZO:()=>CommitOpenFileCommandQuickPickItem,aU:()=>CommitOpenChangesWithWorkingCommandQuickPickItem,do:()=>CommitApplyFileChangesCommandQuickPickItem,eG:()=>CommitOpenDirectoryCompareCommandQuickPickItem,lN:()=>CommitOpenFilesCommandQuickPickItem,lp:()=>CommitOpenChangesCommandQuickPickItem,m5:()=>CommitCompareWithWorkingCommandQuickPickItem,nl:()=>CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem,o$:()=>CommitOpenAllChangesWithDiffToolCommandQuickPickItem,rl:()=>OpenOnlyChangedFilesCommandQuickPickItem,sQ:()=>CommitOpenInGraphCommandQuickPickItem,xL:()=>CommitOpenChangesWithDiffToolCommandQuickPickItem,zr:()=>CommitFileQuickPickItem});var r=i(9496),n=i(3016),s=i(5255),o=i(963),a=i(9311),l=i(6897),c=i(9338),h=i(7881),u=i(3700),d=i(3620),p=i(9729);class CommitFilesQuickPickItem extends p.$w{constructor(e,t){super({label:e.summary,description:`${c.i.fromTemplate("${author}, ${ago}  $(git-commit)  ${id}",e)}${t?.unpublished?"  (unpublished)":""}`,detail:`${null!=t?.file?`$(file) ${(0,u.EZ)(t.file.path)}${t.file.formatStats({expand:!0,separator:", ",prefix:` ${s.NE.Dot} `})}`:`$(files) ${e.formatStats({expand:!0,separator:", ",empty:"No files changed"})}`}${null!=t?.hint?`${(0,d.vk)(s.NE.Dash,4,2,s.NE.Space)}${t.hint}`:""}`,alwaysShow:!0,picked:t?.picked??!0,buttons:[n._9,n.Nv]},void 0,void 0,{suppressKeyPress:!0}),this.commit=e}get sha(){return this.commit.sha}}class CommitFileQuickPickItem extends p.$w{constructor(e,t,i){super({label:`${(0,d.vk)((0,h.Qw)(t.status),0,2)}${(0,u.EZ)(t.path)}`,description:(0,h.OC)(t,!0),picked:i}),this.commit=e,this.file=t}get sha(){return this.commit.sha}execute(e){return l.vw(this.file,this.commit,e)}}class CommitBrowseRepositoryFromHereCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??`$(folder-opened) Browse Repository from${t?.before?" Before":""} Here${t?.openInNewWindow?" in New Window":""}`),this.commit=e,this.executeOptions=t}execute(e){return(0,a.g)(this.commit.getGitUri(),{before:this.executeOptions?.before,openInNewWindow:this.executeOptions?.openInNewWindow})}}class CommitCompareWithHEADCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(compare-changes) Compare with HEAD"),this.commit=e}execute(e){return o.W.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"HEAD")}}class CommitCompareWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(compare-changes) Compare with Working Tree"),this.commit=e}execute(e){return o.W.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"")}}class CommitCopyIdQuickPickItem extends p.$w{constructor(e,t){super(t??"$(copy) Copy SHA"),this.commit=e}execute(){return l.$H(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage("Commit SHA copied to the clipboard")}}class CommitCopyMessageQuickPickItem extends p.$w{constructor(e,t){super(t??"$(copy) Copy Message"),this.commit=e}execute(){return l.SJ(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage((this.commit.stashName?"Stash":"Commit")+" Message copied to the clipboard")}}class CommitOpenAllChangesCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes"),this.commit=e}execute(e){return l.Gp(this.commit,e)}}class CommitOpenAllChangesWithDiffToolCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes (difftool)"),this.commit=e}execute(){return l.wr(this.commit)}}class CommitOpenAllChangesWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes with Working Tree"),this.commit=e}execute(e){return l.Ou(this.commit,e)}}class CommitOpenChangesCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes"),this.commit=e,this.file=t}execute(e){return l.vw(this.file,this.commit,e)}}class CommitOpenChangesWithDiffToolCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes (difftool)"),this.commit=e,this.file=t}execute(){return l.Xy(this.file,this.commit)}}class CommitOpenChangesWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes with Working File"),this.commit=e,this.file=t}execute(e){return l.ce(this.file,this.commit,e)}}class CommitOpenDirectoryCompareCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open Directory Compare"),this.commit=e}execute(){return l.tc(this.commit)}}class CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open Directory Compare with Working Tree"),this.commit=e}execute(){return l.Os(this.commit)}}class CommitOpenDetailsCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(eye) Open Details"),this.commit=e}execute(e){return l.Fw(this.commit,{preserveFocus:e?.preserveFocus})}}class CommitOpenInGraphCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(gitlens-graph) Open in Commit Graph"),this.commit=e}execute(e){return l.GM(this.commit,{preserveFocus:e?.preserveFocus})}}class CommitOpenFilesCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(files) Open Files"),this.commit=e}execute(e){return l.aE(this.commit)}}class CommitOpenFileCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(file) Open File"),this.commit=e,this.file=t}execute(e){return l.ZB(this.file,this.commit,e)}}class CommitOpenRevisionsCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(files) Open Files at Revision"),this.commit=e}execute(e){return l.Dh(this.commit)}}class CommitOpenRevisionCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(file) Open File at Revision"),this.commit=e,this.file=t}execute(e){return l.YS(this.file,this.commit,e)}}class CommitApplyFileChangesCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"Apply Changes"),this.commit=e,this.file=t}async execute(){return l.zb(this.file,this.commit)}}class CommitRestoreFileChangesCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??{label:"Restore",description:"aka checkout"}),this.commit=e,this.file=t}execute(){return l.Hl(this.file,this.commit)}}class OpenChangedFilesCommandQuickPickItem extends p.$w{constructor(e,t){const i={uris:e.map((e=>e.uri))};super(t??"$(files) Open All Changed Files",s.Gh.OpenChangedFiles,[i])}}class OpenOnlyChangedFilesCommandQuickPickItem extends p.$w{constructor(e,t){const i={uris:e.map((e=>e.uri))};super(t??"$(files) Open Changed & Close Unchanged Files",s.Gh.OpenOnlyChangedFiles,[i])}}},9729:(e,t,i)=>{i.d(t,{$w:()=>CommandQuickPickItem,fz:()=>n,qv:()=>ActionQuickPickItem});var r=i(9496);function n(e){return{kind:r.QuickPickItemKind.Separator,label:e??""}}class CommandQuickPickItem{constructor(e,t,i,r){this.command=t,this.args=i,this.options=r,this.command=t,this.args=i,"string"==typeof e?this.label=e:Object.assign(this,e)}static fromCommand(e,t,i){return new CommandQuickPickItem("string"==typeof e?{label:e}:e,t,null==i?[]:[i])}static is(e){return e instanceof CommandQuickPickItem}label;description;detail;execute(e){if(void 0===this.command)return Promise.resolve(void 0);return r.commands.executeCommand(this.command,...this.args??[])}async onDidPressKey(e){if(this.options?.suppressKeyPress)return;const t=this.execute({preserveFocus:!0,preview:!1});this.options?.onDidPressKey?.(e,t),await t}}class ActionQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(e,void 0,void 0),this.action=t}async execute(e){return this.action(e)}}},3599:(e,t,i)=>{i.d(t,{Gy:()=>o,Xe:()=>r,fw:()=>s,wX:()=>n});var r=(e=>(e[e.Back=0]="Back",e[e.Cancel=1]="Cancel",e[e.LoadMore=2]="LoadMore",e[e.Noop=3]="Noop",e[e.RequiresVerification=4]="RequiresVerification",e[e.ExtendTrial=5]="ExtendTrial",e[e.RequiresPaidSubscription=6]="RequiresPaidSubscription",e[e.StartPreviewTrial=7]="StartPreviewTrial",e))(r||{});function n(e){return"number"==typeof e&&null!=r[e]}function s(e,t,i){let r=i?.label,n=i?.detail;if(null==r)switch(e){case 0:r="Back";break;case 1:r="Cancel";break;case 2:r="Load more";break;case 3:r="Try again";break;case 7:r="Preview Pro",n="Preview Pro for 3-days to use this on privately hosted repos";break;case 5:r="Start Free Pro Trial",n="Continue to use this on privately hosted repos, free for an additional 7 days";break;case 4:r="Resend Verification Email",n="You must verify your email before you can continue";break;case 6:r="Upgrade to Pro",n="A paid plan is required to use this on privately hosted repos"}return{label:r,description:i?.description,detail:n,alwaysShow:!0,picked:t,directive:e}}function o(e){return null!=e&&"directive"in e}},1742:(e,t,i)=>{i.d(t,{E0:()=>b,FO:()=>v,MH:()=>y,RE:()=>p,RI:()=>g,RP:()=>f,Wv:()=>GitCommandQuickPickItem,YY:()=>m,vl:()=>w});var r=i(2967),n=i(5255),s=i(963),o=i(3148),a=i(6450),l=i(4321),c=i(3050),h=i(7512),u=i(3620),d=i(9729);class GitCommandQuickPickItem extends d.$w{constructor(e,t){super(e,n.Gh.GitCommands,[t],{suppressKeyPress:!0})}executeSteps(e){return(0,r.I)(s.W.instance,this.args[0],e)}}async function p(e,t,i){let r="";if(!0===i?.type?r=!0===i.current&&e.current?"current branch":"branch":"remote"===i?.type?e.remote&&(r="remote branch"):!0===i?.current&&e.current&&(r="current branch"),i?.status&&!e.remote&&null!=e.upstream){let t=n.NE.Dash;if(e.upstream.missing)t=n.NE.Warning;else{const i=await e.getRemote();if(null!=i){let e,r;for(const{type:t}of i.urls)if(t===c.XG.Fetch){if(e=!0,r)break}else if(t===c.XG.Push&&(r=!0,e))break;e&&r?t=n.NE.ArrowsRightLeft:r?t=n.NE.ArrowRight:e&&(t=n.NE.ArrowLeft)}}const i=`${e.getTrackingStatus({suffix:`${n.NE.Space} `})}${t}${n.NE.Space} ${e.upstream.name}`;r=`${r?`${r}${n.NE.Space.repeat(2)}${i}`:i}`}i?.ref&&(e.sha&&(r=r?`${r} $(git-commit)${n.NE.Space}${(0,l.zL)(e.sha)}`:`$(git-commit)${n.NE.Space}${(0,l.zL)(e.sha)}`),void 0!==e.date&&(r=r?`${r}${(0,u.vk)(n.NE.Dot,2,2)}${e.formattedDate}`:e.formattedDate));const s=i?.checked||null==i?.checked&&"checkmark"===i?.current&&e.current;return{label:`$(git-branch)${n.NE.Space}${e.starred?`$(star-full)${n.NE.Space}`:""}${e.name}${s?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t??e.current,item:e,current:e.current,ref:e.name,remote:e.remote}}function m(e,t,i){if((0,a.G2)(e)){const r=null==e.number?"":`${e.number}: `;if(i?.compact){return{label:`${i.icon?`$(archive)${n.NE.Space}`:""}${r}${e.summary}`,description:`${e.formattedDate}${(0,u.vk)(n.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}}return{label:`${i?.icon?`$(archive)${n.NE.Space}`:""}${r}${e.summary}`,description:"",detail:`${n.NE.Space.repeat(2)}${e.formattedDate}${(0,u.vk)(n.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}if(i?.compact){return{label:`${i.icon?`$(git-commit)${n.NE.Space}`:""}${e.summary}`,description:`${e.author.name}, ${e.formattedDate}${(0,u.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,u.vk)(n.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}}return{label:`${i?.icon?`$(git-commit)${n.NE.Space}`:""}${e.summary}`,description:"",detail:`${n.NE.Space.repeat(2)}${e.author.name}, ${e.formattedDate}${(0,u.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,u.vk)(n.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}function g(e,t,i){return{label:e.label,description:e.email,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}function f(e,t,i,r){if(""===e)return{label:(r?.icon?`$(file-directory)${n.NE.Space}`:"")+"Working Tree",description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:(0,l.xB)(e,t,{refType:"revision",name:"Working Tree"}),current:!1,ref:e,remote:!1};if("HEAD"===e)return{label:(r?.icon?`$(git-branch)${n.NE.Space}`:"")+"HEAD",description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:(0,l.xB)(e,t,{refType:"revision",name:"HEAD"}),current:!1,ref:e,remote:!1};let s;if("string"==typeof e?s=(0,l.xB)(e,t):(s=e,e=s.ref),(0,l.yk)(e))return{label:`Range ${s.name}`,description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:s,current:!1,ref:e,remote:!1};return{label:`Commit ${s.name}`,description:r?.ref?`$(git-commit)${n.NE.Space}${e}`:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:s,current:!1,ref:e,remote:!1}}function w(e,t,i){let r="";if(i?.type&&(r="remote"),i?.upstream){const t=(0,c.jv)(e);r=r?`${r}${(0,u.vk)(n.NE.Dot,2,2)}${t}`:t}return{label:`$(cloud)${n.NE.Space}${e.name}${i?.checked?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}async function v(e,t,i){let r;(i?.branch||i?.status)&&(r=await e.getStatus());let s="";if(i?.branch&&null!=r&&(s=r.branch),i?.status&&null!=r){let e="";0!==r.files.length&&(e=r.getFormattedDiffStatus({compact:!0,prefix:(0,u.vk)(n.NE.Dot,2,2)}));const t=`${r.getUpstreamStatus({prefix:s?`${n.NE.Space} `:""})}${e}`;t&&(s=`${s?`${s}${t}`:t}`)}if(i?.fetched){const t=await e.getLastFetched();if(0!==t){const e=`Last fetched ${(0,h.Zh)(new Date(t))}`;s=`${s?`${s}${(0,u.vk)(n.NE.Dot,2,2)}${e}`:e}`}}return{label:e.formattedName,description:s,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,repoPath:e.path}}function y(e,t,i){let r="";if(i?.type&&(r="tag"),i?.ref&&(r=`${r}${(0,u.vk)("$(git-commit)",r?2:0,1)}${(0,l.zL)(e.sha)}`,r=`${r?`${r}${(0,u.vk)(n.NE.Dot,2,2)}`:""}${e.formattedDate}`),i?.message){const t=(0,o.X)(e.message);r=r?`${r}${(0,u.vk)(n.NE.Dot,2,2)}${t}`:t}return{label:`$(tag)${n.NE.Space}${e.name}${i?.checked?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,current:!1,ref:e.name,remote:!1}}function b(e,t,i,r){let s,o,a="";switch(r?.type&&(a="worktree"),null!=r?.status&&(a+=r.status.hasChanges?(0,u.vk)(`Uncommited changes (${r.status.getFormattedDiffStatus()})`,a?2:0,0):(0,u.vk)("No changes",a?2:0,0)),e.type){case"bare":o="(bare)",s="$(folder)";break;case"branch":o=e.branch,s="$(git-branch)";break;case"detached":o=(0,l.zL)(e.sha),s="$(git-commit)"}return{label:`${s}${n.NE.Space}${o}${r?.checked?(0,u.vk)("$(check)",2):""}`,description:a,detail:r?.path?i?`${n.NE.Warning} Unable to locate $(folder) ${e.friendlyPath}`:`In $(folder) ${e.friendlyPath}`:void 0,alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:t,item:e,opened:e.opened,hasChanges:r?.status?.hasChanges}}},3636:(e,t,i)=>{i.d(t,{H:()=>p,V:()=>m});var r=i(9496),n=i(6270),s=i(5255),o=i(963),a=i(3401),l=i(6897),c=i(6713),h=i(4321),u=i(2509),d=i(1742),p=(e=>(e[e.Branches=1]="Branches",e[e.Tags=2]="Tags",e[e.WorkingTree=4]="WorkingTree",e[e.HEAD=8]="HEAD",e[e.BranchesAndTags=3]="BranchesAndTags",e))(p||{});async function m(e,t,i,p={}){const m=r.window.createQuickPick();m.ignoreFocusOut=(0,u.hE)(),m.title=t,m.placeholder=null!=p.allowEnteringRefs?`${i}${s.NE.Space.repeat(3)}(or enter a reference using #)`:i,m.matchOnDescription=!0;const g=[];let f;null!=p?.keys&&0!==p.keys.length&&null!==p?.onDidPressKey&&(f=o.W.instance.keyboard.createScope(Object.fromEntries(p.keys.map((e=>[e,{onDidPressKey:e=>{0!==m.activeItems.length&&p.onDidPressKey(e,m)}}])))),f.start(),g.push(f));const w=new r.CancellationTokenSource;let v,y=async function(e,{picked:t,filter:i,include:r,sort:s}){r=r??3;const a=await(0,n.B$)(o.W.instance.git.getRepository(e),r?["branches","tags"]:r?["branches"]:r?["tags"]:[],{buttons:[n.Nv],filter:i,picked:t,sort:s??{branches:{current:!1},tags:{}}});if(t){const e=a.findIndex((e=>e.ref===t));-1!==e&&a.unshift(...a.splice(e,1))}8&r&&a.unshift((0,d.RP)("HEAD",e,void 0,{icon:!0}));4&r&&a.unshift((0,d.RP)("",e,void 0,{icon:!0}));return a}(e,p);p.autoPick&&(y=y.then((e=>(e.length<=1&&(v=e[0],w.cancel()),e)))),m.busy=!0,m.show();const b=(0,n.v$)(o.W.instance.git.getRepository(e),{buttons:[n.Nv],ranges:p?.allowEnteringRefs&&"boolean"!=typeof p.allowEnteringRefs?p.allowEnteringRefs.ranges:void 0});m.items=await y,m.busy=!1;try{let e=await new Promise((e=>{g.push(w.token.onCancellationRequested((()=>m.hide())),m.onDidHide((()=>e(void 0))),m.onDidAccept((()=>{0!==m.activeItems.length&&e(m.activeItems[0])})),m.onDidChangeValue((async e=>{p.allowEnteringRefs&&(await b(m,e)||(m.items=await y)),null!=f&&(0!==e.length?await f.pause(["left","right"]):await f.resume())})),m.onDidTriggerItemButton((({button:e,item:{item:t}})=>{e===n.Nv&&((0,h.UR)(t)?(0,a.ay)(t,{select:!0,expand:!0}):(0,h.gA)(t)?(0,c.ay)(t,{select:!0,expand:!0}):(0,h.FT)(t)&&(0,l.Fw)(t,{pin:!1,preserveFocus:!0}))})))}));if(null==e&&null!=v&&(e=v),null==e)return;return e.item}finally{m.dispose(),g.forEach((e=>{e.dispose()}))}}},5009:(e,t,i)=>{i.d(t,{az:()=>OpenRemoteResourceCommandQuickPickItem,cY:()=>p,eO:()=>CopyRemoteResourceCommandQuickPickItem});var r=i(9496),n=i(3016),s=i(5255),o=i(963),a=i(5367),l=i(3050),c=i(6503),h=i(7469),u=i(2509),d=i(9729);class ConfigureCustomRemoteProviderCommandQuickPickItem extends d.$w{constructor(){super({label:"See how to configure a custom remote provider..."})}async execute(){await r.env.openExternal(r.Uri.parse("https://help.gitkraken.com/gitlens/gitlens-settings/#remote-provider-integration-settings"))}}class CopyOrOpenRemoteCommandQuickPickItem extends d.$w{constructor(e,t,i,r){super({label:`$(repo) ${e.provider.path}`,description:e.name,buttons:r}),this.remote=e,this.resource=t,this.clipboard=i}async execute(){let e=this.resource;if(e.type===c.J.Comparison)(0,a.Lo)(e.base)===this.remote.name&&(e={...e,base:(0,a.S3)(e.base)}),(0,a.Lo)(e.compare)===this.remote.name&&(e={...e,compare:(0,a.S3)(e.compare)});else if(e.type===c.J.CreatePullRequest){let t=e.base.branch;if(null==t&&(t=await o.W.instance.git.getDefaultBranchName(this.remote.repoPath,this.remote.name),null==t&&this.remote.hasRichProvider())){const e=await(this.remote.provider.getDefaultBranch?.());t=e?.name}e={...e,base:{branch:t,remote:{path:this.remote.path,url:this.remote.url}}}}else if(e.type===c.J.File&&null!=e.branchOrTag&&("bitbucket"===this.remote.provider.id||"bitbucket-server"===this.remote.provider.id)){const{branchOrTag:t}=e,[i,r]=await Promise.allSettled([o.W.instance.git.getBranches(this.remote.repoPath,{filter:e=>e.name===t||e.getNameWithoutRemote()===t}),o.W.instance.git.getTags(this.remote.repoPath,{filter:e=>e.name===t})]),n=(0,h.Sb)(i)?.values[0]?.sha??(0,h.Sb)(r)?.values[0]?.sha;n&&(e={...e,type:c.J.Revision,sha:n})}await(this.clipboard?this.remote.provider.copy(e):this.remote.provider.open(e))}setAsDefault(){return this.remote.setAsDefault(!0)}}class CopyRemoteResourceCommandQuickPickItem extends d.$w{constructor(e,t){const i=l.ss.getHighlanderProviders(e),r={resource:t,remotes:e,clipboard:!0};super(`$(copy) Copy Link to ${(0,c.C)(t)} for ${i?.length?i[0].name:"Remote"}${1===i?.length?"":s.NE.Ellipsis}`,s.Gh.OpenOnRemote,[r])}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage("URL copied to the clipboard")}}class OpenRemoteResourceCommandQuickPickItem extends d.$w{constructor(e,t){const i=l.ss.getHighlanderProviders(e),r={resource:t,remotes:e,clipboard:!1};super(`$(link-external) Open ${(0,c.C)(t)} on ${1===i?.length?i[0].name:`${i?.length?i[0].name:"Remote"}${s.NE.Ellipsis}`}`,s.Gh.OpenOnRemote,[r])}}async function p(e,t,i,s,o){const{autoPick:a,clipboard:l,setDefault:c}={autoPick:!1,clipboard:!1,setDefault:!0,...o};let h;if(0===s.length)h=[new ConfigureCustomRemoteProviderCommandQuickPickItem],t="No auto-detected or configured remote providers found";else{if("default"===a&&s.length>1){const e=s.find((e=>e.default));null!=e&&(s=[e])}h=s.map((e=>new CopyOrOpenRemoteCommandQuickPickItem(e,i,l,c?[n.ip]:void 0)))}if(a&&1===s.length)return h[0];const d=r.window.createQuickPick();d.ignoreFocusOut=(0,u.hE)();const p=[];try{const i=await new Promise((i=>{p.push(d.onDidHide((()=>i(void 0))),d.onDidAccept((()=>{0!==d.activeItems.length&&i(d.activeItems[0])})),d.onDidTriggerItemButton((async e=>{e.button===n.ip&&e.item instanceof CopyOrOpenRemoteCommandQuickPickItem&&(await e.item.setAsDefault(),i(e.item))}))),d.title=e,d.placeholder=t,d.matchOnDetail=!0,d.items=h,d.show()}));if(null==i)return;return i}finally{d.dispose(),p.forEach((e=>{e.dispose()}))}}},635:(e,t,i)=>{i.d(t,{E2:()=>d,hM:()=>h,rf:()=>p,vJ:()=>u});var r=i(9496),n=i(963),s=i(2800),o=i(3105),a=i(2509),l=i(9729),c=i(1742);async function h(e,t,i,r,s){let o=n.W.instance.git.getBestRepository(e,t);if(null!=o&&null!=s?.filter&&(await s.filter(o)||(o=void 0)),null!=o)return o;const a=await d(i,r,s);if(!(a instanceof l.$w))return a?.item;await a.execute()}async function u(e,t,i,r){let s;if(s=null==i?n.W.instance.git.highlander:await n.W.instance.git.getOrOpenRepository(i),null!=s&&null!=r?.filter&&(await r.filter(s)||(s=void 0)),null!=s)return s;const o=await d(e,t,r);if(!(o instanceof l.$w))return o?.item;await o.execute()}async function d(e,t="Choose a repository",i){let l;if(null==i||Array.isArray(i)||null!=i.filter||(i=void 0),null==i||Array.isArray(i))l=await Promise.all([...(0,o.UI)(i??n.W.instance.git.openRepositories,(e=>(0,c.FO)(e,void 0,{branch:!0,status:!0})))]);else{const{filter:e}=i;l=await(0,s.sj)(n.W.instance.git.openRepositories,(async t=>await e(t)?(0,c.FO)(t,void 0,{branch:!0,status:!0}):void 0))}if(0===l.length)return;const h=r.window.createQuickPick();h.ignoreFocusOut=(0,a.hE)();const u=[];try{const i=await new Promise((i=>{u.push(h.onDidHide((()=>i(void 0))),h.onDidAccept((()=>{0!==h.activeItems.length&&i(h.activeItems[0])}))),h.title=e,h.placeholder=t,h.matchOnDescription=!0,h.matchOnDetail=!0,h.items=l,h.show()}));if(null==i)return;return i}finally{h.dispose(),u.forEach((e=>{e.dispose()}))}}async function p(e,t="Choose a repository",i){let l;if(null==i||Array.isArray(i)||null!=i.filter||(i=void 0),null==i||Array.isArray(i))l=await Promise.all([...(0,o.UI)(i??n.W.instance.git.openRepositories,(e=>(0,c.FO)(e,void 0,{branch:!0,status:!0})))]);else{const{filter:e}=i;l=await(0,s.sj)(n.W.instance.git.openRepositories,(async t=>await e(t)?(0,c.FO)(t,void 0,{branch:!0,status:!0}):void 0))}if(0===l.length)return[];const h=r.window.createQuickPick();h.ignoreFocusOut=(0,a.hE)();const u=[];try{const i=await new Promise((i=>{u.push(h.onDidHide((()=>i(void 0))),h.onDidAccept((()=>i(h.selectedItems)))),h.title=e,h.placeholder=t,h.matchOnDescription=!0,h.matchOnDetail=!0,h.items=l,h.canSelectMany=!0,h.selectedItems=l,h.show()}));return i??[]}finally{h.dispose(),u.forEach((e=>{e.dispose()}))}}},2133:(e,t,i)=>{i.d(t,{YW:()=>l,x8:()=>Repositories});var r=i(429),n=i(5255),s=i(3700),o=i(1526);const a=47;function l(e){const{path:t}=c(e);return t}function c(e){let t;switch(e.scheme.toLowerCase()){case n.sN.File:return t=(0,s.AH)(e.fsPath),{path:t,ignoreCase:!r.IJ};case n.sN.Git:case n.sN.GitLens:return t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!r.IJ};case n.sN.Virtual:case n.sN.GitHub:{t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1);const i=e.authority?.split("+",1)[0];return{path:i?`${i}/${t}`:t,ignoreCase:!1}}case n.sN.Vsls:case n.sN.VslsScc:return t=(0,s.IC)(e.path),t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!1};case n.sN.PRs:{t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1);const i=e.authority?.split("+",1)[0];return i===n.sN.GitHub?{path:i?`${i}/${t}`:t,ignoreCase:!1}:{path:t,ignoreCase:!r.IJ}}default:return t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!1}}}class Repositories{_trie;_count=0;constructor(){this._trie=new o.QF(c)}get count(){return this._count}add(e){const t=this._trie.set(e.uri,e);return t&&this._count++,t}clear(){this._count=0,this._trie.clear()}forEach(e,t){for(const i of this._trie.getDescendants())e.call(t,i)}get(e){return this._trie.get(e)}getClosest(e){return this._trie.getClosest(e)}has(e){return this._trie.has(e)}remove(e,t=!0){const i=this._trie.delete(e,t);return i&&this._count--,i}values(){return this._trie.getDescendants()}}},4968:(e,t,i)=>{i.d(t,{Cx:()=>n,EE:()=>d,PY:()=>u,RE:()=>o,Z1:()=>g,_n:()=>w,aG:()=>m,dz:()=>f,fV:()=>a,gA:()=>v,jc:()=>s,kU:()=>h,tL:()=>l,ww:()=>p});var r=i(7512),n=(e=>(e.Free="free",e.FreePlus="free+",e.Pro="pro",e.Teams="teams",e.Enterprise="enterprise",e))(n||{}),s=(e=>(e[e.VerificationRequired=-1]="VerificationRequired",e[e.Free=0]="Free",e[e.FreeInPreviewTrial=1]="FreeInPreviewTrial",e[e.FreePreviewTrialExpired=2]="FreePreviewTrialExpired",e[e.FreePlusInTrial=3]="FreePlusInTrial",e[e.FreePlusTrialExpired=4]="FreePlusTrialExpired",e[e.Paid=5]="Paid",e))(s||{});function o(e){const{account:t,plan:{actual:i,effective:r},previewTrial:n}=e;if(!1===t?.verified)return-1;if(i.id===r.id)switch(r.id){case"free":return null==n?0:2;case"free+":return 4;case"pro":case"teams":case"enterprise":return 5}switch(r.id){case"free":return null==n?0:1;case"free+":return 4;case"pro":return"free"===i.id?1:3;case"teams":case"enterprise":return 5}}function a(e,t,i,r,n,s=!1){return{id:e,name:l(e),bundle:t,cancelled:s,organizationId:i,startedOn:(r??new Date).toISOString(),expiresOn:null!=n?n.toISOString():void 0}}function l(e){switch(e){case"free+":return"GitLens Free";case"pro":return"GitLens Pro";case"teams":return"GitLens Teams";case"enterprise":return"GitLens Enterprise";default:return"GitLens"}}const c=new Map([[void 0,-1],["free",0],["free+",1],["pro",2],["teams",3],["enterprise",4]]);function h(e){return c.get(e)??-1}function u(e,t){return d(e.plan.effective.expiresOn,t)}function d(e,t){return null!=e?(0,r.hM)(Date.now(),new Date(e),t):void 0}function p(e){return m(e.plan.effective.id)}function m(e){return"free"!==e&&"free+"!==e}function g(e){const t=u(e);return null!=t&&t<=0}function f(e){return e.plan.actual.id!==e.plan.effective.id}function w(e){if(null==e.account||!f(e)||!1===v(e))return!1;const t=u(e);return null==t||t<=0}function v(e){const t=d(e.previewTrial?.expiresOn);return null!=t?t<=0:void 0}},2800:(e,t,i)=>{i.d(t,{DZ:()=>s,GI:()=>d,Mo:()=>p,Qy:()=>h,XI:()=>c,h8:()=>g,jV:()=>u,qr:()=>a,sj:()=>o,uw:()=>f,vM:()=>l,zx:()=>n});var r=i(3105);function n(e){return null==e?void 0:Array.isArray(e)?e:[e]}function s(e,t){let i=0;return e.reduce(((e,r)=>{const n=t(r,i++);return null!=n&&e.push(n),e}),[])}async function o(e,t){const i=[];for(const r of e){const e=await t(r);null!=e&&i.push(e)}return i}function a(e,t){let i=e.length;for(;i--;)if(t(e[i],i,e))return i;return-1}function l(e,t){return e.reduce(((e,i)=>{const r=t(i),n=e[r];return void 0===n?e[r]=[i]:n.push(i),e}),Object.create(null))}function c(e,t){return e.reduce(((e,i)=>{const r=t(i),n=e.get(r);return void 0===n?e.set(r,[i]):n.push(i),e}),new Map)}function h(e,t,i){return e.reduce(((e,r)=>{const n=i(r);if(null!=n){const i=t(r),s=e.get(i);void 0===s?e.set(i,[n]):s.push(n)}return e}),new Map)}function u(e,t){const i=[],r=e.length;e:for(const n of e[0]){let s=r-1;for(;s--;)if(!e[s+1].some((e=>t(e,n))))break e;i.some((e=>t(e,n)))||i.push(n)}return i}function d(e){return"string"==typeof e[0]}function p(e,t,i,r=!1,n){const s={name:"",relativePath:"",children:new Map,descendants:[]};let o=e.reduce(((e,r)=>{let n=e,s="";for(const e of t(r)){s=i(s,e),void 0===n.children&&(n.children=new Map);let t=n.children.get(e);void 0===t&&(t={name:e,relativePath:s,parent:n,children:void 0,descendants:void 0},n.children.set(e,t)),void 0===n.descendants&&(n.descendants=[]),n.descendants.push(r),n=t}return n.value=r,e}),s);return r&&(o=m(o,i,!0,n)),o}function m(e,t,i=!0,r){if(void 0===e.children)return e;const n=[...e.children.values()];for(const e of n)m(e,t,!1,r);if(!i&&1===n.length){const i=n[0];(void 0===i.value||r?.(i.value))&&(e.name=t(e.name,i.name),e.relativePath=i.relativePath,e.children=i.children,e.descendants=i.descendants,e.value=i.value)}return e}function g(e,t){return(0,r.v_)(new Set(e),t)}function f(e,t,i){return[...e.reduce(((e,r)=>{const n=t(r),s=e.get(n);if(void 0===s)e.set(n,r);else{const t=i(s,r);void 0!==t&&e.set(n,t)}return e}),new Map).values()]}},9529:(e,t,i)=>{i.d(t,{$$:()=>u,P0:()=>g,SI:()=>p,WD:()=>l,Zv:()=>v,_N:()=>d,b2:()=>y,dO:()=>w,fA:()=>m,j$:()=>f,vg:()=>h,xR:()=>c});var r=i(9496),n=i(5255),s=i(963),o=i(9701);const a=[];function l(){return e=>{a.push(e)}}function c(e,t,i){return r.commands.registerCommand(e,(function(...i){s.W.instance.telemetry.sendEvent("command",{command:e}),t.call(this,...i)}),i)}function h(e,t,i){return r.commands.registerCommand(e,(function(...i){s.W.instance.telemetry.sendEvent("command",{command:e,webview:(0,o.s4)(i[0])?i[0].webview:"<missing>"}),t.call(this,...i)}),i)}function u(e){return a.map((t=>new t(e)))}function d(e){return e}function p(e,t){return r.commands.executeCommand(`${n.Gh.ActionPrefix}${e}`,{...t,type:e})}function m(e,t,...i){return{command:e,title:t,arguments:i}}function g(e,...t){return r.commands.executeCommand(e,...t)}function f(e,t,...i){return{command:e,title:t,arguments:i}}function w(e,...t){return"setContext"!=e&&"vscode.executeDocumentSymbolProvider"!==e&&s.W.instance.telemetry.sendEvent("command/core",{command:e}),r.commands.executeCommand(e,...t)}function v(e,...t){return s.W.instance.telemetry.sendEvent("command/core",{command:e}),r.commands.executeCommand(e,...t)}function y(e,t,i){return r.commands.executeCommand(e,t,i)}},4298:(e,t,i)=>{i.d(t,{n:()=>r});class Comparer{}new class TextEditorComparer extends Comparer{equals(e,t,i={usePosition:!1}){return e===t||null!=e&&null!=t&&((!i.usePosition||e.viewColumn===t.viewColumn)&&e.document===t.document)}};const r=new class UriComparer extends Comparer{equals(e,t,i={exact:!1}){return e===t||null!=e&&null!=t&&(i.exact?e.toString()===t.toString():e.scheme===t.scheme&&e.fsPath===t.fsPath)}}},5148:(e,t,i)=>{i.d(t,{D:()=>o,V:()=>Configuration});var r=i(9496),n=i(5255),s=i(9967);class Configuration{static configure(e){e.subscriptions.push(r.workspace.onDidChangeConfiguration(o.onConfigurationChanged,o))}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeAny=new r.EventEmitter;get onDidChangeAny(){return this._onDidChangeAny.event}onConfigurationChanged(e){this._onDidChangeAny.fire(e),e.affectsConfiguration(n.m1)&&(null!=this._overrides?.onDidChange&&(e=this._overrides.onDidChange(e)),this._onDidChange.fire(e))}_overrides;applyOverrides(e){this._overrides=e}clearOverrides(){null!=this._overrides&&(this._overrides.get=void 0,this._overrides.getAll=void 0,queueMicrotask((()=>this._overrides=void 0)))}get(e,t,i,s){const o=void 0===i?r.workspace.getConfiguration(n.m1,t).get(e):r.workspace.getConfiguration(n.m1,t).get(e,i);return s||null==this._overrides?.get?o:this._overrides.get(e,o)}getAll(e){const t=r.workspace.getConfiguration().get(n.m1);return e||null==this._overrides?.getAll?t:this._overrides.getAll(t)}getAny(e,t,i){return void 0===i?r.workspace.getConfiguration(void 0,t).get(e):r.workspace.getConfiguration(void 0,t).get(e,i)}changed(e,t,i){return null==e||(Array.isArray(t)?t.some((t=>e.affectsConfiguration(`${n.m1}.${t}`,i))):e.affectsConfiguration(`${n.m1}.${t}`,i))}changedAny(e,t,i){return null==e||(Array.isArray(t)?t.some((t=>e.affectsConfiguration(t,i))):e.affectsConfiguration(t,i))}inspect(e,t){return r.workspace.getConfiguration(n.m1,t).inspect(void 0===e?n.m1:e)}inspectAny(e,t){return r.workspace.getConfiguration(void 0,t).inspect(e)}isUnset(e,t){const i=this.inspect(e,t);return void 0===i.workspaceFolderValue&&(void 0===i.workspaceValue&&void 0===i.globalValue)}async migrate(e,t,i){const n=this.inspect(e);if(void 0===n)return!1;let s=!1;return void 0!==n.globalValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(n.globalValue):n.globalValue,r.ConfigurationTarget.Global),s=!0),void 0!==n.workspaceValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceValue):n.workspaceValue,r.ConfigurationTarget.Workspace),s=!0),void 0!==n.workspaceFolderValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceFolderValue):n.workspaceFolderValue,r.ConfigurationTarget.WorkspaceFolder),s=!0),s||void 0===i.fallbackValue||(await this.update(t,i.fallbackValue,r.ConfigurationTarget.Global),s=!0),s}async migrateIfMissing(e,t,i){const n=this.inspect(e);if(void 0===n)return;const s=this.inspect(t);void 0!==n.globalValue&&void 0===s?.globalValue&&await this.update(t,null!=i.migrationFn?i.migrationFn(n.globalValue):n.globalValue,r.ConfigurationTarget.Global),void 0!==n.workspaceValue&&void 0===s?.workspaceValue&&await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceValue):n.workspaceValue,r.ConfigurationTarget.Workspace),void 0!==n.workspaceFolderValue&&void 0===s?.workspaceFolderValue&&await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceFolderValue):n.workspaceFolderValue,r.ConfigurationTarget.WorkspaceFolder)}matches(e,t,i){return e===t}name(e){return e}update(e,t,i){return r.workspace.getConfiguration(n.m1).update(e,t,i)}updateAny(e,t,i,n){return r.workspace.getConfiguration(void 0,i===r.ConfigurationTarget.Global?void 0:n).update(e,t,i)}updateEffective(e,t){const i=this.inspect(e);return void 0!==i.workspaceFolderValue?t===i.workspaceFolderValue?Promise.resolve(void 0):this.update(e,t,r.ConfigurationTarget.WorkspaceFolder):void 0!==i.workspaceValue?t===i.workspaceValue?Promise.resolve(void 0):this.update(e,t,r.ConfigurationTarget.Workspace):i.globalValue===t||void 0===i.globalValue&&t===i.defaultValue?Promise.resolve(void 0):this.update(e,(0,s.wy)(t,i.defaultValue)?void 0:t,r.ConfigurationTarget.Global)}}const o=new Configuration},2061:(e,t,i)=>{i.d(t,{fw:()=>l,v:()=>c,ve:()=>a});var r=i(9496),n=i(9529);const s=new Map,o=new r.EventEmitter,a=o.event;function l(e,t){return s.get(e)??t}async function c(e,t){s.set(e,t),await(0,n.dO)("setContext",e,t),o.fire(e)}},7512:(e,t,i)=>{i.d(t,{Cz:()=>d,IH:()=>p,Zh:()=>m,hM:()=>f,p6:()=>g});const r=/(?<literal>\[.*?\])|(?<year>YYYY|YY)|(?<month>M{1,4})|(?<day>Do|DD?)|(?<weekday>d{2,4})|(?<hour>HH?|hh?)|(?<minute>mm?)|(?<second>ss?)|(?<fractionalSecond>SSS)|(?<dayPeriod>A|a)|(?<timeZoneName>ZZ?)/g,n=/(?<dateStyle>full|long|medium|short)(?:\+(?<timeStyle>full|long|medium|short))?/,s=[["year",629856e5,31536e6,"yr"],["month",2628e6,2628e6,"mo"],["week",6048e5,6048e5,"wk"],["day",864e5,864e5,"d"],["hour",36e5,36e5,"h"],["minute",6e4,6e4,"m"],["second",1e3,1e3,"s"]];let o;const a=new Map;let l,c,h;const u=new Map;function d(e){l="string"==typeof e?"system"===e||0===e.trim().length?void 0:[e]:e??void 0,c=void 0,h=void 0,a.clear(),u.clear(),o=void 0}function p(e,t){const i=new Date(e.getTime());for(const[e,r]of Object.entries(t))if(r)switch(e){case"years":i.setFullYear(i.getFullYear()+r);break;case"months":i.setMonth(i.getMonth()+r);break;case"days":i.setDate(i.getDate()+r);break;case"hours":i.setHours(i.getHours()+r);break;case"minutes":i.setMinutes(i.getMinutes()+r);break;case"seconds":i.setSeconds(i.getSeconds()+r)}return i}function m(e,t){const i=("number"==typeof e?e:e.getTime())-(new Date).getTime();for(const[e,r,n,a]of s){const s=Math.abs(i);if(s>=r||1e3===r){if(t){if(null==o&&(null!=h?o=h.resolvedOptions().locale:null!=c?o=c.resolvedOptions().locale:(h=new Intl.RelativeTimeFormat(l,{localeMatcher:"best fit",numeric:"always",style:"narrow"}),o=h.resolvedOptions().locale)),"en"===o||o?.startsWith("en-")){return`${Math.round(s/n)}${a}`}return null==h&&(h=new Intl.RelativeTimeFormat(l,{localeMatcher:"best fit",numeric:"always",style:"narrow"})),h.format(Math.round(i/n),e)}return null==c&&(c=new Intl.RelativeTimeFormat(l,{localeMatcher:"best fit",numeric:"auto",style:"long"})),c.format(Math.round(i/n),e)}}return""}function g(e,t,i,s=!0){const o=`${i??""}:${t=t??void 0}`;let c=a.get(o);if(null==c){const e=function(e){if(null==e)return{localeMatcher:"best fit",dateStyle:"full",timeStyle:"short"};const t=n.exec(e);if(null!=t?.groups){const{dateStyle:e,timeStyle:i}=t.groups;return{localeMatcher:"best fit",dateStyle:e||"full",timeStyle:i||void 0}}const i={localeMatcher:"best fit"};for(const{groups:t}of e.matchAll(r))if(null!=t)for(const e in t){const r=t[e];if(null!=r)switch(e){case"year":i.year=4===r.length?"numeric":"2-digit";break;case"month":switch(r.length){case 4:i.month="long";break;case 3:i.month="short";break;case 2:i.month="2-digit";break;case 1:i.month="numeric"}break;case"day":i.day="DD"===r?"2-digit":"numeric";break;case"weekday":switch(r.length){case 4:i.weekday="long";break;case 3:i.weekday="short";break;case 2:i.weekday="narrow"}break;case"hour":i.hour=2===r.length?"2-digit":"numeric",i.hour12="hh"===r||"h"===r;break;case"minute":i.minute=2===r.length?"2-digit":"numeric";break;case"second":i.second=2===r.length?"2-digit":"numeric";break;case"fractionalSecond":i.fractionalSecondDigits=3;break;case"dayPeriod":i.dayPeriod="narrow",i.hour12=!0,i.hourCycle="h12";break;case"timeZoneName":i.timeZoneName=2===r.length?"long":"short"}}return i}(t);let h;h=null==i?l:"system"===i?void 0:[i],c=new Intl.DateTimeFormat(h,e),s&&a.set(o,c)}if(null==t||n.test(t))return c.format(e);function h(e){const t=`${i??""}:time:${e}`;let r=a.get(t);if(null==r){const n={localeMatcher:"best fit",timeStyle:e};let o;o=null==i?l:"system"===i?void 0:[i],r=new Intl.DateTimeFormat(o,n),s&&a.set(t,r)}return r}const u=c.formatToParts(e);return t.replace(r,((t,i,r,n,s,o,a,l,c,d,p,m,g,f,w)=>{if(null!=i)return i.substring(1,i.length-1);for(const t in w){const i=w[t];if(null==i)continue;const r=u.find((e=>e.type===t));if("Do"===i&&"day"===r?.type)return v(Number(r.value));if("a"===i&&"dayPeriod"===r?.type){const t=h("short").formatToParts(e).find((e=>"dayPeriod"===e.type));return` ${(t??r)?.value??""}`}return r?.value??""}return""}))}function f(e,t,i){const r=("number"==typeof t?t:t.getTime())-("number"==typeof e?e:e.getTime());switch(i){case"days":return Math.floor(r/864e5);case"hours":return Math.floor(r/36e5);case"minutes":return Math.floor(r/6e4);case"seconds":return Math.floor(r/1e3);default:return r}}const w=["th","st","nd","rd"];function v(e){const t=e%100;return`${e}${w[(t-20)%10]??w[t]??w[0]}`}},5432:(e,t,i)=>{i.d(t,{H:()=>s});var r=i(7469),n=i(9610);function s(e){return(t,i,s)=>{let o;if("function"==typeof s.value?o=s.value:"function"==typeof s.get&&(o=s.get),null==o)throw new Error("Not supported");const a=`$gate$${i}`;s.value=function(...t){const i=(0,n.S)(a,e,...t);Object.prototype.hasOwnProperty.call(this,i)||Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let s=this[i];if(void 0===s){let e;try{if(e=o.apply(this,t),null==e||!(0,r.tI)(e))return e;this[i]=s=e.then((e=>(this[i]=void 0,e))).catch((e=>{throw this[i]=void 0,e}))}catch(e){throw this[i]=void 0,e}}return s}}}},4241:(e,t,i)=>{i.d(t,{cM:()=>m,fF:()=>p,hJ:()=>d});var r=i(9376),n=i(9796),s=i(4336),o=i(8227),a=i(6004),l=i(7469),c=i(3620);const h="",u=Symbol("logInstanceNameFn");function d(e){return t=>{t[u]=e}}function p(e){return m(e,!0)}function m(e,t=!1){let i,d,p,m,g,f,w=0,v=!1,y=!1,b=!0;null!=e&&({args:i,condition:d,enter:p,exit:m,prefix:g,sanitize:f,logThreshold:w=0,scoped:v=!0,singleLine:y=!1,timed:b=!0}=e),w>0&&(y=!0,b=!0),b&&(v=!0);const C=t?s.Yd.debug.bind(s.Yd):s.Yd.log.bind(s.Yd),A=s.Yd.warn.bind(s.Yd);return(e,P,S)=>{let R,D;if("function"==typeof S.value?(R=S.value,D="value"):"function"==typeof S.get&&(R=S.get,D="get"),null==R||null==D)throw new Error("Not supported");const k=(0,n.ZS)(R);S[D]=function(...n){const S=(0,a.OD)();if(!s.Yd.isDebugging&&!s.Yd.enabled(o.i.Debug)&&(!s.Yd.enabled(o.i.Info)||t)||null!=d&&!d(...n))return R.apply(this,n);let D;null!=this?(D=(0,s.q4)(this),this.constructor?.[u]&&(D=e.constructor[u](this,D))):D=h;let _,T=`${v?`[${S.toString(16).padStart(5)}] `:h}${D?`${D}.`:h}${P}`;null!=g&&(T=g({id:S,instance:this,instanceName:D,name:P,prefix:T},...n)),v&&(_={scopeId:S,prefix:T},(0,a.DS)(S,_));const F=null!=p?p(...n):h;let O;if(!1===i||0===n.length)O=h,y||C(`${T}${F}`);else{let e;O="";let r,a,l,c=-1;for(l of n){if(r=k[++c],e=i?.[c],null!=e){if("boolean"==typeof e)continue;if(O.length>0&&(O+=", "),"string"==typeof e){O+=e;continue}a=String(e(l))}else O.length>0&&(O+=", "),a=s.Yd.toLoggable(l,f);O+=r?`${r}=${a}`:a}y||C(`${T}${F}${O&&(t||s.Yd.enabled(o.i.Debug)||s.Yd.isDebugging)?`(${O})`:h}`)}if(y||b||null!=m){const e=b?(0,r.a)():void 0,i=t=>{const i=void 0!==e?` [${(0,c.qk)(e)}ms]`:h;y?s.Yd.error(t,`${T}${F}${O?`(${O})`:h}`,`failed${_?.exitDetails?_.exitDetails:h}${i}`):s.Yd.error(t,T,`failed${_?.exitDetails?_.exitDetails:h}${i}`),v&&(0,a.Fp)(S)};let u;try{u=R.apply(this,n)}catch(e){throw i(e),e}const d=i=>{let r,n,l,u;if(null!=e?(r=(0,c.qk)(e),r>o.O?(n=A,l=` [*${r}ms] (slow)`):(n=C,l=` [${r}ms]`)):(l=h,n=C),null!=m)if("function"==typeof m)try{u=m(i)}catch(e){u=`@log.exit error: ${e}`}else!0===m&&(u=`returned ${s.Yd.toLoggable(i)}`);else u="completed";y?(0===w||r>w)&&n(`${T}${F}${O&&(t||s.Yd.enabled(o.i.Debug)||s.Yd.isDebugging)?`(${O})`:h} ${u}${_?.exitDetails?_.exitDetails:h}${l}`):n(`${T}${O&&(t||s.Yd.enabled(o.i.Debug)||s.Yd.isDebugging)?`(${O})`:h} ${u}${_?.exitDetails?_.exitDetails:h}${l}`),v&&(0,a.Fp)(S)};if(null!=u&&(0,l.tI)(u)){u.then(d).catch(i)}else d(u);return u}return R.apply(this,n)}}}},4488:(e,t,i)=>{i.d(t,{H:()=>n});var r=i(9610);function n(e){return(t,i,n)=>{let s,o;if("function"==typeof n.value)s=n.value,o="value";else{if("function"!=typeof n.get)throw new Error("Not supported");s=n.get,o="get"}if(null==s)throw new Error("Not supported");const a=`$memoize$${i}`;let l;n[o]=function(...t){const i=(0,r.S)(a,e,...t);return Object.prototype.hasOwnProperty.call(this,i)?(l=this[i],l):(l=s.apply(this,t),Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!1,value:l}),l)}}}},9610:(e,t,i)=>{i.d(t,{S:()=>u});var r=i(9496),n=i(963),s=i(5367),o=i(6450),a=i(9502),l=i(6922);function c(e,t){return""===e||null==t||"object"!=typeof t?t:t instanceof Error?String(t):t instanceof r.Uri?"sha"in t&&t.sha?`${t.sha}:${t.toString()}`:t.toString():(0,s.BF)(t)||(0,o.f_)(t)||(0,a.YR)(t)||(0,l.Jc)(t)?t.toString():(0,n.N)(t)?"<container>":t}function h(...e){if(0===e.length)return"";if(1!==e.length)return JSON.stringify(e,c);const t=e[0];if(null==t)return"";switch(typeof t){case"string":return t;case"number":case"boolean":case"undefined":case"symbol":case"bigint":return String(t);default:return t instanceof Error?String(t):t instanceof r.Uri?"sha"in t&&"string"==typeof t.sha&&t.sha?`${t.sha}:${t.toString()}`:t.toString():(0,s.BF)(t)||(0,o.f_)(t)||(0,a.YR)(t)||(0,l.Jc)(t)?t.toString():(0,n.N)(t)?"<container>":JSON.stringify(t,c)}}function u(e,t,...i){if(0===i.length)return e;let r;if(null!=t)try{r=t(...i)}catch{r=h(...i)}else r=h(...i);return`${e}$${r}`}},6767:(e,t,i)=>{i.d(t,{V:()=>n});var r=i(7469);function n(e,t){let i,n=!1;return"boolean"==typeof e?n=e:i=e,(e,s,o)=>{let a;if("function"==typeof o.value&&(a=o.value),null==a)throw new Error("Not supported");o.value=function(...e){if(n){const r=e[e.length-1];i=null!=r&&"number"==typeof r?r:t}const s=a?.apply(this,e);return null==i||i<1||!(0,r.tI)(s)?s:(0,r.HO)(s,i,{onDidCancel:e=>e(void 0)})}}}},8786:(e,t,i)=>{function r(e){if(null!=e)return encodeURI(e.replace(/%20/g," "))}i.d(t,{M:()=>r})},2185:(e,t,i)=>{function r(e){return(t,i,r)=>{const n=e((e=>(n.dispose(),t.call(i,e))),null,r);return n}}i.d(t,{IH:()=>r,ue:()=>s});const n=(e,t)=>t(e);function s(e,t=n){let i,r,s=!0;return{get pending(){return s},promise:new Promise(((n,o)=>{i=()=>{s=!1,i=void 0,o()},r=e((async e=>{try{await t(e,n,o),s=!1}catch(e){s=!1,o(e)}}))})).then((e=>(r.dispose(),e)),(e=>{throw r.dispose(),e})),cancel:()=>i?.()}}},1774:(e,t,i)=>{i.d(t,{d:()=>s});var r=i(3700),n=i(3620);function s(e,t){const i=(0,r.M)(e);let s=(0,r.EZ)(i);if(null!=t?.truncateTo&&s.length>=t.truncateTo)return(0,n.ro)(s,t.truncateTo);if(t?.suffix){if(null!=t.truncateTo&&s.length+t.suffix.length>=t.truncateTo)return`${(0,n.ro)(s,t.truncateTo-t.suffix.length)}${t.suffix}`;s+=t.suffix}if(t?.fileOnly)return s;const o=(0,r.Fd)(i,t?.relativeTo);return o?(s=`/${s}`,null!=t?.truncateTo&&s.length+o.length>=t.truncateTo?`${(0,n.AO)(o,t.truncateTo-s.length)}${s}`:`${o}${s}`):s}},9796:(e,t,i)=>{function r(e,t){let i,r,n,s,o;function a(e){const i=e-(r??0);return null==r||i>=t||i<0}function l(){const e=Date.now();if(a(e))c();else{o=setTimeout(l,t-(e-(r??0)))}}function c(){return o=void 0,i?function(){const t=i,r=n;return i=n=void 0,s=e.apply(r,t),s}():(i=n=void 0,s)}function h(...e){const c=Date.now(),h=a(c);return i=e,n=this,r=c,h&&null==o?(o=setTimeout(l,t),s):(null==o&&(o=setTimeout(l,t)),s)}return h.cancel=function(){null!=o&&clearTimeout(o),i=r=n=o=void 0},h.flush=function(){return null!=o?c():s},h.pending=function(){return null!=o},h}i.d(t,{DH:()=>f,Ds:()=>r,IH:()=>g,NX:()=>v,ZS:()=>p,df:()=>w,is:()=>m});const n=",",s="",o="=",a="{",l="(",c=")",h=/\(([\s\S]*)\)/,u=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,d=/\s?=.*$/;function p(e){if("function"!=typeof e)throw new Error("Not supported");if(0===e.length)return[];let t=Function.prototype.toString.call(e);t=t.replace(u,s)||t,t=t.slice(0,t.indexOf(a));let i=t.indexOf(l),r=t.indexOf(c);i=i>=0?i+1:0,r=r>0?r:t.indexOf(o),t=t.slice(i,r),t=`(${t})`;const p=h.exec(t);return null!=p?p[1].split(n).map((e=>e.trim().replace(d,s))):[]}function m(e,t,i){return null==t?null!=e:"function"==typeof t?t(e):void 0===i?void 0!==e[t]:e[t]===i}function g(e){let t,i=!1;return function(...r){return i||(i=!0,t=e.apply(this,r),e=void 0),t}}function f(e,t){let i;const r={dispose:()=>{null!=i&&(clearInterval(i),i=void 0)}};return i=setInterval(e,t),r}async function w(e,t,i){for(const r of t)try{await e.apply(i,r)}catch{}}function v(e,t){return e>=t?e*e+e+t:e+t*t}},3105:(e,t,i)=>{function r(e,t){let i,r=0;for(;i=e.next(),!i.done;)(void 0===t||t(i.value))&&r++;return r}function n(e,t){for(const i of e)if(!t(i))return!1;return!0}function*s(e,t){if(void 0===t)for(const t of e)null!=t&&(yield t);else for(const i of e)t(i)&&(yield i)}function*o(e,t){for(const i of e){const e=t(i);null!=e&&(yield e)}}function a(e,t){for(const i of e)if(t(i))return i;return null}function l(e){return e[Symbol.iterator]().next().value}function*c(e,t){for(const i of e)yield*t(i)}function h(e,t){const i=e[Symbol.iterator]();let r=i.next();if(r.done)return"";let n=String(r.value);for(;r=i.next(),!r.done;)n+=`${t}${r.value}`;return n}function u(e){let t;for(t of e);return t}function*d(e,t){for(const i of e)yield t(i)}function p(e,t){for(const i of e)if(t(i))return!0;return!1}function*m(...e){for(const t of e)for(const e of t)yield e}function g(e,t,i){const r=new Map;for(const n of e){const e=t(n),s=r.get(e);if(void 0===s)r.set(e,n);else{const t=i(s,n);void 0!==t&&r.set(e,t)}}return r.values()}i.d(t,{DZ:()=>o,G:()=>p,G0:()=>m,Ps:()=>l,QX:()=>r,UI:()=>d,VS:()=>c,Z$:()=>u,hX:()=>s,sE:()=>a,uw:()=>g,v_:()=>h,yW:()=>n})},8227:(e,t,i)=>{i.d(t,{O:()=>r,i:()=>n});const r=500;var n=(e=>(e.Off="off",e.Error="error",e.Warn="warn",e.Info="info",e.Debug="debug",e))(n||{})},6004:(e,t,i)=>{i.d(t,{DS:()=>h,Fp:()=>o,OD:()=>c,QR:()=>l,UH:()=>a,lH:()=>u});const r=2**30,n=new Map;let s=0;function o(e){n.delete(e)}function a(){return n.get(s)}function l(e){const t=c();return{scopeId:t,prefix:`[${String(t).padStart(5)}] ${e}`}}function c(){return s===r&&(s=0),++s}function h(e,t){n.set(e,t)}function u(e,t){null!=e&&(e.exitDetails=t)}},4336:(e,t,i)=>{i.d(t,{Nu:()=>l,Yd:()=>s,q4:()=>a});var r=i(8227);const n="";const s=new class Logger2{output;provider;configure(e,t,i=!1){this.provider=e,this._isDebugging=i,this.logLevel=t}enabled(e){return this.level>=o(e)}_isDebugging=!1;get isDebugging(){return this._isDebugging}level=0;_logLevel=r.i.Off;get logLevel(){return this._logLevel}set logLevel(e){this._logLevel=e,this.level=o(this._logLevel),e===r.i.Off?(this.output?.dispose?.(),this.output=void 0):this.output=this.output??this.provider.createChannel(this.provider.name)}get timestamp(){return`[${(new Date).toISOString().replace(/T/," ").slice(0,-1)}]`}debug(e,...t){if(this.level<4&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??n}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??n,...t),null==this.output||this.level<4||this.output.appendLine(`${this.timestamp} ${i??n}${this.toLoggableParams(!0,t)}`)}error(e,t,...i){if(this.level<1&&!this.isDebugging)return;let r;if(r=null==t||"string"==typeof t?t:`${t.prefix} ${i.shift()??n}`,null==r){const t=e instanceof Error?e.stack:void 0;if(t){const e=/.*\s*?at\s(.+?)\s/.exec(t);null!=e&&(r=e[1])}}this.isDebugging&&console.error(this.timestamp,`[${this.provider.name}]`,r??n,...i,e),null==this.output||this.level<1||this.output.appendLine(`${this.timestamp} ${r??n}${this.toLoggableParams(!1,i)}\n${String(e)}`)}log(e,...t){if(this.level<3&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??n}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??n,...t),null==this.output||this.level<3||this.output.appendLine(`${this.timestamp} ${i??n}${this.toLoggableParams(!1,t)}`)}warn(e,...t){if(this.level<2&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??n}`)),this.isDebugging&&console.warn(this.timestamp,`[${this.provider.name}]`,i??n,...t),null==this.output||this.level<2||this.output.appendLine(`${this.timestamp} ${i??n}${this.toLoggableParams(!1,t)}`)}showOutputChannel(e){this.output?.show?.(e)}toLoggable(e,t){if("object"!=typeof e)return String(e);if(Array.isArray(e))return`[${e.map((e=>this.toLoggable(e,t))).join(", ")}]`;const i=this.provider.toLoggable?.(e);if(null!=i)return i;try{return JSON.stringify(e,t)}catch{return"<error>"}}toLoggableParams(e,t){if(0===t.length||e&&this.level<4&&!this.isDebugging)return n;const i=t.map((e=>this.toLoggable(e))).join(", ");return 0!==i.length?` — ${i}`:n}};function o(e){switch(e){case r.i.Off:return 0;case r.i.Error:return 1;case r.i.Warn:return 2;case r.i.Info:return 3;case r.i.Debug:return 4;default:return 0}}function a(e){let t;if("function"==typeof e){if(null==e.prototype?.constructor)return e.name;t=e.prototype.constructor.name??n}else t=e.constructor?.name??n;const i=t.indexOf("_");return-1===i?t:t.substr(i+1)}const l={enabled:e=>s.enabled(e)||s.isDebugging,log:(e,t,i,...n)=>{switch(e){case r.i.Error:s.error("",t,i,...n);break;case r.i.Warn:s.warn(t,i,...n);break;case r.i.Info:s.log(t,i,...n);break;default:s.debug(t,i,...n)}}}},9967:(e,t,i)=>{function r(e,t){if(e===t)return!0;if(null==e||null==t)return!1;const i=typeof e;return(i!==typeof t||"string"!==i&&"number"!==i&&"boolean"!==i)&&JSON.stringify(e)===JSON.stringify(t)}function n(e,t){const i=t?.skipPaths?.length?t?.prefix?t.skipPaths.map((e=>`${t.prefix}.${e}`)):t.skipPaths:void 0,r=t?.skipNulls??!1,n=t?.stringify??!1;const s=Object.create(null);return function e(s,o,a){if(!i?.includes(o))if(Object(a)!==a)if(null==a){if(r)return;s[o]=n?"all"==n?JSON.stringify(a):a??null:a}else s[o]="string"==typeof a?a:n?"number"==typeof a||"boolean"==typeof a?a:JSON.stringify(a):a;else if(Array.isArray(a)){const i=a.length;if(0===i)return;if("join"===t?.arrays)s[o]=a.join(",");else for(let t=0;t<i;t++)e(s,`${o}[${t}]`,a[t])}else{const t=Object.entries(a);if(0===t.length)return;for(const[i,r]of t)e(s,o?`${o}.${i}`:i,r)}}(s,t?.prefix??"",e),s}function s(e,t,i){if(null==e&&(e=Object.create(null)),null==i||"boolean"==typeof i&&!i){const{[t]:i,...r}=e;e=r}else e[t]="object"==typeof i?{...i}:i;return e}i.d(t,{iC:()=>s,wy:()=>r,xH:()=>n})},3700:(e,t,i)=>{i.d(t,{$d:()=>y,AH:()=>P,DZ:()=>r.extname,EZ:()=>r.basename,Fd:()=>R,Gf:()=>S,IC:()=>p,M:()=>w,Mh:()=>C,RQ:()=>r.join,UG:()=>v,XX:()=>r.dirname,YP:()=>b,tD:()=>g,tE:()=>A,uo:()=>D});var r=i(6470),n=i(9496),s=i(429),o=i(5255);const a=47,l=/(?<=^\/?)([A-Z])(?=:\/)/,c=/^([a-zA-Z][\w+.-]+):/,h=/\\/g,u=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/,d=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/;function p(e){if("string"==typeof e&&A(e)&&(e=n.Uri.parse(e)),"string"==typeof e)return m(e)?e:`/~0${(e=P(e)).charCodeAt(0)===a?e:`/${e}`}`;let t=e.fsPath;return m(t)?e:(t=P(t),e.with({path:`/~0${t.charCodeAt(0)===a?t:`/${t}`}`}))}function m(e){return u.test(e)}function g(e){return d.test(e)}function f(e,t,i,r){if(0===e.length||0===t.length)return 0;let n;(r??!s.IJ)&&(e=e.toLowerCase(),t=t.toLowerCase());let o=0;for(let r=0;r<e.length&&(n=e[r],n===t[r]);r++)n===i&&(o=r);return o}function w(e){if("string"==typeof e){if(!c.test(e))return P(e);e=n.Uri.parse(e,!0)}return P(e.scheme===o.sN.File?e.fsPath:e.path)}function v(e){return c.exec(e)?.[1]}function y(e,t){return"string"==typeof t&&(t=P(t)).charCodeAt(0)!==a&&(t=`/${t}`),"string"==typeof e&&(e=P(e)).charCodeAt(0)!==a&&(e=`/${e}`),"string"==typeof t?1===t.length||("string"==typeof e?e:e.path).startsWith(t.charCodeAt(t.length-1)===a?t:`${t}/`):"string"==typeof e?1===t.path.length||e.startsWith(t.path.charCodeAt(t.path.length-1)===a?t.path:`${t.path}/`):t.scheme===e.scheme&&t.authority===e.authority&&(1===t.path.length||e.path.startsWith(t.path.charCodeAt(t.path.length-1)===a?t.path:`${t.path}/`))}function b(e){return!A(e)&&(0,r.isAbsolute)(e)}function C(e){return"*"===(0,r.basename)(e)}function A(e){return c.test(e)}function P(e){return e?((e=e.replace(h,"/")).charCodeAt(e.length-1)===a&&(s.ED&&3===e.length&&":"===e[1]||(e=e.slice(0,-1))),s.ED&&(e=e.replace(l,(e=>e.toLowerCase()))),e):e}function S(e,t,i){e=c.test(e)?n.Uri.parse(e,!0).path:P(e);const r=f(`${t=c.test(t)?n.Uri.parse(t,!0).path:P(t)}/`,`${e}/`,"/",i);return r>0?t.substring(r+1):t}function R(e,t){const i=(0,r.dirname)(e);if(!i||"."===i||i===t)return"";if(!t)return i;const[n]=D(i,t);return n}function D(e,t,i=!1,s){if(e=w(e),t){let i;c.test(t)?(i=n.Uri.parse(t,!0),t=w(i)):t=P(t);const r=f(`${t}/`,`${e}/`,"/",s);r>0?(t=e.substring(0,r),e=e.substring(r+1)):e.charCodeAt(0)===a&&(e=e.slice(1)),null!=i&&(t=i.with({path:t}).toString())}else t=P(i?(0,r.dirname)(e):""),e=i?(0,r.basename)(e):e;return[e,t]}},7469:(e,t,i)=>{i.d(t,{HO:()=>s,PK:()=>PromiseCancelledError,PQ:()=>o,Sb:()=>a,ag:()=>h,rX:()=>n,tI:()=>l,xu:()=>c});var r=i(3105);async function*n(e){const t=new Map(e.map(((e,t)=>[t,e.then((e=>({index:t,value:e,status:"fulfilled"})),(e=>({index:t,reason:e,status:"rejected"})))])));for(;t.size;){const e=await Promise.race(t.values());t.delete(e.index),yield e}}class PromiseCancelledError extends Error{constructor(e,t){super(t),this.promise=e}}class PromiseCancelledErrorWithId extends PromiseCancelledError{constructor(e,t,i){super(t,i),this.id=e}}function s(e,t,i={}){return null==t||"number"==typeof t&&t<=0?e:new Promise(((r,n)=>{let s,o,a=!1;"number"==typeof t?s=setTimeout((()=>{"function"==typeof i.onDidCancel?i.onDidCancel(r,n):n(new PromiseCancelledError(e,i.cancelMessage??"TIMED OUT"))}),t):o=t.onCancellationRequested((()=>{o?.dispose(),a||("function"==typeof i.onDidCancel?i.onDidCancel(r,n):n(new PromiseCancelledError(e,i.cancelMessage??"CANCELLED")))})),e.then((()=>{a=!0,null!=s&&clearTimeout(s),o?.dispose(),r(e)}),(e=>{a=!0,null!=s&&clearTimeout(s),o?.dispose(),n(e)}))}))}function o(){const e={pending:!0,promise:void 0,fulfill:void 0,cancel:void 0};return e.promise=new Promise(((t,i)=>{e.fulfill=function(i){e.pending=!1,t(i)},e.cancel=function(){e.pending=!1,i()}})),e}function a(e,t=void 0){return"fulfilled"===e.status?e.value:t}function l(e){return e instanceof Promise||"function"==typeof e?.then}async function c(e,t,i){let n;return null!=t&&"number"!=typeof t?n=new Map((0,r.UI)(e,(e=>[e,t(e)]))):(i=t,n=e),n instanceof Map?new Map(await Promise.all((0,r.UI)(n.entries(),null==i?([e,t])=>t.then((t=>[e,t])):([e,t])=>Promise.race([t,new Promise((r=>setTimeout((()=>r(new PromiseCancelledErrorWithId(e,t,"TIMED OUT"))),i)))]).then((t=>[e,t]))))):Promise.all(null==i?n:n.map((e=>Promise.race([e,new Promise((t=>setTimeout((()=>t(new PromiseCancelledError(e,"TIMED OUT"))),i)))]))))}async function h(){await new Promise((e=>queueMicrotask(e)))}},6398:(e,t,i)=>{i.d(t,{k:()=>a,u:()=>Stopwatch});var r=i(9376),n=i(4336),s=i(8227),o=i(6004);class Stopwatch{constructor(e,t,...i){let o,a;if(this.scope=e,"string"!=typeof e&&(o=e,e="",this.instance=""),a="boolean"==typeof t?.log?t.log?{}:void 0:t?.log??{},this.logLevel=t?.logLevel??s.i.Info,this.logProvider=t?.provider??n.Nu,this._time=(0,r.a)(),null!=a){if(!this.logProvider.enabled(this.logLevel))return;i.length?this.logProvider.log(this.logLevel,o,`${this.instance}${e}${a.message??""}${a.suffix??""}`,...i):this.logProvider.log(this.logLevel,o,`${this.instance}${e}${a.message??""}${a.suffix??""}`)}}instance=`[${String((0,o.OD)()).padStart(5)}] `;logLevel;logProvider;_time;get startTime(){return this._time}elapsed(){const[e,t]=(0,r.a)(this._time);return 1e3*e+Math.floor(t/1e6)}log(e){this.logCore(this.scope,e,!1)}restart(e){this.logCore(this.scope,e,!0),this._time=(0,r.a)()}stop(e){this.restart(e)}logCore(e,t,i){if(!this.logProvider.enabled(this.logLevel))return;let n;if("string"!=typeof e&&(n=e,e=""),!i)return void this.logProvider.log(this.logLevel,n,`${this.instance}${e}${t?.message??""}${t?.suffix??""}`);const[o,a]=(0,r.a)(this._time),l=1e3*o+Math.floor(a/1e6),c=`${this.instance}${e}${t?.message??""}`;this.logProvider.log(l>250?s.i.Warn:this.logLevel,n,`${c?`${c} `:""}[${l}ms]${t?.suffix??""}`)}}function a(e,t,...i){return(t?.provider??n.Nu).enabled(t?.logLevel??s.i.Info)?new Stopwatch(e,t,...i):void 0}},3620:(e,t,i)=>{i.d(t,{US:()=>s.U,zY:()=>l,TT:()=>u,j_:()=>d,QC:()=>V,se:()=>p,qq:()=>c,ry:()=>w,yI:()=>v,qk:()=>y,sC:()=>C,Gg:()=>R,dz:()=>U,sX:()=>D,Qu:()=>k,vk:()=>F,Q_:()=>O,eh:()=>E,_6:()=>$,dm:()=>h,pW:()=>I,$G:()=>x,AO:()=>B,ro:()=>W});var r=i(9376),n=i(5255),s=i(3317);let o,a;function l(e,t){null==o&&(o=new Intl.Collator(void 0,{sensitivity:"accent"}));const i=o.compare(e,t);return 0===i?0:i>0?1:-1}function c(e,t){return null==e&&null==t||null!=e&&null!=t&&0===l(e,t)}function h(e,t){return null==a&&(a=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"})),a.compare(e,t)}function u(e,t,i=0,r=e.length,n=0,s=t.length){for(;i<r&&n<s;i++,n++){const r=e.charCodeAt(i),s=t.charCodeAt(n);if(r<s)return-1;if(r>s)return 1}const o=r-i,a=s-n;return o<a?-1:o>a?1:0}function d(e,t,i=0,r=e.length,n=0,s=t.length){for(;i<r&&n<s;i++,n++){const o=e.charCodeAt(i),a=t.charCodeAt(n);if(o===a)continue;const l=o-a;if((32!==l||!T(a))&&(-32!==l||!T(o)))return _(o)&&_(a)?l:u(e.toLowerCase(),t.toLowerCase(),i,r,n,s)}const o=r-i,a=s-n;return o<a?-1:o>a?1:0}function p(e){return e?.replace(/[<>&"]/g,(e=>{switch(e){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";case'"':return"&quot;";default:return e}}))}const m=/[\\`*_{}[\]()#+\-.!]/g,g=/^===/gm,f=/\r?\n/g;function w(e,t={}){return e=e.replace(m,"\\$&").replace(g,"​==="),t.quoted?e.trim().replace(f,"\t\\\n>  "):e}function v(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}function y(e){const[t,i]=(0,r.a)(e);return 1e3*t+Math.floor(i/1e6)}const b=["¹","²","³","⁴","⁵","⁶","⁷","⁸","⁹"];function C(e){return b[e-1]??""}const A=/\$\{(?:'.*?[^\\]'|\W*)?(\w*?)(?:'.*?[^\\]'|[\W\d]*)\}/g,P=new Map;function S(e){return 95===e||e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}function R(e){let t=P.get(e);if(null!=t)return t;t=[];const i=e.length;let r=0;for(;r<i;){const i=e.indexOf("${",r);if(-1===i)break;const n=e.indexOf("}",i);if(-1===n)break;let s=i+2,o="",a="",l="",c=!1,h="right",u="";if("'"===e[s]){const t=++s;if(s=e.indexOf("'",s),-1===s)break;t!==s&&(a=e.slice(t,s)),s++}else if(!S(e.charCodeAt(s))){const t=s++;for(;s<n&&!S(e.charCodeAt(s));)s++;t!==s&&(a=e.slice(t,s))}for(;s<n;){let t=e.charCodeAt(s);if(S(t))o+=e[s++];else{if(124!==t)break;for(;s<n;){if(t=e.charCodeAt(++s),!(t>=48&&t<=57)){63===t?(c=!0,s++):45===t&&(h="left",s++);break}l+=e[s]}}}if(s<n)if("'"===e[s]){const t=++s;if(s=e.indexOf("'",s),-1===s)break;t!==s&&(u=e.slice(t,s)),s++}else if(!S(e.charCodeAt(s))){const t=s++;for(;s<n&&!S(e.charCodeAt(s));)s++;t!==s&&(u=e.slice(t,s))}r=n+1,t.push({key:o,start:i,end:r,options:{prefix:a||void 0,suffix:u||void 0,truncateTo:l?parseInt(l,10):void 0,collapseWhitespace:c,padDirection:h}})}return P.set(e,t),t}function D(e,t){if(null==e||0===e.length)return e;if(null==t)return e.replace(A,"");const i=R(e);if(0===i.length)return e;let r=0,n="";for(const s of i)n+=e.slice(r,s.start)+(t[s.key]??""),r=s.end;return r<e.length&&(n+=e.slice(r)),n}async function k(e,t){if(null==e||0===e.length)return e;if(null==t)return e.replace(A,"");const i=R(e);if(0===i.length)return e;let r,n=0,s="";for(const o of i)r=t[o.key],null!=r&&"object"==typeof r&&"function"==typeof r.then&&(r=await r),s+=e.slice(n,o.start)+(r??""),n=o.end;return n<e.length&&(s+=e.slice(n)),s}function _(e){return e>=n.mN.a&&e<=n.mN.z}function T(e){return e>=n.mN.A&&e<=n.mN.Z}function F(e,t=0,i=0,r=" "){return 0===t&&0===i?e:`${0===t?"":r.repeat(t)}${e}${0===i?"":r.repeat(i)}`}function O(e,t,i=" ",r){const n=t-(r??U(e));return n<=0?e:i.repeat(n)+e}function E(e,t,i=" ",r){const n=t-(r??U(e));return n<=0?e:e+i.repeat(n)}function $(e,t,i){if(null==i)return`${t} ${e}${1===t?"":"s"}`;const r=1===t?e:i.plural??`${e}s`;return i.only?r:`${0===t?i.zero??t:i.format?.(t)??t}${i.infix??" "}${r}`}function I(e,t){const i=e.indexOf(t);if(-1===i)return[e];const r=e.substring(0,i),n=e.substring(i+t.length);return null!=n?[r,n]:[r]}function x(e,t,i="…",r){if(!e)return e;if(t<=1)return i;if((r=r??U(e))<=t)return e;if(r===e.length)return`${e.substring(0,t-1)}${i}`;let n=Math.floor(t/(r/e.length)),s=U(e.substring(0,n));for(;s<t;)s+=U(e[n++]);return s>=t&&n--,`${e.substring(0,n)}${i}`}function B(e,t,i="…",r){if(!e)return e;if(t<=1)return i;if((r=r??U(e))<=t)return e;if(r===e.length)return`${i}${e.substring(r-t)}`;let n=Math.floor(t/(r/e.length)),s=U(e.substring(0,n));for(;s<t;)s+=U(e[n++]);return s>=t&&n--,`${i}${e.substring(e.length-n)}`}function W(e,t,i="…"){if(!e)return e;if(t<=1)return i;const r=U(e);return r<=t?e:`${e.slice(0,Math.floor(t/2)-1)}${i}${e.slice(r-Math.ceil(t/2))}`}let M;const L=/[^\x20-\x7F\u00a0\u2026]/;function U(e){if(null==e||0===e.length)return 0;if(!L.test(e))return e.length;if(null==M&&(M=function({onlyFirst:e=!1}={}){const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")}()),0===(e=e.replace(M,"")).length)return 0;let t=0,i=0,r=0;const n=[...e];for(let e=0;e<n.length;e++){const s=n[e].codePointAt(0);if(!(s<=31||s>=127&&s<=159)&&!(s>=768&&s<=879))if(s>=128512&&s<=128591||s>=127744&&s<=128511||s>=128640&&s<=128767||s>=9728&&s<=9983||s>=9984&&s<=10175||s>=65024&&s<=65039||s>=129280&&s<=129535||s>=65024&&s<=65039||s>=8400&&s<=8447){if(s>=127995&&s<=127999)continue;i++,t+=2}else 8205!==s?(s>65535&&e++,t+=N(s)?2:1):(r++,t-=2)}const s=i-r;return s>1&&(t+=s-1),t}function N(e){return e>=4352&&(e<=4447||9001===e||9002===e||e>=11904&&e<=12871&&12351!==e||e>=12880&&e<=19903||e>=19968&&e<=42182||e>=43360&&e<=43388||e>=44032&&e<=55203||e>=63744&&e<=64255||e>=65040&&e<=65049||e>=65072&&e<=65131||e>=65281&&e<=65376||e>=65504&&e<=65510||e>=110592&&e<=110593||e>=127488&&e<=127569||e>=131072&&e<=262141)}const G="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",H={};function V(e){return null==e||""===e?"":function(e,t,i){const r=[];let n,s=4,o=4,a=3,l="";const c=[];let h,u,d,p,m,g,f;const w={val:i(0),position:t,index:1};for(h=0;h<3;h+=1)r[h]=h;d=0,m=Math.pow(2,2),g=1;for(;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;const v=String.fromCharCode;switch(n=d){case 0:for(d=0,m=Math.pow(2,8),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;f=v(d);break;case 1:for(d=0,m=Math.pow(2,16),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;f=v(d);break;case 2:return""}r[3]=f,u=f,c.push(f);for(;;){if(w.index>e)return"";for(d=0,m=Math.pow(2,a),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;switch(f=d){case 0:for(d=0,m=Math.pow(2,8),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;r[o++]=v(d),f=o-1,s--;break;case 1:for(d=0,m=Math.pow(2,16),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;r[o++]=v(d),f=o-1,s--;break;case 2:return c.join("")}if(0==s&&(s=Math.pow(2,a),a++),r[f])l=r[f];else{if(f!==o)return;l=u+u.charAt(0)}c.push(l),r[o++]=u+l.charAt(0),s--,u=l,0==s&&(s=Math.pow(2,a),a++)}}(e.length,32,(t=>function(e,t){if(!H[e]){H[e]={};for(let t=0;t<e.length;t++)H[e][e.charAt(t)]=t}return H[e][t]}(G,e.charAt(t))))??""}},1526:(e,t,i)=>{i.d(t,{QF:()=>UriTrie,u$:()=>VisitedPathsTrie});var r=i(429),n=i(3105),s=i(3700);function o(e){return 47===(e=(0,s.AH)(e)).charCodeAt(0)&&(e=e.slice(1)),e}class UriTrie{constructor(e){this.normalize=e,this.trie=new PathTrie}trie;clear(){this.trie.clear()}delete(e,t=!0){const{path:i,ignoreCase:r}=this.normalize(e);return this.trie.delete(i,r,t)}get(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.get(t,i)}getChildren(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.getChildren(t,i)}getClosest(e,t,i){const{path:r,ignoreCase:n}=this.normalize(e);return this.trie.getClosest(r,t,i,n)}getDescendants(e,t){if(null==e)return this.trie.getDescendants();const{path:i,ignoreCase:r}=this.normalize(e);return this.trie.getDescendants(i,t,r)}has(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.has(t,i)}set(e,t){const{path:i,ignoreCase:r}=this.normalize(e);return this.trie.set(i,t,r)}}class PathNode{constructor(e){this.path=e}value;children}class PathTrie{constructor(e=o){this.normalize=e,this.root=new PathNode("")}root;clear(){this.root.children=void 0}delete(e,t,i=!0){let n,s;e=this.normalize(e),t=t??!r.IJ;for(const i of e.split("/")){const e=(n??this.root).children?.get(t?i.toLowerCase():i);if(null==e)return!1;s=n??this.root,n=e}return!!n?.value&&(i&&a(n.value),n.value=void 0,null!=n.children&&0!==n.children.size||null==s?.children||(s.children.delete(t?n.path.toLowerCase():n.path),0===s.children.size&&(s.children=void 0)),!0)}get(e,t){return this.getCore(e,t)}getCore(e,t){let i;e=this.normalize(e),t=t??!r.IJ;for(const r of e.split("/")){const e=(i??this.root).children?.get(t?r.toLowerCase():r);if(null==e)return;i=e}return i?.value}getChildren(e,t){let i;if(e=this.normalize(e),t=t??!r.IJ,e)for(const r of e.split("/")){const e=(i??this.root).children?.get(t?r.toLowerCase():r);if(null==e)return[];i=e}else i=this.root;return null==i?.children?[]:[...(0,n.DZ)(i.children.values(),(e=>e.value||void 0))]}getClosest(e,t,i,n){let s,o;e=this.normalize(e),n=n??!r.IJ;for(const t of e.split("/")){!s?.value||i&&!i?.(s.value)||(o=s);const e=(s??this.root).children?.get(n?t.toLowerCase():t);if(null==e)break;s=e}return t||!s?.value||i&&!i?.(s.value)?o?.value:s.value}*getDescendants(e,t,i){e=e?this.normalize(e):"",i=i??!r.IJ;let n,s="";if(e)for(const t of e.split("/")){const e=(n??this.root).children?.get(i?t.toLowerCase():t);if(null==e)return;n=e,s+=`${e.path}/`}else n=this.root;null!=n?.children&&(yield*function*e(i,r,n){for(const s of i.values()){const i=r?`${r}/${s.path}`:s.path;!s.value||t&&!t?.(s.value)||(yield s.value),null!=s.children&&(yield*e(s.children,i,n))}}(n.children,"",s))}has(e,t){return null!=this.getCore(e,t)}set(e,t,i){e=this.normalize(e),i=i??!r.IJ;let n=this.root;for(const t of e.split("/")){const e=i?t.toLowerCase():t;let r=n.children?.get(e);null==r&&(null==n.children&&(n.children=new Map),r=new PathNode(t),n.children.set(e,r)),n=r}const s=null==n.value;return s||n.value===t||a(n.value),n.value=t,s}}function a(e){null!=e&&"object"==typeof e&&"dispose"in e&&"function"==typeof e.dispose&&e.dispose()}class VisitedPathNode{constructor(e){this.path=e}children}class VisitedPathsTrie{constructor(e=o){this.normalize=e,this.root=new VisitedPathNode("")}root;clear(){this.root.children=void 0}has(e,t){let i;e=this.normalize(e),t=t??!r.IJ;for(const r of e.split("/")){const e=(i??this.root).children?.get(t?r.toLowerCase():r);if(null==e)return!1;i=e}return null!=i}set(e,t){e=this.normalize(e),t=t??!r.IJ;let i=this.root;for(const r of e.split("/")){const e=t?r.toLowerCase():r;let n=i.children?.get(e);null==n&&(null==i.children&&(i.children=new Map),n=new VisitedPathNode(r),i.children.set(e,n)),i=n}}}},2509:(e,t,i)=>{i.d(t,{$S:()=>w,$_:()=>p,$o:()=>v,GC:()=>y,GR:()=>d,JM:()=>f,PH:()=>C,Tc:()=>S,_L:()=>D,aW:()=>m,bM:()=>A,gn:()=>k,hE:()=>g,ic:()=>R,lN:()=>P,pt:()=>b,s5:()=>u});var r=i(9496),n=i(5255),s=i(7462),o=i(9529),a=i(5148),l=i(4336),c=i(3700),h=i(4550);function u(e){const t=e.toString();return r.workspace.textDocuments.find((e=>e.uri.toString()===t))}async function d(e,t){const i=function(e){const t=r.window.activeTextEditor,i=e.toString();for(const e of[...null!=t?[t]:[],...r.window.visibleTextEditors])if(e.document.uri.toString()===i&&null!=e?.viewColumn)return e}(e);return null!=i?(t?.preserveFocus||await r.window.showTextDocument(i.document,{...t,viewColumn:i.viewColumn}),i):A(e,{viewColumn:r.window.activeTextEditor?.viewColumn,...t})}function p(e){const t=new Map(e.map((e=>[e.toString(),e])));for(const e of r.window.visibleTextEditors)null!=e?.viewColumn&&t.delete(e.document.uri.toString());for(const e of t.values())(0,o.dO)("vscode.open",e,{background:!0,preview:!1})}function m(e){const t=r.window.activeTextEditor;return null!=t&&t.document===e?t:void 0}function g(){return!a.D.get("advanced.quickPick.closeOnFocusOut")}function f(e){if(0===r.window.visibleTextEditors.length)return!1;if(null==e)return r.window.visibleTextEditors.some((e=>C(e)));const t=e.toString();return r.window.visibleTextEditors.some((e=>e.document.uri.toString()===t&&C(e)))}function w(e){const t=r.window.activeTextEditor;return null!=t&&t.document===e}function v(e){return e.kind===r.ColorThemeKind.Dark||e.kind===r.ColorThemeKind.HighContrast}function y(e){return e.kind===r.ColorThemeKind.Light||e.kind===r.ColorThemeKind.HighContrastLight}function b(e){return e.scheme===n.sN.Virtual||e.scheme===n.sN.GitHub}function C(e){const t=e.document.uri.scheme;return t!==n.sN.DebugConsole&&t!==n.sN.Output&&t!==n.sN.Terminal}async function A(e,t={}){const{rethrow:i,...a}=t;try{if((0,s.uy)(e)&&(e=e.documentUri()),e.scheme===n.sN.GitLens&&n.ZY[(0,c.DZ)(e.fsPath)])return void await(0,o.dO)("vscode.open",e);const t=await r.workspace.openTextDocument(e);return r.window.showTextDocument(t,{preserveFocus:!1,preview:!0,viewColumn:r.ViewColumn.Active,...a})}catch(t){if((t?.toString()??"").includes("File seems to be binary and cannot be opened as text"))return void await(0,o.dO)("vscode.open",e);if(i)throw t;return void l.Yd.error(t,"openEditor")}}async function P(e,t,i,n=!0){n&&null==r.window.tabGroups.activeTabGroup.activeTab&&(n=!1),await(0,o.dO)("workbench.action.openWalkthrough",{category:`${e}#${t}`,step:i?`${e}#${t}#${i}`:void 0},n)}var S=(e=>(e.CurrentWindow="currentWindow",e.NewWindow="newWindow",e.AddToWorkspace="addToWorkspace",e))(S||{});function R(e,t={location:"currentWindow"}){if("addToWorkspace"!==t?.location)(0,o.dO)("vscode.openFolder",e,{forceNewWindow:"newWindow"===t?.location});else{const i=r.workspace.workspaceFolders?.length??0;r.workspace.updateWorkspaceFolders(i,0,{uri:e,name:t?.name})}}function D(){let e;switch(r.env.appName){case"Visual Studio Code - Insiders":e="code-insiders --wait --reuse-window";break;case"Visual Studio Code - Exploration":e="code-exploration --wait --reuse-window";break;case"VSCodium":e="codium --wait --reuse-window";break;default:e="code --wait --reuse-window"}return e}function k(e){return"input-prompt-links"===e&&(0,h.L5)(r.version,">= 1.76")}},4550:(e,t,i)=>{i.d(t,{L5:()=>o,mL:()=>s,qu:()=>n});var r=i(3620);function n(e,t){return"string"==typeof e&&(e=s(e)),"string"==typeof t&&(t=s(t)),e.major>t.major?1:e.major<t.major?-1:e.minor>t.minor?1:e.minor<t.minor?-1:e.patch>t.patch?1:e.patch<t.patch?-1:void 0===e.pre&&void 0!==t.pre?1:void 0!==e.pre&&void 0===t.pre?-1:void 0!==e.pre&&void 0!==t.pre?(0,r.zY)(e.pre,t.pre):0}function s(e){const[t,i]=e.split("-"),[r,n,s]=t.split(".");return function(e,t,i,r){return{major:"string"==typeof e?parseInt(e,10):e,minor:"string"==typeof t?parseInt(t,10):t,patch:null==i?0:"string"==typeof i?parseInt(i,10):i,pre:r}}(r,n,s,i)}function o(e,t){if(null==e)return!1;const[i,r]=t.split(" ");if("="===i)return 0===n(e,r);if(">"===i)return n(e,r)>0;if(">="===i)return n(e,r)>=0;if("<"===i)return n(e,r)<0;if("<="===i)return n(e,r)<=0;throw new Error(`Unknown operator: ${i}`)}},9701:(e,t,i)=>{function r(e){return null!=e&&("webview"in e&&null!=e.webview)}function n(e){return null!=e&&("webview"in e&&null!=e.webview&&"webviewItem"in e)}function s(e){return null!=e&&("webview"in e&&null!=e.webview&&"webviewItemGroup"in e)}function o(e){return JSON.stringify(e)}i.d(t,{BH:()=>o,dH:()=>s,s4:()=>r,tM:()=>n})},2020:(e,t,i)=>{var r;i.r(t),i.d(t,{OpenTelemetryProvider:()=>OpenTelemetryProvider}),function(e){e[e.INTERNAL=0]="INTERNAL",e[e.SERVER=1]="SERVER",e[e.CLIENT=2]="CLIENT",e[e.PRODUCER=3]="PRODUCER",e[e.CONSUMER=4]="CONSUMER"}(r||(r={}));var n="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:"object"==typeof i.g?i.g:{},s="1.4.1",o=/^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;var a=function(e){var t=new Set([e]),i=new Set,r=e.match(o);if(!r)return function(){return!1};var n=+r[1],s=+r[2],a=+r[3];if(null!=r[4])return function(t){return t===e};function l(e){return i.add(e),!1}function c(e){return t.add(e),!0}return function(e){if(t.has(e))return!0;if(i.has(e))return!1;var r=e.match(o);if(!r)return l(e);var h=+r[1],u=+r[2],d=+r[3];return null!=r[4]||n!==h?l(e):0===n?s===u&&a<=d?c(e):l(e):s<=u?c(e):l(e)}}(s),l=s.split(".")[0],c=Symbol.for("opentelemetry.js.api."+l),h=n;function u(e,t,i,r){var n;void 0===r&&(r=!1);var o=h[c]=null!==(n=h[c])&&void 0!==n?n:{version:s};if(!r&&o[e]){var a=new Error("@opentelemetry/api: Attempted duplicate registration of API: "+e);return i.error(a.stack||a.message),!1}if(o.version!==s){a=new Error("@opentelemetry/api: Registration of version v"+o.version+" for "+e+" does not match previously registered API v"+s);return i.error(a.stack||a.message),!1}return o[e]=t,i.debug("@opentelemetry/api: Registered a global for "+e+" v"+s+"."),!0}function d(e){var t,i,r=null===(t=h[c])||void 0===t?void 0:t.version;if(r&&a(r))return null===(i=h[c])||void 0===i?void 0:i[e]}function p(e,t){t.debug("@opentelemetry/api: Unregistering a global for "+e+" v"+s+".");var i=h[c];i&&delete i[e]}var m,g=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},f=function(e,t,i){if(i||2===arguments.length)for(var r,n=0,s=t.length;n<s;n++)!r&&n in t||(r||(r=Array.prototype.slice.call(t,0,n)),r[n]=t[n]);return e.concat(r||Array.prototype.slice.call(t))},w=function(){function e(e){this._namespace=e.namespace||"DiagComponentLogger"}return e.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("debug",this._namespace,e)},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("error",this._namespace,e)},e.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("info",this._namespace,e)},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("warn",this._namespace,e)},e.prototype.verbose=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("verbose",this._namespace,e)},e}();function v(e,t,i){var r=d("diag");if(r)return i.unshift(t),r[e].apply(r,f([],g(i),!1))}!function(e){e[e.NONE=0]="NONE",e[e.ERROR=30]="ERROR",e[e.WARN=50]="WARN",e[e.INFO=60]="INFO",e[e.DEBUG=70]="DEBUG",e[e.VERBOSE=80]="VERBOSE",e[e.ALL=9999]="ALL"}(m||(m={}));var y=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},b=function(e,t,i){if(i||2===arguments.length)for(var r,n=0,s=t.length;n<s;n++)!r&&n in t||(r||(r=Array.prototype.slice.call(t,0,n)),r[n]=t[n]);return e.concat(r||Array.prototype.slice.call(t))},C=function(){function e(){function e(e){return function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];var r=d("diag");if(r)return r[e].apply(r,b([],y(t),!1))}}var t=this;t.setLogger=function(e,i){var r,n,s;if(void 0===i&&(i={logLevel:m.INFO}),e===t){var o=new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");return t.error(null!==(r=o.stack)&&void 0!==r?r:o.message),!1}"number"==typeof i&&(i={logLevel:i});var a=d("diag"),l=function(e,t){function i(i,r){var n=t[i];return"function"==typeof n&&e>=r?n.bind(t):function(){}}return e<m.NONE?e=m.NONE:e>m.ALL&&(e=m.ALL),t=t||{},{error:i("error",m.ERROR),warn:i("warn",m.WARN),info:i("info",m.INFO),debug:i("debug",m.DEBUG),verbose:i("verbose",m.VERBOSE)}}(null!==(n=i.logLevel)&&void 0!==n?n:m.INFO,e);if(a&&!i.suppressOverrideMessage){var c=null!==(s=(new Error).stack)&&void 0!==s?s:"<failed to generate stacktrace>";a.warn("Current logger will be overwritten from "+c),l.warn("Current logger will overwrite one already registered from "+c)}return u("diag",l,t,!0)},t.disable=function(){p("diag",t)},t.createComponentLogger=function(e){return new w(e)},t.verbose=e("verbose"),t.debug=e("debug"),t.info=e("info"),t.warn=e("warn"),t.error=e("error")}return e.instance=function(){return this._instance||(this._instance=new e),this._instance},e}(),A=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},P=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},S=function(){function e(e){this._entries=e?new Map(e):new Map}return e.prototype.getEntry=function(e){var t=this._entries.get(e);if(t)return Object.assign({},t)},e.prototype.getAllEntries=function(){return Array.from(this._entries.entries()).map((function(e){var t=A(e,2);return[t[0],t[1]]}))},e.prototype.setEntry=function(t,i){var r=new e(this._entries);return r._entries.set(t,i),r},e.prototype.removeEntry=function(t){var i=new e(this._entries);return i._entries.delete(t),i},e.prototype.removeEntries=function(){for(var t,i,r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];var s=new e(this._entries);try{for(var o=P(r),a=o.next();!a.done;a=o.next()){var l=a.value;s._entries.delete(l)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(i=o.return)&&i.call(o)}finally{if(t)throw t.error}}return s},e.prototype.clear=function(){return new e},e}(),R=Symbol("BaggageEntryMetadata"),D=C.instance();function k(e){return void 0===e&&(e={}),new S(new Map(Object.entries(e)))}var _,T="=",F=";",O=",",E="baggage",$=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o};function I(e){var t=e.split(F);if(!(t.length<=0)){var i=t.shift();if(i){var r=i.indexOf(T);if(!(r<=0)){var n,s,o=decodeURIComponent(i.substring(0,r).trim()),a=decodeURIComponent(i.substring(r+1).trim());return t.length>0&&("string"!=typeof(s=t.join(F))&&(D.error("Cannot create baggage metadata from unknown type: "+typeof s),s=""),n={__TYPE__:R,toString:function(){return s}}),{key:o,value:a,metadata:n}}}}}function x(e){return"string"!=typeof e||0===e.length?{}:e.split(O).map((function(e){return I(e)})).filter((function(e){return void 0!==e&&e.value.length>0})).reduce((function(e,t){return e[t.key]=t.value,e}),{})}!function(e){e.AlwaysOff="always_off",e.AlwaysOn="always_on",e.ParentBasedAlwaysOff="parentbased_always_off",e.ParentBasedAlwaysOn="parentbased_always_on",e.ParentBasedTraceIdRatio="parentbased_traceidratio",e.TraceIdRatio="traceidratio"}(_||(_={}));var B="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:"object"==typeof i.g?i.g:{},W=",",M=["OTEL_SDK_DISABLED"];function L(e){return M.indexOf(e)>-1}var U=["OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_BLRP_EXPORT_TIMEOUT","OTEL_BLRP_MAX_EXPORT_BATCH_SIZE","OTEL_BLRP_MAX_QUEUE_SIZE","OTEL_BLRP_SCHEDULE_DELAY","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_OTLP_LOGS_TIMEOUT","OTEL_EXPORTER_JAEGER_AGENT_PORT"];function N(e){return U.indexOf(e)>-1}var G=["OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS"];function H(e){return G.indexOf(e)>-1}var V=1/0,q=128,Q={OTEL_SDK_DISABLED:!1,CONTAINER_NAME:"",ECS_CONTAINER_METADATA_URI_V4:"",ECS_CONTAINER_METADATA_URI:"",HOSTNAME:"",KUBERNETES_SERVICE_HOST:"",NAMESPACE:"",OTEL_BSP_EXPORT_TIMEOUT:3e4,OTEL_BSP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BSP_MAX_QUEUE_SIZE:2048,OTEL_BSP_SCHEDULE_DELAY:5e3,OTEL_BLRP_EXPORT_TIMEOUT:3e4,OTEL_BLRP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BLRP_MAX_QUEUE_SIZE:2048,OTEL_BLRP_SCHEDULE_DELAY:5e3,OTEL_EXPORTER_JAEGER_AGENT_HOST:"",OTEL_EXPORTER_JAEGER_AGENT_PORT:6832,OTEL_EXPORTER_JAEGER_ENDPOINT:"",OTEL_EXPORTER_JAEGER_PASSWORD:"",OTEL_EXPORTER_JAEGER_USER:"",OTEL_EXPORTER_OTLP_ENDPOINT:"",OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:"",OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:"",OTEL_EXPORTER_OTLP_LOGS_ENDPOINT:"",OTEL_EXPORTER_OTLP_HEADERS:"",OTEL_EXPORTER_OTLP_TRACES_HEADERS:"",OTEL_EXPORTER_OTLP_METRICS_HEADERS:"",OTEL_EXPORTER_OTLP_LOGS_HEADERS:"",OTEL_EXPORTER_OTLP_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_TRACES_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_METRICS_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_LOGS_TIMEOUT:1e4,OTEL_EXPORTER_ZIPKIN_ENDPOINT:"http://localhost:9411/api/v2/spans",OTEL_LOG_LEVEL:m.INFO,OTEL_NO_PATCH_MODULES:[],OTEL_PROPAGATORS:["tracecontext","baggage"],OTEL_RESOURCE_ATTRIBUTES:"",OTEL_SERVICE_NAME:"",OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT:V,OTEL_ATTRIBUTE_COUNT_LIMIT:q,OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT:V,OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT:q,OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:V,OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT:q,OTEL_SPAN_EVENT_COUNT_LIMIT:128,OTEL_SPAN_LINK_COUNT_LIMIT:128,OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:128,OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:128,OTEL_TRACES_EXPORTER:"",OTEL_TRACES_SAMPLER:_.ParentBasedAlwaysOn,OTEL_TRACES_SAMPLER_ARG:"",OTEL_LOGS_EXPORTER:"",OTEL_EXPORTER_OTLP_INSECURE:"",OTEL_EXPORTER_OTLP_TRACES_INSECURE:"",OTEL_EXPORTER_OTLP_METRICS_INSECURE:"",OTEL_EXPORTER_OTLP_LOGS_INSECURE:"",OTEL_EXPORTER_OTLP_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_COMPRESSION:"",OTEL_EXPORTER_OTLP_TRACES_COMPRESSION:"",OTEL_EXPORTER_OTLP_METRICS_COMPRESSION:"",OTEL_EXPORTER_OTLP_LOGS_COMPRESSION:"",OTEL_EXPORTER_OTLP_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_LOGS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE:"cumulative"};function Y(e,t,i){if(void 0!==i[e]){var r=String(i[e]);t[e]="true"===r.toLowerCase()}}function j(e,t,i,r,n){if(void 0===r&&(r=-1/0),void 0===n&&(n=1/0),void 0!==i[e]){var s=Number(i[e]);isNaN(s)||(t[e]=s<r?r:s>n?n:s)}}function z(e,t,i,r){void 0===r&&(r=W);var n=i[e];"string"==typeof n&&(t[e]=n.split(r).map((function(e){return e.trim()})))}var K={ALL:m.ALL,VERBOSE:m.VERBOSE,DEBUG:m.DEBUG,INFO:m.INFO,WARN:m.WARN,ERROR:m.ERROR,NONE:m.NONE};function J(e,t,i){var r=i[e];if("string"==typeof r){var n=K[r.toUpperCase()];null!=n&&(t[e]=n)}}function X(e){var t={};for(var i in Q){var r=i;if("OTEL_LOG_LEVEL"===r)J(r,t,e);else if(L(r))Y(r,t,e);else if(N(r))j(r,t,e);else if(H(r))z(r,t,e);else{var n=e[r];null!=n&&(t[r]=String(n))}}return t}function Z(){var e=X(B);return Object.assign({},Q,e)}var ee=C.instance(),te=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},ie=1e4;function re(e){return"number"==typeof e?e<=0?ne(e,ie):e:function(){var e,t=Number(null!==(e=Z().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT)&&void 0!==e?e:Z().OTEL_EXPORTER_OTLP_TIMEOUT);return t<=0?ne(t,ie):t}()}function ne(e,t){return ee.warn("Timeout must be greater than 0",e),t}var se,oe=function(){function e(){var e=this;this._promise=new Promise((function(t,i){e._resolve=t,e._reject=i}))}return Object.defineProperty(e.prototype,"promise",{get:function(){return this._promise},enumerable:!1,configurable:!0}),e.prototype.resolve=function(e){this._resolve(e)},e.prototype.reject=function(e){this._reject(e)},e}(),ae=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},le=function(e,t,i){if(i||2===arguments.length)for(var r,n=0,s=t.length;n<s;n++)!r&&n in t||(r||(r=Array.prototype.slice.call(t,0,n)),r[n]=t[n]);return e.concat(r||Array.prototype.slice.call(t))},ce=function(){function e(e,t){this._callback=e,this._that=t,this._isCalled=!1,this._deferred=new oe}return Object.defineProperty(e.prototype,"isCalled",{get:function(){return this._isCalled},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"promise",{get:function(){return this._deferred.promise},enumerable:!1,configurable:!0}),e.prototype.call=function(){for(var e,t=this,i=[],r=0;r<arguments.length;r++)i[r]=arguments[r];if(!this._isCalled){this._isCalled=!0;try{Promise.resolve((e=this._callback).call.apply(e,le([this._that],ae(i),!1))).then((function(e){return t._deferred.resolve(e)}),(function(e){return t._deferred.reject(e)}))}catch(e){this._deferred.reject(e)}}return this._deferred.promise},e}();!function(e){e[e.SUCCESS=0]="SUCCESS",e[e.FAILED=1]="FAILED"}(se||(se={}));var he,ue=function(){function e(e){void 0===e&&(e={}),this._sendingPromises=[],this.url=this.getDefaultUrl(e),"string"==typeof e.hostname&&(this.hostname=e.hostname),this.shutdown=this.shutdown.bind(this),this._shutdownOnce=new ce(this._shutdown,this),this._concurrencyLimit="number"==typeof e.concurrencyLimit?e.concurrencyLimit:1/0,this.timeoutMillis=re(e.timeoutMillis),this.onInit(e)}return e.prototype.export=function(e,t){this._shutdownOnce.isCalled?t({code:se.FAILED,error:new Error("Exporter has been shutdown")}):this._sendingPromises.length>=this._concurrencyLimit?t({code:se.FAILED,error:new Error("Concurrent export limit reached")}):this._export(e).then((function(){t({code:se.SUCCESS})})).catch((function(e){t({code:se.FAILED,error:e})}))},e.prototype._export=function(e){var t=this;return new Promise((function(i,r){try{ee.debug("items to be sent",e),t.send(e,i,r)}catch(e){r(e)}}))},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype.forceFlush=function(){return Promise.all(this._sendingPromises).then((function(){}))},e.prototype._shutdown=function(){return ee.debug("shutdown started"),this.onShutdown(),this.forceFlush()},e}(),de=(he=function(e,t){return he=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},he(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function i(){this.constructor=e}he(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}),pe=function(e){function t(t,i,r){var n=e.call(this,t)||this;return n.name="OTLPExporterError",n.data=r,n.code=i,n}return de(t,e),t}(Error),me=function(){return me=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var n in t=arguments[i])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},me.apply(this,arguments)},ge=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o};function fe(e,t,i,r,n,s){var o,a,l=!1,c=setTimeout((function(){if(clearTimeout(o),l=!0,a.readyState===XMLHttpRequest.DONE){var e=new pe("Request Timeout");s(e)}else a.abort()}),r),h=function(r,u){void 0===r&&(r=5),void 0===u&&(u=1e3),(a=new XMLHttpRequest).open("POST",t);Object.entries(me(me({},{Accept:"application/json","Content-Type":"application/json"}),i)).forEach((function(e){var t=ge(e,2),i=t[0],r=t[1];a.setRequestHeader(i,r)})),a.send(e),a.onreadystatechange=function(){if(a.readyState===XMLHttpRequest.DONE&&!1===l)if(a.status>=200&&a.status<=299)ee.debug("xhr success",e),n(),clearTimeout(c),clearTimeout(o);else if(a.status&&(d=a.status,[429,502,503,504].includes(d))&&r>0){var t=void 0;u*=1.5,t=a.getResponseHeader("Retry-After")?function(e){if(null==e)return-1;var t=Number.parseInt(e,10);if(Number.isInteger(t))return t>0?1e3*t:-1;var i=new Date(e).getTime()-Date.now();return i>=0?i:0}(a.getResponseHeader("Retry-After")):Math.round(Math.random()*(5e3-u)+u),o=setTimeout((function(){h(r-1,u)}),t)}else{var i=new pe("Failed to export with XHR (status: "+a.status+")",a.status);s(i),clearTimeout(c),clearTimeout(o)}var d},a.onabort=function(){if(l){var e=new pe("Request Timeout");s(e)}clearTimeout(c),clearTimeout(o)},a.onerror=function(){if(l){var e=new pe("Request Timeout");s(e)}clearTimeout(c),clearTimeout(o)}};h()}var we=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),ve=function(e){function t(t){void 0===t&&(t={});var i=e.call(this,t)||this;return i._useXHR=!1,i._useXHR=!!t.headers||"function"!=typeof navigator.sendBeacon,i._useXHR?i._headers=Object.assign({},function(e){void 0===e&&(e={});var t={};return Object.entries(e).forEach((function(e){var i=te(e,2),r=i[0],n=i[1];void 0!==n?t[r]=String(n):ee.warn('Header "'+r+'" has wrong value and will be ignored')})),t}(t.headers),x(Z().OTEL_EXPORTER_OTLP_HEADERS)):i._headers={},i}return we(t,e),t.prototype.onInit=function(){window.addEventListener("unload",this.shutdown)},t.prototype.onShutdown=function(){window.removeEventListener("unload",this.shutdown)},t.prototype.send=function(e,t,i){var r=this;if(this._shutdownOnce.isCalled)ee.debug("Shutdown already started. Cannot send objects");else{var n=this.convert(e),s=JSON.stringify(n),o=new Promise((function(e,t){r._useXHR?fe(s,r.url,r._headers,r.timeoutMillis,e,t):function(e,t,i,r,n){navigator.sendBeacon(t,new Blob([e],i))?(ee.debug("sendBeacon - can send",e),r()):n(new pe("sendBeacon - cannot send "+e))}(s,r.url,{type:"application/json"},e,t)})).then(t,i);this._sendingPromises.push(o);var a=function(){var e=r._sendingPromises.indexOf(o);r._sendingPromises.splice(e,1)};o.then(a,a)}},t}(ue),ye=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o};function be(e){return Object.keys(e).map((function(t){return Ce(t,e[t])}))}function Ce(e,t){return{key:e,value:Ae(t)}}function Ae(e){var t=typeof e;return"string"===t?{stringValue:e}:"number"===t?Number.isInteger(e)?{intValue:e}:{doubleValue:e}:"boolean"===t?{boolValue:e}:e instanceof Uint8Array?{bytesValue:e}:Array.isArray(e)?{arrayValue:{values:e.map(Ae)}}:"object"===t&&null!=e?{kvlistValue:{values:Object.entries(e).map((function(e){var t=ye(e,2);return Ce(t[0],t[1])}))}}:{}}var Pe=performance,Se=Math.pow(10,6),Re=Math.pow(10,9);function De(e){var t=e/1e3;return[Math.trunc(t),Math.round(e%1e3*Se)]}function ke(){var e=Pe.timeOrigin;if("number"!=typeof e){var t=Pe;e=t.timing&&t.timing.fetchStart}return e}function _e(e){return Ee(De(ke()),De("number"==typeof e?e:Pe.now()))}function Te(e){return e[0]*Re+e[1]}function Fe(e){return Array.isArray(e)&&2===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]}function Oe(e){return Fe(e)||"number"==typeof e||e instanceof Date}function Ee(e,t){var i=[e[0]+t[0],e[1]+t[1]];return i[1]>=Re&&(i[1]-=Re,i[0]+=1),i}function $e(e){for(var t=e.length,i="",r=0;r<t;r+=2){var n=e.substring(r,r+2),s=parseInt(n,16);i+=String.fromCharCode(s)}return btoa(i)}function Ie(e,t){var i,r=e.spanContext(),n=e.status,s=t?e.parentSpanId:null!=e.parentSpanId?$e(e.parentSpanId):void 0;return{traceId:t?r.traceId:$e(r.traceId),spanId:t?r.spanId:$e(r.spanId),parentSpanId:s,traceState:null===(i=r.traceState)||void 0===i?void 0:i.serialize(),name:e.name,kind:null==e.kind?0:e.kind+1,startTimeUnixNano:Te(e.startTime),endTimeUnixNano:Te(e.endTime),attributes:be(e.attributes),droppedAttributesCount:e.droppedAttributesCount,events:e.events.map(xe),droppedEventsCount:e.droppedEventsCount,status:{code:n.code,message:n.message},links:e.links.map((function(e){return function(e,t){var i;return{attributes:e.attributes?be(e.attributes):[],spanId:t?e.context.spanId:$e(e.context.spanId),traceId:t?e.context.traceId:$e(e.context.traceId),traceState:null===(i=e.context.traceState)||void 0===i?void 0:i.serialize(),droppedAttributesCount:e.droppedAttributesCount||0}}(e,t)})),droppedLinksCount:e.droppedLinksCount}}function xe(e){return{attributes:e.attributes?be(e.attributes):[],name:e.name,timeUnixNano:Te(e.time),droppedAttributesCount:e.droppedAttributesCount||0}}var Be=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},We=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o};function Me(e,t){for(var i=function(e){var t,i,r=new Map;try{for(var n=Be(e),s=n.next();!s.done;s=n.next()){var o=s.value,a=r.get(o.resource);a||(a=new Map,r.set(o.resource,a));var l=o.instrumentationLibrary.name+"@"+(o.instrumentationLibrary.version||"")+":"+(o.instrumentationLibrary.schemaUrl||""),c=a.get(l);c||(c=[],a.set(l,c)),c.push(o)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(i=n.return)&&i.call(n)}finally{if(t)throw t.error}}return r}(e),r=[],n=i.entries(),s=n.next();!s.done;){for(var o=We(s.value,2),a=o[0],l=[],c=o[1].values(),h=c.next();!h.done;){var u=h.value;if(u.length>0){var d=u[0].instrumentationLibrary,p=d.name,m=d.version,g=d.schemaUrl,f=u.map((function(e){return Ie(e,t)}));l.push({scope:{name:p,version:m},spans:f,schemaUrl:g})}h=c.next()}var w={resource:{attributes:be(a.attributes),droppedAttributesCount:0},scopeSpans:l,schemaUrl:void 0};r.push(w),s=n.next()}return r}var Le,Ue=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),Ne="v1/traces",Ge="http://localhost:4318/"+Ne,He=function(e){function t(t){void 0===t&&(t={});var i=e.call(this,t)||this;return i._headers=Object.assign(i._headers,x(Z().OTEL_EXPORTER_OTLP_TRACES_HEADERS)),i}return Ue(t,e),t.prototype.convert=function(e){return function(e,t){return{resourceSpans:Me(e,t)}}(e,!0)},t.prototype.getDefaultUrl=function(e){return"string"==typeof e.url?e.url:Z().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length>0?function(e){try{var t=new URL(e);return""===t.pathname&&(t.pathname=t.pathname+"/"),t.toString()}catch(t){return ee.warn("Could not parse export URL: '"+e+"'"),e}}(Z().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT):Z().OTEL_EXPORTER_OTLP_ENDPOINT.length>0?(t=Z().OTEL_EXPORTER_OTLP_ENDPOINT,i=Ne,t.endsWith("/")||(t+="/"),t+i):Ge;var t,i},t}(ve),Ve="deployment.environment",qe="device.id",Qe="os.type",Ye="process.runtime.name",je="service.name",ze="service.version",Ke="telemetry.sdk.name",Je="telemetry.sdk.language",Xe="telemetry.sdk.version",Ze=((Le={})[Ke]="opentelemetry",Le[Ye]="browser",Le[Je]="webjs",Le[Xe]="1.15.2",Le);var et=function(){return et=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var n in t=arguments[i])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},et.apply(this,arguments)},tt=function(e,t,i,r){return new(i||(i=Promise))((function(n,s){function o(e){try{l(r.next(e))}catch(e){s(e)}}function a(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}l((r=r.apply(e,t||[])).next())}))},it=function(e,t){var i,r,n,s,o={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,r&&(n=2&s[0]?r.return:s[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,s[1])).done)return n;switch(r=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(n=o.trys,(n=n.length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){o.label=s[1];break}if(6===s[0]&&o.label<n[1]){o.label=n[1],n=s;break}if(n&&o.label<n[2]){o.label=n[2],o.ops.push(s);break}n[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{i=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}},rt=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},nt=function(){function e(e,t){var i,r=this;this._attributes=e,this.asyncAttributesPending=null!=t,this._syncAttributes=null!==(i=this._attributes)&&void 0!==i?i:{},this._asyncAttributesPromise=null==t?void 0:t.then((function(e){return r._attributes=Object.assign({},r._attributes,e),r.asyncAttributesPending=!1,e}),(function(e){return ee.debug("a resource's async attributes promise rejected: %s",e),r.asyncAttributesPending=!1,{}}))}return e.empty=function(){return e.EMPTY},e.default=function(){var t;return new e(((t={})[je]="unknown_service",t[Je]=Ze[Je],t[Ke]=Ze[Ke],t[Xe]=Ze[Xe],t))},Object.defineProperty(e.prototype,"attributes",{get:function(){var e;return this.asyncAttributesPending&&ee.error("Accessing resource attributes before async attributes settled"),null!==(e=this._attributes)&&void 0!==e?e:{}},enumerable:!1,configurable:!0}),e.prototype.waitForAsyncAttributes=function(){return tt(this,void 0,void 0,(function(){return it(this,(function(e){switch(e.label){case 0:return this.asyncAttributesPending?[4,this._asyncAttributesPromise]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},e.prototype.merge=function(t){var i,r=this;if(!t)return this;var n=et(et({},this._syncAttributes),null!==(i=t._syncAttributes)&&void 0!==i?i:t.attributes);if(!this._asyncAttributesPromise&&!t._asyncAttributesPromise)return new e(n);var s=Promise.all([this._asyncAttributesPromise,t._asyncAttributesPromise]).then((function(e){var i,n=rt(e,2),s=n[0],o=n[1];return et(et(et(et({},r._syncAttributes),s),null!==(i=t._syncAttributes)&&void 0!==i?i:t.attributes),o)}));return new e(n,s)},e.EMPTY=new e({}),e}();function st(e){return Symbol.for(e)}var ot,at=new function e(t){var i=this;i._currentContext=t?new Map(t):new Map,i.getValue=function(e){return i._currentContext.get(e)},i.setValue=function(t,r){var n=new e(i._currentContext);return n._currentContext.set(t,r),n},i.deleteValue=function(t){var r=new e(i._currentContext);return r._currentContext.delete(t),r}},lt=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},ct=function(e,t,i){if(i||2===arguments.length)for(var r,n=0,s=t.length;n<s;n++)!r&&n in t||(r||(r=Array.prototype.slice.call(t,0,n)),r[n]=t[n]);return e.concat(r||Array.prototype.slice.call(t))},ht=function(){function e(){}return e.prototype.active=function(){return at},e.prototype.with=function(e,t,i){for(var r=[],n=3;n<arguments.length;n++)r[n-3]=arguments[n];return t.call.apply(t,ct([i],lt(r),!1))},e.prototype.bind=function(e,t){return t},e.prototype.enable=function(){return this},e.prototype.disable=function(){return this},e}(),ut=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},dt=function(e,t,i){if(i||2===arguments.length)for(var r,n=0,s=t.length;n<s;n++)!r&&n in t||(r||(r=Array.prototype.slice.call(t,0,n)),r[n]=t[n]);return e.concat(r||Array.prototype.slice.call(t))},pt="context",mt=new ht,gt=function(){function e(){}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalContextManager=function(e){return u(pt,e,C.instance())},e.prototype.active=function(){return this._getContextManager().active()},e.prototype.with=function(e,t,i){for(var r,n=[],s=3;s<arguments.length;s++)n[s-3]=arguments[s];return(r=this._getContextManager()).with.apply(r,dt([e,t,i],ut(n),!1))},e.prototype.bind=function(e,t){return this._getContextManager().bind(e,t)},e.prototype._getContextManager=function(){return d(pt)||mt},e.prototype.disable=function(){this._getContextManager().disable(),p(pt,C.instance())},e}();!function(e){e[e.NONE=0]="NONE",e[e.SAMPLED=1]="SAMPLED"}(ot||(ot={}));var ft="0000000000000000",wt="00000000000000000000000000000000",vt={traceId:wt,spanId:ft,traceFlags:ot.NONE},yt=function(){function e(e){void 0===e&&(e=vt),this._spanContext=e}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return this},e.prototype.setAttributes=function(e){return this},e.prototype.addEvent=function(e,t){return this},e.prototype.setStatus=function(e){return this},e.prototype.updateName=function(e){return this},e.prototype.end=function(e){},e.prototype.isRecording=function(){return!1},e.prototype.recordException=function(e,t){},e}(),bt=st("OpenTelemetry Context Key SPAN");function Ct(e){return e.getValue(bt)||void 0}function At(){return Ct(gt.getInstance().active())}function Pt(e,t){return e.setValue(bt,t)}function St(e){return e.deleteValue(bt)}function Rt(e,t){return Pt(e,new yt(t))}function Dt(e){var t;return null===(t=Ct(e))||void 0===t?void 0:t.spanContext()}var kt=/^([0-9a-f]{32})$/i,_t=/^[0-9a-f]{16}$/i;function Tt(e){return kt.test(e)&&e!==wt}function Ft(e){return Tt(e.traceId)&&(t=e.spanId,_t.test(t)&&t!==ft);var t}function Ot(e){return new yt(e)}var Et=gt.getInstance(),$t=function(){function e(){}return e.prototype.startSpan=function(e,t,i){if(void 0===i&&(i=Et.active()),Boolean(null==t?void 0:t.root))return new yt;var r,n=i&&Dt(i);return"object"==typeof(r=n)&&"string"==typeof r.spanId&&"string"==typeof r.traceId&&"number"==typeof r.traceFlags&&Ft(n)?new yt(n):new yt},e.prototype.startActiveSpan=function(e,t,i,r){var n,s,o;if(!(arguments.length<2)){2===arguments.length?o=t:3===arguments.length?(n=t,o=i):(n=t,s=i,o=r);var a=null!=s?s:Et.active(),l=this.startSpan(e,n,a),c=Pt(a,l);return Et.with(c,o,void 0,l)}},e}();var It=new $t,xt=function(){function e(e,t,i,r){this._provider=e,this.name=t,this.version=i,this.options=r}return e.prototype.startSpan=function(e,t,i){return this._getTracer().startSpan(e,t,i)},e.prototype.startActiveSpan=function(e,t,i,r){var n=this._getTracer();return Reflect.apply(n.startActiveSpan,n,arguments)},e.prototype._getTracer=function(){if(this._delegate)return this._delegate;var e=this._provider.getDelegateTracer(this.name,this.version,this.options);return e?(this._delegate=e,this._delegate):It},e}(),Bt=new(function(){function e(){}return e.prototype.getTracer=function(e,t,i){return new $t},e}()),Wt=function(){function e(){}return e.prototype.getTracer=function(e,t,i){var r;return null!==(r=this.getDelegateTracer(e,t,i))&&void 0!==r?r:new xt(this,e,t,i)},e.prototype.getDelegate=function(){var e;return null!==(e=this._delegate)&&void 0!==e?e:Bt},e.prototype.setDelegate=function(e){this._delegate=e},e.prototype.getDelegateTracer=function(e,t,i){var r;return null===(r=this._delegate)||void 0===r?void 0:r.getTracer(e,t,i)},e}(),Mt="trace",Lt=function(){function e(){this._proxyTracerProvider=new Wt,this.wrapSpanContext=Ot,this.isSpanContextValid=Ft,this.deleteSpan=St,this.getSpan=Ct,this.getActiveSpan=At,this.getSpanContext=Dt,this.setSpan=Pt,this.setSpanContext=Rt}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalTracerProvider=function(e){var t=u(Mt,this._proxyTracerProvider,C.instance());return t&&this._proxyTracerProvider.setDelegate(e),t},e.prototype.getTracerProvider=function(){return d(Mt)||this._proxyTracerProvider},e.prototype.getTracer=function(e,t){return this.getTracerProvider().getTracer(e,t)},e.prototype.disable=function(){p(Mt,C.instance()),this._proxyTracerProvider=new Wt},e}().getInstance(),Ut=gt.getInstance(),Nt=function(){function e(){}return e.prototype.inject=function(e,t){},e.prototype.extract=function(e,t){return e},e.prototype.fields=function(){return[]},e}(),Gt={get:function(e,t){if(null!=e)return e[t]},keys:function(e){return null==e?[]:Object.keys(e)}},Ht={set:function(e,t,i){null!=e&&(e[t]=i)}},Vt=st("OpenTelemetry Baggage Key");function qt(e){return e.getValue(Vt)||void 0}function Qt(){return qt(gt.getInstance().active())}function Yt(e,t){return e.setValue(Vt,t)}function jt(e){return e.deleteValue(Vt)}var zt,Kt,Jt="propagation",Xt=new Nt,Zt=function(){function e(){this.createBaggage=k,this.getBaggage=qt,this.getActiveBaggage=Qt,this.setBaggage=Yt,this.deleteBaggage=jt}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalPropagator=function(e){return u(Jt,e,C.instance())},e.prototype.inject=function(e,t,i){return void 0===i&&(i=Ht),this._getGlobalPropagator().inject(e,t,i)},e.prototype.extract=function(e,t,i){return void 0===i&&(i=Gt),this._getGlobalPropagator().extract(e,t,i)},e.prototype.fields=function(){return this._getGlobalPropagator().fields()},e.prototype.disable=function(){p(Jt,C.instance())},e.prototype._getGlobalPropagator=function(){return d(Jt)||Xt},e}().getInstance(),ei="[object Object]",ti="[object Null]",ii="[object Undefined]",ri=Function.prototype.toString,ni=ri.call(Object),si=(zt=Object.getPrototypeOf,Kt=Object,function(e){return zt(Kt(e))}),oi=Object.prototype,ai=oi.hasOwnProperty,li=Symbol?Symbol.toStringTag:void 0,ci=oi.toString;function hi(e){if(!function(e){return null!=e&&"object"==typeof e}(e)||function(e){if(null==e)return void 0===e?ii:ti;return li&&li in Object(e)?function(e){var t=ai.call(e,li),i=e[li],r=!1;try{e[li]=void 0,r=!0}catch(e){}var n=ci.call(e);r&&(t?e[li]=i:delete e[li]);return n}(e):function(e){return ci.call(e)}(e)}(e)!==ei)return!1;var t=si(e);if(null===t)return!0;var i=ai.call(t,"constructor")&&t.constructor;return"function"==typeof i&&i instanceof i&&ri.call(i)===ni}var ui=20;function di(e){return gi(e)?e.slice():e}function pi(e,t,i,r){var n;if(void 0===i&&(i=0),!(i>ui)){if(i++,vi(e)||vi(t)||fi(t))n=di(t);else if(gi(e)){if(n=e.slice(),gi(t))for(var s=0,o=t.length;s<o;s++)n.push(di(t[s]));else if(wi(t))for(s=0,o=(a=Object.keys(t)).length;s<o;s++){n[l=a[s]]=di(t[l])}}else if(wi(e))if(wi(t)){if(!function(e,t){if(!hi(e)||!hi(t))return!1;return!0}(e,t))return t;n=Object.assign({},e);var a;for(s=0,o=(a=Object.keys(t)).length;s<o;s++){var l,c=t[l=a[s]];if(vi(c))void 0===c?delete n[l]:n[l]=c;else{var h=n[l],u=c;if(mi(e,l,r)||mi(t,l,r))delete n[l];else{if(wi(h)&&wi(u)){var d=r.get(h)||[],p=r.get(u)||[];d.push({obj:e,key:l}),p.push({obj:t,key:l}),r.set(h,d),r.set(u,p)}n[l]=pi(n[l],c,i,r)}}}}else n=t;return n}}function mi(e,t,i){for(var r=i.get(e[t])||[],n=0,s=r.length;n<s;n++){var o=r[n];if(o.key===t&&o.obj===e)return!0}return!1}function gi(e){return Array.isArray(e)}function fi(e){return"function"==typeof e}function wi(e){return!vi(e)&&!gi(e)&&!fi(e)&&"object"==typeof e}function vi(e){return"string"==typeof e||"number"==typeof e||"boolean"==typeof e||void 0===e||e instanceof Date||e instanceof RegExp||null===e}var yi=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},bi=function(){function e(e){var t;void 0===e&&(e={}),this._propagators=null!==(t=e.propagators)&&void 0!==t?t:[],this._fields=Array.from(new Set(this._propagators.map((function(e){return"function"==typeof e.fields?e.fields():[]})).reduce((function(e,t){return e.concat(t)}),[])))}return e.prototype.inject=function(e,t,i){var r,n;try{for(var s=yi(this._propagators),o=s.next();!o.done;o=s.next()){var a=o.value;try{a.inject(e,t,i)}catch(e){ee.warn("Failed to inject with "+a.constructor.name+". Err: "+e.message)}}}catch(e){r={error:e}}finally{try{o&&!o.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}},e.prototype.extract=function(e,t,i){return this._propagators.reduce((function(e,r){try{return r.extract(e,t,i)}catch(e){ee.warn("Failed to inject with "+r.constructor.name+". Err: "+e.message)}return e}),e)},e.prototype.fields=function(){return this._fields.slice()},e}(),Ci=st("OpenTelemetry SDK Context Key SUPPRESS_TRACING");function Ai(e){return e.setValue(Ci,!0)}function Pi(e){return!0===e.getValue(Ci)}var Si="[_0-9a-z-*/]",Ri=new RegExp("^(?:"+("[a-z]"+Si+"{0,255}")+"|"+("[a-z0-9]"+Si+"{0,240}@[a-z]"+Si+"{0,13}")+")$"),Di=/^[ -~]{0,255}[!-~]$/,ki=/,|=/;var _i=function(){function e(e){this._internalState=new Map,e&&this._parse(e)}return e.prototype.set=function(e,t){var i=this._clone();return i._internalState.has(e)&&i._internalState.delete(e),i._internalState.set(e,t),i},e.prototype.unset=function(e){var t=this._clone();return t._internalState.delete(e),t},e.prototype.get=function(e){return this._internalState.get(e)},e.prototype.serialize=function(){var e=this;return this._keys().reduce((function(t,i){return t.push(i+"="+e.get(i)),t}),[]).join(",")},e.prototype._parse=function(e){e.length>512||(this._internalState=e.split(",").reverse().reduce((function(e,t){var i=t.trim(),r=i.indexOf("=");if(-1!==r){var n=i.slice(0,r),s=i.slice(r+1,t.length);(function(e){return Ri.test(e)})(n)&&function(e){return Di.test(e)&&!ki.test(e)}(s)&&e.set(n,s)}return e}),new Map),this._internalState.size>32&&(this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,32))))},e.prototype._keys=function(){return Array.from(this._internalState.keys()).reverse()},e.prototype._clone=function(){var t=new e;return t._internalState=new Map(this._internalState),t},e}(),Ti="traceparent",Fi="tracestate",Oi=new RegExp("^\\s?((?!ff)[\\da-f]{2})-((?![0]{32})[\\da-f]{32})-((?![0]{16})[\\da-f]{16})-([\\da-f]{2})(-.*)?\\s?$");var Ei,$i=function(){function e(){}return e.prototype.inject=function(e,t,i){var r=Lt.getSpanContext(e);if(r&&!Pi(e)&&Ft(r)){var n="00-"+r.traceId+"-"+r.spanId+"-0"+Number(r.traceFlags||ot.NONE).toString(16);i.set(t,Ti,n),r.traceState&&i.set(t,Fi,r.traceState.serialize())}},e.prototype.extract=function(e,t,i){var r=i.get(t,Ti);if(!r)return e;var n=Array.isArray(r)?r[0]:r;if("string"!=typeof n)return e;var s=function(e){var t=Oi.exec(e);return t?"00"===t[1]&&t[5]?null:{traceId:t[2],spanId:t[3],traceFlags:parseInt(t[4],16)}:null}(n);if(!s)return e;s.isRemote=!0;var o=i.get(t,Fi);if(o){var a=Array.isArray(o)?o.join(","):o;s.traceState=new _i("string"==typeof a?a:void 0)}return Lt.setSpanContext(e,s)},e.prototype.fields=function(){return[Ti,Fi]},e}(),Ii=function(){function e(){}return e.prototype.inject=function(e,t,i){var r=Zt.getBaggage(e);if(r&&!Pi(e)){var n=function(e){return e.getAllEntries().map((function(e){var t=$(e,2),i=t[0],r=t[1],n=encodeURIComponent(i)+"="+encodeURIComponent(r.value);return void 0!==r.metadata&&(n+=F+r.metadata.toString()),n}))}(r).filter((function(e){return e.length<=4096})).slice(0,180),s=function(e){return e.reduce((function(e,t){var i=""+e+(""!==e?O:"")+t;return i.length>8192?e:i}),"")}(n);s.length>0&&i.set(t,E,s)}},e.prototype.extract=function(e,t,i){var r=i.get(t,E),n=Array.isArray(r)?r.join(O):r;if(!n)return e;var s={};return 0===n.length?e:(n.split(O).forEach((function(e){var t=I(e);if(t){var i={value:t.value};t.metadata&&(i.metadata=t.metadata),s[t.key]=i}})),0===Object.entries(s).length?e:Zt.setBaggage(e,Zt.createBaggage(s)))},e.prototype.fields=function(){return[E]},e}();!function(e){e[e.NOT_RECORD=0]="NOT_RECORD",e[e.RECORD=1]="RECORD",e[e.RECORD_AND_SAMPLED=2]="RECORD_AND_SAMPLED"}(Ei||(Ei={}));var xi,Bi=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Wi=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o};function Mi(e){var t,i,r={};if("object"!=typeof e||null==e)return r;try{for(var n=Bi(Object.entries(e)),s=n.next();!s.done;s=n.next()){var o=Wi(s.value,2),a=o[0],l=o[1];Li(a)?Ui(l)?Array.isArray(l)?r[a]=l.slice():r[a]=l:ee.warn("Invalid attribute value set for key: "+a):ee.warn("Invalid attribute key: "+a)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(i=n.return)&&i.call(n)}finally{if(t)throw t.error}}return r}function Li(e){return"string"==typeof e&&e.length>0}function Ui(e){return null==e||(Array.isArray(e)?function(e){var t,i,r;try{for(var n=Bi(e),s=n.next();!s.done;s=n.next()){var o=s.value;if(null!=o){if(!r){if(Ni(o)){r=typeof o;continue}return!1}if(typeof o!==r)return!1}}}catch(e){t={error:e}}finally{try{s&&!s.done&&(i=n.return)&&i.call(n)}finally{if(t)throw t.error}}return!0}(e):Ni(e))}function Ni(e){switch(typeof e){case"number":case"boolean":case"string":return!0}return!1}!function(e){e[e.UNSET=0]="UNSET",e[e.OK=1]="OK",e[e.ERROR=2]="ERROR"}(xi||(xi={}));var Gi,Hi="exception.type",Vi="exception.message",qi="exception.stacktrace",Qi=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Yi=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,s=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=s.return)&&i.call(s)}finally{if(n)throw n.error}}return o},ji=function(){function e(e,t,i,r,n,s,o,a,l){void 0===o&&(o=[]),this.attributes={},this.links=[],this.events=[],this._droppedAttributesCount=0,this._droppedEventsCount=0,this._droppedLinksCount=0,this.status={code:xi.UNSET},this.endTime=[0,0],this._ended=!1,this._duration=[-1,-1],this.name=i,this._spanContext=r,this.parentSpanId=s,this.kind=n,this.links=o;var c=Date.now();this._performanceStartTime=Pe.now(),this._performanceOffset=c-(this._performanceStartTime+ke()),this._startTimeProvided=null!=a,this.startTime=this._getTime(null!=a?a:c),this.resource=e.resource,this.instrumentationLibrary=e.instrumentationLibrary,this._spanLimits=e.getSpanLimits(),this._spanProcessor=e.getActiveSpanProcessor(),this._spanProcessor.onStart(this,t),this._attributeValueLengthLimit=this._spanLimits.attributeValueLengthLimit||0}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return null==t||this._isSpanEnded()?this:0===e.length?(ee.warn("Invalid attribute key: "+e),this):Ui(t)?Object.keys(this.attributes).length>=this._spanLimits.attributeCountLimit&&!Object.prototype.hasOwnProperty.call(this.attributes,e)?(this._droppedAttributesCount++,this):(this.attributes[e]=this._truncateToSize(t),this):(ee.warn("Invalid attribute value set for key: "+e),this)},e.prototype.setAttributes=function(e){var t,i;try{for(var r=Qi(Object.entries(e)),n=r.next();!n.done;n=r.next()){var s=Yi(n.value,2),o=s[0],a=s[1];this.setAttribute(o,a)}}catch(e){t={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(t)throw t.error}}return this},e.prototype.addEvent=function(e,t,i){if(this._isSpanEnded())return this;if(0===this._spanLimits.eventCountLimit)return ee.warn("No events allowed."),this._droppedEventsCount++,this;this.events.length>=this._spanLimits.eventCountLimit&&(ee.warn("Dropping extra events."),this.events.shift(),this._droppedEventsCount++),Oe(t)&&(Oe(i)||(i=t),t=void 0);var r=Mi(t);return this.events.push({name:e,attributes:r,time:this._getTime(i),droppedAttributesCount:0}),this},e.prototype.setStatus=function(e){return this._isSpanEnded()||(this.status=e),this},e.prototype.updateName=function(e){return this._isSpanEnded()||(this.name=e),this},e.prototype.end=function(e){this._isSpanEnded()?ee.error(this.name+" "+this._spanContext.traceId+"-"+this._spanContext.spanId+" - You can only call end() on a span once."):(this._ended=!0,this.endTime=this._getTime(e),this._duration=function(e,t){var i=t[0]-e[0],r=t[1]-e[1];return r<0&&(i-=1,r+=Re),[i,r]}(this.startTime,this.endTime),this._duration[0]<0&&(ee.warn("Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.",this.startTime,this.endTime),this.endTime=this.startTime.slice(),this._duration=[0,0]),this._spanProcessor.onEnd(this))},e.prototype._getTime=function(e){if("number"==typeof e&&e<Pe.now())return _e(e+this._performanceOffset);if("number"==typeof e)return De(e);if(e instanceof Date)return De(e.getTime());if(Fe(e))return e;if(this._startTimeProvided)return De(Date.now());var t=Pe.now()-this._performanceStartTime;return Ee(this.startTime,De(t))},e.prototype.isRecording=function(){return!1===this._ended},e.prototype.recordException=function(e,t){var i={};"string"==typeof e?i[Vi]=e:e&&(e.code?i[Hi]=e.code.toString():e.name&&(i[Hi]=e.name),e.message&&(i[Vi]=e.message),e.stack&&(i[qi]=e.stack)),i[Hi]||i[Vi]?this.addEvent("exception",i,t):ee.warn("Failed to record an exception "+e)},Object.defineProperty(e.prototype,"duration",{get:function(){return this._duration},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"ended",{get:function(){return this._ended},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"droppedAttributesCount",{get:function(){return this._droppedAttributesCount},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"droppedEventsCount",{get:function(){return this._droppedEventsCount},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"droppedLinksCount",{get:function(){return this._droppedLinksCount},enumerable:!1,configurable:!0}),e.prototype._isSpanEnded=function(){return this._ended&&ee.warn("Can not execute the operation on ended Span {traceId: "+this._spanContext.traceId+", spanId: "+this._spanContext.spanId+"}"),this._ended},e.prototype._truncateToLimitUtil=function(e,t){return e.length<=t?e:e.substr(0,t)},e.prototype._truncateToSize=function(e){var t=this,i=this._attributeValueLengthLimit;return i<=0?(ee.warn("Attribute value limit must be positive, got "+i),e):"string"==typeof e?this._truncateToLimitUtil(e,i):Array.isArray(e)?e.map((function(e){return"string"==typeof e?t._truncateToLimitUtil(e,i):e})):e},e}();!function(e){e[e.NOT_RECORD=0]="NOT_RECORD",e[e.RECORD=1]="RECORD",e[e.RECORD_AND_SAMPLED=2]="RECORD_AND_SAMPLED"}(Gi||(Gi={}));var zi=function(){function e(){}return e.prototype.shouldSample=function(){return{decision:Gi.NOT_RECORD}},e.prototype.toString=function(){return"AlwaysOffSampler"},e}(),Ki=function(){function e(){}return e.prototype.shouldSample=function(){return{decision:Gi.RECORD_AND_SAMPLED}},e.prototype.toString=function(){return"AlwaysOnSampler"},e}();var Ji=function(e){ee.error(function(e){return"string"==typeof e?e:JSON.stringify(function(e){for(var t={},i=e;null!==i;)Object.getOwnPropertyNames(i).forEach((function(e){if(!t[e]){var r=i[e];r&&(t[e]=String(r))}})),i=Object.getPrototypeOf(i);return t}(e))}(e))};function Xi(e){try{Ji(e)}catch(e){}}var Zi=function(){function e(e){var t,i,r,n;this._root=e.root,this._root||(Xi(new Error("ParentBasedSampler must have a root sampler configured")),this._root=new Ki),this._remoteParentSampled=null!==(t=e.remoteParentSampled)&&void 0!==t?t:new Ki,this._remoteParentNotSampled=null!==(i=e.remoteParentNotSampled)&&void 0!==i?i:new zi,this._localParentSampled=null!==(r=e.localParentSampled)&&void 0!==r?r:new Ki,this._localParentNotSampled=null!==(n=e.localParentNotSampled)&&void 0!==n?n:new zi}return e.prototype.shouldSample=function(e,t,i,r,n,s){var o=Lt.getSpanContext(e);return o&&Ft(o)?o.isRemote?o.traceFlags&ot.SAMPLED?this._remoteParentSampled.shouldSample(e,t,i,r,n,s):this._remoteParentNotSampled.shouldSample(e,t,i,r,n,s):o.traceFlags&ot.SAMPLED?this._localParentSampled.shouldSample(e,t,i,r,n,s):this._localParentNotSampled.shouldSample(e,t,i,r,n,s):this._root.shouldSample(e,t,i,r,n,s)},e.prototype.toString=function(){return"ParentBased{root="+this._root.toString()+", remoteParentSampled="+this._remoteParentSampled.toString()+", remoteParentNotSampled="+this._remoteParentNotSampled.toString()+", localParentSampled="+this._localParentSampled.toString()+", localParentNotSampled="+this._localParentNotSampled.toString()+"}"},e}(),er=function(){function e(e){void 0===e&&(e=0),this._ratio=e,this._ratio=this._normalize(e),this._upperBound=Math.floor(4294967295*this._ratio)}return e.prototype.shouldSample=function(e,t){return{decision:Tt(t)&&this._accumulate(t)<this._upperBound?Gi.RECORD_AND_SAMPLED:Gi.NOT_RECORD}},e.prototype.toString=function(){return"TraceIdRatioBased{"+this._ratio+"}"},e.prototype._normalize=function(e){return"number"!=typeof e||isNaN(e)?0:e>=1?1:e<=0?0:e},e.prototype._accumulate=function(e){for(var t=0,i=0;i<e.length/8;i++){var r=8*i;t=(t^parseInt(e.slice(r,r+8),16))>>>0}return t},e}(),tr=Z(),ir=_.AlwaysOn,rr=1;function nr(){return{sampler:sr(tr),forceFlushTimeoutMillis:3e4,generalLimits:{attributeValueLengthLimit:Z().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:Z().OTEL_ATTRIBUTE_COUNT_LIMIT},spanLimits:{attributeValueLengthLimit:Z().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:Z().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,linkCountLimit:Z().OTEL_SPAN_LINK_COUNT_LIMIT,eventCountLimit:Z().OTEL_SPAN_EVENT_COUNT_LIMIT,attributePerEventCountLimit:Z().OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,attributePerLinkCountLimit:Z().OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT}}}function sr(e){switch(void 0===e&&(e=Z()),e.OTEL_TRACES_SAMPLER){case _.AlwaysOn:return new Ki;case _.AlwaysOff:return new zi;case _.ParentBasedAlwaysOn:return new Zi({root:new Ki});case _.ParentBasedAlwaysOff:return new Zi({root:new zi});case _.TraceIdRatio:return new er(or(e));case _.ParentBasedTraceIdRatio:return new Zi({root:new er(or(e))});default:return ee.error('OTEL_TRACES_SAMPLER value "'+e.OTEL_TRACES_SAMPLER+" invalid, defaulting to "+ir+'".'),new Ki}}function or(e){if(void 0===e.OTEL_TRACES_SAMPLER_ARG||""===e.OTEL_TRACES_SAMPLER_ARG)return ee.error("OTEL_TRACES_SAMPLER_ARG is blank, defaulting to "+rr+"."),rr;var t=Number(e.OTEL_TRACES_SAMPLER_ARG);return isNaN(t)?(ee.error("OTEL_TRACES_SAMPLER_ARG="+e.OTEL_TRACES_SAMPLER_ARG+" was given, but it is invalid, defaulting to "+rr+"."),rr):t<0||t>1?(ee.error("OTEL_TRACES_SAMPLER_ARG="+e.OTEL_TRACES_SAMPLER_ARG+" was given, but it is out of range ([0..1]), defaulting to "+rr+"."),rr):t}function ar(e){var t,i,r,n,s,o,a,l,c,h,u,d,p=Object.assign({},e.spanLimits),m="undefined"!=typeof process&&process&&process.env?X(process.env):X(B);return p.attributeCountLimit=null!==(o=null!==(s=null!==(n=null!==(i=null===(t=e.spanLimits)||void 0===t?void 0:t.attributeCountLimit)&&void 0!==i?i:null===(r=e.generalLimits)||void 0===r?void 0:r.attributeCountLimit)&&void 0!==n?n:m.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT)&&void 0!==s?s:m.OTEL_ATTRIBUTE_COUNT_LIMIT)&&void 0!==o?o:q,p.attributeValueLengthLimit=null!==(d=null!==(u=null!==(h=null!==(l=null===(a=e.spanLimits)||void 0===a?void 0:a.attributeValueLengthLimit)&&void 0!==l?l:null===(c=e.generalLimits)||void 0===c?void 0:c.attributeValueLengthLimit)&&void 0!==h?h:m.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT)&&void 0!==u?u:m.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT)&&void 0!==d?d:V,Object.assign({},e,{spanLimits:p})}var lr=function(){this.generateTraceId=hr(16),this.generateSpanId=hr(8)},cr=Array(32);function hr(e){return function(){for(var t=0;t<2*e;t++)cr[t]=Math.floor(16*Math.random())+48,cr[t]>=58&&(cr[t]+=39);return String.fromCharCode.apply(null,cr.slice(0,2*e))}}var ur=function(){function e(e,t,i){this._tracerProvider=i;var r,n,s,o,a=(r=t,n={sampler:sr()},s=nr(),(o=Object.assign({},s,n,r)).generalLimits=Object.assign({},s.generalLimits,r.generalLimits||{}),o.spanLimits=Object.assign({},s.spanLimits,r.spanLimits||{}),o);this._sampler=a.sampler,this._generalLimits=a.generalLimits,this._spanLimits=a.spanLimits,this._idGenerator=t.idGenerator||new lr,this.resource=i.resource,this.instrumentationLibrary=e}return e.prototype.startSpan=function(e,t,i){var n,s,o;void 0===t&&(t={}),void 0===i&&(i=Ut.active()),t.root&&(i=Lt.deleteSpan(i));var a=Lt.getSpan(i);if(Pi(i))return ee.debug("Instrumentation suppressed, returning Noop Span"),Lt.wrapSpanContext(vt);var l,c,h,u=null==a?void 0:a.spanContext(),d=this._idGenerator.generateSpanId();u&&Lt.isSpanContextValid(u)?(l=u.traceId,c=u.traceState,h=u.spanId):l=this._idGenerator.generateTraceId();var p=null!==(n=t.kind)&&void 0!==n?n:r.INTERNAL,m=(null!==(s=t.links)&&void 0!==s?s:[]).map((function(e){return{context:e.context,attributes:Mi(e.attributes)}})),g=Mi(t.attributes),f=this._sampler.shouldSample(i,l,e,p,g,m);c=null!==(o=f.traceState)&&void 0!==o?o:c;var w={traceId:l,spanId:d,traceFlags:f.decision===Ei.RECORD_AND_SAMPLED?ot.SAMPLED:ot.NONE,traceState:c};if(f.decision===Ei.NOT_RECORD)return ee.debug("Recording is off, propagating context in a non-recording span"),Lt.wrapSpanContext(w);var v=new ji(this,i,e,w,p,h,m,t.startTime),y=Mi(Object.assign(g,f.attributes));return v.setAttributes(y),v},e.prototype.startActiveSpan=function(e,t,i,r){var n,s,o;if(!(arguments.length<2)){2===arguments.length?o=t:3===arguments.length?(n=t,o=i):(n=t,s=i,o=r);var a=null!=s?s:Ut.active(),l=this.startSpan(e,n,a),c=Lt.setSpan(a,l);return Ut.with(c,o,void 0,l)}},e.prototype.getGeneralLimits=function(){return this._generalLimits},e.prototype.getSpanLimits=function(){return this._spanLimits},e.prototype.getActiveSpanProcessor=function(){return this._tracerProvider.getActiveSpanProcessor()},e}(),dr=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},pr=function(){function e(e){this._spanProcessors=e}return e.prototype.forceFlush=function(){var e,t,i=[];try{for(var r=dr(this._spanProcessors),n=r.next();!n.done;n=r.next()){var s=n.value;i.push(s.forceFlush())}}catch(t){e={error:t}}finally{try{n&&!n.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return new Promise((function(e){Promise.all(i).then((function(){e()})).catch((function(t){Xi(t||new Error("MultiSpanProcessor: forceFlush failed")),e()}))}))},e.prototype.onStart=function(e,t){var i,r;try{for(var n=dr(this._spanProcessors),s=n.next();!s.done;s=n.next()){s.value.onStart(e,t)}}catch(e){i={error:e}}finally{try{s&&!s.done&&(r=n.return)&&r.call(n)}finally{if(i)throw i.error}}},e.prototype.onEnd=function(e){var t,i;try{for(var r=dr(this._spanProcessors),n=r.next();!n.done;n=r.next()){n.value.onEnd(e)}}catch(e){t={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(t)throw t.error}}},e.prototype.shutdown=function(){var e,t,i=[];try{for(var r=dr(this._spanProcessors),n=r.next();!n.done;n=r.next()){var s=n.value;i.push(s.shutdown())}}catch(t){e={error:t}}finally{try{n&&!n.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return new Promise((function(e,t){Promise.all(i).then((function(){e()}),t)}))},e}(),mr=function(){function e(){}return e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){},e.prototype.shutdown=function(){return Promise.resolve()},e.prototype.forceFlush=function(){return Promise.resolve()},e}();var gr,fr=function(){function e(e,t){this._exporter=e,this._finishedSpans=[],this._droppedSpansCount=0;var i=Z();this._maxExportBatchSize="number"==typeof(null==t?void 0:t.maxExportBatchSize)?t.maxExportBatchSize:i.OTEL_BSP_MAX_EXPORT_BATCH_SIZE,this._maxQueueSize="number"==typeof(null==t?void 0:t.maxQueueSize)?t.maxQueueSize:i.OTEL_BSP_MAX_QUEUE_SIZE,this._scheduledDelayMillis="number"==typeof(null==t?void 0:t.scheduledDelayMillis)?t.scheduledDelayMillis:i.OTEL_BSP_SCHEDULE_DELAY,this._exportTimeoutMillis="number"==typeof(null==t?void 0:t.exportTimeoutMillis)?t.exportTimeoutMillis:i.OTEL_BSP_EXPORT_TIMEOUT,this._shutdownOnce=new ce(this._shutdown,this),this._maxExportBatchSize>this._maxQueueSize&&(ee.warn("BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize"),this._maxExportBatchSize=this._maxQueueSize)}return e.prototype.forceFlush=function(){return this._shutdownOnce.isCalled?this._shutdownOnce.promise:this._flushAll()},e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){this._shutdownOnce.isCalled||0!=(e.spanContext().traceFlags&ot.SAMPLED)&&this._addToBuffer(e)},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype._shutdown=function(){var e=this;return Promise.resolve().then((function(){return e.onShutdown()})).then((function(){return e._flushAll()})).then((function(){return e._exporter.shutdown()}))},e.prototype._addToBuffer=function(e){if(this._finishedSpans.length>=this._maxQueueSize)return 0===this._droppedSpansCount&&ee.debug("maxQueueSize reached, dropping spans"),void this._droppedSpansCount++;this._droppedSpansCount>0&&(ee.warn("Dropped "+this._droppedSpansCount+" spans because maxQueueSize reached"),this._droppedSpansCount=0),this._finishedSpans.push(e),this._maybeStartTimer()},e.prototype._flushAll=function(){var e=this;return new Promise((function(t,i){for(var r=[],n=0,s=Math.ceil(e._finishedSpans.length/e._maxExportBatchSize);n<s;n++)r.push(e._flushOneBatch());Promise.all(r).then((function(){t()})).catch(i)}))},e.prototype._flushOneBatch=function(){var e=this;return this._clearTimer(),0===this._finishedSpans.length?Promise.resolve():new Promise((function(t,i){var r=setTimeout((function(){i(new Error("Timeout"))}),e._exportTimeoutMillis);Ut.with(Ai(Ut.active()),(function(){var n=e._finishedSpans.splice(0,e._maxExportBatchSize),s=function(){return e._exporter.export(n,(function(e){var n;clearTimeout(r),e.code===se.SUCCESS?t():i(null!==(n=e.error)&&void 0!==n?n:new Error("BatchSpanProcessor: span export failed"))}))},o=n.map((function(e){return e.resource})).filter((function(e){return e.asyncAttributesPending}));0===o.length?s():Promise.all(o.map((function(e){var t;return null===(t=e.waitForAsyncAttributes)||void 0===t?void 0:t.call(e)}))).then(s,(function(e){Xi(e),i(e)}))}))}))},e.prototype._maybeStartTimer=function(){var e=this;void 0===this._timer&&(this._timer=setTimeout((function(){e._flushOneBatch().then((function(){e._finishedSpans.length>0&&(e._clearTimer(),e._maybeStartTimer())})).catch((function(e){Xi(e)}))}),this._scheduledDelayMillis),this._timer)},e.prototype._clearTimer=function(){void 0!==this._timer&&(clearTimeout(this._timer),this._timer=void 0)},e}(),wr=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),vr=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.onInit(i),r}return wr(t,e),t.prototype.onInit=function(e){var t=this;!0!==(null==e?void 0:e.disableAutoFlushOnDocumentHide)&&"undefined"!=typeof document&&(this._visibilityChangeListener=function(){"hidden"===document.visibilityState&&t.forceFlush()},this._pageHideListener=function(){t.forceFlush()},document.addEventListener("visibilitychange",this._visibilityChangeListener),document.addEventListener("pagehide",this._pageHideListener))},t.prototype.onShutdown=function(){"undefined"!=typeof document&&(this._visibilityChangeListener&&document.removeEventListener("visibilitychange",this._visibilityChangeListener),this._pageHideListener&&document.removeEventListener("pagehide",this._pageHideListener))},t}(fr);!function(e){e[e.resolved=0]="resolved",e[e.timeout=1]="timeout",e[e.error=2]="error",e[e.unresolved=3]="unresolved"}(gr||(gr={}));var yr=function(){function e(e){var t;void 0===e&&(e={}),this._registeredSpanProcessors=[],this._tracers=new Map;var i=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var i=e.shift(),r=new WeakMap;e.length>0;)i=pi(i,e.shift(),0,r);return i}({},nr(),ar(e));this.resource=null!==(t=i.resource)&&void 0!==t?t:nt.empty(),this.resource=nt.default().merge(this.resource),this._config=Object.assign({},i,{resource:this.resource});var r=this._buildExporterFromEnv();if(void 0!==r){var n=new vr(r);this.activeSpanProcessor=n}else this.activeSpanProcessor=new mr}return e.prototype.getTracer=function(e,t,i){var r=e+"@"+(t||"")+":"+((null==i?void 0:i.schemaUrl)||"");return this._tracers.has(r)||this._tracers.set(r,new ur({name:e,version:t,schemaUrl:null==i?void 0:i.schemaUrl},this._config,this)),this._tracers.get(r)},e.prototype.addSpanProcessor=function(e){0===this._registeredSpanProcessors.length&&this.activeSpanProcessor.shutdown().catch((function(e){return ee.error("Error while trying to shutdown current span processor",e)})),this._registeredSpanProcessors.push(e),this.activeSpanProcessor=new pr(this._registeredSpanProcessors)},e.prototype.getActiveSpanProcessor=function(){return this.activeSpanProcessor},e.prototype.register=function(e){void 0===e&&(e={}),Lt.setGlobalTracerProvider(this),void 0===e.propagator&&(e.propagator=this._buildPropagatorFromEnv()),e.contextManager&&Ut.setGlobalContextManager(e.contextManager),e.propagator&&Zt.setGlobalPropagator(e.propagator)},e.prototype.forceFlush=function(){var e=this._config.forceFlushTimeoutMillis,t=this._registeredSpanProcessors.map((function(t){return new Promise((function(i){var r,n=setTimeout((function(){i(new Error("Span processor did not completed within timeout period of "+e+" ms")),r=gr.timeout}),e);t.forceFlush().then((function(){clearTimeout(n),r!==gr.timeout&&(r=gr.resolved,i(r))})).catch((function(e){clearTimeout(n),r=gr.error,i(e)}))}))}));return new Promise((function(e,i){Promise.all(t).then((function(t){var r=t.filter((function(e){return e!==gr.resolved}));r.length>0?i(r):e()})).catch((function(e){return i([e])}))}))},e.prototype.shutdown=function(){return this.activeSpanProcessor.shutdown()},e.prototype._getPropagator=function(e){var t;return null===(t=this.constructor._registeredPropagators.get(e))||void 0===t?void 0:t()},e.prototype._getSpanExporter=function(e){var t;return null===(t=this.constructor._registeredExporters.get(e))||void 0===t?void 0:t()},e.prototype._buildPropagatorFromEnv=function(){var e=this,t=Array.from(new Set(Z().OTEL_PROPAGATORS)),i=t.map((function(t){var i=e._getPropagator(t);return i||ee.warn('Propagator "'+t+'" requested through environment variable is unavailable.'),i})).reduce((function(e,t){return t&&e.push(t),e}),[]);return 0===i.length?void 0:1===t.length?i[0]:new bi({propagators:i})},e.prototype._buildExporterFromEnv=function(){var e=Z().OTEL_TRACES_EXPORTER;if("none"!==e&&""!==e){var t=this._getSpanExporter(e);return t||ee.error('Exporter "'+e+'" requested through environment variable is unavailable.'),t}},e._registeredPropagators=new Map([["tracecontext",function(){return new $i}],["baggage",function(){return new Ii}]]),e._registeredExporters=new Map,e}();var br={_export:function(e,t){return new Promise((function(i){Ut.with(Ai(Ut.active()),(function(){e.export(t,(function(e){i(e)}))}))}))}},Cr=function(e,t,i,r){return new(i||(i=Promise))((function(n,s){function o(e){try{l(r.next(e))}catch(e){s(e)}}function a(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}l((r=r.apply(e,t||[])).next())}))},Ar=function(e,t){var i,r,n,s,o={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return s={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(s){return function(a){return function(s){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,r&&(n=2&s[0]?r.return:s[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,s[1])).done)return n;switch(r=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(n=o.trys,(n=n.length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){o.label=s[1];break}if(6===s[0]&&o.label<n[1]){o.label=n[1],n=s;break}if(n&&o.label<n[2]){o.label=n[2],o.ops.push(s);break}n[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{i=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,a])}}},Pr=function(){function e(e){this._exporter=e,this._shutdownOnce=new ce(this._shutdown,this),this._unresolvedExports=new Set}return e.prototype.forceFlush=function(){return Cr(this,void 0,void 0,(function(){return Ar(this,(function(e){switch(e.label){case 0:return[4,Promise.all(Array.from(this._unresolvedExports))];case 1:return e.sent(),this._exporter.forceFlush?[4,this._exporter.forceFlush()]:[3,3];case 2:e.sent(),e.label=3;case 3:return[2]}}))}))},e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){var t,i,r=this;if(!this._shutdownOnce.isCalled&&0!=(e.spanContext().traceFlags&ot.SAMPLED)){var n=function(){return br._export(r._exporter,[e]).then((function(e){var t;e.code!==se.SUCCESS&&Xi(null!==(t=e.error)&&void 0!==t?t:new Error("SimpleSpanProcessor: span export failed (status "+e+")"))})).catch((function(e){Xi(e)}))};if(e.resource.asyncAttributesPending){var s=null===(i=(t=e.resource).waitForAsyncAttributes)||void 0===i?void 0:i.call(t).then((function(){return null!=s&&r._unresolvedExports.delete(s),n()}),(function(e){return Xi(e)}));null!=s&&this._unresolvedExports.add(s)}else n()}},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype._shutdown=function(){return this._exporter.shutdown()},e}();class OpenTelemetryProvider{_globalAttributes={};provider;tracer;constructor(e,t,i){this.provider=new yr({resource:new nt({[je]:"gitlens",[ze]:e.extensionVersion,[Ve]:e.env,[qe]:e.machineId,[Qe]:e.platform,"extension.id":e.extensionId,"session.id":e.sessionId,language:e.language,"vscode.edition":e.vscodeEdition,"vscode.version":e.vscodeVersion,"vscode.host":e.vscodeHost,"vscode.remoteName":e.vscodeRemoteName,"vscode.shell":e.vscodeShell,"vscode.uiKind":e.vscodeUIKind})});const r=new He({url:i?"https://otel-dev.gitkraken.com:4318/v1/traces":"https://otel.gitkraken.com:4318/v1/traces",compression:"gzip",httpAgentOptions:t?.options});this.provider.addSpanProcessor(i?new Pr(r):new vr(r)),this.tracer=this.provider.getTracer(e.extensionId)}dispose(){this.provider.shutdown()}sendEvent(e,t,i,n){const s=this.tracer.startSpan(e,{attributes:this._globalAttributes,kind:r.INTERNAL,startTime:i??Date.now()});null!=t&&s.setAttributes(t),s.end(n)}startEvent(e,t,i){const n=this.tracer.startSpan(e,{attributes:this._globalAttributes,kind:r.INTERNAL,startTime:i??Date.now()});return null!=t&&n.setAttributes(t),n}setGlobalAttributes(e){this._globalAttributes=Object.fromEntries(e)}}},4043:(e,t,i)=>{i.d(t,{$k:()=>s,$x:()=>o,HP:()=>h,I$:()=>r,WA:()=>c,_n:()=>n,eT:()=>u,gn:()=>d,lX:()=>a,mg:()=>l});var r=(e=>(e.DeepLink="link",e))(r||{}),n=(e=>(e.Branch="b",e.Commit="c",e.Comparison="compare",e.Repository="r",e.Tag="t",e))(n||{});function s(e){switch(e){case"b":return"Branch";case"c":return"Commit";case"compare":return"Comparison";case"r":return"Repository";case"t":return"Tag";default:return"Unknown"}}function o(e){switch(e){case"branch":return"b";case"revision":return"c";case"tag":return"t";default:return"r"}}function a(e){const[,t,i,r,n,...s]=e.path.split("/");if("link"!==t||"r"!==i)return;const o=new URLSearchParams(e.query);let a=o.get("url")??void 0;null!=a&&(a=decodeURIComponent(a));let l,c,h,u=o.get("path")??void 0;if(null!=u&&(u=decodeURIComponent(u)),!a&&!u)return;if(null==n)return{type:"r",repoId:r,remoteUrl:a,repoPath:u};if(null==s||0===s.length)return;const d=s.join("/");if("compare"===n){const e=d.split(/(\.\.\.|\.\.)/);if(3!==e.length)return;l=e[0],c=e[2],h=o.get("prRepoUrl")??void 0,null!=h&&(h=decodeURIComponent(h))}else l=d;return{type:n,repoId:r,remoteUrl:a,repoPath:u,targetId:l,secondaryTargetId:c,secondaryRemoteUrl:h}}var l=(e=>(e[e.Idle=0]="Idle",e[e.RepoMatch=1]="RepoMatch",e[e.CloneOrAddRepo=2]="CloneOrAddRepo",e[e.OpeningRepo=3]="OpeningRepo",e[e.AddedRepoMatch=4]="AddedRepoMatch",e[e.RemoteMatch=5]="RemoteMatch",e[e.AddRemote=6]="AddRemote",e[e.TargetMatch=7]="TargetMatch",e[e.Fetch=8]="Fetch",e[e.FetchedTargetMatch=9]="FetchedTargetMatch",e[e.OpenGraph=10]="OpenGraph",e[e.OpenComparison=11]="OpenComparison",e))(l||{}),c=(e=>(e[e.DeepLinkEventFired=0]="DeepLinkEventFired",e[e.DeepLinkCancelled=1]="DeepLinkCancelled",e[e.DeepLinkResolved=2]="DeepLinkResolved",e[e.DeepLinkStored=3]="DeepLinkStored",e[e.DeepLinkErrored=4]="DeepLinkErrored",e[e.OpenRepo=5]="OpenRepo",e[e.RepoMatched=6]="RepoMatched",e[e.RepoMatchedInLocalMapping=7]="RepoMatchedInLocalMapping",e[e.RepoMatchFailed=8]="RepoMatchFailed",e[e.RepoAdded=9]="RepoAdded",e[e.RepoOpened=10]="RepoOpened",e[e.RemoteMatched=11]="RemoteMatched",e[e.RemoteMatchFailed=12]="RemoteMatchFailed",e[e.RemoteMatchUnneeded=13]="RemoteMatchUnneeded",e[e.RemoteAdded=14]="RemoteAdded",e[e.TargetMatched=15]="TargetMatched",e[e.TargetsMatched=16]="TargetsMatched",e[e.TargetMatchFailed=17]="TargetMatchFailed",e[e.TargetFetched=18]="TargetFetched",e))(c||{}),h=(e=>(e.Clone="clone",e.Folder="folder",e.Workspace="workspace",e.Current="current",e))(h||{});const u={0:{0:1},1:{4:0,6:5,7:2,8:2},2:{5:3,10:5,4:0,1:0,3:0},3:{9:4,4:0,1:0},4:{6:5,4:0},5:{4:0,11:7,12:6,13:7},6:{14:7,4:0,1:0},7:{4:0,15:10,16:11,17:8},8:{18:9,4:0,1:0},9:{15:10,16:11,4:0},10:{2:0,4:0},11:{2:0,4:0}},d={0:{message:"Done.",increment:100},1:{message:"Finding a matching repository...",increment:10},2:{message:"Adding repository...",increment:20},3:{message:"Opening repository...",increment:30},4:{message:"Finding a matching repository...",increment:40},5:{message:"Finding a matching remote...",increment:50},6:{message:"Adding remote...",increment:60},7:{message:"finding a matching target...",increment:70},8:{message:"Fetching...",increment:80},9:{message:"Finding a matching target...",increment:90},10:{message:"Opening graph...",increment:95},11:{message:"Opening comparison...",increment:95}}},2610:(e,t,i)=>{i.d(t,{Z:()=>AutolinkedItemNode});var r=i(9496),n=i(2540),s=i(7462),o=i(8452),a=i(7512),l=i(6922);class AutolinkedItemNode extends l.Re{constructor(e,t,i,r){super(s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.item=r,this._uniqueId=(0,l.tO)(`autolink+${r.id}`,this.context)}get id(){return this._uniqueId}toClipboard(){return this.item.url}getChildren(){return[]}getTreeItem(){if(!function(e){return"closed"in e&&"boolean"==typeof e.closed}(this.item)){const{provider:e}=this.item,t=new r.TreeItem(`${this.item.prefix}${this.item.id}`,r.TreeItemCollapsibleState.None);return t.description=e?.name??"Custom",t.iconPath=new r.ThemeIcon(null==this.item.type?"link":this.item.type===n.fH.PullRequest?"git-pull-request":"issues"),t.contextValue=l.Td.AutolinkedItem,t.tooltip=new r.MarkdownString(`${this.item.description?`Autolinked ${this.item.description}`:`${null==this.item.type?"Autolinked":this.item.type===n.fH.PullRequest?"Autolinked Pull Request":"Autolinked Issue"} ${this.item.prefix}${this.item.id}`} \\\n[${this.item.url}](${this.item.url}${null!=this.item.title?` "${this.item.title}"`:""})`),t}const e=(0,a.Zh)(this.item.closedDate??this.item.date),t=new r.TreeItem(`${this.item.id}: ${this.item.title}`,r.TreeItemCollapsibleState.None);t.description=e,t.iconPath=(0,o.xX)(this.item),t.contextValue=this.item.type===o.mX.PullRequest?l.Td.PullRequest:l.Td.AutolinkedIssue;const i=` "Open ${this.item.type===o.mX.PullRequest?"Pull Request":"Issue"} \\#${this.item.id} on ${this.item.provider.name}"`,s=new r.MarkdownString(`${(0,o.sy)(this.item)} [**${this.item.title.trim()}**](${this.item.url}${i}) \\\n[#${this.item.id}](${this.item.url}${i}) was ${this.item.closed?"closed":"opened"} ${e}`,!0);return s.supportHtml=!0,s.isTrusted=!0,t.tooltip=s,t}}},7382:(e,t,i)=>{i.d(t,{E:()=>BranchNode});var r=i(9496),n=i(2540),s=i(5255),o=i(4092),a=i(3050),l=i(2061),c=i(5432),h=i(4241),u=i(3105),d=i(7469),p=i(3620),m=i(3479),g=i(9354),f=i(2925),w=i(21),v=i(9308),y=i(4741),b=i(2487),C=i(2060),A=i(1321),P=i(6922),S=Object.defineProperty,R=Object.getOwnPropertyDescriptor,D=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?R(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&S(t,i,s),s};class BranchNode extends P.bT{constructor(e,t,i,r,n,s,o){super(e,t,i),this.parent=i,this.repo=r,this.branch=n,this.root=s,this.updateContext({repository:r,branch:n,root:s}),this._uniqueId=(0,P.tO)("branch",this.context),this.limit=this.view.getNodeLastKnownLimit(this),this.options={expanded:!1,limitCommits:!1,showAsCommits:!1,showComparison:!1,showCurrent:!this.root,showStatus:!0,showTracking:!this.root,...o}}limit;options;splatted=!0;get id(){return this._uniqueId}toClipboard(){return this.branch.name}compacted=!1;get current(){return this.branch.current}get label(){if(this.options.showAsCommits)return"Commits";const e=this.branch.getNameWithoutRemote();return`${this.view.config.branches?.layout!==n.CZ.Tree||this.compacted||this.root||this.current||this.branch.detached||this.branch.starred?e:this.branch.getBasename()}${this.branch.rebasing?" (Rebasing)":""}`}get ref(){return this.branch}get treeHierarchy(){return this.root||this.current||this.branch.detached||this.branch.starred?[this.branch.name]:this.branch.getNameWithoutRemote().split("/")}_children;async getChildren(){if(null==this._children){const e=this.branch;let t,i;if(this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=e.upstream||e.remote)&&(0,l.fw)("gitlens:hasConnectedRemotes")&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,d.PQ)();const i=this.getAssociatedPullRequest(e,this.root?{include:[o.o0.Open,o.o0.Merged]}:void 0);queueMicrotask((async()=>{await(t?.promise);let r=!1;const n=setTimeout((()=>{r=!0,this.view.triggerNodeChange(this)}),250),s=await i;clearTimeout(n),null!=s&&null!=this._children&&this._children.splice(this._children[0]instanceof v._?1:0,0,new C.Z(this.view,this,s,e)),(r||null!=s)&&this.view.triggerNodeChange(this.root?this.parent??this:this)}))}const[r,n,a,c,h,p]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,e.name),this.options.showStatus&&e.current?this.view.container.git.getStatusForRepo(this.uri.repoPath):void 0,this.options.showStatus&&e.current?this.view.container.git.getMergeStatus(this.uri.repoPath):void 0,this.options.showStatus?this.view.container.git.getRebaseStatus(this.uri.repoPath):void 0,e.remote?void 0:this.view.container.git.getBranchAheadRange(e).then((e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e}):void 0))]),P=(0,d.Sb)(r);if(null==P)return[new w.AE(this.view,this,"No commits could be found.")];const S=[];!1===this.options.showComparison||this.view instanceof m.L5||S.push(new v._(this.uri,this.view,this,e,this.options.showComparison,this.splatted)),null!=i&&S.push(new C.Z(this.view,this,i,e));const R=(0,d.Sb)(a),D=(0,d.Sb)(c),k=(0,d.Sb)(h);if(this.options.showStatus&&null!=D)S.push(new b.t(this.view,this,e,D,R??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showStatus&&null!=k&&(e.current||e.name===k.incoming.name))S.push(new A.S(this.view,this,e,k,R??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showTracking){const t={ref:e.ref,repoPath:e.repoPath,state:e.state,upstream:e.upstream?.name};null!=e.upstream?!this.root||t.state.behind||t.state.ahead?(t.state.behind&&S.push(new g.V(this.view,this,e,t,"behind",this.root)),t.state.ahead&&S.push(new g.V(this.view,this,e,t,"ahead",this.root))):S.push(new g.V(this.view,this,e,t,"same",this.root)):S.push(new g.V(this.view,this,e,t,"none",this.root))}0!==S.length&&S.push(new w.AE(this.view,this,"",s.NE.Dash.repeat(2),""));const _=(0,d.Sb)(p),T=(0,d.Sb)(n);S.push(...(0,y.E)((0,u.UI)(P.commits.values(),(t=>new f.D(this.view,this,t,_?.has(t.ref),e,T))),this)),P.hasMore&&S.push(new w.Gd(this.view,this,S[S.length-1],{getCount:()=>this.view.container.git.getCommitCount(e.repoPath,e.name)})),this._children=S,setTimeout((()=>t?.fulfill()),1)}return this._children}async getTreeItem(){this.splatted=!1;let e,t,i=`${this.current?"Current branch":"Branch"} $(git-branch) ${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}`,n=P.Td.Branch;this.current&&(n+="+current"),this.branch.remote&&(n+="+remote"),this.branch.starred&&(n+="+starred"),null==this.branch.upstream||this.branch.upstream.missing||(n+="+tracking"),this.options.showAsCommits&&(n+="+commits"),this.repo.closed&&(n+="+closed");let o="";if(!this.branch.remote)if(null!=this.branch.upstream){let l=s.NE.Dash;const c=await this.branch.getRemote();if(this.branch.upstream.missing)l=s.NE.Warning;else if(null!=c){let e,t;for(const{type:i}of c.urls)if(i===a.XG.Fetch){if(e=!0,t)break}else if(i===a.XG.Push&&(t=!0,e))break;e&&t?l=s.NE.ArrowsRightLeft:t?l=s.NE.ArrowRight:e&&(l=s.NE.ArrowLeft)}t=this.options.showAsCommits?`${this.branch.getTrackingStatus({suffix:(0,p.vk)(s.NE.Dot,1,1)})}${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}${(0,p.vk)(l,2,2)}${this.branch.upstream.name}`:`${this.branch.getTrackingStatus({suffix:`${s.NE.Space} `})}${l}${s.NE.Space} ${this.branch.upstream.name}`,i+=` is ${this.branch.getTrackingStatus({empty:this.branch.upstream.missing?`missing upstream $(git-branch) ${this.branch.upstream.name}`:`up to date with $(git-branch)  ${this.branch.upstream.name}${c?.provider?.name?` on ${c.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${this.branch.upstream.name}${c?.provider?.name?` on ${c.provider.name}`:""}`})}`,(this.branch.state.ahead||this.branch.state.behind)&&(this.branch.state.ahead&&(n+="+ahead",e=new r.ThemeColor("gitlens.unpublishedChangesIconColor"),o="-green"),this.branch.state.behind&&(n+="+behind",e=new r.ThemeColor("gitlens.unpulledChangesIconColor"),o=this.branch.state.ahead?"-yellow":"-red"))}else{const e=a.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(this.branch.repoPath));i+=` hasn't been published to ${(e?.length?e[0].name:void 0)??"a remote"}`}null!=this.branch.date&&(t=`${t?`${t}${(0,p.vk)(s.NE.Dot,2,2)}`:""}${this.branch.formattedDate}`,i+=`\n\nLast commit ${this.branch.formatDateFromNow()} (${this.branch.formatDate(this.view.container.BranchDateFormatting.dateFormat)})`),i=new r.MarkdownString(i,!0),i.supportHtml=!0,i.isTrusted=!0,this.branch.starred&&i.appendMarkdown("\\\n$(star-full) Favorited");const l=this.getState("pendingPullRequest");null!=l&&i.appendMarkdown(`\n\n$(loading~spin) Loading associated pull request${s.NE.Ellipsis}`);const c=new r.TreeItem(this.label,this.options.expanded?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return c.id=this.id,c.contextValue=n,c.description=t,c.iconPath=null!=l?new r.ThemeIcon("loading~spin"):this.options.showAsCommits?new r.ThemeIcon("git-commit",e):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-branch${o}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-branch${o}.svg`)},c.tooltip=i,c.resourceUri=r.Uri.parse(`gitlens-view://branch/status/${await this.branch.getStatus()}${this.options.showCurrent&&this.current?"/current":""}`),c}async star(){await this.branch.star(),this.view.refresh(!0)}async unstar(){await this.branch.unstar(),this.view.refresh(!0)}refresh(e){this._children=void 0,e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return r??(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}_log;async getLog(){if(null==this._log){let e=this.limit??(this.root&&!this.options.limitCommits?this.view.config.pageItemLimit:this.view.config.defaultItemLimit);0!==e&&this.branch.state.ahead>e&&(e=Math.min(this.branch.state.ahead+1,2*e)),this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:e,ref:this.ref.ref,authors:this.options?.authors})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this._children=void 0,this.triggerChange(!1)))}}D([(0,h.cM)()],BranchNode.prototype,"star",1),D([(0,h.cM)()],BranchNode.prototype,"unstar",1),D([(0,c.H)(),(0,h.fF)()],BranchNode.prototype,"refresh",1),D([(0,c.H)()],BranchNode.prototype,"loadMore",1)},4004:(e,t,i)=>{i.d(t,{n:()=>BranchOrTagFolderNode});var r=i(9496),n=i(7462),s=i(7382),o=i(6922);class BranchOrTagFolderNode extends o.Re{constructor(e,t,i,r,s,a,l,c=!1){super(n.YY.fromRepoPath(s),e,t),this.parent=t,this.type=i,this.root=r,this.repoPath=s,this.folderName=a,this.relativePath=l,this._expanded=c,this._uniqueId=(0,o.tO)(`${i}-folder+${l??a}`,this.context)}get id(){return this._uniqueId}toClipboard(){return this.folderName}getChildren(){if(void 0===this.root.descendants||void 0===this.root.children)return[];const e=[];for(const t of this.root.children.values())if(void 0!==t.value)t.value.parent=this.folderName?this:this.parent,e.push(t.value);else{const i=t.descendants?.some((e=>e instanceof s.E&&e.current));e.push(new BranchOrTagFolderNode(this.view,this.folderName?this:this.parent,this.type,t,this.repoPath,t.name,t.relativePath,i))}return e}getTreeItem(){const e=new r.TreeItem(this.label,this._expanded?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=o.Td.Folder,e.iconPath=r.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}}},9354:(e,t,i)=>{i.d(t,{V:()=>BranchTrackingStatusNode});var r=i(9496),n=i(7462),s=i(5367),o=i(4321),a=i(3050),l=i(7512),c=i(5432),h=i(4241),u=i(3105),d=i(3620),p=i(2540),m=i(2800),g=i(3700),f=i(4481),w=i(6586),v=i(6922);class BranchTrackingStatusFilesNode extends v.Re{constructor(e,t,i,r,s){super(n.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.status=r,this.direction=s,this.updateContext({branch:i,branchStatus:r,branchStatusUpstreamType:s}),this._uniqueId=(0,v.tO)("tracking-status-files",this.context)}get repoPath(){return this.status.repoPath}async getChildren(){const e=await this.view.container.git.getLog(this.repoPath,{limit:0,ref:(0,o.oI)(this.status.upstream,this.branch.ref,"behind"===this.direction?"...":"..")});let t;null!=e?(await Promise.allSettled((0,u.UI)((0,u.hX)(e.commits.values(),(e=>null==e.files)),(e=>e.ensureFullDetails()))),t=[...(0,u.VS)(e.commits.values(),(e=>e.files?.map((t=>({...t,commit:e})))??[]))]):t=[],t.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const i=(0,m.vM)(t,(e=>e.path));let r=Object.values(i).map((e=>new w.q(this.view,this,e[e.length-1],this.repoPath,e.map((e=>e.commit)),this.direction)));if(this.view.config.files.layout!==p.Vc.List){const e=(0,m.Mo)(r,(e=>e.uri.relativePath.split("/")),((...e)=>(0,g.AH)((0,g.RQ)(...e))),this.view.config.files.compact);r=new f.Y(this.view,this,e,this.repoPath,"",void 0,!1).getChildren()}else r.sort(((e,t)=>e.priority-t.priority||(0,d.dm)(e.label,t.label)));return r}async getTreeItem(){const e=await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}${"behind"===this.direction?"..":"..."}`),t=e?.changedFiles??0,i=`${(0,d._6)("file",t)} changed`,n=new r.TreeItem(i,r.TreeItemCollapsibleState.Collapsed);return n.id=this.id,n.contextValue=v.Td.BranchStatusFiles,n}}var y=i(2925),b=i(21),C=i(4741),A=Object.defineProperty,P=Object.getOwnPropertyDescriptor,S=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?P(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&A(t,i,s),s};class BranchTrackingStatusNode extends v.Re{constructor(e,t,i,r,s,o=!1,a){super(n.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.status=r,this.upstreamType=s,this.root=o,this.options=a,this.updateContext({branch:i,branchStatus:r,branchStatusUpstreamType:s,root:o}),this._uniqueId=(0,v.tO)("tracking-status",this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}get repoPath(){return this.uri.repoPath}async getChildren(){if("same"===this.upstreamType||"none"===this.upstreamType)return[];const e=await this.getLog();if(null==e)return[];let t;if("ahead"===this.upstreamType){t=[...e.commits.values()];const i=t[t.length-1];if(null==await i.getPreviousSha()){const e=await this.view.container.git.getLog(this.uri.repoPath,{limit:2,ref:i.sha});null!=e&&(t[t.length-1]=(0,u.Ps)(e.commits.values()))}}else t=e.commits.values();const i=[];let r=!0;return!this.options?.showAheadCommits&&"ahead"===this.upstreamType&&this.status.upstream&&this.status.state.ahead>0?(r=!1,i.push(...await new BranchTrackingStatusFilesNode(this.view,this,this.branch,this.status,this.upstreamType).getChildren())):(i.push(...(0,C.E)((0,u.UI)(t,(e=>new y.D(this.view,this,e,"ahead"===this.upstreamType,this.branch))),this,1)),e.hasMore&&i.push(new b.Gd(this.view,this,i[i.length-1]))),r&&i.unshift(new BranchTrackingStatusFilesNode(this.view,this,this.branch,this.status,this.upstreamType)),i}async getTreeItem(){let e,t,i,n,o,c,h=0;if("none"!==this.upstreamType){const e=this.view.container.git.getRepository(this.repoPath);h=await(e?.getLastFetched())??0}switch(this.upstreamType){case"ahead":{const a=await this.branch.getRemote();e=`Changes to push to ${a?.name??(0,s.Lo)(this.status.upstream)}${a?.provider?.name?` on ${a?.provider.name}`:""}`,t=(0,d._6)("commit",this.status.state.ahead),c=`Branch $(git-branch) ${this.branch.name} is ${(0,d._6)("commit",this.status.state.ahead,{infix:"$(arrow-up) "})} ahead of $(git-branch) ${this.status.upstream}${a?.provider?.name?` on ${a.provider.name}`:""}`,i=r.TreeItemCollapsibleState.Collapsed,n=this.root?v.Td.StatusAheadOfUpstream:v.Td.BranchStatusAheadOfUpstream,o=new r.ThemeIcon("cloud-upload",new r.ThemeColor("gitlens.unpublishedChangesIconColor"));break}case"behind":{const a=await this.branch.getRemote();e=`Changes to pull from ${a?.name??(0,s.Lo)(this.status.upstream)}${a?.provider?.name?` on ${a.provider.name}`:""}`,t=(0,d._6)("commit",this.status.state.behind),c=`Branch $(git-branch) ${this.branch.name} is ${(0,d._6)("commit",this.status.state.behind,{infix:"$(arrow-down) "})} behind $(git-branch) ${this.status.upstream}${a?.provider?.name?` on ${a.provider.name}`:""}`,i=r.TreeItemCollapsibleState.Collapsed,n=this.root?v.Td.StatusBehindUpstream:v.Td.BranchStatusBehindUpstream,o=new r.ThemeIcon("cloud-download",new r.ThemeColor("gitlens.unpulledChangesIconColor"));break}case"same":{const a=await this.branch.getRemote();e=`Up to date with ${a?.name??(0,s.Lo)(this.status.upstream)}${a?.provider?.name?` on ${a.provider.name}`:""}`,t=h?`Last fetched ${(0,l.Zh)(new Date(h))}`:"",c=`Branch $(git-branch) ${this.branch.name} is up to date with $(git-branch) ${this.status.upstream}${a?.provider?.name?` on ${a.provider.name}`:""}`,i=r.TreeItemCollapsibleState.None,n=this.root?v.Td.StatusSameAsUpstream:v.Td.BranchStatusSameAsUpstream,o=new r.ThemeIcon("cloud");break}case"none":{const t=await this.view.container.git.getRemotesWithProviders(this.branch.repoPath),s=a.ss.getHighlanderProviders(t),l=s?.length?s[0].name:void 0;e=`Publish ${this.branch.name} to ${l??"a remote"}`,c=`Branch $(git-branch) ${this.branch.name} hasn't been published to ${l??"a remote"}`,i=r.TreeItemCollapsibleState.None,n=this.root?v.Td.StatusNoUpstream:v.Td.BranchStatusNoUpstream,o=new r.ThemeIcon("cloud-upload",t.length?new r.ThemeColor("gitlens.unpublishedChangesIconColor"):void 0);break}}const u=new r.TreeItem(e,i);u.id=this.id,u.contextValue=n,u.description=t,h&&(c+=`\n\nLast fetched ${(0,l.Zh)(new Date(h))}`),u.iconPath=o;const p=new r.MarkdownString(c,!0);return p.supportHtml=!0,p.isTrusted=!0,u.tooltip=p,u}refresh(e){e&&(this._log=void 0)}_log;async getLog(){if("same"!==this.upstreamType&&"none"!==this.upstreamType){if(null==this._log){const e="ahead"===this.upstreamType?(0,o.oI)(this.status.upstream,this.status.ref):(0,o.oI)(this.status.ref,this.status.upstream);this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}S([(0,c.H)(),(0,h.fF)()],BranchTrackingStatusNode.prototype,"refresh",1),S([(0,c.H)()],BranchTrackingStatusNode.prototype,"loadMore",1)},3608:(e,t,i)=>{i.d(t,{r:()=>BranchesNode});var r=i(9496),n=i(2540),s=i(7462),o=i(2800),a=i(5432),l=i(4241),c=i(5478),h=i(7382),u=i(4004),d=i(21),p=i(6922),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor;class BranchesNode extends p.Re{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,p.tO)("branches",this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}_children;async getChildren(){if(null==this._children){const e=await this.repo.getBranches({filter:e=>!e.remote,sort:{current:!1}});if(0===e.values.length)return[new d.AE(this.view,this,"No branches could be found.")];const t=e.values.map((e=>new h.E(s.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,this.repo,e,!1,{showComparison:this.view instanceof c.a?this.view.config.branches.showBranchComparison:this.view.config.showBranchComparison})));if(this.view.config.branches.layout===n.CZ.List)return t;const i=(0,o.Mo)(t,(e=>e.treeHierarchy),((...e)=>e.join("/")),this.view.config.files.compact,(e=>(e.compacted=!0,!0))),r=new u.n(this.view,this,"branch",i,this.repo.path,"",void 0);this._children=r.getChildren()}return this._children}async getTreeItem(){const e=new r.TreeItem("Branches",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=p.Td.Branches,await this.repo.hasRemotes()&&(e.contextValue+="+remotes"),this.repo.closed&&(e.contextValue+="+closed"),e.iconPath=new r.ThemeIcon("git-branch"),e}refresh(){this._children=void 0}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&m(t,i,s)})([(0,a.H)(),(0,l.fF)()],BranchesNode.prototype,"refresh",1)},2601:(e,t,i)=>{i.d(t,{R:()=>CommitFileNode});var r=i(9496),n=i(5255),s=i(6373),o=i(7462),a=i(7881),l=i(3700),c=i(6922);class CommitFileNode extends c.RW{constructor(e,t,i,r,n={}){super(o.YY.fromFile(i,r.repoPath,r.sha),e,t,i),this.commit=r,this._options=n,this.updateContext({commit:r,file:i}),this._uniqueId=(0,c.tO)("commit-file",this.context)}get id(){return this._uniqueId}toClipboard(){return this.file.path}get priority(){return 0}get ref(){return this.commit}getChildren(){return[]}async getTreeItem(){if(null==this.commit.file){const e=await this.commit.getCommitForFile(this.file);if(null==e){const e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);if(e.id=this.id,e.contextValue=this.contextValue,e.description=this.description,"type"===this.view.config.files.icon)e.resourceUri=r.Uri.from({scheme:n.sN.Git,authority:"gitlens-view",path:this.uri.path,query:JSON.stringify({path:this.uri.fsPath,ref:this.uri.sha,decoration:`gitlens-view://commit-file/status/${this.file.status}`})});else{e.resourceUri=r.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`);const t=(0,a.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,l.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,l.RQ)("images","light",t))}}return e.tooltip=this.tooltip,e.command=this.getCommand(),this._label=void 0,e}get contextValue(){return this.commit.isUncommitted?this.commit.isUncommittedStaged?`${c.Td.File}+staged`:`${c.Td.File}+unstaged`:`${c.Td.File}+committed${this._options.branch?.current?"+current":""}${this._options.branch?.current&&this._options.branch.sha===this.commit.ref?"+HEAD":""}${this._options.unpublished?"+unpublished":""}`}get description(){return s.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})}_folderName;get folderName(){return void 0===this._folderName&&(this._folderName=(0,l.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return void 0===this._label&&(this._label=s.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0}get tooltip(){const e=s.o.fromTemplate("${file}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;\\\n'directory}&nbsp;\n\n${status}${ (originalPath)}",this.file),t=new r.MarkdownString(e,!0);return t.supportHtml=!0,t.isTrusted=!0,t}getCommand(){let e;e=this.commit.lines.length?this.commit.lines[0].line-1:this._options.selection?.active.line??0;const t={commit:this.commit,uri:o.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:n.Gh.DiffWithPrevious,arguments:[void 0,t]}}}},2925:(e,t,i)=>{i.d(t,{D:()=>CommitNode});var r=i(9496),n=i(2540),s=i(5255),o=i(9338),a=i(2800),l=i(5148),c=i(2061),h=i(5432),u=i(3700),d=i(7469),p=i(3620),m=i(9137),g=i(2601),f=i(4481),w=i(2060),v=i(6922),y=Object.defineProperty,b=Object.getOwnPropertyDescriptor;class CommitNode extends v.bT{constructor(e,t,i,r,n,s,o={}){super(i.getGitUri(),e,t),this.commit=i,this.unpublished=r,this.branch=n,this.getBranchAndTagTips=s,this._options=o,this.updateContext({commit:i}),this._uniqueId=(0,v.tO)("commit",this.context)}get id(){return this._uniqueId}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get isTip(){return(this.branch?.current&&this.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}_children;async getChildren(){if(null==this._children){const e=this.commit;let t,i,r=[];if(!(this.view instanceof m.wc)&&!this.unpublished&&(0,c.fw)("gitlens:hasConnectedRemotes")&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForCommits&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,d.PQ)();const i=this.getAssociatedPullRequest(e);queueMicrotask((async()=>{await(t?.promise);let r=!1;const n=setTimeout((()=>{r=!0,this.view.triggerNodeChange(this)}),250),s=await i;clearTimeout(n),null!=s&&null!=this._children&&this._children.unshift(new w.Z(this.view,this,s,e)),(r||null!=s)&&this.view.triggerNodeChange(this)}))}const s=await e.getCommitsForFiles();for(const e of s)r.push(new g.R(this.view,this,e.file,e));if(this.view.config.files.layout!==n.Vc.List){const e=(0,a.Mo)(r,(e=>e.uri.relativePath.split("/")),((...e)=>(0,u.AH)((0,u.RQ)(...e))),this.view.config.files.compact);r=new f.Y(this.view,this,e,this.repoPath,"",void 0).getChildren()}else r.sort(((e,t)=>(0,p.dm)(e.label,t.label)));null!=i&&r.unshift(new w.Z(this.view,this,i,e)),this._children=r,setTimeout((()=>t?.fulfill()),1)}return this._children}async getTreeItem(){const e=o.i.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:l.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),t=new r.TreeItem(e,this._options.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);t.id=this.id,t.contextValue=`${v.Td.Commit}${this.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this.unpublished?"+unpublished":""}`,t.description=o.i.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:l.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0});const i=this.getState("pendingPullRequest");return t.iconPath=null!=i?new r.ThemeIcon("loading~spin"):this.unpublished?new r.ThemeIcon("arrow-up",new r.ThemeColor("gitlens.unpublishedCommitIconColor")):this.view.config.avatars?await this.commit.getAvatarUri({defaultStyle:l.D.get("defaultGravatarsStyle")}):void 0,t}getCommand(){const e={commit:this.commit,uri:this.uri,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}refresh(e){this._children=void 0,e&&this.deleteState()}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return r??(r=e.getAssociatedPullRequest({remote:t}),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}async getTooltip(){const e=await this.view.container.git.getRemotesWithProviders(this.commit.repoPath,{sort:!0}),t=await this.view.container.git.getBestRemoteWithRichProvider(e);let i,n;if(null!=t&&e.sort(((e,i)=>e===t?-1:i===t?1:0)),null==this.commit.message&&await this.commit.ensureFullDetails(),null!=t?.provider){const[e,r]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(this.commit.message??this.commit.summary,t),this.getAssociatedPullRequest(this.commit,t)]);i=(0,d.Sb)(e),n=(0,d.Sb)(r),null!=n&&i?.delete(n.id)}const s=await o.i.fromTemplateAsync(this.view.config.formats.commits.tooltip,this.commit,{autolinkedIssuesOrPullRequests:i,dateFormat:l.D.get("defaultDateFormat"),getBranchAndTagTips:this.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequestOrRemote:n,outputFormat:"markdown",remotes:e,unpublished:this.unpublished}),a=new r.MarkdownString(s,!0);return a.supportHtml=!0,a.isTrusted=!0,a}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?b(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&y(t,i,s)})([(0,h.H)()],CommitNode.prototype,"refresh",1)},21:(e,t,i)=>{i.d(t,{$h:()=>CommandMessageNode,AE:()=>MessageNode,Gd:()=>LoadMoreNode});var r=i(9496),n=i(5255),s=i(7462),o=i(5148),a=i(6922);class MessageNode extends a.Re{constructor(e,t,i,r,n,o,a){super(s.Wj,e,t),this.parent=t,this._message=i,this._description=r,this._tooltip=n,this._iconPath=o,this._contextValue=a}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this._message,r.TreeItemCollapsibleState.None);return e.contextValue=this._contextValue??a.Td.Message,e.description=this._description,e.tooltip=this._tooltip,e.iconPath=this._iconPath,e}}class CommandMessageNode extends MessageNode{constructor(e,t,i,r,n,s,o){super(e,t,r,n,s,o),this.parent=t,this._command=i}getTreeItem(){const e=super.getTreeItem();return e instanceof r.TreeItem?(e.command=this._command,e):e.then((e=>(e.command=this._command,e)))}}class PagerNode extends a.Re{constructor(e,t,i,r,n){super(s.Wj,e,t),this.message=i,this.previousNode=r,this.options=n}async loadAll(){const e=await(this.options?.getCount?.())??0;return this.view.loadMoreNodeChildren(this.parent,e>5e3?5e3:0,this.previousNode,this.options?.context)}loadMore(){return this.view.loadMoreNodeChildren(this.parent,this.options?.pageSize??o.D.get("views.pageItemLimit"),this.previousNode,this.options?.context)}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.message,r.TreeItemCollapsibleState.None);return e.contextValue=a.Td.Pager,e.command=this.getCommand(),e}getCommand(){return{title:"Load more",command:"gitlens.views.loadMoreChildren",arguments:[this]}}}class LoadMoreNode extends PagerNode{constructor(e,t,i,r){super(e,t,r?.message??(0===r?.pageSize?`Load all ${n.NE.Space}${n.NE.Dash}${n.NE.Space} this may take a while`:"Load more"),i,r)}}},9308:(e,t,i)=>{i.d(t,{_:()=>CompareBranchNode});var r=i(9496),n=i(2540),s=i(5255),o=i(4321),a=i(9729),l=i(3636),c=i(5432),h=i(4241),u=i(7469),d=i(3620),p=i(5988),m=i(812),g=i(6922),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&f(t,i,s),s};class CompareBranchNode extends g.Re{constructor(e,t,i,r,n,s=!1){super(e,t,i),this.parent=i,this.branch=r,this.showComparison=n,this.root=s,this.updateContext({branch:r,root:s}),this._uniqueId=(0,g.tO)("compare-branch",this.context),this.loadCompareWith()}_children;_compareWith;get ahead(){return{ref1:this._compareWith?.ref||"HEAD",ref2:this.branch.ref}}get behind(){return{ref1:this.branch.ref,ref2:this._compareWith?.ref||"HEAD"}}get repoPath(){return this.branch.repoPath}async getChildren(){if(null==this._compareWith)return[];if(null==this._children){const e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.branch.repoPath,[(0,o.oI)(t.ref1,t.ref2,"...")]),r=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2);this._children=[new p.J(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery((0,o.oI)(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:this.compareWithWorkingTree?"":r??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{description:(0,d._6)("commit",i?.behind??0),expand:!1}),new p.J(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery((0,o.oI)(e.ref1,this.compareWithWorkingTree?"":e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:r??e.ref1,ref2:this.compareWithWorkingTree?"":e.ref2,query:this.getAheadFilesQuery.bind(this)}},{description:(0,d._6)("commit",i?.ahead??0),expand:!1}),new m.V(this.view,this,this.repoPath,this._compareWith.ref||"HEAD",this.compareWithWorkingTree?"":this.branch.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})]}return this._children}getTreeItem(){let e,t,i;null==this._compareWith?(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with <branch, tag, or ref>`,e=r.TreeItemCollapsibleState.None,i=`Click to compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with a branch, tag, or ref`):(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with ${(0,o.zL)(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,e=r.TreeItemCollapsibleState.Collapsed);const n=new r.TreeItem(t,e);return n.id=this.id,n.contextValue=`${g.Td.CompareBranch}${this.branch.current?"+current":""}+${this.comparisonType}${null==this._compareWith?"":"+comparing"}${this.root?"+root":""}`,null==this._compareWith&&(n.command={title:`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with${s.NE.Ellipsis}`,command:"gitlens.views.editNode",arguments:[this]}),n.iconPath=new r.ThemeIcon("git-compare"),n.tooltip=i,n}async clear(){this._compareWith=void 0,await this.updateCompareWith(void 0),this._children=void 0,this.view.triggerNodeChange(this)}async edit(){await this.compareWith()}refresh(){this._children=void 0,this.loadCompareWith()}async setComparisonType(e){null!=this._compareWith?await this.updateCompareWith({...this._compareWith,type:e}):this.showComparison=e,this._children=void 0,this.view.triggerNodeChange(this)}get comparisonType(){return this._compareWith?.type??this.showComparison}get compareWithWorkingTree(){return this.comparisonType===n.DH.Working}async compareWith(){const e=await(0,l.V)(this.branch.repoPath,`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:this.branch.ref,sort:{branches:{current:!0},tags:{}}});null==e||e instanceof a.$w||(await this.updateCompareWith({ref:e.ref,notation:void 0,type:this.comparisonType}),this._children=void 0,this.view.triggerNodeChange(this))}async getAheadFilesQuery(){const e=(0,o.oI)(this._compareWith?.ref||"HEAD",this.branch.ref||"HEAD","..."),[t,i,r,n]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]);let s=(0,u.Sb)(t)??[],a=(0,u.Sb)(r);if(this.compareWithWorkingTree){const e=(0,u.Sb)(i);if(null!=e)if(0===s.length)s=e;else for(const t of e){const e=s.findIndex((e=>e.path===t.path));-1!==e?s.splice(e,1,t):s.push(t)}const t=(0,u.Sb)(n);null!=t&&(a=null==a?t:{additions:a.additions+t.additions,deletions:a.deletions+t.deletions,changedFiles:s.length,approximated:!0})}return{label:`${(0,d._6)("file",s.length,{zero:"No"})} changed`,files:s,stats:a}}async getBehindFilesQuery(){const e=(0,o.oI)(this.branch.ref,this._compareWith?.ref||"HEAD","..."),[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,u.Sb)(t)??[];return{label:`${(0,d._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,u.Sb)(i)}}getCommitsQuery(e){const t=this.repoPath;return async i=>{const r=await this.view.container.git.getLog(t,{limit:i,ref:e}),n={log:r,hasMore:r?.hasMore??!0};return n.hasMore&&(n.more=async e=>{n.log=await(n.log?.more?.(e))??n.log,n.hasMore=n.log?.hasMore??!0}),n}}async getFilesQuery(){let e;e=this._compareWith?.ref?this.compareWithWorkingTree?this._compareWith.ref:`${this._compareWith.ref}..${this.branch.ref}`:this.branch.ref;const[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,u.Sb)(t)??[];return{label:`${(0,d._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,u.Sb)(i)}}loadCompareWith(){const e=this.view.container.storage.getWorkspace("branch:comparisons"),t=`${this.branch.id}${this.branch.current?"+current":""}`,i=e?.[t];this._compareWith=null!=i&&"string"==typeof i?{ref:i,notation:void 0,type:this.showComparison}:i}async updateCompareWith(e){this._compareWith=e;let t=this.view.container.storage.getWorkspace("branch:comparisons");if(null==t){if(null==e)return;t=Object.create(null)}const i=`${this.branch.id}${this.branch.current?"+current":""}`;if(null!=e)t[i]={...e};else{if(null==t[i])return;const{[i]:e,...r}=t;t=r}await this.view.container.storage.storeWorkspace("branch:comparisons",t)}}v([(0,h.cM)()],CompareBranchNode.prototype,"clear",1),v([(0,h.cM)()],CompareBranchNode.prototype,"edit",1),v([(0,c.H)(),(0,h.fF)()],CompareBranchNode.prototype,"refresh",1),v([(0,h.cM)()],CompareBranchNode.prototype,"setComparisonType",1)},5538:(e,t,i)=>{i.d(t,{f:()=>y});var r=i(9496),n=i(4290),s=i(7462),o=i(4321),a=i(5432),l=i(4241),c=i(7469),h=i(3620),u=i(5988),d=i(812),p=i(6922),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&m(t,i,s),s};let w=0;const v=class _CompareResultsNode extends p.Re{constructor(e,t,i,r,n,o=0){super(s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._ref=r,this._compareWith=n,this._pinned=o,this._instanceId=w++,this.updateContext({comparisonId:`${r.ref}+${n.ref}+${this._instanceId}`}),this._uniqueId=(0,p.tO)("comparison-results",this.context)}static getPinnableId(e,t,i){return(0,n.FB)(`${e}|${t}|${i}`,"base64")}_instanceId;get id(){return this._uniqueId}get ahead(){return{ref1:this._compareWith.ref||"HEAD",ref2:this._ref.ref}}get behind(){return{ref1:this._ref.ref,ref2:this._compareWith.ref||"HEAD"}}get canDismiss(){return!this.pinned}get compareRef(){return this._ref}get compareWithRef(){return this._compareWith}_order=Date.now();get order(){return this._pinned||this._order}get pinned(){return 0!==this._pinned}_children;async getChildren(){if(null==this._children){const e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.repoPath,[(0,o.oI)(t.ref1||"HEAD",t.ref2,"...")]),r=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2);this._children=[new u.J(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery((0,o.oI)(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:""===t.ref1?"":r??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{description:(0,h._6)("commit",i?.behind??0),expand:!1}),new u.J(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery((0,o.oI)(e.ref1,e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:r??e.ref1,ref2:e.ref2,query:this.getAheadFilesQuery.bind(this)}},{description:(0,h._6)("commit",i?.ahead??0),expand:!1}),new d.V(this.view,this,this.repoPath,this._compareWith.ref,this._ref.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})]}return this._children}getTreeItem(){let e;if(this.view.container.git.repositoryCount>1){const t=this.repoPath?this.view.container.git.getRepository(this.repoPath):void 0;e=t?.formattedName??this.repoPath}const t=new r.TreeItem(`Comparing ${this._ref.label??(0,o.zL)(this._ref.ref,{strings:{working:"Working Tree"}})} with ${this._compareWith.label??(0,o.zL)(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,r.TreeItemCollapsibleState.Collapsed);return t.id=this.id,t.contextValue=`${p.Td.CompareResults}${this._pinned?"+pinned":""}${""===this._ref.ref?"+working":""}`,t.description=e,this._pinned&&(t.iconPath=new r.ThemeIcon("pinned")),t}async getDiffRefs(){return Promise.resolve([this._compareWith.ref,this._ref.ref])}async pin(){this.pinned||(this._pinned=Date.now(),await this.updatePinned(),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}refresh(e=!1){e&&(this._children=void 0)}async swap(){if(""===this._ref.ref)return void r.window.showErrorMessage("Cannot swap comparisons with the working tree");const e=this.getPinnableId(),t=this._ref;this._ref=this._compareWith,this._compareWith=t,this.pinned&&(await this.view.updatePinned(e),await this.updatePinned()),this._children=void 0,this.view.triggerNodeChange(this.parent),queueMicrotask((()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0})))}async unpin(){this.pinned&&(this._pinned=0,await this.view.updatePinned(this.getPinnableId()),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}getPinnableId(){return _CompareResultsNode.getPinnableId(this.repoPath,this._ref.ref,this._compareWith.ref)}async getAheadFilesQuery(){return this.getAheadBehindFilesQuery((0,o.oI)(this._compareWith?.ref||"HEAD",this._ref.ref||"HEAD","..."),""===this._ref.ref)}async getBehindFilesQuery(){return this.getAheadBehindFilesQuery((0,o.oI)(this._ref.ref||"HEAD",this._compareWith.ref||"HEAD","..."),!1)}async getAheadBehindFilesQuery(e,t){const[i,r,n,s]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),t?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),t?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]);let o=(0,c.Sb)(i)??[],a=(0,c.Sb)(n);if(t){const e=(0,c.Sb)(r);if(null!=e)if(0===o.length)o=e??[];else for(const t of e){const e=o.findIndex((e=>e.path===t.path));-1!==e?o.splice(e,1,t):o.push(t)}const t=(0,c.Sb)(s);null!=t&&(a=null==a?t:{additions:a.additions+t.additions,deletions:a.deletions+t.deletions,changedFiles:o.length,approximated:!0})}return{label:`${(0,h._6)("file",o.length,{zero:"No"})} changed`,files:o,stats:a}}getCommitsQuery(e){const t=this.repoPath;return async i=>{const r=await this.view.container.git.getLog(t,{limit:i,ref:e}),n={log:r,hasMore:r?.hasMore??!0};return n.hasMore&&(n.more=async e=>{n.log=await(n.log?.more?.(e))??n.log,n.hasMore=n.log?.hasMore??!0}),n}}async getFilesQuery(){let e;if(""===this._compareWith.ref)throw new Error("Cannot get files for comparisons of a ref with working tree");e=""===this._ref.ref?this._compareWith.ref:`${this._compareWith.ref}..${this._ref.ref}`;const[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,c.Sb)(t)??[];return{label:`${(0,h._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,c.Sb)(i)}}updatePinned(){return this.view.updatePinned(this.getPinnableId(),{type:"comparison",timestamp:this._pinned,path:this.repoPath,ref1:{label:this._ref.label,ref:this._ref.ref},ref2:{label:this._compareWith.label,ref:this._compareWith.ref}})}};f([(0,a.H)(),(0,l.fF)()],v.prototype,"getDiffRefs",1),f([(0,l.cM)()],v.prototype,"pin",1),f([(0,a.H)(),(0,l.fF)()],v.prototype,"refresh",1),f([(0,l.cM)()],v.prototype,"swap",1),f([(0,l.cM)()],v.prototype,"unpin",1);let y=v},5310:(e,t,i)=>{i.d(t,{K:()=>ContributorNode});var r=i(9496),n=i(8388),s=i(5255),o=i(5148),a=i(5432),l=i(4241),c=i(3105),h=i(3620),u=i(2925),d=i(21),p=i(4741),m=i(6922),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor,w=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&g(t,i,s),s};class ContributorNode extends m.Re{constructor(e,t,i,r,n){super(e,t,i),this.parent=i,this.contributor=r,this._options=n,this.updateContext({contributor:r}),this._uniqueId=(0,m.tO)("contributor",this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}toClipboard(){return`${this.contributor.name}${this.contributor.email?` <${this.contributor.email}>`:""}`}get repoPath(){return this.contributor.repoPath}async getChildren(){const e=await this.getLog();if(null==e)return[new d.AE(this.view,this,"No commits could be found.")];const t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),i=[...(0,p.E)((0,c.UI)(e.commits.values(),(e=>new u.D(this.view,this,e,void 0,void 0,t))),this)];return e.hasMore&&i.push(new d.Gd(this.view,this,i[i.length-1])),i}async getTreeItem(){const e=this._options?.presence?.get(this.contributor.email),t=new r.TreeItem(this.contributor.current?`${this.contributor.label} (you)`:this.contributor.label,r.TreeItemCollapsibleState.Collapsed);let i,a;if(t.id=this.id,t.contextValue=this.contributor.current?`${m.Td.Contributor}+current`:m.Td.Contributor,t.description=`${null!=e&&"offline"!==e.status?`${e.statusText} ${s.NE.Space}${s.NE.Dot}${s.NE.Space} `:""}${null!=this.contributor.date?`${this.contributor.formatDateFromNow()}, `:""}${(0,h._6)("commit",this.contributor.count)}`,this.view.config.avatars){const t=o.D.get("hovers.avatarSize");if(i=await this.contributor.getAvatarUri({defaultStyle:o.D.get("defaultGravatarsStyle"),size:t}),null!=e){const r=`${this.contributor.count?"You are":`${this.contributor.label} is`} ${"dnd"===e.status?"in ":""}${e.statusText.toLocaleLowerCase()}`;a=`![${r}](${i.toString(!0)}|width=${t},height=${t} "${r}")![${r}](${(0,n.TU)(e.status)} "${r}")`}else a=`![${this.contributor.label}](${i.toString(!0)}|width=${t},height=${t} "${this.contributor.label}")`}const l=new Intl.NumberFormat,c=null!=this.contributor.stats?`\\\n${(0,h._6)("file",this.contributor.stats.files,{format:l.format})} changed, ${(0,h._6)("addition",this.contributor.stats.additions,{format:l.format})}, ${(0,h._6)("deletion",this.contributor.stats.deletions,{format:l.format})}`:"",u=this.contributor.email?`__[${this.contributor.name}](mailto:${this.contributor.email} "Email ${this.contributor.label} (${this.contributor.email})")__`:`__${this.contributor.label}__`,d=null!=this.contributor.date?`Last commit ${this.contributor.formatDateFromNow()} (${this.contributor.formatDate()})\\\n`:"",p=new r.MarkdownString(`${null!=a?a:""} &nbsp;${u} \n\n${d}${(0,h._6)("commit",this.contributor.count,{format:l.format})}${c}`);return p.supportHtml=!0,p.isTrusted=!0,t.tooltip=p,t.iconPath=i,t}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{all:this._options?.all,ref:this._options?.ref,limit:this.limit??this.view.config.defaultItemLimit,authors:[{name:this.contributor.name,email:this.contributor.email,username:this.contributor.username,id:this.contributor.id}]})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}w([(0,a.H)(),(0,l.fF)()],ContributorNode.prototype,"refresh",1),w([(0,a.H)()],ContributorNode.prototype,"loadMore",1)},4562:(e,t,i)=>{i.d(t,{I:()=>ContributorsNode});var r=i(9496),n=i(1719),s=i(5148),o=i(5432),a=i(4241),l=i(6767),c=i(21),h=i(5310),u=i(6922),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,m=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&d(t,i,s),s};class ContributorsNode extends u.Re{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,u.tO)("contributors",this.context)}splatted=!0;get id(){return this._uniqueId}get repoPath(){return this.repo.path}_children;async getChildren(){if(null==this._children){const e=s.D.get("views.contributors.showAllBranches");let t;if(!e)try{const e=await this.view.container.git.getBranch(this.uri.repoPath);null==e?.upstream?.name||e.upstream.missing||(t="@{u}")}catch{}const i=s.D.get("views.contributors.showStatistics"),r=await this.repo.getContributors({all:e,ref:t,stats:i});if(0===r.length)return[new c.AE(this.view,this,"No contributors could be found.")];n.V.sort(r);const o=await this.maybeGetPresenceMap(r);this._children=r.map((i=>new h.K(this.uri,this.view,this,i,{all:e,ref:t,presence:o})))}return this._children}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("Contributors",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=u.Td.Contributors,e.iconPath=new r.ThemeIcon("organization"),e}updateAvatar(e){if(null!=this._children)for(const t of this._children)t.contributor.email===e&&t.triggerChange()}refresh(){this._children=void 0}async maybeGetPresenceMap(e){const t=e.find((e=>e.current))?.email;if(null!=t)return this.view.container.vsls.getContactsPresence([t])}}m([(0,o.H)(),(0,a.fF)()],ContributorsNode.prototype,"refresh",1),m([(0,a.fF)({args:!1}),(0,l.V)(250)],ContributorsNode.prototype,"maybeGetPresenceMap",1)},906:(e,t,i)=>{i.d(t,{J:()=>FileHistoryNode});var r=i(9496),n=i(439),s=i(3646),o=i(5148),a=i(5432),l=i(4241),c=i(4488),h=i(3105),u=i(4336),d=i(3700),p=i(2925),m=i(21),g=i(145),f=i(9719),w=i(4741),v=i(6922),y=Object.defineProperty,b=Object.getOwnPropertyDescriptor,C=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?b(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&y(t,i,s),s};class FileHistoryNode extends v.CF{constructor(e,t,i,r,n){super(e,t,i),this.parent=i,this.folder=r,this.branch=n,null!=n&&this.updateContext({branch:n}),this._uniqueId=(0,v.tO)(`file-history+${e.toString()}`,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;splatted=!0;get id(){return this._uniqueId}toClipboard(){return this.uri.fileName}async getChildren(){this.view.description=`${this.label}${this.parent instanceof g._&&!this.parent.followingEditor?" (pinned)":""}`;const e=[];if(null==this.uri.repoPath)return e;const t=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[i,r,n,s,o]=await Promise.all([this.getLog(),null==this.uri.sha?this.view.container.git.getStatusForFiles(this.uri.repoPath,this.getPathOrGlob()):void 0,null==this.uri.sha?this.view.container.git.getCurrentUser(this.uri.repoPath):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,t?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:t}):void 0]);if(r?.length)if(this.folder){const t=(0,h.UI)((0,h.uw)((0,h.VS)(r,(e=>e.getPseudoCommits(this.view.container,n))),(e=>e.sha),((e,t)=>e.with({files:{files:[...e.files,...t.files]}}))),(e=>new p.D(this.view,this,e)));e.push(...t)}else{const[t]=r,i=t.getPseudoCommits(this.view.container,n);i.length&&e.push(...i.map((e=>new f.m(this.view,this,t,e))))}return null!=i&&(e.push(...(0,w.E)((0,h.DZ)(i.commits.values(),(e=>this.folder?new p.D(this.view,this,e,o?.has(e.ref),this.branch,void 0,{expand:!1}):null!=e.file?new f.m(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:s,unpublished:o?.has(e.ref)}):void 0)),this)),i.hasMore&&e.push(new m.Gd(this.view,this,e[e.length-1]))),0===e.length?[new m.AE(this.view,this,"No file history could be found.")]:e}getTreeItem(){this.splatted=!1;const e=this.label,t=new r.TreeItem(e,r.TreeItemCollapsibleState.Expanded);return t.contextValue=v.Td.FileHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}\n${this.uri.directory}/${null==this.uri.sha?"":`\n\n${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof g._&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return this.folder&&""===this.uri.fileName?`${(0,d.EZ)(this.uri.path)}${this.uri.sha?` ${this.uri.sha===n.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`:`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===n.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}subscribe(){const e=this.view.container.git.getRepository(this.uri);if(null==e)return;return r.Disposable.from(e.onDidChange(this.onRepositoryChanged,this),e.onDidChangeFileSystem(this.onFileSystemChanged,this),e.startWatchingFileSystem(),o.D.onDidChange((e=>{o.D.changed(e,"advanced.fileHistoryFollowsRenames")&&this.view.resetNodeLastKnownLimit(this)})))}etag(){return Date.now()}onRepositoryChanged(e){e.changed(s.I6.Index,s.I6.Heads,s.I6.Remotes,s.I6.RemoteProviders,s.I6.Status,s.I6.Unknown,s.du.Any)&&(u.Yd.debug(`FileHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){if(this.folder){if(!e.uris.some((e=>e.fsPath.startsWith(this.uri.fsPath))))return}else if(!e.uris.some((e=>e.toString()===this.uri.toString())))return;u.Yd.debug(`FileHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0)}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.getPathOrGlob(),{limit:this.limit??this.view.config.pageItemLimit,ref:this.uri.sha})),this._log}getPathOrGlob(){return this.folder?r.Uri.joinPath(this.uri,"*"):this.uri}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}}C([(0,l.fF)()],FileHistoryNode.prototype,"subscribe",1),C([(0,a.H)(),(0,l.fF)()],FileHistoryNode.prototype,"refresh",1),C([(0,c.H)()],FileHistoryNode.prototype,"getPathOrGlob",1),C([(0,a.H)()],FileHistoryNode.prototype,"loadMore",1)},145:(e,t,i)=>{i.d(t,{_:()=>FileHistoryTrackerNode});var r=i(9496),n=i(7462),s=i(4321),o=i(3636),a=i(4298),l=i(2061),c=i(5432),h=i(4241),u=i(9796),d=i(4336),p=i(6004),m=i(2509),g=i(906),f=i(6922),w=Object.defineProperty,v=Object.getOwnPropertyDescriptor,y=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?v(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&w(t,i,s),s};class FileHistoryTrackerNode extends f.CF{_base;_child;splatted=!0;constructor(e){super(n.Wj,e)}dispose(){super.dispose(),this.resetChild()}resetChild(){null!=this._child&&(this._child.dispose(),this._child=void 0)}async getChildren(){if(null==this._child){if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide file history information.",[];this.view.message=void 0;const e={...this.uri,repoPath:this.uri.repoPath,sha:this._base??this.uri.sha},t=new n.YY(this.uri,e);let i,o=!1;try{((await r.workspace.fs.stat(this.uri)).type&r.FileType.Directory)===r.FileType.Directory&&(o=!0)}catch{}this.view.title=o?"Folder History":"File History",e.sha&&"HEAD"!==e.sha?(0,s.D3)(e.sha)||({values:[i]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:t=>t.name===e.sha})):i=await this.view.container.git.getBranch(this.uri.repoPath),this._child=new g.J(t,this.view,this,o,i)}return this._child.getChildren()}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("File History",r.TreeItemCollapsibleState.Expanded);return e.contextValue=f.Td.ActiveFileHistory,e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=n.Wj&&null!=this._uri.repoPath}async changeBase(){const e=await(0,o.V)(this.uri.repoPath,"Change File History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if((0,s.UR)(e)){const t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this._child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){const t=(0,p.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==n.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());const i=r.window.activeTextEditor;if(null==i||!this.view.container.git.isTrackable(i.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&r.window.visibleTextEditors.some((e=>e.document?.uri.path===this.uri.path)))||(this.reset(),(0,p.lH)(t,`, uri=${d.Yd.toLoggable(this._uri)}`),!1);if(i.document.uri.path===this.uri.path)return(0,p.lH)(t,`, uri=${d.Yd.toLoggable(this._uri)}`),!0;let s,o=await n.YY.fromUri(i.document.uri);if(null!=o.sha){const e=await this.view.container.git.getWorkingUri(o.repoPath,o);null!=e&&(s=e)}return!(!this.hasUri||!a.n.equals(s??o,this.uri))||(null!=s&&(o=await n.YY.fromUri(s)),null==o.repoPath?this.reset():(this.setUri(o),this.resetChild()),(0,p.lH)(t,`, uri=${d.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this.resetChild()}setEditorFollowing(e){e&&this.setUri(),this.canSubscribe=e,e||this.triggerChange()}async showHistoryForUri(e){this.setUri(e),await this.triggerChange()}subscribe(){return r.Disposable.from(r.window.onDidChangeActiveTextEditor((0,u.Ds)(this.onActiveEditorChanged,250),this))}etag(){return 0}_triggerChangeDebounced;onActiveEditorChanged(e){if(null==e&&(0,m.pt)(this._uri))return null==this._triggerChangeDebounced&&(this._triggerChangeDebounced=(0,u.Ds)((()=>this.triggerChange()),1500)),void this._triggerChangeDebounced();this.triggerChange()}setUri(e){this._uri=e??n.Wj,(0,l.v)("gitlens:views:fileHistory:canPin",this.hasUri)}}y([(0,h.fF)()],FileHistoryTrackerNode.prototype,"resetChild",1),y([(0,c.H)(),(0,h.cM)()],FileHistoryTrackerNode.prototype,"changeBase",1),y([(0,c.H)(),(0,h.fF)({exit:!0})],FileHistoryTrackerNode.prototype,"refresh",1),y([(0,h.cM)()],FileHistoryTrackerNode.prototype,"setEditorFollowing",1),y([(0,h.cM)()],FileHistoryTrackerNode.prototype,"showHistoryForUri",1),y([(0,h.fF)()],FileHistoryTrackerNode.prototype,"subscribe",1),y([(0,h.fF)({args:!1})],FileHistoryTrackerNode.prototype,"onActiveEditorChanged",1)},9719:(e,t,i)=>{i.d(t,{m:()=>FileRevisionAsCommitNode});var r=i(9496),n=i(5255),s=i(9338),o=i(6373),a=i(7462),l=i(7881),c=i(5148),h=i(3700),u=i(7469),d=i(7692),p=i(4167),m=i(6922);class FileRevisionAsCommitNode extends m.RW{constructor(e,t,i,r,n={}){super(a.YY.fromFile(i,r.repoPath,r.sha),e,t,i),this.commit=r,this._options=n}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get isTip(){return(this._options.branch?.current&&this._options.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}async getChildren(){if(!this.commit.file?.hasConflicts)return[];const[e,t]=await Promise.allSettled([this.view.container.git.getMergeStatus(this.commit.repoPath),this.view.container.git.getRebaseStatus(this.commit.repoPath)]),i=(0,u.Sb)(e);if(null==i)return[];const r=(0,u.Sb)(t);return null==r?[]:[new d.l(this.view,this,i??r,this.file),new p.w(this.view,this,i??r,this.file)]}async getTreeItem(){if(null==this.commit.file){const e=await this.commit.getCommitForFile(this.file);if(null==e){const e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}const e=new r.TreeItem(s.i.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),this.commit.file?.hasConflicts?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.None);if(e.contextValue=this.contextValue,e.description=s.i.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),e.resourceUri=r.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`),!this.commit.isUncommitted&&this.view.config.avatars&&(e.iconPath=this._options.unpublished?new r.ThemeIcon("arrow-up",new r.ThemeColor("gitlens.unpublishedCommitIconColor")):await this.commit.getAvatarUri({defaultStyle:c.D.get("defaultGravatarsStyle")})),null==e.iconPath){const t=(0,l.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,h.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,h.RQ)("images","light",t))}}return e.command=this.getCommand(),e}get contextValue(){return this.commit.isUncommitted?this.commit.file?.hasConflicts?`${m.Td.File}+conflicted`:this.commit.isUncommittedStaged?`${m.Td.File}+staged`:`${m.Td.File}+unstaged`:`${m.Td.File}+committed${this._options.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this._options.unpublished?"+unpublished":""}`}getCommand(){let e;if(e=this.commit.lines.length?this.commit.lines[0].line-1:this._options.selection?.active.line??0,this.commit.file?.hasConflicts)return{title:"Open Changes",command:n.Gh.DiffWith,arguments:[{lhs:{sha:"MERGE_HEAD",uri:a.YY.fromFile(this.file,this.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:a.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}}]};const t={commit:this.commit,uri:a.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:n.Gh.DiffWithPrevious,arguments:[void 0,t]}}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getConflictBaseUri(){if(!this.commit.file?.hasConflicts)return;const e=await this.view.container.git.getMergeBase(this.repoPath,"MERGE_HEAD","HEAD");return a.YY.fromFile(this.file,this.repoPath,e??"HEAD")}async getTooltip(){const e=await this.view.container.git.getRemotesWithProviders(this.commit.repoPath),t=await this.view.container.git.getBestRemoteWithRichProvider(e);let i,n;if(null==this.commit.message&&await this.commit.ensureFullDetails(),null!=t?.provider){const[e,r]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(this.commit.message??this.commit.summary,t),this.commit.getAssociatedPullRequest({remote:t})]);i=(0,u.Sb)(e),n=(0,u.Sb)(r),null!=n&&i?.delete(n.id)}const a=o.o.fromTemplate("${status}${ (originalPath)}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}",this.file),l=await s.i.fromTemplateAsync(this.view.config.formats.commits.tooltipWithStatus.replace("{{slot-status}}",a),this.commit,{autolinkedIssuesOrPullRequests:i,dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:this._options.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequestOrRemote:n,outputFormat:"markdown",remotes:e,unpublished:this._options.unpublished}),h=new r.MarkdownString(l,!0);return h.supportHtml=!0,h.isTrusted=!0,h}}},4481:(e,t,i)=>{i.d(t,{Y:()=>FolderNode});var r=i(9496),n=i(2540),s=i(7462),o=i(3620),a=i(6922);class FolderNode extends a.Re{constructor(e,t,i,r,n,o,l){super(s.YY.fromRepoPath(r),e,t),this.parent=t,this.root=i,this.repoPath=r,this.folderName=n,this.relativePath=o,this.containsWorkingFiles=l,this._uniqueId=(0,a.tO)(`folder+${o??n}`,this.context)}priority=1;get id(){return this._uniqueId}toClipboard(){return this.folderName}getChildren(){if(void 0===this.root.descendants||void 0===this.root.children)return[];let e;if(FolderNode.getFileNesting(this.view.config.files,this.root.descendants,void 0===this.relativePath)===n.Vc.List)this.root.descendants.forEach((e=>e.relativePath=this.root.relativePath)),e=this.root.descendants;else{e=[];for(const t of this.root.children.values())void 0!==t.value?(t.value.parent=this.folderName?this:this.parent,t.value.relativePath=this.root.relativePath,e.push(t.value)):e.push(new FolderNode(this.view,this.folderName?this:this.parent,t,this.repoPath,t.name,t.relativePath,this.containsWorkingFiles))}return e.sort(((e,t)=>(e instanceof FolderNode?-1:1)-(t instanceof FolderNode?-1:1)||e.priority-t.priority||(0,o.dm)(e.label,t.label))),e}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.Expanded);return e.id=this.id,e.contextValue=a.Td.Folder,this.containsWorkingFiles&&(e.contextValue+="+working"),e.iconPath=r.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}static getFileNesting(e,t,i){const r=e.layout||n.Vc.Auto;if(r===n.Vc.Auto){if(i||e.compact){const i=e.threshold||5;if(t.length<=i)return n.Vc.List}return n.Vc.Tree}return r}}},4741:(e,t,i)=>{i.d(t,{E:()=>o});var r=i(21),n=i(6922);const s=[[0,"Less than a week ago"],[7,"Over a week ago"],[25,"Over a month ago"],[77,"Over 3 months ago"]];function*o(e,t,i,{show:o}={show:!0}){if(!t.view.config.showRelativeDateMarkers||!o)return yield*e;let a,l=i??0;const c=Date.now();let h=!0;for(const i of e){if(l<s.length){let[e,o]=s[l];if(void 0===a){const t=new Date(c);a=t.setDate(t.getDate()-e)}const u=new Date(i.commit.committer.date).setUTCHours(0,0,0,0);if(u<=a){for(;l<s.length-1;){[e]=s[l+1];const t=new Date(c);if(u>t.setDate(t.getDate()-e))break;l++,a=void 0,[,o]=s[l]}h||(yield new r.AE(t.view,t,"",o,void 0,void 0,n.Td.DateMarker)),l++,a=void 0}}h=!1,yield i}}},3126:(e,t,i)=>{i.d(t,{q:()=>LineHistoryNode});var r=i(9496),n=i(439),s=i(7881),o=i(4321),a=i(3646),l=i(5432),c=i(4241),h=i(4488),u=i(3105),d=i(4336),p=i(21),m=i(9719),g=i(4741),f=i(1614),w=i(6922),v=Object.defineProperty,y=Object.getOwnPropertyDescriptor,b=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?y(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&v(t,i,s),s};class LineHistoryNode extends w.CF{constructor(e,t,i,r,n,s){super(e,t,i),this.parent=i,this.branch=r,this.selection=n,this.editorContents=s,null!=r&&this.updateContext({branch:r}),this._uniqueId=(0,w.tO)(`file-history+${e.toString()}+[${n.start.line},${n.start.character}-${n.end.line},${n.end.character}]`,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;splatted=!0;get id(){return this._uniqueId}toClipboard(){return this.uri.fileName}async getChildren(){this.view.description=`${this.label}${this.parent instanceof f.A&&!this.parent.followingEditor?" (pinned)":""}`;const e=[];if(null==this.uri.repoPath)return e;let t=this.selection;const i=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[n,a,l,c]=await Promise.all([this.getLog(t),null==this.uri.sha||(0,o.l3)(this.uri.sha)?this.editorContents?await this.view.container.git.getBlameForRangeContents(this.uri,t,this.editorContents):await this.view.container.git.getBlameForRange(this.uri,t):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,i?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:i}):void 0]);if(null!=a)for(const i of a.commits.values()){if(!i.isUncommitted)continue;const n=a.lines[0],o=a.lines[a.lines.length-1],l=t.active.line===n.line-1;t=new r.Selection((l?o:n).originalLine-1,t.anchor.character,(l?n:o).originalLine-1,t.active.character);const c=await this.view.container.git.getStatusForFile(this.uri.repoPath,this.uri);if(null!=c){const r={conflictStatus:c?.conflictStatus,path:i.file?.path??"",indexStatus:c?.indexStatus,originalPath:i.file?.originalPath,repoPath:this.uri.repoPath,status:c?.status??s.NV.Modified,workingTreeStatus:c?.workingTreeStatus},n=await this.view.container.git.getCurrentUser(this.uri.repoPath),o=c?.getPseudoCommits(this.view.container,n);if(null!=o)for(const i of o.reverse())e.unshift(new m.m(this.view,this,r,i,{selection:t}))}break}return null!=n&&(e.push(...(0,g.E)((0,u.DZ)(n.commits.values(),(e=>null!=e.file?new m.m(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:l,selection:t,unpublished:c?.has(e.ref)}):void 0)),this)),n.hasMore&&e.push(new p.Gd(this.view,this,e[e.length-1]))),0===e.length?[new p.AE(this.view,this,"No line history could be found.")]:e}getTreeItem(){this.splatted=!1;const e=this.label,t=new r.TreeItem(e,r.TreeItemCollapsibleState.Expanded);return t.contextValue=w.Td.LineHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}${this.lines}\n${this.uri.directory}/${null==this.uri.sha?"":`\n\n${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof f.A&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return`${this.uri.fileName}${this.lines}${this.uri.sha?` ${this.uri.sha===n.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}get lines(){return this.selection.isSingleLine?`:${this.selection.start.line+1}`:`:${this.selection.start.line+1}-${this.selection.end.line+1}`}subscribe(){const e=this.view.container.git.getRepository(this.uri);if(null==e)return;return r.Disposable.from(e.onDidChange(this.onRepositoryChanged,this),e.onDidChangeFileSystem(this.onFileSystemChanged,this),e.startWatchingFileSystem())}etag(){return Date.now()}onRepositoryChanged(e){e.changed(a.I6.Index,a.I6.Heads,a.I6.Remotes,a.I6.RemoteProviders,a.I6.Status,a.I6.Unknown,a.du.Any)&&(d.Yd.debug(`LineHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){e.uris.some((e=>e.toString()===this.uri.toString()))&&(d.Yd.debug(`LineHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0))}refresh(e){e&&(this._log=void 0)}_log;async getLog(e){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.uri,{all:!1,limit:this.limit??this.view.config.pageItemLimit,range:e??this.selection,ref:this.uri.sha,renames:!1})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}}b([(0,h.H)()],LineHistoryNode.prototype,"lines",1),b([(0,c.fF)()],LineHistoryNode.prototype,"subscribe",1),b([(0,l.H)(),(0,c.fF)()],LineHistoryNode.prototype,"refresh",1),b([(0,l.H)()],LineHistoryNode.prototype,"loadMore",1)},1614:(e,t,i)=>{i.d(t,{A:()=>LineHistoryTrackerNode});var r=i(9496),n=i(7462),s=i(439),o=i(4321),a=i(3636),l=i(4298),c=i(2061),h=i(5432),u=i(4241),d=i(9796),p=i(4336),m=i(6004),g=i(3126),f=i(6922),w=Object.defineProperty,v=Object.getOwnPropertyDescriptor,y=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?v(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&w(t,i,s),s};class LineHistoryTrackerNode extends f.CF{_base;_child;_editorContents;_selection;splatted=!0;constructor(e){super(n.Wj,e)}dispose(){super.dispose(),this.resetChild()}resetChild(){null!=this._child&&(this._child.dispose(),this._child=void 0)}async getChildren(){if(null==this._child){if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide line history information.",[];if(null==this._selection)return this.view.description=void 0,this.view.message="There was no selection provided for line history.",this.view.description=`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===s.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}${this.followingEditor?"":" (pinned)"}`,[];this.view.message=void 0;const e={...this.uri,repoPath:this.uri.repoPath,sha:this.uri.sha??this._base},t=new n.YY(this.uri,e);let i;e.sha&&"HEAD"!==e.sha?(0,o.D3)(e.sha)||({values:[i]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:t=>t.name===e.sha})):i=await this.view.container.git.getBranch(this.uri.repoPath),this._child=new g.q(t,this.view,this,i,this._selection,this._editorContents)}return this._child.getChildren()}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("Line History",r.TreeItemCollapsibleState.Expanded);return e.contextValue=f.Td.ActiveLineHistory,this.ensureSubscription(),e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=n.Wj&&null!=this._uri.repoPath}async changeBase(){const e=await(0,a.V)(this.uri.repoPath,"Change Line History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if((0,o.UR)(e)){const t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this._child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){const t=(0,m.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==n.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());const i=r.window.activeTextEditor;if(null==i||!this.view.container.git.isTrackable(i.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&r.window.visibleTextEditors.some((e=>e.document?.uri.path===this.uri.path)))||(this.reset(),(0,m.lH)(t,`, uri=${p.Yd.toLoggable(this._uri)}`),!1);if(i.document.uri.path===this.uri.path&&null!=this._selection&&i.selection.isEqual(this._selection))return(0,m.lH)(t,`, uri=${p.Yd.toLoggable(this._uri)}`),!0;const s=await n.YY.fromUri(i.document.uri);return!!(this.hasUri&&l.n.equals(s,this.uri)&&null!=this._selection&&i.selection.isEqual(this._selection))||(null==s.repoPath?this.reset():(this.setUri(s),this._editorContents=i.document.isDirty?i.document.getText():void 0,this._selection=i.selection,this.resetChild()),(0,m.lH)(t,`, uri=${p.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this._editorContents=void 0,this._selection=void 0,this.resetChild()}setEditorFollowing(e){this.canSubscribe=e}subscribe(){if(this.view.container.lineTracker.subscribed(this))return;const e=(0,d.Ds)(this.onActiveLinesChanged.bind(this),250);return this.view.container.lineTracker.subscribe(this,this.view.container.lineTracker.onDidChangeActiveLines((t=>{t.pending||e(t)})))}etag(){return 0}onActiveLinesChanged(e){this.triggerChange()}setUri(e){this._uri=e??n.Wj,(0,c.v)("gitlens:views:fileHistory:canPin",this.hasUri)}}y([(0,u.fF)()],LineHistoryTrackerNode.prototype,"resetChild",1),y([(0,h.H)(),(0,u.cM)()],LineHistoryTrackerNode.prototype,"changeBase",1),y([(0,h.H)(),(0,u.fF)({exit:!0})],LineHistoryTrackerNode.prototype,"refresh",1),y([(0,u.cM)()],LineHistoryTrackerNode.prototype,"setEditorFollowing",1),y([(0,u.fF)()],LineHistoryTrackerNode.prototype,"subscribe",1),y([(0,u.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineHistoryTrackerNode.prototype,"onActiveLinesChanged",1)},7692:(e,t,i)=>{i.d(t,{l:()=>MergeConflictCurrentChangesNode});var r=i(9496),n=i(5255),s=i(9338),o=i(7462),a=i(4321),l=i(9529),c=i(5148),h=i(6922);class MergeConflictCurrentChangesNode extends h.Re{constructor(e,t,i,r){super(o.YY.fromFile(r,i.repoPath,"HEAD"),e,t),this.parent=t,this.status=i,this.file=r}getChildren(){return[]}async getTreeItem(){const e=await this.view.container.git.getCommit(this.status.repoPath,"HEAD"),t=new r.TreeItem("Current changes",r.TreeItemCollapsibleState.None);t.contextValue=h.Td.MergeConflictCurrentChanges,t.description=`${(0,a.Wh)(this.status.current,{expand:!1,icon:!1})}${null!=e?` (${(0,a.Wh)(e,{expand:!1,icon:!1})})`:" (HEAD)"}`,t.iconPath=this.view.config.avatars?await(e?.getAvatarUri({defaultStyle:c.D.get("defaultGravatarsStyle")}))??new r.ThemeIcon("diff"):new r.ThemeIcon("diff");const i=new r.MarkdownString(`Current changes to $(file)${n.NE.Space}${this.file.path} on ${(0,a.Wh)(this.status.current)}${null!=e?`\n\n${await s.i.fromTemplateAsync("${avatar}&nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${link}${' via 'pullRequest}",e,{avatarSize:16,dateFormat:c.D.get("defaultDateFormat"),messageIndent:4,outputFormat:"markdown"})}`:""}`,!0);return i.supportHtml=!0,i.isTrusted=!0,t.tooltip=i,t.command=this.getCommand(),t}getCommand(){return null==this.status.mergeBase?(0,l.j$)("vscode.open","Open Revision",this.view.container.git.getRevisionUri("HEAD",this.file.path,this.status.repoPath)):(0,l.fA)(n.Gh.DiffWith,"Open Changes",{lhs:{sha:this.status.mergeBase,uri:o.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:"HEAD",uri:o.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${(0,a.Wh)(this.status.current,{expand:!1,icon:!1})})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}})}}},981:(e,t,i)=>{i.d(t,{E:()=>MergeConflictFileNode});var r=i(9496),n=i(6373),s=i(7462),o=i(9529),a=i(3700),l=i(7692),c=i(4167),h=i(6922);class MergeConflictFileNode extends h.Te{constructor(e,t,i,r){super(s.YY.fromFile(i,r.repoPath,r.HEAD.ref),e,t,i),this.status=r}toClipboard(){return this.fileName}get baseUri(){return s.YY.fromFile(this.file,this.status.repoPath,this.status.mergeBase??"HEAD")}get fileName(){return this.file.path}getChildren(){return[new l.l(this.view,this,this.status,this.file),new c.w(this.view,this,this.status,this.file)]}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.Collapsed);e.description=this.description,e.contextValue=`${h.Td.File}+conflicted`;const t=n.o.fromTemplate("${file}${ • changesDetail}${\\\\\ndirectory}${\n\nstatus}${ (originalPath)} in Index (staged)",this.file),i=new r.MarkdownString(t,!0);return i.isTrusted=!0,i.supportHtml=!0,e.tooltip=i,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File,e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=n.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,a.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=n.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}get priority(){return 0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){return(0,o.j$)("vscode.open","Open File",this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),{preserveFocus:!0,preview:!0})}}},4167:(e,t,i)=>{i.d(t,{w:()=>MergeConflictIncomingChangesNode});var r=i(9496),n=i(5255),s=i(9338),o=i(7462),a=i(4321),l=i(9529),c=i(5148),h=i(6922);class MergeConflictIncomingChangesNode extends h.Re{constructor(e,t,i,r){super(o.YY.fromFile(r,i.repoPath,i.HEAD.ref),e,t),this.parent=t,this.status=i,this.file=r}getChildren(){return[]}async getTreeItem(){const e=await this.view.container.git.getCommit(this.status.repoPath,"rebase"===this.status.type?this.status.steps.current.commit.ref:this.status.HEAD.ref),t=new r.TreeItem("Incoming changes",r.TreeItemCollapsibleState.None);t.contextValue=h.Td.MergeConflictIncomingChanges,t.description=`${(0,a.Wh)(this.status.incoming,{expand:!1,icon:!1})}${"rebase"===this.status.type?` (${(0,a.Wh)(this.status.steps.current.commit,{expand:!1,icon:!1})})`:` (${(0,a.Wh)(this.status.HEAD,{expand:!1,icon:!1})})`}`,t.iconPath=this.view.config.avatars?await(e?.getAvatarUri({defaultStyle:c.D.get("defaultGravatarsStyle")}))??new r.ThemeIcon("diff"):new r.ThemeIcon("diff");const i=new r.MarkdownString(`Incoming changes to $(file)${n.NE.Space}${this.file.path}${null!=this.status.incoming?` from ${(0,a.Wh)(this.status.incoming)}${null!=e?`\n\n${await s.i.fromTemplateAsync("${avatar}&nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${link}${' via 'pullRequest}",e,{avatarSize:16,dateFormat:c.D.get("defaultDateFormat"),messageIndent:4,outputFormat:"markdown"})}`:"rebase"===this.status.type?`\n\n${(0,a.Wh)(this.status.steps.current.commit,{capitalize:!0,label:!1})}`:`\n\n${(0,a.Wh)(this.status.HEAD,{capitalize:!0,label:!1})}`}`:""}`,!0);return i.supportHtml=!0,i.isTrusted=!0,t.tooltip=i,t.command=this.getCommand(),t}getCommand(){return null==this.status.mergeBase?(0,l.j$)("vscode.open","Open Revision",this.view.container.git.getRevisionUri(this.status.HEAD.ref,this.file.path,this.status.repoPath)):(0,l.fA)(n.Gh.DiffWith,"Open Changes",{lhs:{sha:this.status.mergeBase,uri:o.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:this.status.HEAD.ref,uri:o.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${null!=this.status.incoming?(0,a.Wh)(this.status.incoming,{expand:!1,icon:!1}):"incoming"})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}})}}},2487:(e,t,i)=>{i.d(t,{t:()=>MergeStatusNode});var r=i(9496),n=i(2540),s=i(7462),o=i(4321),a=i(2800),l=i(3700),c=i(3620),h=i(4481),u=i(981),d=i(6922);class MergeStatusNode extends d.Re{constructor(e,t,i,r,n,o){super(s.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.mergeStatus=r,this.status=n,this.root=o,this.updateContext({branch:i,root:o}),this._uniqueId=(0,d.tO)("merge-status",this.context)}get repoPath(){return this.uri.repoPath}getChildren(){if(!0!==this.status?.hasConflicts)return[];let e=this.status.conflicts.map((e=>new u.E(this.view,this,e,this.mergeStatus)));if(this.view.config.files.layout!==n.Vc.List){const t=(0,a.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,l.AH)((0,l.RQ)(...e))),this.view.config.files.compact);e=new h.Y(this.view,this,t,this.repoPath,"",void 0).getChildren()}else e.sort(((e,t)=>(0,c.dm)(e.label,t.label)));return e}getTreeItem(){const e=new r.TreeItem(`${this.status?.hasConflicts?"Resolve conflicts before merging":"Merging"} ${null!=this.mergeStatus.incoming?`${(0,o.Wh)(this.mergeStatus.incoming,{expand:!1,icon:!1})} `:""}into ${(0,o.Wh)(this.mergeStatus.current,{expand:!1,icon:!1})}`,r.TreeItemCollapsibleState.Expanded);e.id=this.id,e.contextValue=d.Td.Merge,e.description=this.status?.hasConflicts?(0,c._6)("conflict",this.status.conflicts.length):void 0,e.iconPath=this.status?.hasConflicts?new r.ThemeIcon("warning",new r.ThemeColor("list.warningForeground")):new r.ThemeIcon("debug-pause",new r.ThemeColor("list.foreground"));const t=new r.MarkdownString(`Merging ${null!=this.mergeStatus.incoming?(0,o.Wh)(this.mergeStatus.incoming):""}into ${(0,o.Wh)(this.mergeStatus.current)}${this.status?.hasConflicts?`\n\n${(0,c._6)("conflicted file",this.status.conflicts.length)}`:""}`,!0);return t.supportHtml=!0,t.isTrusted=!0,e.tooltip=t,e}}},2060:(e,t,i)=>{i.d(t,{Z:()=>PullRequestNode});var r=i(9496),n=i(7462),s=i(5367),o=i(4092),a=i(6922);class PullRequestNode extends a.Re{constructor(e,t,i,r){let o,l;"string"==typeof r?l=r:(l=r.repoPath,o=r),super(n.YY.fromRepoPath(l),e,t),this.parent=t,this.pullRequest=i,null!=o&&(o instanceof s.XI?this.updateContext({branch:o}):this.updateContext({commit:o})),this._uniqueId=(0,a.tO)("pullrequest",this.context),this.repoPath=l}repoPath;get id(){return this._uniqueId}toClipboard(){return this.pullRequest.url}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(`#${this.pullRequest.id}: ${this.pullRequest.title}`,r.TreeItemCollapsibleState.None);e.id=this.id,e.contextValue=a.Td.PullRequest,e.description=`${this.pullRequest.state}, ${this.pullRequest.formatDateFromNow()}`,e.iconPath=o.i7.getThemeIcon(this.pullRequest);const t=new r.MarkdownString("",!0);t.supportHtml=!0,t.isTrusted=!0,null!=this.context.commit&&t.appendMarkdown(`Commit \`$(git-commit) ${this.context.commit.shortSha}\` was introduced by $(git-pull-request) PR #${this.pullRequest.id}\n\n`);const i=` "Open Pull Request \\#${this.pullRequest.id} on ${this.pullRequest.provider.name}"`;return t.appendMarkdown(`${o.i7.getMarkdownIcon(this.pullRequest)} [**${this.pullRequest.title.trim()}**](${this.pullRequest.url}${i}) \\\n[#${this.pullRequest.id}](${this.pullRequest.url}${i}) by [@${this.pullRequest.author.name}](${this.pullRequest.author.url} "Open @${this.pullRequest.author.name} on ${this.pullRequest.provider.name}") was ${this.pullRequest.state===o.o0.Open?"opened":this.pullRequest.state.toLowerCase()} ${this.pullRequest.formatDateFromNow()}`),e.tooltip=t,e}}},1321:(e,t,i)=>{i.d(t,{S:()=>RebaseStatusNode});var r=i(9496),n=i(2540),s=i(5255),o=i(9338),a=i(7462),l=i(4321),c=i(2800),h=i(9529),u=i(5148),d=i(3700),p=i(7469),m=i(3620),g=i(2601),f=i(4481),w=i(981),v=i(6922);class RebaseStatusNode extends v.Re{constructor(e,t,i,r,n,s){super(a.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.rebaseStatus=r,this.status=n,this.root=s,this.updateContext({branch:i,root:s}),this._uniqueId=(0,v.tO)("merge-status",this.context)}get repoPath(){return this.uri.repoPath}async getChildren(){let e=this.status?.conflicts.map((e=>new w.E(this.view,this,e,this.rebaseStatus)))??[];if(this.view.config.files.layout!==n.Vc.List){const t=(0,c.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,d.AH)((0,d.RQ)(...e))),this.view.config.files.compact);e=new f.Y(this.view,this,t,this.repoPath,"",void 0).getChildren()}else e.sort(((e,t)=>(0,m.dm)(e.label,t.label)));const t=await this.view.container.git.getCommit(this.rebaseStatus.repoPath,this.rebaseStatus.steps.current.commit.ref);return null!=t&&e.unshift(new RebaseCommitNode(this.view,this,t)),e}getTreeItem(){const e=new r.TreeItem(`${this.status?.hasConflicts?"Resolve conflicts to continue rebasing":"Rebasing"} ${null!=this.rebaseStatus.incoming?`${(0,l.Wh)(this.rebaseStatus.incoming,{expand:!1,icon:!1})}`:""} (${this.rebaseStatus.steps.current.number}/${this.rebaseStatus.steps.total})`,r.TreeItemCollapsibleState.Expanded);e.id=this.id,e.contextValue=v.Td.Rebase,e.description=this.status?.hasConflicts?(0,m._6)("conflict",this.status.conflicts.length):void 0,e.iconPath=this.status?.hasConflicts?new r.ThemeIcon("warning",new r.ThemeColor("list.warningForeground")):new r.ThemeIcon("debug-pause",new r.ThemeColor("list.foreground"));const t=new r.MarkdownString(`Rebasing ${null!=this.rebaseStatus.incoming?(0,l.Wh)(this.rebaseStatus.incoming):""}onto ${(0,l.Wh)(this.rebaseStatus.current)}\n\nStep ${this.rebaseStatus.steps.current.number} of ${this.rebaseStatus.steps.total}\\\nPaused at ${(0,l.Wh)(this.rebaseStatus.steps.current.commit,{icon:!0})}${this.status?.hasConflicts?`\n\n${(0,m._6)("conflicted file",this.status.conflicts.length)}`:""}`,!0);return t.supportHtml=!0,t.isTrusted=!0,e.tooltip=t,e}async openEditor(){const e=r.Uri.joinPath(this.uri,".git","rebase-merge","git-rebase-todo");await(0,h.dO)("vscode.openWith",e,"gitlens.rebase",{preview:!1})}}class RebaseCommitNode extends v.bT{constructor(e,t,i){super(i.getGitUri(),e,t),this.commit=i}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get ref(){return this.commit}async getChildren(){const e=this.commit;let t=(await e.getCommitsForFiles()).map((e=>new g.R(this.view,this,e.file,e)));if(this.view.config.files.layout!==n.Vc.List){const e=(0,c.Mo)(t,(e=>e.uri.relativePath.split("/")),((...e)=>(0,d.AH)((0,d.RQ)(...e))),this.view.config.files.compact);t=new f.Y(this.view,this,e,this.repoPath,"",void 0).getChildren()}else t.sort(((e,t)=>(0,m.dm)(e.label,t.label)));return t}getTreeItem(){const e=new r.TreeItem(`Paused at commit ${this.commit.shortSha}`,r.TreeItemCollapsibleState.Collapsed);return e.description=o.i.fromTemplate("${message}",this.commit,{messageTruncateAtNewLine:!0}),e.iconPath=new r.ThemeIcon("git-commit"),e}getCommand(){const e={commit:this.commit,uri:this.uri,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getTooltip(){const e=await this.view.container.git.getRemotesWithProviders(this.commit.repoPath),t=await this.view.container.git.getBestRemoteWithRichProvider(e);let i,n;if(null==this.commit.message&&await this.commit.ensureFullDetails(),null!=t?.provider){const[e,r]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(this.commit.message??this.commit.summary,t),this.commit.getAssociatedPullRequest({remote:t})]);i=(0,p.Sb)(e),n=(0,p.Sb)(r),null!=n&&i?.delete(n.id)}const s=await o.i.fromTemplateAsync(`Rebase paused at ${this.view.config.formats.commits.tooltip}`,this.commit,{autolinkedIssuesOrPullRequests:i,dateFormat:u.D.get("defaultDateFormat"),messageAutolinks:!0,messageIndent:4,pullRequestOrRemote:n,outputFormat:"markdown",remotes:e}),a=new r.MarkdownString(s,!0);return a.supportHtml=!0,a.isTrusted=!0,a}}},8896:(e,t,i)=>{i.d(t,{Y:()=>ReflogNode});var r=i(9496),n=i(5432),s=i(4241),o=i(21),a=i(5255),l=i(7462),c=i(3105),h=i(2925),u=i(6922),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,m=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&d(t,i,s),s};class ReflogRecordNode extends u.Re{constructor(e,t,i){super(l.YY.fromRepoPath(i.repoPath),e,t),this.record=i,this.updateContext({reflog:i}),this._uniqueId=(0,u.tO)("reflog-record",this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}async getChildren(){const e=await this.getLog();if(void 0===e)return[new o.AE(this.view,this,"No commits could be found.")];const t=[...(0,c.UI)(e.commits.values(),(e=>new h.D(this.view,this,e)))];return e.hasMore&&t.push(new o.Gd(this.view,this,t[t.length-1])),t}getTreeItem(){const e=new r.TreeItem(`${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}`,r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=`${0===this.record.HEAD.length?"":`${this.record.HEAD} ${a.NE.Space}${a.NE.Dot}${a.NE.Space} `}${this.record.formattedDate}`,e.contextValue=u.Td.ReflogRecord,e.tooltip=`${0===this.record.HEAD.length?"":`${this.record.HEAD}\n`}${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}${this.record.details?` (${this.record.details})`:""}\n${this.record.formatDateFromNow()} (${this.record.formatDate()})\n${this.record.previousShortSha} ${a.NE.Space}${a.NE.ArrowRight}${a.NE.Space} ${this.record.shortSha}`,e}refresh(e){e&&(this._log=void 0)}_log;async getLog(){if(void 0===this._log){const e=`${this.record.previousSha}..${this.record.sha}`;this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));void 0!==t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}m([(0,n.H)(),(0,s.fF)()],ReflogRecordNode.prototype,"refresh",1),m([(0,n.H)()],ReflogRecordNode.prototype,"loadMore",1);var g=Object.defineProperty,f=Object.getOwnPropertyDescriptor;class ReflogNode extends u.Re{constructor(e,t,i,r){super(e,t,i),this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,u.tO)("reflog",this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}_children;async getChildren(){if(void 0===this._children){const e=[],t=await this.getReflog();if(void 0===t||0===t.records.length)return[new o.AE(this.view,this,"No activity could be found.")];e.push(...t.records.map((e=>new ReflogRecordNode(this.view,this,e)))),t.hasMore&&e.push(new o.Gd(this.view,this,e[e.length-1])),this._children=e}return this._children}getTreeItem(){const e=new r.TreeItem("Incoming Activity",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=u.Td.Reflog,e.description="experimental",e.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-activity.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-activity.svg")},e}refresh(e){this._children=void 0,e&&(this._reflog=void 0)}_reflog;async getReflog(){return void 0===this._reflog&&(this._reflog=await this.view.container.git.getIncomingActivity(this.repo.path,{all:!0,limit:this.limit??this.view.config.defaultItemLimit})),this._reflog}get hasMore(){return this._reflog?.hasMore??!0}async loadMore(e){let t=await this.getReflog();void 0!==t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._reflog!==t&&(this._reflog=t,this.limit=t?.count,this.triggerChange(!1)))}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&g(t,i,s)})([(0,n.H)(),(0,s.fF)()],ReflogNode.prototype,"refresh",1)},1351:(e,t,i)=>{i.d(t,{V:()=>RemoteNode});var r=i(9496),n=i(2540),s=i(5255),o=i(7462),a=i(3050),l=i(2800),c=i(4241),h=i(7382),u=i(4004),d=i(21),p=i(6922),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor;class RemoteNode extends p.Re{constructor(e,t,i,r,n){super(e,t,i),this.parent=i,this.repo=r,this.remote=n,this.updateContext({repository:r,remote:n}),this._uniqueId=(0,p.tO)("remote",this.context)}get id(){return this._uniqueId}toClipboard(){return this.remote.name}get repoPath(){return this.repo.path}async getChildren(){const e=await this.repo.getBranches({filter:e=>e.remote&&e.name.startsWith(this.remote.name),sort:!0});if(0===e.values.length)return[new d.AE(this.view,this,"No branches could be found.")];const t=e.values.map((e=>new h.E(o.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,this.repo,e,!1,{showComparison:!1,showTracking:!1})));if(this.view.config.branches.layout===n.CZ.List)return t;const i=(0,l.Mo)(t,(e=>e.treeHierarchy),((...e)=>e.join("/")),this.view.config.files.compact,(e=>(e.compacted=!0,!0)));return new u.n(this.view,this,"remote-branch",i,this.repo.path,"",void 0).getChildren()}async getTreeItem(){const e=new r.TreeItem(this.remote.name,r.TreeItemCollapsibleState.Collapsed);if(e.id=this.id,e.description=(0,a.jv)(this.remote),null!=this.remote.provider){const{provider:t}=this.remote;if(e.iconPath=null!=t.avatarUri&&this.view.config.avatars?t.avatarUri:"remote"===t.icon?new r.ThemeIcon("cloud"):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-${t.icon}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-${t.icon}.svg`)},t.hasRichIntegration()){const i=t.maybeConnected??await t.isConnected();e.contextValue=`${p.Td.Remote}${i?"+connected":"+disconnected"}`,e.tooltip=`${this.remote.name} (${t.name} ${s.NE.Dash} ${i?"connected":"not connected"})\n${t.displayPath}\n`}else e.contextValue=p.Td.Remote,e.tooltip=`${this.remote.name} (${t.name})\n${t.displayPath}\n`}else e.contextValue=p.Td.Remote,e.iconPath=new r.ThemeIcon("cloud"),e.tooltip=`${this.remote.name} (${this.remote.domain})\n${this.remote.path}\n`;this.remote.default&&(e.contextValue+="+default",e.resourceUri=r.Uri.parse("gitlens-view://remote/default"));for(const{type:t,url:i}of this.remote.urls)e.tooltip+=`\n${i} (${t})`;return e}async setAsDefault(e=!0){await this.remote.setAsDefault(e),this.triggerChange()}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&m(t,i,s)})([(0,c.cM)()],RemoteNode.prototype,"setAsDefault",1)},1952:(e,t,i)=>{i.d(t,{e:()=>RemotesNode});var r=i(9496),n=i(5432),s=i(4241),o=i(21),a=i(1351),l=i(6922),c=Object.defineProperty,h=Object.getOwnPropertyDescriptor;class RemotesNode extends l.Re{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,l.tO)("remotes",this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}_children;async getChildren(){if(null==this._children){const e=await this.repo.getRemotes({sort:!0});if(0===e.length)return[new o.AE(this.view,this,"No remotes could be found")];this._children=e.map((e=>new a.V(this.uri,this.view,this,this.repo,e)))}return this._children}getTreeItem(){const e=new r.TreeItem("Remotes",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=l.Td.Remotes,e.iconPath=new r.ThemeIcon("cloud"),e}refresh(){this._children=void 0}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&c(t,i,s)})([(0,n.H)(),(0,s.fF)()],RemotesNode.prototype,"refresh",1)},7424:(e,t,i)=>{i.d(t,{S:()=>RepositoriesNode});var r=i(9496),n=i(7462),s=i(5432),o=i(4241),a=i(9796),l=i(4336),c=i(21),h=i(9100),u=i(6922),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,m=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&d(t,i,s),s};class RepositoriesNode extends u.CF{_children;constructor(e){super(n.Wj,e)}dispose(){super.dispose(),this.resetChildren()}resetChildren(){if(null!=this._children){for(const e of this._children)"dispose"in e&&e.dispose();this._children=void 0}}getChildren(){if(null==this._children){const e=this.view.container.git.openRepositories;if(0===e.length)return[new c.AE(this.view,this,"No repositories could be found.")];this._children=e.map((e=>new h.q(n.YY.fromRepoPath(e.path),this.view,this,e)))}return this._children}getTreeItem(){const e="workspaces"===this.view.type,t=e&&null!=this.view.container.workspaces.currentWorkspaceId,i=t&&null!=this.view.container.workspaces.currentWorkspace,n=new r.TreeItem(e?"Current Window":"Repositories",e?r.TreeItemCollapsibleState.Collapsed:r.TreeItemCollapsibleState.Expanded);e&&(n.description=r.workspace.name??r.workspace.workspaceFolders?.[0]?.name??"");let s=u.Td.Repositories;return e&&(s+="+workspaces"),t&&(s+="+linked"),i&&(s+="+current",n.resourceUri=r.Uri.parse("gitlens-view://workspaces/workspace/current")),n.contextValue=s,n}async refresh(e=!1){if(null==this._children)return;if(e)return this.resetChildren(),await this.unsubscribe(),void this.ensureSubscription();const t=this.view.container.git.openRepositories;if(0===t.length&&(null==this._children||0===this._children.length))return;if(0===t.length)return void(this._children=[new c.AE(this.view,this,"No repositories could be found.")]);const i=[];for(const e of t){const t=e.id,r=this._children.find((e=>e.repo.id===t));null!=r?(i.push(r),r.refresh()):i.push(new h.q(n.YY.fromRepoPath(e.path),this.view,this,e))}for(const e of this._children)i.includes(e)||e.dispose();this._children=i,this.ensureSubscription()}subscribe(){const e=[this.view.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this)];return this.view.config.autoReveal&&e.push(r.window.onDidChangeActiveTextEditor((0,a.Ds)(this.onActiveEditorChanged,500),this)),r.Disposable.from(...e)}etag(){return(0,a.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}onActiveEditorChanged(e){if(null!=e&&null!=this._children&&1!==this._children.length)try{const t=e.document.uri,i=this._children.find((e=>e instanceof h.q&&e.repo.containsUri(t)));if(null==i)return;let r=0===this.view.selection.length?void 0:this.view.selection[0];for(;null!=r;){if(r===i)return;r=r.getParent()}this.view.reveal(i,{expand:!0})}catch(e){l.Yd.error(e)}}onRepositoriesChanged(e){this.triggerChange(!0)}}m([(0,o.fF)()],RepositoriesNode.prototype,"resetChildren",1),m([(0,s.H)(),(0,o.fF)()],RepositoriesNode.prototype,"refresh",1),m([(0,o.fF)()],RepositoriesNode.prototype,"subscribe",1),m([(0,o.fF)({args:!1})],RepositoriesNode.prototype,"onActiveEditorChanged",1),m([(0,o.fF)()],RepositoriesNode.prototype,"onRepositoriesChanged",1)},9100:(e,t,i)=>{i.d(t,{q:()=>RepositoryNode});var r=i(9496),n=i(5255),s=i(8887),o=i(5367),a=i(3050),l=i(3646),c=i(1907),h=i(2800),u=i(5432),d=i(4241),p=i(9796),m=i(3620),g=i(3608),f=i(7382),w=i(9354),v=i(21),y=i(9308),b=i(4562),C=i(2487),A=i(1321),P=i(8896),S=i(1952),R=i(727),D=i(2540),k=i(7462),_=i(3105),T=i(3700),F=i(7933),O=i(4481),E=i(6586),$=i(6922);class StatusFilesNode extends $.Re{constructor(e,t,i,r){super(k.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.range=r,this._uniqueId=(0,$.tO)("status-files",this.context)}get id(){return this._uniqueId}get repoPath(){return this.status.repoPath}async getChildren(){let e=[];const t=this.repoPath;let i;null!=this.range&&(i=await this.view.container.git.getLog(t,{limit:0,ref:this.range}),null!=i&&(await Promise.allSettled((0,_.UI)((0,_.hX)(i.commits.values(),(e=>null==e.files)),(e=>e.ensureFullDetails()))),e=[...(0,_.VS)(i.commits.values(),(e=>e.files?.map((t=>({...t,commit:e})))??[]))])),(this.view instanceof F.m9||this.view.config.includeWorkingTree)&&0!==this.status.files.length&&e.unshift(...(0,_.VS)(this.status.files,(e=>(0,_.UI)(e.getPseudoCommits(this.view.container,void 0),(t=>this.getFileWithPseudoCommit(e,t)))))),e.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const r=(0,h.vM)(e,(e=>e.path));let n=Object.values(r).map((e=>new E.q(this.view,this,e[e.length-1],t,e.map((e=>e.commit)))));if(this.view.config.files.layout!==D.Vc.List){const e=(0,h.Mo)(n,(e=>e.uri.relativePath.split("/")),((...e)=>(0,T.AH)((0,T.RQ)(...e))),this.view.config.files.compact);n=new O.Y(this.view,this,e,t,"",void 0,!0).getChildren()}else n.sort(((e,t)=>e.priority-t.priority||(0,m.dm)(e.label,t.label)));return n}async getTreeItem(){let e=this.view instanceof F.m9||this.view.config.includeWorkingTree?this.status.files.length:0;if(null!=this.range&&null!=this.status.upstream&&this.status.state.ahead>0)if(e>0){const t=await this.view.container.git.getDiffStatus(this.repoPath,`${this.status.upstream}...`);if(null!=t){const i=new Set;for(const e of this.status.files)i.add(e.path);for(const e of t)i.add(e.path);e=i.size}}else{const t=await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}...`);null!=t?e+=t.changedFiles:e=-1}const t=-1===e?"?? files changed":`${(0,m._6)("file",e)} changed`,i=new r.TreeItem(t,r.TreeItemCollapsibleState.Collapsed);return i.id=this.id,i.contextValue=$.Td.StatusFiles,i.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-diff.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-diff.svg")},i}getFileWithPseudoCommit(e,t){return{status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:t}}}var I=i(1841),x=i(8562),B=Object.defineProperty,W=Object.getOwnPropertyDescriptor,M=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?W(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&B(t,i,s),s};class RepositoryNode extends $.CF{constructor(e,t,i,r,n){super(e,t,i),this.repo=r,this.updateContext({...n,repository:this.repo}),this._uniqueId=(0,$.tO)("repository",this.context),this._status=this.repo.getStatus()}_children;_status;get id(){return this._uniqueId}toClipboard(){return this.repo.path}get repoPath(){return this.repo.path}get workspace(){return this.context.workspace}get wsRepositoryDescriptor(){return this.context.wsRepositoryDescriptor}async getChildren(){if(void 0===this._children){const e=[],t=await this._status;if(null!=t){const i=new o.XI(t.repoPath,t.branch,!1,!0,void 0,t.sha,t.upstream?{name:t.upstream,missing:!1}:void 0,t.state.ahead,t.state.behind,t.detached,t.rebasing);!1!==this.view.config.showBranchComparison&&e.push(new y._(this.uri,this.view,this,i,this.view.config.showBranchComparison,!0));const[r,s]=await Promise.all([this.view.container.git.getMergeStatus(t.repoPath),this.view.container.git.getRebaseStatus(t.repoPath)]);if(null!=r?e.push(new C.t(this.view,this,i,r,t,!0)):null!=s?e.push(new A.S(this.view,this,i,s,t,!0)):this.view.config.showUpstreamStatus&&(t.upstream?t.state.behind||t.state.ahead?(t.state.behind&&e.push(new w.V(this.view,this,i,t,"behind",!0)),t.state.ahead&&e.push(new w.V(this.view,this,i,t,"ahead",!0,{showAheadCommits:!0}))):e.push(new w.V(this.view,this,i,t,"same",!0)):e.push(new w.V(this.view,this,i,t,"none",!0))),this.view.config.includeWorkingTree&&0!==t.files.length){const i=void 0;e.push(new StatusFilesNode(this.view,this,t,i))}0===e.length||this.view.config.compact||e.push(new v.AE(this.view,this,"",n.NE.Dash.repeat(2),"")),this.view.config.showCommits&&e.push(new f.E(this.uri,this.view,this,this.repo,i,!0,{showAsCommits:!0,showComparison:!1,showCurrent:!1,showStatus:!1,showTracking:!1}))}this.view.config.showBranches&&e.push(new g.r(this.uri,this.view,this,this.repo)),this.view.config.showRemotes&&e.push(new S.e(this.uri,this.view,this,this.repo)),this.view.config.showStashes&&await this.repo.supports(s.A.Stashes)&&e.push(new R.m(this.uri,this.view,this,this.repo)),this.view.config.showTags&&e.push(new I.P(this.uri,this.view,this,this.repo)),this.view.config.showWorktrees&&await this.repo.supports(s.A.Worktrees)&&e.push(new x.S(this.uri,this.view,this,this.repo)),this.view.config.showContributors&&e.push(new b.I(this.uri,this.view,this,this.repo)),this.view.config.showIncomingActivity&&!this.repo.provider.virtual&&e.push(new P.Y(this.uri,this.view,this,this.repo)),this._children=e}return this._children}async getTreeItem(){const e=this.repo.formattedName??this.uri.repoPath??"",t=await(this.repo?.getLastFetched())??0;let i,s=`${this.repo.formattedName??this.uri.repoPath??""}${t?`${(0,m.vk)(n.NE.Dash,2,2)}Last fetched ${l._j.formatLastFetched(t,!1)}`:""}${this.repo.formattedName?`\\\n${this.uri.repoPath}`:""}`,o="";const{workspace:h}=this.context;let u,d=$.Td.Repository;this.repo.starred&&(d+="+starred"),null!=h&&(d+="+workspace",h.type===c.EI.Cloud?d+="+cloud":h.type===c.EI.Local&&(d+="+local")),this.repo.closed?(d+="+closed",u=""):u="-solid",this.repo.virtual&&(d+="+virtual",u="-cloud");const p=await this._status;if(null!=p){s+=`\n\nCurrent branch $(git-branch) ${p.branch}${p.rebasing?" (Rebasing)":""}`,this.view.config.includeWorkingTree&&0!==p.files.length&&(o=p.getFormattedDiffStatus({compact:!0,prefix:(0,m.vk)(n.NE.Dot,1,1)}));let e;if(i=`${p.getUpstreamStatus({suffix:(0,m.vk)(n.NE.Dot,1,1)})}${p.branch}${p.rebasing?" (Rebasing)":""}${o}`,null!=p.upstream){const t=a.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(p.repoPath));e=t?.length?t[0].name:void 0}else{const t=await p.getRemote();e=t?.provider?.name}u+=o?"-blue":"",null!=p.upstream&&(s+=` is ${p.getUpstreamStatus({empty:`up to date with $(git-branch) ${p.upstream}${e?` on ${e}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${p.upstream}${e?` on ${e}`:""}`})}`,p.state.behind&&(d+="+behind",u+="-red"),p.state.ahead&&(u+=p.state.behind?"-yellow":"-green",d+="+ahead")),o&&(s+=`\n\nWorking tree has uncommitted changes${p.getFormattedDiffStatus({expand:!0,prefix:"\n",separator:"\n"})}`)}null!=h&&(s+=`\n\nRepository is ${this.repo.closed?"not ":""}open in the current window`);const g=new r.TreeItem(e,null!=h||"workspaces"===this.view.type?r.TreeItemCollapsibleState.Collapsed:r.TreeItemCollapsibleState.Expanded);g.id=this.id,g.contextValue=d,g.description=`${i??""}${t?`${(0,m.vk)(n.NE.Dot,1,1)}Last fetched ${l._j.formatLastFetched(t)}`:""}`,g.iconPath={dark:this.view.container.context.asAbsolutePath(`images/dark/icon-repo${u}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-repo${u}.svg`)},null==h||this.repo.closed||(g.resourceUri=r.Uri.parse("gitlens-view://workspaces/repository/open"));const f=new r.MarkdownString(s,!0);return f.supportHtml=!0,f.isTrusted=!0,g.tooltip=f,g}fetch(e={}){return this.repo.fetch(e)}pull(e={}){return this.repo.pull(e)}push(e={}){return this.repo.push(e)}async refresh(e=!1){e&&(this._status=this.repo.getStatus(),this._children=void 0),await this.ensureSubscription()}async star(){await this.repo.star(),this.parent.triggerChange()}async unstar(){await this.repo.unstar(),this.parent.triggerChange()}async subscribe(){const e=await(this.repo?.getLastFetched())??0,t=[this.repo.onDidChange(this.onRepositoryChanged,this)],i=l._j.getLastFetchedUpdateInterval(e);return 0!==e&&i>0&&t.push((0,p.DH)((()=>{i!==l._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)}),i)),this.view.config.includeWorkingTree&&t.push(this.repo.onDidChangeFileSystem(this.onFileSystemChanged,this),this.repo.startWatchingFileSystem()),r.Disposable.from(...t)}etag(){return this.repo.etag}async onFileSystemChanged(e){if(this._status=this.repo.getStatus(),void 0!==this._children){const e=await this._status;let t=this._children.findIndex((e=>e instanceof StatusFilesNode));if(void 0===e||!e.state.ahead&&0===e.files.length)-1!==t&&this._children.splice(t,1);else{let i=1;-1===t&&(t=(0,h.qr)(this._children,(e=>e instanceof w.V||e instanceof f.E)),i=0,t++);const r=void 0;this._children.splice(t,i,new StatusFilesNode(this.view,this,e,r))}}this.triggerChange(!1)}onRepositoryChanged(e){if(e.changed(l.I6.Closed,l.du.Any))this.dispose();else if(null==this._children||e.changed(l.I6.Config,l.I6.Index,l.I6.Heads,l.I6.Opened,l.I6.Status,l.I6.Unknown,l.du.Any))this.triggerChange(!0);else{if(e.changed(l.I6.Remotes,l.I6.RemoteProviders,l.du.Any)){const e=this._children.find((e=>e instanceof S.e));null!=e&&this.view.triggerNodeChange(e)}if(e.changed(l.I6.Stash,l.du.Any)){const e=this._children.find((e=>e instanceof R.m));null!=e&&this.view.triggerNodeChange(e)}if(e.changed(l.I6.Tags,l.du.Any)){const e=this._children.find((e=>e instanceof I.P));null!=e&&this.view.triggerNodeChange(e)}}}}M([(0,d.cM)()],RepositoryNode.prototype,"fetch",1),M([(0,d.cM)()],RepositoryNode.prototype,"pull",1),M([(0,d.cM)()],RepositoryNode.prototype,"push",1),M([(0,u.H)(),(0,d.fF)()],RepositoryNode.prototype,"refresh",1),M([(0,d.cM)()],RepositoryNode.prototype,"star",1),M([(0,d.cM)()],RepositoryNode.prototype,"unstar",1),M([(0,d.fF)()],RepositoryNode.prototype,"subscribe",1),M([(0,d.fF)({args:{0:e=>`{ repository: ${e.repository?.name??""}, uris(${e.uris.length}): [${e.uris.slice(0,1).map((e=>e.fsPath)).join(", ")}${e.uris.length>1?", ...":""}] }`}})],RepositoryNode.prototype,"onFileSystemChanged",1),M([(0,d.fF)({args:{0:e=>e.toString()}})],RepositoryNode.prototype,"onRepositoryChanged",1)},5988:(e,t,i)=>{i.d(t,{J:()=>ResultsCommitsNode});var r=i(9496),n=i(7462),s=i(6450),o=i(5148),a=i(5432),l=i(4241),c=i(3105),h=i(7469),u=i(4092),d=i(2610),p=i(21),m=i(2060),g=i(6922),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor;let v=0;class AutolinkedItemsNode extends g.Re{constructor(e,t,i,r,s){super(n.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.log=r,this.expand=s,this._instanceId=v++,this.updateContext({autolinksId:String(this._instanceId)}),this._uniqueId=(0,g.tO)("autolinks",this.context)}_instanceId;get id(){return this._uniqueId}_children;async getChildren(){if(null==this._children){const e=[...this.log.commits.values()];let t;if(e.length){const i=e.map((e=>e.message)).join("\n");let r;const n=this.view.container.autolinks.getAutolinks(i),s=await this.view.container.git.getBestRemoteWithProvider(this.repoPath);if(null!=s){const e=this.view.container.autolinks.getAutolinks(i,s);r=e;const[t]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(i,s,{autolinks:e})]);if("fulfilled"===t.status&&null!=t.value)for(const[e,i]of t.value)r.set(e,i);r=new Map((0,c.G0)(r,n))}else r=n;t=[...r.values()].map((e=>u.i7.is(e)?new m.Z(this.view,this,e,this.log.repoPath):new d.Z(this.view,this,this.repoPath,e)))}null!=t&&0!==t.length||(t=[new p.AE(this.view,this,"No autolinked issues or pull requests could be found.")]),this.log.hasMore&&t.push(new p.Gd(this.view,this.parent,t[t.length-1],{context:{expandAutolinks:!0},message:"Load more commits to search for autolinks"})),this._children=t}return this._children}getTreeItem(){const e=new r.TreeItem("Autolinked Issues and Pull Requests",this.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=g.Td.AutolinkedItems,e}refresh(e=!1){e&&(this._children=void 0)}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&f(t,i,s)})([(0,a.H)(),(0,l.fF)()],AutolinkedItemsNode.prototype,"refresh",1);var y=i(2925),b=i(4741),C=i(812),A=i(1101),P=Object.defineProperty,S=Object.getOwnPropertyDescriptor;class ResultsCommitsNode extends g.Re{constructor(e,t,i,r,s,o=void 0,a){super(n.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._label=r,this._results=s,this._options=o,null!=s.direction&&this.updateContext({branchStatusUpstreamType:s.direction}),this._uniqueId=(0,g.tO)("results-commits",this.context),this.limit=this.view.getNodeLastKnownLimit(this),this._options={expand:!0,...o},null!=a&&(this.splatted=a)}limit;get id(){return this._uniqueId}get ref1(){return this._results.comparison?.ref1}get ref2(){return this._results.comparison?.ref2}_onChildrenCompleted;async getChildren(){this._onChildrenCompleted?.cancel(),this._onChildrenCompleted=(0,h.PQ)();const{log:e}=await this.getCommitsQueryResults();if(null==e)return[];const[t]=await Promise.all([this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath)]),i=[new AutolinkedItemsNode(this.view,this,this.uri.repoPath,e,this._expandAutolinks)];this._expandAutolinks=!1;const{files:r}=this._results;null!=r&&i.push(new C.V(this.view,this,this.uri.repoPath,r.ref1,r.ref2,r.query,this._results.direction,{expand:!1}));const n={expand:this._options.expand&&1===e.count};return i.push(...(0,b.E)((0,c.UI)(e.commits.values(),(e=>(0,s.G2)(e)?new A.i(this.view,this,e,{icon:!0}):new y.D(this.view,this,e,void 0,void 0,t,n))),this,void 0,{show:e.count>1})),e.hasMore&&i.push(new p.Gd(this.view,this,i[i.length-1])),this._onChildrenCompleted.fulfill(),i}async getTreeItem(){let e,t;if(this._results.deferred)e=this._label,t=r.TreeItemCollapsibleState.Collapsed;else try{let i;({label:e,log:i}=await(0,h.HO)(this.getCommitsQueryResults(),100)),t=null==i||0===i.count?r.TreeItemCollapsibleState.None:this._options.expand||1===i.count?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed}catch(e){e instanceof h.PK&&setTimeout((async()=>{await e.promise;try{await(this._onChildrenCompleted?.promise)}catch{}setTimeout((()=>{this.triggerChange(!1)}),1)}),1),t=r.TreeItemCollapsibleState.Collapsed}const i=new r.TreeItem(e??this._label,t);return i.id=this.id,i.contextValue=null!=this._results.comparison?g.Td.CompareResultsCommits:g.Td.SearchResultsCommits,i.description=this._options.description,i}refresh(e=!1){e&&(this._commitsQueryResults=void 0,this._commitsQueryResultsPromise=void 0,this.getCommitsQueryResults())}_commitsQueryResultsPromise;async getCommitsQueryResults(){if(null==this._commitsQueryResultsPromise){this._commitsQueryResultsPromise=this._results.query(this.limit??o.D.get("advanced.maxSearchItems"));const e=await this._commitsQueryResultsPromise;this._commitsQueryResults=e,this._hasMore=e.hasMore,this._results.deferred&&(this._results.deferred=!1)}return this._commitsQueryResultsPromise}_commitsQueryResults;maybeGetCommitsQueryResults(){return this._commitsQueryResults}_hasMore=!0;get hasMore(){return this._hasMore}_expandAutolinks=!1;async loadMore(e,t){const i=await this.getCommitsQueryResults();null!=i&&i.hasMore&&(null!=t&&"expandAutolinks"in t&&(this._expandAutolinks=Boolean(t.expandAutolinks)),await(i.more?.(e??this.view.config.pageItemLimit)),this.limit=i.log?.count,this.triggerChange(!1))}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?S(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&P(t,i,s)})([(0,a.H)(),(0,l.fF)()],ResultsCommitsNode.prototype,"refresh",1)},202:(e,t,i)=>{i.d(t,{C:()=>ResultsFileNode});var r=i(9496),n=i(5255),s=i(6373),o=i(7462),a=i(7881),l=i(4321),c=i(3700),h=i(6922);class ResultsFileNode extends h.RW{constructor(e,t,i,r,n,s,a){super(o.YY.fromFile(r,i,n||s),e,t,r),this.ref1=n,this.ref2=s,this.direction=a,this.updateContext({file:r}),this._uniqueId=(0,h.tO)("results-file",this.context)}toClipboard(){return this.file.path}get ref(){return(0,l.xB)(this.ref1||this.ref2,this.uri.repoPath)}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);e.contextValue=h.Td.ResultsFile,e.description=this.description,e.tooltip=s.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)}",this.file);const t=(0,a.tK)(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,c.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,c.RQ)("images","light",t))},e.command=this.getCommand(),e.checkboxState={state:this.getState("checked")??r.TreeItemCheckboxState.Unchecked,tooltip:"Mark as Reviewed"},e}_description;get description(){return void 0===this._description&&(this._description=s.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return void 0===this._folderName&&(this._folderName=(0,c.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return void 0===this._label&&(this._label=s.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}get priority(){return 0}getCommand(){const e={lhs:{sha:this.ref1,uri:"R"!==this.file.status&&"C"!==this.file.status||"behind"!==this.direction?this.uri:o.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0)},rhs:{sha:this.ref2,uri:"R"!==this.file.status&&"C"!==this.file.status||"behind"===this.direction?this.uri:o.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0)},repoPath:this.uri.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:n.Gh.DiffWith,arguments:[e]}}}},812:(e,t,i)=>{i.d(t,{V:()=>ResultsFilesNode,W:()=>v});var r=i(9496),n=i(2540),s=i(7462),o=i(2800),a=i(5432),l=i(4241),c=i(3105),h=i(3700),u=i(7469),d=i(3620),p=i(4481),m=i(202),g=i(6922),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e=>(e[e.Left=0]="Left",e[e.Right=1]="Right",e))(v||{});class ResultsFilesNode extends g.Re{constructor(e,t,i,r,n,o,a,l=void 0){super(s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.ref1=r,this.ref2=n,this._filesQuery=o,this.direction=a,this._options=l,null!=this.direction&&this.updateContext({branchStatusUpstreamType:this.direction}),this._uniqueId=(0,g.tO)("results-files",this.context),this._options={expand:!0,...l}}get id(){return this._uniqueId}get filter(){return this.getState("filter")}set filter(e){this.filter!==e&&(this.storeState("filter",e,!0),this._filterResults=void 0,this.triggerChange(!1))}get filterable(){return null!=this.filter||this.ref1!==this.ref2&&void 0===this.direction}getFilterContextValue(){switch(this.filter){case 0:return"+filtered~left";case 1:return"+filtered~right";default:return""}}async getChildren(){const e=await this.getFilesQueryResults(),t=(null!=this.filter?e.filtered?.get(this.filter):void 0)??e.files;if(null==t)return[];let i=[...(0,c.UI)(t,(e=>new m.C(this.view,this,this.repoPath,e,this.ref1,this.ref2,this.direction)))];if(this.view.config.files.layout!==n.Vc.List){const e=(0,o.Mo)(i,(e=>e.uri.relativePath.split("/")),((...e)=>(0,h.AH)((0,h.RQ)(...e))),this.view.config.files.compact);i=new p.Y(this.view,this,e,this.repoPath,"",void 0).getChildren()}else i.sort(((e,t)=>e.priority-t.priority||(0,d.dm)(e.label,t.label)));return i}async getTreeItem(){let e,t,i,n,s,o;const a=this.filter;try{const l=await(0,u.HO)(this.getFilesQueryResults(),100);e=l.label,null==a&&null!=l.stats&&(t=`${(0,d._6)("addition",l.stats.additions)} (+), ${(0,d._6)("deletion",l.stats.deletions)} (-)${l.stats.approximated?" *approximated":""}`,o=`${e}, ${t}`),null!=a?(t="Filtered",o=`${e} &mdash; ${t}`,n=l.filtered?.get(a),null==n&&(e="files changed",i=new r.ThemeIcon("ellipsis"),s=r.TreeItemCollapsibleState.Collapsed,this._filterResults?.then((()=>queueMicrotask((()=>this.triggerChange(!1))))))):n=l.files,void 0===s&&(s=null==n||0===n.length?r.TreeItemCollapsibleState.None:this._options.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed)}catch(t){t instanceof u.PK&&t.promise.then((()=>queueMicrotask((()=>this.triggerChange(!1))))),e="files changed",i=new r.ThemeIcon("ellipsis"),s=r.TreeItemCollapsibleState.Collapsed}const l=new r.TreeItem(`${null!=a&&null!=n?`Showing ${n.length} of `:""}${e}`,s);return l.description=t,l.id=this.id,l.iconPath=i,l.contextValue=`${g.Td.ResultsFiles}${this.filterable?"+filterable":""}${this.getFilterContextValue()}`,l.tooltip=o,l}refresh(e=!1){e&&(this.deleteState("filter"),this._filterResults=void 0,this._filesQueryResults=this._filesQuery())}_filesQueryResults;_filterResults;async getFilesQueryResults(){void 0===this._filesQueryResults&&(this._filesQueryResults=this._filesQuery());const e=await this._filesQueryResults;return null!=e.files&&this.filterable&&null!=this.filter&&null==e.filtered?.get(this.filter)?(void 0===this._filterResults&&(this._filterResults=this.filterResults(this.filter,e)),await this._filterResults,e):e}async filterResults(e,t){let i;const r=0===this.filter?this.ref2:this.ref1,n=await this.view.container.git.getMergeBase(this.repoPath,this.ref1||"HEAD",this.ref2||"HEAD");if(null!=n){const e=await this.view.container.git.getDiffStatus(this.uri.repoPath,`${n}..${r}`);null!=e&&(i=new Set(e.map((e=>e.path))))}else{const e=await this.view.container.git.getCommit(this.uri.repoPath,r||"HEAD");null!=e?.files&&(i=new Set(e.files.map((e=>e.path))))}null==t.filtered&&(t.filtered=new Map),t.filtered.set(e,null==i?[]:t.files.filter((e=>i.has(e.path))))}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&f(t,i,s)})([(0,a.H)(),(0,l.fF)()],ResultsFilesNode.prototype,"refresh",1)},4655:(e,t,i)=>{i.d(t,{V:()=>v});var r=i(9496),n=i(4290),s=i(9311),o=i(7462),a=i(6934),l=i(5432),c=i(4241),h=i(3620),u=i(5988),d=i(6922),p=Object.defineProperty,m=Object.getOwnPropertyDescriptor,g=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&p(t,i,s),s};let f=0;const w=class _SearchResultsNode extends d.Re{constructor(e,t,i,r,n,s,l=0){super(o.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._labels=n,this._searchQueryOrLog=s,this._pinned=l,this._search=r,this._instanceId=f++,this._order=Date.now(),this.updateContext({searchId:`${(0,a.FL)(r)}+${this._instanceId}`}),this._uniqueId=(0,d.tO)("search-results",this.context)}static getPinnableId(e,t){return(0,n.FB)(`${e}|${(0,a.FL)(t)}`,"base64")}_instanceId;get id(){return this._uniqueId}get canDismiss(){return!this.pinned}_order=Date.now();get order(){return this._pinned||this._order}get pinned(){return 0!==this._pinned}_search;get search(){return this._search}_resultsNode;ensureResults(){if(null==this._resultsNode){let e;null==this._searchQueryOrLog?(e=!0,this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel})):"function"!=typeof this._searchQueryOrLog&&(this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel},this._searchQueryOrLog)),this._resultsNode=new u.J(this.view,this,this.repoPath,this._labels.label,{query:this._searchQueryOrLog,deferred:e},{expand:!this.pinned},!0)}return this._resultsNode}async getChildren(){return this.ensureResults().getChildren()}async getTreeItem(){const e=await this.ensureResults().getTreeItem();if(e.id=this.id,e.contextValue=`${d.Td.SearchResults}${this._pinned?"+pinned":""}`,this.view.container.git.repositoryCount>1){const t=this.view.container.git.getRepository(this.repoPath);e.description=t?.formattedName??this.repoPath}return this._pinned&&(e.iconPath=new r.ThemeIcon("pinned")),e}get hasMore(){return this.ensureResults().hasMore}async loadMore(e){return this.ensureResults().loadMore(e)}async edit(e){if(null==e)return void await(0,s.m)({command:"search",prefillOnly:!0,state:{repo:this.repoPath,...this.search,showResultsInSideBar:this}});const t=this.getPinnableId();this._search=e.pattern,this._labels=e.labels,this._searchQueryOrLog=e.log,this._resultsNode=void 0,this.pinned&&(await this.view.updatePinned(t),await this.updatePinned()),this.triggerChange(!1),queueMicrotask((()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0})))}refresh(e=!1){this._resultsNode?.refresh(e)}async pin(){this.pinned||(this._pinned=Date.now(),await this.updatePinned(),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}async unpin(){this.pinned&&(this._pinned=0,await this.view.updatePinned(this.getPinnableId()),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}getPinnableId(){return _SearchResultsNode.getPinnableId(this.repoPath,this.search)}getSearchLabel(e,t){if("string"==typeof e)return e;const i=t?.count??0,r=void 0===e.resultsType?{singular:"result",plural:"results"}:e.resultsType;return`${(0,h._6)(r.singular,i,{format:e=>t?.hasMore?`${e}+`:void 0,plural:r.plural,zero:"No"})} ${e.label}`}getSearchQuery(e,t){let i=!0;return async r=>{t=await(t??this.view.container.git.richSearchCommits(this.repoPath,this.search)),i||null==t?.query||(t=await t.query(r)),i=!1;const n={label:this.getSearchLabel(e.label,t),log:t,hasMore:t?.hasMore??!1};return n.hasMore&&(n.more=async t=>{n.log=await(n.log?.more?.(t))??n.log,n.label=this.getSearchLabel(e.label,n.log),n.hasMore=n.log?.hasMore??!0}),n}}updatePinned(){return this.view.updatePinned(this.getPinnableId(),{type:"search",timestamp:this._pinned,path:this.repoPath,labels:this._labels,search:(0,a.KQ)(this.search)})}};g([(0,l.H)(),(0,c.fF)()],w.prototype,"refresh",1),g([(0,c.cM)()],w.prototype,"pin",1),g([(0,c.cM)()],w.prototype,"unpin",1);let v=w},2758:(e,t,i)=>{i.d(t,{y:()=>StashFileNode});var r=i(2601),n=i(6922);class StashFileNode extends r.R{constructor(e,t,i,r){super(e,t,i,r)}get contextValue(){return`${n.Td.File}+stashed`}}},1101:(e,t,i)=>{i.d(t,{i:()=>StashNode});var r=i(9496),n=i(2540),s=i(9338),o=i(2800),a=i(5148),l=i(3700),c=i(3620),h=i(4481),u=i(2758),d=i(6922);class StashNode extends d.bT{constructor(e,t,i,r){super(i.getGitUri(),e,t),this.parent=t,this.commit=i,this.options=r,this.updateContext({commit:i}),this._uniqueId=(0,d.tO)("stash",this.context)}get id(){return this._uniqueId}toClipboard(){return this.commit.stashName}get ref(){return this.commit}async getChildren(){let e=(await this.commit.getCommitsForFiles()).map((e=>new u.y(this.view,this,e.file,e)));if(this.view.config.files.layout!==n.Vc.List){const t=(0,o.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,l.AH)((0,l.RQ)(...e))),this.view.config.files.compact);e=new h.Y(this.view,this,t,this.repoPath,"",void 0).getChildren()}else e.sort(((e,t)=>(0,c.dm)(e.label,t.label)));return e}getTreeItem(){const e=new r.TreeItem(s.i.fromTemplate(this.view.config.formats.stashes.label,this.commit,{messageTruncateAtNewLine:!0,dateFormat:a.D.get("defaultDateFormat")}),r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=s.i.fromTemplate(this.view.config.formats.stashes.description,this.commit,{messageTruncateAtNewLine:!0,dateFormat:a.D.get("defaultDateFormat")}),e.contextValue=d.Td.Stash,this.options?.icon&&(e.iconPath=new r.ThemeIcon("archive")),e.tooltip=s.i.fromTemplate("${'On 'stashOnRef\n}${ago} (${date})\n\n${message}",this.commit,{dateFormat:a.D.get("defaultDateFormat")}),e}}},727:(e,t,i)=>{i.d(t,{m:()=>StashesNode});var r=i(9496),n=i(5432),s=i(4241),o=i(3105),a=i(21),l=i(1101),c=i(6922),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor;class StashesNode extends c.Re{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,c.tO)("stashes",this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}_children;async getChildren(){if(null==this._children){const e=await this.repo.getStash();if(null==e)return[new a.AE(this.view,this,"No stashes could be found.")];this._children=[...(0,o.UI)(e.commits.values(),(e=>new l.i(this.view,this,e)))]}return this._children}getTreeItem(){const e=new r.TreeItem("Stashes",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=c.Td.Stashes,e.iconPath=new r.ThemeIcon("gitlens-stashes"),e}refresh(){this._children=void 0}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&h(t,i,s)})([(0,n.H)(),(0,s.fF)()],StashesNode.prototype,"refresh",1)},6586:(e,t,i)=>{i.d(t,{q:()=>StatusFileNode});var r=i(9496),n=i(5255),s=i(6373),o=i(7462),a=i(7881),l=i(3700),c=i(3620),h=i(9719),u=i(6922);class StatusFileNode extends u.Te{commits;_direction;_hasStagedChanges;_hasUnstagedChanges;constructor(e,t,i,r,n,s="ahead"){let a,l=!1,c=!1;for(const e of n){if(!e.isUncommitted){if(c)break;a=e.sha;break}if(e.isUncommittedStaged){l=!0,c||(a=e.sha);break}a=void 0,c=!0}super(o.YY.fromFile(i,r,a),e,t,i),this.commits=n,this._direction=s,this._hasStagedChanges=l,this._hasUnstagedChanges=c}toClipboard(){return this.fileName}get fileName(){return this.file.path}getChildren(){return this.commits.map((e=>new h.m(this.view,this,this.file,e)))}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);if(e.description=this.description,(this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length)e.contextValue=u.Td.File,this._hasStagedChanges?(e.contextValue+="+staged",e.tooltip=s.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)} in Index (staged)",this.file)):(e.contextValue+="+unstaged",e.tooltip=s.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)} in Working Tree",this.file)),e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File,e.command=this.getCommand();else{if(e.collapsibleState=r.TreeItemCollapsibleState.Collapsed,this._hasStagedChanges||this._hasUnstagedChanges)e.contextValue=u.Td.File,this._hasStagedChanges&&this._hasUnstagedChanges?e.contextValue+="+staged+unstaged":this._hasStagedChanges?e.contextValue+="+staged":e.contextValue+="+unstaged",e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File;else{e.contextValue=u.Td.StatusFileCommits;const t=(0,a.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,l.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,l.RQ)("images","light",t))}}e.tooltip=s.o.fromTemplate(`\${file}\n\${directory}/\n\n\${status}\${ (originalPath)} in ${this.getChangedIn()}`,this.file),e.command=this.getCommand()}return this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=s.o.fromTemplate(this.view.config.formats.files.description,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,l.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=s.o.fromTemplate(this.view.config.formats.files.label,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._label}get commit(){return this.commits[0]}get priority(){return this._hasStagedChanges&&!this._hasUnstagedChanges?-3:this._hasStagedChanges?-2:this._hasUnstagedChanges?-1:0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getChangedIn(){const e=[];let t=0;return this._hasUnstagedChanges&&(t++,e.push("Working Tree")),this._hasStagedChanges&&(t++,e.push("Index (staged)")),this.commits.length>t&&(t=this.commits.length-t),t>0&&e.push((0,c._6)("commit",t)),e.length>2&&(e[e.length-1]=`and ${e[e.length-1]}`),e.join(e.length>2?", ":" and ")}getCommand(){if((this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length){const e={commit:this.commit,uri:o.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:n.Gh.DiffWithPrevious,arguments:[void 0,e]}}const e="behind"===this._direction?this.commits[0]:this.commits[this.commits.length-1],t=e.files?.find((e=>e.path===this.file.path))??this.file,i={lhs:{sha:"behind"===this._direction?e.sha:`${e.sha}^`,uri:o.YY.fromFile(t,this.repoPath,void 0,!0)},rhs:{sha:"",uri:o.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:n.Gh.DiffWith,arguments:[i]}}}},638:(e,t,i)=>{i.d(t,{_:()=>TagNode});var r=i(9496),n=i(2540),s=i(5255),o=i(3148),a=i(4321),l=i(5432),c=i(4241),h=i(3105),u=i(3620),d=i(2925),p=i(21),m=i(4741),g=i(6922),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&f(t,i,s),s};class TagNode extends g.bT{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.tag=r,this.updateContext({tag:r}),this._uniqueId=(0,g.tO)("tag",this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}toClipboard(){return this.tag.name}get label(){return this.view.config.branches.layout===n.CZ.Tree?this.tag.getBasename():this.tag.name}get ref(){return this.tag}async getChildren(){const e=await this.getLog();if(null==e)return[new p.AE(this.view,this,"No commits could be found.")];const t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.tag.name),i=[...(0,m.E)((0,h.UI)(e.commits.values(),(e=>new d.D(this.view,this,e,void 0,void 0,t))),this)];return e.hasMore&&i.push(new p.Gd(this.view,this,i[i.length-1],{getCount:()=>this.view.container.git.getCommitCount(this.tag.repoPath,this.tag.name)})),i}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=g.Td.Tag,e.description=(0,o.X)(this.tag.message),e.tooltip=`${this.tag.name}${(0,u.vk)(s.NE.Dash,2,2)}${(0,a.zL)(this.tag.sha,{force:!0})}${null!=this.tag.date?`\n${this.tag.formatDateFromNow()} (${this.tag.formatDate(this.view.container.TagDateFormatting.dateFormat)})`:""}\n\n${(0,o.X)(this.tag.message)}${null!=this.tag.commitDate&&this.tag.date!==this.tag.commitDate?`\n${this.tag.formatCommitDateFromNow()} (${this.tag.formatCommitDate(this.view.container.TagDateFormatting.dateFormat)})`:""}`,e}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:this.tag.name})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}v([(0,l.H)(),(0,c.fF)()],TagNode.prototype,"refresh",1),v([(0,l.H)()],TagNode.prototype,"loadMore",1)},1841:(e,t,i)=>{i.d(t,{P:()=>TagsNode});var r=i(9496),n=i(2540),s=i(7462),o=i(2800),a=i(5432),l=i(4241),c=i(4004),h=i(21),u=i(638),d=i(6922),p=Object.defineProperty,m=Object.getOwnPropertyDescriptor;class TagsNode extends d.Re{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,d.tO)("tags",this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}_children;async getChildren(){if(null==this._children){const e=await this.repo.getTags({sort:!0});if(0===e.values.length)return[new h.AE(this.view,this,"No tags could be found.")];const t=e.values.map((e=>new u._(s.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,e)));if(this.view.config.branches.layout===n.CZ.List)return t;const i=(0,o.Mo)(t,(e=>e.tag.name.split("/")),((...e)=>e.join("/")),this.view.config.files.compact),r=new c.n(this.view,this,"tag",i,this.repo.path,"",void 0);this._children=r.getChildren()}return this._children}getTreeItem(){const e=new r.TreeItem("Tags",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=d.Td.Tags,e.iconPath=new r.ThemeIcon("tag"),e}refresh(){this._children=void 0}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&p(t,i,s)})([(0,a.H)(),(0,l.fF)()],TagsNode.prototype,"refresh",1)},6922:(e,t,i)=>{i.d(t,{CF:()=>SubscribeableViewNode,FZ:()=>RepositoriesSubscribeableNode,Jc:()=>b,LD:()=>R,On:()=>A,RW:()=>ViewRefFileNode,Re:()=>y,Td:()=>w,Te:()=>ViewFileNode,bT:()=>ViewRefNode,kP:()=>D,kr:()=>S,pp:()=>k,tO:()=>v,vb:()=>RepositoryFolderNode,w8:()=>C});var r=i(9496),n=i(5255),s=i(7462),o=i(4321),a=i(3050),l=i(3646),c=i(5432),h=i(4241),u=i(9796),d=i(4336),p=i(3620),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&m(t,i,s),s},w=(e=>(e.ActiveFileHistory="gitlens:history:active:file",e.ActiveLineHistory="gitlens:history:active:line",e.AutolinkedItems="gitlens:autolinked:items",e.AutolinkedIssue="gitlens:autolinked:issue",e.AutolinkedItem="gitlens:autolinked:item",e.Branch="gitlens:branch",e.Branches="gitlens:branches",e.BranchStatusAheadOfUpstream="gitlens:status-branch:upstream:ahead",e.BranchStatusBehindUpstream="gitlens:status-branch:upstream:behind",e.BranchStatusNoUpstream="gitlens:status-branch:upstream:none",e.BranchStatusSameAsUpstream="gitlens:status-branch:upstream:same",e.BranchStatusFiles="gitlens:status-branch:files",e.Commit="gitlens:commit",e.Commits="gitlens:commits",e.Compare="gitlens:compare",e.CompareBranch="gitlens:compare:branch",e.ComparePicker="gitlens:compare:picker",e.ComparePickerWithRef="gitlens:compare:picker:ref",e.CompareResults="gitlens:compare:results",e.CompareResultsCommits="gitlens:compare:results:commits",e.Contributor="gitlens:contributor",e.Contributors="gitlens:contributors",e.DateMarker="gitlens:date-marker",e.File="gitlens:file",e.FileHistory="gitlens:history:file",e.Folder="gitlens:folder",e.LineHistory="gitlens:history:line",e.Merge="gitlens:merge",e.MergeConflictCurrentChanges="gitlens:merge-conflict:current",e.MergeConflictIncomingChanges="gitlens:merge-conflict:incoming",e.Message="gitlens:message",e.MessageSignIn="gitlens:message:signin",e.Pager="gitlens:pager",e.PullRequest="gitlens:pullrequest",e.Rebase="gitlens:rebase",e.Reflog="gitlens:reflog",e.ReflogRecord="gitlens:reflog-record",e.Remote="gitlens:remote",e.Remotes="gitlens:remotes",e.Repositories="gitlens:repositories",e.Repository="gitlens:repository",e.RepositoryFolder="gitlens:repo-folder",e.ResultsFile="gitlens:file:results",e.ResultsFiles="gitlens:results:files",e.SearchAndCompare="gitlens:searchAndCompare",e.SearchResults="gitlens:search:results",e.SearchResultsCommits="gitlens:search:results:commits",e.Stash="gitlens:stash",e.Stashes="gitlens:stashes",e.StatusFileCommits="gitlens:status:file:commits",e.StatusFiles="gitlens:status:files",e.StatusAheadOfUpstream="gitlens:status:upstream:ahead",e.StatusBehindUpstream="gitlens:status:upstream:behind",e.StatusNoUpstream="gitlens:status:upstream:none",e.StatusSameAsUpstream="gitlens:status:upstream:same",e.Tag="gitlens:tag",e.Tags="gitlens:tags",e.UncommittedFiles="gitlens:uncommitted:files",e.Workspace="gitlens:workspace",e.WorkspaceMissingRepository="gitlens:workspaceMissingRepository",e.Workspaces="gitlens:workspaces",e.Worktree="gitlens:worktree",e.Worktrees="gitlens:worktrees",e))(w||{});function v(e,t){let i="";return t.root&&(i+="/root"),null!=t.workspace&&(i+=`/ws/${t.workspace.id}`),null!=t.wsRepositoryDescriptor&&(i+=`/wsrepo/${t.wsRepositoryDescriptor.id}`),null!=t.repository&&(i+=`/repo/${t.repository.id}`),null!=t.worktree&&(i+=`/worktree/${t.worktree.uri.path}`),null!=t.remote&&(i+=`/remote/${t.remote.name}`),null!=t.tag&&(i+=`/tag/${t.tag.id}`),null!=t.branch&&(i+=`/branch/${t.branch.id}`),null!=t.branchStatus&&(i+=`/status/${t.branchStatus.upstream??"-"}`),null!=t.branchStatusUpstreamType&&(i+=`/status-direction/${t.branchStatusUpstreamType}`),null!=t.reflog&&(i+=`/reflog/${t.reflog.sha}+${t.reflog.selector}+${t.reflog.command}+${t.reflog.commandArgs??""}+${t.reflog.date.getTime()}`),null!=t.contributor&&(i+=`/contributor/${t.contributor.id??`${t.contributor.username}+${t.contributor.email}+${t.contributor.name}`}`),null!=t.autolinksId&&(i+=`/autolinks/${t.autolinksId}`),null!=t.comparisonId&&(i+=`/comparison/${t.comparisonId}`),null!=t.searchId&&(i+=`/search/${t.searchId}`),null!=t.commit&&(i+=`/commit/${t.commit.sha}`),null!=t.file&&(i+=`/file/${t.file.path}+${t.file.status}`),`gitlens://viewnode/${e}${i}`}let y=class{constructor(e,t,i){this.view=t,this.parent=i,this._uri=e}_uniqueId;splatted=!1;get id(){return this._uniqueId}_context;get context(){return this._context??this.parent?.context??{}}updateContext(e,t=!1){this._context=this.getNewContext(e,t)}getNewContext(e,t=!1){return{...t?this.parent?.context:this.context,...e}}toString(){const e=this.id;return`${(0,d.q4)(this)}${null!=e?`(${e})`:""}`}_uri;get uri(){return this._uri}getParent(){return this.parent?.splatted?this.parent?.getParent():this.parent}getCommand(){}triggerChange(e=!1,t=!1,i){return this.splatted&&null!=this.parent&&this.parent!==i?this.parent.triggerChange(e,t):this.view.refreshNode(this,e,t)}deleteState(e){if(null==this.id)throw new Error("Id is required to delete state");this.view.nodeState.deleteState(this.id,e)}getState(e){if(null==this.id)throw new Error("Id is required to get state");return this.view.nodeState.getState(this.id,e)}storeState(e,t,i){if(null==this.id)throw new Error("Id is required to store state");this.view.nodeState.storeState(this.id,e,t,i)}};function b(e){return e instanceof y}function C(e){return e instanceof ViewFileNode}f([(0,c.H)(((e=!1,t=!1,i)=>JSON.stringify([e,t,i?.toString()]))),(0,h.fF)()],y.prototype,"triggerChange",1),y=f([(0,h.hJ)(((e,t)=>`${t}${null!=e.id?`(${e.id})`:""}`))],y);class ViewFileNode extends y{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.file=r}get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${this.file.path}`}}class ViewRefNode extends y{constructor(e,t,i){super(e,t,i),this.parent=i}get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${(0,o.Wh)(this.ref,!1)}`}}class ViewRefFileNode extends ViewFileNode{toString(){return`${super.toString()}:${this.file.path}`}}function A(e){return(0,u.is)(e,"loadMore")}class SubscribeableViewNode extends y{disposable;subscription;loaded=!1;constructor(e,t,i){super(e,t,i);const n=[this.view.onDidChangeVisibility(this.onVisibilityChanged,this),this.view.onDidChangeNodeCollapsibleState(this.onNodeCollapsibleStateChanged,this)];P(this.view)&&n.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged,this));const s=this.getTreeItem;this.getTreeItem=function(){return this.loaded=!0,this.ensureSubscription(),s.apply(this)};const o=this.getChildren;this.getChildren=function(){return this.loaded=!0,this.ensureSubscription(),o.apply(this)},this.disposable=r.Disposable.from(...n)}dispose(){this.unsubscribe(),this.disposable?.dispose()}async triggerChange(e=!1,t=!1){this.loaded&&(e&&!this.view.visible&&(this._pendingReset=e),await super.triggerChange(e,t))}_canSubscribe=!0;get canSubscribe(){return this._canSubscribe}set canSubscribe(e){this._canSubscribe!==e&&(this._canSubscribe=e,this.ensureSubscription(),e&&this.triggerChange())}_etag;_pendingReset=!1;get requiresResetOnVisible(){let e=this._pendingReset;this._pendingReset=!1;const t=this.etag();return t!==this._etag&&(this._etag=t,e=!0),e}async unsubscribe(){if(this._etag=this.etag(),null!=this.subscription){const e=this.subscription;this.subscription=void 0,(await e)?.dispose()}}onAutoRefreshChanged(){this.onVisibilityChanged({visible:this.view.visible})}collapsibleState;onNodeCollapsibleStateChanged(e){e.element===this?(this.collapsibleState=e.state,void 0!==this.onCollapsibleStateChanged&&this.onCollapsibleStateChanged(e.state)):e.element===this.parent&&void 0!==this.onParentCollapsibleStateChanged&&this.onParentCollapsibleStateChanged(e.state)}onVisibilityChanged(e){this.ensureSubscription(),e.visible&&this.triggerChange(this.requiresResetOnVisible)}async ensureSubscription(){this.canSubscribe&&this.view.visible&&(!P(this.view)||this.view.autoRefresh)?null==this.subscription&&(this.subscription=Promise.resolve(this.subscribe()),await this.subscription):await this.unsubscribe()}async resetSubscription(){await this.unsubscribe(),await this.ensureSubscription()}}f([(0,h.fF)()],SubscribeableViewNode.prototype,"dispose",1),f([(0,c.H)(),(0,h.fF)()],SubscribeableViewNode.prototype,"triggerChange",1),f([(0,h.fF)()],SubscribeableViewNode.prototype,"unsubscribe",1),f([(0,h.fF)()],SubscribeableViewNode.prototype,"onAutoRefreshChanged",1),f([(0,h.fF)()],SubscribeableViewNode.prototype,"onVisibilityChanged",1),f([(0,c.H)(),(0,h.fF)()],SubscribeableViewNode.prototype,"ensureSubscription",1),f([(0,c.H)(),(0,h.fF)()],SubscribeableViewNode.prototype,"resetSubscription",1);class RepositoryFolderNode extends SubscribeableViewNode{constructor(e,t,i,r,n,s){super(e,t,i),this.parent=i,this.repo=r,this.options=s,this.updateContext({repository:this.repo}),this._uniqueId=v("repository-folder",this.context),this.splatted=n}splatted=!0;child;get id(){return this._uniqueId}toClipboard(){return this.repo.path}get repoPath(){return this.repo.path}async getTreeItem(){this.splatted=!1;const e=await this.repo.getBranch(),t=(e?.state.ahead??0)>0,i=(e?.state.behind??0)>0,s=t||i||this.repo.starred||this.view.container.git.isRepositoryForEditor(this.repo),o=new r.TreeItem(this.repo.formattedName??this.uri.repoPath??"",s?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);if(o.contextValue="gitlens:repo-folder"+(this.repo.starred?"+starred":""),t&&(o.contextValue+="+ahead"),i&&(o.contextValue+="+behind"),null!=e&&this.options?.showBranchAndLastFetched){const t=await this.repo.getLastFetched()??0,i=e.getTrackingStatus();let s;if(o.description=`${i?`${i}${(0,p.vk)(n.NE.Dot,1,1)}`:""}${e.name}${t?`${(0,p.vk)(n.NE.Dot,1,1)}Last fetched ${l._j.formatLastFetched(t)}`:""}`,null!=e.upstream){const t=a.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(e.repoPath));s=t?.length?t[0].name:void 0}else{const t=await e.getRemoteWithProvider();s=t?.provider?.name}o.tooltip=new r.MarkdownString(`${this.repo.formattedName??this.uri.repoPath??""}${t?`${(0,p.vk)(n.NE.Dash,2,2)}Last fetched ${l._j.formatLastFetched(t,!1)}`:""}${this.repo.formattedName?`\n${this.uri.repoPath}`:""}\n\nCurrent branch $(git-branch) ${e.name}${null!=e.upstream?` is ${e.getTrackingStatus({empty:e.upstream.missing?`missing upstream $(git-branch) ${e.upstream.name}`:`up to date with $(git-branch) ${e.upstream.name}${s?` on ${s}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${e.upstream.name}${s?` on ${s}`:""}`})}`:`hasn't been published to ${s??"a remote"}`}`,!0)}else o.tooltip=`${this.repo.formattedName?`${this.repo.formattedName}\n${this.uri.repoPath}`:this.uri.repoPath??""}`;return o}async getSplattedChild(){return null==this.child&&await this.getChildren(),this.child}async refresh(e=!1){await(this.child?.triggerChange(e,!1,this)),await this.ensureSubscription()}async star(){await this.repo.star()}async unstar(){await this.repo.unstar()}subscribe(){return this.repo.onDidChange(this.onRepositoryChanged,this)}etag(){return this.repo.etag}onRepositoryChanged(e){if(e.changed(l.I6.Closed,l.du.Any))return this.dispose(),void this.parent?.triggerChange(!0);e.changed(l.I6.Opened,l.du.Any)||e.changed(l.I6.Starred,l.du.Any)?this.parent?.triggerChange(!0):this.changed(e)&&(this.loaded?this:this.parent??this).triggerChange(!0)}}f([(0,c.H)(),(0,h.fF)()],RepositoryFolderNode.prototype,"refresh",1),f([(0,h.cM)()],RepositoryFolderNode.prototype,"star",1),f([(0,h.cM)()],RepositoryFolderNode.prototype,"unstar",1),f([(0,h.fF)()],RepositoryFolderNode.prototype,"subscribe",1),f([(0,h.fF)({args:{0:e=>e.toString()}})],RepositoryFolderNode.prototype,"onRepositoryChanged",1);class RepositoriesSubscribeableNode extends SubscribeableViewNode{splatted=!0;children;constructor(e){super(s.Wj,e)}dispose(){super.dispose(),this.resetChildren()}resetChildren(){if(null!=this.children){for(const e of this.children)"dispose"in e&&e.dispose();this.children=void 0}}async getSplattedChild(){return null==this.children&&await this.getChildren(),1===this.children?.length?this.children[0]:void 0}refresh(e=!1){null!=this.children&&e&&this.resetChildren()}etag(){return(0,u.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}subscribe(){return r.Disposable.from(this.view.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),this.view.container.subscription.onDidChange(this.onSubscriptionChanged,this))}onRepositoriesChanged(e){this.triggerChange(!0)}onSubscriptionChanged(e){e.current.plan!==e.previous.plan&&this.triggerChange(!0)}}function P(e){return(0,u.is)(e,"onDidChangeAutoRefresh")}function S(e){return"function"==typeof e.clear}function R(e){return"function"==typeof e.edit}function D(e){return"function"==typeof e.dismissNode}function k(e){return function(e){return null!=e&&"repoPath"in e&&"string"==typeof e.repoPath}(e)?e.repoPath:void 0}f([(0,c.H)(),(0,h.fF)()],RepositoriesSubscribeableNode.prototype,"refresh",1),f([(0,h.fF)()],RepositoriesSubscribeableNode.prototype,"subscribe",1)},6418:(e,t,i)=>{i.d(t,{w:()=>WorktreeNode});var r=i(9496),n=i(5255),s=i(4092),o=i(4321),a=i(3050),l=i(2061),c=i(5432),h=i(4241),u=i(3105),d=i(4336),p=i(7469),m=i(3620),g=i(2925),f=i(21),w=i(9308),v=i(4741),y=i(2060),b=i(2540),C=i(7462),A=i(6450),P=i(439),S=i(7881),R=i(2800),D=i(3700),k=i(4481),_=i(6373),T=i(6922);class UncommittedFileNode extends T.Te{constructor(e,t,i,r){super(C.YY.fromFile(r,i),e,t,r)}toClipboard(){return this.path}get path(){return this.file.path}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);e.contextValue=T.Td.File,e.description=this.description,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath);const t=(0,S.tK)(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,D.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,D.RQ)("images","light",t))},e.tooltip=_.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)}",this.file),e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=_.o.fromTemplate(this.view.config.formats.files.description,{...this.file},{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,D.XX)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=_.o.fromTemplate("${file}",{...this.file},{relativePath:this.relativePath})),this._label}get priority(){return 0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){const e={uri:C.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:n.Gh.DiffWithPrevious,arguments:[void 0,e]}}}class UncommittedFilesNode extends T.Re{constructor(e,t,i,r){super(C.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.range=r,this._uniqueId=(0,T.tO)("uncommitted-files",this.context)}get id(){return this._uniqueId}get repoPath(){return this.status.repoPath}getChildren(){const e=this.repoPath,t=[...(0,u.VS)(this.status.files,(e=>{if(null!=e.workingTreeStatus&&null!=e.indexStatus){const t=new Date;return t.setMilliseconds(t.getMilliseconds()-1),[this.getFileWithPseudoCommit(e,P.CL,P.pw),this.getFileWithPseudoCommit(e,P.pw,"HEAD",t)]}return null!=e.indexStatus?[this.getFileWithPseudoCommit(e,P.pw,"HEAD")]:[this.getFileWithPseudoCommit(e,P.CL,"HEAD")]}))];t.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const i=(0,R.vM)(t,(e=>e.path));let r=Object.values(i).map((t=>new UncommittedFileNode(this.view,this,e,t[t.length-1])));if(this.view.config.files.layout!==b.Vc.List){const t=(0,R.Mo)(r,(e=>e.uri.relativePath.split("/")),((...e)=>(0,D.AH)((0,D.RQ)(...e))),this.view.config.files.compact);r=new k.Y(this.view,this,t,e,"",void 0,!0).getChildren()}else r.sort(((e,t)=>e.priority-t.priority||e.label.localeCompare(t.label,void 0,{numeric:!0,sensitivity:"base"})));return r}getTreeItem(){const e=new r.TreeItem("Uncommitted changes",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=T.Td.UncommittedFiles,e.iconPath=new r.ThemeIcon("folder"),e}getFileWithPseudoCommit(e,t,i,r){return r=r??new Date,{status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:new A.aM(this.view.container,e.repoPath,t,new A._j("You",void 0,r),new A._j("You",void 0,r),"Uncommitted changes",[i],"Uncommitted changes",new S.K8(e.repoPath,e.path,e.status,e.originalPath,i),void 0,[])}}}var F=Object.defineProperty,O=Object.getOwnPropertyDescriptor,E=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?O(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&F(t,i,s),s};class WorktreeNode extends T.Re{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.worktree=r,this.updateContext({worktree:r}),this._uniqueId=(0,T.tO)("worktree",this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;_branch;get id(){return this._uniqueId}toClipboard(){return this.worktree.uri.fsPath}get repoPath(){return this.uri.repoPath}_children;async getChildren(){if(null==this._children){const e=this._branch;let t,i;if(null!=e&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=e.upstream||e.remote)&&(0,l.fw)("gitlens:hasConnectedRemotes")&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,p.PQ)();const i=this.getAssociatedPullRequest(e,{include:[s.o0.Open,s.o0.Merged]});queueMicrotask((async()=>{await(t?.promise);let r=!1;const n=setTimeout((()=>{r=!0,this.view.triggerNodeChange(this)}),250),s=await i;clearTimeout(n),null!=s&&null!=this._children&&this._children.splice(this._children[0]instanceof w._?1:0,0,new y.Z(this.view,this,s,e)),(r||null!=s)&&this.view.triggerNodeChange(this)}))}const[r,n,o,a]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),this.worktree.getStatus(),null==e||e.remote?void 0:this.view.container.git.getBranchAheadRange(e).then((e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e}):void 0))]),c=(0,p.Sb)(r);if(null==c)return[new f.AE(this.view,this,"No commits could be found.")];const h=[];null!=e&&!1!==this.view.config.showBranchComparison&&h.push(new w._(this.uri,this.view,this,e,this.view.config.showBranchComparison,this.splatted)),null!=e&&null!=i&&h.push(new y.Z(this.view,this,i,e));const d=(0,p.Sb)(a),m=(0,p.Sb)(n);h.push(...(0,v.E)((0,u.UI)(c.commits.values(),(t=>new g.D(this.view,this,t,d?.has(t.ref),e,m))),this)),c.hasMore&&h.push(new f.Gd(this.view,this,h[h.length-1]));const b=(0,p.Sb)(o);b?.hasChanges&&h.unshift(new UncommittedFilesNode(this.view,this,b,void 0)),this._children=h,t?.fulfill()}return this._children}async getTreeItem(){this.splatted=!1;let e="";const t=new r.MarkdownString("",!0);let i,s=!1;const l=this.worktree.main||this.worktree.opened?`${(0,m.vk)(n.NE.Dash,2,2)} ${this.worktree.main?"_Main"+(this.worktree.opened?", Active_":"_"):this.worktree.opened?"_Active_":""} `:"";let c=!1;switch(this.worktree.type){case"bare":i=new r.ThemeIcon("folder"),t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Bare Worktree${l}\\\n\`${this.worktree.friendlyPath}\``);break;case"branch":{const[o,h]=await Promise.allSettled([this.worktree.getBranch(),this.worktree.getStatus()]),u=(0,p.Sb)(o),g=(0,p.Sb)(h);if(this._branch=u,t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Worktree for Branch $(git-branch) ${u?.getNameWithoutRemote()??this.worktree.branch}${l}\\\n\`${this.worktree.friendlyPath}\``),i=new r.ThemeIcon("git-branch"),null!=g?(s=g.hasChanges,t.appendMarkdown(`\n\n${g.getFormattedDiffStatus({prefix:"Has Uncommitted Changes\\\n",empty:"No Uncommitted Changes",expand:!0})}`)):"rejected"===h.status&&(d.Yd.error(h.reason,"Worktree status failed"),c=!0),null!=u&&(t.appendMarkdown(`\n\nBranch $(git-branch) ${u.getNameWithoutRemote()}`),!u.remote))if(null!=u.upstream){let i=n.NE.Dash;const r=await u.getRemote();if(u.upstream.missing)i=n.NE.Warning;else if(null!=r){let e,t;for(const{type:i}of r.urls)if(i===a.XG.Fetch){if(e=!0,t)break}else if(i===a.XG.Push&&(t=!0,e))break;e&&t?i=n.NE.ArrowsRightLeft:t?i=n.NE.ArrowRight:e&&(i=n.NE.ArrowLeft)}e=`${u.getTrackingStatus({empty:(0,m.vk)(i,0,2),suffix:(0,m.vk)(i,2,2)})}${u.upstream.name}`,t.appendMarkdown(` is ${u.getTrackingStatus({empty:u.upstream.missing?`missing upstream $(git-branch) ${u.upstream.name}`:`up to date with $(git-branch)  ${u.upstream.name}${r?.provider?.name?` on ${r.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${u.upstream.name}${r?.provider?.name?` on ${r.provider.name}`:""}`})}`)}else{const e=a.ss.getHighlanderProviderName(await this.view.container.git.getRemotesWithProviders(u.repoPath));t.appendMarkdown(` hasn't been published to ${e??"a remote"}`)}break}case"detached":{let e;i=new r.ThemeIcon("git-commit"),t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Detached Worktree at $(git-commit) ${(0,o.zL)(this.worktree.sha)}${l}\\\n\`${this.worktree.friendlyPath}\``);try{e=await this.worktree.getStatus()}catch(e){d.Yd.error(e,"Worktree status failed"),c=!0}null!=e&&(s=e.hasChanges,t.appendMarkdown(`\n\n${e.getFormattedDiffStatus({prefix:"Has Uncommitted Changes",empty:"No Uncommitted Changes",expand:!0})}`));break}}const h=this.getState("pendingPullRequest");null!=h&&t.appendMarkdown(`\n\n$(loading~spin) Loading associated pull request${n.NE.Ellipsis}`),c&&t.appendMarkdown(`\n\n${n.NE.Warning} Unable to locate worktree path`);const u=new r.TreeItem(this.worktree.name,r.TreeItemCollapsibleState.Collapsed);return u.id=this.id,u.description=e,u.contextValue=`${T.Td.Worktree}${this.worktree.main?"+main":""}${this.worktree.opened?"+active":""}`,u.iconPath=null!=h?new r.ThemeIcon("loading~spin"):this.worktree.opened?new r.ThemeIcon("check"):i,u.tooltip=t,u.resourceUri=c?r.Uri.parse("gitlens-view://worktree/missing"):s?r.Uri.parse("gitlens-view://worktree/changes"):void 0,u}refresh(e){this._children=void 0,e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return r??(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{ref:this.worktree.sha,limit:this.limit??this.view.config.defaultItemLimit})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this._children=void 0,this.triggerChange(!1)))}}E([(0,c.H)(),(0,h.fF)()],WorktreeNode.prototype,"refresh",1),E([(0,c.H)()],WorktreeNode.prototype,"loadMore",1)},8562:(e,t,i)=>{i.d(t,{S:()=>WorktreesNode});var r=i(9496),n=i(5255),s=i(8887),o=i(5432),a=i(4241),l=i(21),c=i(6922),h=i(6418),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor;class WorktreesNode extends c.Re{constructor(e,t,i,r){super(e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,c.tO)("worktrees",this.context)}_children;get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this._children){if(!(await this.repo.access(s.x.Worktrees)).allowed)return[];const e=await this.repo.getWorktrees();if(0===e.length)return[new l.AE(this.view,this,"No worktrees could be found.")];this._children=e.map((e=>new h.w(this.uri,this.view,this,e)))}return this._children}async getTreeItem(){const e=await this.repo.access(s.x.Worktrees),t=new r.TreeItem("Worktrees",e.allowed?r.TreeItemCollapsibleState.Collapsed:r.TreeItemCollapsibleState.None);return t.id=this.id,t.contextValue=c.Td.Worktrees,t.description=e.allowed?void 0:` ${n.NE.Warning}  Requires a trial or paid plan for use on privately hosted repos`,t.iconPath=new r.ThemeIcon("folder-opened"),t}refresh(){this._children=void 0}}((e,t,i,r)=>{for(var n,s=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);r&&s&&u(t,i,s)})([(0,o.H)(),(0,a.fF)()],WorktreesNode.prototype,"refresh",1)},3479:(e,t,i)=>{i.d(t,{L5:()=>RemotesView});var r=i(9496),n=i(2540),s=i(5255),o=i(7462),a=i(5367),l=i(6450),c=i(4321),h=i(3646),u=i(9529),d=i(5148),p=i(5432),m=i(7382),g=i(4004),f=i(1351),w=i(1952),v=i(9100),y=i(6922),b=i(5517),C=i(5688),A=Object.defineProperty,P=Object.getOwnPropertyDescriptor,S=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?P(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&A(t,i,s),s};class RemotesRepositoryNode extends y.vb{async getChildren(){return null==this.child&&(this.child=new w.e(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(h.I6.Config,h.I6.Remotes,h.I6.RemoteProviders,h.I6.Unknown,h.du.Any)}}class RemotesViewNode extends y.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No remotes could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new RemotesRepositoryNode(o.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getRemotes();return 0===t.length?(this.view.message="No remotes could be found.",this.view.title="Remotes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Remotes (${t.length})`,e.getChildren())}return this.view.title="Remotes",this.children}getTreeItem(){return new r.TreeItem("Remotes",r.TreeItemCollapsibleState.Expanded)}}class RemotesView extends b._{configKey="remotes";constructor(e){super(e,"remotes","Remotes","remotesView")}get canReveal(){return this.config.reveal||!d.D.get("views.repositories.showRemotes")}getRoot(){return new RemotesViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,C.i)(this.getQualifiedCommand("copy"),(()=>(0,u.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,C.i)(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","remotes"),this.refresh(!0))),this),(0,C.i)(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout(n.CZ.List)),this),(0,C.i)(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout(n.CZ.Tree)),this),(0,C.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(n.Vc.Auto)),this),(0,C.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(n.Vc.List)),this),(0,C.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(n.Vc.Tree)),this),(0,C.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,C.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),(0,C.i)(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),(0,C.i)(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||d.D.changed(e,"defaultDateFormat")||d.D.changed(e,"defaultDateLocale")||d.D.changed(e,"defaultDateShortFormat")||d.D.changed(e,"defaultDateSource")||d.D.changed(e,"defaultDateStyle")||d.D.changed(e,"defaultGravatarsStyle")||d.D.changed(e,"defaultTimeFormat")||d.D.changed(e,"integrations.enabled")||d.D.changed(e,"sortBranchesBy"))}findBranch(e,t){if(!e.remote)return;const{repoPath:i}=e;return this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:t=>t instanceof RemotesViewNode||(t instanceof RemotesRepositoryNode||t instanceof g.n?t.repoPath===i:t instanceof f.V&&(t.repoPath===i&&t.remote.name===(0,a.Lo)(e.name))),token:t})}async findCommit(e,t){const{repoPath:i}=e,r=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,l.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0});if(0===r.length)return;const n=r.map((e=>e.split("/",1)[0]));return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:e=>e instanceof RemotesViewNode||(e instanceof RemotesRepositoryNode||e instanceof g.n?e.repoPath===i:e instanceof f.V?e.repoPath===i&&n.includes(e.remote.name):e instanceof m.E?e.repoPath===i&&r.includes(e.branch.name):(e instanceof v.q||e instanceof w.e||e instanceof g.n)&&e.repoPath===i),token:t})}findRemote(e,t){const{repoPath:i}=e;return this.findNode((t=>t.remote?.name===e.name),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof RemotesViewNode||e instanceof RemotesRepositoryNode&&e.repoPath===i,token:t})}revealBranch(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,c.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findBranch(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,c.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findCommit(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}revealRemote(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findRemote(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof y.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof RemotesViewNode||e instanceof y.vb});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return d.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return d.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return d.D.updateEffective(`views.${this.configKey}.avatars`,e)}async setShowBranchPullRequest(e){await d.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await d.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}S([(0,p.H)((()=>""))],RemotesView.prototype,"revealBranch",1),S([(0,p.H)((()=>""))],RemotesView.prototype,"revealCommit",1),S([(0,p.H)((()=>""))],RemotesView.prototype,"revealRemote",1),S([(0,p.H)((()=>""))],RemotesView.prototype,"revealRepository",1)},5478:(e,t,i)=>{i.d(t,{a:()=>RepositoriesView});var r=i(9496),n=i(2540),s=i(5255),o=i(5367),a=i(6450),l=i(4321),c=i(9529),h=i(5148),u=i(2061),d=i(5432),p=i(3608),m=i(7382),g=i(4004),f=i(9354),w=i(9308),v=i(5310),y=i(4562),b=i(8896),C=i(1351),A=i(1952),P=i(7424),S=i(9100),R=i(727),D=i(1841),k=i(6418),_=i(8562),T=i(5517),F=i(5688),O=Object.defineProperty,E=Object.getOwnPropertyDescriptor,$=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?E(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&O(t,i,s),s};class RepositoriesView extends T._{configKey="repositories";constructor(e){super(e,"repositories","Repositories","repositoriesView")}_onDidChangeAutoRefresh=new r.EventEmitter;get onDidChangeAutoRefresh(){return this._onDidChangeAutoRefresh.event}get canSelectMany(){return!1}getRoot(){return new P.S(this)}registerCommands(){return this.container.viewCommands,[(0,F.i)(this.getQualifiedCommand("copy"),(()=>(0,c.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,F.i)(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","contributors","remotes","stashes","status","tags"),this.refresh(!0))),this),(0,F.i)(this.getQualifiedCommand("setBranchesLayoutToList"),(()=>this.setBranchesLayout(n.CZ.List)),this),(0,F.i)(this.getQualifiedCommand("setBranchesLayoutToTree"),(()=>this.setBranchesLayout(n.CZ.Tree)),this),(0,F.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(n.Vc.Auto)),this),(0,F.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(n.Vc.List)),this),(0,F.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(n.Vc.Tree)),this),(0,F.i)(this.getQualifiedCommand("setAutoRefreshToOn"),(()=>this.setAutoRefresh(h.D.get("views.repositories.autoRefresh"),!0)),this),(0,F.i)(this.getQualifiedCommand("setAutoRefreshToOff"),(()=>this.setAutoRefresh(h.D.get("views.repositories.autoRefresh"),!1)),this),(0,F.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,F.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),(0,F.i)(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),(0,F.i)(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),(0,F.i)(this.getQualifiedCommand("setBranchesShowBranchComparisonOn"),(()=>this.setBranchShowBranchComparison(!0)),this),(0,F.i)(this.getQualifiedCommand("setBranchesShowBranchComparisonOff"),(()=>this.setBranchShowBranchComparison(!1)),this),(0,F.i)(this.getQualifiedCommand("setShowBranchesOn"),(()=>this.toggleSection("showBranches",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowBranchesOff"),(()=>this.toggleSection("showBranches",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowCommitsOn"),(()=>this.toggleSection("showCommits",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowCommitsOff"),(()=>this.toggleSection("showCommits",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowContributorsOn"),(()=>this.toggleSection("showContributors",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowContributorsOff"),(()=>this.toggleSection("showContributors",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowRemotesOn"),(()=>this.toggleSection("showRemotes",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowRemotesOff"),(()=>this.toggleSection("showRemotes",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowStashesOn"),(()=>this.toggleSection("showStashes",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowStashesOff"),(()=>this.toggleSection("showStashes",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowTagsOn"),(()=>this.toggleSection("showTags",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowTagsOff"),(()=>this.toggleSection("showTags",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowWorktreesOn"),(()=>this.toggleSection("showWorktrees",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowWorktreesOff"),(()=>this.toggleSection("showWorktrees",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowUpstreamStatusOn"),(()=>this.toggleSection("showUpstreamStatus",!0)),this),(0,F.i)(this.getQualifiedCommand("setShowUpstreamStatusOff"),(()=>this.toggleSection("showUpstreamStatus",!1)),this),(0,F.i)(this.getQualifiedCommand("setShowSectionOff"),(e=>this.toggleSectionByNode(e,!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||h.D.changed(e,"defaultDateFormat")||h.D.changed(e,"defaultDateLocale")||h.D.changed(e,"defaultDateShortFormat")||h.D.changed(e,"defaultDateSource")||h.D.changed(e,"defaultDateStyle")||h.D.changed(e,"defaultGravatarsStyle")||h.D.changed(e,"defaultTimeFormat")||h.D.changed(e,"sortBranchesBy")||h.D.changed(e,"sortContributorsBy")||h.D.changed(e,"sortTagsBy"))}onConfigurationChanged(e){h.D.changed(e,`views.${this.configKey}.autoRefresh`)&&this.setAutoRefresh(h.D.get("views.repositories.autoRefresh")),super.onConfigurationChanged(e)}get autoRefresh(){return this.config.autoRefresh&&this.container.storage.getWorkspace("views:repositories:autoRefresh",!0)}findBranch(e,t){const{repoPath:i}=e;return e.remote?this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:t=>t instanceof P.S||(t instanceof C.V?t.repoPath===i&&(e.remote&&t.remote.name===(0,o.Lo)(e.name)):(t instanceof S.q||t instanceof p.r||t instanceof A.e||t instanceof g.n)&&t.repoPath===i),token:t}):this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof P.S||(e instanceof S.q||e instanceof p.r||e instanceof g.n)&&e.repoPath===i,token:t})}async findCommit(e,t){const{repoPath:i}=e;let r=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,a.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==r.length)return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:async t=>t instanceof P.S||(t instanceof S.q||t instanceof p.r||t instanceof g.n?t.repoPath===i:!!(t instanceof m.E&&t.repoPath===i&&r.includes(t.branch.name))&&(await t.loadMore({until:e.ref}),!0)),token:t});if(r=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,a.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0}),0===r.length)return;const n=r.map((e=>e.split("/",1)[0]));return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:8,canTraverse:e=>e instanceof P.S||(e instanceof C.V?e.repoPath===i&&n.includes(e.remote.name):e instanceof m.E?e.repoPath===i&&r.includes(e.branch.name):(e instanceof S.q||e instanceof A.e||e instanceof g.n)&&e.repoPath===i),token:t})}findContributor(e,t){const{repoPath:i,username:r,email:n,name:s}=e;return this.findNode((e=>e instanceof v.K&&e.contributor.username===r&&e.contributor.email===n&&e.contributor.name===s),{maxDepth:2,canTraverse:e=>e instanceof P.S||(e instanceof S.q||e instanceof y.I)&&e.repoPath===i,token:t})}findRemote(e,t){const{repoPath:i}=e;return this.findNode((t=>t.remote?.name===e.name),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof P.S||(e instanceof S.q||e instanceof A.e)&&e.repoPath===i,token:t})}findStash(e,t){const{repoPath:i}=e;return this.findNode((t=>t.commit?.ref===e.ref),{maxDepth:3,canTraverse:e=>e instanceof P.S||(e instanceof S.q||e instanceof R.m)&&e.repoPath===i,token:t})}findTag(e,t){const{repoPath:i}=e;return this.findNode((t=>t.tag?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof P.S||(e instanceof S.q||e instanceof D.P||e instanceof g.n)&&e.repoPath===i,token:t})}findWorktree(e,t){const{repoPath:i,uri:r}=e,n=r.toString();return this.findNode((t=>t instanceof k.w&&e.uri.toString()===n),{maxDepth:2,canTraverse:e=>e instanceof P.S||(e instanceof S.q||e instanceof _.S)&&e.repoPath===i,token:t})}revealBranch(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,l.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const n=await this.findBranch(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealBranches(e,t){const i=await this.findNode((t=>t instanceof p.r&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof P.S||t instanceof S.q&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,l.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const n=await this.findCommit(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealContributor(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing contributor '${e.name} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const n=await this.findContributor(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}revealRemote(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findRemote(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof S.q&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof P.S});return void 0!==i&&await this.reveal(i,t),i}async revealStash(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,l.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const n=await this.findStash(e,r);return void 0!==n&&await this.reveal(n,t),n}))}async revealStashes(e,t){const i=await this.findNode((t=>t instanceof R.m&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof P.S||t instanceof S.q&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}revealTag(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,l.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const n=await this.findTag(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealTags(e,t){const i=await this.findNode((t=>t instanceof D.P&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof P.S||t instanceof S.q&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}revealWorktree(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findWorktree(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}async revealWorktrees(e,t){const i=await this.findNode((t=>t instanceof _.S&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof P.S||t instanceof S.q&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}async setAutoRefresh(e,t){e&&(void 0===t?t=this.container.storage.getWorkspace("views:repositories:autoRefresh",!0):await this.container.storage.storeWorkspace("views:repositories:autoRefresh",t)),(0,u.v)("gitlens:views:repositories:autoRefresh",e&&t),this._onDidChangeAutoRefresh.fire()}setBranchesLayout(e){return h.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return h.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return h.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return h.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&n.DH.Working)}setBranchShowBranchComparison(e){return h.D.updateEffective(`views.${this.configKey}.branches.showBranchComparison`,!!e&&n.DH.Branch)}toggleSection(e,t){return h.D.updateEffective(`views.${this.configKey}.${e}`,t)}toggleSectionByNode(e,t){return e instanceof p.r?h.D.updateEffective(`views.${this.configKey}.showBranches`,t):e instanceof m.E?h.D.updateEffective(`views.${this.configKey}.showCommits`,t):e instanceof f.V?h.D.updateEffective(`views.${this.configKey}.showUpstreamStatus`,t):e instanceof w._?this.setShowBranchComparison(t):e instanceof y.I?h.D.updateEffective(`views.${this.configKey}.showContributors`,t):e instanceof b.Y?h.D.updateEffective(`views.${this.configKey}.showIncomingActivity`,t):e instanceof A.e?h.D.updateEffective(`views.${this.configKey}.showRemotes`,t):e instanceof R.m?h.D.updateEffective(`views.${this.configKey}.showStashes`,t):e instanceof D.P?h.D.updateEffective(`views.${this.configKey}.showTags`,t):e instanceof _.S?h.D.updateEffective(`views.${this.configKey}.showWorktrees`,t):Promise.resolve()}}$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealBranch",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealBranches",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealCommit",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealContributor",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealRemote",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealRepository",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealStash",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealStashes",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealTag",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealTags",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealWorktree",1),$([(0,d.H)((()=>""))],RepositoriesView.prototype,"revealWorktrees",1)},9137:(e,t,i)=>{i.d(t,{wc:()=>TagsView});var r=i(9496),n=i(2540),s=i(5255),o=i(7462),a=i(4321),l=i(3646),c=i(9529),h=i(5148),u=i(5432),d=i(4004),p=i(1841),m=i(6922),g=i(5517),f=i(5688),w=Object.defineProperty,v=Object.getOwnPropertyDescriptor,y=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?v(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&w(t,i,s),s};class TagsRepositoryNode extends m.vb{async getChildren(){return null==this.child&&(this.child=new p.P(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(l.I6.Tags,l.I6.Unknown,l.du.Any)}}class TagsViewNode extends m.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No tags could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new TagsRepositoryNode(o.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getTags();return 0===t.values.length?(this.view.message="No tags could be found.",this.view.title="Tags",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Tags (${t.values.length})`,e.getChildren())}return this.view.title="Tags",this.children}getTreeItem(){return new r.TreeItem("Tags",r.TreeItemCollapsibleState.Expanded)}}class TagsView extends g._{configKey="tags";constructor(e){super(e,"tags","Tags","tagsView")}get canReveal(){return this.config.reveal||!h.D.get("views.repositories.showTags")}getRoot(){return new TagsViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,f.i)(this.getQualifiedCommand("copy"),(()=>(0,c.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,f.i)(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("tags"),this.refresh(!0))),this),(0,f.i)(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout(n.CZ.List)),this),(0,f.i)(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout(n.CZ.Tree)),this),(0,f.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(n.Vc.Auto)),this),(0,f.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(n.Vc.List)),this),(0,f.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(n.Vc.Tree)),this),(0,f.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,f.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||h.D.changed(e,"defaultDateFormat")||h.D.changed(e,"defaultDateLocale")||h.D.changed(e,"defaultDateShortFormat")||h.D.changed(e,"defaultDateSource")||h.D.changed(e,"defaultDateStyle")||h.D.changed(e,"defaultGravatarsStyle")||h.D.changed(e,"defaultTimeFormat")||h.D.changed(e,"sortTagsBy"))}findTag(e,t){const{repoPath:i}=e;return this.findNode((t=>t.tag?.ref===e.ref),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof TagsViewNode||(e instanceof TagsRepositoryNode||e instanceof d.n)&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof m.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof TagsViewNode||e instanceof m.vb});return void 0!==i&&await this.reveal(i,t),i}revealTag(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,a.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findTag(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}setLayout(e){return h.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return h.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return h.D.updateEffective(`views.${this.configKey}.avatars`,e)}}y([(0,u.H)((()=>""))],TagsView.prototype,"revealRepository",1),y([(0,u.H)((()=>""))],TagsView.prototype,"revealTag",1)},5517:(e,t,i)=>{i.d(t,{_:()=>ViewBase});var r=i(9496),n=i(2540),s=i(9529),o=i(5148),a=i(4241),l=i(2185),c=i(9796),h=i(4336),u=i(6004),d=i(7469),p=i(6922),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&m(t,i,s),s};class ViewBase{constructor(e,t,i,n){if(this.container=e,this.type=t,this.name=i,this.trackingFeature=n,this.disposables.push((0,l.IH)(e.onReady)(this.onReady,this)),this.container.debugging||o.D.get("debug")){let e=function(e,t,i){null==e.tooltip&&(e.tooltip=new r.MarkdownString(null!=e.label&&"string"!=typeof e.label?e.label.label:e.label??"")),"string"==typeof e.tooltip?e.tooltip=`${e.tooltip}\n\n---\ncontext: ${e.contextValue}\nnode: ${t.toString()}${null!=i?`\nparent: ${i.toString()}`:""}`:e.tooltip.appendMarkdown(`\n\n---\n\ncontext: \`${e.contextValue}\`\\\nnode: \`${t.toString()}\`${null!=i?`\\\nparent: \`${i.toString()}\``:""}`)};const t=this.getTreeItem;this.getTreeItem=async function(i){const r=await t.apply(this,[i]);return null==i.resolveTreeItem&&e(r,i,i.getParent()),r};const i=this.resolveTreeItem;this.resolveTreeItem=async function(t,r){return t=await i.apply(this,[t,r]),e(t,r,r.getParent()),t}}this.disposables.push(...this.registerCommands())}get id(){return`gitlens.views.${this.type}`}_onDidChangeTreeData=new r.EventEmitter;get onDidChangeTreeData(){return this._onDidChangeTreeData.event}_onDidChangeSelection=new r.EventEmitter;get onDidChangeSelection(){return this._onDidChangeSelection.event}_onDidChangeVisibility=new r.EventEmitter;get onDidChangeVisibility(){return this._onDidChangeVisibility.event}_onDidChangeNodeCollapsibleState=new r.EventEmitter;get onDidChangeNodeCollapsibleState(){return this._onDidChangeNodeCollapsibleState.event}disposables=[];root;tree;_lastKnownLimits=new Map;dispose(){this._nodeState?.dispose(),this._nodeState=void 0,r.Disposable.from(...this.disposables).dispose()}onReady(){this.initialize({canSelectMany:this.canSelectMany,showCollapseAll:this.showCollapseAll}),queueMicrotask((()=>this.onConfigurationChanged()))}get canReveal(){return!0}get canSelectMany(){return this.container.prereleaseOrDebugging&&o.D.get("views.experimental.multiSelect.enabled",void 0,!1)}_nodeState;get nodeState(){return null==this._nodeState&&(this._nodeState=new ViewNodeState),this._nodeState}get showCollapseAll(){return!0}filterConfigurationChanged(e){if(!o.D.changed(e,"views"))return!1;if(o.D.changed(e,`views.${this.configKey}`))return!0;for(const t of n.TA)if(o.D.changed(e,`views.${t}`))return!0;return!1}get badge(){return this.tree?.badge}set badge(e){null!=this.tree&&(this.tree.badge=e)}_title;get title(){return this._title}set title(e){this._title=e,null!=this.tree&&(this.tree.title=e)}_description;get description(){return this._description}set description(e){this._description=e,null!=this.tree&&(this.tree.description=e)}_message;get message(){return this._message}set message(e){this._message=e,null!=this.tree&&(this.tree.message=e)}getQualifiedCommand(e){return`gitlens.views.${this.type}.${e}`}onConfigurationChanged(e){null!=e&&null!=this.root&&this.refresh(!0)}initialize(e={}){this.tree=r.window.createTreeView(this.id,{...e,treeDataProvider:this}),this.disposables.push(o.D.onDidChange((e=>{this.filterConfigurationChanged(e)&&(this._config=void 0,this.onConfigurationChanged(e))}),this),this.tree,this.tree.onDidChangeSelection((0,c.Ds)(this.onSelectionChanged,250),this),this.tree.onDidChangeVisibility((0,c.Ds)(this.onVisibilityChanged,250),this),this.tree.onDidChangeCheckboxState(this.onCheckboxStateChanged,this),this.tree.onDidCollapseElement(this.onElementCollapsed,this),this.tree.onDidExpandElement(this.onElementExpanded,this)),null!=this._title?this.tree.title=this._title:this._title=this.tree.title,null!=this._description&&(this.tree.description=this._description),null!=this._message&&(this.tree.message=this._message)}ensureRoot(e=!1){return(null==this.root||e)&&(this.root=this.getRoot()),this.root}getChildren(e){if(null!=e)return e.getChildren();return this.ensureRoot().getChildren()}getParent(e){return e.getParent()}getTreeItem(e){return e.getTreeItem()}resolveTreeItem(e,t){return t.resolveTreeItem?.(e)??e}onElementCollapsed(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:r.TreeItemCollapsibleState.Collapsed})}onElementExpanded(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:r.TreeItemCollapsibleState.Expanded})}onCheckboxStateChanged(e){for(const[t,i]of e.items){if(null==t.id)throw new Error("Id is required for checkboxes");t.storeState("checked",i,!0)}}onSelectionChanged(e){this._onDidChangeSelection.fire(e)}onVisibilityChanged(e){e.visible&&this.container.usage.track(`${this.trackingFeature}:shown`),this._onDidChangeVisibility.fire(e)}get activeSelection(){if(null!=this.tree&&null!=this.root)return this.tree.selection[0]}get selection(){return null==this.tree||null==this.root?[]:this.tree.selection}get visible(){return this.tree?.visible??!1}async findNode(e,{allowPaging:t=!1,canTraverse:i,maxDepth:r=2,token:n}={}){const s=(0,u.UH)();async function o(){try{return await this.findNodeCoreBFS(e,this.ensureRoot(),t,i,r,n)}catch(e){return void h.Yd.error(e,s)}}return null!=this.root?o.call(this):(await this.show({preserveFocus:!0}),new Promise((e=>setTimeout((()=>e(o.call(this))),100))))}async findNodeCoreBFS(e,t,i,r,n,s){const a=[t,void 0],l=o.D.get("advanced.maxListItems");let c,h,u,m=0;for(;a.length>1;){if(s?.isCancellationRequested)return;if(c=a.shift(),null!=c){if(e(c))return c;if(null!=r){const e=r(c);if((0,d.tI)(e)){if(!await e)continue}else if(!e)continue}if(h=await c.getChildren(),0!==h.length){for(;null!=c&&!(0,p.On)(c);)c=await(c.getSplattedChild?.());if(null!=c&&(0,p.On)(c)){let t=h.find(e);if(null!=t)return t;if(i&&c.hasMore)for(;;){if(s?.isCancellationRequested)return;if(await this.loadMoreNodeChildren(c,l),u=await(0,d.HO)(Promise.resolve(c.getChildren()),s??6e4,{onDidCancel:e=>e([])}),t=u.find(e),null!=t)return t;if(!c.hasMore)break}}else a.push(...h)}}else if(m++,a.push(void 0),m>n)break}}async ensureRevealNode(e,t){const i=[];let r=e;for(;null!=r;)i.push(r),r=r.getParent();i.length>1&&i.pop();for(const e of i.reverse())try{await this.reveal(e,t)}catch{}}async refresh(e=!1){e&&this.nodeState.reset(),await(this.root?.refresh?.(e)),this.triggerNodeChange()}async refreshNode(e,t=!1,i=!1){const r=await(e.refresh?.(t));(i||!0!==r)&&this.triggerNodeChange(e)}async reveal(e,t){if(null!=this.tree)try{await this.tree.reveal(e,t)}catch(e){h.Yd.error(e)}}async show(e){const t=(0,u.UH)();try{await(0,s.dO)(`${this.id}.focus`,e)}catch(e){h.Yd.error(e,t)}}getNodeLastKnownLimit(e){return this._lastKnownLimits.get(e.id)}async loadMoreNodeChildren(e,t,i,r){null!=i&&await this.reveal(i,{select:!0}),await e.loadMore(t,r),this._lastKnownLimits.set(e.id,e.limit)}resetNodeLastKnownLimit(e){this._lastKnownLimits.delete(e.id)}triggerNodeChange(e){this._onDidChangeTreeData.fire(null!=e&&e!==this.root?e:void 0)}_config;get config(){if(null==this._config){const e={...o.D.get("views")};for(const t of n.S4)delete e[t];this._config={...e,...o.D.get("views")[this.configKey]}}return this._config}}f([(0,a.cM)({args:{0:"<function>",1:e=>`options=${JSON.stringify({...e,canTraverse:void 0,token:void 0})}`}})],ViewBase.prototype,"findNode",1),f([(0,a.fF)()],ViewBase.prototype,"refresh",1),f([(0,a.fF)({args:{0:e=>e.toString()}})],ViewBase.prototype,"refreshNode",1),f([(0,a.cM)({args:{0:e=>e.toString()}})],ViewBase.prototype,"reveal",1),f([(0,a.cM)()],ViewBase.prototype,"show",1),f([(0,a.fF)({args:{0:e=>e.toString(),2:e=>e?.toString()}})],ViewBase.prototype,"loadMoreNodeChildren",1),f([(0,a.fF)({args:{0:e=>e.toString()},singleLine:!0})],ViewBase.prototype,"resetNodeLastKnownLimit",1),f([(0,a.fF)({args:{0:e=>e?.toString()}})],ViewBase.prototype,"triggerNodeChange",1);class ViewNodeState{_store;_stickyStore;dispose(){this.reset(),this._stickyStore?.clear(),this._stickyStore=void 0}reset(){this._store?.clear(),this._store=void 0}deleteState(e,t){null==t?(this._store?.delete(e),this._stickyStore?.delete(e)):(this._store?.get(e)?.delete(t),this._stickyStore?.get(e)?.delete(t))}getState(e,t){return this._stickyStore?.get(e)?.get(t)??this._store?.get(e)?.get(t)}storeState(e,t,i,r){let n;r?(null==this._stickyStore&&(this._stickyStore=new Map),n=this._stickyStore):(null==this._store&&(this._store=new Map),n=this._store);const s=n.get(e);null!=s?s.set(t,i):n.set(e,new Map([[t,i]]))}}},5688:(e,t,i)=>{i.d(t,{i:()=>K,s:()=>ViewCommands});var r=i(9496),n=i(2540),s=i(5255),o=i(9311),a=i(3401),l=i(6897),c=i(7445),h=i(4155),u=i(8834),d=i(252),p=i(6713),m=i(5025),g=i(7462),f=i(439),w=i(4321),v=i(9529),y=i(5148),b=i(2061),C=i(4241),A=i(9796),P=i(2509),S=i(7382),R=i(9354),D=i(2601),k=i(2925),_=i(9308),T=i(5310),F=i(906),O=i(9719),E=i(4481),$=i(3126),I=i(981),x=i(2060),B=i(1351),W=i(9100),M=i(202),L=i(812),U=i(2758),N=i(1101),G=i(6586),H=i(638),V=i(6922),q=i(6418),Q=i(8562),Y=Object.defineProperty,j=Object.getOwnPropertyDescriptor,z=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?j(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&Y(t,i,s),s};function K(e,t,i,r=1){return(0,v.xR)(e,((...e)=>{if(0!==r){let[n,s,...o]=e;if(n instanceof V.Re&&Array.isArray(s)&&s[0]instanceof V.Re)return s=s.filter((e=>e?.constructor===n.constructor)),2===r?t.apply(i,[n,s,...o]):(0,A.df)(t,s.map((e=>[e,...o])),i)}return t.apply(i,e)}),i)}class ViewCommands{constructor(e){this.container=e,K("gitlens.views.clearNode",(e=>(0,V.kr)(e)&&e.clear()),this),(0,v.xR)(s.Gh.ViewsCopy,(async(e,t)=>{if(0===(t=Array.isArray(t)?t:null!=e?[e]:[]).length)return;const i=t.map((e=>e.toClipboard?.())).filter((e=>Boolean(e))).join("\n");await r.env.clipboard.writeText(i)}),this),K("gitlens.views.dismissNode",(e=>(0,V.kP)(e.view)&&e.view.dismissNode(e)),this),K("gitlens.views.editNode",(e=>(0,V.LD)(e)&&e.edit()),this),K("gitlens.views.expandNode",(e=>e.view.reveal(e,{select:!1,focus:!1,expand:3})),this),K("gitlens.views.loadMoreChildren",(e=>e.loadMore()),this),K("gitlens.views.loadAllChildren",(e=>e.loadAll()),this),K("gitlens.views.refreshNode",((e,t)=>(null==t&&(0,V.On)(e)&&(e.limit=void 0,e.view.resetNodeLastKnownLimit(e)),e.view.refreshNode(e,t??!0))),this),K("gitlens.views.setShowRelativeDateMarkersOn",(()=>this.setShowRelativeDateMarkers(!0)),this),K("gitlens.views.setShowRelativeDateMarkersOff",(()=>this.setShowRelativeDateMarkers(!1)),this),K("gitlens.views.fetch",this.fetch,this),K("gitlens.views.publishBranch",this.publishBranch,this),K("gitlens.views.publishRepository",this.publishRepository,this),K("gitlens.views.pull",this.pull,this),K("gitlens.views.push",this.push,this),K("gitlens.views.pushWithForce",(e=>this.push(e,!0)),this),K("gitlens.views.closeRepository",this.closeRepository,this),K("gitlens.views.setAsDefault",this.setAsDefault,this),K("gitlens.views.unsetAsDefault",this.unsetAsDefault,this),K("gitlens.views.openInTerminal",this.openInTerminal,this),K("gitlens.views.star",this.star,this),K("gitlens.views.unstar",this.unstar,this),K("gitlens.views.browseRepoAtRevision",this.browseRepoAtRevision,this),K("gitlens.views.browseRepoAtRevisionInNewWindow",(e=>this.browseRepoAtRevision(e,{openInNewWindow:!0})),this),K("gitlens.views.browseRepoBeforeRevision",(e=>this.browseRepoAtRevision(e,{before:!0})),this),K("gitlens.views.browseRepoBeforeRevisionInNewWindow",(e=>this.browseRepoAtRevision(e,{before:!0,openInNewWindow:!0})),this),K("gitlens.views.addAuthors",this.addAuthors,this),K("gitlens.views.addAuthor",this.addAuthor,this),K("gitlens.views.openChanges",this.openChanges,this),K("gitlens.views.openChangesWithWorking",this.openChangesWithWorking,this),K("gitlens.views.openPreviousChangesWithWorking",this.openPreviousChangesWithWorking,this),K("gitlens.views.openFile",this.openFile,this),K("gitlens.views.openFileRevision",this.openRevision,this),K("gitlens.views.openChangedFiles",this.openFiles,this),K("gitlens.views.openChangedFileDiffs",this.openAllChanges,this),K("gitlens.views.openChangedFileDiffsWithWorking",this.openAllChangesWithWorking,this),K("gitlens.views.openChangedFileRevisions",this.openRevisions,this),K("gitlens.views.applyChanges",this.applyChanges,this),K("gitlens.views.highlightChanges",this.highlightChanges,this),K("gitlens.views.highlightRevisionChanges",this.highlightRevisionChanges,this),K("gitlens.views.restore",this.restore,this),K("gitlens.views.switchToAnotherBranch",this.switch,this),K("gitlens.views.switchToBranch",this.switchTo,this),K("gitlens.views.switchToCommit",this.switchTo,this),K("gitlens.views.switchToTag",this.switchTo,this),K("gitlens.views.addRemote",this.addRemote,this),K("gitlens.views.pruneRemote",this.pruneRemote,this),K("gitlens.views.removeRemote",this.removeRemote,this),K("gitlens.views.stageDirectory",this.stageDirectory,this),K("gitlens.views.stageFile",this.stageFile,this),K("gitlens.views.unstageDirectory",this.unstageDirectory,this),K("gitlens.views.unstageFile",this.unstageFile,this),K("gitlens.views.compareAncestryWithWorking",this.compareAncestryWithWorking,this),K("gitlens.views.compareWithHead",this.compareHeadWith,this),K("gitlens.views.compareWithUpstream",this.compareWithUpstream,this),K("gitlens.views.compareWithSelected",this.compareWithSelected,this),K("gitlens.views.selectForCompare",this.selectForCompare,this),K("gitlens.views.compareFileWithSelected",this.compareFileWithSelected,this),K("gitlens.views.selectFileForCompare",this.selectFileForCompare,this),K("gitlens.views.compareWithWorking",this.compareWorkingWith,this),K("gitlens.views.setBranchComparisonToWorking",(e=>this.setBranchComparison(e,n.DH.Working)),this),K("gitlens.views.setBranchComparisonToBranch",(e=>this.setBranchComparison(e,n.DH.Branch)),this),K("gitlens.views.cherryPick",this.cherryPick,this,2),K("gitlens.views.title.createBranch",(()=>this.createBranch())),K("gitlens.views.createBranch",this.createBranch,this),K("gitlens.views.deleteBranch",this.deleteBranch,this),K("gitlens.views.renameBranch",this.renameBranch,this),K("gitlens.views.title.applyStash",(()=>this.applyStash())),K("gitlens.views.stash.delete",this.deleteStash,this,2),K("gitlens.views.stash.rename",this.renameStash,this),K("gitlens.views.title.createTag",(()=>this.createTag())),K("gitlens.views.createTag",this.createTag,this),K("gitlens.views.deleteTag",this.deleteTag,this),K("gitlens.views.mergeBranchInto",this.merge,this),K("gitlens.views.pushToCommit",this.pushToCommit,this),K("gitlens.views.rebaseOntoBranch",this.rebase,this),K("gitlens.views.rebaseOntoUpstream",this.rebaseToRemote,this),K("gitlens.views.rebaseOntoCommit",this.rebase,this),K("gitlens.views.resetCommit",this.resetCommit,this),K("gitlens.views.resetToCommit",this.resetToCommit,this),K("gitlens.views.resetToTip",this.resetToTip,this),K("gitlens.views.revert",this.revert,this),K("gitlens.views.undoCommit",this.undoCommit,this),K("gitlens.views.createPullRequest",this.createPullRequest,this),K("gitlens.views.openPullRequest",this.openPullRequest,this),K("gitlens.views.title.createWorktree",(()=>this.createWorktree())),K("gitlens.views.createWorktree",this.createWorktree,this),K("gitlens.views.deleteWorktree",this.deleteWorktree,this),K("gitlens.views.openWorktree",this.openWorktree,this),K("gitlens.views.revealRepositoryInExplorer",this.revealRepositoryInExplorer,this),K("gitlens.views.revealWorktreeInExplorer",this.revealWorktreeInExplorer,this),K("gitlens.views.openWorktreeInNewWindow",(e=>this.openWorktree(e,{location:P.Tc.NewWindow})),this)}addAuthors(e){return c.q((0,V.pp)(e))}addAuthor(e){return e instanceof T.K?c.q(e.repoPath,e.contributor.current?void 0:e.contributor):Promise.resolve()}addRemote(e){return h.IH((0,V.pp)(e))}applyChanges(e){return e instanceof V.RW?e instanceof M.C?l.zb(e.file,(0,w.xB)(e.ref1,e.repoPath),(0,w.xB)(e.ref2,e.repoPath)):null==e.ref||"HEAD"===e.ref.ref?Promise.resolve():l.zb(e.file,e.ref):Promise.resolve()}applyStash(){return d.nn()}browseRepoAtRevision(e,t){return e instanceof V.bT||e instanceof V.RW?(0,o.g)(e.uri,{before:t?.before,openInNewWindow:t?.openInNewWindow}):Promise.resolve()}cherryPick(e,t){return e instanceof k.D?null!=t&&0!==t.length?u.QP(e.repoPath,t.map((e=>e.ref))):u.QP(e.repoPath,e.ref):Promise.resolve()}closeRepository(e){(e instanceof W.q||e instanceof V.vb)&&(e.repo.closed=!0)}async createBranch(e){let t=e instanceof V.bT||e instanceof V.RW?e?.ref:e instanceof R.V?e.branch:void 0;if(null==t){t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)}return a.Ue(e?.repoPath,t)}async createPullRequest(e){if(!(e instanceof S.E||e instanceof R.V))return Promise.resolve();const t=await e.branch.getRemote();return(0,v.SI)("createPullRequest",{repoPath:e.repoPath,remote:null!=t?{name:t.name,provider:null!=t.provider?{id:t.provider.id,name:t.provider.name,domain:t.provider.domain}:void 0,url:t.url}:void 0,branch:{name:e.branch.name,upstream:e.branch.upstream?.name,isRemote:e.branch.remote}})}async createTag(e){let t=e instanceof V.bT||e instanceof V.RW?e?.ref:e instanceof R.V?e.branch:void 0;if(null==t){t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)}return p.Ue(e?.repoPath,t)}async createWorktree(e){if(e instanceof Q.S&&(e=void 0),null==e||e instanceof S.E)return m.Ue(e?.repoPath,void 0,e?.ref)}deleteBranch(e){return e instanceof S.E?a.Od(e.repoPath,e.branch):Promise.resolve()}deleteStash(e,t){if(!(e instanceof N.i))return Promise.resolve();if(null!=t&&0!==t.length){const e=t.sort(((e,t)=>parseInt(t.commit.number,10)-parseInt(e.commit.number,10)));return(0,A.df)(d.Cw,e.map((e=>[e.repoPath,e.commit])),this)}return d.Cw(e.repoPath,e.commit)}renameStash(e){return e instanceof N.i?d.PQ(e.repoPath,e.commit):Promise.resolve()}deleteTag(e){return e instanceof H._?p.Od(e.repoPath,e.tag):Promise.resolve()}async deleteWorktree(e){if(e instanceof q.w)return m.Od(e.repoPath,e.worktree.uri)}fetch(e){return e instanceof W.q||e instanceof V.vb?u.he(e.repo):e instanceof B.V?h.he(e.remote.repoPath,e.remote.name):e instanceof S.E||e instanceof R.V?u.he(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}async highlightChanges(e){(e instanceof D.R||e instanceof U.y||e instanceof O.m||e instanceof M.C)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(r.window.activeTextEditor,n.VP.Changes,{sha:e.ref.ref},!0))}async highlightRevisionChanges(e){(e instanceof D.R||e instanceof U.y||e instanceof O.m||e instanceof M.C)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(r.window.activeTextEditor,n.VP.Changes,{sha:e.ref.ref,only:!0},!0))}merge(e){return e instanceof S.E||e instanceof H._?u.TS(e.repoPath,e instanceof S.E?e.branch:e.tag):Promise.resolve()}openInTerminal(e){return e instanceof W.q||e instanceof V.vb?(0,v.dO)("openInTerminal",r.Uri.file(e.repo.path)):Promise.resolve()}openPullRequest(e){return e instanceof x.Z?(0,v.SI)("openPullRequest",{repoPath:e.uri.repoPath,provider:{id:e.pullRequest.provider.id,name:e.pullRequest.provider.name,domain:e.pullRequest.provider.domain},pullRequest:{id:e.pullRequest.id,url:e.pullRequest.url}}):Promise.resolve()}openWorktree(e,t){e instanceof q.w&&(0,P.ic)(e.worktree.uri,t)}pruneRemote(e){return e instanceof B.V?h.Qs(e.remote.repoPath,e.remote.name):Promise.resolve()}async removeRemote(e){return e instanceof B.V?h.Od(e.remote.repoPath,e.remote.name):Promise.resolve()}publishBranch(e){return e instanceof S.E||e instanceof R.V?u.VF(e.repoPath,void 0,e.branch):Promise.resolve()}publishRepository(e){return e instanceof S.E||e instanceof R.V?(0,v.Zv)("git.publish",r.Uri.file(e.repoPath)):Promise.resolve()}pull(e){return e instanceof W.q||e instanceof V.vb?u.X4(e.repo):e instanceof S.E||e instanceof R.V?u.X4(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}push(e,t){return e instanceof W.q||e instanceof V.vb?u.VF(e.repo,t):e instanceof S.E||e instanceof R.V?u.VF(e.repoPath,t,e.root?void 0:e.branch):e instanceof k.D||e instanceof O.m?e.isTip?u.VF(e.repoPath,t):this.pushToCommit(e):Promise.resolve()}pushToCommit(e){return e instanceof k.D||e instanceof O.m?u.VF(e.repoPath,!1,e.commit):Promise.resolve()}rebase(e){return e instanceof S.E||e instanceof k.D||e instanceof O.m||e instanceof H._?u.DW(e.repoPath,e.ref):Promise.resolve()}rebaseToRemote(e){if(!(e instanceof S.E||e instanceof R.V))return Promise.resolve();const t=e instanceof S.E?e.branch.upstream?.name:e.status.upstream;return null==t?Promise.resolve():u.DW(e.repoPath,(0,w.xB)(t,e.repoPath,{refType:"branch",name:t,remote:!0}))}renameBranch(e){return e instanceof S.E?a.PQ(e.repoPath,e.branch):Promise.resolve()}resetCommit(e){return e instanceof k.D||e instanceof O.m?u.mc(e.repoPath,(0,w.xB)(`${e.ref.ref}^`,e.ref.repoPath,{refType:"revision",name:`${e.ref.name}^`,message:e.ref.message})):Promise.resolve()}resetToCommit(e){return e instanceof k.D||e instanceof O.m?u.mc(e.repoPath,e.ref):Promise.resolve()}resetToTip(e){return e instanceof S.E?u.mc(e.repoPath,(0,w.xB)(e.ref.ref,e.repoPath,{refType:"revision",name:e.ref.name})):Promise.resolve()}restore(e){return e instanceof V.RW?l.Hl(e.file,e.ref):Promise.resolve()}revealRepositoryInExplorer(e){if(e instanceof W.q)return u.qM(e.repo)}revealWorktreeInExplorer(e){if(e instanceof q.w)return m.qM(e.worktree)}revert(e){return e instanceof k.D||e instanceof O.m?u.CU(e.repoPath,e.ref):Promise.resolve()}setAsDefault(e){return e instanceof B.V?e.setAsDefault():Promise.resolve()}setBranchComparison(e,t){if(e instanceof _._)return e.setComparisonType(t)}setShowRelativeDateMarkers(e){return y.D.updateEffective("views.showRelativeDateMarkers",e)}async stageFile(e){(e instanceof D.R||e instanceof O.m||e instanceof G.q)&&(await this.container.git.stageFile(e.repoPath,e.file.path),e.triggerChange())}async stageDirectory(e){e instanceof E.Y&&e.relativePath&&(await this.container.git.stageDirectory(e.repoPath,e.relativePath),e.triggerChange())}star(e){return e instanceof S.E||e instanceof W.q||e instanceof V.vb?e.star():Promise.resolve()}switch(e){return u.gu((0,V.pp)(e))}switchTo(e){return e instanceof V.bT?u.gu(e.repoPath,e instanceof S.E&&e.branch.current?void 0:e.ref):u.gu((0,V.pp)(e))}async undoCommit(e){if(!(e instanceof k.D||e instanceof O.m))return;const t=await this.container.git.getOrOpenScmRepository(e.repoPath),i=await(t?.getCommit("HEAD"));i?.hash===e.ref.ref?await(0,v.Zv)("git.undoCommit",e.repoPath):r.window.showWarningMessage(`Commit ${(0,w.Wh)(e.ref,{capitalize:!0,icon:!1})} cannot be undone, because it is no longer the most recent commit.`)}unsetAsDefault(e){return e instanceof B.V?e.setAsDefault(!1):Promise.resolve()}async unstageFile(e){(e instanceof D.R||e instanceof O.m||e instanceof G.q)&&(await this.container.git.unStageFile(e.repoPath,e.file.path),e.triggerChange())}async unstageDirectory(e){e instanceof E.Y&&e.relativePath&&(await this.container.git.unStageDirectory(e.repoPath,e.relativePath),e.triggerChange())}unstar(e){return e instanceof S.E||e instanceof W.q||e instanceof V.vb?e.unstar():Promise.resolve()}compareHeadWith(e){return e instanceof V.bT||e instanceof V.RW?e instanceof V.RW?this.compareFileWith(e.repoPath,e.uri,e.ref.ref,void 0,"HEAD"):this.container.searchAndCompareView.compare(e.repoPath,"HEAD",e.ref):Promise.resolve()}compareWithUpstream(e){return e instanceof S.E?null==e.branch.upstream?Promise.resolve():this.container.searchAndCompareView.compare(e.repoPath,e.ref,e.branch.upstream.name):Promise.resolve()}compareWorkingWith(e){return e instanceof V.bT||e instanceof V.RW?e instanceof V.RW?this.compareFileWith(e.repoPath,e.uri,e.ref.ref,void 0,""):this.container.searchAndCompareView.compare(e.repoPath,"",e.ref):Promise.resolve()}async compareAncestryWithWorking(e){if(!(e instanceof S.E))return;const t=await this.container.git.getBranch(e.repoPath);if(null==t)return;const i=await this.container.git.getMergeBase(e.repoPath,t.ref,e.ref.ref);return null!=i?this.container.searchAndCompareView.compare(e.repoPath,{ref:i,label:`ancestry with ${e.ref.ref} (${(0,w.zL)(i)})`},""):void 0}compareWithSelected(e){(e instanceof V.bT||e instanceof V.RW)&&this.container.searchAndCompareView.compareWithSelected(e.repoPath,e.ref)}selectForCompare(e){(e instanceof V.bT||e instanceof V.RW)&&this.container.searchAndCompareView.selectForCompare(e.repoPath,e.ref)}async compareFileWith(e,t,i,r,n){return null==r&&(r=await this.container.git.getWorkingUri(e,t)),(0,v.P0)(s.Gh.DiffWith,{repoPath:e,lhs:{sha:i,uri:t},rhs:{sha:n,uri:r??t}})}compareFileWithSelected(e){if(null==this._selectedFile||!(e instanceof V.RW)||null==e.ref)return Promise.resolve();if(this._selectedFile.repoPath!==e.repoPath)return this.selectFileForCompare(e),Promise.resolve();const t=this._selectedFile;return this._selectedFile=void 0,(0,b.v)("gitlens:views:canCompare:file",!1),this.compareFileWith(t.repoPath,t.uri,t.ref,e.uri,e.ref.ref)}_selectedFile;selectFileForCompare(e){e instanceof V.RW&&null!=e.ref&&(this._selectedFile={ref:e.ref.ref,repoPath:e.repoPath,uri:e.uri},(0,b.v)("gitlens:views:canCompare:file",!0))}async openAllChanges(e,t){if(e instanceof k.D||e instanceof N.i||e instanceof L.V){if(e instanceof L.V){const{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return l.Gp(i,{repoPath:e.repoPath,ref1:e.ref1,ref2:e.ref2},t)}return l.Gp(e.commit,t)}}openChanges(e){if(!(e instanceof V.RW||e instanceof I.E||e instanceof G.q))return;if(e instanceof I.E)return void(0,v.P0)(s.Gh.DiffWith,{lhs:{sha:e.status.HEAD.ref,uri:g.YY.fromFile(e.file,e.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:g.YY.fromFile(e.file,e.repoPath)},repoPath:e.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}});const t=e.getCommand();if(null!=t?.arguments)switch(t.command){case s.Gh.DiffWith:{const[e]=t.arguments;e.showOptions.preview=!1,(0,v.P0)(t.command,e);break}case s.Gh.DiffWithPrevious:{const[,e]=t.arguments;e.showOptions.preview=!1,(0,v.b2)(t.command,void 0,e);break}default:throw new Error(`Unexpected command: ${t.command}`)}}async openAllChangesWithWorking(e,t){if(e instanceof k.D||e instanceof N.i||e instanceof L.V){if(e instanceof L.V){const{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return l.Ou(i,{repoPath:e.repoPath,ref:e.ref1||e.ref2},t)}return l.Ou(e.commit,t)}}async openChangesWithWorking(e){if(!(e instanceof V.RW||e instanceof I.E||e instanceof G.q))return Promise.resolve();if(e instanceof G.q)return(0,v.b2)(s.Gh.DiffWithWorking,void 0,{uri:e.uri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof I.E)return(0,v.b2)(s.Gh.DiffWithWorking,void 0,{uri:e.baseUri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof O.m&&e.commit.file?.hasConflicts){const t=await e.getConflictBaseUri();if(null!=t)return(0,v.b2)(s.Gh.DiffWithWorking,void 0,{uri:t,showOptions:{preserveFocus:!0,preview:!0}})}return l.ce(e.file,{repoPath:e.repoPath,ref:e.ref.ref})}async openPreviousChangesWithWorking(e){return e instanceof V.RW?l.ce(e.file,{repoPath:e.repoPath,ref:`${e.ref.ref}^`}):Promise.resolve()}openFile(e,t){return e instanceof V.RW||e instanceof I.E||e instanceof G.q||e instanceof F.J||e instanceof $.q?l.ZB(e.uri,{preserveFocus:!0,preview:!1,...t}):Promise.resolve()}async openFiles(e){if(e instanceof k.D||e instanceof N.i||e instanceof L.V){if(e instanceof L.V){const{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return l.aE(t,e.repoPath,e.ref1||e.ref2)}return l.aE(e.commit)}}async openRevision(e,t){if(!(e instanceof D.R||e instanceof O.m||e instanceof M.C||e instanceof U.y||e instanceof I.E||e instanceof G.q))return Promise.resolve();let i=(t={showOptions:{preserveFocus:!0,preview:!1},...t}).revisionUri;return null==i&&(i=e instanceof M.C||e instanceof I.E?this.container.git.getRevisionUri(e.uri):"D"===e.commit.file?.status?this.container.git.getRevisionUri(await e.commit.getPreviousSha()??f.Ii,e.commit.file.path,e.commit.repoPath):this.container.git.getRevisionUri(e.uri)),l.YS(i,t.showOptions??{preserveFocus:!0,preview:!1})}async openRevisions(e,t){if(e instanceof k.D||e instanceof N.i||e instanceof L.V){if(e instanceof L.V){const{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return l.Dh(t,e.repoPath,e.ref1,e.ref2)}return l.Dh(e.commit)}}}z([(0,C.fF)()],ViewCommands.prototype,"addAuthors",1),z([(0,C.fF)()],ViewCommands.prototype,"addAuthor",1),z([(0,C.fF)()],ViewCommands.prototype,"addRemote",1),z([(0,C.fF)()],ViewCommands.prototype,"applyChanges",1),z([(0,C.fF)()],ViewCommands.prototype,"applyStash",1),z([(0,C.fF)()],ViewCommands.prototype,"browseRepoAtRevision",1),z([(0,C.fF)()],ViewCommands.prototype,"cherryPick",1),z([(0,C.fF)()],ViewCommands.prototype,"closeRepository",1),z([(0,C.fF)()],ViewCommands.prototype,"createBranch",1),z([(0,C.fF)()],ViewCommands.prototype,"createPullRequest",1),z([(0,C.fF)()],ViewCommands.prototype,"createTag",1),z([(0,C.fF)()],ViewCommands.prototype,"createWorktree",1),z([(0,C.fF)()],ViewCommands.prototype,"deleteBranch",1),z([(0,C.fF)()],ViewCommands.prototype,"deleteStash",1),z([(0,C.fF)()],ViewCommands.prototype,"renameStash",1),z([(0,C.fF)()],ViewCommands.prototype,"deleteTag",1),z([(0,C.fF)()],ViewCommands.prototype,"deleteWorktree",1),z([(0,C.fF)()],ViewCommands.prototype,"fetch",1),z([(0,C.fF)()],ViewCommands.prototype,"highlightChanges",1),z([(0,C.fF)()],ViewCommands.prototype,"highlightRevisionChanges",1),z([(0,C.fF)()],ViewCommands.prototype,"merge",1),z([(0,C.fF)()],ViewCommands.prototype,"openInTerminal",1),z([(0,C.fF)()],ViewCommands.prototype,"openPullRequest",1),z([(0,C.fF)()],ViewCommands.prototype,"openWorktree",1),z([(0,C.fF)()],ViewCommands.prototype,"pruneRemote",1),z([(0,C.fF)()],ViewCommands.prototype,"removeRemote",1),z([(0,C.fF)()],ViewCommands.prototype,"publishBranch",1),z([(0,C.fF)()],ViewCommands.prototype,"publishRepository",1),z([(0,C.fF)()],ViewCommands.prototype,"pull",1),z([(0,C.fF)()],ViewCommands.prototype,"push",1),z([(0,C.fF)()],ViewCommands.prototype,"pushToCommit",1),z([(0,C.fF)()],ViewCommands.prototype,"rebase",1),z([(0,C.fF)()],ViewCommands.prototype,"rebaseToRemote",1),z([(0,C.fF)()],ViewCommands.prototype,"renameBranch",1),z([(0,C.fF)()],ViewCommands.prototype,"resetCommit",1),z([(0,C.fF)()],ViewCommands.prototype,"resetToCommit",1),z([(0,C.fF)()],ViewCommands.prototype,"resetToTip",1),z([(0,C.fF)()],ViewCommands.prototype,"restore",1),z([(0,C.fF)()],ViewCommands.prototype,"revealRepositoryInExplorer",1),z([(0,C.fF)()],ViewCommands.prototype,"revealWorktreeInExplorer",1),z([(0,C.fF)()],ViewCommands.prototype,"revert",1),z([(0,C.fF)()],ViewCommands.prototype,"setAsDefault",1),z([(0,C.fF)()],ViewCommands.prototype,"setBranchComparison",1),z([(0,C.fF)()],ViewCommands.prototype,"setShowRelativeDateMarkers",1),z([(0,C.fF)()],ViewCommands.prototype,"stageFile",1),z([(0,C.fF)()],ViewCommands.prototype,"stageDirectory",1),z([(0,C.fF)()],ViewCommands.prototype,"star",1),z([(0,C.fF)()],ViewCommands.prototype,"switch",1),z([(0,C.fF)()],ViewCommands.prototype,"switchTo",1),z([(0,C.fF)()],ViewCommands.prototype,"undoCommit",1),z([(0,C.fF)()],ViewCommands.prototype,"unsetAsDefault",1),z([(0,C.fF)()],ViewCommands.prototype,"unstageFile",1),z([(0,C.fF)()],ViewCommands.prototype,"unstageDirectory",1),z([(0,C.fF)()],ViewCommands.prototype,"unstar",1),z([(0,C.fF)()],ViewCommands.prototype,"compareHeadWith",1),z([(0,C.fF)()],ViewCommands.prototype,"compareWithUpstream",1),z([(0,C.fF)()],ViewCommands.prototype,"compareWorkingWith",1),z([(0,C.fF)()],ViewCommands.prototype,"compareAncestryWithWorking",1),z([(0,C.fF)()],ViewCommands.prototype,"compareWithSelected",1),z([(0,C.fF)()],ViewCommands.prototype,"selectForCompare",1),z([(0,C.fF)()],ViewCommands.prototype,"compareFileWithSelected",1),z([(0,C.fF)()],ViewCommands.prototype,"selectFileForCompare",1),z([(0,C.fF)()],ViewCommands.prototype,"openAllChanges",1),z([(0,C.fF)()],ViewCommands.prototype,"openChanges",1),z([(0,C.fF)()],ViewCommands.prototype,"openAllChangesWithWorking",1),z([(0,C.fF)()],ViewCommands.prototype,"openChangesWithWorking",1),z([(0,C.fF)()],ViewCommands.prototype,"openPreviousChangesWithWorking",1),z([(0,C.fF)()],ViewCommands.prototype,"openFile",1),z([(0,C.fF)()],ViewCommands.prototype,"openFiles",1),z([(0,C.fF)()],ViewCommands.prototype,"openRevision",1),z([(0,C.fF)()],ViewCommands.prototype,"openRevisions",1)},7933:(e,t,i)=>{i.d(t,{m9:()=>WorktreesView});var r=i(9496),n=i(2540),s=i(5255),o=i(8887),a=i(7462),l=i(3646),c=i(2215),h=i(9529),u=i(5148),d=i(5432),p=i(6922),m=i(6418),g=i(8562),f=i(5517),w=i(5688),v=Object.defineProperty,y=Object.getOwnPropertyDescriptor,b=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?y(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&v(t,i,s),s};class WorktreesRepositoryNode extends p.vb{getChildren(){return null==this.child&&(this.child=new g.S(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(l.I6.Config,l.I6.Worktrees,l.I6.Unknown,l.du.Any)}}class WorktreesViewNode extends p.FZ{async getChildren(){if(!1===(await this.view.container.git.access(o.x.Worktrees)).allowed)return[];if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No worktrees could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new WorktreesRepositoryNode(a.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.getChildren();return t.length<=1?(this.view.message=void 0,this.view.title="Worktrees",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Worktrees (${t.length})`,t)}return this.view.title="Worktrees",this.children}getTreeItem(){return new r.TreeItem("Worktrees",r.TreeItemCollapsibleState.Expanded)}}class WorktreesView extends f._{configKey="worktrees";constructor(e){super(e,"worktrees","Worktrees","workspaceView"),this.disposables.push(r.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"!==e.scheme||"worktree"!==e.authority)return;const[,i]=e.path.split("/");switch(i){case"changes":return{badge:"●",color:new r.ThemeColor("gitlens.decorations.worktreeHasUncommittedChangesForegroundColor"),tooltip:"Has Uncommitted Changes"};case"missing":return{badge:s.NE.Warning,color:new r.ThemeColor("gitlens.decorations.worktreeMissingForegroundColor"),tooltip:""};default:return}}})),this.description="✨"}get canReveal(){return this.config.reveal||!u.D.get("views.repositories.showWorktrees")}async show(e){if(await(0,c.C)())return super.show(e)}getRoot(){return new WorktreesViewNode(this)}registerCommands(){return this.container.viewCommands,[(0,w.i)(this.getQualifiedCommand("copy"),(()=>(0,h.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),(0,w.i)(this.getQualifiedCommand("refresh"),(async()=>this.refresh(!0)),this),(0,w.i)(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(n.Vc.Auto)),this),(0,w.i)(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(n.Vc.List)),this),(0,w.i)(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(n.Vc.Tree)),this),(0,w.i)(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),(0,w.i)(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),(0,w.i)(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),(0,w.i)(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),(0,w.i)(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),(0,w.i)(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||u.D.changed(e,"defaultDateFormat")||u.D.changed(e,"defaultDateLocale")||u.D.changed(e,"defaultDateShortFormat")||u.D.changed(e,"defaultDateSource")||u.D.changed(e,"defaultDateStyle")||u.D.changed(e,"defaultGravatarsStyle")||u.D.changed(e,"defaultTimeFormat"))}findWorktree(e,t){const{repoPath:i,uri:r}=e,n=r.toString();return this.findNode((t=>t instanceof m.w&&e.uri.toString()===n),{maxDepth:2,canTraverse:e=>e instanceof WorktreesViewNode||e instanceof WorktreesRepositoryNode&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof p.vb&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof WorktreesViewNode||e instanceof p.vb});return void 0!==i&&await this.reveal(i,t),i}revealWorktree(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const n=await this.findWorktree(e,r);if(null!=n)return await this.ensureRevealNode(n,t),n}))}setFilesLayout(e){return u.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return u.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return u.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&n.DH.Branch)}async setShowBranchPullRequest(e){await u.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await u.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}b([(0,d.H)((()=>""))],WorktreesView.prototype,"revealRepository",1),b([(0,d.H)((()=>""))],WorktreesView.prototype,"revealWorktree",1)},9206:(e,t,i)=>{i.d(t,{CommitDetailsWebviewProvider:()=>CommitDetailsWebviewProvider});var r=i(9496),n=i(3139),s=i(5255),o=i(9311),a=i(6897),l=i(9338),c=i(6450),h=i(7881),u=i(8452),d=i(4092),p=i(4321),m=i(9529),g=i(5148),f=i(2061),w=i(4241),v=i(9796),y=i(3105),b=i(4336),C=i(6004);class MRU{constructor(e=10,t){this.maxSize=e,this.comparator=t}stack=[];get count(){return this.stack.length}_position=0;get position(){return this._position}add(e){this._position>0&&(this.stack.splice(0,this._position),this._position=0);const t=null!=this.comparator?this.stack.findIndex((t=>this.comparator(e,t))):this.stack.indexOf(e);-1!==t?this.stack.splice(t,1):this.stack.length===this.maxSize&&this.stack.pop(),this.stack.unshift(e),this._position=0}get(e){if(null!=e){if(e<0||e>=this.stack.length)return;return this.stack[e]}return this.stack.length>0?this.stack[0]:void 0}insert(e){this._position>0&&(this.stack.splice(0,this._position),this._position=0),this.stack.unshift(e),this._position++}navigate(e){if(!(this.stack.length<=1)){if("back"===e){if(this._position>=this.stack.length-1)return;this._position+=1}else{if(this._position<=0)return;this._position-=1}return this.stack[this._position]}}}var A=i(7469);var P=i(5798),S=i(6260),R=i(620);const D=new P.ke("commit/actions"),k=new P.ke("commit/file/actions"),_=new P.ke("commit/file/open"),T=new P.ke("commit/file/openOnRemote"),F=new P.ke("commit/file/compareWorking"),O=new P.ke("commit/file/comparePrevious"),E=new P.ke("commit/pickCommit"),$=new P.ke("commit/searchCommit"),I=new P.ke("commit/autolinkSettings"),x=new P.ke("commit/explain"),B=new P.ke("commit/pin"),W=new P.ke("commit/navigate"),M=new P.ke("commit/preferences"),L=new P.jH("commit/didChange",!0),U=(new P.jH("commit/didChange/rich"),new P.jH("commit/didExplain"));var N=Object.defineProperty,G=Object.getOwnPropertyDescriptor,H=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?G(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&N(t,i,s),s};class CommitDetailsWebviewProvider{constructor(e,t,i){this.container=e,this.host=t,this.options=i,this._context={pinned:!1,commit:void 0,preferences:{autolinksExpanded:this.container.storage.getWorkspace("views:commitDetails:autolinksExpanded"),avatars:g.D.get("views.commitDetails.avatars"),files:g.D.get("views.commitDetails.files")},richStateLoaded:!1,formattedMessage:void 0,autolinkedIssues:void 0,pullRequest:void 0,dateFormat:g.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",indentGuides:g.D.getAny("workbench.tree.renderIndentGuides")??"onHover",navigationStack:{count:0,position:0},visible:!1},this._disposable=g.D.onDidChangeAny(this.onAnyConfigurationChanged,this)}_bootstraping=!0;_context;_pendingContext;_disposable;_pinned=!1;_focused=!1;_commitStack=new MRU(10,((e,t)=>e.ref===t.ref));dispose(){this._disposable.dispose()}onReloaded(){this.notifyDidChangeState(!0)}async onShowing(e,t,...i){let r;const[n]=i;if((0,R.W)(n)){const{selected:e}=n.state;null!=e?.repoPath&&null!=e?.sha&&(r=null!=e.stashNumber?{commit:(0,p.xB)(e.sha,e.repoPath,{refType:"stash",name:e.message,number:e.stashNumber})}:{commit:(0,p.xB)(e.sha,e.repoPath,{refType:"revision",message:e.message})})}else r=null!=n&&"object"==typeof n?n:void 0;let s;return null!=r&&(r.preserveFocus&&(t.preserveFocus=!0),({commit:s,...r}=r)),null==s&&(this._pinned||(s=this.getBestCommitOrStash())),null==s||this._context.commit?.ref.startsWith(s.ref)||await this.updateCommit(s,{pinned:!1}),!(r?.preserveVisibility&&!this.host.visible)}includeBootstrap(){return this._bootstraping=!0,this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.getState(this._context)}registerCommands(){return[(0,m.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)))]}onCommitSelected(e){null==e.data||"graph"===this.options.mode&&"gitlens.views.graph"!==e.source||"default"===this.options.mode&&"gitlens.views.graph"===e.source||(this._pinned&&"passive"===e.data.interaction?(this._commitStack.insert((0,p.qj)(e.data.commit)),this.updateNavigation()):this.host.show(!1,{preserveFocus:e.data.preserveFocus},e.data))}onFocusChanged(e){this._focused!==e&&(this._focused=e,e&&this.isLineTrackerSuspended&&this.ensureTrackers())}onVisibilityChanged(e){this.ensureTrackers(),this.updatePendingContext({visible:e}),e&&(this._bootstraping&&(this._bootstraping=!1,null==this._pendingContext)||(this.onRefresh(),this.updateState(!0)))}onAnyConfigurationChanged(e){g.D.changed(e,"defaultDateFormat")&&(this.updatePendingContext({dateFormat:g.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma"}),this.updateState()),g.D.changed(e,"views.commitDetails")&&((g.D.changed(e,"views.commitDetails.files")||g.D.changed(e,"views.commitDetails.avatars"))&&this.updatePendingContext({preferences:{...this._context.preferences,...this._pendingContext?.preferences,avatars:g.D.get("views.commitDetails.avatars"),files:g.D.get("views.commitDetails.files")}}),null!=this._context.commit&&(g.D.changed(e,"views.commitDetails.autolinks")||g.D.changed(e,"views.commitDetails.pullRequests"))&&this.updateCommit(this._context.commit,{force:!0}),this.updateState()),g.D.changedAny(e,"workbench.tree.renderIndentGuides")&&(this.updatePendingContext({indentGuides:g.D.getAny("workbench.tree.renderIndentGuides")??"onHover"}),this.updateState())}_commitTrackerDisposable;_lineTrackerDisposable;ensureTrackers(){if(this._commitTrackerDisposable?.dispose(),this._commitTrackerDisposable=void 0,this._lineTrackerDisposable?.dispose(),this._lineTrackerDisposable=void 0,this.host.visible&&(this._commitTrackerDisposable=this.container.events.on("commit:selected",this.onCommitSelected,this),!this._pinned&&"graph"!==this.options.mode)){const{lineTracker:e}=this.container;this._lineTrackerDisposable=e.subscribe(this,e.onDidChangeActiveLines(this.onActiveEditorLinesChanged,this))}}get isLineTrackerSuspended(){return"graph"!==this.options.mode&&null==this._lineTrackerDisposable}suspendLineTracker(){setTimeout((()=>{this._lineTrackerDisposable?.dispose(),this._lineTrackerDisposable=void 0}),100)}onRefresh(e){if(this._pinned)return;const t=this._pendingContext?.commit??this.getBestCommitOrStash();this.updateCommit(t,{immediate:!1})}onMessageReceived(e){switch(e.method){case T.method:(0,P.mq)(T,e,(e=>{this.openFileOnRemote(e)}));break;case _.method:(0,P.mq)(_,e,(e=>{this.openFile(e)}));break;case F.method:(0,P.mq)(F,e,(e=>{this.openFileComparisonWithWorking(e)}));break;case O.method:(0,P.mq)(O,e,(e=>{this.openFileComparisonWithPrevious(e)}));break;case k.method:(0,P.mq)(k,e,(e=>{this.showFileActions(e)}));break;case D.method:(0,P.mq)(D,e,(e=>{switch(e.action){case"graph":if(null==this._context.commit)return;(0,m.P0)("graph"===this.options.mode?s.Gh.ShowInCommitGraphView:s.Gh.ShowInCommitGraph,{ref:(0,p.qj)(this._context.commit)});break;case"more":this.showCommitActions();break;case"scm":(0,m.dO)("workbench.view.scm");break;case"sha":e.alt?this.showCommitPicker():null!=this._context.commit&&(0,m.P0)(s.Gh.CopyShaToClipboard,{sha:this._context.commit.sha})}}));break;case E.method:(0,P.mq)(E,e,(e=>this.showCommitPicker()));break;case $.method:(0,P.mq)($,e,(e=>this.showCommitSearch()));break;case I.method:(0,P.mq)(I,e,(e=>this.showAutolinkSettings()));break;case B.method:(0,P.mq)(B,e,(e=>this.updatePinned(e.pin??!1,!0)));break;case W.method:(0,P.mq)(W,e,(e=>this.navigateStack(e.direction)));break;case M.method:(0,P.mq)(M,e,(e=>this.updatePreferences(e)));break;case x.method:(0,P.mq)(x,e,(()=>this.explainCommit(e.completionId)))}}async explainCommit(e){let t;try{t={summary:await this.container.ai.explainCommit(this._context.commit,{progress:{location:{viewId:this.host.id}}})}}catch(e){t={error:{message:e.message}}}this.host.notify(U,t,e)}navigateStack(e){const t=this._commitStack.navigate(e);null!=t&&this.updateCommit(t,{immediate:!0,skipStack:!0})}onActiveEditorLinesChanged(e){if(e.pending||null==e.editor)return;const t=e.selections?.[0]?.active,i=null!=t?this.container.lineTracker.getState(t)?.commit:void 0;this.updateCommit(i)}_cancellationTokenSource=void 0;async getState(e){let t;if(null!=this._cancellationTokenSource&&(this._cancellationTokenSource.cancel(),this._cancellationTokenSource.dispose(),this._cancellationTokenSource=void 0),null!=e.commit&&(t=await this.getDetailsModel(e.commit,e.formattedMessage),!e.richStateLoaded)){this._cancellationTokenSource=new r.CancellationTokenSource;const t=this._cancellationTokenSource.token;setTimeout((()=>{t.isCancellationRequested||this.updateRichState(e,t)}),100)}return function(e){try{let t=function(e,t){if(t instanceof Date)return t.getTime();if(t instanceof Map||t instanceof Set)return[...t.entries()];if(t instanceof Function||t instanceof Error)return;if(t instanceof RegExp)return t.toString();const i=this[e];return i instanceof Date?i.getTime():t};return JSON.parse(JSON.stringify(e,t))}catch(e){throw e}}({webviewId:this.host.id,timestamp:Date.now(),pinned:e.pinned,includeRichContent:e.richStateLoaded,preferences:e.preferences,selected:t,autolinkedIssues:e.autolinkedIssues?.map(u.Gj),pullRequest:null!=e.pullRequest?(0,d.l1)(e.pullRequest):void 0,dateFormat:e.dateFormat,indentGuides:e.indentGuides,navigationStack:e.navigationStack})}async updateRichState(e,t){const{commit:i}=e;if(null==i)return;const r=await this.container.git.getBestRemoteWithRichProvider(i.repoPath);if(t.isCancellationRequested)return;let n,s;if(null!=r?.provider){const[e,o]=await Promise.allSettled([g.D.get("views.commitDetails.autolinks.enabled")&&g.D.get("views.commitDetails.autolinks.enhanced")?this.container.autolinks.getLinkedIssuesAndPullRequests(i.message??i.summary,r):void 0,g.D.get("views.commitDetails.pullRequests.enabled")?i.getAssociatedPullRequest({remote:r}):void 0]);if(t.isCancellationRequested)return;n=(0,A.Sb)(e),s=(0,A.Sb)(o)}const o=this.getFormattedMessage(i,r,n);null!=s&&n?.delete(s.id),this.updatePendingContext({richStateLoaded:!0,formattedMessage:o,autolinkedIssues:null!=n?[...n.values()]:void 0,pullRequest:s}),this.updateState()}_commitDisposable;async updateCommit(e,t){if(!t?.force&&this._context.commit?.sha===e?.ref)return;let i;if(this._commitDisposable?.dispose(),(0,c.f_)(e))i=e;else if(null!=e)if("stash"===e.refType){const t=await this.container.git.getStash(e.repoPath);i=t?.commits.get(e.ref)}else i=await this.container.git.getCommit(e.repoPath,e.ref);if(i?.isUncommitted){const e=this.container.git.getRepository(i.repoPath);this._commitDisposable=r.Disposable.from(e.startWatchingFileSystem(),e.onDidChangeFileSystem((()=>{this.updatePendingContext({commit:i},!0),this.updateState()})))}this.updatePendingContext({commit:i,richStateLoaded:Boolean(i?.isUncommitted)||!(0,f.fw)("gitlens:hasConnectedRemotes"),formattedMessage:void 0,autolinkedIssues:void 0,pullRequest:void 0},t?.force),null!=t?.pinned&&this.updatePinned(t?.pinned),this.isLineTrackerSuspended&&this.ensureTrackers(),null!=i&&(t?.skipStack||this._commitStack.add((0,p.qj)(i)),this.updateNavigation()),this.updateState(t?.immediate??!0)}updatePinned(e,t){e!==this._context.pinned&&(this._pinned=e,this.ensureTrackers(),this.updatePendingContext({pinned:e}),this.updateState(t))}updatePreferences(e){if(this._context.preferences?.autolinksExpanded===e.autolinksExpanded&&this._context.preferences?.avatars===e.avatars&&this._context.preferences?.files===e.files&&this._context.preferences?.files?.compact===e.files?.compact&&this._context.preferences?.files?.icon===e.files?.icon&&this._context.preferences?.files?.layout===e.files?.layout&&this._context.preferences?.files?.threshold===e.files?.threshold)return;const t={...this._context.preferences,...this._pendingContext?.preferences};null!=e.autolinksExpanded&&this._context.preferences?.autolinksExpanded!==e.autolinksExpanded&&(this.container.storage.storeWorkspace("views:commitDetails:autolinksExpanded",e.autolinksExpanded),t.autolinksExpanded=e.autolinksExpanded),null!=e.avatars&&this._context.preferences?.avatars!==e.avatars&&(g.D.updateEffective("views.commitDetails.avatars",e.avatars),t.avatars=e.avatars),null!=e.files&&this._context.preferences?.files!==e.files&&(this._context.preferences?.files?.compact!==e.files?.compact&&g.D.updateEffective("views.commitDetails.files.compact",e.files?.compact),this._context.preferences?.files?.icon!==e.files?.icon&&g.D.updateEffective("views.commitDetails.files.icon",e.files?.icon),this._context.preferences?.files?.layout!==e.files?.layout&&g.D.updateEffective("views.commitDetails.files.layout",e.files?.layout),this._context.preferences?.files?.threshold!==e.files?.threshold&&g.D.updateEffective("views.commitDetails.files.threshold",e.files?.threshold),t.files=e.files),this.updatePendingContext({preferences:t})}updatePendingContext(e,t=!1){const[i,r]=(0,S.OY)(this._context,this._pendingContext,e,t);return i&&(this._pendingContext=r),i}_notifyDidChangeStateDebounced=void 0;updateState(e=!1){e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,v.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced())}updateNavigation(){let e=this._commitStack.get(this._commitStack.position-1)?.ref;null!=e&&(e=(0,p.zL)(e)),this.updatePendingContext({navigationStack:{count:this._commitStack.count,position:this._commitStack.position,hint:e}}),this.updateState()}async notifyDidChangeState(e=!1){const t=(0,C.UH)();if(this._notifyDidChangeStateDebounced?.cancel(),!e&&null==this._pendingContext)return!1;let i;return null!=this._pendingContext?(i={...this._context,...this._pendingContext},this._context=i,this._pendingContext=void 0):i=this._context,r.window.withProgress({location:{viewId:this.host.id}},(async()=>{try{await this.host.notify(L,{state:await this.getState(i)})}catch(e){b.Yd.error(t,e)}}))}getBestCommitOrStash(){if(this._pinned)return;let e;if("graph"!==this.options.mode&&null!=r.window.activeTextEditor){const{lineTracker:t}=this.container,i=t.selections?.[0].active;null!=i&&(e=t.getState(i)?.commit)}else if(e=this._pendingContext?.commit,null==e){const t=this.container.events.getCachedEventArgs("commit:selected");e=t?.commit}return e}async getDetailsModel(e,t){const[i,s,o]=await Promise.allSettled([e.hasFullDetails()?e:e.ensureFullDetails().then((()=>e)),e.author.getAvatarUri(e,{size:32}),this.container.git.getBestRemoteWithRichProvider(e.repoPath,{includeDisconnected:!0})]);e=(0,A.Sb)(i,e);const a=(0,A.Sb)(s),l=(0,A.Sb)(o);let c;if(null==t&&(t=this.getFormattedMessage(e,l)),null!=e.message){const t=this.container.autolinks.getAutolinks(e.message);if(null!=l){const i=this.container.autolinks.getAutolinks(e.message,l);c=new Map((0,y.G0)(i,t))}else c=t}return{repoPath:e.repoPath,sha:e.sha,shortSha:e.shortSha,author:{...e.author,avatar:a?.toString(!0)},message:t,stashNumber:"stash"===e.refType?e.number:void 0,files:e.files?.map((({status:e,repoPath:t,path:i,originalPath:n})=>{const s=(0,h.tK)(e);return{path:i,originalPath:n,status:e,repoPath:t,icon:{dark:this.host.asWebviewUri(r.Uri.joinPath(this.host.getRootUri(),"images","dark",s)).toString(),light:this.host.asWebviewUri(r.Uri.joinPath(this.host.getRootUri(),"images","light",s)).toString()}}})),stats:e.stats,autolinks:null!=c?[...(0,y.UI)(c.values(),n.G)]:void 0}}getFormattedMessage(e,t,i){let r=l.i.fromTemplate("${message}",e);const n=r.indexOf("\n");return-1!==n&&(r=`${r.substring(0,n)}\0\n\0${r.substring(n+1)}`),g.D.get("views.commitDetails.autolinks.enabled")?this.container.autolinks.linkify(r,"html",null!=t?[t]:void 0,i):r}async getFileCommitFromParams(e){const t=await(this._context.commit?.getCommitForFile(e.path));return null!=t?[t,t.file]:void 0}showAutolinkSettings(){(0,m.P0)(s.Gh.ShowSettingsPageAndJumpToAutolinks)}showCommitSearch(){(0,o.m)({command:"search",state:{openPickInView:!0}})}showCommitPicker(){(0,o.m)({command:"log",state:{reference:"HEAD",repo:this._context.commit?.repoPath,openPickInView:!0}})}showCommitActions(){null==this._context.commit||this._context.commit.isUncommitted||(0,a.$J)(this._context.commit)}async showFileActions(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.$J)(i,r)}async openFileComparisonWithWorking(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.ce)(r,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)})}async openFileComparisonWithPrevious(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.vw)(r,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)}),this.container.events.fire("file:selected",{uri:r.uri},{source:this.host.id})}async openFile(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.ZB)(r,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)})}async openFileOnRemote(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;(0,a.YM)(r,i)}getShowOptions(e){return e.showOptions}}H([(0,w.fF)({args:!1})],CommitDetailsWebviewProvider.prototype,"getState",1),H([(0,w.fF)({args:!1})],CommitDetailsWebviewProvider.prototype,"updateRichState",1)},2384:(e,t,i)=>{i.d(t,{HomeWebviewProvider:()=>HomeWebviewProvider});var r=i(9496),n=i(9529);const s=new(i(5798).jH)("repositories/didChange"),o=Object.freeze({dispose:()=>{}});class HomeWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),r.workspace.isTrusted?o:r.workspace.onDidGrantWorkspaceTrust(this.notifyDidChangeRepositories,this))}_disposable;dispose(){this._disposable.dispose()}onRepositoriesChanged(){this.notifyDidChangeRepositories()}registerCommands(){return[(0,n.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)),this)]}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChangeRepositories()}getState(){return{webviewId:this.host.id,timestamp:Date.now(),repositories:this.getRepositoriesState(),webroot:this.host.getWebRoot()}}getRepositoriesState(){return{count:this.container.git.repositoryCount,openCount:this.container.git.openRepositoryCount,hasUnsafe:this.container.git.hasUnsafeRepositories(),trusted:r.workspace.isTrusted}}notifyDidChangeRepositories(){this.host.notify(s,this.getRepositoriesState())}}},5798:(e,t,i)=>{i.d(t,{M5:()=>n,Mb:()=>a,NM:()=>p,TB:()=>m,W2:()=>s,bo:()=>h,dp:()=>o,eP:()=>u,jH:()=>IpcNotificationType,ke:()=>IpcCommandType,mq:()=>r,n:()=>c,qi:()=>l});class IpcMessageType{constructor(e,t=!1){this.method=e,this.reset=t}_}class IpcCommandType extends IpcMessageType{}class IpcNotificationType extends IpcMessageType{}function r(e,t,i){e.method===t.method&&i(t.params,e)}const n=new IpcCommandType("webview/ready"),s=new IpcCommandType("webview/focus"),o=new IpcCommandType("command/execute"),a=new IpcCommandType("configuration/preview"),l=new IpcCommandType("configuration/update"),c=new IpcNotificationType("configuration/didChange"),h=new IpcNotificationType("configuration/didPreview"),u=new IpcNotificationType("webview/didOpenAnchor"),d=["rebaseEditor.enabled","currentLine.useUncommittedChangesFormat"];function p(e){return d.includes(e)}function m(e,t){}},5596:(e,t,i)=>{i.d(t,{SettingsWebviewProvider:()=>SettingsWebviewProvider});var r=i(9496),n=i(5255),s=i(9338),o=i(6450),a=i(7881),l=i(4092),c=i(5148),h=i(3105),u=i(4336),d=i(5798);class SettingsWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=c.D.onDidChangeAny(this.onAnyConfigurationChanged,this)}_disposable;_pendingJumpToAnchor;dispose(){this._disposable.dispose()}includeBootstrap(){const e=[["user","User"]];return r.workspace.workspaceFolders?.length&&e.push(["workspace","Workspace"]),{webviewId:this.host.id,timestamp:Date.now(),version:this.container.version,config:c.D.getAll(!0),customSettings:this.getCustomSettings(),scope:"user",scopes:e}}onReloaded(){this.notifyDidChangeConfiguration()}onShowing(e,t,...i){const r=i[0];if(r&&"string"==typeof r){if(!e&&this.host.ready&&this.host.visible)return queueMicrotask((()=>{this.host.notify(d.eP,{anchor:r,scrollBehavior:"smooth"})})),!0;this._pendingJumpToAnchor=r}return!0}onActiveChanged(e){e&&this.notifyDidChangeConfiguration()}onReady(){if(null!=this._pendingJumpToAnchor){const e=this._pendingJumpToAnchor;this._pendingJumpToAnchor=void 0,this.host.notify(d.eP,{anchor:e,scrollBehavior:"auto"})}}onMessageReceived(e){if(null!=e)switch(e.method){case d.qi.method:u.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,d.mq)(d.qi,e,(async e=>{const t="workspace"===e.scope?r.ConfigurationTarget.Workspace:r.ConfigurationTarget.Global;let i;for(i in e.changes){let r=e.changes[i];if((0,d.NM)(i)){const e=this.customSettings.get(i);null!=e&&"boolean"==typeof r&&await e.update(r);continue}(0,d.TB)(i,r);const n=c.D.inspect(i);if(null!=r)if("workspace"===e.scope){if(r===n.workspaceValue)continue}else{if(r===n.globalValue&&r!==n.defaultValue)continue;r===n.defaultValue&&(r=void 0)}await c.D.update(i,r,t)}for(const i of e.removes)await c.D.update(i,void 0,t)}));break;case d.Mb.method:u.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,d.mq)(d.Mb,e,(async t=>{switch(t.type){case"commit":case"commit-uncommitted":{const i=new o.aM(this.container,"~/code/eamodio/vscode-gitlens-demo","fe26af408293cba5b4bfd77306e1ac9ff7ccaef8",new o._j("You","eamodio@gmail.com",new Date("2016-11-12T20:41:00.000Z")),new o._j("You","eamodio@gmail.com",new Date("2020-11-01T06:57:21.000Z")),"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",["3ac1d3f51d7cf5f438cc69f25f6740536ad80fef"],"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",new a.K8("~/code/eamodio/vscode-gitlens-demo","code.ts",a.NV.Modified),void 0,[]);let r,n,h=!1;switch(t.key){case c.D.name("currentLine.format"):h=c.D.get("currentLine.pullRequests.enabled");break;case c.D.name("statusBar.format"):h=c.D.get("statusBar.pullRequests.enabled")}h&&(r=new l.i7({id:"github",name:"GitHub",domain:"github.com",icon:"github"},{name:"Eric Amodio",avatarUrl:"https://avatars1.githubusercontent.com/u/641685?s=32&v=4",url:"https://github.com/eamodio"},"1","Supercharged","https://github.com/gitkraken/vscode-gitlens/pulls/1",l.o0.Merged,new Date("Sat, 12 Nov 2016 19:41:00 GMT"),void 0,new Date("Sat, 12 Nov 2016 20:41:00 GMT")));try{n=s.i.fromTemplate(t.format,i,{dateFormat:c.D.get("defaultDateFormat"),pullRequestOrRemote:r,messageTruncateAtNewLine:!0})}catch{n="Invalid format"}await this.host.notify(d.bo,{preview:n},e.completionId)}}}))}}onAnyConfigurationChanged(e){if(!c.D.changedAny(e,n.m1)){if(!c.D.changedAny(e,[...(0,h.UI)(this.customSettings.values(),(e=>e.name))]))return}this.notifyDidChangeConfiguration()}_customSettings;get customSettings(){return null==this._customSettings&&(this._customSettings=new Map([["rebaseEditor.enabled",{name:"workbench.editorAssociations",enabled:()=>this.container.rebaseEditor.enabled,update:this.container.rebaseEditor.setEnabled}],["currentLine.useUncommittedChangesFormat",{name:"currentLine.uncommittedChangesFormat",enabled:()=>null!=c.D.get("currentLine.uncommittedChangesFormat"),update:async e=>c.D.updateEffective("currentLine.uncommittedChangesFormat",e?"✏️ ${ago}":null)}]])),this._customSettings}getCustomSettings(){const e=Object.create(null);for(const[t,i]of this.customSettings)e[t]=i.enabled();return e}notifyDidChangeConfiguration(){return this.host.notify(d.n,{config:c.D.getAll(!0),customSettings:this.getCustomSettings()})}}},6260:(e,t,i)=>{i.d(t,{wU:()=>g,Q5:()=>f,qW:()=>w,Db:()=>v,OY:()=>y});var r=i(9496),n=i(4290),s=i(9529),o=i(2061),a=i(4241);var l=i(7469),c=i(5798),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&h(t,i,s),s};const p=new TextDecoder("utf8");let m=0;let g=class{constructor(e,t,i,n,s){this.container=e,this._commandRegistrar=t,this.descriptor=i,this.parent=n,this.id=i.id,this.webview=n.webview;const o="onDidChangeViewState"in n;this._isEditor=o,this._originalTitle=i.title,n.title=i.title,this._initializing=s(e,this).then((e=>{this.provider=e,this._disposed?e.dispose():this.disposable=r.Disposable.from(r.window.onDidChangeWindowState(this.onWindowStateChanged,this),n.webview.onDidReceiveMessage(this.onMessageReceivedCore,this),o?n.onDidChangeViewState((({webviewPanel:{visible:e,active:t}})=>this.onParentVisibilityChanged(e,t))):n.onDidChangeVisibility((()=>this.onParentVisibilityChanged(this.visible,this.active))),n.onDidDispose(this.onParentDisposed,this),...this.provider.registerCommands?.()??[],this.provider)}))}static async create(e,t,i,r,n){const s=new g(e,t,i,r,n);return await s.initialize(),s}_onDidDispose=new r.EventEmitter;get onDidDispose(){return this._onDidDispose.event}id;_ready=!1;get ready(){return this._ready}disposable;provider;webview;_disposed=!1;dispose(){this._disposed=!0,w(this.descriptor.contextKeyPrefix),this.provider?.onFocusChanged?.(!1),this.provider?.onVisibilityChanged?.(!1),this._ready=!1,this._onDidDispose.fire(),this.disposable?.dispose()}registerWebviewCommand(e,t){return this._commandRegistrar.registerCommand(this.provider,this.id,e,t)}_initializing;async initialize(){null!=this._initializing&&(await this._initializing,this._initializing=void 0)}_isEditor;isEditor(){return this._isEditor}isView(){return!this._isEditor}get active(){return"active"in this.parent?!this._disposed&&this.parent.active:!this._disposed&&void 0}get badge(){return"badge"in this.parent?this.parent.badge:void 0}set badge(e){if(!("badge"in this.parent))throw new Error("The 'badge' property not supported on Webview parent");this.parent.badge=e}_description;get description(){return"description"in this.parent?this.parent.description:this._description}set description(e){"description"in this.parent&&(this.parent.description=e),this._description=e}_originalTitle;get originalTitle(){return this._originalTitle}get title(){return this.parent.title??this._originalTitle}set title(e){this.parent.title=e}get visible(){return!this._disposed&&this.parent.visible}async show(e,t,...i){null==t&&(t={});const n=this.provider.onShowing?.(e,t,...i);if(null!=n)if((0,l.tI)(n)){if(!1===await n)return}else if(!1===n)return;e&&(this.webview.html=await this.getHtml(this.webview)),this.isEditor()?e||this.parent.reveal(t.column??this.parent.viewColumn??this.descriptor.column??r.ViewColumn.Beside,t.preserveFocus??!1):this.isView()&&(await(0,s.dO)(`${this.id}.focus`,t),e&&this.provider.onVisibilityChanged?.(!0)),v(this.descriptor.contextKeyPrefix,this.active)}_cspNonce=(0,n.Vu)();get cspNonce(){return this._cspNonce}asWebviewUri(e){return this.webview.asWebviewUri(e)}async refresh(e){e&&this.clearPendingIpcNotifications(),this.provider.onRefresh?.(e);const t=this._ready;this._ready=!1;const i=await this.getHtml(this.webview);e&&(this.webview.html=""),this.webview.html!==i?this.webview.html=i:t&&(this._ready=!0)}onParentDisposed(){this.dispose()}onMessageReceivedCore(e){if(null!=e)switch(e.method){case c.M5.method:(0,c.mq)(c.M5,e,(()=>{this._ready=!0,this.sendPendingIpcNotifications(),this.provider.onReady?.()}));break;case c.W2.method:(0,c.mq)(c.W2,e,(e=>{this.onViewFocusChanged(e)}));break;case c.dp.method:(0,c.mq)(c.dp,e,(e=>{null!=e.args?(0,s.P0)(e.command,...e.args):(0,s.P0)(e.command)}));break;default:this.provider.onMessageReceived?.(e)}}onViewFocusChanged(e){v(this.descriptor.contextKeyPrefix,void 0,e.focused,e.inputFocused),this.provider.onFocusChanged?.(e.focused)}onParentVisibilityChanged(e,t){!0!==this.descriptor.webviewHostOptions?.retainContextWhenHidden&&(e?this._ready?this.sendPendingIpcNotifications():null!=this.provider.onReloaded?(this.clearPendingIpcNotifications(),this.provider.onReloaded()):this.refresh():this._ready=!1),e?(this.container.usage.track(`${this.descriptor.trackingFeature}:shown`),v(this.descriptor.contextKeyPrefix,t),null!=t&&(this.provider.onActiveChanged?.(t),t||this.provider.onFocusChanged?.(!1))):(w(this.descriptor.contextKeyPrefix),null!=t&&this.provider.onActiveChanged?.(!1),this.provider.onFocusChanged?.(!1)),this.provider.onVisibilityChanged?.(e)}onWindowStateChanged(e){this.visible&&this.provider.onWindowFocusChanged?.(e.focused)}getRootUri(){return this.container.context.extensionUri}_webRoot;getWebRoot(){return null==this._webRoot&&(this._webRoot=this.asWebviewUri(this.getWebRootUri()).toString()),this._webRoot}_webRootUri;getWebRootUri(){return null==this._webRootUri&&(this._webRootUri=r.Uri.joinPath(this.getRootUri(),"dist","webviews")),this._webRootUri}async getHtml(e){const t=this.getWebRootUri(),i=r.Uri.joinPath(t,this.descriptor.fileName),[n,s,o,a,l]=await Promise.all([r.workspace.fs.readFile(i),this.provider.includeBootstrap?.(),this.provider.includeHead?.(),this.provider.includeBody?.(),this.provider.includeEndOfBody?.()]);return f(p.decode(n),this.descriptor.id,e.cspSource,this._cspNonce,this.asWebviewUri(this.getRootUri()).toString(),this.getWebRoot(),this.isEditor()?"editor":"view",s,o,a,l)}nextIpcId(){return 1073741824===m?m=1:m++,`host:${m}`}async notify(e,t,i){const r={id:this.nextIpcId(),method:e.method,params:t,completionId:i},n=await this.postMessage(r);return n?this._pendingIpcNotifications.clear():this.addPendingIpcNotificationCore(e,r),n}async postMessage(e){if(!this._ready)return Promise.resolve(!1);return await Promise.race([this.webview.postMessage(e),new Promise((e=>setTimeout(e,5e3,!1)))])}_pendingIpcNotifications=new Map;addPendingIpcNotification(e,t,i){this.addPendingIpcNotificationCore(e,t.get(e)?.bind(i))}addPendingIpcNotificationCore(e,t){e.reset&&this._pendingIpcNotifications.clear(),null!=t&&this._pendingIpcNotifications.set(e,t)}clearPendingIpcNotifications(){this._pendingIpcNotifications.clear()}sendPendingIpcNotifications(){if(0===this._pendingIpcNotifications.size)return;const e=new Map(this._pendingIpcNotifications);this._pendingIpcNotifications.clear();for(const t of e.values())"function"==typeof t?t():this.postMessage(t)}};function f(e,t,i,r,n,s,o,a,l,c,h){return e.replace(/#{(head|body|endOfBody|webviewId|placement|cspSource|cspNonce|root|webroot)}/g,((e,u)=>{switch(u){case"head":return l??"";case"body":return c??"";case"endOfBody":return`${null!=a?`<script type="text/javascript" nonce="${r}">window.bootstrap=${JSON.stringify(a)};<\/script>`:""}${h??""}`;case"webviewId":return t;case"placement":return o;case"cspSource":return i;case"cspNonce":return r;case"root":return n;case"webroot":return s;default:return""}}))}function w(e){(0,o.v)(`${e}:visible`,!1),(0,o.v)(`${e}:inputFocus`,!1),(0,o.v)(`${e}:focus`,!1),e.startsWith("gitlens:webview:")&&(0,o.v)(`${e}:active`,!1)}function v(e,t,i,r){(0,o.v)(`${e}:visible`,!0),e.startsWith("gitlens:webview:")&&null!=t&&((0,o.v)(`${e}:active`,t),t||(i=!1,r=!1)),null!=i&&(0,o.v)(`${e}:focus`,i),null!=r&&(0,o.v)(`${e}:inputFocus`,r)}function y(e,t,i,n=!1){let s=!1;for(const[o,a]of Object.entries(i)){const i=e[o];!n&&(i instanceof r.Uri||a instanceof r.Uri)&&i?.toString()===a?.toString()||(n||i!==a||void 0===a&&!(o in e)||null!=t&&o in t)&&(null==t&&(t={}),t[o]=a,s=!0)}return[s,t]}d([(0,a.fF)({args:!1})],g.prototype,"show",1),d([(0,a.fF)()],g.prototype,"refresh",1),d([(0,a.fF)()],g.prototype,"onParentDisposed",1),d([(0,a.fF)({args:{0:e=>null!=e?`${e.id}: method=${e.method}`:"<undefined>"}})],g.prototype,"onMessageReceivedCore",1),d([(0,a.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],g.prototype,"onViewFocusChanged",1),d([(0,a.fF)()],g.prototype,"onParentVisibilityChanged",1),d([(e,t,i)=>{let r;if("function"==typeof i.value?r=i.value:"function"==typeof i.get&&(r=i.get),void 0===r)throw new Error("Not supported");const n=`$serialize$${t}`;i.value=function(...e){Object.prototype.hasOwnProperty.call(this,n)||Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let t=this[n];const i=async()=>await r.apply(this,e);return t=null==t?i():t.then(i,i),this[n]=t,t}},(0,a.fF)({args:{0:e=>`{"id":${e.id},"method":${e.method}${e.completionId?`,"completionId":${e.completionId}`:""}}`}})],g.prototype,"postMessage",1),g=d([(0,a.hJ)((e=>`WebviewController(${e.id})`))],g)},620:(e,t,i)=>{i.d(t,{V:()=>WebviewsController,W:()=>m});var r=i(9496),n=i(2215),s=i(9529),o=i(4241),a=i(4336),l=i(6004),c=i(9701);class WebviewCommandRegistrar{_commandRegistrations=new Map;dispose(){this._commandRegistrations.forEach((({subscription:e})=>{e.dispose()}))}registerCommand(e,t,i,r){let n=this._commandRegistrations.get(i);if(null==n){const e=new Map;n={subscription:(0,s.vg)(i,((...t)=>{const r=t[0];if(!(0,c.s4)(r))return;const n=e.get(r.webview);if(null==n)throw new Error(`Unable to find Command '${i}' registration for Webview '${r.webview}'`);n.callback.call(n.thisArg,r)}),this),handlers:e},this._commandRegistrations.set(i,n)}if(n.handlers.has(t))throw new Error(`Command '${i}' has already been registered for Webview '${t}'`);return n.handlers.set(t,{callback:r,thisArg:e}),{dispose:()=>{n.handlers.delete(t),0===n.handlers.size&&(this._commandRegistrations.delete(i),n.subscription.dispose())}}}}var h=i(6260),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor,p=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&u(t,i,s),s};class WebviewsController{constructor(e){this.container=e,this.disposables.push(this._commandRegistrar=new WebviewCommandRegistrar)}disposables=[];_commandRegistrar;_panels=new Map;_views=new Map;dispose(){this.disposables.forEach((e=>{e.dispose()}))}registerWebviewView(e,t,i){const o=(0,l.UH)(),c={descriptor:e};this._views.set(e.id,c);const u=[];u.push(r.window.registerWebviewViewProvider(e.id,{resolveWebviewView:async(s,l,d)=>{if(null!=i&&!1===await i())return;if(c.descriptor.plusFeature){if(!await(0,n.C)())return;if(d.isCancellationRequested)return}a.Yd.debug(o,`Resolving webview view (${e.id})`),s.webview.options={enableCommandUris:!0,enableScripts:!0,localResourceRoots:[r.Uri.file(this.container.context.extensionPath)],...e.webviewOptions},s.title=e.title;const p=await h.wU.create(this.container,this._commandRegistrar,e,s,t);c.controller?.dispose(),c.controller=p,u.push(p.onDidDispose((()=>{a.Yd.debug(o,`Disposing webview view (${e.id})`),c.pendingShowArgs=void 0,c.controller=void 0})),p);let g=c.pendingShowArgs;c.pendingShowArgs=void 0,null==g&&m(l)&&(g=[void 0,l]),null!=g?await p.show(!0,...g):await p.show(!0)}},null!=e.webviewHostOptions?{webviewOptions:e.webviewHostOptions}:void 0));const d=r.Disposable.from(...u);return this.disposables.push(d),{id:e.id,get ready(){return c.controller?.ready??!1},get visible(){return c.controller?.visible??!1},dispose:function(){d.dispose()},refresh:async e=>c.controller?.refresh(e),show:async(t,...i)=>{null==c.controller?(a.Yd.debug(o,`Showing webview view (${e.id})`),c.pendingShowArgs=[t,...i],(0,s.dO)(`${e.id}.focus`,t)):c.controller.show(!1,t,...i)}}}registerWebviewPanel(e,t,i,o){const c=(0,l.UH)(),u={descriptor:t};this._panels.set(t.id,u);const d=[],{container:p,_commandRegistrar:m}=this;let g;async function f(e,...t){if(null!=o&&!1===await o())return;const{descriptor:s}=u;if(s.plusFeature&&!await(0,n.C)())return;p.usage.track(`${s.trackingFeature}:shown`);let l=e?.column??s.column??r.ViewColumn.Beside;l===r.ViewColumn.Beside&&null==r.window.tabGroups.activeTabGroup.activeTab&&(l=r.ViewColumn.Active);let{controller:f}=u;if(null==f){let n;null!=g?(a.Yd.debug(c,`Restoring webview panel (${s.id})`),n=g,g=void 0):(a.Yd.debug(c,`Creating webview panel (${s.id})`),n=r.window.createWebviewPanel(s.id,s.title,{viewColumn:l,preserveFocus:e?.preserveFocus??!1},{enableCommandUris:!0,enableScripts:!0,localResourceRoots:[r.Uri.file(p.context.extensionPath)],...s.webviewOptions,...s.webviewHostOptions})),n.iconPath=r.Uri.file(p.context.asAbsolutePath(s.iconPath)),f=await h.wU.create(p,m,s,n,i),u.controller=f,d.push(f.onDidDispose((()=>{a.Yd.debug(c,`Disposing webview panel (${s.id})`),u.controller=void 0})),f),await f.show(!0,e,...t)}else a.Yd.debug(c,`Showing webview panel (${s.id})`),await f.show(!1,e,...t)}const w=r.Disposable.from(...d,r.window.registerWebviewPanelSerializer(t.id,{deserializeWebviewPanel:async function(e,t){g=e,null!=t?await f({column:e.viewColumn,preserveFocus:!0},{state:t}):await f({column:e.viewColumn,preserveFocus:!0})}}),(0,s.xR)(e,((...e)=>f(void 0,...e)),this));return this.disposables.push(w),{id:t.id,get ready(){return u.controller?.ready??!1},get visible(){return u.controller?.visible??!1},dispose:function(){w.dispose()},close:()=>{u.controller?.parent.dispose()},refresh:async e=>u.controller?.refresh(e),show:f}}}function m(e){return null!=e&&"object"==typeof e&&"state"in e&&null!=e.state&&"object"==typeof e.state}p([(0,o.fF)({args:{0:e=>e.id,1:!1,2:!1}})],WebviewsController.prototype,"registerWebviewView",1),p([(0,o.fF)({args:{0:e=>e,1:e=>e.id,2:!1,3:!1}})],WebviewsController.prototype,"registerWebviewPanel",1)},7338:(e,t,i)=>{i.d(t,{WelcomeWebviewProvider:()=>WelcomeWebviewProvider});var r=i(9496),n=i(4968),s=i(5148),o=i(5798);const a=new o.ke("welcome/configuration/update"),l=new o.jH("welcome/didChange",!0),c=Object.freeze({dispose:()=>{}});class WelcomeWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(s.D.onDidChange(this.onConfigurationChanged,this),this.container.git.onDidChangeRepositories((()=>this.notifyDidChange()),this),r.workspace.isTrusted?c:r.workspace.onDidGrantWorkspaceTrust((()=>this.notifyDidChange()),this),this.container.subscription.onDidChange(this.onSubscriptionChanged,this))}_disposable;dispose(){this._disposable.dispose()}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChange()}onSubscriptionChanged(e){this.notifyDidChange(e.current)}onConfigurationChanged(e){(s.D.changed(e,"codeLens.enabled")||s.D.changed(e,"currentLine.enabled"))&&this.notifyDidChange()}onMessageReceived(e){if(e.method===a.method)(0,o.mq)(a,e,(e=>this.updateConfiguration(e)))}async getState(e){return{webviewId:this.host.id,timestamp:Date.now(),version:this.container.version,config:{codeLens:s.D.get("codeLens.enabled",void 0,!0,!0),currentLine:s.D.get("currentLine.enabled",void 0,!0,!0)},repoFeaturesBlocked:!r.workspace.isTrusted||0===this.container.git.openRepositoryCount||this.container.git.hasUnsafeRepositories(),isTrialOrPaid:await this.getTrialOrPaidState(e)}}async getTrialOrPaidState(e){const t=e??await this.container.subscription.getSubscription(!0);return!![n.jc.FreePlusInTrial,n.jc.Paid].includes(t.state)}updateConfiguration(e){s.D.updateEffective(`${e.type}.enabled`,e.value)}async notifyDidChange(e){this.host.notify(l,{state:await this.getState(e)})}}},3300:(e,t,i)=>{var r=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==i.g)return i.g;throw new Error("unable to locate global object")}();e.exports=t=r.fetch,r.fetch&&(t.default=r.fetch.bind(r)),t.Headers=r.Headers,t.Request=r.Request,t.Response=r.Response},778:(e,t,i)=>{var r=i(2479);function n(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function s(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},i=e.name||"Function wrapped with `once`";return t.onceError=i+" shouldn't be called more than once",t.called=!1,t}e.exports=r(n),e.exports.strict=r(s),n.proto=n((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return n(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return s(this)},configurable:!0})}))},6470:e=>{function t(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function i(e,t){for(var i,r="",n=0,s=-1,o=0,a=0;a<=e.length;++a){if(a<e.length)i=e.charCodeAt(a);else{if(47===i)break;i=47}if(47===i){if(s===a-1||1===o);else if(s!==a-1&&2===o){if(r.length<2||2!==n||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){var l=r.lastIndexOf("/");if(l!==r.length-1){-1===l?(r="",n=0):n=(r=r.slice(0,l)).length-1-r.lastIndexOf("/"),s=a,o=0;continue}}else if(2===r.length||1===r.length){r="",n=0,s=a,o=0;continue}t&&(r.length>0?r+="/..":r="..",n=2)}else r.length>0?r+="/"+e.slice(s+1,a):r=e.slice(s+1,a),n=a-s-1;s=a,o=0}else 46===i&&-1!==o?++o:o=-1}return r}var r={resolve:function(){for(var e,r="",n=!1,s=arguments.length-1;s>=-1&&!n;s--){var o;s>=0?o=arguments[s]:(void 0===e&&(e=process.cwd()),o=e),t(o),0!==o.length&&(r=o+"/"+r,n=47===o.charCodeAt(0))}return r=i(r,!n),n?r.length>0?"/"+r:"/":r.length>0?r:"."},normalize:function(e){if(t(e),0===e.length)return".";var r=47===e.charCodeAt(0),n=47===e.charCodeAt(e.length-1);return 0!==(e=i(e,!r)).length||r||(e="."),e.length>0&&n&&(e+="/"),r?"/"+e:e},isAbsolute:function(e){return t(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,i=0;i<arguments.length;++i){var n=arguments[i];t(n),n.length>0&&(void 0===e?e=n:e+="/"+n)}return void 0===e?".":r.normalize(e)},relative:function(e,i){if(t(e),t(i),e===i)return"";if((e=r.resolve(e))===(i=r.resolve(i)))return"";for(var n=1;n<e.length&&47===e.charCodeAt(n);++n);for(var s=e.length,o=s-n,a=1;a<i.length&&47===i.charCodeAt(a);++a);for(var l=i.length-a,c=o<l?o:l,h=-1,u=0;u<=c;++u){if(u===c){if(l>c){if(47===i.charCodeAt(a+u))return i.slice(a+u+1);if(0===u)return i.slice(a+u)}else o>c&&(47===e.charCodeAt(n+u)?h=u:0===u&&(h=0));break}var d=e.charCodeAt(n+u);if(d!==i.charCodeAt(a+u))break;47===d&&(h=u)}var p="";for(u=n+h+1;u<=s;++u)u!==s&&47!==e.charCodeAt(u)||(0===p.length?p+="..":p+="/..");return p.length>0?p+i.slice(a+h):(a+=h,47===i.charCodeAt(a)&&++a,i.slice(a))},_makeLong:function(e){return e},dirname:function(e){if(t(e),0===e.length)return".";for(var i=e.charCodeAt(0),r=47===i,n=-1,s=!0,o=e.length-1;o>=1;--o)if(47===(i=e.charCodeAt(o))){if(!s){n=o;break}}else s=!1;return-1===n?r?"/":".":r&&1===n?"//":e.slice(0,n)},basename:function(e,i){if(void 0!==i&&"string"!=typeof i)throw new TypeError('"ext" argument must be a string');t(e);var r,n=0,s=-1,o=!0;if(void 0!==i&&i.length>0&&i.length<=e.length){if(i.length===e.length&&i===e)return"";var a=i.length-1,l=-1;for(r=e.length-1;r>=0;--r){var c=e.charCodeAt(r);if(47===c){if(!o){n=r+1;break}}else-1===l&&(o=!1,l=r+1),a>=0&&(c===i.charCodeAt(a)?-1==--a&&(s=r):(a=-1,s=l))}return n===s?s=l:-1===s&&(s=e.length),e.slice(n,s)}for(r=e.length-1;r>=0;--r)if(47===e.charCodeAt(r)){if(!o){n=r+1;break}}else-1===s&&(o=!1,s=r+1);return-1===s?"":e.slice(n,s)},extname:function(e){t(e);for(var i=-1,r=0,n=-1,s=!0,o=0,a=e.length-1;a>=0;--a){var l=e.charCodeAt(a);if(47!==l)-1===n&&(s=!1,n=a+1),46===l?-1===i?i=a:1!==o&&(o=1):-1!==i&&(o=-1);else if(!s){r=a+1;break}}return-1===i||-1===n||0===o||1===o&&i===n-1&&i===r+1?"":e.slice(i,n)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var i=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return i?i===t.root?i+r:i+e+r:r}("/",e)},parse:function(e){t(e);var i={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return i;var r,n=e.charCodeAt(0),s=47===n;s?(i.root="/",r=1):r=0;for(var o=-1,a=0,l=-1,c=!0,h=e.length-1,u=0;h>=r;--h)if(47!==(n=e.charCodeAt(h)))-1===l&&(c=!1,l=h+1),46===n?-1===o?o=h:1!==u&&(u=1):-1!==o&&(u=-1);else if(!c){a=h+1;break}return-1===o||-1===l||0===u||1===u&&o===l-1&&o===a+1?-1!==l&&(i.base=i.name=0===a&&s?e.slice(1,l):e.slice(a,l)):(0===a&&s?(i.name=e.slice(1,o),i.base=e.slice(1,l)):(i.name=e.slice(a,o),i.base=e.slice(a,l)),i.ext=e.slice(o,l)),a>0?i.dir=e.slice(0,a-1):s&&(i.dir="/"),i},sep:"/",delimiter:":",win32:null,posix:null};r.posix=r,e.exports=r},2479:e=>{e.exports=function e(t,i){if(t&&i)return e(t)(i);if("function"!=typeof t)throw new TypeError("need wrapper function");return Object.keys(t).forEach((function(e){r[e]=t[e]})),r;function r(){for(var e=new Array(arguments.length),i=0;i<e.length;i++)e[i]=arguments[i];var r=t.apply(this,e),n=e[e.length-1];return"function"==typeof r&&r!==n&&Object.keys(n).forEach((function(e){r[e]=n[e]})),r}}},9496:e=>{e.exports=require("vscode")}},t={};function i(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,i),s.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{i.r(r),i.d(r,{activate:()=>O,deactivate:()=>E});var e=i(9496),t=i(9376),n=i(429),s=i(963),o=i(8294);Object.freeze({dispose:()=>{}});class Api{#i;constructor(e){this.#i=e}registerActionRunner(e,t){if(t.name===o.vj)throw new Error(`Cannot use the reserved name '${o.vj}'`);return"hover.commandHelp"===e&&(e="hover.commands"),this.#i.actionRunners.register(e,t)}}var a=i(2540),l=i(5255),c=i(7462),h=i(5367),u=i(6450),d=i(3646),p=i(9502),m=i(7925),g=i(9529);function f(e){!function(e){e.subscriptions.push(s.W.instance.actionRunners.registerBuiltInPartner("liveshare","hover.commands",{name:"Live Share",label:e=>"hover.commands"===e.type&&"You"!==e.commit.author.name?`$(live-share) Invite ${e.commit.author.name}${e.commit.author.presence?.statusText?` (${e.commit.author.presence?.statusText})`:""} to a Live Share Session`:"$(live-share) Start a Live Share Session",run:async e=>{"hover.commands"===e.type&&"You"!==e.commit.author.name?await(0,g.P0)(l.Gh.InviteToLiveShare,{email:e.commit.author.email}):await(0,g.P0)(l.Gh.InviteToLiveShare,{})}}))}(e)}var w=i(5148),v=i(2061),y=i(7512),b=i(2185),C=i(4336),A=i(8227),P=i(9967),S=i(6398),R=i(4241),D=Object.defineProperty,k=Object.getOwnPropertyDescriptor,_=(e,t,i,r)=>{for(var n,s=r>1?void 0:r?k(t,i):t,o=e.length-1;o>=0;o--)(n=e[o])&&(s=(r?n(t,i,s):n(s))||s);return r&&s&&D(t,i,s),s};class Storage{constructor(e){this.context=e,this._disposable=this.context.secrets.onDidChange((e=>this._onDidChangeSecrets.fire(e)))}_onDidChange=new e.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeSecrets=new e.EventEmitter;get onDidChangeSecrets(){return this._onDidChangeSecrets.event}_disposable;dispose(){this._disposable.dispose()}get(e,t){return this.context.globalState.get(`${l.m1}:${e}`,t)}async delete(e){await this.context.globalState.update(`${l.m1}:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!1})}async deleteWithPrefix(e){const t=`${l.m1}:${e}`,i=`${t}:`;for(const e of this.context.globalState.keys())(e===t||e.startsWith(i))&&(await this.context.globalState.update(e,void 0),this._onDidChange.fire({key:e,workspace:!1}))}async store(e,t){await this.context.globalState.update(`${l.m1}:${e}`,t),this._onDidChange.fire({key:e,workspace:!1})}async getSecret(e){return this.context.secrets.get(e)}async deleteSecret(e){return this.context.secrets.delete(e)}async storeSecret(e,t){return this.context.secrets.store(e,t)}getWorkspace(e,t){return this.context.workspaceState.get(`${l.m1}:${e}`,t)}async deleteWorkspace(e){await this.context.workspaceState.update(`${l.m1}:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!0})}async deleteWorkspaceWithPrefix(e){const t=`${l.m1}:${e}`,i=`${t}:`;for(const e of this.context.workspaceState.keys())(e===t||e.startsWith(i))&&(await this.context.workspaceState.update(e,void 0),this._onDidChange.fire({key:e,workspace:!0}))}async storeWorkspace(e,t){await this.context.workspaceState.update(`${l.m1}:${e}`,t),this._onDidChange.fire({key:e,workspace:!0})}}_([(0,R.fF)({logThreshold:50})],Storage.prototype,"get",1),_([(0,R.fF)({logThreshold:250})],Storage.prototype,"delete",1),_([(0,R.fF)({logThreshold:250})],Storage.prototype,"deleteWithPrefix",1),_([(0,R.fF)({args:{1:!1},logThreshold:250})],Storage.prototype,"store",1),_([(0,R.fF)({args:!1,logThreshold:250})],Storage.prototype,"getSecret",1),_([(0,R.fF)({args:!1,logThreshold:250})],Storage.prototype,"deleteSecret",1),_([(0,R.fF)({args:!1,logThreshold:250})],Storage.prototype,"storeSecret",1),_([(0,R.fF)({logThreshold:25})],Storage.prototype,"getWorkspace",1),_([(0,R.fF)({logThreshold:250})],Storage.prototype,"deleteWorkspace",1),_([(0,R.fF)({logThreshold:250})],Storage.prototype,"deleteWorkspaceWithPrefix",1),_([(0,R.fF)({args:{1:!1},logThreshold:250})],Storage.prototype,"storeWorkspace",1);var T=i(4550),F=i(6922);async function O(i){const r=i.extension.packageJSON.version,o=(0,T.L5)(r,"> 2020.0.0"),R=w.D.get("outputLevel");C.Yd.configure({name:"GitLens",createChannel:function(t){return e.window.createOutputChannel(t)},toLoggable:function(t){return(0,c.uy)(t)?`GitUri(${t.toString(!0)}${t.repoPath?` repoPath=${t.repoPath}`:""}${t.sha?` sha=${t.sha}`:""})`:t instanceof e.Uri?`Uri(${t.toString(!0)})`:(0,d.uC)(t)||(0,h.BF)(t)||(0,u.f_)(t)||(0,p.YR)(t)||(0,F.Jc)(t)?t.toString():"uri"in t&&t.uri instanceof e.Uri?`${"name"in t&&"index"in t?"WorkspaceFolder":(0,C.q4)(t)}(uri=${t.uri.toString(!0)})`:void 0}},(0,a.oE)(R),i.extensionMode===e.ExtensionMode.Development);const D=w.D.get("defaultDateLocale"),k=new S.u(`GitLens${o?" (pre-release)":""} v${r}`,{log:{message:` activating in ${e.env.appName} (${e.version}) on the ${n.$L?"web":"desktop"}; language='${e.env.language}', defaultDateLocale='${D}' (${e.env.machineId}|${e.env.sessionId})`}});if(o){const e=(0,T.mL)(r);if(new Date(e.major,e.minor-1,Number(e.patch.toString().substring(0,2))).getTime()<Date.now()-12096e5)return k.stop({message:` was NOT activated because this pre-release version (${r}) has expired`}),void setTimeout(m.Nl,0,r)}e.workspace.isTrusted||(0,v.v)("gitlens:untrusted",!0),function(e,...t){e.globalState?.setKeysForSync([...t,l.lw.Version,l.lw.HomeViewWelcomeVisible])}(i);const _=new Storage(i),O=_.get(o?"synced:preVersion":"synced:version"),E=_.get(o?"preVersion":"version");let $,I;$=null==E||null==O?O??E:1===(0,T.qu)(O,E)?O:E,C.Yd.enabled(A.i.Debug)&&(I=`syncedVersion=${O}, localVersion=${E}, previousVersion=${$}, welcome=${_.get("views:welcome:visible")}`),null==$&&_.store("views:welcome:visible",!0),w.V.configure(i),(0,y.Cz)(D??e.env.language),i.subscriptions.push(w.D.onDidChange((t=>{w.D.changed(t,"defaultDateLocale")&&(0,y.Cz)(w.D.get("defaultDateLocale")??e.env.language)})));const x=s.W.create(i,_,o,r,$);(0,b.IH)(x.onReady)((()=>{i.subscriptions.push(...(0,g.$$)(x)),function(e){e.context.subscriptions.push(e.actionRunners.registerBuiltIn("createPullRequest",{label:e=>`Create Pull Request on ${e.remote?.provider?.name??"Remote"}`,run:async e=>{"createPullRequest"===e.type&&await(0,g.P0)(l.Gh.CreatePullRequestOnRemote,{base:void 0,compare:e.branch.isRemote?(0,h.S3)(e.branch.name):e.branch.upstream?(0,h.S3)(e.branch.upstream):e.branch.name,remote:e.remote?.name??"",repoPath:e.repoPath})}}),e.actionRunners.registerBuiltIn("openPullRequest",{label:e=>`Open Pull Request on ${e.provider?.name??"Remote"}`,run:async e=>{"openPullRequest"===e.type&&await(0,g.P0)(l.Gh.OpenPullRequestOnRemote,{pr:{url:e.pullRequest.url}})}}))}(x),f(i),e.workspace.isTrusted||i.subscriptions.push(e.workspace.onDidGrantWorkspaceTrust((()=>{(0,v.v)("gitlens:untrusted",void 0),x.telemetry.setGlobalAttribute("workspace.isTrusted",e.workspace.isTrusted)}))),async function(t,i,r,n){if(null==n){if(C.Yd.log(`GitLens first-time install; window.focused=${e.window.state.focused}`),!1===w.D.get("showWelcomeOnInstall"))return;if(e.window.state.focused)await t.storage.delete("pendingWelcomeOnFocus"),await(0,g.P0)(l.Gh.ShowWelcomePage);else{await t.storage.store("pendingWelcomeOnFocus",!0);const i=e.window.onDidChangeWindowState((e=>{e.focused&&(i.dispose(),!0===t.storage.get("pendingWelcomeOnFocus")&&(t.storage.delete("pendingWelcomeOnFocus"),w.D.get("showWelcomeOnInstall")&&(0,g.P0)(l.Gh.ShowWelcomePage)))}));t.context.subscriptions.push(i)}return}n!==i&&C.Yd.log(`GitLens upgraded from v${n} to v${i}; window.focused=${e.window.state.focused}`);const s=(0,T.mL)(i),o=(0,T.mL)(n);if(s.major<o.major||s.major===o.major&&s.minor<o.minor)return;const a=r&&(0,T.L5)(o,"< 2023.6.0800");if(s.major===o.major&&!a)return;if(i=a?"14":String(s.major),w.D.get("showWhatsNewAfterUpgrades"))if(e.window.state.focused)await t.storage.delete("pendingWhatsNewOnFocus"),await(0,m.xs)(i);else{await t.storage.store("pendingWhatsNewOnFocus",!0);const r=e.window.onDidChangeWindowState((e=>{e.focused&&(r.dispose(),!0===t.storage.get("pendingWhatsNewOnFocus")&&(t.storage.delete("pendingWhatsNewOnFocus"),w.D.get("showWhatsNewAfterUpgrades")&&(0,m.xs)(i)))}));t.context.subscriptions.push(r)}}(x,r,o,$),_.store(o?"preVersion":"version",r),null!=O&&1!==(0,T.qu)(r,O)||_.store(o?"synced:preVersion":"synced:version",r),R===a.M7.Debug&&setTimeout((async()=>{w.D.get("outputLevel")===a.M7.Debug&&(x.prereleaseOrDebugging||await(0,m.EB)()&&(0,g.P0)(l.Gh.DisableDebugLogging))}),6e4)})),x.debugging?((0,v.v)("gitlens:debugging",!0),(0,v.v)("gitlens:prerelease",!0)):x.prerelease&&(0,v.v)("gitlens:prerelease",!0),await x.ready();const B=(0,P.xH)(w.D.getAll(!0),{prefix:"config",stringify:"all"});x.telemetry.setGlobalAttributes({debugging:x.debugging,prerelease:o,install:null==$,upgrade:null!=$&&r!==$,upgradedFrom:null!=$&&r!==$?$:void 0});const W=new Api(x),M=x.mode,L=k.startTime,U=(0,t.a)(),N=k.elapsed();return k.stop({message:` activated${null!=I?`, ${I}`:""}${null!=M?`, mode: ${M.name}`:""}`}),x.telemetry.sendEvent("activate",{"activation.elapsed":N,"activation.mode":M?.name,...B},L,U),Promise.resolve(W)}function E(){C.Yd.log("GitLens deactivating..."),s.W.instance.deactivate()}})(),module.exports=r})();