(()=>{var e={5640:(e,t,i)=>{i.d(t,{QO:()=>r,qb:()=>s});var r=(e=>(e[e.Force=0]="Force",e[e.ForceWithLease=1]="ForceWithLease",e[e.ForceWithLeaseIfIncludes=2]="ForceWithLeaseIfIncludes",e))(r||{}),s=(e=>(e[e.INDEX_MODIFIED=0]="INDEX_MODIFIED",e[e.INDEX_ADDED=1]="INDEX_ADDED",e[e.INDEX_DELETED=2]="INDEX_DELETED",e[e.INDEX_RENAMED=3]="INDEX_RENAMED",e[e.INDEX_COPIED=4]="INDEX_COPIED",e[e.MODIFIED=5]="MODIFIED",e[e.DELETED=6]="DELETED",e[e.UNTRACKED=7]="UNTRACKED",e[e.IGNORED=8]="IGNORED",e[e.INTENT_TO_ADD=9]="INTENT_TO_ADD",e[e.INTENT_TO_RENAME=10]="INTENT_TO_RENAME",e[e.TYPE_CHANGED=11]="TYPE_CHANGED",e[e.ADDED_BY_US=12]="ADDED_BY_US",e[e.ADDED_BY_THEM=13]="ADDED_BY_THEM",e[e.DELETED_BY_US=14]="DELETED_BY_US",e[e.DELETED_BY_THEM=15]="DELETED_BY_THEM",e[e.BOTH_ADDED=16]="BOTH_ADDED",e[e.BOTH_DELETED=17]="BOTH_DELETED",e[e.BOTH_MODIFIED=18]="BOTH_MODIFIED",e))(s||{})},4398:(e,t,i)=>{i.d(t,{h:()=>s});var r=i(5255);function s(e){if(e.scheme===r.sN.Git)try{return JSON.parse(e.query)}catch{}}},2022:(e,t,i)=>{i.d(t,{H:()=>AnnotationProviderBase,m:()=>o});var r=i(9496),s=i(2061),n=i(4336);function o(e){return`${e?.document.uri.toString()}|${e?.viewColumn}`}class AnnotationProviderBase{constructor(e,t,i){this.annotationType=e,this.editor=t,this.trackedDocument=i,this.correlationKey=o(this.editor),this.document=this.editor.document,this.disposable=r.Disposable.from(r.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this))}annotationContext;correlationKey;document;status;decorations;disposable;dispose(){this.clear(),this.disposable.dispose()}onTextEditorSelectionChanged(e){this.document===e.textEditor.document&&this.selection({line:e.selections[0].active.line})}get editorUri(){return this.editor?.document?.uri}clear(){if(this.annotationContext=void 0,this.status=void 0,null!=this.editor&&this.decorations?.length){for(const e of this.decorations)try{this.editor.setDecorations(e.decorationType,[])}catch{}this.decorations=void 0}}mustReopen(e){return!1}refresh(e){if(null==this.editor||!this.decorations?.length)return;const t=[];for(const i of this.decorations){const r=e.get(i.decorationType);null!==r&&(null!=r&&(i.decorationType=r),t.push(i))}this.setDecorations(this.decorations)}async restore(e){if(!1!==this.editor._disposed){if(this.status="computing",e===r.window.activeTextEditor&&await(0,s.v)("gitlens:annotationStatus",this.status),this.editor=e,this.correlationKey=o(e),this.document=e.document,this.decorations?.length)for(const e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions);this.status="computed",e===r.window.activeTextEditor&&await(0,s.v)("gitlens:annotationStatus",this.status)}}async provideAnnotation(e){this.status="computing";try{if(await this.onProvideAnnotation(e))return this.status="computed",!0}catch(e){n.Yd.error(e)}return this.status=void 0,!1}setDecorations(e){if(this.decorations?.length&&this.clear(),this.decorations=e,this.decorations?.length)for(const e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions)}}},248:(e,t,i)=>{i.d(t,{Lx:()=>S,iF:()=>A,U5:()=>P,Vz:()=>k,HM:()=>C,sV:()=>D});var r=i(9496),s=i(5255),n=i(9338);function o(e){const t=d(e);return null==t?null:[t.rgba.r,t.rgba.g,t.rgba.b,t.rgba.a]}function a(e,t){const i=Math.pow(10,t);return Math.round(e*i)/i}class RGBA{_rgbaBrand=void 0;r;g;b;a;constructor(e,t,i,r=1){this.r=0|Math.min(255,Math.max(0,e)),this.g=0|Math.min(255,Math.max(0,t)),this.b=0|Math.min(255,Math.max(0,i)),this.a=a(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a}}class HSLA{_hslaBrand=void 0;h;s;l;a;constructor(e,t,i,r){this.h=0|Math.max(Math.min(360,e),0),this.s=a(Math.max(Math.min(1,t),0),3),this.l=a(Math.max(Math.min(1,i),0),3),this.a=a(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.l===t.l&&e.a===t.a}static fromRGBA(e){const t=e.r/255,i=e.g/255,r=e.b/255,s=e.a,n=Math.max(t,i,r),o=Math.min(t,i,r);let a=0,c=0;const l=(o+n)/2,h=n-o;if(h>0){switch(c=Math.min(l<=.5?h/(2*l):h/(2-2*l),1),n){case t:a=(i-r)/h+(i<r?6:0);break;case i:a=(r-t)/h+2;break;case r:a=(t-i)/h+4}a*=60,a=Math.round(a)}return new HSLA(a,c,l,s)}static _hue2rgb(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e}static toRGBA(e){const t=e.h/360,{s:i,l:r,a:s}=e;let n,o,a;if(0===i)n=o=a=r;else{const e=r<.5?r*(1+i):r+i-r*i,s=2*r-e;n=HSLA._hue2rgb(s,e,t+1/3),o=HSLA._hue2rgb(s,e,t),a=HSLA._hue2rgb(s,e,t-1/3)}return new RGBA(Math.round(255*n),Math.round(255*o),Math.round(255*a),s)}}class HSVA{_hsvaBrand=void 0;h;s;v;a;constructor(e,t,i,r){this.h=0|Math.max(Math.min(360,e),0),this.s=a(Math.max(Math.min(1,t),0),3),this.v=a(Math.max(Math.min(1,i),0),3),this.a=a(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.v===t.v&&e.a===t.a}static fromRGBA(e){const t=e.r/255,i=e.g/255,r=e.b/255,s=Math.max(t,i,r),n=s-Math.min(t,i,r),o=0===s?0:n/s;let a;return a=0===n?0:s===t?((i-r)/n%6+6)%6:s===i?(r-t)/n+2:(t-i)/n+4,new HSVA(Math.round(60*a),o,s,e.a)}static toRGBA(e){const{h:t,s:i,v:r,a:s}=e,n=r*i,o=n*(1-Math.abs(t/60%2-1)),a=r-n;let[c,l,h]=[0,0,0];return t<60?(c=n,l=o):t<120?(c=o,l=n):t<180?(l=n,h=o):t<240?(l=o,h=n):t<300?(c=o,h=n):t<=360&&(c=n,h=o),c=Math.round(255*(c+a)),l=Math.round(255*(l+a)),h=Math.round(255*(h+a)),new RGBA(c,l,h,s)}}class Color{static from(e){return e instanceof Color?e:d(e)||Color.red}static fromCssVariable(e,t){return d(function(e,t){return t.getPropertyValue(e).trim()}(e,t))||Color.red}static fromHex(e){return p(e)||Color.red}static equals(e,t){return!e&&!t||!(!e||!t)&&e.equals(t)}rgba;_hsla;get hsla(){return this._hsla?this._hsla:HSLA.fromRGBA(this.rgba)}_hsva;get hsva(){return this._hsva?this._hsva:HSVA.fromRGBA(this.rgba)}constructor(e){if(!e)throw new Error("Color needs a value");if(e instanceof RGBA)this.rgba=e;else if(e instanceof HSLA)this._hsla=e,this.rgba=HSLA.toRGBA(e);else{if(!(e instanceof HSVA))throw new Error("Invalid color ctor argument");this._hsva=e,this.rgba=HSVA.toRGBA(e)}}equals(e){return null!=e&&(Boolean(e)&&RGBA.equals(this.rgba,e.rgba)&&HSLA.equals(this.hsla,e.hsla)&&HSVA.equals(this.hsva,e.hsva))}getRelativeLuminance(){return a(.2126*Color._relativeLuminanceForComponent(this.rgba.r)+.7152*Color._relativeLuminanceForComponent(this.rgba.g)+.0722*Color._relativeLuminanceForComponent(this.rgba.b),4)}static _relativeLuminanceForComponent(e){const t=e/255;return t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)}luminance(e){return function(e,t){if(0===t)return new Color(new RGBA(0,0,0,e.rgba.a));if(1===t)return new Color(new RGBA(255,255,255,e.rgba.a));const i=e.getRelativeLuminance();let r=20;const s=(e,i)=>{const n=e.mix(i,.5),o=n.getRelativeLuminance();return Math.abs(t-o)<1e-7||!r--?n:o>t?s(e,n):s(n,i)},n=(i>t?s(Color.black,e):s(e,Color.white)).rgba;return new Color(new RGBA(n.r,n.g,n.b,e.rgba.a))}(this,e)}getContrastRatio(e){const t=this.getRelativeLuminance(),i=e.getRelativeLuminance();return t>i?(t+.05)/(i+.05):(i+.05)/(t+.05)}isDarker(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3<128}isLighter(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3>=128}isLighterThan(e){return this.getRelativeLuminance()>e.getRelativeLuminance()}isDarkerThan(e){return this.getRelativeLuminance()<e.getRelativeLuminance()}lighten(e){return new Color(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l+this.hsla.l*e,this.hsla.a))}darken(e){return new Color(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l-this.hsla.l*e,this.hsla.a))}transparent(e){const{r:t,g:i,b:r,a:s}=this.rgba;return new Color(new RGBA(t,i,r,s*e))}isTransparent(){return 0===this.rgba.a}isOpaque(){return 1===this.rgba.a}opposite(){return new Color(new RGBA(255-this.rgba.r,255-this.rgba.g,255-this.rgba.b,this.rgba.a))}blend(e){const t=e.rgba,i=this.rgba.a,r=t.a,s=i+r*(1-i);if(s<1e-6)return Color.transparent;const n=this.rgba.r*i/s+t.r*r*(1-i)/s,o=this.rgba.g*i/s+t.g*r*(1-i)/s,a=this.rgba.b*i/s+t.b*r*(1-i)/s;return new Color(new RGBA(n,o,a,s))}mix(e,t){return function(e,t,i){const r=e.rgba,s=t.rgba;return new Color(new RGBA(r.r+i*(s.r-r.r),r.g+i*(s.g-r.g),r.b+i*(s.b-r.b),r.a+i*(s.a-r.a)))}(this,e,t)}makeOpaque(e){if(this.isOpaque()||1!==e.rgba.a)return this;const{r:t,g:i,b:r,a:s}=this.rgba;return new Color(new RGBA(e.rgba.r-s*(e.rgba.r-t),e.rgba.g-s*(e.rgba.g-i),e.rgba.b-s*(e.rgba.b-r),1))}flatten(...e){const t=e.reduceRight(((e,t)=>Color._flatten(t,e)));return Color._flatten(this,t)}static _flatten(e,t){const i=1-e.rgba.a;return new Color(new RGBA(i*t.rgba.r+e.rgba.a*e.rgba.r,i*t.rgba.g+e.rgba.a*e.rgba.g,i*t.rgba.b+e.rgba.a*e.rgba.b))}_toString;toString(){return this._toString||(this._toString=function(e){if(e.isOpaque())return h(e);return c(e)}(this)),this._toString}static getLighterColor(e,t,i){if(e.isLighterThan(t))return e;i=i||.5;const r=e.getRelativeLuminance(),s=t.getRelativeLuminance();return i=i*(s-r)/s,e.lighten(i)}static getDarkerColor(e,t,i){if(e.isDarkerThan(t))return e;i=i||.5;const r=e.getRelativeLuminance();return i=i*(r-t.getRelativeLuminance())/r,e.darken(i)}static white=new Color(new RGBA(255,255,255,1));static black=new Color(new RGBA(0,0,0,1));static red=new Color(new RGBA(255,0,0,1));static blue=new Color(new RGBA(0,0,255,1));static green=new Color(new RGBA(0,255,0,1));static cyan=new Color(new RGBA(0,255,255,1));static lightgrey=new Color(new RGBA(211,211,211,1));static transparent=new Color(new RGBA(0,0,0,0))}function c(e){return`rgba(${e.rgba.r}, ${e.rgba.g}, ${e.rgba.b}, ${Number(e.rgba.a.toFixed(2))})`}function l(e){const t=e.toString(16);return 2!==t.length?`0${t}`:t}function h(e){return`#${l(e.rgba.r)}${l(e.rgba.g)}${l(e.rgba.b)}`}const u=/^((?:rgb|hsl)a?)\((-?\d+%?)[,\s]+(-?\d+%?)[,\s]+(-?\d+%?)[,\s]*(-?[\d.]+%?)?\)$/i;function d(e){if(0===(e=e.trim()).length)return null;if(e.charCodeAt(0)===s.mN.Hash)return p(e);const t=u.exec(e);if(null==t)return null;const i=t[1];let r;switch(i){case"rgb":case"hsl":r=[parseInt(t[2],10),parseInt(t[3],10),parseInt(t[4],10),1];break;case"rgba":case"hsla":r=[parseInt(t[2],10),parseInt(t[3],10),parseInt(t[4],10),parseFloat(t[5])];break;default:return null}switch(i){case"rgb":case"rgba":return new Color(new RGBA(r[0],r[1],r[2],r[3]));case"hsl":case"hsla":return new Color(new HSLA(r[0],r[1],r[2],r[3]))}return Color.red}function p(e){const t=(e=e.trim()).length;if(0===t)return null;if(e.charCodeAt(0)!==s.mN.Hash)return null;switch(t){case 7:{const t=16*m(e.charCodeAt(1))+m(e.charCodeAt(2)),i=16*m(e.charCodeAt(3))+m(e.charCodeAt(4)),r=16*m(e.charCodeAt(5))+m(e.charCodeAt(6));return new Color(new RGBA(t,i,r,1))}case 9:{const t=16*m(e.charCodeAt(1))+m(e.charCodeAt(2)),i=16*m(e.charCodeAt(3))+m(e.charCodeAt(4)),r=16*m(e.charCodeAt(5))+m(e.charCodeAt(6)),s=16*m(e.charCodeAt(7))+m(e.charCodeAt(8));return new Color(new RGBA(t,i,r,s/255))}case 4:{const t=m(e.charCodeAt(1)),i=m(e.charCodeAt(2)),r=m(e.charCodeAt(3));return new Color(new RGBA(16*t+t,16*i+i,16*r+r))}case 5:{const t=m(e.charCodeAt(1)),i=m(e.charCodeAt(2)),r=m(e.charCodeAt(3)),s=m(e.charCodeAt(4));return new Color(new RGBA(16*t+t,16*i+i,16*r+r,(16*s+s)/255))}default:return null}}function m(e){switch(e){case s.mN.Digit0:return 0;case s.mN.Digit1:return 1;case s.mN.Digit2:return 2;case s.mN.Digit3:return 3;case s.mN.Digit4:return 4;case s.mN.Digit5:return 5;case s.mN.Digit6:return 6;case s.mN.Digit7:return 7;case s.mN.Digit8:return 8;case s.mN.Digit9:return 9;case s.mN.a:case s.mN.A:return 10;case s.mN.b:case s.mN.B:return 11;case s.mN.c:case s.mN.C:return 12;case s.mN.d:case s.mN.D:return 13;case s.mN.e:case s.mN.E:return 14;case s.mN.f:case s.mN.F:return 15}return 0}var g=i(5148),f=i(3620);const w="#f66a0a",v="#0a60f6",y=["#f66a0a","#ef6939","#e96950","#e26862","#db6871","#d3677e","#cc678a","#c46696","#bb66a0","#b365a9","#a965b3","#a064bb","#9664c4","#8a63cc","#7e63d3","#7162db","#6262e2","#5061e9","#3961ef","#0a60f6"];let b;function C(){if(null==b){const{coldColor:e,hotColor:t}=g.D.get("heatmap");let i;i=e===v&&t===w?y:function(e,t,i){const r=[],s=Color.from(e),n=Color.from(t);r.push(s.toString());const o=i-1;for(let e=1;e<o;e++){const t=s.mix(n,e/o);r.push(t.toString())}return r.push(n.toString()),r}(t,e,20),b={hot:i.slice(0,10),cold:i.slice(10,20)};const r=g.D.onDidChange((e=>{g.D.changed(e,["heatmap.ageThreshold","heatmap.hotColor","heatmap.coldColor"])&&(r.dispose(),b=void 0)}))}return b}function A(e,t,i){const[r,s,n,o]=R(t,i);e.renderOptions.before.borderColor=`rgba(${r},${s},${n},${o})`}function S(e,t,i,s){const[n,o,a,c]=R(e,t),{fadeLines:l,locations:h}=g.D.get("heatmap"),u=h.includes("gutter"),d=h.includes("line"),p=h.includes("overview"),m=`${n},${o},${a},${c}`;let f=s.get(m);return null==f?(f={decorationType:r.window.createTextEditorDecorationType({backgroundColor:d?`rgba(${n},${o},${a},${.15*c})`:void 0,opacity:l?`${t.computeOpacity(e).toFixed(2)} !important`:void 0,isWholeLine:!(!d&&!l)||void 0,gutterIconPath:u?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${n},${o},${a})' fill-opacity='${c}' x='8' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:u?"contain":void 0,overviewRulerLane:p?r.OverviewRulerLane.Center:void 0,overviewRulerColor:p?`rgba(${n},${o},${a},${.7*c})`:void 0}),rangesOrOptions:[i]},s.set(m,f)):f.rangesOrOptions.push(i),f.decorationType}function P(e,t,i,r){const o={renderOptions:{before:{...r}}};e.isUncommitted&&(o.renderOptions.before.color=r.uncommittedColor);const a=n.i.fromTemplate(t,e,i);return o.renderOptions.before.contentText=(0,f.vk)(a.replace(/ /g,s.NE.Space),1,1),o}function k(e,t,i,s,n){let o,a,c,l=0;for(const e of Object.values(n.tokenOptions))if(void 0!==e){if(null==e.truncateTo){l=-1;break}l+=e.truncateTo}if(l>=0&&(l+=(0,f.dz)((0,f.sX)(s,void 0)),l>0&&(l+=3)),t.enabled&&(o="solid",a="left"===t.location?"0 0 0 2px":"0 2px 0 0"),l>=0){const e=g.D.getAny("editor.letterSpacing");c=null!=e&&0!==e?`calc(${l}ch + ${Math.round(l*e)+(i?13:-6)}px)`:`calc(${l}ch ${i?"+ 13px":"- 6px"})`}return{backgroundColor:new r.ThemeColor("gitlens.gutterBackgroundColor"),borderStyle:o,borderWidth:a,color:new r.ThemeColor("gitlens.gutterForegroundColor"),fontWeight:"normal",fontStyle:"normal",height:"100%",margin:"0 26px -1px 0",textDecoration:`${e?"overline solid rgba(0, 0, 0, .2)":"none"};box-sizing: border-box${i?";padding: 0 0 0 18px":""}`,width:c,uncommittedColor:new r.ThemeColor("gitlens.gutterUncommittedForegroundColor")}}function D(e,t,i,o=!0){const a=n.i.fromTemplate(t,e,{...i,messageTruncateAtNewLine:!0});return{renderOptions:{after:{backgroundColor:new r.ThemeColor("gitlens.trailingLineBackgroundColor"),color:new r.ThemeColor("gitlens.trailingLineForegroundColor"),contentText:(0,f.vk)(a.replace(/ /g,s.NE.Space),1,1),fontWeight:"normal",fontStyle:"normal",textDecoration:"none;"+(o?"":" position: absolute;")}}}}function R(e,t){const i=t.computeRelativeAge(e),r=o((e.getTime()<t.coldThresholdTimestamp?t.colors.cold:t.colors.hot)[i]);return[...r??[0,0,0],null==r?0:0===i?1:i<=5?.8:.6]}},3139:(e,t,i)=>{i.d(t,{G:()=>v,P:()=>Autolinks});var r=i(9496),s=i(5255),n=i(8452),o=i(5148),a=i(7512),c=i(1219),l=i(8786),h=i(3105),u=i(4336),d=i(3620),p=Object.defineProperty,m=Object.getOwnPropertyDescriptor,g=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n),n};const f=Object.freeze(new Map),w=/<num>/g;function v(e){return{provider:e.provider?{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon}:void 0,id:e.id,prefix:e.prefix,title:e.title,url:e.url,type:e.type,description:e.description}}function y(e){return!("prefix"in e)&&!("url"in e)}function b(e){return"prefix"in e&&null!=e.prefix&&"url"in e&&null!=e.url}class Autolinks{constructor(e){this.container=e,this._disposable=r.Disposable.from(o.D.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged()}_disposable;_references=[];dispose(){this._disposable?.dispose()}onConfigurationChanged(e){if(o.D.changed(e,"autolinks")){const e=o.D.get("autolinks");this._references=e?.filter((e=>e.prefix&&e.url))?.map((e=>({prefix:e.prefix,url:e.url,title:e.title,alphanumeric:e.alphanumeric,ignoreCase:e.ignoreCase,type:e.type,description:e.description})))??[]}}getAutolinks(e,t,i){const r=[];if(t?.provider?.autolinks?.length&&r.push([t.provider,t.provider.autolinks]),!this._references.length||null!=t?.provider&&i?.excludeCustom||r.push([void 0,this._references]),0===r.length)return f;const s=new Map;let n,o;for(const[t,i]of r)for(const r of i)if(b(r))for(C(r,"plaintext");;){if(n=r.messageRegex.exec(e),null==n)break;[,,,o]=n,s.set(o,{provider:t,id:o,prefix:r.prefix,url:r.url?.replace(w,o),title:r.title?.replace(w,o),type:r.type,description:r.description?.replace(w,o)})}else y(r)&&r.parse(e,s);return s}async getEnrichedAutolinks(e,t){if("string"==typeof e&&(e=this.getAutolinks(e,t)),0===e.size)return;let i;if(t?.hasRichIntegration()){({provider:i}=t);(t.provider.maybeConnected??await t.provider.isConnected())||(i=void 0)}return new Map((0,h.UI)(e,(([e,t])=>[e,[null!=i&&t.provider?.id===i.id&&t.provider?.domain===i.domain?i.getIssueOrPullRequest(e,t.descriptor):void 0,t]])))}linkify(e,t,i,r,n,o){const a="plaintext"===t&&null==o;a&&(o=new Map);const c=new Map;for(const i of this._references)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,c,r,n,o));if(null!=i&&0!==i.length){i=[...i].sort(((e,t)=>{const i=e.provider?.maybeConnected,r=t.provider?.maybeConnected;return i!==r?i?-1:r?1:0:0}));for(const s of i)if(null!=s.provider)for(const i of s.provider.autolinks)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,c,r,n,o))}return 0!==c.size&&(e=e.replace(/(\x00\d+\x00)/g,((e,t)=>c.get(t)??t))),a&&o?.size&&(e+=`\n${s.NE.Dash.repeat(2)}\n${(0,h.v_)((0,h.UI)(o,(([e,t])=>`${(0,d.sC)(e)} ${t}`)),"\n")}`),e}ensureAutolinkCached(e){if(y(e))return!0;if(!e.prefix||!e.url)return!1;if(void 0!==e.tokenize||null===e.tokenize)return!0;try{e.tokenize=(t,i,r,o,c,h)=>{let u;switch(i){case"markdown":return C(e,i),t.replace(e.messageMarkdownRegex,((t,i,p,m)=>{const g=(0,l.M)(e.url.replace(w,m));let f="";if(e.title){f=` "${e.title.replace(w,m)}`;const t=o?.get(m)?.[0];if(null!=t?.value)if(t.paused){if(null!=h&&!c?.has(m)){let t=e.description?.replace(w,m);null==t&&(t=`Custom Autolink ${e.prefix}${m}`),u=h.size+1,h.set(u,`[${(0,n.sy)()} ${t} $(loading~spin)](${g}${f}")`)}f+=`\n${s.NE.Dash.repeat(2)}\nLoading...`}else{const e=t.value,i=(0,d.ry)(e.title.trim()),r=i.replace(/"/g,'\\"');null==h||c?.has(m)||(u=h.size+1,h.set(u,`[${(0,n.sy)(e)} **${i}**](${g}${f}")\\\n${s.NE.Space.repeat(5)}${p} ${e.state} ${(0,a.Zh)(e.closedDate??e.date)}`)),f+=`\n${s.NE.Dash.repeat(2)}\n${r}\n${(0,d.kC)(e.state)}, ${(0,a.Zh)(e.closedDate??e.date)}`}else if(null!=h&&!c?.has(m)){let t=e.description?.replace(w,m);null==t&&(t=`Custom Autolink ${e.prefix}${m}`),u=h.size+1,h.set(u,`[${(0,n.sy)()} ${t}](${g}${f}")`)}f+='"'}const v=`\0${r.size}\0`;return r.set(v,`[${p}](${g}${f})`),`${i}${v}`}));case"html":return C(e,i),t.replace(e.messageHtmlRegex,((t,i,p,m)=>{const g=(0,l.M)(e.url.replace(w,m));let f="";if(e.title){f=`"${(0,d.se)(e.title.replace(w,m))}`;const t=o?.get(m)?.[0];if(null!=t?.value)if(t.paused){if(null!=h&&!c?.has(m)){let t=e.description?.replace(w,m);null==t&&(t=`Custom Autolink ${e.prefix}${m}`),u=h.size+1,h.set(u,`<a href="${g}" title=${f}>${(0,n.Ty)()} ${t}</a>`)}f+=`\n${s.NE.Dash.repeat(2)}\nLoading...`}else{const e=t.value,i=(0,d.se)(e.title.trim()),r=i.replace(/"/g,"&quot;");null==h||c?.has(m)||(u=h.size+1,h.set(u,`<a href="${g}" title=${f}>${(0,n.Ty)(e)} <b>${i}</b></a><br /><span>${s.NE.Space.repeat(5)}${p} ${e.state} ${(0,a.Zh)(e.closedDate??e.date)}</span>`)),f+=`\n${s.NE.Dash.repeat(2)}\n${r}\n${(0,d.kC)(e.state)}, ${(0,a.Zh)(e.closedDate??e.date)}`}else if(null!=h&&!c?.has(m)){let t=e.description?.replace(w,m);null==t&&(t=`Custom Autolink ${e.prefix}${m}`),u=h.size+1,h.set(u,`<a href="${g}" title=${f}>${(0,n.Ty)()} ${t}</a>`)}f+='"'}const v=`\0${r.size}\0`;return r.set(v,`<a href="${g}" title=${f}>${p}</a>`),`${i}${v}`}));default:return C(e,i),t.replace(e.messageRegex,((e,t,i,n)=>{const l=o?.get(n)?.[0];if(null==l?.value)return i;null==h||c?.has(n)||(u=h.size+1,h.set(u,`${i}: ${l.paused?"Loading...":`${l.value.title}  ${s.NE.Dot}  ${(0,d.kC)(l.value.state)}, ${(0,a.Zh)(l.value.closedDate??l.value.date)}`}`));const p=`\0${r.size}\0`;return r.set(p,`${i}${(0,d.sC)(u)}`),`${t}${p}`}))}}}catch(t){u.Yd.error(t,`Failed to create autolink generator: prefix=${e.prefix}, url=${e.url}, title=${e.title}`),e.tokenize=null}return!0}}function C(e,t){return"markdown"===t&&null==e.messageMarkdownRegex?e.messageMarkdownRegex=new RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,d.yI)((0,d.se)((0,d.ry)(e.prefix)))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):"html"===t&&null==e.messageHtmlRegex?e.messageHtmlRegex=new RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,d.yI)((0,d.se)(e.prefix))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):null==e.messageRegex&&(e.messageRegex=new RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,d.yI)(e.prefix)}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g")),!0}g([(0,c.fF)({args:{0:"<message>",1:!1}})],Autolinks.prototype,"getAutolinks",1),g([(0,c.fF)({args:{0:e=>"string"==typeof e?"<message>":`autolinks=${e.size}`,1:e=>e?.remoteKey}})],Autolinks.prototype,"getEnrichedAutolinks",1),g([(0,c.fF)({args:{0:"<text>",2:e=>e?.length,3:e=>e?.size,4:e=>e?.size}})],Autolinks.prototype,"linkify",1)},8178:(e,t,i)=>{i.d(t,{d:()=>BlameAnnotationProviderBase});var r=i(9496),s=i(7462),n=i(1062),o=i(5148),a=i(1219),c=i(2022),l=i(248),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor;class BlameAnnotationProviderBase extends c.H{constructor(e,t,i,r){super(e,t,i),this.container=r,this.blame=this.container.git.getBlame(this.trackedDocument.uri,t.document),t.document.isDirty&&i.setForceDirtyStateChangeOnNextDocumentChange()}blame;hoverProviderDisposable;clear(){null!=this.hoverProviderDisposable&&(this.hoverProviderDisposable.dispose(),this.hoverProviderDisposable=void 0),super.clear()}async validate(){const e=await this.blame;return null!=e&&0!==e.lines.length}async getBlame(){const e=await this.blame;if(null!=e&&0!==e.lines.length)return e}getComputedHeatmap(e){const t=[];let i,r;for(const s of e.lines)r!==s.sha&&(r=s.sha,i=e.commits.get(s.sha),null!=i&&t.push(i.date));t.sort(((e,t)=>e.getTime()-t.getTime()));const s=new Date;s.setDate(s.getDate()-(o.D.get("heatmap.ageThreshold")||90));const n=s.getTime(),a=[],c=[];for(const e of t)e.getTime()<n?c.push(e):a.push(e);let h;h=a.length&&c.length?{hot:d(a),cold:d(c)}:d(t);const u=(e,t)=>Array.isArray(h)?h:t?h.hot.concat(h.cold):e.getTime()<n?h.cold:h.hot,p=(e,t)=>{const i=e.getTime();let r=0;for(let e=0;e<t.length&&(r=e,!(i>=t[e]));e++);return r};return{coldThresholdTimestamp:n,colors:(0,l.HM)(),computeRelativeAge:e=>p(e,u(e)),computeOpacity:e=>{const t=u(e,!0),i=p(e,t);return Math.max(.2,Math.round(100*(1-i/t.length))/100)}}}registerHoverProviders(e){const t=o.D.get("hovers");t.enabled&&t.annotations.enabled&&(e.details||e.changes)&&(this.hoverProviderDisposable=r.languages.registerHoverProvider({pattern:this.document.uri.fsPath},{provideHover:(t,i,r)=>this.provideHover(e,t,i,r)}))}async provideHover(e,t,i,a){if("line"!==o.D.get("hovers.annotations.over")&&0!==i.character)return;if(this.document.uri.toString()!==t.uri.toString())return;const c=await this.getBlame();if(null==c)return;const l=c.lines[i.line],h=c.commits.get(l.sha);if(null==h)return;const u=(await Promise.all([e.details?this.getDetailsHoverMessage(h,t):void 0,e.changes?(0,n.jw)(this.container,h,await s.YY.fromUri(t.uri),i.line,t):void 0])).filter((e=>Boolean(e)));return new r.Hover(u,t.validateRange(new r.Range(i.line,0,i.line,1073741824)))}async getDetailsHoverMessage(e,t){let i=this.editor.selection.active.line;const r=i+1;i=(e.lines.find((e=>e.line===r))??e.lines[0]).originalLine-1;const a=o.D.get("hovers");return(0,n.nN)(this.container,e,await s.YY.fromUri(t.uri),i,{autolinks:a.autolinks.enabled,dateFormat:o.D.get("defaultDateFormat"),format:a.detailsMarkdownFormat,pullRequests:a.pullRequests.enabled,timeout:250})}}function d(e){const t=[],i=Math.floor(e.length/2),r=e.length%2?e[i].getTime():(e[i-1].getTime()+e[i].getTime())/2;let s=(e[e.length-1].getTime()-r)/5;for(let e=5;e>0;e--)t.push(r+s*e);t.push(r);s=(r-e[0].getTime())/4;for(let e=1;e<=4;e++)t.push(r-s*e);return t}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&h(t,i,n)})([(0,a.cM)({args:!1})],BlameAnnotationProviderBase.prototype,"getComputedHeatmap",1)},623:(e,t,i)=>{i.d(t,{I:()=>p,f:()=>FileAnnotationController});var r=i(9496),s=i(5148),n=i(2061),o=i(2185),a=i(9796),c=i(3105),l=i(4336),h=i(3700),u=i(2509),d=i(2022);const p={gutterBlameAnnotation:r.window.createTextEditorDecorationType({rangeBehavior:r.DecorationRangeBehavior.ClosedOpen,textDecoration:"none"}),gutterBlameHighlight:void 0,changesLineChangedAnnotation:void 0,changesLineAddedAnnotation:void 0,changesLineDeletedAnnotation:void 0};class FileAnnotationController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,o.IH)(e.onReady)(this.onReady,this),s.D.onDidChange(this.onConfigurationChanged,this),r.window.onDidChangeActiveColorTheme(this.onThemeChanged,this)),this._toggleModes=new Map}_onDidToggleAnnotations=new r.EventEmitter;get onDidToggleAnnotations(){return this._onDidToggleAnnotations.event}_annotationsDisposable;_annotationProviders=new Map;_disposable;_editor;_keyboardScope=void 0;_toggleModes;_windowAnnotationType=void 0;dispose(){this.clearAll(),p.gutterBlameAnnotation?.dispose(),p.gutterBlameHighlight?.dispose(),p.changesLineChangedAnnotation?.dispose(),p.changesLineAddedAnnotation?.dispose(),p.changesLineDeletedAnnotation?.dispose(),this._annotationsDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){const t=null==e;let i;if(s.D.changed(e,["blame.highlight","changes.locations"])&&this.updateDecorations(!1),s.D.changed(e,"blame.toggleMode")&&(i=s.D.get("blame.toggleMode"),this._toggleModes.set("blame",i),t||"file"!==i||this.clearAll()),s.D.changed(e,"changes.toggleMode")&&(i=s.D.get("changes.toggleMode"),this._toggleModes.set("changes",i),t||"file"!==i||this.clearAll()),s.D.changed(e,"heatmap.toggleMode")&&(i=s.D.get("heatmap.toggleMode"),this._toggleModes.set("heatmap",i),t||"file"!==i||this.clearAll()),!t&&s.D.changed(e,["blame","changes","heatmap","hovers","defaultDateFormat","defaultDateSource","defaultDateStyle","defaultGravatarsStyle"]))for(const e of this._annotationProviders.values())null!=e&&this.show(e.editor,e.annotationType??"blame")}onThemeChanged(e){this.updateDecorations(!0)}async onActiveTextEditorChanged(e){if(null!=e&&!(0,u.PH)(e))return;if(this._editor=e,this.isInWindowToggle())return void await this.show(e,this._windowAnnotationType);const t=this.getProvider(e);null==t?((0,n.v)("gitlens:annotationStatus",void 0),this.detachKeyboardHook()):((0,n.v)("gitlens:annotationStatus",t.status),this.attachKeyboardHook())}onBlameStateChanged(e){if(e.blameable)return;const t=r.window.activeTextEditor;null!=t&&this.clear(t,"BlameabilityChanged")}onDirtyStateChanged(e){for(const[t,i]of this._annotationProviders)e.document.is(i.document)&&this.clearCore(t,"DocumentChanged")}onTextDocumentClosed(e){if(this.container.git.isTrackable(e.uri))for(const[t,i]of this._annotationProviders)i.document===e&&this.clearCore(t,"DocumentClosed")}onTextEditorViewColumnChanged(e){const t=this.getProvider(e.textEditor);if(null!=t)t.restore(e.textEditor);else{const t=(0,c.sE)(this._annotationProviders.values(),(t=>t.editor.document===e.textEditor.document));if(null==t)return;this.clearCore(t.correlationKey,"ColumnChanged")}}onVisibleTextEditorsChanged(e){for(const t of e)this.getProvider(t)?.restore(t)}isInWindowToggle(){return"window"===this.getToggleMode(this._windowAnnotationType)}getToggleMode(e){return null==e?"file":this._toggleModes.get(e)??"file"}clear(e,t="User"){return this.isInWindowToggle()?this.clearAll():this.clearCore((0,d.m)(e),t)}async clearAll(){this._windowAnnotationType=void 0;for(const[e]of this._annotationProviders)await this.clearCore(e,"Disposing")}async getAnnotationType(e){const t=this.getProvider(e);if(null==t)return;const i=await this.container.tracker.get(e.document);return null!=i&&i.isBlameable?t.annotationType:void 0}getProvider(e){if(null!=e?.document)return this._annotationProviders.get((0,d.m)(e))}async show(e,t,i){if("window"===this.getToggleMode(t)){let i=null==this._windowAnnotationType;const s=!i&&this._windowAnnotationType!==t;if(this._windowAnnotationType=t,s&&(await this.clearAll(),i=!0),i)for(const i of r.window.visibleTextEditors)i!==e&&this.show(i,t)}if(null==e)return!1;this._editor=e;if(!(await this.container.tracker.getOrAdd(e.document)).isBlameable)return!1;const s=this.getProvider(e);if(s?.annotationType===t)return await s.provideAnnotation(i),await s.selection(i?.selection),!0;return null!=await r.window.withProgress({location:r.ProgressLocation.Window},(async r=>{await(0,n.v)("gitlens:annotationStatus","computing");const o=this.showAnnotationsCore(s,e,t,i,r),a=await o;return e===this._editor&&await(0,n.v)("gitlens:annotationStatus",a?.status),o}))}async toggle(e,t,i,r){if(null!=e&&"file"===this._toggleModes.get(t)){const i=await this.container.tracker.getOrAdd(e.document);if("changes"===t&&!i.isTracked||!i.isBlameable)return!1}const s=this.getProvider(e);if(null==s)return this.show(e,t,i);const n=s.annotationType!==t||s.mustReopen(i);return!0===r&&!n||(this.isInWindowToggle()?await this.clearAll():await this.clearCore(s.correlationKey,"User"),!!n&&this.show(e,t,i))}async attachKeyboardHook(){null==this._keyboardScope&&(this._keyboardScope=await this.container.keyboard.beginScope({escape:{onDidPressKey:async()=>{const e=this._editor;null!=e&&await this.clear(e,"User")}}}))}async clearCore(e,t){const i=this._annotationProviders.get(e);null!=i&&(l.Yd.log(`${t}:`,`Clear annotations for ${e}`),this._annotationProviders.delete(e),i.dispose(),0!==this._annotationProviders.size&&e!==(0,d.m)(this._editor)||(await(0,n.v)("gitlens:annotationStatus",void 0),await this.detachKeyboardHook()),0===this._annotationProviders.size&&(l.Yd.log("Remove all listener registrations for annotations"),this._annotationsDisposable?.dispose(),this._annotationsDisposable=void 0),this._onDidToggleAnnotations.fire())}async detachKeyboardHook(){null!=this._keyboardScope&&(await this._keyboardScope.dispose(),this._keyboardScope=void 0)}async showAnnotationsCore(e,t,s,n,o){if(null!=o){let e="annotations";switch(s){case"blame":e="blame annotations";break;case"changes":e="changes annotations";break;case"heatmap":e="heatmap annotations"}o.report({message:`Computing ${e} for ${(0,h.EZ)(t.document.fileName)}`})}await this.attachKeyboardHook();const c=await this.container.tracker.getOrAdd(t.document);let u;switch(s){case"blame":{const{GutterBlameAnnotationProvider:e}=await Promise.resolve().then(i.bind(i,4455));u=new e(t,c,this.container);break}case"changes":{const{GutterChangesAnnotationProvider:e}=await Promise.resolve().then(i.bind(i,34));u=new e(t,c,this.container);break}case"heatmap":{const{GutterHeatmapBlameAnnotationProvider:e}=await Promise.resolve().then(i.bind(i,79));u=new e(t,c,this.container);break}}if(null!=u&&await u.validate()){if(null!=e&&await this.clearCore(e.correlationKey,"User"),null==this._annotationsDisposable&&0===this._annotationProviders.size&&(l.Yd.log("Add listener registrations for annotations"),this._annotationsDisposable=r.Disposable.from(r.window.onDidChangeActiveTextEditor((0,a.Ds)(this.onActiveTextEditorChanged,50),this),r.window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged,this),r.window.onDidChangeVisibleTextEditors((0,a.Ds)(this.onVisibleTextEditorsChanged,50),this),r.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this))),this._annotationProviders.set(u.correlationKey,u),await u.provideAnnotation(n))return this._onDidToggleAnnotations.fire(),u;await this.clearCore(u.correlationKey,"Disposing")}}updateDecorations(e){const t=e?Object.entries(p):void 0;if(this.updateHighlightDecoration(),this.updateChangedDecorations(),!e)return;const i=new Map;for(const[e,r]of t){if(null==r)continue;r!==(p[e]??null)&&i.set(r,p[e]??null)}if(0!==i.size)for(const e of r.window.visibleTextEditors)this.getProvider(e)?.refresh(i)}updateChangedDecorations(){p.changesLineAddedAnnotation?.dispose(),p.changesLineChangedAnnotation?.dispose(),p.changesLineDeletedAnnotation?.dispose();const e=s.D.get("changes.locations");let t,i,n;switch(r.window.activeColorTheme.kind){case r.ColorThemeKind.Light:t=[72,152,93],i=[32,144,211],n=[229,20,0];break;case r.ColorThemeKind.HighContrast:default:t=[72,126,2],i=[27,129,168],n=[241,76,76]}p.changesLineAddedAnnotation=r.window.createTextEditorDecorationType({backgroundColor:e.includes("line")?`rgba(${t.join(",")},0.4)`:void 0,isWholeLine:!!e.includes("line")||void 0,gutterIconPath:e.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${t.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:e.includes("overview")?new r.ThemeColor("editorOverviewRuler.addedForeground"):void 0}),p.changesLineChangedAnnotation=r.window.createTextEditorDecorationType({backgroundColor:e.includes("line")?`rgba(${i.join(",")},0.4)`:void 0,isWholeLine:!!e.includes("line")||void 0,gutterIconPath:e.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${i.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:e.includes("overview")?new r.ThemeColor("editorOverviewRuler.modifiedForeground"):void 0}),p.changesLineDeletedAnnotation=r.window.createTextEditorDecorationType({gutterIconPath:e.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><polygon fill='rgb(${n.join(",")})' points='13,10 13,18 17,14'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:e.includes("overview")?new r.ThemeColor("editorOverviewRuler.deletedForeground"):void 0})}updateHighlightDecoration(){p.gutterBlameHighlight?.dispose(),p.gutterBlameHighlight=void 0;const e=s.D.get("blame.highlight");if(e.enabled){const{locations:t}=e,i="#00bcf2",s=t.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='${i}' fill-opacity='0.6' x='7' y='0' width='3' height='18'/></svg>`)}`):void 0;p.gutterBlameHighlight=r.window.createTextEditorDecorationType({gutterIconPath:s,gutterIconSize:"contain",isWholeLine:!0,overviewRulerLane:r.OverviewRulerLane.Right,backgroundColor:t.includes("line")?new r.ThemeColor("gitlens.lineHighlightBackgroundColor"):void 0,overviewRulerColor:t.includes("overview")?new r.ThemeColor("gitlens.lineHighlightOverviewRulerColor"):void 0})}}}},4455:(e,t,i)=>{i.d(t,{GutterBlameAnnotationProvider:()=>GutterBlameAnnotationProvider});var r=i(9496),s=i(5255),n=i(9338),o=i(2800),a=i(5148),c=i(1219),l=i(3105),h=i(6004),u=i(6398),d=i(3620),p=i(248),m=i(8178),g=i(623),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),y=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&f(t,i,n),n};class GutterBlameAnnotationProvider extends m.d{constructor(e,t,i){super("blame",e,t,i)}clear(){if(super.clear(),null!=g.I.gutterBlameHighlight)try{this.editor.setDecorations(g.I.gutterBlameHighlight,[])}catch{}}async onProvideAnnotation(e,t){var i,o,c,l,m,f,w=[];try{const t=(0,h.UH)();this.annotationContext=e;const i=await this.getBlame();if(null==i)return!1;const o=((e,t,i)=>{if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");var r;if(i&&(r=t[v("asyncDispose")]),void 0===r&&(r=t[v("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t})(w,(0,u.k)(t)),c=a.D.get("blame"),l=(0,d.Gg)(c.format).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));let m;n.i.has(c.format,"tips")&&(m=await this.container.git.getBranchesAndTagsTipsFn(i.repoPath));const f={dateFormat:null===c.dateFormat?a.D.get("defaultDateFormat"):c.dateFormat,getBranchAndTagTips:m,tokenOptions:l},y=c.avatars,b=a.D.get("defaultGravatarsStyle"),C=c.separateLines,A=(0,p.Vz)(C,c.heatmap,c.avatars,c.format,f),S=[],P=new Map,k=y?new Map:void 0;let D,R,_,T,F=!1;c.heatmap.enabled&&(T=this.getComputedHeatmap(i));for(const e of i.lines){const t=e.line-1;if(_!==e.sha)F=!1,_=e.sha,D=i.commits.get(e.sha),null!=D&&(R=P.get(e.sha),null==R?(R=(0,p.U5)(D,c.format,f,A),null!=T&&(0,p.iF)(R,D.date,T),R.range=new r.Range(t,0,t,0),S.push(R),y&&null!=D.author.email&&await this.applyAvatarDecoration(D,R,b,k),P.set(e.sha,R)):(R={...R,range:new r.Range(t,0,t,0)},S.push(R)));else{if(null==R)continue;R={...R},c.compact&&!F&&(R.renderOptions={before:{...R.renderOptions.before,contentText:s.NE.Space.repeat((0,d.dz)(R.renderOptions.before.contentText))}},C&&(R.renderOptions.before.textDecoration="none;box-sizing: border-box"+(y?";padding: 0 0 0 18px":"")),F=!0),R.range=new r.Range(t,0,t,0),S.push(R)}}return o?.restart({suffix:" to compute gutter blame annotations"}),S.length&&(this.setDecorations([{decorationType:g.I.gutterBlameAnnotation,rangesOrOptions:S}]),o?.stop({suffix:" to apply all gutter blame annotations"})),this.registerHoverProviders(a.D.get("hovers.annotations")),!0}catch(e){var y=e,b=!0}finally{i=w,o=y,c=b,l="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},m=e=>o=c?new l(e,o,"An error was suppressed during disposal"):(c=!0,e),(f=e=>{for(;e=i.pop();)try{var t=e[1]&&e[1].call(e[2]);if(e[0])return Promise.resolve(t).then(f,(e=>(m(e),f())))}catch(e){m(e)}if(c)throw o})()}}async selection(e,t){if(!1===e||null==g.I.gutterBlameHighlight)return;if(null==t&&(t=await this.blame,!t?.lines.length))return;let i;if(null!=e?.sha)i=e.sha;else if(null!=e?.line){if(e.line>=0){const r=t.lines[e.line];i=r?.sha}}else i=(0,l.Ps)(t.commits.values())?.sha;if(!i)return void this.editor.setDecorations(g.I.gutterBlameHighlight,[]);const s=(0,o.DZ)(t.lines,(e=>e.sha===i?this.editor.document.validateRange(new r.Range(e.line-1,0,e.line-1,1073741824)):void 0));this.editor.setDecorations(g.I.gutterBlameHighlight,s)}async applyAvatarDecoration(e,t,i,r){let s=r.get(e.author.email??"");if(null==s){const t=(await e.getAvatarUri({defaultStyle:i,size:16})).toString(!0);s={contentText:"",height:"16px",width:"16px",textDecoration:`none;position:absolute;top:1px;left:5px;background:url(${encodeURI(t)});background-size:16px 16px;margin-left: 0 !important`},r.set(e.author.email??"",s)}t.renderOptions.after=s}}y([(0,c.cM)()],GutterBlameAnnotationProvider.prototype,"onProvideAnnotation",1),y([(0,c.cM)({args:!1})],GutterBlameAnnotationProvider.prototype,"selection",1)},34:(e,t,i)=>{i.d(t,{GutterChangesAnnotationProvider:()=>GutterChangesAnnotationProvider});var r=i(9496),s=i(1062),n=i(5148),o=i(1219),a=i(6004),c=i(7469),l=i(6398),h=i(2022),u=i(623),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,m=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e);const g=2**30;class GutterChangesAnnotationProvider extends h.H{constructor(e,t,i){super("changes",e,t),this.container=i}state;hoverProviderDisposable;mustReopen(e){return this.annotationContext?.sha!==e?.sha||this.annotationContext?.only!==e?.only}clear(){this.state=void 0,null!=this.hoverProviderDisposable&&(this.hoverProviderDisposable.dispose(),this.hoverProviderDisposable=void 0),super.clear()}selection(e){return Promise.resolve()}validate(){return Promise.resolve(!0)}async onProvideAnnotation(e){var t,i,s,n,o,h,d=[];try{const t=(0,a.UH)();this.mustReopen(e)&&this.clear(),this.annotationContext=e;let i,s=this.trackedDocument.uri.sha,n=null!=e?.sha&&e.sha!==s?`${e.sha}^`:void 0,o=null==s&&null==n;if(o){let e=await this.container.git.getOldestUnpushedRefForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri);if(null!=e)e=`${e}^`,i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:e}),null!=i?null!=n?n=e:(s=e,n=""):o=!1;else{const e=await this.container.git.getStatusForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri),t=e?.getPseudoCommits(this.container,await this.container.git.getCurrentUser(this.trackedDocument.uri.repoPath));t?.length?(i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri),s="HEAD"):this.trackedDocument.dirty?s="HEAD":o=!1}}if(!o){if(i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:n??s}),null==i)return!1;null!=n||(s=`${i.ref}^`),n=i.ref}const h=(await Promise.allSettled(null==n&&this.editor.document.isDirty?[this.container.git.getDiffForFileContents(this.trackedDocument.uri,s,this.editor.document.getText()),this.container.git.getDiffForFile(this.trackedDocument.uri,s,n)]:[this.container.git.getDiffForFile(this.trackedDocument.uri,s,n)])).map((e=>(0,c.Sb)(e))).filter((e=>Boolean(e)));if(!h?.length)return!1;const p=((e,t,i)=>{if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");var r;if(i&&(r=t[m("asyncDispose")]),void 0===r&&(r=t[m("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t})(d,(0,l.k)(t)),f=new Map,w=null!=e?.sha&&e?.only?await this.container.git.getBlame(this.trackedDocument.uri,this.editor?.document):void 0;let v;for(const t of h)for(const i of t.hunks){if(null!=w){let t=!0;const r=e.sha;for(let e=i.current.position.start-1;e<i.current.position.end;e++)w.lines[e]?.sha===r&&(t=!1);if(t)continue}for(const[e,t]of i.lines){if("unchanged"===t.state)continue;const i=this.editor.document.validateRange(new r.Range(new r.Position(e-1,0),new r.Position(e-1,g)));null==v&&(v=new r.Selection(i.start,i.end));let s=f.get(t.state);null==s?(s={decorationType:"added"===t.state?u.I.changesLineAddedAnnotation:"removed"===t.state?u.I.changesLineDeletedAnnotation:u.I.changesLineChangedAnnotation,rangesOrOptions:[{range:i}]},f.set(t.state,s)):s.rangesOrOptions.push({range:i})}}return p?.restart({suffix:" to compute recent changes annotations"}),f.size&&(this.setDecorations([...f.values()]),p?.stop({suffix:" to apply all recent changes annotations"}),null!=v&&!1!==e?.selection&&(this.editor.selection=v,this.editor.revealRange(v,r.TextEditorRevealType.InCenterIfOutsideViewport))),this.state={commit:i,diffs:h},this.registerHoverProvider(),!0}catch(e){var p=e,f=!0}finally{t=d,i=p,s=f,n="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},o=e=>i=s?new n(e,i,"An error was suppressed during disposal"):(s=!0,e),(h=e=>{for(;e=t.pop();)try{var r=e[1]&&e[1].call(e[2]);if(e[0])return Promise.resolve(r).then(h,(e=>(o(e),h())))}catch(e){o(e)}if(s)throw i})()}}registerHoverProvider(){const e=n.D.get("hovers");e.enabled&&e.annotations.enabled&&(this.hoverProviderDisposable=r.languages.registerHoverProvider({pattern:this.document.uri.fsPath},{provideHover:(e,t,i)=>this.provideHover(e,t,i)}))}async provideHover(e,t,i){if(null==this.state)return;if("line"!==n.D.get("hovers.annotations.over")&&0!==t.character)return;const{commit:o,diffs:a}=this.state;for(const i of a)for(const n of i.hunks){const i=n.previous.count>n.current.count;if(t.line>=n.current.position.start-1&&t.line<=n.current.position.end-(i?0:1)){const a=await(0,s.yq)(o,this.trackedDocument.uri,t.line,n);if(null==a)return;return new r.Hover(a,e.validateRange(new r.Range(n.current.position.start-1,0,n.current.position.end-(i?0:1),g)))}}}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&d(t,i,n)})([(0,o.cM)()],GutterChangesAnnotationProvider.prototype,"onProvideAnnotation",1)},79:(e,t,i)=>{i.d(t,{GutterHeatmapBlameAnnotationProvider:()=>GutterHeatmapBlameAnnotationProvider});var r=i(9496),s=i(1219),n=i(6004),o=i(6398),a=i(248),c=i(8178),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e);class GutterHeatmapBlameAnnotationProvider extends c.d{constructor(e,t,i){super("heatmap",e,t,i)}async onProvideAnnotation(e,t){var i,s,c,l,h,d,p=[];try{const t=(0,n.UH)();this.annotationContext=e;const i=await this.getBlame();if(null==i)return!1;const s=((e,t,i)=>{if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");var r;if(i&&(r=t[u("asyncDispose")]),void 0===r&&(r=t[u("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t})(p,(0,o.k)(t)),c=new Map,l=this.getComputedHeatmap(i);let h;for(const e of i.lines){const t=e.line-1;h=i.commits.get(e.sha),null!=h&&(0,a.Lx)(h.date,l,new r.Range(t,0,t,0),c)}return s?.restart({suffix:" to compute heatmap annotations"}),c.size&&(this.setDecorations([...c.values()]),s?.stop({suffix:" to apply all heatmap annotations"})),!0}catch(e){var m=e,g=!0}finally{i=p,s=m,c=g,l="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},h=e=>s=c?new l(e,s,"An error was suppressed during disposal"):(c=!0,e),(d=e=>{for(;e=i.pop();)try{var t=e[1]&&e[1].call(e[2]);if(e[0])return Promise.resolve(t).then(d,(e=>(h(e),d())))}catch(e){h(e)}if(c)throw s})()}}selection(e){return Promise.resolve()}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&l(t,i,n)})([(0,s.cM)()],GutterHeatmapBlameAnnotationProvider.prototype,"onProvideAnnotation",1)},8294:(e,t,i)=>{i.d(t,{AR:()=>ActionRunners,vj:()=>u});var r=i(9496),s=i(5255),n=i(9529),o=i(5148),a=i(2061),c=i(3620),l=i(2509);const h=["createPullRequest","openPullRequest","hover.commands"];const u="Built In";class ActionRunnerQuickPickItem{constructor(e,t){this.runner=e,this._label="string"==typeof e.label?e.label:e.label(t)}_label;get label(){return this._label}get detail(){return this.runner.name}}class NoActionRunnersQuickPickItem{runner;get label(){return"No actions were found"}get detail(){}}let d=0;class RegisteredActionRunner{constructor(e,t,i){this.type=e,this.runner=t,this.unregister=i,this.id=(1073741824===d?d=1:d++,d)}id;dispose(){this.unregister()}get name(){return this.runner.name}get label(){return this.runner.label}get order(){switch(this.type){case 0:return 0;case 1:return 1;case 2:return this.partnerId?1:2;case 3:return 3;default:return 100}}get partnerId(){return this.runner.partnerId}run(e){return this.runner.run(e)}}class ActionRunners{constructor(e){this.container=e;const t=[o.D.onDidChange((e=>{o.D.changed(e,"partners")&&this._updateAllContextKeys()}))];for(const e of h)t.push((0,n.xR)(`${s.Gh.ActionPrefix}${e}`,((e,t)=>this.run(e,t))));this._disposable=r.Disposable.from(...t)}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_actionRunners=new Map;_disposable;dispose(){this._disposable.dispose();for(const e of this._actionRunners.values())for(const t of e)t.dispose();this._actionRunners.clear()}count(e){return this.get(e)?.length??0}get(e){return t=o.D.get("partners"),null==(i=this._actionRunners.get(e))||0===i.length?void 0:null==t?i:i.filter((e=>null==e.partnerId||null!=e.partnerId&&!1!==t[e.partnerId]?.enabled));var t,i}has(e){return this.count(e)>0}register(e,t,i=2){let r=this._actionRunners.get(e);null==r&&(r=[],this._actionRunners.set(e,r));const s=e=>{this._updateContextKeys(e),this._onDidChange.fire(e)},n=this._actionRunners,o=new RegisteredActionRunner(i,t,(function(){if(1===r.length)n.delete(e),s(e);else{const e=r.indexOf(this);-1!==e&&r.splice(e,1)}}));return r.push(o),s(e),{dispose:()=>o.dispose()}}registerBuiltIn(e,t){return this.register(e,{...t,partnerId:void 0,name:u},0)}registerBuiltInPartner(e,t,i){return this.register(t,{...i,partnerId:e},1)}registerBuiltInPartnerInstaller(e,t,i){return this.register(t,{...i,partnerId:e,name:`${i.name} (Not Installed)`},3)}async run(e,t){let i,s=this.get(e.type);if(null!=s&&0!==s.length&&(null!=t&&(s=s.filter((e=>e.id===t))),0!==s.length)){if(s.length>1||s.every((e=>0!==e.type))){const t=s.sort(((e,t)=>e.order-t.order||(0,c.dm)(e.name,t.name))).map((t=>new ActionRunnerQuickPickItem(t,e)));0===t.length&&t.push(new NoActionRunnersQuickPickItem);const n=r.window.createQuickPick();n.ignoreFocusOut=(0,l.hE)();const o=[];try{const r=await new Promise((i=>{let r,s;switch(o.push(n.onDidHide((()=>i(void 0))),n.onDidAccept((()=>{0!==n.activeItems.length&&i(n.activeItems[0])}))),e.type){case"createPullRequest":r="Create Pull Request",s="Choose how to create a pull request";break;case"openPullRequest":r="Open Pull Request",s="Choose how to open the pull request";break;case"hover.commands":r="Need Help or Want to Collaborate?",s="Choose what you would like to do"}n.title=r,n.placeholder=s,n.matchOnDetail=!0,n.items=t,n.show()}));if(null==r)return;i=r.runner}finally{n.dispose(),o.forEach((e=>{e.dispose()}))}}else[i]=s;await(i?.run(e))}}async _updateContextKeys(e){await(0,a.v)(`gitlens:action:${e}`,this.count(e))}async _updateAllContextKeys(){for(const e of h)await this._updateContextKeys(e)}}},8388:(e,t,i)=>{i.d(t,{E3:()=>I,GV:()=>_,TU:()=>$,Wr:()=>O,cL:()=>f,oP:()=>A,x4:()=>S});var r=i(9496),s=i(4290),n=i(6894),o=i(2075),a=i(5148),c=i(2061),l=i(9796),h=i(3105),u=i(3620);const d=2**30;let p;const m=new Map,g=new r.EventEmitter;g.event((0,l.Ds)((()=>{const e=null!=p?[...(0,h.DZ)(p,(([e,t])=>null!=t.uri?[e,{uri:t.uri.toString(),timestamp:t.timestamp}]:void 0))]:void 0;n.W.instance.storage.store("avatars",e)}),1e3));const f=g.event,w="00000000000000000000000000000000",v=new Map,y=6e4,b=864e5,C=[6048e5,y,3e5,6e5,36e5,b,6048e5];function A(e,t,i){return P(e,t,i)}function S(e,t){return P(e,void 0,{...t,cached:!0})}function P(e,t,i){D(p);const o=2*(i?.size??16);if(!e){const e=k(`${w}:${o}`,void 0,o,w,i?.defaultStyle);return e.uri??e.fallback}const a=(0,s.FB)(e.trim().toLowerCase()),l=`${a}:${o}`,h=k(l,e,o,a,i?.defaultStyle);if(null!=h.uri)return h.uri;if(!i?.cached&&null!=t&&(0,c.fw)("gitlens:hasConnectedRemotes")){let i=m.get(l);return null==i&&function(e){return Date.now()>=e.timestamp+C[Math.min(e.retries,C.length-1)]}(h)&&(i=async function(e,t,i,o,{size:a=16}={}){D(p);try{let t;if("string"!=typeof o){const e=await n.W.instance.git.getBestRemoteWithRichProvider(o.repoPath);t=await(e?.provider.getAccountForCommit(o.ref,{avatarSize:a}))}return null==t?.avatarUrl?(e.uri=void 0,e.timestamp=d,void(e.retries=0)):(e.uri=r.Uri.parse(t.avatarUrl),e.timestamp=Date.now(),e.retries=0,null!=t.email&&(0,u.qq)(i,t.email)&&p.set(`${(0,s.FB)(t.email.trim().toLowerCase())}:${a}`,{...e}),g.fire({email:i}),e.uri)}catch{return e.uri=void 0,e.timestamp=Date.now(),void e.retries++}}(h,0,e,t,{size:o}).then((e=>e??h.uri??h.fallback)),m.set(l,i.finally((()=>m.delete(l))))),i??h.fallback}return i?.cached?h.uri:h.uri??h.fallback}function k(e,t,i,r,s){let n=p.get(e);return null==n?(n={uri:null!=t&&0!==t.length?T(t,i):void 0,fallback:R(r,i,s),timestamp:0,retries:0},p.set(e,n)):null==n.fallback&&(n.fallback=R(r,i,s)),n}function D(e){if(null==e){const e=n.W.instance.storage.get("avatars")?.map((([e,t])=>[e,{uri:r.Uri.parse(t.uri),timestamp:t.timestamp,retries:0}]));p=new Map(e)}}function R(e,t,i){return r.Uri.parse(`https://www.gravatar.com/avatar/${e}?s=${t}&d=${i??function(){null==x&&(x=a.D.get("defaultGravatarsStyle",void 0,"robohash"));return x}()}`)}function _(e,t,i){return R((0,s.FB)(e.trim().toLowerCase()),t,i)}function T(e,t=16){const i=(0,o.at)(e);if(null!=i&&(0,u.qq)(i.authority,"github.com"))return r.Uri.parse(`https://avatars.githubusercontent.com/${i.userId?`u/${i.userId}`:i.login}?size=${t}`)}const F=new Map([["online","#28ca42"],["away","#cecece"],["busy","#ca5628"],["dnd","#ca5628"],["offline","#cecece"]]);function $(e){let t=v.get(e);if(null==t){const i=(0,u.US)(`<?xml version="1.0" encoding="utf-8"?>\n<svg xmlns="http://www.w3.org/2000/svg" width="4" height="16" viewBox="0 0 4 16">\n\t<circle cx="2" cy="14" r="2" fill="${F.get(e)}"/>\n</svg>`);t=encodeURI(`data:image/svg+xml;base64,${i}`),v.set(e,t)}return t}function I(e){switch(e){case"all":n.W.instance.storage.delete("avatars"),p?.clear(),m.clear();break;case"failed":for(const e of p?.values()??[])null==e.uri&&(e.timestamp=0,e.retries=0);break;case"fallback":for(const e of p?.values()??[])e.fallback=void 0}}let x;function O(e){x=e,I("fallback")}},5183:(e,t,i)=>{i.d(t,{GitCodeLensProvider:()=>GitCodeLensProvider});var r=i(9496),s=i(2540),n=i(5255),o=i(6503),a=i(9529),c=i(5148),l=i(9796),h=i(3105),u=i(4336),d=i(3620),p=i(2509);class GitRecentChangeCodeLens extends r.CodeLens{constructor(e,t,i,r,s,n,o,a,c,l){super(a,l),this.languageId=e,this.symbol=t,this.uri=i,this.dateFormat=r,this.blame=s,this.blameRange=n,this.isFullRange=o,this.desiredCommand=c}getBlame(){return this.blame?.()}}class GitAuthorsCodeLens extends r.CodeLens{constructor(e,t,i,r,s,n,o,a){super(o),this.languageId=e,this.symbol=t,this.uri=i,this.blame=r,this.blameRange=s,this.isFullRange=n,this.desiredCommand=a}getBlame(){return this.blame()}}class GitCodeLensProvider{constructor(e){this.container=e}static selector=[{scheme:n.sN.File},{scheme:n.sN.Git},{scheme:n.sN.GitLens},{scheme:n.sN.PRs},{scheme:n.sN.Vsls},{scheme:n.sN.VslsScc},{scheme:n.sN.Virtual},{scheme:n.sN.GitHub}];_onDidChangeCodeLenses=new r.EventEmitter;get onDidChangeCodeLenses(){return this._onDidChangeCodeLenses.event}reset(e){this._onDidChangeCodeLenses.fire()}async provideCodeLenses(e,t){if(e.isDirty&&(0,p.pt)(e.uri))return[];const i=await this.container.tracker.getOrAdd(e);if(!i.isBlameable)return[];let s=!1;if(e.isDirty)if(i.isDirtyIdle){const t=c.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.lineCount>t&&(s=!0)}else s=!0;const n=c.D.get("codeLens",e);let o={...n.scopesByLanguage?.find((t=>t.language?.toLowerCase()===e.languageId))};null==o&&(o={language:e.languageId}),null==o.scopes&&(o.scopes=n.scopes),null==o.symbolScopes&&(o.symbolScopes=n.symbolScopes),o.symbolScopes=null!=o.symbolScopes?o.symbolScopes=o.symbolScopes.map((e=>e.toLowerCase())):[];const h=[],d=i.uri;let m,g;if(s){if(1!==o.scopes.length||!o.scopes.includes("document")){let t;if([t,g]=await Promise.all([this.container.git.isTracked(d),(0,a.dO)("vscode.executeDocumentSymbolProvider",e.uri)]),!t)return h}}else{if(t.isCancellationRequested)return h;if(1===o.scopes.length&&o.scopes.includes("document")?m=await this.container.git.getBlame(d,e):[m,g]=await Promise.all([this.container.git.getBlame(d,e),(0,a.dO)("vscode.executeDocumentSymbolProvider",e.uri)]),null==m||0===m?.lines.length)return h}if(t.isCancellationRequested)return h;const f=(0,l.IH)((()=>e.validateRange(new r.Range(0,0,1e6,1e6)))),w=s?{command:void 0,title:this.getDirtyTitle(n)}:void 0;if(void 0!==g){u.Yd.log("GitCodeLensProvider.provideCodeLenses:",`${g.length} symbol(s) found`);for(const t of g)this.provideCodeLens(h,e,t,o,f,m,d,n,s,w)}if((o.scopes.includes("document")||o.symbolScopes.includes("file"))&&!o.symbolScopes.includes("!file")&&null==h.find((e=>0===e.range.start.line&&0===e.range.end.line))){const t=f();let i;if(s||n.recentChange.enabled){s||(i=(0,l.IH)((()=>this.container.git.getBlameRange(m,d,t))));const o=new r.SymbolInformation(d.fileName,r.SymbolKind.File,"",new r.Location(d.documentUri(),new r.Range(0,0,0,t.start.character)));h.push(new GitRecentChangeCodeLens(e.languageId,o,d,n.dateFormat,i,t,!0,R(o),n.recentChange.command,w))}if(!s&&n.authors.enabled){void 0===i&&(i=(0,l.IH)((()=>this.container.git.getBlameRange(m,d,t))));const s=new r.SymbolInformation(d.fileName,r.SymbolKind.File,"",new r.Location(d.documentUri(),new r.Range(0,1,0,t.start.character)));h.push(new GitAuthorsCodeLens(e.languageId,s,d,i,t,!0,R(s),n.authors.command))}}return h}getValidateSymbolRange(e,t,i,s){let n,o=!1;const a=r.SymbolKind[e.kind].toLowerCase();switch(e.kind){case r.SymbolKind.File:(t.scopes.includes("containers")||t.symbolScopes.includes(a))&&(o=!t.symbolScopes.includes(`!${a}`)),o&&(n=i());break;case r.SymbolKind.Package:(t.scopes.includes("containers")||t.symbolScopes.includes(a))&&(o=!t.symbolScopes.includes(`!${a}`)),o&&(n=R(e),0===n.start.line&&0===n.end.line&&(n=i()));break;case r.SymbolKind.Class:case r.SymbolKind.Interface:case r.SymbolKind.Module:case r.SymbolKind.Namespace:case r.SymbolKind.Struct:(t.scopes.includes("containers")||t.symbolScopes.includes(a))&&(n=R(e),o=!t.symbolScopes.includes(`!${a}`)&&(s||!n.isSingleLine));break;case r.SymbolKind.Constructor:case r.SymbolKind.Enum:case r.SymbolKind.Function:case r.SymbolKind.Method:case r.SymbolKind.Property:(t.scopes.includes("blocks")||t.symbolScopes.includes(a))&&(n=R(e),o=!t.symbolScopes.includes(`!${a}`)&&(s||!n.isSingleLine));break;case r.SymbolKind.String:(t.symbolScopes.includes(a)||"markdown"===t.language&&t.scopes.includes("containers"))&&(n=R(e),o=!t.symbolScopes.includes(`!${a}`)&&(s||!n.isSingleLine));break;default:t.symbolScopes.includes(a)&&(n=R(e),o=!t.symbolScopes.includes(`!${a}`)&&(s||!n.isSingleLine))}return o?n??R(e):void 0}provideCodeLens(e,t,i,s,n,o,a,c,h,u){try{const d=this.getValidateSymbolRange(i,s,n,c.includeSingleLineSymbols);if(void 0===d)return;const p=t.lineAt(R(i).start);if(e.length&&e[e.length-1].range.start.line===p.lineNumber)return;let m,g=0;if((h||c.recentChange.enabled)&&(h||(m=(0,l.IH)((()=>this.container.git.getBlameRange(o,a,d)))),e.push(new GitRecentChangeCodeLens(t.languageId,i,a,c.dateFormat,m,d,!1,p.range.with(new r.Position(p.range.start.line,g)),c.recentChange.command,u)),g++),c.authors.enabled){let s=!d.isSingleLine;if(!s&&"csharp"===t.languageId)switch(i.kind){case r.SymbolKind.File:break;case r.SymbolKind.Package:case r.SymbolKind.Module:case r.SymbolKind.Namespace:case r.SymbolKind.Class:case r.SymbolKind.Interface:case r.SymbolKind.Constructor:case r.SymbolKind.Method:case r.SymbolKind.Function:case r.SymbolKind.Enum:s=!0}s&&!h&&(void 0===m&&(m=(0,l.IH)((()=>this.container.git.getBlameRange(o,a,d)))),e.push(new GitAuthorsCodeLens(t.languageId,i,a,m,d,!1,p.range.with(new r.Position(p.range.start.line,g)),c.authors.command)))}}finally{if(_(i))for(const r of i.children)this.provideCodeLens(e,t,r,s,n,o,a,c,h,u)}}resolveCodeLens(e,t){return e instanceof GitRecentChangeCodeLens?this.resolveGitRecentChangeCodeLens(e,t):e instanceof GitAuthorsCodeLens?this.resolveGitAuthorsCodeLens(e,t):Promise.reject(void 0)}resolveGitRecentChangeCodeLens(e,t){const i=e.getBlame();if(null==i)return D("Unknown, (Blame failed)",e);const n=(0,h.Ps)(i.commits.values());if(null==n)return D("Unknown, (Blame failed)",e);let o=`${n.author.name}, ${null==e.dateFormat?n.formattedDate:n.formatDate(e.dateFormat)}`;if(c.D.get("debug")&&(o+=` [${e.languageId}: ${r.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Commit (${n.shortSha})]`),!1===e.desiredCommand)return D(o,e);switch(e.desiredCommand){case s.N4.CopyRemoteCommitUrl:return g(o,e,n,!0);case s.N4.CopyRemoteFileUrl:return f(o,e,n,!0);case s.N4.DiffWithPrevious:return m(o,e,n);case s.N4.OpenCommitOnRemote:return g(o,e,n);case s.N4.OpenFileOnRemote:return f(o,e,n);case s.N4.RevealCommitInView:return w(o,e,n);case s.N4.ShowCommitsInView:return v(o,e,i,n);case s.N4.ShowQuickCommitDetails:return y(o,e,n);case s.N4.ShowQuickCommitFileDetails:return b(o,e,n);case s.N4.ShowQuickCurrentBranchHistory:return C(o,e);case s.N4.ShowQuickFileHistory:return A(o,e);case s.N4.ToggleFileBlame:return S(o,e);case s.N4.ToggleFileChanges:return P(o,e,n);case s.N4.ToggleFileChangesOnly:return P(o,e,n,!0);case s.N4.ToggleFileHeatmap:return k(o,e);default:return e}}resolveGitAuthorsCodeLens(e,t){const i=e.getBlame();if(null==i)return D("? authors (Blame failed)",e);const n=i.authors.size,o=(0,h.Ps)(i.authors.values())?.name??"Unknown";let a=`${(0,d._6)("author",n,{zero:"?"})} (${o}${n>1?" and others":""})`;if(c.D.get("debug")&&(a+=` [${e.languageId}: ${r.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Authors (${(0,h.v_)((0,h.UI)(i.authors.values(),(e=>e.name)),", ")})]`),!1===e.desiredCommand)return D(a,e);const l=(0,h.sE)(i.commits.values(),(e=>e.author.name===o))??(0,h.Ps)(i.commits.values());if(null==l)return D(a,e);switch(e.desiredCommand){case s.N4.CopyRemoteCommitUrl:return g(a,e,l,!0);case s.N4.CopyRemoteFileUrl:return f(a,e,l,!0);case s.N4.DiffWithPrevious:return m(a,e,l);case s.N4.OpenCommitOnRemote:return g(a,e,l);case s.N4.OpenFileOnRemote:return f(a,e,l);case s.N4.RevealCommitInView:return w(a,e,l);case s.N4.ShowCommitsInView:return v(a,e,i);case s.N4.ShowQuickCommitDetails:return y(a,e,l);case s.N4.ShowQuickCommitFileDetails:return b(a,e,l);case s.N4.ShowQuickCurrentBranchHistory:return C(a,e);case s.N4.ShowQuickFileHistory:return A(a,e);case s.N4.ToggleFileBlame:return S(a,e);case s.N4.ToggleFileChanges:return P(a,e,l);case s.N4.ToggleFileChangesOnly:return P(a,e,l,!0);case s.N4.ToggleFileHeatmap:return k(a,e);default:return e}}getDirtyTitle(e){return e.recentChange.enabled&&e.authors.enabled?c.D.get("strings.codeLens.unsavedChanges.recentChangeAndAuthors"):e.recentChange.enabled?c.D.get("strings.codeLens.unsavedChanges.recentChangeOnly"):c.D.get("strings.codeLens.unsavedChanges.authorsOnly")}}function m(e,t,i){return t.command=(0,a._N)({title:e,command:n.Gh.DiffWithPrevious,arguments:[void 0,{commit:i,uri:t.uri.toFileUri()}]}),t}function g(e,t,i,r=!1){return t.command=(0,a._N)({title:e,command:n.Gh.OpenOnRemote,arguments:[{resource:{type:o.J.Commit,sha:i.sha},repoPath:i.repoPath,clipboard:r}]}),t}function f(e,t,i,r=!1){return t.command=(0,a._N)({title:e,command:n.Gh.OpenOnRemote,arguments:[{resource:{type:o.J.Revision,fileName:i.file?.path??"",sha:i.sha},repoPath:i.repoPath,clipboard:r}]}),t}function w(e,t,i){return t.command=(0,a._N)({title:e,command:i?.isUncommitted?"":s.N4.RevealCommitInView,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}function v(e,t,i,r){let s;return s=void 0===r?[...(0,h.DZ)(i.commits.values(),(e=>e.isUncommitted?void 0:e.ref))]:[r.ref],t.command=(0,a._N)({title:e,command:0===s.length?"":n.Gh.ShowCommitsInView,arguments:[{repoPath:i.repoPath,refs:s}]}),t}function y(e,t,i){return t.command=(0,a._N)({title:e,command:i?.isUncommitted?"":s.N4.ShowQuickCommitDetails,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}function b(e,t,i){return t.command=(0,a._N)({title:e,command:i?.isUncommitted?"":s.N4.ShowQuickCommitFileDetails,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}function C(e,t){return t.command=(0,a._N)({title:e,command:s.N4.ShowQuickCurrentBranchHistory,arguments:[t.uri.toFileUri()]}),t}function A(e,t){return t.command=(0,a._N)({title:e,command:s.N4.ShowQuickFileHistory,arguments:[t.uri.toFileUri(),{range:t.isFullRange?void 0:t.blameRange}]}),t}function S(e,t){return t.command=(0,a._N)({title:e,command:n.Gh.ToggleFileBlame,arguments:[t.uri.toFileUri()]}),t}function P(e,t,i,r){return t.command=(0,a._N)({title:e,command:n.Gh.ToggleFileChanges,arguments:[t.uri.toFileUri(),{type:"changes",context:{sha:i.sha,only:r,selection:!1}}]}),t}function k(e,t){return t.command=(0,a._N)({title:e,command:n.Gh.ToggleFileHeatmap,arguments:[t.uri.toFileUri()]}),t}function D(e,t){return t.command={title:e,command:""},t}function R(e){return _(e)?e.range:e.location.range}function _(e){return(0,l.is)(e,"children")}},7139:(e,t,i)=>{i.d(t,{Bu:()=>T,C$:()=>k,DW:()=>P,E9:()=>b,F4:()=>S,Lk:()=>ActiveEditorCachedCommand,Mg:()=>y,O$:()=>A,P:()=>x,Qo:()=>w,SX:()=>g,WO:()=>F,_5:()=>_,_l:()=>EditorCommand,d$:()=>C,en:()=>v,jT:()=>f,l7:()=>R,l8:()=>E,mY:()=>Command,pT:()=>D,pu:()=>ActiveEditorCommand});var r=i(9496),s=i(5367),n=i(6450),o=i(1719),a=i(3050),c=i(3646),l=i(9502),h=i(1907),u=i(9529),d=i(9796),p=i(7707),m=i(2610);function g(e,t){return t?.document?.uri??e}function f(e){return"timeline-item:git"===e.type}function w(e){return"viewItem"===e.type&&(0,s.BF)(e.node.branch)}function v(e){return"viewItem"===e.type&&(0,n.f_)(e.node.commit)}function y(e){return"viewItem"===e.type&&o.V.is(e.node.contributor)}function b(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&(null!=t.file.repoPath||null!=t.repoPath)}function C(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&(0,n.f_)(t.commit)&&(null!=t.file.repoPath||null!=t.repoPath)}function A(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&null!=t.ref1&&null!=t.ref2&&(null!=t.file.repoPath||null!=t.repoPath)}function S(e){return"viewItem"===e.type&&("string"==typeof e.node.compareRef?.ref&&"string"==typeof e.node.compareWithRef?.ref)}function P(e){return"viewItem"===e.type&&e.node instanceof m.b&&e.node instanceof m.R}function k(e){return"viewItem"===e.type&&a.ss.is(e.node.remote)}function D(e){return"viewItem"===e.type&&e.node.repo instanceof c._j}function R(e){return"viewItem"===e.type&&"string"==typeof e.node.repoPath}function _(e){return"viewItem"===e.type&&(0,l.YR)(e.node.tag)}function T(e){if("viewItem"!==e.type)return!1;const t=e.node.workspace;return t instanceof h.CH||t instanceof h.qP}function F(e){return null!=e&&(null!=e.id&&null!=e.rootUri&&null!=e.inputBox&&null!=e.statusBarCommands)}function $(e){return null!=e&&(null!=e.id&&null!=e.label&&null!=e.resourceStates&&Array.isArray(e.resourceStates))}function I(e){return null!=e&&null!=e.resourceUri}class Command{static getMarkdownCommandArgsCore(e,t){return`command:${e}?${encodeURIComponent(JSON.stringify(t)).replace(/([()])/g,"\\$1")}`}contextParsingOptions={expectsEditor:!1};_disposable;constructor(e){if("string"==typeof e)return void(this._disposable=(0,u.xR)(e,((...t)=>this._execute(e,...t)),this));const t=e.map((e=>(0,u.xR)(e,((...t)=>this._execute(e,...t)),this)));this._disposable=r.Disposable.from(...t)}dispose(){this._disposable.dispose()}preExecute(e,...t){return this.execute(...t)}_execute(e,...t){const[i,r]=x(e,{...this.contextParsingOptions},...t);return Array.isArray(i)?(0,d.df)(this.preExecute,i.map((e=>[e,...r])),this):this.preExecute(i,...r)}}function x(e,t,...i){let s,n=i[0];if(t?.expectsEditor)if((null==n||null!=n.id&&null!=n.document?.uri)&&(s=n,n=(i=i.slice(1))[0]),i.length>0&&(null==n||n instanceof r.Uri)){const[t,...n]=i;if(null!=t){null!=s||t.toString()!==r.window.activeTextEditor?.document.uri.toString()&&!e.endsWith("InDiffLeft")||(s=r.window.activeTextEditor);const i=n[0];return null!=i&&Array.isArray(i)&&0!==i.length&&i[0]instanceof r.Uri?[{command:e,type:"uris",editor:s,uri:t,uris:i},n.slice(1)]:[{command:e,type:"uri",editor:s,uri:t},n]}i=i.slice(1)}else if(null==s){if(null!=n&&"object"==typeof n&&"lineNumber"in n&&"uri"in n){const[,...t]=i;return[{command:e,type:"editorLine",editor:void 0,line:n.lineNumber-1,uri:n.uri},t]}s=r.window.activeTextEditor}if(n instanceof p.Re){let[t,...r]=i;if(n=r[0],Array.isArray(n)&&n[0]instanceof p.Re){let i;[i,...r]=r;const s=[];for(const r of i)r?.constructor===t.constructor&&s.push({command:e,type:"viewItem",node:r,uri:r.uri});return[s,r]}return[{command:e,type:"viewItem",node:t,uri:t.uri},r]}if(I(n)){const t=[];let r=0;for(const e of i){if(!I(e))break;r++,t.push(e)}return[{command:e,type:"scm-states",scmResourceStates:t,uri:t[0].resourceUri},i.slice(r)]}if($(n)){const t=[];let r=0;for(const e of i){if(!$(e))break;r++,t.push(e)}return[{command:e,type:"scm-groups",scmResourceGroups:t},i.slice(r)]}if(null!=(o=n)&&function(e){return null!=e&&null!=e.timestamp&&null!=e.label}(o)&&null!=o.ref&&null!=o.previousRef&&null!=o.message){const[t,r,...s]=i;return[{command:e,type:"timeline-item:git",item:t,uri:r},s]}var o;if(F(n)){const[t,...r]=i;return[{command:e,type:"scm",scm:t},r]}return[{command:e,type:"unknown",editor:s,uri:s?.document.uri},i]}class ActiveEditorCommand extends Command{contextParsingOptions={expectsEditor:!0};preExecute(e,...t){return this.execute(e.editor,e.uri,...t)}_execute(e,...t){return super._execute(e,void 0,...t)}}let O;function E(){return O}class ActiveEditorCachedCommand extends ActiveEditorCommand{_execute(e,...t){return O={command:e,args:t},super._execute(e,...t)}}class EditorCommand{_disposable;constructor(e){Array.isArray(e)||(e=[e]);const t=[];for(const i of e)t.push(r.commands.registerTextEditorCommand(i,((e,t,...r)=>this.executeCore(i,e,t,...r)),this));this._disposable=r.Disposable.from(...t)}dispose(){this._disposable.dispose()}executeCore(e,t,i,...r){return this.execute(t,i,...r)}}},1848:(e,t,i)=>{i.d(t,{V:()=>g});var r=i(9496),s=i(5255),n=i(6450),o=i(439),a=i(4321),c=i(7925),l=i(9529),h=i(4336),u=i(3700),d=i(7139),p=Object.defineProperty,m=Object.getOwnPropertyDescriptor;let g=class extends d.mY{constructor(e){super(s.Gh.DiffWith),this.container=e}static getMarkdownCommandArgs(e,t){let i;if((0,n.f_)(e)){const r=e;if(null==r.file||null==r.unresolvedPreviousSha)throw new Error("Commit has no file");i=r.isUncommitted?{repoPath:r.repoPath,lhs:{sha:"HEAD",uri:r.file.uri},rhs:{sha:"",uri:r.file.uri},line:t}:{repoPath:r.repoPath,lhs:{sha:r.unresolvedPreviousSha,uri:r.file.originalUri??r.file.uri},rhs:{sha:r.sha,uri:r.file.uri},line:t}}else i=e;return super.getMarkdownCommandArgsCore(s.Gh.DiffWith,i)}async execute(e){if(null!=e?.lhs&&null!=e?.rhs&&null!=(e={...e,lhs:{...e.lhs},rhs:{...e.rhs},showOptions:null==e.showOptions?void 0:{...e.showOptions}}).repoPath)try{let t=e.lhs.sha,i=e.rhs.sha;if([e.lhs.sha,e.rhs.sha]=await Promise.all([await this.container.git.resolveReference(e.repoPath,e.lhs.sha,e.lhs.uri,{timeout:(0,a.yo)(e.lhs.sha)?100:void 0}),await this.container.git.resolveReference(e.repoPath,e.rhs.sha,e.rhs.uri,{timeout:(0,a.yo)(e.rhs.sha)?100:void 0})]),e.lhs.sha!==o.Ii&&(t=e.lhs.sha),e.rhs.sha&&e.rhs.sha!==o.Ii){const t=await this.container.git.getFileStatusForCommit(e.repoPath,e.rhs.uri,e.rhs.sha);"D"===t?.status?e.rhs.sha=o.Ii:i=e.rhs.sha,"A"===t?.status&&e.lhs.sha.endsWith("^")&&(e.lhs.sha=o.Ii)}const[n,c]=await Promise.all([this.container.git.getBestRevisionUri(e.repoPath,e.lhs.uri.fsPath,e.lhs.sha),this.container.git.getBestRevisionUri(e.repoPath,e.rhs.uri.fsPath,e.rhs.sha)]);let h=(0,a.zL)(i,{strings:{uncommitted:"Working Tree"}});null==c?h=(0,a.l3)(e.rhs.sha)?"deleted":0===h.length&&e.rhs.sha===o.Ii?"not in Working Tree":"deleted"+(0===h.length?"":` in ${h}`):null==n&&(h="added"+(0===h.length?"":` in ${h}`));let d=e.lhs.sha!==o.Ii?(0,a.zL)(t):"";null==n&&0===e.rhs.sha.length&&(null!=c?(d=0===d.length?"":`not in ${d}`,h=""):d="deleted"+(0===d.length?"":` in ${d}`)),null!=e.lhs.title||null==n&&0===d.length||(e.lhs.title=`${(0,u.EZ)(e.lhs.uri.fsPath)}${d?` (${d})`:""}`),null==e.rhs.title&&(e.rhs.title=`${(0,u.EZ)(e.rhs.uri.fsPath)}${h?` (${h})`:""}`);const p=null!=e.lhs.title&&null!=e.rhs.title?`${e.lhs.title} ${s.NE.ArrowLeftRightLong} ${e.rhs.title}`:e.lhs.title??e.rhs.title;null==e.showOptions&&(e.showOptions={}),null==e.showOptions.viewColumn&&(e.showOptions.viewColumn=r.ViewColumn.Active),null!=e.line&&0!==e.line&&(e.showOptions.selection=new r.Range(e.line,0,e.line,0)),await(0,l.dO)("vscode.diff",n??this.container.git.getRevisionUri(o.Ii,e.lhs.uri.fsPath,e.repoPath),c??this.container.git.getRevisionUri(o.Ii,e.rhs.uri.fsPath,e.repoPath),p,e.showOptions)}catch(e){h.Yd.error(e,"DiffWithCommand","getVersionedFile"),(0,c.W8)("Unable to open compare")}}};g=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n),n})([(0,l.WD)()],g)},2967:(e,t,i)=>{i.d(t,{K:()=>PickCommandStep,I:()=>ve});var r=i(5148),s=i(2061),n=i(9496),o=i(4321),a=i(3646);function c(e,t,i,r){return{...i,item:t,picked:l(e,t),context:r}}function l(e,t){return void 0===t?0===e.length:Array.isArray(t)?0===t.length?0===e.length:t.every((t=>e.includes(t))):e.includes(t)}var h=i(3620),u=i(4239),d=i(847);function p(e){if(!(e.repo instanceof a._j&&"create"===e.subcommand))throw new Error("Missing repository")}function m(e){if(!(e.repo instanceof a._j&&"delete"===e.subcommand))throw new Error("Missing repository")}function g(e){if(!(e.repo instanceof a._j&&"rename"===e.subcommand))throw new Error("Missing repository")}function f(e){if(!Array.isArray(e.references))throw new Error("Missing branches")}const w=new Map([["create","Create"],["delete","Delete"],["rename","Rename"]]);function v(e,t){return null==t?e:`${w.get(t)} ${e}`}class BranchGitCommand extends u.tR{subcommand;constructor(e,t){super(e,"branch","branch","Branch",{description:"create, rename, or delete branches"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t?.state.subcommand){case"create":case"rename":null!=t.state.reference&&i++,null!=t.state.name&&i++;break;case"delete":null==t.state.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&"rename"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={associatedView:this.container.branchesView,repos:this.container.git.openRepositories,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===u.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=v("delete"===e.subcommand?"Branches":this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)continue;e.repo=i}switch(e.subcommand){case"create":p(e),yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":m(e),yield*this.deleteCommandSteps(e,t);break;case"rename":g(e),yield*this.renameCommandSteps(e,t),e.name=void 0;break;default:(0,u.uZ)(e)}i&&e.counter--}return e.counter<0?u.Vd:void 0}*pickSubcommandStep(e){const t=(0,u.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new branch",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified branches",picked:"delete"===e.subcommand,item:"delete"},{label:"rename",description:"renames the specified branch",picked:"rename"===e.subcommand,item:"rename"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,u.i9)(t,e,i)?i[0].item:u.Vd}async*createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new branch from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:(0,o.FT)(e.reference)?e.reference.ref:void 0});if(i===u.Vd)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*(0,d.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:e.name??(0,o.Av)(e.reference)});if(i===u.Vd)continue;e.name=i}if(this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===u.Vd)continue;e.flags=i}(0,u.uZ)(e),e.flags.includes("--switch")?await e.repo.switch(e.reference.ref,{createBranch:e.name}):e.repo.branch(...e.flags,e.name,e.reference.ref)}}*createCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will create a new branch named ${e.name} from ${(0,o.Wh)(e.reference)}`}),c(e.flags,["--switch"],{label:`${t.title} and Switch`,description:"--switch",detail:`Will create and switch to a new branch named ${e.name} from ${(0,o.Wh)(e.reference)}`})],t),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}async*deleteCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||Array.isArray(e.references)&&0===e.references.length){t.title=v("Branches",e.subcommand);const i=yield*(0,d.FO)(e,t,{filter:e=>!e.current,picked:e.references?.map((e=>e.ref)),placeholder:"Choose branches to delete",sort:{current:!1,missingUpstream:!0}});if(i===u.Vd)break;e.references=i}t.title=v((0,h._6)("Branch",e.references.length,{only:!0,plural:"Branches"}),e.subcommand),f(e);const i=yield*this.deleteCommandConfirmStep(e,t);i!==u.Vd&&(e.flags=i,(0,u.uZ)(e),e.repo.branchDelete(e.references,{force:e.flags.includes("--force"),remote:e.flags.includes("--remotes")}))}}*deleteCommandConfirmStep(e,t){const i=[c(e.flags,[],{label:t.title,detail:`Will delete ${(0,o.Wh)(e.references)}`})];e.references.every((e=>e.remote))||(i.push(c(e.flags,["--force"],{label:`Force ${t.title}`,description:"--force",detail:`Will forcibly delete ${(0,o.Wh)(e.references)}`})),e.references.some((e=>null!=e.upstream))&&i.push(c(e.flags,["--remotes"],{label:`${t.title} & Remote${e.references.filter((e=>!e.remote)).length>1?"s":""}`,description:"--remotes",detail:`Will delete ${(0,o.Wh)(e.references)} and any remote tracking branches`}),c(e.flags,["--force","--remotes"],{label:`Force ${t.title} & Remote${e.references.filter((e=>!e.remote)).length>1?"s":""}`,description:"--force --remotes",detail:`Will forcibly delete ${(0,o.Wh)(e.references)} and any remote tracking branches`})));const r=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),i,t),s=yield r;return(0,u.i9)(r,e,s)?s[0].item:u.Vd}async*renameCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.sd)(e,t,{filter:e=>!e.remote,picked:e.reference?.ref,placeholder:"Choose a branch to rename"});if(i===u.Vd)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*(0,d.f6)(e,t,{placeholder:`Please provide a new name for ${(0,o.Wh)(e.reference,{icon:!1})}`,titleContext:` ${(0,o.Wh)(e.reference,!1)}`,value:e.name??e.reference.name});if(i===u.Vd)continue;e.name=i}const i=yield*this.renameCommandConfirmStep(e,t);i!==u.Vd&&(e.flags=i,(0,u.uZ)(e),e.repo.branch(...e.flags,e.reference.ref,e.name))}}*renameCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,["-m"],{label:t.title,detail:`Will rename ${(0,o.Wh)(e.reference)} to ${e.name}`})],t),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}}class CherryPickGitCommand extends u.tR{constructor(e,t){super(e,"cherry-pick","cherry-pick","Cherry Pick",{description:"integrates changes from specified commits into the current branch"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.cherryPick(...e.flags,...e.references.map((e=>e.ref)).reverse())}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"cherry"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${(0,o.Wh)(t.destination,{icon:!1})}`,e.counter<2||null==e.references||0===e.references.length){const r=yield*(0,d.Yv)(e,t,{filter:{branches:e=>e.id!==t.destination.id},placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to cherry-pick from`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.references?.[0]?.ref:void 0});if(r===u.Vd){i&&e.counter--;continue}(0,o.FT)(r)?(e.references=[r],t.selectedBranchOrTag=void 0):t.selectedBranchOrTag=r}if(e.counter<3&&null!=t.selectedBranchOrTag){const i=(0,o.oI)(t.destination.ref,t.selectedBranchOrTag.ref);let r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:"first-parent"}),t.cache.set(i,r));const s=yield*(0,d.Rj)(e,t,{log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),picked:e.references?.map((e=>e.ref)),placeholder:(e,t)=>null==t?`No pickable commits found on ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose commits to cherry-pick into ${(0,o.Wh)(e.destination,{icon:!1})}`});if(s===u.Vd)continue;e.references=s}if(this.confirm(e.confirm)){const i=yield*this.confirmStep(e,t);if(i===u.Vd)continue;e.flags=i}(0,u.uZ)(e),this.execute(e)}return e.counter<0?u.Vd:void 0}*confirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will apply ${(0,o.Wh)(e.references)} to ${(0,o.Wh)(t.destination)}`}),c(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will edit and apply ${(0,o.Wh)(e.references)} to ${(0,o.Wh)(t.destination)}`}),c(e.flags,["--no-commit"],{label:`${this.title} without Committing`,description:"--no-commit",detail:`Will apply ${(0,o.Wh)(e.references)} to ${(0,o.Wh)(t.destination)} without Committing`})],t),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}}var y=i(9529),b=i(3700);class CoAuthorsGitCommand extends u.tR{constructor(e,t){super(e,"co-authors","co-authors","Add Co-Authors",{description:"adds co-authors to a commit message"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.contributors||Array.isArray(t.state.contributors)&&0===t.state.contributors.length||i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async execute(e){const t=await this.container.git.getOrOpenScmRepository(e.repo.path);if(null==t)return;let i=t.inputBox.value;const r=i.indexOf("Co-authored-by: ");-1!==r&&(i=i.substring(0,r-1).trimRight()),null==e.contributors||Array.isArray(e.contributors)||(e.contributors=[e.contributors]);for(const t of e.contributors){let e;e=i.includes("Co-authored-by: ")?"\n":0!==i.length&&i.endsWith("\n")?"\n\n":"\n\n\n",i+=`${e}Co-authored-by: ${t.getCoauthor()}`}t.inputBox.value=i,await(0,y.dO)("workbench.view.scm")}async*steps(e){const t={repos:this.container.git.openRepositories,activeRepo:void 0,associatedView:this.container.contributorsView,title:this.title},i=await this.container.git.getOpenScmRepositories();i.length&&(t.repos=t.repos.filter((e=>i.find((t=>(0,b.AH)(t.rootUri.fsPath)===e.path)))),t.activeRepo=await this.container.git.getOrOpenRepositoryForEditor(),null==t.activeRepo||i.some((e=>e.rootUri.fsPath===t.activeRepo.path))||(t.activeRepo=void 0));let r=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(r=!1,1===t.repos.length)r=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(e.counter<2||null==e.contributors){const i=yield*(0,d.bR)(e,t,"Choose contributors to add as co-authors");if(i===u.Vd){r&&e.counter--;continue}e.contributors=i}(0,u.uZ)(e),this.execute(e)}return e.counter<0?u.Vd:void 0}}var C=i(5255),A=i(2800),S=i(7512);class FetchGitCommand extends u.tR{constructor(e,t){super(e,"fetch","fetch","Fetch",{description:"fetches changes from one or more remotes"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){return(0,o.UR)(e.reference)?e.repos[0].fetch({branch:e.reference}):this.container.git.fetchAll(e.repos,{all:e.flags.includes("--all"),prune:e.flags.includes("--prune")})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===u.Vd)break;e.repos=i}if(this.confirm(e.confirm)){const r=yield*this.confirmStep(e,t);if(r===u.Vd){i&&e.counter--;continue}e.flags=r}(0,u.uZ)(e),this.execute(e)}return e.counter<0?u.Vd:void 0}async*confirmStep(e,t){let i,r="";if(1===e.repos.length){const t=await e.repos[0].getLastFetched();0!==t&&(r=`${(0,h.vk)(C.NE.Dot,2,2)}Last fetched ${(0,S.Zh)(new Date(t))}`)}if(1===e.repos.length&&(0,o.UR)(e.reference))i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t,r),[c(e.flags,[],{label:this.title,detail:`Will fetch ${(0,o.Wh)(e.reference)}`})]);else{const s=1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`;i=(0,u.Tv)((0,d.C8)(`Confirm ${this.title}`,e,t,r),[c(e.flags,[],{label:this.title,detail:`Will fetch ${s}`}),c(e.flags,["--prune"],{label:`${this.title} & Prune`,description:"--prune",detail:`Will fetch and prune ${s}`}),c(e.flags,["--all"],{label:`${this.title} All`,description:"--all",detail:`Will fetch all remotes of ${s}`}),c(e.flags,["--all","--prune"],{label:`${this.title} All & Prune`,description:"--all --prune",detail:`Will fetch and prune all remotes of ${s}`})],t)}const s=yield i;return(0,u.i9)(i,e,s)?s[0].item:u.Vd}}var P=i(6897),k=i(6450),D=i(1774);function R(e){if(!(e.repo instanceof a._j))throw new Error("Missing repository")}class LogGitCommand extends u.tR{constructor(e,t){super(e,"log","history","Commits",{description:"aka log, shows commit history"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&(i++,"HEAD"!==t.state.reference&&(0,o.FT)(t.state.reference)&&!(0,o.Nn)(t.state.reference)&&i++),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"log"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,selectedBranchOrTag:void 0,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(R(e),"HEAD"===e.reference){const t=await e.repo.getBranch();e.reference=t}if(e.counter<2||null==e.reference){const r=yield*(0,d.Yv)(e,t,{placeholder:"Choose a branch or tag to show its commit history",picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,ranges:!0});if(r===u.Vd){i&&e.counter--;continue}e.reference=r,t.selectedBranchOrTag=void 0}if((0,o.FT)(e.reference)&&!(0,o.Nn)(e.reference)||(t.selectedBranchOrTag=e.reference),t.title=`${this.title}${(0,h.vk)(C.NE.Dot,2,2)}${(0,o.Wh)(t.selectedBranchOrTag,{icon:!1})}`,e.fileName&&(t.title+=`${(0,h.vk)(C.NE.Dot,2,2)}${(0,D.d)(e.fileName,{fileOnly:!0,truncateTo:C.d$-t.title.length-3})}`),e.counter<3&&null!=t.selectedBranchOrTag){const i=t.selectedBranchOrTag.ref;let r=t.cache.get(i);null==r&&(r=null!=e.fileName?this.container.git.getLogForFile(e.repo.path,e.fileName,{ref:i}):this.container.git.getLog(e.repo.path,{ref:i}),t.cache.set(i,r));const s=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found in ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:"Choose a commit",picked:e.reference?.ref});if(s===u.Vd)continue;e.reference=s}let r;e.reference instanceof k.aM&&null==e.reference.file||(e.reference=await this.container.git.getCommit(e.repo.path,e.reference.ref)),e.openPickInView?((0,P.Fw)(e.reference,{pin:!1,preserveFocus:!1}),r=u.Vd):r=yield*ve(this.container,{command:"show",state:{repo:e.repo,reference:e.reference,fileName:e.fileName}},this.pickedVia),e.counter--,r===u.Vd&&(0,u.uZ)(e)}return e.counter<0?u.Vd:void 0}}var _=i(3599),T=i(3016);class MergeGitCommand extends u.tR{constructor(e,t){super(e,"merge","merge","Merge",{description:"integrates changes from a specified branch into the current branch"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.merge(...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${(0,o.Wh)(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){const r=new T.v_(t.pickCommit,t,(()=>{t.pickCommit=!t.pickCommit,r.on=t.pickCommit})),s=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to merge`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[r]});if(s===u.Vd){i&&e.counter--;continue}e.reference=s,t.selectedBranchOrTag=void 0}if((0,o.FT)(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){const i=t.selectedBranchOrTag.ref;let r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:"first-parent"}),t.cache.set(i,r));const s=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to merge into ${(0,o.Wh)(e.destination,{icon:!1})}`,picked:e.reference?.ref});if(s===u.Vd)continue;e.reference=s}const r=yield*this.confirmStep(e,t);r!==u.Vd&&(e.flags=r,(0,u.uZ)(e),this.execute(e))}return e.counter<0?u.Vd:void 0}async*confirmStep(e,t){const i=await this.container.git.getAheadBehindCommitCount(e.repo.path,[(0,o.oI)(t.destination.name,e.reference.name)]),r=null!=i?i.ahead+i.behind:0;if(0===r){const i=this.createConfirmStep((0,d.C8)(t.title,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"OK",detail:`${(0,o.Wh)(t.destination,{capitalize:!0})} is already up to date with ${(0,o.Wh)(e.reference)}`}),{placeholder:`Nothing to merge; ${(0,o.Wh)(t.destination,{label:!1,icon:!1})} is already up to date`}),r=yield i;return(0,u.i9)(i,e,r),u.Vd}const s=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will merge ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)}`}),c(e.flags,["--ff-only"],{label:`Fast-forward ${this.title}`,description:"--ff-only",detail:`Will fast-forward merge ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)}`}),c(e.flags,["--squash"],{label:`Squash ${this.title}`,description:"--squash",detail:`Will squash ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into one when merging into ${(0,o.Wh)(t.destination)}`}),c(e.flags,["--no-ff"],{label:`${this.title} without Fast-Forwarding`,description:"--no-ff",detail:`Will create a merge commit when merging ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)}`}),c(e.flags,["--no-ff","--no-commit"],{label:`${this.title} without Fast-Forwarding or Committing`,description:"--no-ff --no-commit",detail:`Will merge ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)} without Committing`})]),n=yield s;return(0,u.i9)(s,e,n)?n[0].item:u.Vd}}var F=i(5367);class PullGitCommand extends u.tR{constructor(e,t){super(e,"pull","pull","Pull",{description:"fetches and integrates changes from a remote into the current branch"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){if((0,o.UR)(e.reference)&&(!(0,F.BF)(e.reference)||!e.reference.current)){const t=await e.repos[0].getBranch();if(t?.name!==e.reference.name)return e.repos[0].fetch({branch:e.reference,pull:!0})}return this.container.git.pullAll(e.repos,{rebase:e.flags.includes("--rebase")})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===u.Vd)break;e.repos=i}if(this.confirm(e.confirm)){const r=yield*this.confirmStep(e,t);if(r===u.Vd){i&&e.counter--;continue}e.flags=r}(0,u.uZ)(e),this.execute(e)}return e.counter<0?u.Vd:void 0}async*confirmStep(e,t){let i;if(e.repos.length>1)i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will pull ${e.repos.length} repositories`}),c(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull ${e.repos.length} repositories by rebasing`})]);else if((0,o.UR)(e.reference))if(e.reference.remote)i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a remote branch"}));else{const[r]=e.repos,s=await r.getBranch(e.reference.name);i=null==s?.upstream?this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a branch until it has been published"})):this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:"Will pull"+(s.state.behind?` ${(0,h._6)("commit",s.state.behind)} into ${(0,o.Wh)(s)}`:` into ${(0,o.Wh)(s)}`)})])}else{const[r]=e.repos,[s,n]=await Promise.all([r.getStatus(),r.getLastFetched()]);let o="";0!==n&&(o=`${(0,h.vk)(C.NE.Dot,2,2)}Last fetched ${(0,S.Zh)(new Date(n))}`);const a=null!=s?.state.behind?` ${(0,h._6)("commit",s.state.behind)} into $(repo) ${r.formattedName}`:` into $(repo) ${r.formattedName}`;i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t,o),[c(e.flags,[],{label:this.title,detail:`Will pull${a}`}),c(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull and rebase${a}`})],void 0,{additionalButtons:[T.My],onDidClickButton:async(e,i)=>{if(i!==T.My||e.busy)return!1;e.title=`Confirm ${t.title}${(0,h.vk)(C.NE.Dot,2,2)}Fetching${C.NE.Ellipsis}`,e.busy=!0;try{return await r.fetch({progress:!0}),!0}finally{e.busy=!1}}})}const r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}}var $=i(8887);class PushGitCommand extends u.tR{constructor(e,t){super(e,"push","push","Push",{description:"pushes changes from the current branch to a remote"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){const t=e.flags.indexOf("--set-upstream");return-1!==t?this.container.git.pushAll(e.repos,{force:!1,publish:{remote:e.flags[t+1]},reference:e.reference}):this.container.git.pushAll(e.repos,{force:e.flags.includes("--force"),reference:e.reference})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else if(null!=e.reference){const i=yield*(0,d.lA)({...e,repos:void 0,repo:e.reference.repoPath},t);if(i===u.Vd)break;e.repos=[i]}else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===u.Vd)break;e.repos=i}if(this.confirm(e.confirm)){const r=yield*this.confirmStep(e,t);if(r===u.Vd){i&&e.counter--;continue}e.flags=r}(0,u.uZ)(e),this.execute(e)}return e.counter<0?u.Vd:void 0}async*confirmStep(e,t){const i=r.D.getAny("git.useForcePushWithLease")??!0,s=i&&(r.D.getAny("git.useForcePushIfIncludes")??!0)&&await this.container.git.supports(e.repos[0].uri,$.A.ForceIfIncludes);let n;if(e.repos.length>1)n=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will push ${e.repos.length} repositories`}),c(e.flags,["--force"],{label:`Force ${this.title}${s?" (with lease and if includes)":i?" (with lease)":""}`,description:"--force"+(i?"-with-lease"+(s?" --force-if-includes":""):""),detail:`Will force push${s?" (with lease and if includes)":i?" (with lease)":""} ${e.repos.length} repositories`})]);else{const[r]=e.repos,a=[];if((0,o.UR)(e.reference))if(e.reference.remote)n=this.createConfirmStep((0,d.C8)(t.title,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"OK",detail:"Cannot push a remote branch"}),{placeholder:"Cannot push a remote branch"});else{const l=await r.getBranch(e.reference.name);if(null!=l&&null==l?.upstream){for(const t of await r.getRemotes())a.push(c(e.flags,["--set-upstream",t.name,l.name],{label:`Publish ${l.name} to ${t.name}`,detail:`Will publish ${(0,o.Wh)(l)} to ${t.name}`}));n=a.length?this.createConfirmStep((0,d.C8)("Confirm Publish",e,t),a,void 0,{placeholder:"Confirm Publish"}):this.createConfirmStep((0,d.C8)("Publish",e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"OK",detail:"No remotes found"}),{placeholder:"Cannot publish; No remotes found"})}else n=null!=l&&l?.state.behind>0?this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,["--force"],{label:`Force ${this.title}${s?" (with lease and if includes)":i?" (with lease)":""}`,description:"--force"+(i?"-with-lease"+(s?" --force-if-includes":""):""),detail:`Will force push${s?" (with lease and if includes)":i?" (with lease)":""} ${l?.state.ahead?` ${(0,h._6)("commit",l.state.ahead)}`:""}${l.getRemoteName()?` to ${l.getRemoteName()}`:""}${null!=l&&l.state.behind>0?`, overwriting ${(0,h._6)("commit",l.state.behind)}${l?.getRemoteName()?` on ${l.getRemoteName()}`:""}`:""}`})],(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${(0,o.Wh)(l)} is behind ${l.getRemoteName()} by ${(0,h._6)("commit",l.state.behind)}`})):null!=l&&l?.state.ahead>0?this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[l.getRemoteName()],{label:this.title,detail:`Will push ${(0,h._6)("commit",l.state.ahead)} from ${(0,o.Wh)(l)} to ${l.getRemoteName()}`})]):this.createConfirmStep((0,d.C8)(t.title,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"OK",detail:"No commits found to push"}),{placeholder:"Nothing to push; No commits found to push"})}else{const l=await r.getStatus(),u={refType:"branch",name:l?.branch??"HEAD",ref:l?.branch??"HEAD",remote:!1,repoPath:r.path};if(0===l?.state.ahead){if(!(0,o.UR)(e.reference)&&null==l.upstream){let t;null!=e.reference?t=` up to and including ${(0,o.Wh)(e.reference,{label:!1})}`:(e.reference=u,t="");for(const i of await r.getRemotes())a.push(c(e.flags,["--set-upstream",i.name,l.branch],{label:`Publish ${u.name} to ${i.name}`,detail:`Will publish ${(0,o.Wh)(u)}${t} to ${i.name}`}))}n=a.length?this.createConfirmStep((0,d.C8)("Confirm Publish",e,t),a,void 0,{placeholder:"Confirm Publish"}):null==l.upstream?this.createConfirmStep((0,d.C8)("Publish",e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"OK",detail:"No remotes found"}),{placeholder:"Cannot publish; No remotes found"}):this.createConfirmStep((0,d.C8)(t.title,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"OK",detail:`No commits ahead of ${(0,F.Lo)(l.upstream)}`}),{placeholder:`Nothing to push; No commits ahead of ${(0,F.Lo)(l.upstream)}`})}else{let a="";const p=await r.getLastFetched();let m;0!==p&&(a=`${(0,h.vk)(C.NE.Dot,2,2)}Last fetched ${(0,S.Zh)(new Date(p))}`),m=null!=e.reference?`${l?.state.ahead?` commits up to and including ${(0,o.Wh)(e.reference,{label:!1})}`:""}${l?.upstream?` to ${(0,F.Lo)(l.upstream)}`:""}`:`${l?.state.ahead?` ${(0,h._6)("commit",l.state.ahead)}`:""}${l?.upstream?` to ${(0,F.Lo)(l.upstream)}`:""}`,n=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t,a),[...l?.state.behind?[]:[c(e.flags,[],{label:this.title,detail:`Will push${m}`})],c(e.flags,["--force"],{label:`Force ${this.title}${s?" (with lease and if includes)":i?" (with lease)":""}`,description:"--force"+(i?"-with-lease"+(s?" --force-if-includes":""):""),detail:`Will force push${s?" (with lease and if includes)":i?" (with lease)":""} ${m}${null!=l&&l.state.behind>0?`, overwriting ${(0,h._6)("commit",l.state.behind)}${l?.upstream?` on ${(0,F.Lo)(l.upstream)}`:""}`:""}`})],l?.state.behind?(0,_.fw)(_.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${(0,o.Wh)(u)} is behind${l?.upstream?` ${(0,F.Lo)(l.upstream)}`:""} by ${(0,h._6)("commit",l.state.behind)}`}):void 0),n.additionalButtons=[T.My],n.onDidClickButton=async(e,i)=>{if(i!==T.My||e.busy)return!1;e.title=`Confirm ${t.title}${(0,h.vk)(C.NE.Dot,2,2)}Fetching${C.NE.Ellipsis}`,e.busy=!0;try{return await r.fetch({progress:!0}),!0}finally{e.busy=!1}}}}}const a=yield n;return(0,u.i9)(n,e,a)?a[0].item:u.Vd}}var I=i(2509);class RebaseGitCommand extends u.tR{constructor(e,t){super(e,"rebase","rebase","Rebase",{description:"integrates changes from a specified branch into the current branch, by changing the base of the branch and reapplying the commits on top"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}async execute(e){let t;if(e.flags.includes("--interactive")){await this.container.rebaseEditor.enableForNextUse();t=["-c",`"sequence.editor=${(0,I._L)()}"`]}e.repo.rebase(t,...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${(0,o.Wh)(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){const r=new T.v_(t.pickCommit,t,(()=>{t.pickCommit=!t.pickCommit,r.on=t.pickCommit})),s=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to rebase`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[r]});if(s===u.Vd){i&&e.counter--;continue}e.reference=s,t.selectedBranchOrTag=void 0}if((0,o.FT)(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){const i=t.selectedBranchOrTag.ref;let r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:"first-parent"}),t.cache.set(i,r));const s=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to rebase ${(0,o.Wh)(e.destination,{icon:!1})} onto`,picked:e.reference?.ref});if(s===u.Vd)continue;e.reference=s}const r=yield*this.confirmStep(e,t);r!==u.Vd&&(e.flags=r,(0,u.uZ)(e),this.execute(e))}return e.counter<0?u.Vd:void 0}async*confirmStep(e,t){const i=await this.container.git.getAheadBehindCommitCount(e.repo.path,["revision"===e.reference.refType?(0,o.oI)(e.reference.ref,t.destination.ref):(0,o.oI)(t.destination.name,e.reference.name)]),r=null!=i?i.ahead+i.behind:0;if(0===r){const i=this.createConfirmStep((0,d.C8)(t.title,e,t),[],(0,_.fw)(_.Xe.Cancel,!0,{label:"OK",detail:`${(0,o.Wh)(t.destination,{capitalize:!0})} is already up to date with ${(0,o.Wh)(e.reference)}`}),{placeholder:`Nothing to rebase; ${(0,o.Wh)(t.destination,{label:!1,icon:!1})} is already up to date`}),r=yield i;return(0,u.i9)(i,e,r),u.Vd}const s=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will update ${(0,o.Wh)(t.destination)} by applying ${(0,h._6)("commit",r)} on top of ${(0,o.Wh)(e.reference)}`}),c(e.flags,["--interactive"],{label:`Interactive ${this.title}`,description:"--interactive",detail:`Will interactively update ${(0,o.Wh)(t.destination)} by applying ${(0,h._6)("commit",r)} on top of ${(0,o.Wh)(e.reference)}`})]),n=yield s;return(0,u.i9)(s,e,n)?n[0].item:u.Vd}}var x=i(4155),O=i(7925),E=i(4336);function B(e){if(!(e.repo instanceof a._j&&"add"===e.subcommand))throw new Error("Missing repository")}function W(e){if(!(e.repo instanceof a._j&&"remove"===e.subcommand))throw new Error("Missing repository")}function M(e){if(!(e.repo instanceof a._j&&"prune"===e.subcommand))throw new Error("Missing repository")}function N(e){if("string"==typeof e.remote)throw new Error("Missing remote")}function L(e){if("string"==typeof e.remote)throw new Error("Missing remote")}const U=new Map([["add","Add"],["prune","Prune"],["remove","Remove"]]);function G(e,t){return null==t?e:`${U.get(t)} ${e}`}class RemoteGitCommand extends u.tR{subcommand;constructor(e,t){super(e,"remote","remote","Remote",{description:"add, prune, or remove remotes"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t?.state.subcommand){case"add":null!=t.state.name&&i++,null!=t.state.url&&i++;break;case"prune":case"remove":null!=t.state.remote&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"remove"!==this.subcommand&&"prune"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.remotesView,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===u.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=G(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)continue;e.repo=i}switch(e.subcommand){case"add":B(e),yield*this.addCommandSteps(e,t),e.name=void 0,e.url=void 0;break;case"prune":M(e),yield*this.pruneCommandSteps(e,t);break;case"remove":W(e),yield*this.removeCommandSteps(e,t);break;default:(0,u.uZ)(e)}i&&e.counter--}return e.counter<0?u.Vd:void 0}*pickSubcommandStep(e){const t=(0,u.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"add",description:"adds a new remote",picked:"add"===e.subcommand,item:"add"},{label:"prune",description:"prunes remote branches on the specified remote",picked:"prune"===e.subcommand,item:"prune"},{label:"remove",description:"removes the specified remote",picked:"remove"===e.subcommand,item:"remove"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,u.i9)(t,e,i)?i[0].item:u.Vd}async*addCommandSteps(e,t){null==e.flags&&(e.flags=["-f"]);let i=0!==(await e.repo.getRemotes({filter:t=>t.name===e.name})).length;for(;this.canStepsContinue(e);){if(e.counter<3||null==e.name||i){const r=yield*(0,d.NQ)(e,t,{placeholder:"Please provide a name for the remote",value:e.name});if(r===u.Vd)continue;if(i=0!==(await e.repo.getRemotes({filter:e=>e.name===r})).length,i){e.counter--;continue}e.name=r}if(e.counter<4||null==e.url){const i=yield*(0,d.Kf)(e,t,{placeholder:"Please provide a URL for the remote",value:e.url});if(i===u.Vd)continue;e.url=i}if(this.confirm(e.confirm)){const i=yield*this.addCommandConfirmStep(e,t);if(i===u.Vd)continue;e.flags=i}(0,u.uZ)(e),await e.repo.addRemote(e.name,e.url,e.flags.includes("-f")?{fetch:!0}:void 0),!1!==e.reveal&&(0,x.ay)(void 0,{focus:!0,select:!0})}}*addCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will add remote '${e.name}' for ${e.url}`}),c(e.flags,["-f"],{label:`${t.title} and Fetch`,description:"-f",detail:`Will add and fetch remote '${e.name}' for ${e.url}`})],t),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}async*removeCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){const[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});e.remote=null!=t?t:void 0}if(e.counter<3||null==e.remote){t.title=G("Remotes",e.subcommand);const i=yield*(0,d.Lt)(e,t,{picked:e.remote?.name,placeholder:"Choose remote to remove"});if(i===u.Vd)break;e.remote=i}N(e);if((yield*this.removeCommandConfirmStep(e,t))!==u.Vd){(0,u.uZ)(e);try{await e.repo.removeRemote(e.remote.name)}catch(e){E.Yd.error(e),(0,O.W8)("Unable to remove remote")}}}}*removeCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will remove remote '${e.remote.name}'`}],t),r=yield i;return(0,u.i9)(i,e,r)?void 0:u.Vd}async*pruneCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){const[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});e.remote=null!=t?t:void 0}if(e.counter<3||null==e.remote){const i=yield*(0,d.Lt)(e,t,{picked:e.remote?.name,placeholder:"Choose a remote to prune"});if(i===u.Vd)break;e.remote=i}L(e);(yield*this.pruneCommandConfirmStep(e,t))!==u.Vd&&((0,u.uZ)(e),e.repo.pruneRemote(e.remote.name))}}*pruneCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will prune remote '${e.remote.name}'`}],t),r=yield i;return(0,u.i9)(i,e,r)?void 0:u.Vd}}class ResetGitCommand extends u.tR{constructor(e,t){super(e,"reset","reset","Reset",{description:"resets the current branch to a specified commit"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:t?.confirm??!0,...t?.state},this._canSkipConfirm=!this.initialState.confirm}_canSkipConfirm=!1;get canSkipConfirm(){return this._canSkipConfirm}execute(e){e.repo.reset(...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${(0,o.Wh)(t.destination,{icon:!1})}`,e.counter<2||null==e.reference){const r=t.destination.ref;let s=t.cache.get(r);null==s&&(s=this.container.git.getLog(e.repo.path,{ref:r,merges:"first-parent"}),t.cache.set(r,s));const n=yield*(0,d.s4)(e,t,{log:await s,onDidLoadMore:e=>t.cache.set(r,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:`Choose a commit to reset ${e.destination.name} to`,picked:e.reference?.ref});if(n===u.Vd){i&&e.counter--;continue}e.reference=n}if(this.confirm(e.confirm)){const i=yield*this.confirmStep(e,t);if(i===u.Vd)continue;e.flags=i}(0,u.uZ)(e),this.execute(e)}return e.counter<0?u.Vd:void 0}*confirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:this.title,detail:`Will reset (leaves changes in the working tree) ${(0,o.Wh)(t.destination)} to ${(0,o.Wh)(e.reference)}`}),c(e.flags,["--soft"],{label:`Soft ${this.title}`,description:"--soft",detail:`Will soft reset (leaves changes in the index and working tree) ${(0,o.Wh)(t.destination)} to ${(0,o.Wh)(e.reference)}`}),c(e.flags,["--hard"],{label:`Hard ${this.title}`,description:"--hard",detail:`Will hard reset (discards all changes) ${(0,o.Wh)(t.destination)} to ${(0,o.Wh)(e.reference)}`})]),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}}class RevertGitCommand extends u.tR{constructor(e,t){super(e,"revert","revert","Revert",{description:"undoes the changes of specified commits, by creating new commits with inverted changes"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.revert(...e.flags,...e.references.map((e=>e.ref)).reverse())}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(e.counter<2||null==e.references||0===e.references.length){const r=t.destination.ref;let s=t.cache.get(r);null==s&&(s=this.container.git.getLog(e.repo.path,{ref:r,merges:"first-parent"}),t.cache.set(r,s));const n=yield*(0,d.Rj)(e,t,{log:await s,onDidLoadMore:e=>t.cache.set(r,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:"Choose commits to revert",picked:e.references?.map((e=>e.ref))});if(n===u.Vd){i&&e.counter--;continue}e.references=n}const r=yield*this.confirmStep(e,t);r!==u.Vd&&(e.flags=r,(0,u.uZ)(e),this.execute(e))}return e.counter<0?u.Vd:void 0}*confirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,["--no-edit"],{label:this.title,description:"--no-edit",detail:`Will revert ${(0,o.Wh)(e.references)}`}),c(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will revert and edit ${(0,o.Wh)(e.references)}`})]),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}}var H=i(6934),V=i(4731),q=i(9729),j=i(3105),Q=i(4655),Y=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),z=(e,t,i)=>{if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");var r;if(i&&(r=t[Y("asyncDispose")]),void 0===r&&(r=t[Y("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},K=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,(e=>(s(e),n())))}catch(e){s(e)}if(i)throw t};return n()};const J={iconPath:new n.ThemeIcon("person-add"),tooltip:"Pick Authors"},X={iconPath:new n.ThemeIcon("new-file"),tooltip:"Pick Files"},Z={iconPath:new n.ThemeIcon("new-folder"),tooltip:"Pick Folder"},ee=new Map([["","Search by Message"],["=:","Search by Message"],["message:","Search by Message"],["@:","Search by Author"],["author:","Search by Author"],["#:","Search by Commit SHA"],["commit:","Search by Commit SHA"],["?:","Search by File"],["file:","Search by File"],["~:","Search by Changes"],["change:","Search by Changes"]]);class SearchGitCommand extends u.tR{constructor(e,t){super(e,"search","search","Commit Search",{description:"aka grep, searches for commits"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.query||t.prefillOnly||i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isMatch(e){return super.isMatch(e)||"grep"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"grep"===e}async*steps(e){const t={container:this.container,repos:this.container.git.openRepositories,associatedView:this.container.searchAndCompareView,commit:void 0,hasVirtualFolders:(0,s.fw)("gitlens:hasVirtualFolders",!1),resultsKey:void 0,resultsPromise:void 0,title:this.title},i=r.D.get("gitCommands.search");null==e.matchAll&&(e.matchAll=i.matchAll),null==e.matchCase&&(e.matchCase=i.matchCase),null==e.matchRegex&&(e.matchRegex=i.matchRegex),null==e.showResultsInSideBar&&(e.showResultsInSideBar=i.showResultsInSideBar??void 0);let n=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(n=!1,1===t.repos.length)n=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(e.counter<2||null==e.query){const i=yield*this.pickSearchOperatorStep(e,t);if(i===u.Vd){n&&e.counter--,e.query=void 0;continue}e.query=i}const i={query:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex},r=(0,H.FL)(i);if(null!=t.resultsPromise&&t.resultsKey===r||(t.resultsPromise=e.repo.richSearchCommits(i),t.resultsKey=r),e.showResultsInSideBar){this.container.searchAndCompareView.search(e.repo.path,i,{label:{label:`for ${e.query}`}},t.resultsPromise,e.showResultsInSideBar instanceof Q.V?e.showResultsInSideBar:void 0);break}if(e.counter<3||null==t.commit){const r=e.repo.path,s=yield*(0,d.s4)(e,t,{ignoreFocusOut:!0,log:await t.resultsPromise,onDidLoadMore:e=>t.resultsPromise=Promise.resolve(e),placeholder:(t,i)=>null==i?`No results for ${e.query}`:`${(0,h._6)("result",i.count,{format:e=>i.hasMore?`${e}+`:void 0})} for ${e.query}`,picked:t.commit?.ref,showInSideBarCommand:new q.qv("$(link-external)  Show Results in Side Bar",(()=>{this.container.searchAndCompareView.search(r,i,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)})),showInSideBarButton:{button:T.vU,onDidClick:()=>{this.container.searchAndCompareView.search(r,i,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)}}});if(s===u.Vd){e.counter--;continue}t.commit=s}let s;e.openPickInView?((0,P.Fw)(t.commit,{pin:!1,preserveFocus:!1}),s=u.Vd):s=yield*ve(this.container,{command:"show",state:{repo:e.repo,reference:t.commit}},this.pickedVia),e.counter--,s===u.Vd&&(0,u.uZ)(e)}return e.counter<0?u.Vd:void 0}*pickSearchOperatorStep(e,t){const i=[{label:ee.get(""),description:`pattern or message: pattern or =: pattern ${C.NE.Dash} use quotes to search for phrases`,alwaysShow:!0,item:"message:"},{label:ee.get("author:"),description:"author: pattern or @: pattern",buttons:[J],alwaysShow:!0,item:"author:"},{label:ee.get("commit:"),description:"commit: sha or #: sha",alwaysShow:!0,item:"commit:"},t.hasVirtualFolders?void 0:{label:ee.get("file:"),description:"file: glob or ?: glob",buttons:[X,Z],alwaysShow:!0,item:"file:"},t.hasVirtualFolders?void 0:{label:ee.get("change:"),description:"change: pattern or ~: pattern",alwaysShow:!0,item:"change:"}].filter((e=>null!=e)),r=new T.I4(e.matchCase),s=new T.eY(e.matchAll),n=new T.Mn(e.matchRegex),o=(0,u.xf)({title:(0,d.C8)(t.title,e,t),placeholder:'e.g. "Updates dependencies" author:eamodio',ignoreFocusOut:!0,matchOnDescription:!0,matchOnDetail:!0,additionalButtons:[r,s,n],items:i,value:e.query,selectValueWhenShown:!1,onDidAccept:async i=>{const r=i.selectedItems[0];return!H.WY.has(r.item)||(await te(r,{},i,o,e,t),!1)},onDidClickButton:(t,i)=>{i===r?(e.matchCase=!e.matchCase,r.on=e.matchCase):i===s?(e.matchAll=!e.matchAll,s.on=e.matchAll):i===n&&(e.matchRegex=!e.matchRegex,n.on=e.matchRegex)},onDidClickItemButton:async function(i,r,s){return r===J?await te(s,{author:!0},i,o,e,t):r===X?await te(s,{file:{type:"file"}},i,o,e,t):r===Z&&await te(s,{file:{type:"folder"}},i,o,e,t),!1},onDidChangeValue:r=>{const s=r.value.trim();e.counter=s?3:2;const n=(0,H.pD)({query:s,matchCase:e.matchCase,matchAll:e.matchAll,matchRegex:e.matchRegex});return r.title=(0,d.C8)(0===n.size||n.size>1?t.title:`Commit ${ee.get(n.keys().next().value)}`,e,t),0===r.value.length?r.items=i:(r.ignoreFocusOut=!0,o.ignoreFocusOut=!0,r.items=[{label:"Search for",description:r.value,item:r.value,picked:!0},...i],r.activeItems=[r.items[0]]),!0}}),a=yield o;return(0,u.i9)(o,e,a)?(e.counter--,a[0].item.trim()):(e.counter--,u.Vd)}}async function te(e,t,i,r,s,o){const a=(0,H.pD)({query:i.value,matchCase:s.matchCase,matchAll:s.matchAll});let c=!1;if(t?.author&&"author:"===e.item){var l=[];try{const e=z(l,(0,u.PH)(r,i)),t=a.get("author:"),n=await(0,V.J)(o.container,s.repo,"Search by Author","Choose contributors to include commits from",{appendReposToTitle:!0,clearButton:!0,ignoreFocusOut:!0,multiselect:!0,picked:e=>null!=t&&(null!=e.email&&t.has(e.email)||null!=e.name&&t.has(e.name)||null!=e.username&&t.has(e.username))});if(e[Symbol.dispose](),null!=n){const e=n.map((e=>e.email??e.name??e.username)).filter((e=>null!=e));e.length?a.set("author:",new Set(e)):a.delete("author:")}else c=!0}catch(e){var h=e,d=!0}finally{K(l,h,d)}}else if(t?.file&&"file:"===e.item){var p=[];try{const e=z(p,(0,u.PH)(r,i));let l=a.get("file:");const h=await n.window.showOpenDialog({canSelectFiles:"file"===t.file.type,canSelectFolders:"folder"===t.file.type,canSelectMany:"file"===t.file.type,title:"Search by File",openLabel:"Add to Search",defaultUri:s.repo.folder?.uri});if(e[Symbol.dispose](),h?.length){null==l&&(l=new Set,a.set("file:",l));for(const e of h)l.add(o.container.git.getRelativePath(e,s.repo.uri))}else c=!0;null!=l&&0!==l.size||a.delete("file:")}catch(e){var m=e,g=!0}finally{K(p,m,g)}}else{const t=a.get(e.item);c=!t?.has("")}i.value=`${(0,j.v_)((0,j.UI)(a.entries(),(([e,t])=>`${e}${(0,j.v_)(t,` ${e}`)}`))," ")}${c?` ${e.item}`:""}`,r.onDidChangeValue(i)}var ie=i(3931),re=i(1742);function se(e){if(!(e.repo instanceof a._j))throw new Error("Missing repository")}function ne(e){if(!(0,k.f_)(e.reference))throw new Error("Missing reference")}function oe(e){if(!e.fileName)throw new Error("Missing filename")}class ShowGitCommand extends u.tR{constructor(e,t){super(e,"show","show","Show",{description:"shows information about a git reference"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,null!=t?.state?.fileName&&(i+=2),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}getStepState(e){const t=super.getStepState(e);return{...t,startingStep:e?Math.min(t.startingStep??0,1):0}}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(se(e),(e.counter<2||null==e.reference||!(0,k.f_)(e.reference)||null!=e.reference.file)&&(null==e.reference||(0,k.f_)(e.reference)||(e.reference=await this.container.git.getCommit(e.reference.repoPath,e.reference.ref)),e.counter<2||null==e.reference)){const r=yield*(0,d.s4)(e,t,{log:{repoPath:e.repo.path,commits:new Map,sha:void 0,range:void 0,count:0,limit:void 0,hasMore:!1},placeholder:"Enter a reference or commit SHA",picked:e.reference?.ref});if(r===u.Vd){i&&e.counter--;continue}e.reference=r}if(ne(e),e.counter<3){null==e.reference.files&&await e.reference.ensureFullDetails();const i=yield*(0,d.KT)(e,t);if(i===u.Vd)continue;if(i instanceof re.Wv){const t=yield*i.executeSteps(this.pickedVia);e.counter--,t===u.Vd&&(0,u.uZ)(e);continue}if(i instanceof q.$w&&!(i instanceof ie.PF)){(0,u.uZ)(e),i.execute();break}}if(e.counter<4||null==e.fileName){const i=yield*(0,d.fD)(e,t,{picked:e.fileName});if(i===u.Vd)continue;if(i instanceof ie.PF){e.counter-=2;continue}e.fileName=i.file.path}oe(e);const r=yield*(0,d.nI)(e,t);if(r!==u.Vd)if(r instanceof ie.PF)e.counter-=2;else if(r instanceof re.Wv)yield*r.executeSteps(this.pickedVia),e.counter--;else if(r instanceof q.$w){(0,u.uZ)(e),r.execute();break}}return e.counter<0?u.Vd:void 0}}var ae=i(252),ce=i(6592);const le=new Map([["apply","Apply"],["drop","Drop"],["list","List"],["pop","Pop"],["push","Push"],["rename","Rename"]]);function he(e,t){return null==t?e:`${le.get(t)} ${e}`}class StashGitCommand extends u.tR{subcommand;constructor(e,t){super(e,"stash","stash","Stash",{description:"shelves (stashes) local changes to be reapplied later"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"apply":case"drop":case"pop":null!=t.state.reference&&i++;break;case"push":null!=t.state.message&&i++;break;case"rename":null!=t.state.reference&&i++,null!=t.state.message&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand&&"list"!==this.subcommand}get canSkipConfirm(){return"drop"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.stashesView,readonly:(0,s.fw)("gitlens:readonly",!1)||(0,s.fw)("gitlens:untrusted",!1)||(0,s.fw)("gitlens:hasVirtualFolders",!1),title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,t.readonly&&(e.subcommand="list"),e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===u.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=he(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)continue;e.repo=i}switch(e.subcommand){case"apply":case"pop":yield*this.applyOrPopCommandSteps(e,t);break;case"drop":yield*this.dropCommandSteps(e,t);break;case"list":yield*this.listCommandSteps(e,t);break;case"push":yield*this.pushCommandSteps(e,t);break;case"rename":yield*this.renameCommandSteps(e,t),e.message=void 0;break;default:(0,u.uZ)(e)}i&&e.counter--}return e.counter<0?u.Vd:void 0}*pickSubcommandStep(e){const t=(0,u.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"apply",description:"integrates changes from the specified stash into the current branch",picked:"apply"===e.subcommand,item:"apply"},{label:"drop",description:"deletes the specified stash",picked:"drop"===e.subcommand,item:"drop"},{label:"list",description:"lists the saved stashes",picked:"list"===e.subcommand,item:"list"},{label:"pop",description:"integrates changes from the specified stash into the current branch and deletes the stash",picked:"pop"===e.subcommand,item:"pop"},{label:"push",description:"saves your local changes to a new stash and discards them from the working tree and index",picked:"push"===e.subcommand,item:"push"},{label:"rename",description:"renames the specified stash",picked:"rename"===e.subcommand,item:"rename"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,u.i9)(t,e,i)?i[0].item:u.Vd}async*applyOrPopCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to apply to your working tree",picked:e.reference?.ref});if(i===u.Vd)break;e.reference=i}if(this.confirm(e.confirm)){const i=yield*this.applyOrPopCommandConfirmStep(e,t);if(i===u.Vd)continue;e.subcommand=i}(0,u.uZ)(e);try{if(await e.repo.stashApply("pop"===e.subcommand?`stash@{${e.reference.number}}`:e.reference.ref,{deleteAfter:"pop"===e.subcommand}),e.reference.message){const t=await this.container.git.getScmRepository(e.repo.path);null==t||t.inputBox.value||(t.inputBox.value=e.reference.message)}}catch(e){E.Yd.error(e,t.title),ce.ef.is(e,ce.bk.WorkingChanges)?n.window.showWarningMessage("Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"):(0,O.W8)(e.message)}}}*applyOrPopCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:"pop"===e.subcommand?`Will delete ${(0,o.Wh)(e.reference)} and apply the changes to the working tree`:`Will apply the changes from ${(0,o.Wh)(e.reference)} to the working tree`,item:e.subcommand},{label:he(this.title,"pop"===e.subcommand?"apply":"pop"),detail:"pop"===e.subcommand?`Will apply the changes from ${(0,o.Wh)(e.reference)} to the working tree`:`Will delete ${(0,o.Wh)(e.reference)} and apply the changes to the working tree`,item:"pop"===e.subcommand?"apply":"pop"}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[T._9,T.Nv],onDidClickButton:(t,i)=>{i===T._9?(0,ae.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===T.Nv&&(0,ae.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}async*dropCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to delete",picked:e.reference?.ref});if(i===u.Vd)break;e.reference=i}if((yield*this.dropCommandConfirmStep(e,t))!==u.Vd){(0,u.uZ)(e);try{await e.repo.stashDelete(`stash@{${e.reference.number}}`,e.reference.ref)}catch(e){return E.Yd.error(e,t.title),void(0,O.W8)("Unable to delete stash")}}}}*dropCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${(0,o.Wh)(e.reference)}`}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[T._9,T.Nv],onDidClickButton:(t,i)=>{i===T._9?(0,ae.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===T.Nv&&(0,ae.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,u.i9)(i,e,r)?void 0:u.Vd}async*listCommandSteps(e,t){for(t.title="Stashes";this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash",picked:e.reference?.ref});if(i===u.Vd)break;e.reference=i}const i=yield*ve(this.container,{command:"show",state:{repo:e.repo,reference:e.reference}},this.pickedVia);e.counter--,i===u.Vd&&(0,u.uZ)(e)}}async*pushCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.message){if(null==e.message){const t=await this.container.git.getScmRepository(e.repo.path);e.message=t?.inputBox.value}const i=yield*this.pushCommandInputMessageStep(e,t);if(i===u.Vd)break;e.message=i}if(this.confirm(e.confirm)){const i=yield*this.pushCommandConfirmStep(e,t);if(i===u.Vd)continue;e.flags=i}try{await e.repo.stashSave(e.message,e.uris,{includeUntracked:e.flags.includes("--include-untracked"),keepIndex:e.flags.includes("--keep-index"),onlyStaged:e.flags.includes("--staged")}),(0,u.uZ)(e)}catch(i){if(E.Yd.error(i,t.title),i instanceof ce.s8&&i.reason===ce.g1.ConflictingStagedAndUnstagedLines&&e.flags.includes("--staged")){const t={title:"Yes"},r={title:"No",isCloseAffordance:!0};if(await n.window.showErrorMessage(i.message,{modal:!0},t,r)===t){e.uris=e.onlyStagedUris,e.flags.splice(e.flags.indexOf("--staged"),1);continue}return}const r=i?.message??i?.toString()??"";return r.includes("newer version of Git")?void n.window.showErrorMessage(`Unable to stash changes. ${r}`):void(0,O.W8)("Unable to stash changes")}}}async*pushCommandInputMessageStep(e,t){const i=(0,u.Ke)({title:(0,d.C8)(t.title,e,t,null!=e.uris?`${(0,h.vk)(C.NE.Dot,2,2)}${1===e.uris.length?(0,D.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`:void 0),placeholder:"Please provide a stash message",value:e.message,prompt:"Enter stash message"}),r=yield i;return(0,u.$V)(i,e,r)&&await(0,u.Wm)(i,e,r)?r:u.Vd}*pushCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),null==e.uris||0===e.uris.length?[c(e.flags,[],{label:t.title,detail:"Will stash uncommitted changes"}),c(e.flags,["--include-untracked"],{label:`${t.title} & Include Untracked`,description:"--include-untracked",detail:"Will stash uncommitted changes, including untracked files"}),c(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,description:"--keep-index",detail:"Will stash uncommitted changes, but will keep staged files intact"})]:[c(e.flags,[],{label:t.title,detail:`Will stash changes from ${1===e.uris.length?(0,D.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`}),c(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,detail:`Will stash changes from ${1===e.uris.length?(0,D.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}, but will keep staged files intact`})],void 0,{placeholder:`Confirm ${t.title}`}),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}async*renameCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to rename",picked:e.reference?.ref});if(i===u.Vd)break;e.reference=i}if(e.counter<4||null==e.message){const i=yield*this.renameCommandInputMessageStep(e,t);if(i===u.Vd)continue;e.message=i}if(this.confirm(e.confirm)){if((yield*this.renameCommandConfirmStep(e,t))===u.Vd)continue}(0,u.uZ)(e);try{await e.repo.stashRename(e.reference.name,e.reference.ref,e.message,e.reference.stashOnRef)}catch(e){E.Yd.error(e,t.title),(0,O.W8)(e.message)}}}async*renameCommandInputMessageStep(e,t){const i=(0,u.Ke)({title:(0,d.C8)(t.title,e,t),placeholder:`Please provide a new message for ${(0,o.Wh)(e.reference,{icon:!1})}`,value:e.message??e.reference?.message,prompt:"Enter new stash message"}),r=yield i;return(0,u.$V)(i,e,r)&&await(0,u.Wm)(i,e,r)?r:u.Vd}*renameCommandConfirmStep(e,t){const i=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will rename ${(0,o.Wh)(e.reference)}`,item:e.subcommand}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[T._9,T.Nv],onDidClickButton:(t,i)=>{i===T._9?(0,ae.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===T.Nv&&(0,ae.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}}class StatusGitCommand extends u.tR{constructor(e,t){super(e,"status","status","Status",{description:"shows status information about a repository"});let i=0;null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,status:void 0,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)break;e.repo=i}if(t.status=await e.repo.getStatus(),null==t.status)return;t.title=`${this.title}${(0,h.vk)(C.NE.Dot,2,2)}${(0,o.Wh)((0,o.xB)(t.status.branch,e.repo.path,{refType:"branch",name:t.status.branch,remote:!1,upstream:null!=t.status.upstream?{name:t.status.upstream,missing:!1}:void 0}),{icon:!1})}`;const r=yield*(0,d.up)(e,t);if(r!==u.Vd){if(r instanceof re.Wv){const t=yield*r.executeSteps(this.pickedVia);e.counter--,t===u.Vd&&(0,u.uZ)(e)}else if(r instanceof q.$w){(0,u.uZ)(e),r.execute();break}}else i&&e.counter--}}}class SwitchGitCommand extends u.tR{constructor(e,t){super(e,"switch","switch","Switch Branch",{description:"aka checkout, switches the current branch to a specified branch"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){await n.window.withProgress({location:n.ProgressLocation.Notification,title:`Switching ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`} to ${e.reference.name}`},(()=>Promise.all(e.repos.map((t=>t.switch(e.reference.ref,{createBranch:e.createBranch,progress:!1})))))),null!=e.fastForwardTo&&e.repos[0].merge("--ff-only",e.fastForwardTo.ref)}isMatch(e){return super.isMatch(e)||"checkout"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"checkout"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,showTags:!1,switchToLocalFrom:void 0,title:this.title};null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,A.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{const i=yield*(0,d.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===u.Vd)break;e.repos=i}if(e.counter<2||null==e.reference){const r=yield*(0,d.xC)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to switch to`});if(r===u.Vd){i&&e.counter--;continue}e.reference=r}if((0,o.UR)(e.reference)&&e.reference.remote){t.title=`Create Branch and ${this.title}`;const{values:i}=await this.container.git.getBranches(e.reference.repoPath,{filter:t=>t.upstream?.name===e.reference.name,sort:{orderBy:"date:desc"}});if(0===i.length){const i=yield*(0,d.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` based on ${(0,o.Wh)(e.reference,{icon:!1})}`,value:e.createBranch??(0,o.Av)(e.reference)});if(i===u.Vd)continue;e.createBranch=i}else t.title=`${this.title} to Local Branch`,t.switchToLocalFrom=e.reference,e.reference=i[0],e.createBranch=void 0}else e.createBranch=void 0;if(this.confirm(e.confirm||null!=t.switchToLocalFrom)){const i=yield*this.confirmStep(e,t);if(i===u.Vd)continue;"switch+fast-forward"===i&&(e.fastForwardTo=t.switchToLocalFrom)}(0,u.uZ)(e),this.execute(e)}return e.counter<0?u.Vd:void 0}*confirmStep(e,t){let i;i=null!=t.switchToLocalFrom&&1===e.repos.length?[{label:`${t.title} and Fast-Forward`,description:"",detail:`Will switch to and fast-forward local ${(0,o.Wh)(e.reference)} in $(repo) ${e.repos[0].formattedName}`,item:"switch+fast-forward"}]:[];const r=this.createConfirmStep((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,description:e.createBranch?"-b":"",detail:`Will ${e.createBranch?`create and switch to a new branch named ${e.createBranch} from ${(0,o.Wh)(e.reference)}`:`switch to ${null!=t.switchToLocalFrom?"local ":""}${(0,o.Wh)(e.reference)}`} in ${1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`}`,item:"switch"},...i],void 0,{placeholder:`Confirm ${t.title}`}),s=yield r;return(0,u.i9)(r,e,s)?s[0].item:u.Vd}}const ue=new Map([["create","Create"],["delete","Delete"]]);function de(e,t){return null==t?e:`${ue.get(t)} ${e}`}class TagGitCommand extends u.tR{subcommand;constructor(e,t){super(e,"tag","tag","Tag",{description:"create, or delete tags"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"create":null!=t.state.reference&&i++,null!=t.state.name&&i++,null!=t.state.message&&i++;break;case"delete":null==t.state.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.tagsView,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===u.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)continue;e.repo=i}switch(t.title=de("delete"===e.subcommand?"Tags":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":yield*this.deleteCommandSteps(e,t);break;default:(0,u.uZ)(e)}i&&e.counter--}return e.counter<0?u.Vd:void 0}*pickSubcommandStep(e){const t=(0,u.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new tag",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified tags",picked:"delete"===e.subcommand,item:"delete"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,u.i9)(t,e,i)?i[0].item:u.Vd}async*createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new tag from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:(0,o.FT)(e.reference)?e.reference.ref:void 0});if(i===u.Vd)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*(0,d.fG)(e,t,{placeholder:"Please provide a name for the new tag",titleContext:` at ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1})}`,value:e.name??(0,o.Av)(e.reference)});if(i===u.Vd)continue;e.name=i}if(e.counter<5||null==e.message){const i=yield*this.createCommandInputMessageStep(e,t);if(i===u.Vd)continue;e.message=i}if(0===e.message.length||e.flags.includes("-m")||e.flags.push("-m"),this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===u.Vd)continue;e.flags=i}(0,u.uZ)(e),e.repo.tag(...e.flags,...0!==e.message.length?[`"${e.message}"`]:[],e.name,e.reference.ref)}}async*createCommandInputMessageStep(e,t){const i=(0,u.Ke)({title:(0,d.C8)(`${t.title} at ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1})}`,e,t),placeholder:"Please provide an optional message to annotate the tag",value:e.message,prompt:"Enter optional message"}),r=yield i;return(0,u.$V)(i,e,r)&&await(0,u.Wm)(i,e,r)?r:u.Vd}*createCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,0!==e.message.length?["-m"]:[],{label:t.title,description:0!==e.message.length?"-m":"",detail:`Will create a new tag named ${e.name} at ${(0,o.Wh)(e.reference)}`}),c(e.flags,0!==e.message.length?["--force","-m"]:["--force"],{label:`Force ${t.title}`,description:"--force"+(0!==e.message.length?" -m":""),detail:`Will forcibly create a new tag named ${e.name} at ${(0,o.Wh)(e.reference)}`})],t),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}async*deleteCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||0===e.references.length){t.title=de("Tags",e.subcommand);const i=yield*(0,d.yY)(e,t,{picked:e.references?.map((e=>e.ref)),placeholder:"Choose tags to delete"});if(i===u.Vd)break;e.references=i}t.title=de((0,h._6)("Tag",e.references.length,{only:!0}),e.subcommand);(yield*this.deleteCommandConfirmStep(e,t))!==u.Vd&&((0,u.uZ)(e),e.repo.tagDelete(e.references))}}*deleteCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${(0,o.Wh)(e.references)}`}],t),r=yield i;return(0,u.i9)(i,e,r)?void 0:u.Vd}}var pe=i(5025),me=i(2674);function ge(e){if(null==e.repo||"string"==typeof e.repo)throw new Error("Missing repository")}const fe=new Map([["create","Create"],["delete","Delete"],["open","Open"]]);function we(e,t){return null==t?e:`${fe.get(t)} ${e}`}class WorktreeGitCommand extends u.tR{subcommand;canSkipConfirmOverride;constructor(e,t){super(e,"worktree","worktree","Worktree",{description:"open, create, or delete worktrees"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"create":null!=t.state.uri&&i++,null!=t.state.reference&&i++;break;case"delete":null==t.state.uris||Array.isArray(t.state.uris)&&0===t.state.uris.length||i++;break;case"open":null!=t.state.uri&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return this.canSkipConfirmOverride??!1}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.worktreesView,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===u.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*(0,d.lA)(e,t);if(i===u.Vd)continue;e.repo=i}e.repo=await e.repo.getMainRepository()??e.repo,ge(e);if((yield*(0,d.Oz)(e,t,$.x.Worktrees))===u.Vd)break;switch(t.title=we("delete"===e.subcommand?"Worktrees":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.uri=void 0;break;case"delete":null==e.uris||Array.isArray(e.uris)||(e.uris=[e.uris]),yield*this.deleteCommandSteps(e,t);break;case"open":yield*this.openCommandSteps(e,t);break;default:(0,u.uZ)(e)}i&&e.counter--}return e.counter<0?u.Vd:void 0}*pickSubcommandStep(e){const t=(0,u.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"open",description:"opens the specified worktree",picked:"open"===e.subcommand,item:"open"},{label:"create",description:"creates a new worktree",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified worktrees",picked:"delete"===e.subcommand,item:"delete"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,u.i9)(t,e,i)?i[0].item:u.Vd}async*createCommandSteps(e,t){for(null==t.defaultUri&&(t.defaultUri=await e.repo.getWorktreesDefaultUri()),null==e.flags&&(e.flags=[]),t.pickedUri=void 0,e.confirm=!0,this.canSkipConfirmOverride=void 0;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*(0,d.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new worktree for`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" for",value:(0,o.FT)(e.reference)?e.reference.ref:void 0});if(i===u.Vd)break;e.reference=i}if(e.counter<4||null==e.uri)if(null==e.reference||r.D.get("worktrees.promptForLocation",e.repo.folder)||null==t.defaultUri){const i=yield*this.createCommandChoosePathStep(e,t,{titleContext:` for ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,defaultUri:t.defaultUri});if(i===u.Vd)continue;e.uri=i,t.pickedUri=e.uri}else e.uri=t.defaultUri;if(this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===u.Vd)continue;[e.uri,e.flags]=i}e.confirm=!0,this.canSkipConfirmOverride=void 0;if("branch"===e.reference?.refType&&e.reference?.remote&&!e.flags.includes("-b")){e.flags.push("-b"),e.createBranch=(0,o.Av)(e.reference);null!=await e.repo.getBranch(e.createBranch)&&(e.createBranch=e.reference.name)}if(e.flags.includes("-b")){let i;if(null!=e.createBranch){let t=await this.container.git.validateBranchOrTagName(e.repo.path,e.createBranch);if(t){t=null==await e.repo.getBranch(e.createBranch)}t||(i=e.createBranch,e.createBranch=void 0)}if(null==e.createBranch){const r=yield*(0,d.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:i??e.createBranch??(0,o.Av)(e.reference)});if(r===u.Vd){e.flags=[];continue}e.createBranch=r}}const i=e.flags.includes("--direct")?e.uri:n.Uri.joinPath(e.uri,...(e.createBranch??e.reference.name).replace(/\\/g,"/").split("/"));let s;try{s=await e.repo.createWorktree(i,{commitish:e.reference?.name,createBranch:e.flags.includes("-b")?e.createBranch:void 0,detach:e.flags.includes("--detach"),force:e.flags.includes("--force")}),!1!==e.reveal&&(0,pe.ay)(void 0,{select:!0,focus:!0})}catch(t){if(ce.P6.is(t,ce.hK.AlreadyCheckedOut)&&!e.flags.includes("--force")){const t={title:"Create New Branch"},i={title:"Create Anyway"},r={title:"Cancel",isCloseAffordance:!0},s=await n.window.showWarningMessage(`Unable to create the new worktree because ${(0,o.Wh)(e.reference,{icon:!1,quoted:!0})} is already checked out.\n\nWould you like to create a new branch for this worktree or forcibly create it anyway?`,{modal:!0},t,i,r);if(s===t){e.flags.push("-b"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}if(s===i){e.flags.push("--force"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}}else if(ce.P6.is(t,ce.hK.AlreadyExists)){const e={title:"OK"},t={title:"Open Folder"};n.window.showErrorMessage(`Unable to create a new worktree in '${me.e.getFriendlyPath(i)}' because the folder already exists and is not empty.`,e,t).then((e=>{e===t&&(0,I.qM)(i)}))}else(0,O.W8)(`Unable to create a new worktree in '${me.e.getFriendlyPath(i)}.`)}if((0,u.uZ)(e),null==s)break;const a=r.D.get("worktrees.openAfterCreate");if("never"===a)break;if("prompt"===a){yield*this.openCommandSteps({subcommand:"open",repo:e.repo,uri:s.uri,counter:3,confirm:!0},t);break}queueMicrotask((()=>{switch(a){case"always":(0,I.ic)(s.uri,{location:"currentWindow"});break;case"alwaysNewWindow":(0,I.ic)(s.uri,{location:"newWindow"});break;case"onlyWhenEmpty":(0,I.ic)(s.uri,{location:n.workspace.workspaceFolders?.length?"currentWindow":"newWindow"})}}))}}async*createCommandChoosePathStep(e,t,i){const r=(0,u.jf)({show:async r=>{const s=null!=i?.defaultUri,o=await n.window.showInformationMessage(`Choose a location in which to create the worktree${i.titleContext}.`,{modal:!0},{title:"Choose Location"},...s?[{title:"Use Default Location"}]:[]);if(null==o)return _.Xe.Back;if("Use Default Location"===o.title)return i.defaultUri;const a=await n.window.showOpenDialog({canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1,defaultUri:t.pickedUri??e.uri??t.defaultUri,openLabel:"Select Worktree Location",title:`${(0,d.C8)(`Choose a Worktree Location${i.titleContext}`,e,t)}`});return null==a||0===a.length?_.Xe.Back:a[0]}}),s=yield r;return(0,u.$V)(r,e,s)&&await(0,u.Wm)(r,e,s)?s:u.Vd}*createCommandConfirmStep(e,t){const i=t.pickedUri??e.uri,r=(0,h.AO)(me.e.getFriendlyPath(i),60);let s,a=!0;const l=e.repo.uri,p=`${(0,b.EZ)(l.path)}.worktrees`;l.toString()!==i.toString()?s=(0,b.SG)(i,l)?n.Uri.joinPath(l,"..",p):(0,b.EZ)(i.path)===p?i:n.Uri.joinPath(i,p):(s=n.Uri.joinPath(l,"..",p),a=!1);const m=e.createBranch??(null!=e.reference?(0,o.Av)(e.reference):void 0),g=m?n.Uri.joinPath(s,...m.replace(/\\/g,"/").split("/")):s,f=(0,h.AO)(me.e.getFriendlyPath(g),65),w=(0,h.AO)(me.e.getFriendlyPath(n.Uri.joinPath(s,"<new-branch-name>")),60),v="branch"===e.reference?.refType&&e.reference?.remote,y=(0,u.Tv)((0,d.C8)(`Confirm ${t.title} • ${(0,o.Wh)(e.reference,{icon:!1,label:!1})}`,e,t),[c(e.flags,v?["-b"]:[],{label:v?"Create Local Branch and Worktree":t.title,description:" in subfolder",detail:`Will create worktree in $(folder) ${f}`},s),c(e.flags,["-b"],{label:v?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" in subfolder",detail:`Will create worktree in $(folder) ${w}`},s),...a?[(0,q.fz)(),c(e.flags,["--direct"],{label:v?"Create Local Branch and Worktree":t.title,description:" directly in folder",detail:`Will create worktree directly in $(folder) ${r}`},i),c(e.flags,["-b","--direct"],{label:v?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" directly in folder",detail:`Will create worktree directly in $(folder) ${r}`},i)]:[]],t),C=yield y;return(0,u.i9)(y,e,C)?[C[0].context,C[0].item]:u.Vd}async*deleteCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uris||0===e.uris.length){t.title=we("Worktrees",e.subcommand);const i=yield*(0,d.Mb)(e,t,{filter:e=>e.main||!e.opened,includeStatus:!0,picked:e.uris?.map((e=>e.toString())),placeholder:"Choose worktrees to delete"});if(i===u.Vd)break;e.uris=i.map((e=>e.uri))}t.title=we((0,h._6)("Worktree",e.uris.length,{only:!0}),e.subcommand);const i=yield*this.deleteCommandConfirmStep(e,t);if(i!==u.Vd){e.flags=i,(0,u.uZ)(e);for(const i of e.uris){let r=!1;do{r=!1;const s=e.flags.includes("--force");try{if(s){const e=t.worktrees.find((e=>e.uri.toString()===i.toString()));let r;try{r=await(e?.getStatus())}catch{}if(r?.hasChanges){const e={title:"Force Delete"},t={title:"Cancel",isCloseAffordance:!0};if(await n.window.showWarningMessage(`The worktree in '${i.fsPath}' has uncommitted changes.\n\nDeleting it will cause those changes to be FOREVER LOST.\nThis is IRREVERSIBLE!\n\nAre you sure you still want to delete it?`,{modal:!0},e,t)!==e)return}}await e.repo.deleteWorktree(i,{force:s})}catch(t){if(ce.Nk.is(t)){if(t.reason===ce.xe.MainWorkingTree)n.window.showErrorMessage("Unable to delete the main worktree");else if(!s){const s={title:"Force Delete"},o={title:"Cancel",isCloseAffordance:!0};await n.window.showErrorMessage(t.reason===ce.xe.HasChanges?`Unable to delete worktree because there are UNCOMMITTED changes in '${i.fsPath}'.\n\nForcibly deleting it will cause those changes to be FOREVER LOST.\nThis is IRREVERSIBLE!\n\nWould you like to forcibly delete it?`:`Unable to delete worktree in '${i.fsPath}'.\n\nWould you like to try to forcibly delete it?`,{modal:!0},s,o)===s&&(e.flags.push("--force"),r=!0)}}else(0,O.W8)(`Unable to delete worktree in '${i.fsPath}.`)}}while(r)}}}}*deleteCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will delete ${(0,h._6)("worktree",e.uris.length,{only:1===e.uris.length})}${1===e.uris.length?` in $(folder) ${me.e.getFriendlyPath(e.uris[0])}`:""}`}),c(e.flags,["--force"],{label:`Force ${t.title}`,description:"including ANY UNCOMMITTED changes",detail:`Will forcibly delete ${(0,h._6)("worktree",e.uris.length,{only:1===e.uris.length})} ${1===e.uris.length?` in $(folder) ${me.e.getFriendlyPath(e.uris[0])}`:""}`})],t),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}async*openCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uri){t.title=we("Worktree",e.subcommand);const i=yield*(0,d.UP)(e,t,{includeStatus:!0,picked:e.uri?.toString(),placeholder:"Choose worktree to open"});if(i===u.Vd)break;e.uri=i.uri}t.title=we("Worktree",e.subcommand);const i=yield*this.openCommandConfirmStep(e,t);if(i===u.Vd)continue;e.flags=i,(0,u.uZ)(e);const r=t.worktrees.find((t=>t.uri.toString()===e.uri.toString()));if(null==r)break;e.flags.includes("--reveal-explorer")?(0,I.qM)(r.uri):(0,I.ic)(r.uri,{location:(0,pe.BC)(e.flags)})}}*openCommandConfirmStep(e,t){const i=(0,u.Tv)((0,d.C8)(`Confirm ${t.title}`,e,t),[c(e.flags,[],{label:t.title,detail:`Will open in the current window, the worktree in $(folder) ${me.e.getFriendlyPath(e.uri)}`}),c(e.flags,["--new-window"],{label:`${t.title} in a New Window`,detail:`Will open in a new window, the worktree in $(folder) ${me.e.getFriendlyPath(e.uri)}`}),c(e.flags,["--add-to-workspace"],{label:"Add Worktree to Workspace",detail:`Will add into the current workspace, the worktree in $(folder) ${me.e.getFriendlyPath(e.uri)}`}),c(e.flags,["--reveal-explorer"],{label:"Reveal in File Explorer",detail:`Will open in the File Explorer, the worktree in $(folder) ${me.e.getFriendlyPath(e.uri)}`})],t),r=yield i;return(0,u.i9)(i,e,r)?r[0].item:u.Vd}}function ve(e,t,i){const r=new PickCommandStep(e,t),s=r.find(t.command);return null==s?function*(){}():(r.setCommand(s,i),s.executeSteps())}class PickCommandStep{constructor(e,t){this.container=e;const i=(0,s.fw)("gitlens:hasVirtualFolders",!1),n=i||(0,s.fw)("gitlens:readonly",!1)||(0,s.fw)("gitlens:untrusted",!1);if(this.items=[n?void 0:new BranchGitCommand(e,"branch"===t?.command?t:void 0),n?void 0:new CherryPickGitCommand(e,"cherry-pick"===t?.command?t:void 0),i?void 0:new CoAuthorsGitCommand(e,"co-authors"===t?.command?t:void 0),n?void 0:new FetchGitCommand(e,"fetch"===t?.command?t:void 0),new LogGitCommand(e,"log"===t?.command?t:void 0),n?void 0:new MergeGitCommand(e,"merge"===t?.command?t:void 0),n?void 0:new PullGitCommand(e,"pull"===t?.command?t:void 0),n?void 0:new PushGitCommand(e,"push"===t?.command?t:void 0),n?void 0:new RebaseGitCommand(e,"rebase"===t?.command?t:void 0),n?void 0:new RemoteGitCommand(e,"remote"===t?.command?t:void 0),n?void 0:new ResetGitCommand(e,"reset"===t?.command?t:void 0),n?void 0:new RevertGitCommand(e,"revert"===t?.command?t:void 0),new SearchGitCommand(e,"search"===t?.command||"grep"===t?.command?t:void 0),new ShowGitCommand(e,"show"===t?.command?t:void 0),i?void 0:new StashGitCommand(e,"stash"===t?.command?t:void 0),i?void 0:new StatusGitCommand(e,"status"===t?.command?t:void 0),n?void 0:new SwitchGitCommand(e,"switch"===t?.command||"checkout"===t?.command?t:void 0),n?void 0:new TagGitCommand(e,"tag"===t?.command?t:void 0),i?void 0:new WorktreeGitCommand(e,"worktree"===t?.command?t:void 0)].filter((e=>null!=e)),"usage"===r.D.get("gitCommands.sortBy")){const e=this.container.storage.getWorkspace("gitComandPalette:usage");null!=e&&this.items.sort(((t,i)=>(e[i.key]??0)-(e[t.key]??0)))}this.hiddenItems=[]}buttons=[];hiddenItems;ignoreFocusOut=!1;items;matchOnDescription=!0;placeholder="Choose a git command";title="GitLens";_command;get command(){return this._command}find(e,t=!1){if(t){const t=e.toLowerCase();return this.items.find((e=>e.isFuzzyMatch(t)))??this.hiddenItems.find((e=>e.isFuzzyMatch(t)))}return this.items.find((t=>t.isMatch(e)))??this.hiddenItems.find((t=>t.isMatch(e)))}setCommand(e,t){null!=this._command&&(this._command.picked=!1),null!=e&&(e.picked=!0,e.pickedVia=t),this._command=e,null!=e&&this.updateCommandUsage(e.key,Date.now())}async updateCommandUsage(e,t){let i=this.container.storage.getWorkspace("gitComandPalette:usage");void 0===i&&(i=Object.create(null)),i[e]=t,await this.container.storage.storeWorkspace("gitComandPalette:usage",i)}}},2138:(e,t,i)=>{i.d(t,{_:()=>m});var r=i(5255),s=i(7462),n=i(439),o=i(6503),a=i(7925),c=i(635),l=i(9529),h=i(4336),u=i(7139),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor;let m=class extends u.pu{constructor(e){super([r.Gh.OpenCommitOnRemote,r.Gh.Deprecated_OpenCommitInRemote,r.Gh.CopyRemoteCommitUrl]),this.container=e}static getMarkdownCommandArgs(e){const t="string"==typeof e?{sha:e}:e;return super.getMarkdownCommandArgsCore(r.Gh.OpenCommitOnRemote,t)}preExecute(e,t){let i=e.uri;if("editorLine"===e.type&&(t={...t,line:e.line}),(0,u.en)(e)){if(e.node.commit.isUncommitted)return Promise.resolve(void 0);t={...t,sha:e.node.commit.sha},i=e.node.uri}return(0,u.jT)(e)&&(t={sha:e.item.ref},i=e.uri),e.command===r.Gh.CopyRemoteCommitUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,i,t)}async execute(e,t,i){let d=null!=(t=(0,u.SX)(t,e))?await s.YY.fromUri(t):void 0;const p=(await(0,c.hM)(d,e,i?.clipboard?"Copy Remote Commit URL":"Open Commit On Remote"))?.path;if(p){null==d&&(d=s.YY.fromRepoPath(p)),i={...i};try{if(null==i.sha){const t=i.line??e?.selection.active.line;if(null==t)return;const r=await this.container.git.getBlameForLine(d,t,e?.document);if(null==r)return void(0,a.zk)("Unable to open commit on remote provider");i.sha=r.commit.isUncommitted?await r.commit.getPreviousSha()??n.Ii:r.commit.sha}await(0,l.P0)(r.Gh.OpenOnRemote,{resource:{type:o.J.Commit,sha:i.sha},repoPath:p,clipboard:i.clipboard})}catch(e){h.Yd.error(e,"OpenCommitOnRemoteCommand"),(0,a.W8)("Unable to open commit on remote provider")}}}};m=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n),n})([(0,l.WD)()],m)},4893:(e,t,i)=>{i.d(t,{D:()=>w});var r=i(9496),s=i(5255),n=i(6897),o=i(7462),a=i(4321),c=i(7925),l=i(1857),h=i(9729),u=i(9529),d=i(4336),p=i(3620),m=i(7139),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor;let w=class extends m.pu{constructor(e){super([s.Gh.OpenFileAtRevision,s.Gh.OpenBlamePriorToChange]),this.container=e}static getMarkdownCommandArgs(e,t,i){let n;if(e instanceof r.Uri){n={revisionUri:e,line:i,annotationType:t}}else n=e;return super.getMarkdownCommandArgsCore(s.Gh.OpenFileAtRevision,n)}async preExecute(e,t){if(e.command===s.Gh.OpenBlamePriorToChange){if(null==(t={...t,annotationType:"blame"}).revisionUri&&null!=e.editor){const i=e.editor.selection.active.line;if(i>=0)try{const r=await o.YY.fromUri(e.editor.document.uri),s=await this.container.git.getBlameForLine(r,i);if(null!=s)if(s.commit.isUncommitted){const e=await s.commit.getPreviousComparisonUrisForLine(i);if(null==e?.previous)return void(0,c.RR)(s.commit);t.revisionUri=this.container.git.getRevisionUri(e.previous)}else{if(null==(null!=s?await(s?.commit.getPreviousSha()):void 0))return void(0,c.RR)(s.commit);t.revisionUri=this.container.git.getRevisionUri(s.commit.getGitUri(!0))}}catch(e){d.Yd.error(e,"OpenBlamePriorToChangeCommand")}}if(null==t.revisionUri)return void(0,c.W8)("Unable to open blame")}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,m.SX)(t,e)))return;const r=await o.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri){const e=this.container.git.getLogForFile(r.repoPath,r.fsPath).then((e=>e??(r.sha?this.container.git.getLogForFile(r.repoPath,r.fsPath,{ref:r.sha}):void 0))),t=`Open ${"blame"===i.annotationType?"Blame":"File"} at Revision${(0,p.vk)(s.NE.Dot,2,2)}`,o=await(0,l.D)(e,`${t}${r.getFormattedFileName({suffix:r.sha?`:${(0,a.zL)(r.sha)}`:void 0,truncateTo:s.d$-t.length})}`,`Choose a commit to ${"blame"===i.annotationType?"blame":"open"} the file revision from`,{picked:r.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await(0,n.YS)(t.item.file,t.item,{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})},showOtherReferences:[h.$w.fromCommand("Choose a Branch or Tag...",s.Gh.OpenFileAtRevisionFrom),h.$w.fromCommand("Choose a Stash...",s.Gh.OpenFileAtRevisionFrom,{stash:!0})]});if(null==o?.file)return;return void await(0,n.YS)(o.file,o,{annotationType:i.annotationType,line:i.line,...i.showOptions})}await(0,n.YS)(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){d.Yd.error(e,"OpenFileAtRevisionCommand"),(0,c.W8)("Unable to open file at revision")}}};w=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&g(t,i,n),n})([(0,u.WD)()],w)},3016:(e,t,i)=>{i.d(t,{AI:()=>n,DY:()=>w,Ft:()=>u,I4:()=>c,Lp:()=>C,Mn:()=>h,My:()=>o,Nv:()=>m,Q0:()=>a,_9:()=>f,_r:()=>p,cq:()=>y,eY:()=>l,ip:()=>g,jQ:()=>ToggleQuickInputButton,vU:()=>v,v_:()=>d,zY:()=>b});var r=i(9496),s=i(6894);class ToggleQuickInputButton{constructor(e,t=!1){this.state=e,this._on=t}get iconPath(){const e=this.getToggledState().icon;return"string"==typeof e?{dark:r.Uri.file(s.W.instance.context.asAbsolutePath(`images/dark/${e}.svg`)),light:r.Uri.file(s.W.instance.context.asAbsolutePath(`images/light/${e}.svg`))}:e}get tooltip(){return this.getToggledState().tooltip}get on(){return this._on}set on(e){this._on=e}getState(){return"function"==typeof this.state?this.state():this.state}getToggledState(){return this.on?this.getState().on:this.getState().off}}class SelectableQuickInputButton extends ToggleQuickInputButton{constructor(e,t,i=!1){super({off:{tooltip:e,icon:t.off},on:{tooltip:e,icon:t.on}},i)}}const n={iconPath:new r.ThemeIcon("clear-all"),tooltip:"Clear"},o={iconPath:new r.ThemeIcon("sync"),tooltip:"Fetch"},a={iconPath:new r.ThemeIcon("refresh"),tooltip:"Load More"},c=class extends SelectableQuickInputButton{constructor(e=!1){super("Match Case",{off:"icon-match-case",on:"icon-match-case-selected"},e)}},l=class extends SelectableQuickInputButton{constructor(e=!1){super("Match All",{off:"icon-match-all",on:"icon-match-all-selected"},e)}},h=class extends SelectableQuickInputButton{constructor(e=!1){super("Match using Regular Expressions",{off:"icon-match-regex",on:"icon-match-regex-selected"},e)}},u={iconPath:new r.ThemeIcon("git-commit"),tooltip:"Choose a Specific Commit"},d=class extends ToggleQuickInputButton{constructor(e=!1,t,i){super((()=>({on:{tooltip:"Choose a Specific Commit",icon:new r.ThemeIcon("git-commit")},off:{tooltip:"Choose a Branch"+(t.showTags?" or Tag":""),icon:new r.ThemeIcon("git-branch")}})),e),this.onDidClick=i}},p={iconPath:new r.ThemeIcon("empty-window"),tooltip:"Open in New Window"},m={iconPath:new r.ThemeIcon("search"),tooltip:"Reveal in Side Bar"},g={iconPath:new r.ThemeIcon("settings-gear"),tooltip:"Set as Default Remote"},f={iconPath:new r.ThemeIcon("eye"),tooltip:"Open Details"},w={iconPath:new r.ThemeIcon("compare-changes"),tooltip:"Open Changes"},v={iconPath:new r.ThemeIcon("link-external"),tooltip:"Show Results in Side Bar"},y=class extends SelectableQuickInputButton{constructor(e=!1){super("Show Tags",{off:new r.ThemeIcon("tag"),on:"icon-tag-selected"},e)}},b={iconPath:new r.ThemeIcon("gitlens-confirm-checked"),tooltip:"You will be presented with a required confirmation step before the action is performed"},C=class extends ToggleQuickInputButton{constructor(e=!1,t,i){super((()=>({on:{tooltip:t?"For future actions, you will be presented with confirmation step before the action is performed\nClick to toggle":"You will be presented with confirmation step before the action is performed\nClick to toggle",icon:new r.ThemeIcon("gitlens-confirm-checked")},off:{tooltip:t?"For future actions, you won't be presented with confirmation step before the action is performed\nClick to toggle":"You won't be presented with confirmation step before the action is performed\nClick to toggle",icon:new r.ThemeIcon("gitlens-confirm-unchecked")}})),e),this.onDidClick=i}}},847:(e,t,i)=>{i.d(t,{B$:()=>L,C8:()=>B,C_:()=>W,FO:()=>Q,KT:()=>oe,Kf:()=>V,Lt:()=>Z,Mb:()=>ne,NQ:()=>H,Oz:()=>pe,Qp:()=>ie,Rj:()=>J,UP:()=>se,Yv:()=>Y,bR:()=>X,f6:()=>G,fD:()=>ce,fG:()=>q,j8:()=>te,lA:()=>ee,nI:()=>le,s4:()=>K,sd:()=>j,up:()=>ue,v$:()=>U,xC:()=>z,yY:()=>re});var r=i(5255),s=i(6894),n=i(3401),o=i(6897),a=i(7445),c=i(4155),l=i(8834),h=i(252),u=i(6713),d=i(5025),p=i(5367),m=i(6450),g=i(4321),f=i(3050),w=i(6503),v=i(3646),y=i(9502),b=i(4794),C=i(6516),A=i(3931),S=i(9729),P=i(3599),k=i(1742),D=i(5009),R=i(2800),_=i(5148),T=i(1774),F=i(3105),$=i(7469),I=i(3620),x=i(2509),O=i(4239),E=i(3016);function B(e,t,i,s){if(1===i.repos.length)return s?`${e}${(0,I.$G)(s,r.d$-e.length)}`:e;let n;return n=null!=t.repo?`${s??""}${(0,I.vk)(r.NE.Dot,2,2)}${t.repo.formattedName}`:1===t.repos.length?`${s??""}${(0,I.vk)(r.NE.Dot,2,2)}${t.repos[0].formattedName}`:`${(0,I.vk)(r.NE.Dot,2,2)}${t.repos.length} repositories`,`${e}${(0,I.$G)(n,r.d$-e.length)}`}async function W(e,t){return L(e,["branches"],{buttons:t?.buttons,filter:null!=t?.filter?{branches:t.filter}:void 0,picked:t?.picked,sort:null==t?.sort||{branches:t.sort}})}async function M(e,t){if(null==e)return[];return(await e.getRemotes(null!=t?.filter?{filter:t.filter}:void 0)).map((e=>(0,k.vl)(e,null!=t?.picked&&("string"==typeof t.picked?e.name===t.picked:t.picked.includes(e.name)),{buttons:t?.buttons,upstream:!0})))}async function N(e,{buttons:t,filter:i,includeStatus:r,picked:s}){const n=e instanceof v._j?await e.getWorktrees():e;return Promise.all([...n.filter((e=>null==i||i(e))).map((async e=>{let i,n=!1;if(r)try{i=await e.getStatus()}catch{n=!0}return(0,k.E0)(e,null!=s&&("string"==typeof s?e.uri.toString()===s:s.includes(e.uri.toString())),n,{buttons:t,path:!0,status:i})}))])}async function L(e,t,{buttons:i,filter:r,picked:s,sort:n}={}){if(null==e)return[];let o,a,c=!1;if(e instanceof v._j||1===e.length){c=!0;const i=e instanceof v._j?e:e[0],[s,l]=await Promise.allSettled([t.includes("branches")?i.getBranches({filter:r?.branches,sort:"boolean"==typeof n?n:n?.branches}):void 0,t.includes("tags")?i.getTags({filter:r?.tags,sort:!0}):void 0]);o=(0,$.Sb)(s)?.values??[],a=(0,$.Sb)(l)?.values??[]}else{const[i,s]=await Promise.allSettled([t.includes("branches")?Promise.allSettled(e.map((e=>e.getBranches({filter:r?.branches,sort:"boolean"==typeof n?n:n?.branches})))):void 0,t.includes("tags")?Promise.allSettled(e.map((e=>e.getTags({filter:r?.tags,sort:"boolean"==typeof n?n:n?.tags})))):void 0]),c="fulfilled"===i.status?i.value?.filter((e=>"fulfilled"===e.status))?.map((e=>e.value.values)):void 0,l="fulfilled"===s.status?s.value?.filter((e=>"fulfilled"===e.status))?.map((e=>e.value.values)):void 0;t.includes("branches")&&null!=c&&(o=(0,p.YF)((0,R.jV)(c,((e,t)=>e.name===t.name)))),t.includes("tags")&&null!=l&&(a=(0,y.Pj)((0,R.jV)(l,((e,t)=>e.name===t.name))))}return null!=o&&0!==o.length||null!=a&&0!==a.length?null==o||0===o.length||null!=a&&0!==a.length?null==a||0===a.length||null!=o&&0!==o.length?[(0,S.fz)("Branches"),...await Promise.all(o.filter((e=>!e.remote)).map((e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!c&&"checkmark",ref:c,status:c})))),(0,S.fz)("Tags"),...a.map((e=>(0,k.MH)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,message:!1,ref:c,type:!0}))),(0,S.fz)("Remote Branches"),...await Promise.all(o.filter((e=>e.remote)).map((e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!c&&"checkmark",ref:c,status:c,type:"remote"}))))]:a.map((e=>(0,k.MH)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,message:!1,ref:c}))):[(0,S.fz)("Branches"),...await Promise.all(o.filter((e=>!e.remote)).map((e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!c&&"checkmark",ref:c,status:c,type:"remote"})))),(0,S.fz)("Remote Branches"),...await Promise.all(o.filter((e=>e.remote)).map((e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!c&&"checkmark",ref:c,status:c,type:"remote"}))))]:[]}function U(e,t){return async(i,r)=>{let n=!1;if(r.startsWith("#")&&(n=!0,r=r.substring(1)),null==e)return!1;if(Array.isArray(e)){if(1!==e.length)return!1;e=e[0]}if(n&&t?.ranges&&(0,g.yk)(r))return i.items=[(0,k.RP)(r,e.path,!0,{alwaysShow:!0,buttons:t?.buttons,ref:!1,icon:!1})],!0;if(!await s.W.instance.git.validateReference(e.path,r))return!!n&&(i.items=[(0,P.fw)(P.Xe.Back,!0,{label:"Enter a reference or commit SHA"})],!0);if(!n&&await s.W.instance.git.hasBranchOrTag(e.path,{filter:{branches:e=>e.name.includes(r),tags:e=>e.name.includes(r)}}))return!1;const o=await s.W.instance.git.getCommit(e.path,r);return i.items=[(0,k.YY)(o,!0,{alwaysShow:!0,buttons:t?.buttons,compact:!0,icon:!0})],!0}}async function*G(e,t,i){const r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter branch name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid branch name"];if("repo"in e){if(!await s.W.instance.git.validateBranchOrTagName(e.repo.path,t))return[!1,`'${t}' isn't a valid branch name`];return await e.repo.getBranch(t)?[!1,`A branch named '${t}' already exists`]:[!0,void 0]}let i=!0;for(const r of e.repos){if(i=await s.W.instance.git.validateBranchOrTagName(r.path,t),!i)return[!1,`'${t}' isn't a valid branch name`];if(await r.getBranch(t))return[!1,`A branch named '${t}' already exists`]}return[!0,void 0]}}),n=yield r;return(0,O.$V)(r,e,n)&&await(0,O.Wm)(r,e,n)?n:O.Vd}async function*H(e,t,i){const r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid remote name"];if(!!/[^a-zA-Z0-9-_.]/.test(t))return[!1,`'${t}' isn't a valid remote name`];if("repo"in e){if(0!==(await e.repo.getRemotes({filter:e=>e.name===t})).length)return[!1,`A remote named '${t}' already exists`]}return[!0,void 0]}}),s=yield r;return(0,O.$V)(r,e,s)&&await(0,O.Wm)(r,e,s)?s:O.Vd}async function*V(e,t,i){const r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote URL",validate:e=>{if(null==e)return[!1,void 0];if(0===(e=e.trim()).length)return[!1,"Please enter a valid remote URL"];const t=b.gK.test(e);return[t,t?void 0:`'${e}' isn't a valid remote URL`]}}),s=yield r;return(0,O.$V)(r,e,s)&&await(0,O.Wm)(r,e,s)?s:O.Vd}async function*q(e,t,i){const r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter tag name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid tag name"];if("repo"in e){const i=await s.W.instance.git.validateBranchOrTagName(e.repo.path,t);return[i,i?void 0:`'${t}' isn't a valid tag name`]}let i=!0;for(const r of e.repos)if(i=await s.W.instance.git.validateBranchOrTagName(r.path,t),!i)return[!1,`'${t}' isn't a valid branch name`];return[!0,void 0]}}),n=yield r;return(0,O.$V)(r,e,n)&&await(0,O.Wm)(r,e,n)?n:O.Vd}async function*j(e,t,{filter:i,picked:r,placeholder:s,titleContext:o}){const a=await W(e.repo,{buttons:[E.Nv],filter:i,picked:r}),c=(0,O.xf)({title:B(`${t.title}${o??""}`,e,t),placeholder:0===a.length?`No branches found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===a.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&n.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await n.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),l=yield c;return(0,O.i9)(c,e,l)?l[0].item:O.Vd}async function*Q(e,t,{filter:i,picked:r,placeholder:s,sort:o,titleContext:a}){const c=await W(e.repo,{buttons:[E.Nv],filter:i,picked:r,sort:o}),l=(0,O.xf)({multiselect:0!==c.length,title:B(`${t.title}${a??""}`,e,t),placeholder:0===c.length?`No branches found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===c.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:c,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&n.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await n.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),h=yield l;return(0,O.i9)(l,e,h)?h.map((e=>e.item)):O.Vd}async function*Y(e,t,{filter:i,picked:s,placeholder:a,titleContext:c,value:l,additionalButtons:h,ranges:d}){t.showTags=!0;const p=new E.cq(t.showTags),m=async()=>L(e.repo,t.showTags?["branches","tags"]:["branches"],{buttons:"boolean"==typeof t.pickCommitForItem?[E.Ft,E.Nv]:[E.Nv],filter:i,picked:s,sort:!0}),f=await m(),w=(0,O.xf)({title:B(`${t.title}${c??""}`,e,t),placeholder:0===f.length?`No branches${t.showTags?" or tags":""} found in ${e.repo.formattedName}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:l,selectValueWhenShown:!0,items:0===f.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:f,additionalButtons:[...h??[],p],onDidClickItemButton:(e,i,{item:r})=>i===E.Ft?(t.pickCommitForItem=!0,!0):(i===E.Nv&&((0,g.UR)(r)?n.ay(r,{select:!0,focus:!1,expand:!0}):(0,g.gA)(r)?u.ay(r,{select:!0,focus:!1,expand:!0}):(0,g.FT)(r)&&o.Fw(r,{pin:!1,preserveFocus:!0})),!1),onDidClickButton:async(i,s)=>{if(s===p){i.busy=!0;try{t.showTags=!t.showTags,p.on=t.showTags;const s=await m();i.placeholder=0===s.length?`${e.repo.formattedName} has no branches${t.showTags?" or tags":""}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=s}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;const t=e.activeItems[0].item;(0,g.UR)(t)?n.ay(t,{select:!0,focus:!1,expand:!0}):(0,g.gA)(t)?u.ay(t,{select:!0,focus:!1,expand:!0}):(0,g.FT)(t)&&o.Fw(t,{pin:!1,preserveFocus:!0})},onValidateValue:U(e.repo,{ranges:d})}),v=yield w;return(0,O.i9)(w,e,v)?v[0].item:O.Vd}async function*z(e,t,{filter:i,picked:s,placeholder:a,titleContext:c,value:l}){t.showTags=1===e.repos.length;const h=new E.cq(t.showTags),d=()=>L(e.repos,t.showTags?["branches","tags"]:["branches"],{buttons:[E.Nv],filter:{branches:1===e.repos.length?void 0:e=>!e.remote,...i},picked:s??e.reference?.ref,sort:{branches:{orderBy:"date:desc"},tags:{orderBy:"date:desc"}}}),p=await d(),m=(0,O.xf)({title:B(`${t.title}${c??""}`,e,t),placeholder:0===p.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:l??((0,g.FT)(e.reference)?e.reference.ref:void 0),selectValueWhenShown:!0,items:0===p.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:p,additionalButtons:[h],onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&((0,g.UR)(i)?n.ay(i,{select:!0,focus:!1,expand:!0}):(0,g.gA)(i)?u.ay(i,{select:!0,focus:!1,expand:!0}):(0,g.FT)(i)&&o.Fw(i,{pin:!1,preserveFocus:!0}))},onDidClickButton:async(i,s)=>{if(s===h){i.busy=!0;try{t.showTags=!t.showTags,h.on=t.showTags;const s=await d();i.placeholder=0===s.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=s}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;const t=e.activeItems[0].item;(0,g.UR)(t)?n.ay(t,{select:!0,focus:!1,expand:!0}):(0,g.gA)(t)?u.ay(t,{select:!0,focus:!1,expand:!0}):(0,g.FT)(t)&&o.Fw(t,{pin:!1,preserveFocus:!0})},onValidateValue:U(e.repos)}),f=yield m;return(0,O.i9)(m,e,f)?f[0].item:O.Vd}async function*K(e,t,{ignoreFocusOut:i,log:r,onDidLoadMore:s,picked:n,placeholder:a,showInSideBarCommand:c,showInSideBarButton:l,titleContext:h}){function u(e){if(null==e)return[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)];const t=[E._9,E.Nv];return null!=(0,F.Ps)(e.commits)?.[1].file&&t.splice(0,0,E.DY),[...(0,F.UI)(e.commits.values(),(e=>(0,k.YY)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:t,compact:!0,icon:!0}))),...e?.hasMore?[(0,P.fw)(P.Xe.LoadMore)]:[]]}const d=(0,O.xf)({title:B(`${t.title}${h??""}`,e,t),placeholder:"string"==typeof a?a:a(t,r),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,value:"string"==typeof n&&0===r?.count?n:void 0,selectValueWhenShown:!0,items:null!=c?[c,...u(r)]:u(r),onDidLoadMore:async e=>(e.keepScrollPosition=!0,r=await(r?.more?.(_.D.get("advanced.maxListItems"))),s?.(r),"string"!=typeof a&&(e.placeholder=a(t,r)),u(r)),additionalButtons:[...null!=l?.button?[l?.button]:[],...r?.hasMore?[E.Q0]:[]],onDidClickItemButton:(e,t,i)=>{if(!S.$w.is(i))switch(t){case E._9:o.Fw(i.item,{pin:!1,preserveFocus:!0});break;case E.Nv:o.ay(i.item,{select:!0,focus:!1,expand:!0});break;case E.DY:{const e=i.item.file?.path;null!=e&&o.vw(e,i.item);break}}},onDidClickButton:(e,t)=>{if(null==r)return;const i=e.activeItems.filter((e=>!S.$w.is(e)));t===l?.button&&l.onDidClick(i)},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{if(0===e.activeItems.length)return;const i=e.activeItems.filter((e=>!S.$w.is(e)));"ctrl+right"===t?o.Fw(i[0].item,{pin:!1,preserveFocus:!0}):await o.ay(i[0].item,{select:!0,focus:!1,expand:!0})},onValidateValue:U(e.repo,{buttons:[E._9,E.Nv]})}),p=yield d;return(0,O.i9)(d,e,p)?S.$w.is(p[0])?((0,O.uZ)(e),await p[0].execute(),O.Vd):p[0].item:O.Vd}function*J(e,t,{log:i,onDidLoadMore:r,picked:s,placeholder:n,titleContext:a}){function c(e){return null==e?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:[...(0,F.UI)(e.commits.values(),(e=>(0,k.YY)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:[E._9,E.Nv],compact:!0,icon:!0})))]}const l=(0,O.xf)({title:B(`${t.title}${a??""}`,e,t),multiselect:null!=i,placeholder:"string"==typeof n?n:n(t,i),matchOnDescription:!0,matchOnDetail:!0,items:c(i),onDidLoadMore:async e=>(e.keepScrollPosition=!0,i=await(i?.more?.(_.D.get("advanced.maxListItems"))),r?.(i),"string"!=typeof n&&(e.placeholder=n(t,i)),c(i)),additionalButtons:[...i?.hasMore?[E.Q0]:[]],onDidClickItemButton:(e,t,{item:i})=>{switch(t){case E._9:o.Fw(i,{pin:!1,preserveFocus:!0});break;case E.Nv:o.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&("ctrl+right"===t?o.Fw(e.activeItems[0].item,{pin:!1,preserveFocus:!0}):await o.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0}))}}),h=yield l;return(0,O.i9)(l,e,h)?h.map((e=>e.item)):O.Vd}async function*X(e,t,i="Choose contributors"){const r=(await s.W.instance.git.getOrOpenScmRepository(e.repo.path))?.inputBox.value,n=await s.W.instance.git.getContributors(e.repo.path),o=(0,O.xf)({title:B(t.title,e,t),allowEmpty:!0,multiselect:!0,placeholder:i,matchOnDescription:!0,items:await Promise.all(n.map((e=>(0,k.RI)(e,r?.includes(e.getCoauthor()),{buttons:[E.Nv]})))),onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&a.a(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&a.a(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),c=yield o;return(0,O.i9)(o,e,c)?c.map((e=>e.item)):O.Vd}async function*Z(e,t,{filter:i,picked:r,placeholder:s,titleContext:n}){const o=await M(e.repo,{buttons:[E.Nv],filter:i,picked:r}),a=(0,O.xf)({title:B(`${t.title}${n??""}`,e,t),placeholder:0===o.length?`No remotes found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===o.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:o,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&c.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await c.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),l=yield a;return(0,O.i9)(a,e,l)?l[0].item:O.Vd}async function*ee(e,t,i="Choose a repository"){if("string"==typeof e.repo&&(e.repo=s.W.instance.git.getRepository(e.repo),null!=e.repo))return e.repo;const r=e.repo??await s.W.instance.git.getOrOpenRepositoryForEditor(),n=(0,O.xf)({title:t.title,placeholder:i,items:0===t.repos.length?[(0,P.fw)(P.Xe.Cancel)]:await Promise.all(t.repos.map((e=>(0,k.FO)(e,e.id===r?.id,{branch:!0,buttons:[E.Nv],fetched:!0,status:!0})))),onDidClickItemButton:(e,i,{item:r})=>{i===E.Nv&&l.ay(r.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&l.ay(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}}),o=yield n;return(0,O.i9)(n,e,o)?o[0].item:O.Vd}async function*te(e,t,i){let r;if(i={placeholder:"Choose repositories",skipIfPossible:!1,...i},null!=e.repos)if((0,R.GI)(e.repos)){if(r=(0,R.DZ)(e.repos,(e=>t.repos.find((t=>t.path===e)))),i.skipIfPossible&&0!==r.length&&e.repos.length===r.length)return r}else r=e.repos;else{const e=await s.W.instance.git.getOrOpenRepositoryForEditor();r=null!=e?[e]:[]}const n=(0,O.xf)({multiselect:!0,title:t.title,placeholder:i.placeholder,items:0===t.repos.length?[(0,P.fw)(P.Xe.Cancel)]:await Promise.all(t.repos.map((e=>(0,k.FO)(e,r.some((t=>t.id===e.id)),{branch:!0,buttons:[E.Nv],fetched:!0,status:!0})))),onDidClickItemButton:(e,i,{item:r})=>{i===E.Nv&&l.ay(r.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&l.ay(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}}),o=yield n;return(0,O.i9)(n,e,o)?o.map((e=>e.item)):O.Vd}function*ie(e,t,{ignoreFocusOut:i,stash:r,picked:s,placeholder:n,titleContext:o}){const a=(0,O.xf)({title:B(`${t.title}${o??""}`,e,t),placeholder:"string"==typeof n?n:n(t,r),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,items:null==r?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:[...(0,F.UI)(r.commits.values(),(e=>(0,k.YY)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:[E._9],compact:!0,icon:!0})))],onDidClickItemButton:(e,t,{item:i})=>{t===E._9&&h.Fw(i,{pin:!1,preserveFocus:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await h.Fw(e.activeItems[0].item,{pin:!1,preserveFocus:!0})}}),c=yield a;return(0,O.i9)(a,e,c)?c[0].item:O.Vd}async function*re(e,t,{filter:i,picked:r,placeholder:s,titleContext:n}){const o=await async function(e,t){return L(e,["tags"],{buttons:t?.buttons,filter:null!=t?.filter?{tags:t.filter}:void 0,picked:t?.picked,sort:null==t?.sort||{tags:t.sort}})}(e.repo,{buttons:[E.Nv],filter:i,picked:r}),a=(0,O.xf)({multiselect:0!==o.length,title:B(`${t.title}${n??""}`,e,t),placeholder:0===o.length?`No tags found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===o.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:o,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&u.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await u.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),c=yield a;return(0,O.i9)(a,e,c)?c.map((e=>e.item)):O.Vd}async function*se(e,t,{filter:i,includeStatus:r,picked:s,placeholder:n,titleContext:o}){const a=await N(t.worktrees??e.repo,{buttons:[E._r,E.Nv],filter:i,includeStatus:r,picked:s}),c=(0,O.xf)({title:B(`${t.title}${o??""}`,e,t),placeholder:0===a.length?`No worktrees found in ${e.repo.formattedName}`:n,matchOnDetail:!0,items:0===a.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case E._r:(0,x.ic)(i.uri,{location:"newWindow"});break;case E.Nv:d.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await d.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),l=yield c;return(0,O.i9)(c,e,l)?l[0].item:O.Vd}async function*ne(e,t,{filter:i,includeStatus:r,picked:s,placeholder:n,titleContext:o}){const a=await N(t.worktrees??e.repo,{buttons:[E._r,E.Nv],filter:i,includeStatus:r,picked:s}),c=(0,O.xf)({multiselect:0!==a.length,title:B(`${t.title}${o??""}`,e,t),placeholder:0===a.length?`No worktrees found in ${e.repo.formattedName}`:n,matchOnDetail:!0,items:0===a.length?[(0,P.fw)(P.Xe.Back,!0),(0,P.fw)(P.Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case E._r:(0,x.ic)(i.uri,{location:"newWindow"});break;case E.Nv:d.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await d.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),l=yield c;return(0,O.i9)(c,e,l)?l.map((e=>e.item)):O.Vd}async function*oe(e,t){const i=(0,O.xf)({title:B((0,g.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:(0,g.Wh)(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:await ae(e),onDidClickItemButton:(t,i,r)=>{switch(i){case E._9:(0,g.pZ)(e.reference)?h.Fw(e.reference,{pin:!1,preserveFocus:!0}):o.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case E.Nv:(0,g.pZ)(e.reference)?h.ay(e.reference,{select:!0,focus:!1,expand:!0}):o.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),r=yield i;return(0,O.i9)(i,e,r)?r[0]:O.Vd}async function ae(e){const t=[new A.EE(e.reference),new A.sQ(e.reference)];let i;if((0,m.G2)(e.reference))t.push((0,S.fz)("Actions"),new k.Wv("Apply Stash...",{command:"stash",state:{subcommand:"apply",repo:e.repo,reference:e.reference}}),new k.Wv("Delete Stash...",{command:"stash",state:{subcommand:"drop",repo:e.repo,reference:e.reference}}),(0,S.fz)(),new A.NC(e.reference));else{const r=await s.W.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});r?.length&&t.push((0,S.fz)(f.ss.getHighlanderProviderName(r)??"Remote"),new D.az(r,{type:w.J.Commit,sha:e.reference.sha}),new D.eO(r,{type:w.J.Commit,sha:e.reference.sha})),t.push((0,S.fz)("Actions"));const n=await s.W.instance.git.getBranch(e.repo.path),[o,a]=await Promise.all([null!=n?s.W.instance.git.getCommitBranches(e.repo.path,e.reference.ref,n.name,{commitDate:(0,m.f_)(e.reference)?e.reference.committer.date:void 0}):void 0,n?.remote||null==n?.upstream?void 0:e.reference.isPushed()]);Boolean(o?.length)?(i=!a,i&&t.push(new k.Wv("Push to Commit...",{command:"push",state:{repos:e.repo,reference:e.reference}})),t.push(new k.Wv("Revert Commit...",{command:"revert",state:{repo:e.repo,references:[e.reference]}}),new k.Wv(`Reset ${n?.name??"Current Branch"} to Commit...`,{command:"reset",state:{repo:e.repo,reference:e.reference}}),new k.Wv(`Reset ${n?.name??"Current Branch"} to Previous Commit...`,{command:"reset",state:{repo:e.repo,reference:(0,g.xB)(`${e.reference.ref}^`,e.reference.repoPath,{refType:"revision",name:`${e.reference.name}^`,message:e.reference.message})}}))):t.push(new k.Wv("Cherry Pick Commit...",{command:"cherry-pick",state:{repo:e.repo,references:[e.reference]}})),t.push(new k.Wv(`Rebase ${n?.name??"Current Branch"} onto Commit...`,{command:"rebase",state:{repo:e.repo,reference:e.reference}}),new k.Wv("Switch to Commit...",{command:"switch",state:{repos:[e.repo],reference:e.reference}}),(0,S.fz)(),new k.Wv("Create Branch at Commit...",{command:"branch",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),new k.Wv("Create Tag at Commit...",{command:"tag",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),(0,S.fz)("Copy"),new A.OT(e.reference),new A.NC(e.reference))}return t.push((0,S.fz)("Open"),new A.CV(e.reference),new A.Y4(e.reference),new A.o$(e.reference),(0,S.fz)(),new A.lN(e.reference),new A.A1(e.reference)),t.push((0,S.fz)("Compare"),new A.Jw(e.reference),new A.m5(e.reference)),t.push((0,S.fz)(),new A.eG(e.reference),new A.nl(e.reference)),t.push((0,S.fz)("Browse"),new A.Lf(e.reference,{openInNewWindow:!1}),new A.Lf(e.reference,{before:!0,openInNewWindow:!1}),new A.Lf(e.reference,{openInNewWindow:!0}),new A.Lf(e.reference,{before:!0,openInNewWindow:!0})),t.unshift(new A.PF(e.reference,{unpublished:i,hint:"Click to see all changed files"})),t}function*ce(e,t,i){e.reference.files;const r=(0,O.xf)({title:B((0,g.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:(0,g.Wh)(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:[new A.PF(e.reference,{picked:null==e.fileName,hint:`Click to see ${(0,m.G2)(e.reference)?"stash":"commit"} actions`}),(0,S.fz)("Files"),...e.reference.files?.map((t=>new A.zr(e.reference,t,i?.picked===t.path)))??[]],matchOnDescription:!0,onDidClickItemButton:(t,i,r)=>{switch(i){case E._9:(0,g.pZ)(e.reference)?h.Fw(e.reference,{pin:!1,preserveFocus:!0}):o.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case E.Nv:(0,g.pZ)(e.reference)?h.ay(e.reference,{select:!0,focus:!1,expand:!0}):o.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),s=yield r;return(0,O.i9)(r,e,s)?s[0]:O.Vd}async function*le(e,t){const i=(0,O.xf)({title:B((0,g.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t,`${(0,I.vk)(r.NE.Dot,2,2)}${(0,T.d)(e.fileName,{fileOnly:!0})}`),placeholder:`${(0,T.d)(e.fileName,{relativeTo:e.repo.path})} in ${(0,g.Wh)(e.reference,{icon:!1})}`,ignoreFocusOut:!0,items:await he(e),matchOnDescription:!0,onDidClickItemButton:(t,i,r)=>{switch(i){case E._9:(0,g.pZ)(e.reference)?h.Fw(e.reference,{pin:!1,preserveFocus:!0}):o.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case E.Nv:(0,g.pZ)(e.reference)?h.ay(e.reference,{select:!0,focus:!1,expand:!0}):o.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),s=yield i;return(0,O.i9)(i,e,s)?s[0]:O.Vd}async function he(e){const t=await e.reference.findFile(e.fileName);if(null==t)return[];const i=[new A.EE(e.reference),new A.sQ(e.reference)];if((0,m.G2)(e.reference))i.push((0,S.fz)(),new A.NC(e.reference),(0,S.fz)("Actions"),new A.do(e.reference,t),new A.QP(e.reference,t),(0,S.fz)(),new A.NC(e.reference));else{const r=await s.W.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});r?.length&&i.push((0,S.fz)(f.ss.getHighlanderProviderName(r)??"Remote"),new D.az(r,{type:w.J.Revision,fileName:e.fileName,commit:e.reference}),new D.eO(r,{type:w.J.Revision,fileName:e.fileName,commit:e.reference}),(0,S.fz)(),new D.az(r,{type:w.J.Commit,sha:e.reference.ref}),new D.eO(r,{type:w.J.Commit,sha:e.reference.sha})),i.push((0,S.fz)("Actions"),new A.do(e.reference,t),new A.QP(e.reference,t),(0,S.fz)("Copy"),new A.OT(e.reference),new A.NC(e.reference))}return i.push((0,S.fz)("Open"),new A.lp(e.reference,e.fileName),new A.aU(e.reference,e.fileName),new A.xL(e.reference,e.fileName),(0,S.fz)()),"D"!==t.status&&i.push(new A.ZO(e.reference,t)),i.push(new A.Wt(e.reference,t)),i.push((0,S.fz)("Compare"),new A.Jw(e.reference),new A.m5(e.reference)),i.push((0,S.fz)("Browse"),new A.Lf(e.reference,{openInNewWindow:!1}),new A.Lf(e.reference,{before:!0,openInNewWindow:!1}),new A.Lf(e.reference,{openInNewWindow:!0}),new A.Lf(e.reference,{before:!0,openInNewWindow:!0})),i.unshift(new A.PF(e.reference,{file:t,hint:"Click to see all changed files"})),i}function*ue(e,t){const i=t.status.getUpstreamStatus({expand:!0,separator:", "}),r=t.status.getFormattedDiffStatus({expand:!0,separator:", "}),s=(0,O.xf)({title:B(t.title,e,t),placeholder:`${i?`${i}, ${r}`:r}`,ignoreFocusOut:!0,items:de(e,t),keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),n=yield s;return(0,O.i9)(s,e,n)?n[0]:O.Vd}function de(e,t){const i=[],s=t.status.computeWorkingTreeStatus();let n;return n=0===s.staged&&0===s.unstaged?"No working tree changes":`$(files) ${s.staged?`${(0,I._6)("staged file",s.staged)} (${s.stagedStatus})`:""}${s.unstaged?`${s.staged?", ":""}${(0,I._6)("unstaged file",s.unstaged)} (${s.unstagedStatus})`:""}`,t.status.upstream?(0===t.status.state.ahead&&0===t.status.state.behind?i.push((0,P.fw)(P.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is up to date with $(git-branch) ${t.status.upstream}`,detail:n})):0!==t.status.state.ahead&&0!==t.status.state.behind?i.push((0,P.fw)(P.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has diverged from $(git-branch) ${t.status.upstream}`,detail:n})):0!==t.status.state.ahead?i.push((0,P.fw)(P.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is ahead of $(git-branch) ${t.status.upstream}`,detail:n})):0!==t.status.state.behind&&i.push((0,P.fw)(P.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is behind $(git-branch) ${t.status.upstream}`,detail:n})),0!==t.status.state.behind&&i.push(new k.Wv(`$(cloud-download) ${(0,I._6)("commit",t.status.state.behind)} behind`,{command:"log",state:{repo:e.repo,reference:(0,g.xB)((0,g.oI)(t.status.ref,t.status.upstream),e.repo.path)}})),0!==t.status.state.ahead&&i.push(new k.Wv(`$(cloud-upload) ${(0,I._6)("commit",t.status.state.ahead)} ahead`,{command:"log",state:{repo:e.repo,reference:(0,g.xB)((0,g.oI)(t.status.upstream,t.status.ref),e.repo.path)}}))):i.push((0,P.fw)(P.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has no upstream`,detail:n})),t.status.files.length&&(i.push(new A.K6(s.stagedAddsAndChanges.concat(s.unstagedAddsAndChanges))),i.push(new A.rl(s.stagedAddsAndChanges.concat(s.unstagedAddsAndChanges)))),s.staged>0&&(i.push(new A.K6(s.stagedAddsAndChanges,{label:"$(files) Open Staged Files"})),i.push(new A.rl(s.stagedAddsAndChanges,{label:"$(files) Open Only Staged Files"}))),s.unstaged>0&&(i.push(new A.K6(s.unstagedAddsAndChanges,{label:"$(files) Open Unstaged Files"})),i.push(new A.rl(s.unstagedAddsAndChanges,{label:"$(files) Open Only Unstaged Files"}))),t.status.files.length&&i.push(new S.$w("$(x) Close Unchanged Files",r.Gh.CloseUnchangedFiles)),i}async function*pe(e,t,i){const r=await s.W.instance.git.access(i,e.repo.path);if(r.allowed)return;const n=[];let o;if(!1===r.subscription.current.account?.verified)n.push((0,P.fw)(P.Xe.RequiresVerification,!0)),o="You must verify your email before you can continue";else{if(null==r.subscription.required)return;o="✨ Requires a trial or paid plan for use on privately hosted repos",(0,C.aG)(r.subscription.required)&&null!=r.subscription.current.account?(o="✨ Requires a paid plan for use on privately hosted repos",n.push((0,P.fw)(P.Xe.RequiresPaidSubscription,!0))):null!=r.subscription.current.account||(0,C.gA)(r.subscription.current)?n.push((0,P.fw)(P.Xe.ExtendTrial)):n.push((0,P.fw)(P.Xe.StartPreviewTrial,!0))}const a=(0,O.xf)({title:B(t.title,e,t),placeholder:o,items:[...n,(0,P.fw)(P.Xe.Cancel)]}),c=yield a;return(0,O.i9)(a,e,c)?void 0:O.Vd}},4239:(e,t,i)=>{i.d(t,{$V:()=>d,Dr:()=>a,Gj:()=>o,Ke:()=>m,PH:()=>v,Tv:()=>p,Vd:()=>c,Wm:()=>h,YB:()=>l,a:()=>n,i9:()=>u,jf:()=>f,tR:()=>QuickCommand,uZ:()=>w,xf:()=>g});var r=i(3599),s=i(5148);function n(e){return"object"==typeof e&&null!=e.show}function o(e){return"object"==typeof e&&null==e.items&&null==e.show}function a(e){return"object"==typeof e&&null!=e.items}const c=Symbol("BreakStep");class QuickCommand{constructor(e,t,i,r,s={}){this.container=e,this.key=t,this.label=i,this.title=r,this.description=s.description,this.detail=s.detail}description;detail;initialState;_currentStep;_stepsIterator;get canConfirm(){return!0}get canSkipConfirm(){return!0}_picked=!1;get picked(){return this._picked}set picked(e){this._picked=e,e||(this._pickedVia="menu")}_pickedVia="menu";get pickedVia(){return this._pickedVia}set pickedVia(e){this._pickedVia=e}get skipConfirmKey(){return`${this.key}:${this.pickedVia}`}get value(){return this._currentStep}confirm(e){return!this.canConfirm||!this.canSkipConfirm||(null!=e?e:!s.D.get("gitCommands.skipConfirmations").includes(this.skipConfirmKey))}isMatch(e){return this.key===e}isFuzzyMatch(e){return this.label===e}executeSteps(){return this.steps(this.getStepState(!0))}async previous(){return(await this.next(r.Xe.Back)).value}async next(e){null==this._stepsIterator&&(this._stepsIterator=this.steps(this.getStepState(!1)));const t=await this._stepsIterator.next(e);return t.done&&(this.initialState=void 0,this._stepsIterator=void 0),t.value===c?(this._currentStep=void 0,{...t,value:void 0}):(this._currentStep=t.value,t)}async retry(){return await this.next(r.Xe.Noop),this.value}canStepsContinue(e){return e.counter>=(e.startingStep??0)}createConfirmStep(e,t,i,r={}){return p(e,t,{title:this.title},i,r)}getStepState(e){return{counter:0,...this.initialState,startingStep:e?this.initialState?.counter??0:0}}}function l(e){return e instanceof QuickCommand}async function h(e,t,i){if(!d(e,t,i))return!1;const[r]=await(e.validate?.(i))??[!0];return!!r&&(t.counter++,!0)}function u(e,t,i){return!!d(e,t,i)&&(!!(e.validate?.(i)??1)&&(t.counter++,!0))}function d(e,t,i){if(null==i)return!1;if((0,r.wX)(i)){switch(i){case r.Xe.Back:t.counter--,t.counter<=(t.startingStep??0)&&(t.counter=0);break;case r.Xe.Cancel:w(t)}return!1}return!0}function p(e,t,i,s,n){return{isConfirmationStep:!0,placeholder:`Confirm ${i.title}`,title:e,ignoreFocusOut:!0,items:[...t,s??(0,r.fw)(r.Xe.Cancel)],selectedItems:[t.find((e=>e.picked))??t[0]],...n??{}}}function m(e){return e.ignoreFocusOut=!0,e}function g(e){return e}function f(e){return e}function w(e){e.counter=-1}function v(e,t){return t.enabled=!1,e.frozen=!0,{[Symbol.dispose]:()=>{e.frozen=!1,t.enabled=!0,t.show()}}}},6199:(e,t,i)=>{i.d(t,{t:()=>d});var r=i(5255),s=i(3050),n=i(635),o=i(9529),a=i(3105),c=i(7139),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n};let d=class extends c.mY{constructor(e){super(r.Gh.ConnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=s.ss.is(e)?{remote:e.name,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(r.Gh.ConnectRemoteProvider,t)}preExecute(e,t){return(0,c.C$)(e)&&(t={...t,remote:e.node.remote.name,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i,r;if(null==e?.repoPath){const e=new Map;for(const t of this.container.git.openRepositories){const i=await t.getRichRemote();null==i?.provider||await i.provider.isConnected()||e.set(t,i)}if(0===e.size)return!1;if(1===e.size){let i;[i,t]=(0,a.Ps)(e),r=i.path}else{const i=await(0,n.E2)(void 0,"Choose which repository to connect to the remote provider",[...e.keys()]);if(null==i?.item)return;r=i.repoPath,t=e.get(i.item)}}else if(null==e?.remote){if(r=e.repoPath,t=await this.container.git.getBestRemoteWithRichProvider(r,{includeDisconnected:!0}),null==t)return!1}else if(r=e.repoPath,i=await this.container.git.getRemotesWithProviders(r),t=i.find((t=>t.name===e.remote)),!t?.hasRichIntegration())return!1;const s=await t.provider.connect();return s&&!(i??await this.container.git.getRemotesWithProviders(r)).some((e=>e.default))&&await t.setAsDefault(!0),s}};d=u([(0,o.WD)()],d);let p=class extends c.mY{constructor(e){super(r.Gh.DisconnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=s.ss.is(e)?{remote:e.name,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(r.Gh.DisconnectRemoteProvider,t)}preExecute(e,t){return(0,c.C$)(e)&&(t={...t,remote:e.node.remote.name,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i;if(null==e?.repoPath){const e=new Map;for(const t of this.container.git.openRepositories){const i=await t.getRichRemote(!0);null!=i&&e.set(t,i)}if(0===e.size)return;if(1===e.size){let r;[r,t]=(0,a.Ps)(e),i=r.path}else{const r=await(0,n.E2)(void 0,"Choose which repository to disconnect from the remote provider",[...e.keys()]);if(null==r?.item)return;i=r.repoPath,t=e.get(r.item)}}else if(null==e?.remote){if(i=e.repoPath,t=await this.container.git.getBestRemoteWithRichProvider(i,{includeDisconnected:!1}),null==t)return}else if(i=e.repoPath,t=(await this.container.git.getRemotesWithProviders(i)).find((t=>t.name===e.remote)),!t?.hasRichIntegration())return;return t.provider.disconnect()}};p=u([(0,o.WD)()],p)},1676:(e,t,i)=>{i.d(t,{C:()=>f});var r=i(5255),s=i(9311),n=i(6897),o=i(7462),a=i(4321),c=i(6934),l=i(7925),h=i(9529),u=i(3105),d=i(4336),p=i(7139),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor;let f=class extends p.pu{constructor(e){super([r.Gh.ShowCommitInView,r.Gh.ShowInDetailsView,r.Gh.ShowCommitsInView]),this.container=e}static getMarkdownCommandArgs(e,t){const i="string"==typeof e?{refs:[e],repoPath:t}:e;return super.getMarkdownCommandArgsCore(r.Gh.ShowCommitInView,i)}preExecute(e,t){return"viewItem"===e.type&&(t={...t},(0,p.en)(e)&&(t.ref=(0,a.qj)(e.node.commit))),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null!=(i={...i}).ref)return(0,n.Fw)(i.ref);if(void 0===i.refs){if(null==(t=(0,p.SX)(t,e)))return;const r=await o.YY.fromUri(t);if(i.repoPath=r.repoPath,null!=e)try{const t=e.document.isDirty?await this.container.git.getBlameForRangeContents(r,e.selection,e.document.getText()):await this.container.git.getBlameForRange(r,e.selection);if(void 0===t)return(0,l.zk)("Unable to find commits");i.refs=[...(0,u.DZ)(t.commits.values(),(e=>e.isUncommitted?void 0:e.ref))]}catch(e){return d.Yd.error(e,"ShowCommitsInViewCommand","getBlameForRange"),(0,l.W8)("Unable to find commits")}else{if(null==r.sha)return;i.refs=[r.sha]}}return 1===i.refs.length?(0,n.Fw)((0,a.xB)(i.refs[0],i.repoPath,{refType:"revision"})):(0,s.m)({command:"search",state:{repo:i?.repoPath,query:(0,c.pU)(i.refs),showResultsInSideBar:!0}})}};f=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&m(t,i,n),n})([(0,h.WD)()],f)},1744:(e,t,i)=>{i.d(t,{o:()=>p});var r=i(5255),s=i(9311),n=i(6897),o=i(7462),a=i(7925),c=i(9529),l=i(4336),h=i(7139),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor;let p=class extends h.Lk{constructor(e){super([r.Gh.RevealCommitInView,r.Gh.ShowQuickCommit]),this.container=e}static getMarkdownCommandArgs(e,t){const i="string"==typeof e?{sha:e,repoPath:t}:e;return super.getMarkdownCommandArgsCore(r.Gh.ShowQuickCommit,i)}preExecute(e,t){return e.command===r.Gh.RevealCommitInView&&((t={...t}).revealInView=!0),"viewItem"===e.type&&((t={...t}).sha=e.node.uri.sha,(0,h.en)(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r,c;if(null==i?.commit)if(null!=i?.repoPath&&null!=i.sha)c=i.repoPath,r=o.YY.fromRepoPath(c);else{if(null==(t=(0,h.SX)(t,e)))return;r=await o.YY.fromUri(t),c=r.repoPath}else null==i.sha&&(i.sha=i.commit.sha),r=i.commit.getGitUri(),c=i.commit.repoPath,null==t&&(t=i.commit.file?.uri);if(null==(i={...i}).sha){if(null==e)return;const t=e.selection.active.line;if(t<0)return;try{const e=await this.container.git.getBlameForLine(r,t);if(null==e)return void(0,a.zk)("Unable to show commit");if(e.commit.isUncommitted)return void(0,a.f3)("Unable to show commit");i.sha=e.commit.sha,c=e.commit.repoPath,i.commit=e.commit}catch(e){return l.Yd.error(e,"ShowQuickCommitCommand",`getBlameForLine(${t})`),void(0,a.W8)("Unable to show commit")}}try{if(null!=i.commit&&null==i.commit.file||(null!=i.repoLog&&(i.commit=i.repoLog.commits.get(i.sha),null==i.commit&&(i.repoLog=void 0)),null==i.repoLog&&(i.commit=await this.container.git.getCommit(c,i.sha))),null==i.commit)return void(0,a.G)("Unable to show commit");if(i.revealInView)return void await(0,n.ay)(i.commit,{select:!0,focus:!0,expand:!0});await(0,s.m)({command:"show",state:{repo:c,reference:i.commit}})}catch(e){l.Yd.error(e,"ShowQuickCommitCommand"),(0,a.W8)("Unable to show commit")}}};p=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&u(t,i,n),n})([(0,c.WD)()],p)},8918:(e,t,i)=>{i.d(t,{M:()=>m});var r=i(9496),s=i(5255),n=i(9311),o=i(7462),a=i(6450),c=i(7925),l=i(9529),h=i(4336),u=i(7139),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor;let m=class extends u.Lk{constructor(e){super([s.Gh.ShowQuickCommitFile,s.Gh.ShowQuickCommitRevision,s.Gh.ShowQuickCommitRevisionInDiffLeft,s.Gh.ShowQuickCommitRevisionInDiffRight,s.Gh.ShowLineCommitInView]),this.container=e}static getMarkdownCommandArgs(e){return super.getMarkdownCommandArgsCore(s.Gh.ShowQuickCommitFile,e)}async preExecute(e,t){if("editorLine"===e.type&&(t={...t,line:e.line}),e.command===s.Gh.ShowLineCommitInView&&(t={...t,inView:!0}),null!=e.editor&&e.command.startsWith(s.Gh.ShowQuickCommitRevision)){const i=await o.YY.fromUri(e.editor.document.uri);t={...t,sha:i.sha}}return"viewItem"===e.type&&(t={...t,sha:e.node.uri.sha},(0,u.en)(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,u.SX)(t,e)))return;let d;if(null!=(i={...i}).revisionUri?(d=o.YY.fromRevisionUri(r.Uri.parse(i.revisionUri,!0)),i.sha=d.sha):d=await o.YY.fromUri(t),null==i.sha){const t=i.line??e?.selection.active.line;if(null==t)return;try{const e=await this.container.git.getBlameForLine(d,t);if(null==e)return void(0,c.zk)("Unable to show commit file details");if(e.commit.isUncommitted)return void(0,c.f3)("Unable to show commit file details");i.sha=e.commit.sha,i.commit=e.commit}catch(e){return h.Yd.error(e,"ShowQuickCommitFileDetailsCommand",`getBlameForLine(${t})`),void(0,c.W8)("Unable to show commit file details")}}try{if(null==i.commit&&(null!=i.fileLog&&(i.commit=i.fileLog.commits.get(i.sha),null==i.commit&&(i.fileLog=void 0)),null==i.fileLog)){const e=i.commit?.repoPath??d.repoPath;if(i.commit=await this.container.git.getCommitForFile(e,d,{ref:i.sha}),null==i.commit)return void(0,c.G)("Unable to show commit file details")}if(null==i.commit)return void(0,c.G)("Unable to show commit file details");const e=i.commit?.file?.path??d.fsPath;(0,a.f_)(i.commit)&&null==i.commit.files&&await i.commit.ensureFullDetails(),i.inView?await(0,l.P0)(s.Gh.ShowCommitsInView,{refs:[i.commit.sha],repoPath:i.commit.repoPath}):await(0,n.m)({command:"show",state:{repo:i.commit.repoPath,reference:i.commit,fileName:e}})}catch(e){h.Yd.error(e,"ShowQuickCommitFileDetailsCommand"),(0,c.W8)("Unable to show commit file details")}}};m=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n),n})([(0,l.WD)()],m)},2540:(e,t,i)=>{i.d(t,{N4:()=>r,S4:()=>o,TA:()=>n,ef:()=>s,oE:()=>a});var r=(e=>(e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",e.DiffWithPrevious="gitlens.diffWithPrevious",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.RevealCommitInView="gitlens.revealCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",e.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e))(r||{}),s=(e=>(e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",e.DiffWithPrevious="gitlens.diffWithPrevious",e.DiffWithWorking="gitlens.diffWithWorking",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.RevealCommitInView="gitlens.revealCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",e.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ToggleCodeLens="gitlens.toggleCodeLens",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e))(s||{});const n=["defaultItemLimit","formats","pageItemLimit","showRelativeDateMarkers"],o=["branches","commits","commitDetails","contributors","drafts","fileHistory","lineHistory","patchDetails","remotes","repositories","searchAndCompare","stashes","tags","worktrees","workspaces"];function a(e){switch(e){case"silent":return"off";case"errors":return"error";case"verbose":return"info";default:return e}}},5255:(e,t,i)=>{i.d(t,{Gh:()=>a,NE:()=>l,XP:()=>h,ZY:()=>n,_h:()=>c,d$:()=>s,lw:()=>d,m1:()=>r,mN:()=>o,sN:()=>u});const r="gitlens",s=80,n={".png":"image/png",".gif":"image/gif",".jpg":"image/jpeg",".jpeg":"image/jpeg",".jpe":"image/jpeg",".webp":"image/webp",".tif":"image/tiff",".tiff":"image/tiff",".bmp":"image/bmp"};var o=(e=>(e[e.Hash=35]="Hash",e[e.Slash=47]="Slash",e[e.Digit0=48]="Digit0",e[e.Digit1=49]="Digit1",e[e.Digit2=50]="Digit2",e[e.Digit3=51]="Digit3",e[e.Digit4=52]="Digit4",e[e.Digit5=53]="Digit5",e[e.Digit6=54]="Digit6",e[e.Digit7=55]="Digit7",e[e.Digit8=56]="Digit8",e[e.Digit9=57]="Digit9",e[e.Backslash=92]="Backslash",e[e.A=65]="A",e[e.B=66]="B",e[e.C=67]="C",e[e.D=68]="D",e[e.E=69]="E",e[e.F=70]="F",e[e.Z=90]="Z",e[e.a=97]="a",e[e.b=98]="b",e[e.c=99]="c",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.z=122]="z",e))(o||{}),a=(e=>(e.ActionPrefix="gitlens.action.",e.AddAuthors="gitlens.addAuthors",e.BrowseRepoAtRevision="gitlens.browseRepoAtRevision",e.BrowseRepoAtRevisionInNewWindow="gitlens.browseRepoAtRevisionInNewWindow",e.BrowseRepoBeforeRevision="gitlens.browseRepoBeforeRevision",e.BrowseRepoBeforeRevisionInNewWindow="gitlens.browseRepoBeforeRevisionInNewWindow",e.ClearFileAnnotations="gitlens.clearFileAnnotations",e.CloseUnchangedFiles="gitlens.closeUnchangedFiles",e.CloseWelcomeView="gitlens.closeWelcomeView",e.CompareWith="gitlens.compareWith",e.CompareHeadWith="gitlens.compareHeadWith",e.CompareWorkingWith="gitlens.compareWorkingWith",e.ComputingFileAnnotations="gitlens.computingFileAnnotations",e.ConnectRemoteProvider="gitlens.connectRemoteProvider",e.CopyAutolinkUrl="gitlens.copyAutolinkUrl",e.CopyCurrentBranch="gitlens.copyCurrentBranch",e.CopyDeepLinkToBranch="gitlens.copyDeepLinkToBranch",e.CopyDeepLinkToCommit="gitlens.copyDeepLinkToCommit",e.CopyDeepLinkToComparison="gitlens.copyDeepLinkToComparison",e.CopyDeepLinkToRepo="gitlens.copyDeepLinkToRepo",e.CopyDeepLinkToTag="gitlens.copyDeepLinkToTag",e.CopyDeepLinkToWorkspace="gitlens.copyDeepLinkToWorkspace",e.CopyMessageToClipboard="gitlens.copyMessageToClipboard",e.CopyRemoteBranchesUrl="gitlens.copyRemoteBranchesUrl",e.CopyRemoteBranchUrl="gitlens.copyRemoteBranchUrl",e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteComparisonUrl="gitlens.copyRemoteComparisonUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrlToClipboard",e.CopyRemoteFileUrlWithoutRange="gitlens.copyRemoteFileUrlWithoutRange",e.CopyRemoteFileUrlFrom="gitlens.copyRemoteFileUrlFrom",e.CopyRemoteIssueUrl="gitlens.copyRemoteIssueUrl",e.CopyRemotePullRequestUrl="gitlens.copyRemotePullRequestUrl",e.CopyRemoteRepositoryUrl="gitlens.copyRemoteRepositoryUrl",e.CopyShaToClipboard="gitlens.copyShaToClipboard",e.CopyRelativePathToClipboard="gitlens.copyRelativePathToClipboard",e.CreatePatch="gitlens.createPatch",e.CreateCloudPatch="gitlens.createCloudPatch",e.CreatePullRequestOnRemote="gitlens.createPullRequestOnRemote",e.DiffDirectory="gitlens.diffDirectory",e.DiffDirectoryWithHead="gitlens.diffDirectoryWithHead",e.DiffWith="gitlens.diffWith",e.DiffWithNext="gitlens.diffWithNext",e.DiffWithNextInDiffLeft="gitlens.diffWithNextInDiffLeft",e.DiffWithNextInDiffRight="gitlens.diffWithNextInDiffRight",e.DiffWithPrevious="gitlens.diffWithPrevious",e.DiffWithPreviousInDiffLeft="gitlens.diffWithPreviousInDiffLeft",e.DiffWithPreviousInDiffRight="gitlens.diffWithPreviousInDiffRight",e.DiffLineWithPrevious="gitlens.diffLineWithPrevious",e.DiffWithRevision="gitlens.diffWithRevision",e.DiffWithRevisionFrom="gitlens.diffWithRevisionFrom",e.DiffWithWorking="gitlens.diffWithWorking",e.DiffWithWorkingInDiffLeft="gitlens.diffWithWorkingInDiffLeft",e.DiffWithWorkingInDiffRight="gitlens.diffWithWorkingInDiffRight",e.DiffLineWithWorking="gitlens.diffLineWithWorking",e.DisconnectRemoteProvider="gitlens.disconnectRemoteProvider",e.DisableDebugLogging="gitlens.disableDebugLogging",e.EnableDebugLogging="gitlens.enableDebugLogging",e.DisableRebaseEditor="gitlens.disableRebaseEditor",e.EnableRebaseEditor="gitlens.enableRebaseEditor",e.ExternalDiff="gitlens.externalDiff",e.ExternalDiffAll="gitlens.externalDiffAll",e.FetchRepositories="gitlens.fetchRepositories",e.GenerateCommitMessage="gitlens.generateCommitMessage",e.GetStarted="gitlens.getStarted",e.InviteToLiveShare="gitlens.inviteToLiveShare",e.OpenAutolinkUrl="gitlens.openAutolinkUrl",e.OpenBlamePriorToChange="gitlens.openBlamePriorToChange",e.OpenBranchesOnRemote="gitlens.openBranchesOnRemote",e.OpenBranchOnRemote="gitlens.openBranchOnRemote",e.OpenCurrentBranchOnRemote="gitlens.openCurrentBranchOnRemote",e.OpenChangedFiles="gitlens.openChangedFiles",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenComparisonOnRemote="gitlens.openComparisonOnRemote",e.OpenFileHistory="gitlens.openFileHistory",e.OpenFileFromRemote="gitlens.openFileFromRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.OpenFileOnRemoteFrom="gitlens.openFileOnRemoteFrom",e.OpenFileAtRevision="gitlens.openFileRevision",e.OpenFileAtRevisionFrom="gitlens.openFileRevisionFrom",e.OpenFolderHistory="gitlens.openFolderHistory",e.OpenOnRemote="gitlens.openOnRemote",e.OpenIssueOnRemote="gitlens.openIssueOnRemote",e.OpenCloudPatch="gitlens.openCloudPatch",e.OpenPatch="gitlens.openPatch",e.OpenPullRequestOnRemote="gitlens.openPullRequestOnRemote",e.OpenAssociatedPullRequestOnRemote="gitlens.openAssociatedPullRequestOnRemote",e.OpenRepoOnRemote="gitlens.openRepoOnRemote",e.OpenRevisionFile="gitlens.openRevisionFile",e.OpenRevisionFileInDiffLeft="gitlens.openRevisionFileInDiffLeft",e.OpenRevisionFileInDiffRight="gitlens.openRevisionFileInDiffRight",e.OpenWalkthrough="gitlens.openWalkthrough",e.OpenWorkingFile="gitlens.openWorkingFile",e.OpenWorkingFileInDiffLeft="gitlens.openWorkingFileInDiffLeft",e.OpenWorkingFileInDiffRight="gitlens.openWorkingFileInDiffRight",e.PullRepositories="gitlens.pullRepositories",e.PushRepositories="gitlens.pushRepositories",e.GitCommands="gitlens.gitCommands",e.GitCommandsBranch="gitlens.gitCommands.branch",e.GitCommandsCherryPick="gitlens.gitCommands.cherryPick",e.GitCommandsMerge="gitlens.gitCommands.merge",e.GitCommandsRebase="gitlens.gitCommands.rebase",e.GitCommandsReset="gitlens.gitCommands.reset",e.GitCommandsRevert="gitlens.gitCommands.revert",e.GitCommandsSwitch="gitlens.gitCommands.switch",e.GitCommandsTag="gitlens.gitCommands.tag",e.GitCommandsWorktree="gitlens.gitCommands.worktree",e.GitCommandsWorktreeOpen="gitlens.gitCommands.worktree.open",e.OpenOrCreateWorktreeForGHPR="gitlens.ghpr.views.openOrCreateWorktree",e.PlusHide="gitlens.plus.hide",e.PlusLoginOrSignUp="gitlens.plus.loginOrSignUp",e.PlusLogout="gitlens.plus.logout",e.PlusManage="gitlens.plus.manage",e.PlusPurchase="gitlens.plus.purchase",e.PlusResendVerification="gitlens.plus.resendVerification",e.PlusRestore="gitlens.plus.restore",e.PlusShowPlans="gitlens.plus.showPlans",e.PlusStartPreviewTrial="gitlens.plus.startPreviewTrial",e.PlusValidate="gitlens.plus.validate",e.QuickOpenFileHistory="gitlens.quickOpenFileHistory",e.RefreshFocus="gitlens.focus.refresh",e.RefreshGraph="gitlens.graph.refresh",e.RefreshHover="gitlens.refreshHover",e.ResetAvatarCache="gitlens.resetAvatarCache",e.ResetAIKey="gitlens.resetAIKey",e.ResetSuppressedWarnings="gitlens.resetSuppressedWarnings",e.ResetTrackedUsage="gitlens.resetTrackedUsage",e.ResetViewsLayout="gitlens.resetViewsLayout",e.RevealCommitInView="gitlens.revealCommitInView",e.ShareAsCloudPatch="gitlens.shareAsCloudPatch",e.SearchCommits="gitlens.showCommitSearch",e.SearchCommitsInView="gitlens.views.searchAndCompare.searchCommits",e.ShowBranchesView="gitlens.showBranchesView",e.ShowCommitDetailsView="gitlens.showCommitDetailsView",e.ShowCommitInView="gitlens.showCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowCommitsView="gitlens.showCommitsView",e.ShowContributorsView="gitlens.showContributorsView",e.ShowDraftsView="gitlens.showDraftsView",e.ShowFileHistoryView="gitlens.showFileHistoryView",e.ShowFocusPage="gitlens.showFocusPage",e.ShowGraph="gitlens.showGraph",e.ShowGraphPage="gitlens.showGraphPage",e.ShowGraphView="gitlens.showGraphView",e.ShowHomeView="gitlens.showHomeView",e.ShowAccountView="gitlens.showAccountView",e.ShowInCommitGraph="gitlens.showInCommitGraph",e.ShowInCommitGraphView="gitlens.showInCommitGraphView",e.ShowInDetailsView="gitlens.showInDetailsView",e.ShowInTimeline="gitlens.showInTimeline",e.ShowLastQuickPick="gitlens.showLastQuickPick",e.ShowLineCommitInView="gitlens.showLineCommitInView",e.ShowLineHistoryView="gitlens.showLineHistoryView",e.OpenOnlyChangedFiles="gitlens.openOnlyChangedFiles",e.ShowPatchDetailsPage="gitlens.showPatchDetailsPage",e.ShowQuickBranchHistory="gitlens.showQuickBranchHistory",e.ShowQuickCommit="gitlens.showQuickCommitDetails",e.ShowQuickCommitFile="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ShowQuickRepoStatus="gitlens.showQuickRepoStatus",e.ShowQuickCommitRevision="gitlens.showQuickRevisionDetails",e.ShowQuickCommitRevisionInDiffLeft="gitlens.showQuickRevisionDetailsInDiffLeft",e.ShowQuickCommitRevisionInDiffRight="gitlens.showQuickRevisionDetailsInDiffRight",e.ShowQuickStashList="gitlens.showQuickStashList",e.ShowRemotesView="gitlens.showRemotesView",e.ShowRepositoriesView="gitlens.showRepositoriesView",e.ShowSearchAndCompareView="gitlens.showSearchAndCompareView",e.ShowSettingsPage="gitlens.showSettingsPage",e.ShowSettingsPageAndJumpToBranchesView="gitlens.showSettingsPage!branches-view",e.ShowSettingsPageAndJumpToCommitsView="gitlens.showSettingsPage!commits-view",e.ShowSettingsPageAndJumpToContributorsView="gitlens.showSettingsPage!contributors-view",e.ShowSettingsPageAndJumpToFileHistoryView="gitlens.showSettingsPage!file-history-view",e.ShowSettingsPageAndJumpToLineHistoryView="gitlens.showSettingsPage!line-history-view",e.ShowSettingsPageAndJumpToRemotesView="gitlens.showSettingsPage!remotes-view",e.ShowSettingsPageAndJumpToRepositoriesView="gitlens.showSettingsPage!repositories-view",e.ShowSettingsPageAndJumpToSearchAndCompareView="gitlens.showSettingsPage!search-compare-view",e.ShowSettingsPageAndJumpToStashesView="gitlens.showSettingsPage!stashes-view",e.ShowSettingsPageAndJumpToTagsView="gitlens.showSettingsPage!tags-view",e.ShowSettingsPageAndJumpToWorkTreesView="gitlens.showSettingsPage!worktrees-view",e.ShowSettingsPageAndJumpToViews="gitlens.showSettingsPage!views",e.ShowSettingsPageAndJumpToCommitGraph="gitlens.showSettingsPage!commit-graph",e.ShowSettingsPageAndJumpToAutolinks="gitlens.showSettingsPage!autolinks",e.ShowStashesView="gitlens.showStashesView",e.ShowTagsView="gitlens.showTagsView",e.ShowTimelinePage="gitlens.showTimelinePage",e.ShowTimelineView="gitlens.showTimelineView",e.ShowWelcomePage="gitlens.showWelcomePage",e.ShowWorktreesView="gitlens.showWorktreesView",e.ShowWorkspacesView="gitlens.showWorkspacesView",e.StashApply="gitlens.stashApply",e.StashSave="gitlens.stashSave",e.StashSaveFiles="gitlens.stashSaveFiles",e.SwitchAIModel="gitlens.switchAIModel",e.SwitchMode="gitlens.switchMode",e.ToggleCodeLens="gitlens.toggleCodeLens",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileBlameInDiffLeft="gitlens.toggleFileBlameInDiffLeft",e.ToggleFileBlameInDiffRight="gitlens.toggleFileBlameInDiffRight",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e.ToggleFileHeatmapInDiffLeft="gitlens.toggleFileHeatmapInDiffLeft",e.ToggleFileHeatmapInDiffRight="gitlens.toggleFileHeatmapInDiffRight",e.ToggleGraph="gitlens.toggleGraph",e.ToggleMaximizedGraph="gitlens.toggleMaximizedGraph",e.ToggleLineBlame="gitlens.toggleLineBlame",e.ToggleReviewMode="gitlens.toggleReviewMode",e.ToggleZenMode="gitlens.toggleZenMode",e.ViewsCopy="gitlens.views.copy",e.ViewsOpenDirectoryDiff="gitlens.views.openDirectoryDiff",e.ViewsOpenDirectoryDiffWithWorking="gitlens.views.openDirectoryDiffWithWorking",e.Deprecated_DiffHeadWith="gitlens.diffHeadWith",e.Deprecated_DiffWorkingWith="gitlens.diffWorkingWith",e.Deprecated_OpenBranchesInRemote="gitlens.openBranchesInRemote",e.Deprecated_OpenBranchInRemote="gitlens.openBranchInRemote",e.Deprecated_OpenCommitInRemote="gitlens.openCommitInRemote",e.Deprecated_OpenFileInRemote="gitlens.openFileInRemote",e.Deprecated_OpenInRemote="gitlens.openInRemote",e.Deprecated_OpenRepoInRemote="gitlens.openRepoInRemote",e.Deprecated_ShowFileHistoryInView="gitlens.showFileHistoryInView",e))(a||{});const c=new Map([["workbench.view.scm",["branches","commits","remotes","repositories","stashes","tags","worktrees","contributors"]],["workbench.view.extension.gitlensPanel",["graph","graphDetails"]],["workbench.view.extension.gitlensInspect",["commitDetails","fileHistory","lineHistory","timeline","searchAndCompare"]],["workbench.view.extension.gitlens",["home","workspaces","account"]]]);var l=(e=>(e.AngleBracketLeftHeavy="❰",e.AngleBracketRightHeavy="❱",e.ArrowBack="↩",e.ArrowDown="↓",e.ArrowDownUp="⇵",e.ArrowDropRight="⤷",e.ArrowHeadRight="➤",e.ArrowLeft="←",e.ArrowLeftDouble="⇐",e.ArrowLeftRight="↔",e.ArrowLeftRightDouble="⇔",e.ArrowLeftRightDoubleStrike="⇎",e.ArrowLeftRightLong="⟷",e.ArrowRight="→",e.ArrowRightDouble="⇒",e.ArrowRightHollow="⇨",e.ArrowUp="↑",e.ArrowUpDown="⇅",e.ArrowUpRight="↗",e.ArrowsHalfLeftRight="⇋",e.ArrowsHalfRightLeft="⇌",e.ArrowsLeftRight="⇆",e.ArrowsRightLeft="⇄",e.Asterisk="∗",e.Check="✔",e.Dash="—",e.Dot="•",e.Ellipsis="…",e.EnDash="–",e.Envelope="✉",e.EqualsTriple="≡",e.Flag="⚑",e.FlagHollow="⚐",e.MiddleEllipsis="⋯",e.MuchLessThan="≪",e.MuchGreaterThan="≫",e.Pencil="✎",e.Space=" ",e.SpaceThin=" ",e.SpaceThinnest=" ",e.SquareWithBottomShadow="❏",e.SquareWithTopShadow="❐",e.Warning="⚠",e.ZeroWidthSpace="​",e))(l||{});const h=["left","alt+left","ctrl+left","right","alt+right","ctrl+right","alt+,","alt+.","alt+enter","ctrl+enter","escape"];var u=(e=>(e.DebugConsole="debug",e.File="file",e.Git="git",e.GitHub="github",e.GitLens="gitlens",e.Output="output",e.PRs="pr",e.Terminal="vscode-terminal",e.Vsls="vsls",e.VslsScc="vsls-scc",e.Virtual="vscode-vfs",e))(u||{}),d=(e=>(e.Version="gitlens:synced:version",e.PreReleaseVersion="gitlens:synced:preVersion",e.HomeViewWelcomeVisible="gitlens:views:welcome:visible",e))(d||{})},6894:(e,t,i)=>{i.d(t,{W:()=>go,N:()=>fo});var r=i(9496),s=i(185),n=i(5255),o=i(3148),a=i(4575),c=i(8887),l=i(6592),h=i(7462),u=i(5367),d=i(6450),p=i(439),m=i(1719),g=i(7881),f=i(4321),w=i(3050),v=i(3646),y=i(827),b=i(9502);var C=i(5148),A=i(4336),S=i(2795);const P=/\/_git\/?/i,k=/^DefaultCollection\//i,D=/^(.*?)\/(.*?)\/(.*)/,R=/^(ssh|vs-ssh)\./i,_=/^\/?v\d\//i,T=/path=([^&]+)/i,F=/line=(\d+)(?:&lineEnd=(\d+))?/;class AzureDevOpsRemote extends S.x{constructor(e,t,i,r,s=!1){if(R.test(e)){t=t.replace(_,""),e=e.replace(R,"");const i=D.exec(t);if(null!=i){const[,r,n,o]=i;s?(e=`${r}.${e}`,t=`${n}/_git/${o}`):t=`${r}/${n}/_git/${o}`}}super(e,t=decodeURIComponent(t),i,r)}_autolinks;get autolinks(){if(void 0===this._autolinks){const e=this.baseUrl.replace(P,"/");this._autolinks=[{prefix:"#",url:`${e}/_workitems/edit/<num>`,title:`Open Work Item #<num> on ${this.name}`,type:"issue",description:`${this.name} Work Item #<num>`},{prefix:"PR ",url:`${this.baseUrl}/pullrequest/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Pull Request #<num>`}]}return this._autolinks}get icon(){return"azdo"}get id(){return"azure-devops"}get gkProviderId(){return"azureDevops"}get name(){return"Azure DevOps"}_displayPath;get displayPath(){return void 0===this._displayPath&&(this._displayPath=this.path.replace(P,"/").replace(k,"")),this._displayPath}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return Promise.resolve(void 0);let r,s;if(t.query){const e=F.exec(t.query);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}const n=T.exec(t.query);if(null==n)return Promise.resolve(void 0);const[,o]=n,a=e.toAbsoluteUri(o,{validate:i?.validate});return Promise.resolve(null!=a?{uri:a,startLine:r,endLine:s}:void 0)}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/?version=GB${e}&_a=history`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branchCompare?baseVersion=GB${e}&targetVersion=GB${t}`)}getUrlForFile(e,t,i,r){let s;return s=null!=r?r.start.line===r.end.line?`&line=${r.start.line}&lineStartColumn=${r.start.character+1}&lineEndColumn=${r.end.character+1}`:`&line=${r.start.line}&lineEnd=${r.end.line}&lineStartColumn=${r.start.character+1}&lineEndColumn=${r.end.character+1}`:"",i?this.encodeUrl(`${this.baseUrl}?path=${e}&version=GC${i}${s}&_a=contents`):t?this.encodeUrl(`${this.baseUrl}/?path=/${e}&version=GB${t}&_a=contents${s}`):this.encodeUrl(`${this.baseUrl}?path=/${e}${s}`)}}const $=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,I=/^lines-(\d+)(?::(\d+))?$/;class BitbucketRemote extends S.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`},{prefix:"pull request #",url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Pull Request #<num>`}]),this._autolinks}get icon(){return"bitbucket"}get id(){return"bitbucket"}get gkProviderId(){return"bitbucket"}get name(){return this.formatName("Bitbucket")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,s;if(t.fragment){const e=I.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}const n=$.exec(t.path);if(null==n)return;const[,,,o]=n;let a,c=o.indexOf("/",1);if(-1!==c){const t=o.substring(1,c);if((0,f.D3)(t)){const t=e.toAbsoluteUri(o.substr(c),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}const l=new Map;c=o.length;do{c=o.lastIndexOf("/",c-1),a=o.substring(1,c),l.set(a,o.substr(c))}while(c>0);if(0!==l.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&l.has(e.getNameWithoutRemote())});for(const n of t){const t=l.get(n.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,r){let s;return s=null!=r?r.start.line===r.end.line?`#${e}-${r.start.line}`:`#${e}-${r.start.line}:${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/src/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/src/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${s}`}}const x=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,O=/^lines-(\d+)(?::(\d+))?$/;class BitbucketServerRemote extends S.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`},{prefix:"pull request #",ignoreCase:!0,url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Pull Request #<num>`}]),this._autolinks}get baseUrl(){const[e,t]=this.splitPath();return`${this.protocol}://${this.domain}/projects/${e}/repos/${t}`}splitPath(){if(this.path.startsWith("scm/")){const e=this.path.replace("scm/","").indexOf("/");return[this.path.substring(0,e),this.path.substring(e+1)]}return super.splitPath()}get icon(){return"bitbucket"}get id(){return"bitbucket-server"}get gkProviderId(){return"bitbucketServer"}get name(){return this.formatName("Bitbucket Server")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,s;if(t.fragment){const e=O.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}const n=x.exec(t.path);if(null==n)return;const[,,,o]=n;let a,c=o.indexOf("/",1);if(-1!==c){const t=o.substring(1,c);if((0,f.D3)(t)){const t=e.toAbsoluteUri(o.substr(c),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}const l=new Map;c=o.length;do{c=o.lastIndexOf("/",c-1),a=o.substring(1,c),l.set(a,o.substr(c))}while(c>0);if(0!==l.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&l.has(e.getNameWithoutRemote())});for(const n of t){const t=l.get(n.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/commits?until=${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,r){let s;return s=null!=r?r.start.line===r.end.line?`#${r.start.line}`:`#${r.start.line}-${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${i}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${t}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}/browse/${e}`)}${s}`}}var E=i(3620);class CustomRemote extends S.x{urls;constructor(e,t,i,r,s){super(e,t,r,s,!0),this.urls=i}get id(){return"custom"}get gkProviderId(){}get name(){return this.formatName("Custom")}getLocalInfoFromRemoteUri(e,t){return Promise.resolve(void 0)}getUrlForRepository(){return this.getUrl(this.urls.repository,this.getContext())}getUrlForBranches(){return this.getUrl(this.urls.branches,this.getContext())}getUrlForBranch(e){return this.getUrl(this.urls.branch,this.getContext({branch:e}))}getUrlForCommit(e){return this.getUrl(this.urls.commit,this.getContext({id:e}))}getUrlForComparison(e,t,i){if(null!=this.urls.comparison)return this.getUrl(this.urls.comparison,this.getContext({ref1:e,ref2:t,notation:i}))}getUrlForFile(e,t,i,r){let s,n,o;s=null!=r?r.start.line===r.end.line?(0,E.sX)(this.urls.fileLine,{line:r.start.line,line_encoded:r.start.line}):(0,E.sX)(this.urls.fileRange,{start:r.start.line,start_encoded:r.start.line,end:r.end.line,end_encoded:r.end.line}):"",i?(n=this.urls.fileInCommit,o=this.getContext({id:i,file:e,line:s})):t?(n=this.urls.fileInBranch,o=this.getContext({branch:t,file:e,line:s})):(n=this.urls.file,o=this.getContext({file:e,line:s}));let a=(0,E.sX)(n,o);if((0,E.Gg)(n).some((e=>e.key.endsWith("_encoded"))))return a;const c=a.includes("#");if(a=this.encodeUrl(a),c){const e=a.lastIndexOf("%23");-1!==e&&(a=`${a.substring(0,e)}#${a.substring(e+3)}`)}return a}getUrl(e,t){const i=(0,E.sX)(e,t);return(0,E.Gg)(e).some((e=>e.key.endsWith("_encoded")))?i:this.encodeUrl(i)}getContext(e){const[t,i]=this.splitPath(),r={repo:this.path,repoBase:t,repoPath:i,...e??{}};for(const[e,t]of Object.entries(r))r[`${e}_encoded`]=encodeURIComponent(t);return r}}const B=/^\/([^/]+)\/\+(.+)$/i,W=/^(\d+)$/;class GerritRemote extends S.x{constructor(e,t,i,r,s=!1,n=!0){n&&"ssh"!==i&&(t=t.replace(/^a\//,"")),super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"Change-Id: ",url:`${this.baseReviewUrl}/q/<num>`,title:`Open Change #<num> on ${this.name}`,alphanumeric:!0,description:`${this.name} Change #<num>`}]),this._autolinks}get icon(){return"gerrit"}get id(){return"gerrit"}get gkProviderId(){}get name(){return this.formatName("Gerrit")}get baseUrl(){return`${this.protocol}://${this.domain}/plugins/gitiles/${this.path}`}get baseReviewUrl(){return`${this.protocol}://${this.domain}`}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r;if(t.fragment){const e=W.exec(t.fragment);if(null!=e){const[,t]=e;t&&(r=parseInt(t,10))}}const s=B.exec(t.path);if(null==s)return;const[,,n]=s;let o=n.indexOf("/",1);if(-1!==o){const t=n.substring(1,o);if((0,f.D3)(t)||"HEAD"==t){const t=e.toAbsoluteUri(n.substr(o),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r}}}if(n.startsWith("/refs/heads/")){const t=n.substr(12);let s;const a=new Map;o=t.length;do{o=t.lastIndexOf("/",o-1),s=t.substring(1,o),a.set(s,t.substr(o))}while(o>0);if(0!==a.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&a.has(e.getNameWithoutRemote())});for(const s of t){const t=a.get(s.getNameWithoutRemote());if(null==t)continue;const n=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=n)return{uri:n,startLine:r}}}}else if(n.startsWith("/refs/tags/")){const t=n.substr(11);let s;const a=new Map;o=t.length;do{o=t.lastIndexOf("/",o-1),s=t.substring(1,o),a.set(s,t.substr(o))}while(o>0);if(0!==a.size){const{values:t}=await e.getTags({filter:e=>a.has(e.name)});for(const s of t){const t=a.get(s.name);if(null==t)continue;const n=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=n)return{uri:n,startLine:r}}}}else;}getUrlForBranches(){return this.encodeUrl(`${this.baseReviewUrl}/admin/repos/${this.path},branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/+/refs/heads/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseReviewUrl}/q/${e}`)}getUrlForFile(e,t,i,r){const s=null!=r?`#${r.start.line}`:"";return i?`${this.encodeUrl(`${this.baseUrl}/+/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.getUrlForBranch(t)}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}/+/HEAD/${e}`)}${s}`}}const M=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,N=/^L(\d+)(?:-L(\d+))?$/;class GiteaRemote extends S.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`}]),this._autolinks}get icon(){return"gitea"}get id(){return"gitea"}get gkProviderId(){}get name(){return this.formatName("Gitea")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,s;if(t.fragment){const e=N.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}const n=M.exec(t.path);if(null==n)return;const[,,,o]=n;let a,c;if(o.startsWith("/commit/")&&(a=8,c=o.indexOf("/",a),-1!==c)){const t=o.substring(a,c);if((0,f.D3)(t)){const t=e.toAbsoluteUri(o.substr(c),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}if(o.startsWith("/branch/")){let t;const n=new Map;a=8,c=a;do{t=o.substring(a,c),n.set(t,o.substr(c)),c=o.indexOf("/",c+1)}while(c<o.length&&-1!==c);if(0!==n.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&n.has(e.getNameWithoutRemote())});for(const o of t){const t=n.get(o.getNameWithoutRemote());if(null==t)continue;const a=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=a)return{uri:a,startLine:r,endLine:s}}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/src/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}...${t}`)}getUrlForFile(e,t,i,r){let s;return s=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-L${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/src/commit/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/src/branch/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}/src/${e}`)}${s}`}}var L=i(2075),U=i(7512),G=i(1219),H=i(8786),V=i(2509),q=i(8452),j=i(3084),Q=Object.defineProperty,Y=Object.getOwnPropertyDescriptor;const z=/\b([^/\s]+\/[^/\s]+?)(?:\\)?#([0-9]+)\b(?!]\()/g,K=/\b([^/\s]+\/[^/\s]+?)(?:\\)?!([0-9]+)\b(?!]\()/g,J=/^\/([^/]+)\/([^/]+?)\/-\/blob(.+)$/i,X=/^L(\d+)(?:-(\d+))?$/,Z=Object.freeze({id:"gitlab",scopes:["read_api","read_user","read_repository"]});class GitLabRemote extends j.D{get authProvider(){return Z}constructor(e,t,i,r,s,n=!1){super(e,t,i,r,s,n)}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api`:`https://${this.domain}/api`}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/-/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`},{prefix:"!",url:`${this.baseUrl}/-/merge_requests/<num>`,title:`Open Merge Request !<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Merge Request !<num>`},{tokenize:(e,t,i,r,s,o)=>"plaintext"===t?e:e.replace(z,((e,a,c)=>{const l=(0,H.M)(`${this.protocol}://${this.domain}/${(0,E.I6)(a)}/-/issues/${c}`),h=` "Open Issue #${c} from ${a} on ${this.name}"`,u=`\0${i.size}\0`;let d;"markdown"===t?i.set(u,`[${e}](${l}${h})`):"html"===t&&i.set(u,`<a href="${l}" title=${h}>${e}</a>`);const p=r?.get(c)?.[0];if(null!=p?.value)if(p.paused)null==o||s?.has(c)||(d=o.size+1,o.set(d,`[${(0,q.sy)()} GitLab Issue ${a}#${c} $(loading~spin)](${l}${h}")`));else{const t=p.value,i=(0,E.ry)(t.title.trim());null==o||s?.has(c)||(d=o.size+1,o.set(d,`[${(0,q.sy)(t)} **${i}**](${l}${h})\\\n${n.NE.Space.repeat(5)}${e} ${t.state} ${(0,U.Zh)(t.closedDate??t.date)}`))}else null==o||s?.has(c)||(d=o.size+1,o.set(d,`[${(0,q.sy)()} GitLab Issue ${a}#${c}](${l}${h})`));return u})),parse:(e,t)=>{let i,r,s;for(;;){if(s=z.exec(e),null==s)break;[,i,r]=s;const[n,o]=i.split("/",2);t.set(r,{provider:this,id:r,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/-/issues/${r}`,title:`Open Issue #<num> from ${i} on ${this.name}`,type:"issue",description:`${this.name} Issue ${i}#${r}`,descriptor:{owner:n,name:o}})}}},{tokenize:(e,t,i,r,s,o)=>"plaintext"===t?e:e.replace(K,((e,a,c)=>{const l=(0,H.M)(`${this.protocol}://${this.domain}/${a}/-/merge_requests/${c}`),h=` "Open Merge Request !${c} from ${a} on ${this.name}"`,u=`\0${i.size}\0`;let d;"markdown"===t?i.set(u,`[${e}](${l}${h})`):"html"===t&&i.set(u,`<a href="${l}" title=${h}>${e}</a>`);const p=r?.get(c)?.[0];if(null!=p?.value)if(p.paused)null==o||s?.has(c)||(d=o.size+1,o.set(d,`[${(0,q.sy)()} ${this.name} Merge Request ${a}!${c} $(loading~spin)](${l}${h}")`));else{const t=p.value,i=(0,E.ry)(t.title.trim());null==o||s?.has(c)||(d=o.size+1,o.set(d,`[${(0,q.sy)(t)} **${i}**](${l}${h})\\\n${n.NE.Space.repeat(5)}${e} ${t.state} ${(0,U.Zh)(t.closedDate??t.date)}`))}else null==o||s?.has(c)||(d=o.size+1,o.set(d,`[${(0,q.sy)()} ${this.name} Merge Request ${a}!${c}](${l}${h})`));return u})),parse:(e,t)=>{let i,r,s;for(;;){if(s=K.exec(e),null==s)break;[,i,r]=s;const[n,o]=i.split("/",2);t.set(r,{provider:this,id:r,prefix:`${i}!`,url:`${this.protocol}://${this.domain}/${i}/-/merge_requests/${r}`,title:`Open Merge Request !<num> from ${i} on ${this.name}`,type:"pullrequest",description:`${this.name} Merge Request !${r} from ${i}`,descriptor:{owner:n,name:o}})}}}]),this._autolinks}get icon(){return"gitlab"}get id(){return"gitlab"}get gkProviderId(){return e=this.domain,(0,E.qq)(e,"gitlab.com")?"gitlab":"gitlabSelfHosted";var e}get name(){return this.formatName("GitLab")}async connect(){return!(!(0,E.qq)(this.domain,"gitlab.com")&&!await(0,j.e)("GitLab self-managed instance",this.container))&&super.connect()}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,s;if(t.fragment){const e=X.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}const n=J.exec(t.path);if(null==n)return;const[,,,o]=n;let a,c=o.indexOf("/",1);if(-1!==c){const t=o.substring(1,c);if((0,f.D3)(t)){const t=e.toAbsoluteUri(o.substr(c),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}const l=new Map;c=o.length;do{c=o.lastIndexOf("/",c-1),a=o.substring(1,c),l.set(a,o.substr(c))}while(c>0);if(0!==l.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&l.has(e.getNameWithoutRemote())});for(const n of t){const t=l.get(n.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/-/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/-/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/-/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/-/compare/${e}${i}${t}`)}getUrlForFile(e,t,i,r){let s;return s=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/-/blob/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/-/blob/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${s}`}async getProviderAccountForCommit({accessToken:e},t,i){const[r,s]=this.splitPath();return(await this.container.gitlab)?.getAccountForCommit(this,e,r,s,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i){const[r,s]=this.splitPath();return(await this.container.gitlab)?.getAccountForEmail(this,e,r,s,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.gitlab)?.getDefaultBranch(this,e,t,i,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t,i){let r,s;return null!=i?({owner:r,name:s}=i):[r,s]=this.splitPath(),(await this.container.gitlab)?.getIssueOrPullRequest(this,e,r,s,Number(t),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,r){const[s,n]=this.splitPath(),{include:o,...a}=r??{},c=(await Promise.resolve().then(i.bind(i,6630))).toGitLabMergeRequestState;return(await this.container.gitlab)?.getPullRequestForBranch(this,e,s,n,t,{...a,include:o?.map((e=>c(e))),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t){const[i,r]=this.splitPath();return(await this.container.gitlab)?.getPullRequestForCommit(this,e,i,r,t,{baseUrl:this.apiBaseUrl})}async getProviderRepositoryMetadata({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.gitlab)?.getRepositoryMetadata(this,e,t,i,{baseUrl:this.apiBaseUrl})}async searchProviderMyPullRequests(e){return Promise.resolve(void 0)}async searchProviderMyIssues(e){return Promise.resolve(void 0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Y(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&Q(t,i,n)})([(0,G.cM)()],GitLabRemote.prototype,"connect",1);class GitLabAuthenticationProvider{_disposable;constructor(e){this._disposable=e.integrationAuthentication.registerProvider("gitlab",this)}dispose(){this._disposable.dispose()}getSessionId(e){return e?.domain??""}async createSession(e){const t=r.window.createInputBox();t.ignoreFocusOut=!0;const i=[];let s;try{const n={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the GitLab Access Tokens Page"};s=await new Promise((s=>{i.push(t.onDidHide((()=>s(void 0))),t.onDidChangeValue((()=>t.validationMessage=void 0)),t.onDidAccept((()=>{const e=t.value.trim();e?s(e):t.validationMessage="A personal access token is required"})),t.onDidTriggerButton((t=>{t===n&&r.env.openExternal(r.Uri.parse(`https://${e?.domain??"gitlab.com"}/-/profile/personal_access_tokens`))}))),t.password=!0,t.title="GitLab Authentication"+(e?.domain?`  • ${e.domain}`:""),t.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,t.prompt=t.prompt=(0,V.gn)("input-prompt-links")?`Paste your [GitLab Personal Access Token](https://${e?.domain??"gitlab.com"}/-/profile/personal_access_tokens "Get your GitLab Access Token")`:"Paste your GitLab Personal Access Token",t.buttons=[n],t.show()}))}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}if(s)return{id:this.getSessionId(e),accessToken:s,scopes:[],account:{id:"",label:""}}}}class GoogleSourceRemote extends GerritRemote{constructor(e,t,i,r,s=!1){super(e,t,i,r,s,!1)}get id(){return"google-source"}get gkProviderId(){}get name(){return this.formatName("Google Source")}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}get reviewDomain(){const[e,...t]=this.domain.split(".");return[`${e}-review`,...t].join(".")}get baseReviewUrl(){return`${this.protocol}://${this.reviewDomain}`}}const ee=[{custom:!1,matcher:"bitbucket.org",creator:(e,t,i)=>new BitbucketRemote(t,i)},{custom:!1,matcher:"github.com",creator:(e,t,i)=>new L.gu(e,t,i)},{custom:!1,matcher:"gitlab.com",creator:(e,t,i)=>new GitLabRemote(e,t,i)},{custom:!1,matcher:/\bdev\.azure\.com$/i,creator:(e,t,i)=>new AzureDevOpsRemote(t,i)},{custom:!0,matcher:/^(.+\/(?:bitbucket|stash))\/scm\/(.+)$/i,creator:(e,t,i)=>new BitbucketServerRemote(t,i)},{custom:!1,matcher:/\bgitlab\b/i,creator:(e,t,i)=>new GitLabRemote(e,t,i)},{custom:!1,matcher:/\bvisualstudio\.com$/i,creator:(e,t,i)=>new AzureDevOpsRemote(t,i,void 0,void 0,!0)},{custom:!1,matcher:/\bgitea\b/i,creator:(e,t,i)=>new GiteaRemote(t,i)},{custom:!1,matcher:/\bgerrithub\.io$/i,creator:(e,t,i)=>new GerritRemote(t,i)},{custom:!1,matcher:/\bgooglesource\.com$/i,creator:(e,t,i)=>new GoogleSourceRemote(t,i)}];function te(e){const t=[];if(e?.length)for(const i of e){const e=ie(i);if(null==e)continue;let r;try{if(r=i.regex?new RegExp(i.regex,"i"):i.domain?.toLowerCase(),null==r)throw new Error("No matcher found")}catch(e){A.Yd.error(e,`Loading remote provider '${i.name??""}' failed`)}t.push({custom:!0,matcher:r,creator:e})}return t.push(...ee),t}function ie(e){switch(e.type){case"AzureDevOps":return(t,i,r)=>new AzureDevOpsRemote(i,r,e.protocol,e.name,!0);case"Bitbucket":return(t,i,r)=>new BitbucketRemote(i,r,e.protocol,e.name,!0);case"BitbucketServer":return(t,i,r)=>new BitbucketServerRemote(i,r,e.protocol,e.name,!0);case"Custom":return(t,i,r)=>new CustomRemote(i,r,e.urls,e.protocol,e.name);case"Gerrit":return(t,i,r)=>new GerritRemote(i,r,e.protocol,e.name,!0);case"GoogleSource":return(t,i,r)=>new GoogleSourceRemote(i,r,e.protocol,e.name,!0);case"Gitea":return(t,i,r)=>new GiteaRemote(i,r,e.protocol,e.name,!0);case"GitHub":return(t,i,r)=>new L.gu(t,i,r,e.protocol,e.name,!0);case"GitLab":return(t,i,r)=>new GitLabRemote(t,i,r,e.protocol,e.name,!0);default:return}}function re(e,t){return null==t&&(t=te(C.D.get("remotes",null))),(i,r,s)=>function(e,t,i,r,s){try{const n=r.toLowerCase();for(const{custom:o,matcher:a,creator:c}of t){if("string"==typeof a){if(a===n)return c(e,r,s);continue}if(a.test(n))return c(e,r,s);if(!o)continue;const t=a.exec(i);if(null!=t)return c(e,t[1],t[2])}return}catch(e){return void A.Yd.error(e,"createRemoteProvider")}}(e,t,i,r,s)}var se=i(6934),ne=i(2061),oe=i(5432),ae=i(3105),ce=i(6004),le=i(3700),he=i(7469),ue=i(9701),de=i(2185),pe=i(9796);class TrackedDocument{constructor(e,t,i,r){this.document=e,this.dirty=t,this._eventDelegates=i,this.container=r}static async create(e,t,i,r){const s=new TrackedDocument(e,t,i,r);return await s.initialize(),s}_onDidBlameStateChange=new r.EventEmitter;get onDidBlameStateChange(){return this._onDidBlameStateChange.event}state;_disposable;_disposed=!1;_uri;dispose(){this.state=void 0,this._disposed=!0,this._disposable?.dispose()}initializing=!0;async initialize(){const e=this.document.uri;this._uri=await h.YY.fromUri(e),this._disposed||await this.update(),this.initializing=!1}_forceDirtyStateChangeOnNextDocumentChange=!1;get forceDirtyStateChangeOnNextDocumentChange(){return this._forceDirtyStateChangeOnNextDocumentChange}_hasRemotes=!1;get hasRemotes(){return this._hasRemotes}get isBlameable(){return null==this._blameFailed&&this._isTracked}_isDirtyIdle=!1;get isDirtyIdle(){return this._isDirtyIdle}set isDirtyIdle(e){this._isDirtyIdle=e}get isRevision(){return null!=this._uri&&(Boolean(this._uri.sha)&&this._uri.sha!==p.Ii)}_isTracked=!1;get isTracked(){return this._isTracked}get lineCount(){return this.document.lineCount}get uri(){return this._uri}async activate(){this._requiresUpdate&&await this.update(),(0,ne.v)("gitlens:activeFileStatus",this.getStatus())}is(e){return e===this.document}_updateDebounced;refresh(e){this._requiresUpdate=!0,this._blameFailed=void 0,this._isDirtyIdle=!1,null!=this.state&&(this.state=void 0,A.Yd.log(`Reset state for '${this.document.uri.toString(!0)}', reason=${e}`)),"repo-changed"===e&&(0,V.$S)(this.document)&&(null==this._updateDebounced&&(this._updateDebounced=(0,pe.Ds)(this.update.bind(this),250)),this._updateDebounced())}_blameFailed;setBlameFailure(e){const t=this.isBlameable;this._blameFailed=e,t&&(0,V.$S)(this.document)&&this.update({forceBlameChange:!0})}resetForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!1}setForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!0}_requiresUpdate=!0;async update(e){if(this._requiresUpdate=!1,this._disposed||null==this._uri)return this._hasRemotes=!1,void(this._isTracked=!1);this._isDirtyIdle=!1;const t=(0,V.aW)(this.document),i=e?.forceBlameChange?void 0:this.isBlameable,r=this.container.git.getRepository(this._uri);if(null==r?(this._isTracked=!1,this._hasRemotes=!1):[this._isTracked,this._hasRemotes]=await Promise.all([this.container.git.isTracked(this._uri),r.hasRemotes()]),null!=t){const e=this.isBlameable;if((0,ne.v)("gitlens:activeFileStatus",this.getStatus()),!this.initializing&&i!==e){const i={editor:t,document:this,blameable:e};this._onDidBlameStateChange.fire(i),this._eventDelegates.onDidBlameStateChange(i)}}}getStatus(){let e="";return this.isTracked&&(e+="tracked|"),this.isBlameable&&(e+="blameable|"),this.isRevision&&(e+="revision|"),this.hasRemotes&&(e+="remotes|"),e||void 0}}class DocumentTracker{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this),r.window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged,this),r.workspace.onDidChangeTextDocument((0,pe.Ds)(this.onTextDocumentChanged,50),this),r.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),r.workspace.onDidSaveTextDocument(this.onTextDocumentSaved,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this)),this._dirtyIdleTriggerDelay=C.D.get("advanced.blame.delayAfterEdit")}_onDidChangeBlameState=new r.EventEmitter;get onDidChangeBlameState(){return this._onDidChangeBlameState.event}_onDidChangeContent=new r.EventEmitter;get onDidChangeContent(){return this._onDidChangeContent.event}_onDidChangeDirtyState=new r.EventEmitter;get onDidChangeDirtyState(){return this._onDidChangeDirtyState.event}_onDidTriggerDirtyIdle=new r.EventEmitter;get onDidTriggerDirtyIdle(){return this._onDidTriggerDirtyIdle.event}_dirtyIdleTriggerDelay;_disposable;_documentMap=new Map;dispose(){this._disposable.dispose(),this.clear()}onReady(){this.onConfigurationChanged(),this.onActiveTextEditorChanged(r.window.activeTextEditor)}_timer;onActiveTextEditorChanged(e){if(null!=e&&!(0,V.PH)(e))return;if(null!=this._timer&&(clearTimeout(this._timer),this._timer=void 0),null==e)return void(this._timer=setTimeout((()=>{this._timer=void 0,(0,ne.v)("gitlens:activeFileStatus",void 0)}),250));const t=this._documentMap.get(e.document);null==t?this.addCore(e.document):t.then((e=>e.activate()),(()=>{}))}onConfigurationChanged(e){null!=e&&(C.D.changed(e,"blame.ignoreWhitespace")||C.D.changed(e,"advanced.caching.enabled"))&&this.refreshDocuments(),C.D.changed(e,"advanced.blame.delayAfterEdit")&&(this._dirtyIdleTriggerDelay=C.D.get("advanced.blame.delayAfterEdit"),this._dirtyIdleTriggeredDebounced=void 0)}onRepositoriesChanged(e){this.refreshDocuments({addedOrChangedRepoPaths:e.added.length?new Set(e.added.map((e=>e.path.toLowerCase()))):void 0,removedRepoPaths:e.removed.length?new Set(e.removed.map((e=>e.path.toLowerCase()))):void 0})}onRepositoryChanged(e){e.changed(v.I6.Index,v.I6.Heads,v.I6.Status,v.I6.Unknown,v.du.Any)&&this.refreshDocuments({addedOrChangedRepoPaths:new Set([e.repository.path])})}async onTextDocumentChanged(e){const{scheme:t}=e.document.uri;if(!this.container.git.supportedSchemes.has(t))return;const i=await(this._documentMap.get(e.document)??this.addCore(e.document));i.refresh("doc-changed");const s=e.document.isDirty,n=r.window.activeTextEditor;null!=this._dirtyIdleTriggeredDebounced&&(s?this._dirtyIdleTriggeredDebounced({editor:n,document:i}):this._dirtyIdleTriggeredDebounced.cancel()),n?.document===e.document&&this._onDidChangeContent.fire({editor:n,document:i,contentChanges:e.contentChanges}),(i.forceDirtyStateChangeOnNextDocumentChange||i.dirty!==s)&&(i.resetForceDirtyStateChangeOnNextDocumentChange(),i.dirty=s,null!=n&&n.document===e.document&&this.fireDocumentDirtyStateChanged({editor:n,document:i,dirty:i.dirty}))}onTextDocumentClosed(e){this.remove(e)}async onTextDocumentSaved(e){const t=this._documentMap.get(e);null==t?(0,V.$S)(e)&&this.addCore(e):(await t).update({forceBlameChange:!0})}async add(e){let t;if((0,h.uy)(e))try{t=await r.workspace.openTextDocument(e.documentUri())}catch(i){const s=i?.toString()??"";if(r.env.language.startsWith("en"))if(s.includes("File seems to be binary and cannot be opened as text"))t=new BinaryTextDocument(e);else{if(!(s.includes("File not found")||s.includes("Unable to read file")||s.includes("Unable to resolve non-existing file")))throw i;t=new MissingRevisionTextDocument(e)}else{if(!s.includes("cannot open"))throw i;t=new MissingRevisionTextDocument(e)}}else t=e instanceof r.Uri?await r.workspace.openTextDocument(e):e;return this.addCore(t)}async addCore(e){const t=TrackedDocument.create(e,!1,{onDidBlameStateChange:e=>this._onDidChangeBlameState.fire(e)},this.container);return this._documentMap.set(e,t),t}async clear(){for(const e of this._documentMap.values())(await e).dispose();this._documentMap.clear()}get(e){if(e instanceof r.Uri){const t=(0,V.s5)(e);if(null==t)return;e=t}return this._documentMap.get(e)}async getOrAdd(e){e instanceof r.Uri&&(e=(0,V.s5)(e)??e);return this.get(e)??this.add(e)}has(e){if(e instanceof r.Uri){const t=(0,V.s5)(e);if(null==t)return!1;e=t}return this._documentMap.has(e)}async remove(e,t){let i;null!=t&&(i=this._documentMap.get(e)),this._documentMap.delete(e),(t??await i)?.dispose()}_dirtyIdleTriggeredDebounced;_dirtyStateChangedDebounced;fireDocumentDirtyStateChanged(e){if(e.dirty)return queueMicrotask((()=>{this._dirtyStateChangedDebounced?.cancel(),r.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)})),void(this._dirtyIdleTriggerDelay>0&&(null==this._dirtyIdleTriggeredDebounced&&(this._dirtyIdleTriggeredDebounced=(0,pe.Ds)((e=>{this._dirtyIdleTriggeredDebounced?.pending()||(e.document.isDirtyIdle=!0,this._onDidTriggerDirtyIdle.fire(e))}),this._dirtyIdleTriggerDelay)),this._dirtyIdleTriggeredDebounced({editor:e.editor,document:e.document})));null==this._dirtyStateChangedDebounced&&(this._dirtyStateChangedDebounced=(0,pe.Ds)((e=>{r.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)}),250)),this._dirtyStateChangedDebounced(e)}async refreshDocuments(e){if(0!==this._documentMap.size)for await(const t of this._documentMap.values()){const i=t.uri.repoPath?.toLocaleLowerCase();null!=i&&(e?.removedRepoPaths?.has(i)?this.remove(t.document,t):(null==e||e?.addedOrChangedRepoPaths?.has(i))&&t.refresh("repo-changed"))}}}class EmptyTextDocument{constructor(e){this.gitUri=e,this.uri=e.documentUri(),this.eol=r.EndOfLine.LF,this.fileName=this.uri.fsPath,this.isClosed=!1,this.isDirty=!1,this.isUntitled=!1,this.languageId="",this.lineCount=0,this.version=0}eol;fileName;isClosed;isDirty;isUntitled;languageId;lineCount;uri;version;getText(e){throw new Error("Method not supported.")}getWordRangeAtPosition(e,t){throw new Error("Method not supported.")}lineAt(e){throw new Error("Method not supported.")}offsetAt(e){throw new Error("Method not supported.")}positionAt(e){throw new Error("Method not supported.")}save(){throw new Error("Method not supported.")}validatePosition(e){throw new Error("Method not supported.")}validateRange(e){throw new Error("Method not supported.")}}class BinaryTextDocument extends EmptyTextDocument{}class MissingRevisionTextDocument extends EmptyTextDocument{}class GitDocumentState{blameCache=new Map;diffCache=new Map;logCache=new Map;clearBlame(e){null!=e?this.blameCache.delete(e):this.blameCache.clear()}clearDiff(e){null!=e?this.diffCache.delete(e):this.diffCache.clear()}clearLog(e){null!=e?this.logCache.delete(e):this.logCache.clear()}getBlame(e){return this.blameCache.get(e)}getDiff(e){return this.diffCache.get(e)}getLog(e){return this.logCache.get(e)}setBlame(e,t){null!=t?this.blameCache.set(e,t):this.blameCache.delete(e)}setDiff(e,t){null!=t?this.diffCache.set(e,t):this.diffCache.delete(e)}setLog(e,t){null!=t?this.logCache.set(e,t):this.logCache.delete(e)}}class GitDocumentTracker extends DocumentTracker{async resetCache(e,t){const i=this.get(e);if(null!=i)switch(t){case"blame":(await i).state?.clearBlame();break;case"diff":(await i).state?.clearDiff();break;case"log":(await i).state?.clearLog()}}}async function me(e){try{const e=r.extensions.getExtension("ms-vscode.remote-repositories")??r.extensions.getExtension("GitHub.remotehub");if(null==e)throw A.Yd.log("GitHub Repositories extension is not installed or enabled"),new a.R5("GitHub Repositories","GitHub.remotehub");return e.isActive?e.exports:await e.activate()}catch(t){if(A.Yd.error(t,"Unable to get required api from the GitHub Repositories extension"),a.R5,e)return;throw t}}var ge=(e=>(e[e.Branch=0]="Branch",e[e.RemoteBranch=1]="RemoteBranch",e[e.Tag=2]="Tag",e[e.Commit=3]="Commit",e))(ge||{}),fe=i(3878),we=Object.defineProperty,ve=Object.getOwnPropertyDescriptor,ye=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ve(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&we(t,i,n),n};const be=/"/g,Ce=Object.freeze([]),Ae=Object.freeze({values:[]}),Se=Promise.resolve(void 0),Pe=["repo","read:user","user:email"],ke=/^[^/](?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ~^:?*[\\]+[^./]$/;class GitHubGitProvider{constructor(e){this.container=e,this._disposables.push(this.container.events.on("git:cache:reset",(e=>e.data.repoPath?this.resetCache(e.data.repoPath,...e.data.caches??Ce):this.resetCaches(...e.data.caches??Ce)),r.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged,this)))}descriptor={id:"github",name:"GitHub",virtual:!0};supportedSchemes=new Set([n.sN.Virtual,n.sN.GitHub,n.sN.PRs]);_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeRepository=new r.EventEmitter;get onDidChangeRepository(){return this._onDidChangeRepository.event}_onDidCloseRepository=new r.EventEmitter;get onDidCloseRepository(){return this._onDidCloseRepository.event}_onDidOpenRepository=new r.EventEmitter;get onDidOpenRepository(){return this._onDidOpenRepository.event}_branchesCache=new Map;_repoInfoCache=new Map;_tagsCache=new Map;_disposables=[];dispose(){this._disposables.forEach((e=>{e.dispose()}))}onAuthenticationSessionsChanged(e){"github"===e.provider.id&&(this._sessionPromise=void 0,this.ensureSession(!1,!0))}onRepositoryChanged(e,t){this._branchesCache.delete(e.path),this._tagsCache.delete(e.path),this._repoInfoCache.delete(e.path),this._onDidChangeRepository.fire(t)}async discoverRepositories(e,t){if(!this.supportedSchemes.has(e.scheme))return[];try{const{remotehub:i}=await this.ensureRepositoryContext(e.toString(),!0),r=i.getVirtualWorkspaceUri(e);return null==r?[]:this.openRepository(void 0,r,!0,void 0,t?.silent)}catch(t){return t.message.startsWith("No provider registered with")&&(A.Yd.error(t,"No GitHub provider registered with Remote Repositories (yet); queuing pending discovery"),this._pendingDiscovery.add(e),this.ensurePendingRepositoryDiscovery()),[]}}_pendingDiscovery=new Set;_pendingTimer;ensurePendingRepositoryDiscovery(){null==this._pendingTimer&&0!==this._pendingDiscovery.size&&(this._pendingTimer=setTimeout((async()=>{try{const e=await me();for(const t of this._pendingDiscovery){if(null==e.getProvider(t))return this._pendingTimer=void 0,void this.ensurePendingRepositoryDiscovery();this._pendingDiscovery.delete(t)}this._pendingTimer=void 0,setTimeout((()=>this._onDidChange.fire()),1),0!==this._pendingDiscovery.size&&this.ensurePendingRepositoryDiscovery()}catch{this._pendingTimer=void 0,this.ensurePendingRepositoryDiscovery()}}),250))}updateContext(){(0,ne.v)("gitlens:hasVirtualFolders",this.container.git.hasOpenRepositories(this.descriptor.id))}openRepository(e,t,i,s,n){return[new v._j(this.container,this.onRepositoryChanged.bind(this),this.descriptor,e??r.workspace.getWorkspaceFolder(t),t,i,s??!r.window.state.focused,n)]}async supports(e){switch(e){case c.A.Stashes:case c.A.Worktrees:case c.A.StashOnlyStaged:return!1;default:return!0}}async visibility(e){const t=await this.getRemotes(e,{sort:!0});if(0===t.length)return["local",void 0];for await(const e of(0,he.rX)(t.map((e=>this.getRemoteVisibility(e)))))if("fulfilled"===e.status&&"public"===e.value[0])return["public",(0,w.Ym)(e.value[1])];return["private",(0,w.Ym)(t)]}async getRemoteVisibility(e){if("github"===e.provider?.id){const{github:t,metadata:i,session:r}=await this.ensureRepositoryContext(e.repoPath);return[await t.getRepositoryVisibility(r.accessToken,i.repo.owner,i.repo.name)??"private",e]}return["private",e]}async getOpenScmRepositories(){return[]}async getScmRepository(e){}async getOrOpenScmRepository(e){}canHandlePathOrUri(e,t){if(this.supportedSchemes.has(e))return"string"==typeof t?t:t.toString()}getAbsoluteUri(e,t){if("string"==typeof t){if(!(0,le.tE)(t))throw r.window.showErrorMessage(`Unable to get absolute uri between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be a uri`),new Error(`Base path '${t}' must be a uri`);t=r.Uri.parse(t,!0)}if("string"==typeof e&&!(0,le.tE)(e)){const i=(0,le.AH)(e);if(!(0,le.YP)(i))return r.Uri.joinPath(t,i)}const i=this.getRelativePath(e,t);return r.Uri.joinPath(t,i)}async getBestRevisionUri(e,t,i){return i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t)}getRelativePath(e,t){if("string"==typeof t){if(!(0,le.tE)(t))throw r.window.showErrorMessage(`Unable to get relative path between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be a uri`),new Error(`Base path '${t}' must be a uri`);t=r.Uri.parse(t,!0)}let i;if("string"==typeof e){if(!(0,le.tE)(e))return e=(0,le.AH)(e),i=(0,le.YP)(e)&&e.startsWith(t.path)?e.slice(t.path.length):e,i.charCodeAt(0)===n.mN.Slash&&(i=i.slice(1)),i;e=r.Uri.parse(e,!0)}return i=(0,le.AH)((0,le.Gf)(t.path.slice(1),e.path.slice(1))),i}getRevisionUri(e,t,i){const r=this.createProviderUri(e,i,t);return i===p.Ii?r.with({query:"~"}):r}async getWorkingUri(e,t){return this.createVirtualUri(e,void 0,t.path)}async addRemote(e,t,i,r){}async pruneRemote(e,t){}async removeRemote(e,t){}async applyChangesToWorkingFile(e,t,i){}async branchContainsCommit(e,t,i){return!1}async checkout(e,t,i){}resetCache(e,...t){(0===t.length||t.includes("branches"))&&this._branchesCache.delete(e),(0===t.length||t.includes("tags"))&&this._tagsCache.delete(e),0===t.length&&this._repoInfoCache.delete(e)}resetCaches(...e){(0===e.length||e.includes("branches"))&&this._branchesCache.clear(),(0===e.length||e.includes("tags"))&&this._tagsCache.clear(),0===e.length&&this._repoInfoCache.clear()}async excludeIgnoredUris(e,t){return t}async fetch(e,t){}async pull(e,t){}async push(e,t){}async findRepositoryUri(e,t){const i=(0,ce.UH)();try{const t=await this.ensureRemoteHubApi();return t.getProviderRootUri(e).with({scheme:n.sN.Virtual})}catch(e){return a.R5,void A.Yd.error(e,i)}}async getAheadBehindCommitCount(e,t,i){}async getBlame(e,t){const i=(0,ce.UH)();if(t?.isDirty)return;let r="blame";null!=e.sha&&(r+=`:${e.sha}`);const s=await this.container.tracker.getOrAdd(e);if(null!=s.state){const e=s.state.getBlame(r);if(null!=e)return A.Yd.debug(i,`Cache hit: '${r}'`),e.item}A.Yd.debug(i,`Cache miss: '${r}'`),null==s.state&&(s.state=new GitDocumentState);const n=this.getBlameCore(e,s,r,i);if(null!=s.state){A.Yd.debug(i,`Cache add: '${r}'`);const e={item:n};s.state.setBlame(r,e)}return n}async getBlameCore(e,t,i,s){try{const t=await this.ensureRepositoryContext(e.repoPath);if(null==t)return;const{metadata:i,github:s,remotehub:o,session:a}=t,c=o.getVirtualUri(o.getProviderRootUri(e)),l=this.getRelativePath(e,c);if(e.scheme===n.sN.Virtual){const[t,i]=await Promise.allSettled([r.workspace.fs.stat(e),r.workspace.fs.stat(e.with({scheme:n.sN.GitHub}))]);if("fulfilled"!==t.status||"fulfilled"!==i.status||t.value.mtime!==i.value.mtime)return}const h=e.sha&&"HEAD"!==e.sha?e.sha:(await i.getRevision()).revision,u=await s.getBlame(a.accessToken,i.repo.owner,i.repo.name,h,l),p=new Map,m=new Map,f=[];for(const t of u.ranges){const i=t.commit,{viewer:r=a.account.label}=u,s=null!=r&&i.author.name===r?"You":i.author.name,n=null!=r&&i.committer.name===r?"You":i.committer.name;let o=p.get(s);null==o&&(o={name:s,lineCount:0},p.set(s,o)),o.lineCount+=t.endingLine-t.startingLine+1;let h=m.get(i.oid);null==h&&(h=new d.aM(this.container,e.repoPath,i.oid,new d._j(s,i.author.email,new Date(i.author.date),i.author.avatarUrl),new d._j(n,i.committer.email,new Date(i.author.date)),i.message.split("\n",1)[0],i.parents.nodes[0]?.oid?[i.parents.nodes[0]?.oid]:[],i.message,new g.K8(c.toString(),l,g.NV.Modified),{changedFiles:i.changedFiles??0,additions:i.additions??0,deletions:i.deletions??0},[]),m.set(i.oid,h));for(let e=t.startingLine;e<=t.endingLine;e++){const t={sha:i.oid,originalLine:e,line:e};h.lines.push(t),f[e-1]=t}}const w=new Map([...p.entries()].sort(((e,t)=>t[1].lineCount-e[1].lineCount)));return{repoPath:e.repoPath,authors:w,commits:m,lines:f}}catch(e){if(null!=t.state&&!String(e).includes("No provider registered with")){const r=e?.toString()??"";A.Yd.debug(s,`Cache replace (with empty promise): '${i}'`);const n={item:Se,errorMessage:r};return t.state.setBlame(i,n),t.setBlameFailure(e),Se}return}}async getBlameContents(e,t){}async getBlameForLine(e,t,i,r){const s=(0,ce.UH)();if(!i?.isDirty){if(!r?.forceSingleLine){const i=await this.getBlame(e);if(null==i)return;let r=i.lines[t];if(null==r){if(i.lines.length!==t)return;r=i.lines[t-1]}const s=i.commits.get(r.sha);if(null==s)return;return{author:{...i.authors.get(s.author.name),lineCount:s.lines.length},commit:s,line:r}}try{const i=await this.ensureRepositoryContext(e.repoPath);if(null==i)return;const{metadata:r,github:s,remotehub:n,session:o}=i,a=n.getVirtualUri(n.getProviderRootUri(e)),c=this.getRelativePath(e,a),l=e.sha&&"HEAD"!==e.sha?e.sha:(await r.getRevision()).revision,h=await s.getBlame(o.accessToken,r.repo.owner,r.repo.name,l,c),u=t+1,p=h.ranges.find((e=>e.startingLine===u));if(null==p)return;const m=p.commit,{viewer:f=o.account.label}=h,w=null!=f&&m.author.name===f?"You":m.author.name,v=null!=f&&m.committer.name===f?"You":m.committer.name,y=new d.aM(this.container,e.repoPath,m.oid,new d._j(w,m.author.email,new Date(m.author.date),m.author.avatarUrl),new d._j(v,m.committer.email,new Date(m.author.date)),m.message.split("\n",1)[0],m.parents.nodes[0]?.oid?[m.parents.nodes[0]?.oid]:[],m.message,new g.K8(a.toString(),c,g.NV.Modified),{changedFiles:m.changedFiles??0,additions:m.additions??0,deletions:m.deletions??0},[]);for(let e=p.startingLine;e<=p.endingLine;e++){const t={sha:m.oid,originalLine:e,line:e};y.lines.push(t)}return{author:{name:w,lineCount:p.endingLine-p.startingLine+1},commit:y,line:{sha:m.oid,originalLine:p.startingLine,line:p.startingLine}}}catch(e){return void A.Yd.error(s,e)}}}async getBlameForLineContents(e,t,i,r){}async getBlameForRange(e,t){const i=await this.getBlame(e);if(null!=i)return this.getBlameRange(i,e,t)}async getBlameForRangeContents(e,t,i){const r=await this.getBlameContents(e,i);if(null!=r)return this.getBlameRange(r,e,t)}getBlameRange(e,t,i){if(0===e.lines.length)return{allLines:e.lines,...e};if(0===i.start.line&&i.end.line===e.lines.length-1)return{allLines:e.lines,...e};const r=e.lines.slice(i.start.line,i.end.line+1),s=new Set(r.map((e=>e.sha))),n=i.start.line+1,o=i.end.line+1,a=new Map,c=new Map;for(const t of e.commits.values()){if(!s.has(t.sha))continue;const e=t.with({lines:t.lines.filter((e=>e.line>=n&&e.line<=o))});c.set(t.sha,e);let i=a.get(e.author.name);null==i&&(i={name:e.author.name,lineCount:0},a.set(i.name,i)),i.lineCount+=e.lines.length}const l=new Map([...a.entries()].sort(((e,t)=>t[1].lineCount-e[1].lineCount)));return{repoPath:t.repoPath,authors:l,commits:c,lines:r,allLines:e.lines}}async getBranch(e){const{values:[t]}=await this.getBranches(e,{filter:e=>e.current});return t}async getBranches(e,t){if(null==e)return Ae;const i=(0,ce.UH)();let r=t?.cursor?void 0:this._branchesCache.get(e);if(null==r){async function n(){try{const{metadata:i,github:r,session:s}=await this.ensureRepositoryContext(e),n=await i.getRevision(),o=0===n.type?n.name:void 0,a=[];let c=t?.cursor;const l=null==c;for(;;){const t=await r.getBranches(s.accessToken,i.repo.owner,i.repo.name,{cursor:c});for(const i of t.values){const t=new Date("author-date"===C.D.get("advanced.commitOrdering")?i.target.authoredDate:i.target.committedDate),r=i.target.oid;a.push(new u.XI(this.container,e,i.name,!1,i.name===o,t,r,{name:`origin/${i.name}`,missing:!1}),new u.XI(this.container,e,`origin/${i.name}`,!0,!1,t,r))}if(!t.paging?.more||!l)return{...t,values:a};c=t.paging.cursor}}catch(t){return A.Yd.error(t,i),this._branchesCache.delete(e),Ae}}r=n.call(this),null==t?.cursor&&this._branchesCache.set(e,r)}let s=await r;return null!=t?.filter&&(s={...s,values:s.values.filter(t.filter)}),null!=t?.sort&&(0,u.YF)(s.values,"boolean"==typeof t.sort?void 0:t.sort),s}async getChangedFilesCount(e,t){if(!t)return;const i=await this.getCommit(e,t);if(null==i?.stats)return;const{stats:r}=i,s=(0,d.By)(r.changedFiles);return{additions:r.additions,deletions:r.deletions,changedFiles:s}}async getCommit(e,t){if(null==e)return;const i=(0,ce.UH)();try{const{metadata:i,github:r,session:s}=await this.ensureRepositoryContext(e),n=await r.getCommit(s.accessToken,i.repo.owner,i.repo.name,t);if(null==n)return;const{viewer:o=s.account.label}=n,a=null!=o&&n.author.name===o?"You":n.author.name,c=null!=o&&n.committer.name===o?"You":n.committer.name;return new d.aM(this.container,e,n.oid,new d._j(a,n.author.email,new Date(n.author.date),n.author.avatarUrl),new d._j(c,n.committer.email,new Date(n.committer.date)),n.message.split("\n",1)[0],n.parents.nodes.map((e=>e.oid)),n.message,n.files?.map((t=>new g.K8(e,t.filename??"",(0,fe.fromCommitFileStatus)(t.status)??g.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0})))??[],{changedFiles:n.changedFiles??0,additions:n.additions??0,deletions:n.deletions??0},[])}catch(e){return void A.Yd.error(e,i)}}async getCommitBranches(e,t,i,r){if(null==e||null==r?.commitDate)return[];const s=(0,ce.UH)();try{const{metadata:s,github:n,session:o}=await this.ensureRepositoryContext(e);let a;return a=i?await n.getCommitOnBranch(o.accessToken,s.repo.owner,s.repo.name,i,t,r?.commitDate):await n.getCommitBranches(o.accessToken,s.repo.owner,s.repo.name,t,r?.commitDate),a}catch(e){return A.Yd.error(e,s),[]}}async getCommitCount(e,t){if(null==e)return;const i=(0,ce.UH)();try{const{metadata:i,github:r,session:s}=await this.ensureRepositoryContext(e);return await r.getCommitCount(s?.accessToken,i.repo.owner,i.repo.name,t)}catch(e){return void A.Yd.error(e,i)}}async getCommitForFile(e,t,i){if(null==e)return;const r=(0,ce.UH)();try{const{metadata:r,github:s,remotehub:n,session:o}=await this.ensureRepositoryContext(e),a=this.getRelativePath(t,n.getProviderRootUri(t)),c=i?.ref&&"HEAD"!==i.ref?i.ref:(await r.getRevision()).revision,l=await s.getCommitForFile(o.accessToken,r.repo.owner,r.repo.name,c,a);if(null==l)return;const{viewer:h=o.account.label}=l,u=null!=h&&l.author.name===h?"You":l.author.name,p=null!=h&&l.committer.name===h?"You":l.committer.name,m=l.files?.map((t=>new g.K8(e,t.filename??"",(0,fe.fromCommitFileStatus)(t.status)??g.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),f=m?.find((e=>e.path===a));return new d.aM(this.container,e,l.oid,new d._j(u,l.author.email,new Date(l.author.date),l.author.avatarUrl),new d._j(p,l.committer.email,new Date(l.committer.date)),l.message.split("\n",1)[0],l.parents.nodes.map((e=>e.oid)),l.message,{file:f,files:m},{changedFiles:l.changedFiles??0,additions:l.additions??0,deletions:l.deletions??0},[])}catch(e){return void A.Yd.error(e,r)}}async getCommitsForGraph(e,t,i){const r=i?.limit??C.D.get("graph.defaultItemLimit")??5e3,s=C.D.get("graph.commitOrdering",void 0,"date"),n=C.D.get("graph.avatars",void 0,!0),[o,a,c,l,h,u]=await Promise.allSettled([this.getLog(e,{all:!0,ordering:s,limit:r}),this.getBranch(e),this.getBranches(e,{filter:e=>e.remote}),this.getRemotes(e),this.getTags(e),this.getCurrentUser(e)]),d=new Map,p=(0,he.Sb)(a),m=new Map,g=new Map;null!=p&&(m.set(p.name,p),null!=p.sha&&g.set(p.sha,[p.name]));const f=(0,he.Sb)(c)?.values;if(null!=f)for(const e of f){if(m.set(e.name,e),null==e.sha)continue;const t=g.get(e.sha);null==t?g.set(e.sha,[e.name]):t.push(e.name)}const w=new Set,v=(0,he.Sb)(l)[0],y=null!=v?new Map([[v.name,v]]):new Map,b=new Map,A=(0,he.Sb)(h)?.values;if(null!=A)for(const e of A){if(null==e.sha)continue;const t=b.get(e.sha);null==t?b.set(e.sha,[e.name]):t.push(e.name)}return this.getCommitsForGraphCore(e,t,(0,he.Sb)(o),p,m,g,v,y,b,(0,he.Sb)(u),d,w,{...i,useAvatars:n})}async getCommitsForGraphCore(e,t,i,r,s,n,a,c,l,h,p,m,g){const v={...g?.include,stats:!0},y=new Map;if(null==i)return{repoPath:e,avatars:p,ids:m,includes:v,branches:s,remotes:c,downstreams:y,rows:[]};const C=(i.pagedCommits?.()??i.commits)?.values();if(null==C)return{repoPath:e,avatars:p,ids:m,includes:v,branches:s,remotes:c,downstreams:y,rows:[]};const A=[];let S,P,k,D,R,_,T,F,$,I,x=!1,O=!1;const E=r.upstream?.name;for(const i of C){if(m.add(i.sha),x=i.sha===r.sha,x)if(k={webviewItem:`gitlens:branch${x?"+current":""}${null!=r?.upstream?"+tracking":""}`,webviewItemValue:{type:"branch",ref:(0,f.xB)(r.name,e,{id:r.id,refType:"branch",name:r.name,remote:!1,upstream:r.upstream})}},R=[{id:r.id,name:r.name,isCurrentHead:!0,context:(0,ue.BH)(k),upstream:null!=r.upstream?{name:r.upstream.name,id:(0,u.Vx)(e,!0,r.upstream.name)}:void 0}],null!=r.upstream){if(F=(0,u.Vx)(e,!0,r.name),S=((g?.useAvatars?a.provider?.avatarUri:void 0)??(0,w.dM)(this.container,a,t))?.toString(!0),k={webviewItem:"gitlens:branch+remote",webviewItemValue:{type:"branch",ref:(0,f.xB)(r.name,e,{id:F,refType:"branch",name:r.name,remote:!0,upstream:{name:a.name,missing:!1}})}},_=[{id:F,name:r.name,owner:a.name,url:a.url,avatarUrl:S,context:(0,ue.BH)(k),current:!0,hostingServiceType:a.provider?.id}],null!=E){let e=y.get(E);null==e&&(e=[],y.set(E,e)),e.push(r.name)}}else _=[];else{R=[],_=[];const r=n.get(i.sha);if(null!=r)for(const i of r)F=(0,u.Vx)(e,!0,i),P=(0,u.S3)(i),S=((g?.useAvatars?a.provider?.avatarUri:void 0)??(0,w.dM)(this.container,a,t))?.toString(!0),k={webviewItem:"gitlens:branch+remote",webviewItemValue:{type:"branch",ref:(0,f.xB)(i,e,{id:F,refType:"branch",name:i,remote:!0,upstream:{name:a.name,missing:!1}})}},_.push({id:F,name:P,owner:a.name,url:a.url,avatarUrl:S,context:(0,ue.BH)(k),hostingServiceType:a.provider?.id})}T=[];const s=l.get(i.sha);if(null!=s)for(const t of s)I=(0,b.YU)(e,t),k={webviewItem:"gitlens:tag",webviewItemValue:{type:"tag",ref:(0,f.xB)(t,e,{id:I,refType:"tag",name:t})}},T.push({id:I,name:t,annotated:!0,context:(0,ue.BH)(k)});if(i.author.email&&!p.has(i.author.email)){const e=i.getCachedAvatarUri();null!=e&&p.set(i.author.email,e.toString(!0))}O="You"===i.author.name,D={row:(0,ue.BH)({webviewItem:`gitlens:commit${x?"+HEAD":""}+current`,webviewItemValue:{type:"commit",ref:(0,f.xB)(i.sha,e,{refType:"revision",message:i.message})}}),avatar:(0,ue.BH)({webviewItem:"gitlens:contributor"+(O?"+current":""),webviewItemValue:{type:"contributor",repoPath:e,name:O&&null!=h?.name?h.name:i.author.name,email:i.author.email,current:O}})},A.push({sha:i.sha,parents:i.parents,author:i.author.name,email:i.author.email??"",date:i.committer.date.getTime(),message:(0,o.X)(i.message&&String(i.message).length?i.message:i.summary),type:i.parents.length>1?"merge-node":"commit-node",heads:R,remotes:_,tags:T,contexts:D}),null!=i.stats&&(null==$&&($=new Map),$.set(i.sha,{files:(0,d.By)(i.stats.changedFiles),additions:i.stats.additions,deletions:i.stats.deletions}))}return"HEAD"===g?.ref?g.ref=(0,ae.Ps)(i.commits.values())?.sha:null!=g?.ref&&(g.ref=void 0),{repoPath:e,avatars:p,ids:m,includes:v,branches:s,remotes:c,downstreams:y,rows:A,id:g?.ref,paging:{limit:i.limit,startingCursor:i.startingCursor,hasMore:i.hasMore},more:async o=>{const u=await(i.more?.(o));return this.getCommitsForGraphCore(e,t,u,r,s,n,a,c,l,h,p,m,g)}}}async getCommitTags(e,t,i){if(null==e||null==i?.commitDate)return[];const r=(0,ce.UH)();try{const{metadata:r,github:s,session:n}=await this.ensureRepositoryContext(e);return await s.getCommitTags(n.accessToken,r.repo.owner,r.repo.name,t,i?.commitDate)}catch(e){return A.Yd.error(e,r),[]}}async getContributors(e,t){if(null==e)return[];const i=(0,ce.UH)();try{const{metadata:t,github:i,session:a}=await this.ensureRepositoryContext(e),c=await i.getContributors(a.accessToken,t.repo.owner,t.repo.name),l=await this.getCurrentUser(e),h=[];for(const t of c)"User"===t.type&&h.push(new m.V(e,t.name,t.email,t.contributions,void 0,(r=l,s=t.name,n=t.email,o=t.login,!(null==r||null==r.name&&null==r.email&&null==r.username||null!=r.name&&r.name!==s||null!=r.email&&r.email!==n||null!=r.username&&r.username!==o)),void 0,t.login,t.avatar_url,t.node_id));return h}catch(e){return A.Yd.error(e,i),[]}var r,s,n,o}async getCurrentUser(e){if(!e)return;const t=(0,ce.UH)(),i=this._repoInfoCache.get(e);let r=i?.user;if(null!=r)return r;if(null!==r)try{const{metadata:t,github:s,session:n}=await this.ensureRepositoryContext(e);return r=await s.getCurrentUser(n.accessToken,t.repo.owner,t.repo.name),this._repoInfoCache.set(e,{...i,user:r??null}),r}catch(r){return A.Yd.error(r,t),void this._repoInfoCache.set(e,{...i,user:null})}}async getDefaultBranchName(e,t){if(null==e)return;const i=(0,ce.UH)();try{const{metadata:t,github:i,session:r}=await this.ensureRepositoryContext(e);return await i.getDefaultBranchName(r.accessToken,t.repo.owner,t.repo.name)}catch(e){return void A.Yd.error(e,i)}}async getDiffForFile(e,t,i){}async getDiffForFileContents(e,t,i){}async getDiffForLine(e,t,i,r){}async getDiffStatus(e,t,i,r){}async getFileStatusForCommit(e,t,i){if(i===p.Ii||(0,f.l3)(i))return;const r=await this.getCommitForFile(e,t,{ref:i});return null!=r?r.findFile(t):void 0}async getLastFetchedTimestamp(e){}async getLog(e,t){if(null==e)return;const i=(0,ce.UH)(),r=this.getPagingLimit(t?.limit);try{const{metadata:i,github:s,session:n}=await this.ensureRepositoryContext(e),o=t?.ref&&"HEAD"!==t.ref?t.ref:(await i.getRevision()).revision,a=await s.getCommits(n.accessToken,i.repo.owner,i.repo.name,o,{all:t?.all,authors:t?.authors,after:t?.cursor,limit:r,since:t?.since?new Date(t.since):void 0}),c=new Map,{viewer:l=n.account.label}=a;for(const t of a.values){const i=null!=l&&t.author.name===l?"You":t.author.name,r=null!=l&&t.committer.name===l?"You":t.committer.name;let s=c.get(t.oid);null==s&&(s=new d.aM(this.container,e,t.oid,new d._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new d._j(r,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,t.files?.map((t=>new g.K8(e,t.filename??"",(0,fe.fromCommitFileStatus)(t.status)??g.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),c.set(t.oid,s))}const h={repoPath:e,commits:c,sha:o,range:void 0,count:c.size,limit:r,hasMore:a.paging?.more??!1,endingCursor:a.paging?.cursor,query:i=>this.getLog(e,{...t,limit:i})};return h.hasMore&&(h.more=this.getLogMoreFn(h,t)),h}catch(e){return void A.Yd.error(e,i)}}async getLogRefsOnly(e,t){const i=await this.getLog(e,t);if(null!=i)return new Set([...i.commits.values()].map((e=>e.ref)))}getLogMoreFn(e,t){return async i=>{const r=null!=i&&"object"==typeof i?i.until:void 0;let s="number"==typeof i?i:void 0;if(r&&(0,ae.G)(e.commits.values(),(e=>e.ref===r)))return e;s=this.getPagingLimit(s);const n=await this.getLog(e.repoPath,{...t,limit:s,cursor:e.endingCursor});if(null==n)return{...e,hasMore:!1,more:void 0};const o=new Map([...e.commits,...n.commits]),a={repoPath:e.repoPath,commits:o,sha:e.sha,range:void 0,count:o.size,limit:null==r?(e.limit??0)+s:void 0,hasMore:null!=r||n.hasMore,startingCursor:(0,ae.Z$)(e.commits)?.[0],endingCursor:n.endingCursor,pagedCommits:()=>{for(const t of e.commits.keys())n.commits.delete(t);return n.commits},query:e.query};return a.hasMore&&(a.more=this.getLogMoreFn(a,t)),a}}async getLogForFile(e,t,i){if(null==e)return;const r=(0,ce.UH)(),s=this.getRelativePath(t,e);if(null!=e&&e===s)throw new Error(`File name cannot match the repository path; path=${s}`);(i={reverse:!1,...i}).renames=!1,i.all=!1;let n="log";null!=i.ref&&(n+=`:${i.ref}`),i.limit=this.getPagingLimit(i?.limit),i.limit&&(n+=`:n${i.limit}`),i.renames&&(n+=":follow"),i.reverse&&(n+=":reverse"),i.since&&(n+=`:since=${i.since}`),i.skip&&(n+=`:skip${i.skip}`),i.cursor&&(n+=`:cursor=${i.cursor}`);const o=await this.container.tracker.getOrAdd(h.YY.fromFile(s,e,i.ref));if(!i.force&&null==i.range){if(null!=o.state){const s=o.state.getLog(n);if(null!=s)return A.Yd.debug(r,`Cache hit: '${n}'`),s.item;if(null!=i.ref||null!=i.limit){const s=o.state.getLog(`log${i.renames?":follow":""}${i.reverse?":reverse":""}`);if(null!=s){if(null==i.ref)return A.Yd.debug(r,`Cache hit: ~'${n}'`),s.item;A.Yd.debug(r,`Cache ?: '${n}'`);let o=await s.item;if(null!=o&&!o.hasMore&&o.commits.has(i.ref)){A.Yd.debug(r,`Cache hit: '${n}'`);let s=!0,a=0;const c=new Map((0,ae.DZ)(o.commits.entries(),(([e,t])=>{if(s){if(e!==i?.ref)return;s=!1}if(a++,!(null!=i?.limit&&a>i.limit))return[e,t]}))),l={...i};return o={...o,limit:i.limit,count:c.size,commits:c,query:i=>this.getLogForFile(e,t,{...l,limit:i})},o}}}}A.Yd.debug(r,`Cache miss: '${n}'`),null==o.state&&(o.state=new GitDocumentState)}const a=this.getLogForFileCore(e,s,o,n,r,i);if(null!=o.state&&null==i.range){A.Yd.debug(r,`Cache add: '${n}'`);const e={item:a};o.state.setLog(n,e)}return a}async getLogForFileCore(e,t,i,r,s,n){if(null==e)return;const o=this.getPagingLimit(n?.limit);try{const i=await this.ensureRepositoryContext(e);if(null==i)return;const{metadata:r,github:s,remotehub:a,session:c}=i,l=this.getAbsoluteUri(t,e),h=this.getRelativePath(l,a.getProviderRootUri(l)),u=n?.ref&&"HEAD"!==n.ref?n.ref:(await r.getRevision()).revision,p=await s.getCommits(c.accessToken,r.repo.owner,r.repo.name,u,{all:n?.all,after:n?.cursor,path:h,limit:o,since:n?.since?new Date(n.since):void 0}),m=new Map,{viewer:f=c.account.label}=p;for(const t of p.values){const i=null!=f&&t.author.name===f?"You":t.author.name,r=null!=f&&t.committer.name===f?"You":t.committer.name;let s=m.get(t.oid);if(null==s){const n=t.files?.map((t=>new g.K8(e,t.filename??"",(0,fe.fromCommitFileStatus)(t.status)??g.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),o=(0,le.Mh)(h)?void 0:n?.find((e=>e.path===h))??new g.K8(e,h,g.NV.Modified,void 0,void 0,1===t.changedFiles?{additions:t.additions??0,deletions:t.deletions??0,changes:0}:void 0);s=new d.aM(this.container,e,t.oid,new d._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new d._j(r,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,{file:o,files:n},{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),m.set(t.oid,s)}}const w={repoPath:e,commits:m,sha:u,range:void 0,count:m.size,limit:o,hasMore:p.paging?.more??!1,endingCursor:p.paging?.cursor,query:i=>this.getLogForFile(e,t,{...n,limit:i})};return w.hasMore&&(w.more=this.getLogForFileMoreFn(w,t,n)),w}catch(e){if(null!=i.state&&null==n?.range&&!n?.reverse){const t=e?.toString()??"";A.Yd.debug(s,`Cache replace (with empty promise): '${r}'`);const n={item:Se,errorMessage:t};return i.state.setLog(r,n),Se}return}}getLogForFileMoreFn(e,t,i){return async r=>{const s=null!=r&&"object"==typeof r?r.until:void 0;let n="number"==typeof r?r:void 0;if(s&&(0,ae.G)(e.commits.values(),(e=>e.ref===s)))return e;n=this.getPagingLimit(n);const o=await this.getLogForFile(e.repoPath,t,{...i,limit:null==s?n:0,cursor:e.endingCursor});if(null==o)return{...e,hasMore:!1,more:void 0};const a=new Map([...e.commits,...o.commits]),c={repoPath:e.repoPath,commits:a,sha:e.sha,range:e.range,count:a.size,limit:null==s?(e.limit??0)+n:void 0,hasMore:null!=s||o.hasMore,endingCursor:o.endingCursor,query:e.query};return c.hasMore&&(c.more=this.getLogForFileMoreFn(c,t,i)),c}}async getMergeBase(e,t,i,r){}async getMergeStatus(e){}async getRebaseStatus(e){}async getNextComparisonUris(e,t,i,r=0){if(!i)return;const s=(0,ce.UH)();try{const s=await this.ensureRepositoryContext(e);if(null==s)return;const{metadata:n,github:o,remotehub:a,session:c}=s,l=this.getRelativePath(t,a.getProviderRootUri(t)),u=(await n.getRevision()).revision;"HEAD"===i&&(i=u);const d=await o.getNextCommitRefs(c.accessToken,n.repo.owner,n.repo.name,u,l,i);return{current:0===r?h.YY.fromFile(l,e,i):new h.YY(await this.getBestRevisionUri(e,l,d[r-1])),next:new h.YY(await this.getBestRevisionUri(e,l,d[r]))}}catch(e){throw A.Yd.error(e,s),e}}async getOldestUnpushedRefForFile(e,t){}async getPreviousComparisonUris(e,t,i,r=0){if(i===p.Ii)return;const s=(0,ce.UH)();i===p.CL&&(i=void 0);try{const s=await this.ensureRepositoryContext(e);if(null==s)return;const{metadata:n,github:o,remotehub:a,session:c}=s,l=this.getRelativePath(t,a.getProviderRootUri(t)),u=null!=i?1:0,d=await o.getCommitRefs(c.accessToken,n.repo.owner,n.repo.name,i&&"HEAD"!==i?i:(await n.getRevision()).revision,{path:l,first:u+r+1});if(null==d)return;const m=0===r?h.YY.fromFile(l,e,i):new h.YY(await this.getBestRevisionUri(e,l,d.values[u+r-1]?.oid??p.Ii));if(null==m||m.sha===p.Ii)return;return{current:m,previous:new h.YY(await this.getBestRevisionUri(e,l,d.values[u+r]?.oid??p.Ii))}}catch(e){throw A.Yd.error(e,s),e}}async getPreviousComparisonUrisForLine(e,t,i,r,s=0){if(r===p.Ii)return;const n=(0,ce.UH)();try{const n=await this.ensureRepositoryContext(e);if(null==n)return;const{remotehub:o}=n;let a,c=this.getRelativePath(t,o.getProviderRootUri(t)),l=h.YY.fromFile(c,e,r),u=i,d=i,p=i;for(let t=0;t<Math.max(0,s)+2;t++){const t=await this.getBlameForLine(a??l,p,void 0,{forceSingleLine:!0});if(null==t)break;r=t.commit.sha,c=t.commit.file?.path??t.commit.file?.originalPath??c,p=t.line.originalLine-1;const i=h.YY.fromFile(c,e,r);null==a?(a=i,d=p):(l=a,u=d,a=i,d=p)}if(null==l)return;return{current:l,previous:a,line:(u??i)+1}}catch(e){throw A.Yd.error(e,n),e}}async getIncomingActivity(e,t){}async getRemotes(e,t){if(null==e)return[];const i=te(C.D.get("remotes",null)),s=r.Uri.parse(e,!0),[,n,o]=s.path.split("/",3),a=`https://github.com/${n}/${o}.git`,c="github.com",l=`${n}/${o}`;return[new w.ss(e,"origin","https",c,l,re(this.container,i)(a,c,l),[{type:"fetch",url:a},{type:"push",url:a}])]}async getRevisionContent(e,t,i){const s=i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t);return r.workspace.fs.readFile(s)}async getStash(e){}async getStatusForFile(e,t){}async getStatusForFiles(e,t){}async getStatusForRepo(e){if(null==e)return;const t=await this.ensureRepositoryContext(e);if(null==t)return;const i=await t.metadata.getRevision();return null!=i?new y.Hk(e,i.name,i.revision,[],{ahead:0,behind:0},i.type===ge.Branch||i.type===ge.RemoteBranch?`origin/${i.name}`:void 0):void 0}async getTags(e,t){if(null==e)return Ae;const i=(0,ce.UH)();let r=t?.cursor?void 0:this._tagsCache.get(e);if(null==r){async function n(){try{const{metadata:i,github:r,session:s}=await this.ensureRepositoryContext(e),n=[];let o=t?.cursor;const a=null==o;let c,l;for(;;){const t=await r.getTags(s.accessToken,i.repo.owner,i.repo.name,{cursor:o});for(const i of t.values)c=i.target.authoredDate??i.target.target?.authoredDate??i.target.tagger?.date,l=i.target.committedDate??i.target.target?.committedDate??i.target.tagger?.date,n.push(new b.gE(e,i.name,i.target.target?.oid??i.target.oid,i.target.message??i.target.target?.message??"",null!=c?new Date(c):void 0,null!=l?new Date(l):void 0));if(!t.paging?.more||!a)return{...t,values:n};o=t.paging.cursor}}catch(t){return A.Yd.error(t,i),this._tagsCache.delete(e),Ae}}r=n.call(this),null==t?.cursor&&this._tagsCache.set(e,r)}let s=await r;return null!=t?.filter&&(s={...s,values:s.values.filter(t.filter)}),null!=t?.sort&&(0,b.Pj)(s.values,"boolean"==typeof t.sort?void 0:t.sort),s}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;if("HEAD"===i){const t=await this.ensureRepositoryContext(e);if(null==t)return;const r=await t.metadata.getRevision();i=r?.revision}const s=i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t),n=await r.workspace.fs.stat(s);return null!=n?{path:this.getRelativePath(s,e),commitSha:i,size:n.size,type:(n.type&r.FileType.Directory)===r.FileType.Directory?"tree":"blob"}:void 0}async getTreeForRevision(e,t){if(null==e)return[];if("HEAD"===t){const i=await this.ensureRepositoryContext(e);if(null==i)return[];const r=await i.metadata.getRevision();t=r?.revision}const i=t?this.createProviderUri(e,t):this.createVirtualUri(e,t),s=await r.workspace.fs.readDirectory(i);if(null==s)return[];const n=[];for(const[e,o]of s){const s=this.getAbsoluteUri(e,i);n.push({path:this.getRelativePath(e,s),commitSha:t,size:0,type:(o&r.FileType.Directory)===r.FileType.Directory?"tree":"blob"})}return[]}async hasBranchOrTag(e,t){const[{values:i},{values:r}]=await Promise.all([this.getBranches(e,{filter:t?.filter?.branches,sort:!1}),this.getTags(e,{filter:t?.filter?.tags,sort:!1})]);return 0!==i.length||0!==r.length}async hasCommitBeenPushed(e,t){return!0}isTrackable(e){return this.supportedSchemes.has(e.scheme)}async isTracked(e){if(!this.isTrackable(e)||null==this.container.git.getRepository(e))return!1;const t=e.with({scheme:n.sN.GitHub});return null!=await r.workspace.fs.stat(t)}async getDiffTool(e){}async openDiffTool(e,t,i){}async openDirectoryCompare(e,t,i,r){}async resolveReference(e,t,i,r){if(!t||t===p.Ii||null==i&&(0,f.D3)(t)||null!=i&&(0,f.l3)(t))return t;let s;if(null!=i)s=this.getRelativePath(i,e);else if(!(0,f.yo)(t)||t.endsWith("^3"))return t;const n=await this.ensureRepositoryContext(e);if(null==n)return t;const{metadata:o,github:a,session:c}=n,l=await a.resolveReference(c.accessToken,o.repo.owner,o.repo.name,t,s);return null!=l?l:s?p.Ii:t}async richSearchCommits(e,t,i){if(null==e)return;const r=(0,ce.UH)(),s=(0,se.pD)(t),n=s.get("commit:");if(n?.size){const t=await this.getCommit(e,(0,ae.Ps)(n));if(null==t)return;return{repoPath:e,commits:new Map([[t.sha,t]]),sha:t.sha,range:void 0,count:1,limit:1,hasMore:!1}}const o=await this.getQueryArgsFromSearchQuery(t,s,e);if(0===o.length)return;const a=this.getPagingLimit(i?.limit);try{const{metadata:r,github:s,session:n}=await this.ensureRepositoryContext(e),c=`repo:${r.repo.owner}/${r.repo.name}+${o.join("+").trim()}`,l=await s.searchCommits(n.accessToken,c,{cursor:i?.cursor,limit:a,sort:"date"===i?.ordering?"committer-date":"author-date"===i?.ordering?"author-date":void 0});if(null==l)return;const h=new Map,u=n.account.label;for(const t of l.values){const i=null!=u&&t.author.name===u?"You":t.author.name,r=null!=u&&t.committer.name===u?"You":t.committer.name;let s=h.get(t.oid);null==s&&(s=new d.aM(this.container,e,t.oid,new d._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new d._j(r,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,t.files?.map((t=>new g.K8(e,t.filename??"",(0,fe.fromCommitFileStatus)(t.status)??g.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),h.set(t.oid,s))}const p={repoPath:e,commits:h,sha:void 0,range:void 0,count:h.size,limit:a,hasMore:l.pageInfo?.hasNextPage??!1,endingCursor:l.pageInfo?.endCursor??void 0,query:t=>this.getLog(e,{...i,limit:t})};if(p.hasMore){let e=function(r){return async s=>{s=this.getPagingLimit(s);const n=await this.richSearchCommits(r.repoPath,t,{...i,limit:s,cursor:r.endingCursor});if(null==n)return{...r,hasMore:!1,more:void 0};const o=new Map([...r.commits,...n.commits]),a={repoPath:r.repoPath,commits:o,sha:r.sha,range:void 0,count:o.size,limit:(r.limit??0)+s,hasMore:n.hasMore,endingCursor:n.endingCursor,query:r.query};return a.hasMore&&(a.more=e.call(this,a)),a}};p.more=e.call(this,p)}return p}catch(e){return void A.Yd.error(e,r)}}async searchCommits(e,t,i){t={matchAll:!1,matchCase:!1,matchRegex:!0,...t};const r=(0,se.FL)(t);try{const s=new Map,n=(0,se.pD)(t),o=n.get("commit:");if(null!=o){const m=await Promise.allSettled([...(0,ae.UI)(o,(t=>this.getCommit(e,t.replace(be,""))))]);let g=0;for(const f of m){const w=(0,he.Sb)(f);null!=w&&s.set(w.sha,{i:g++,date:Number("author-date"===i?.ordering?w.author.date:w.committer.date)})}return{repoPath:e,query:t,comparisonKey:r,results:s}}const a=await this.getQueryArgsFromSearchQuery(t,n,e);if(0===a.length)return{repoPath:e,query:t,comparisonKey:r,results:s};const{metadata:c,github:h,session:u}=await this.ensureRepositoryContext(e),d=`repo:${c.repo.owner}/${c.repo.name}+${a.join("+").trim()}`;async function p(n,o){if(i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:r,results:s};n=this.getPagingLimit(n??C.D.get("advanced.maxSearchItems"));const a=await h.searchCommitShas(u.accessToken,d,{cursor:o,limit:n,sort:"date"===i?.ordering?"committer-date":"author-date"===i?.ordering?"author-date":void 0});if(null==a||i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:r,results:s};for(const e of a.values)s.set(e.sha,{i:s.size,date:Number("author-date"===i?.ordering?e.authorDate:e.committerDate)});return o=a.pageInfo?.endCursor??void 0,{repoPath:e,query:t,comparisonKey:r,results:s,paging:a.pageInfo?.hasNextPage?{limit:n,hasMore:!0}:void 0,more:async e=>p.call(this,e,o)}}return p.call(this,i?.limit)}catch(v){if(v instanceof l.l0)throw v;throw new l.l0(v)}}async validateBranchOrTagName(e,t){return ke.test(e)}async validateReference(e,t){return!0}async stageFile(e,t){}async stageDirectory(e,t){}async unstageFile(e,t){}async unstageDirectory(e,t){}async ensureRepositoryContext(e,t){let i=r.Uri.parse(e,!0);if(!/^github\+?/.test(i.authority))throw new a.kX(e,a.sh.NotAGitHubRepository);if(!t){const t=this.container.git.getRepository(i);if(null==t)throw new a.kX(e,a.sh.NotAGitHubRepository);i=t.uri}let s=this._remotehub;if(null==s)try{s=await this.ensureRemoteHubApi()}catch(t){throw a.R5,new a.kX(e,a.sh.RemoteHubApiNotFound,t)}const n=await(s?.getMetadata(i));if("github"!==n?.provider.id)throw new a.kX(e,a.sh.NotAGitHubRepository);let o,c;try{[o,c]=await Promise.all([this.ensureGitHub(),this.ensureSession()])}catch(t){if(t instanceof a._7)throw new a.kX(e,t.reason===a.Jx.UserDidNotConsent?a.sh.GitHubAuthenticationDenied:a.sh.GitHubAuthenticationNotFound,t);throw new a.kX(e)}if(null==o)throw new a.kX(e);return{github:o,metadata:n,remotehub:s,session:c}}_github;async ensureGitHub(){if(null==this._github){const e=await this.container.github;null!=e&&this._disposables.push(e.onDidReauthenticate((()=>{this.ensureSession(!0)}))),this._github=e}return this._github}_remotehub;_remotehubPromise;async ensureRemoteHubApi(e){if(null==this._remotehubPromise&&(this._remotehubPromise=me(),this._remotehubPromise.then((e=>this._remotehub=e),(()=>this._remotehub=void 0))),!e)return this._remotehubPromise;try{return await this._remotehubPromise}catch{return}}_sessionPromise;async ensureSession(e=!1,t=!1){if(e||null==this._sessionPromise){async function i(){let s=this.container.storage.get(`provider:authentication:skip:${this.descriptor.id}`,!1);try{if(e)return s=!1,this.container.storage.delete(`provider:authentication:skip:${this.descriptor.id}`),await r.authentication.getSession("github",Pe,{forceNewSession:!0});if(!s&&!t)return await r.authentication.getSession("github",Pe,{createIfNone:!0});const i=await r.authentication.getSession("github",Pe,{createIfNone:!1,silent:t});if(null!=i)return i;throw new Error("User did not consent")}catch(n){if(n instanceof Error&&n.message.includes("User did not consent")){if(!t&&(await this.container.storage.store(`provider:authentication:skip:${this.descriptor.id}`,!0),!s))return e||queueMicrotask((async()=>{const e="Re-enable";await r.window.showInformationMessage("GitLens has been disabled. Authentication is required for GitLens to work with remote GitHub repositories.",e)===e&&this.ensureSession(!0)})),e=!1,i.call(this);throw new a._7("github",a.Jx.UserDidNotConsent)}throw A.Yd.error(n),new a._7("github",void 0,n)}}this._sessionPromise=i.call(this)}return this._sessionPromise}createVirtualUri(e,t,i){let s;if("string"==typeof t)t&&(s=(0,f.D3)(t)?{v:1,ref:{id:t,type:2}}:{v:1,ref:{id:t,type:4}});else switch(t?.refType){case"revision":case"stash":s={v:1,ref:{id:t.ref,type:2}};break;case"branch":case"tag":s={v:1,ref:{id:t.name,type:4}}}if("string"==typeof e&&(e=r.Uri.parse(e,!0)),i){let t=e.path;t.endsWith("/")&&(t=t.slice(0,-1)),i=`${t}/${(i=this.getRelativePath(i,e)).startsWith("/")?i.slice(0,-1):i}`}return e.with({scheme:n.sN.Virtual,authority:De("github",s),path:i??e.path})}createProviderUri(e,t,i){const r=this.createVirtualUri(e,t,i);return null==this._remotehub?r.scheme!==n.sN.Virtual?r:r.with({scheme:n.sN.GitHub}):this._remotehub.getProviderUri(r)}getPagingLimit(e){return 0===(e=Math.min(100,e??C.D.get("advanced.maxListItems")??100))&&(e=100),e}async resolveReferenceCore(e,t,i){if(null==i||"HEAD"===i){return(await t.getRevision()).revision}if((0,f.D3)(i))return i;if((0,f.yk)(i))return;const[r,s]=await Promise.allSettled([this.getBranches(e,{filter:e=>e.name===i}),this.getTags(e,{filter:e=>e.name===i})]);return i=(0,he.Sb)(r)?.values[0]?.sha??(0,he.Sb)(s)?.values[0]?.sha}async getQueryArgsFromSearchQuery(e,t,i){const r=[];for(const[s,n]of t.entries())switch(s){case"message:":r.push(...(0,ae.UI)(n,(e=>e.replace(/ /g,"+"))));break;case"author:":{let t;n.has("@me")&&(t=await this.getCurrentUser(i));for(let i of n)if(i&&(i=i.replace(be,e.matchRegex?"\\b":""),i)){if("@me"===i){if(null==t?.username)continue;i=`@${t.username}`}i=i.replace(/ /g,"+"),i.startsWith("@")?r.push(`author:${i.slice(1)}`):i.includes("@")?r.push(`author-email:${i}`):r.push(`author-name:${i}`)}break}}return r}}function De(e,t){return`${e}${null!=t?`+${(0,s.e)(JSON.stringify(t))}`:""}`}ye([(0,G.cM)()],GitHubGitProvider.prototype,"getBestRevisionUri",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getWorkingUri",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"addRemote",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"pruneRemote",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"removeRemote",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"applyChangesToWorkingFile",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"branchContainsCommit",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"checkout",1),ye([(0,G.cM)({singleLine:!0})],GitHubGitProvider.prototype,"resetCache",1),ye([(0,G.cM)({singleLine:!0})],GitHubGitProvider.prototype,"resetCaches",1),ye([(0,G.cM)({args:{1:e=>e.length}})],GitHubGitProvider.prototype,"excludeIgnoredUris",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"fetch",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"pull",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"push",1),ye([(0,oe.H)(),(0,G.fF)()],GitHubGitProvider.prototype,"findRepositoryUri",1),ye([(0,G.cM)({args:{1:e=>e.join(",")}})],GitHubGitProvider.prototype,"getAheadBehindCommitCount",1),ye([(0,oe.H)(((e,t)=>`${e.toString()}|${t?.isDirty}`)),(0,G.cM)({args:{1:e=>e?.isDirty}})],GitHubGitProvider.prototype,"getBlame",1),ye([(0,G.cM)({args:{1:"<contents>"}})],GitHubGitProvider.prototype,"getBlameContents",1),ye([(0,oe.H)(((e,t,i,r)=>`${e.toString()}|${t}|${i?.isDirty}|${r?.forceSingleLine}`)),(0,G.cM)({args:{2:e=>e?.isDirty}})],GitHubGitProvider.prototype,"getBlameForLine",1),ye([(0,G.cM)({args:{2:"<contents>"}})],GitHubGitProvider.prototype,"getBlameForLineContents",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getBlameForRange",1),ye([(0,G.cM)({args:{2:"<contents>"}})],GitHubGitProvider.prototype,"getBlameForRangeContents",1),ye([(0,G.cM)({args:{0:"<blame>"}})],GitHubGitProvider.prototype,"getBlameRange",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getBranch",1),ye([(0,G.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getBranches",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getChangedFilesCount",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getCommit",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getCommitBranches",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getCommitCount",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getCommitForFile",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getCommitsForGraph",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getCommitTags",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getContributors",1),ye([(0,oe.H)(),(0,G.cM)()],GitHubGitProvider.prototype,"getCurrentUser",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getDefaultBranchName",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getDiffForFile",1),ye([(0,G.cM)({args:{1:e=>"<contents>"}})],GitHubGitProvider.prototype,"getDiffForFileContents",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getDiffForLine",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getDiffStatus",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getFileStatusForCommit",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getLog",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getLogRefsOnly",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getLogForFile",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getMergeBase",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getMergeStatus",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getRebaseStatus",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getNextComparisonUris",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getOldestUnpushedRefForFile",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getPreviousComparisonUris",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getPreviousComparisonUrisForLine",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getIncomingActivity",1),ye([(0,G.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getRemotes",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getRevisionContent",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getStash",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getStatusForFile",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getStatusForFiles",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getStatusForRepo",1),ye([(0,G.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getTags",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getTreeEntryForRevision",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getTreeForRevision",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"hasBranchOrTag",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"hasCommitBeenPushed",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"getDiffTool",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"openDiffTool",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"openDirectoryCompare",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"resolveReference",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"richSearchCommits",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"searchCommits",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"validateBranchOrTagName",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"validateReference",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"stageFile",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"stageDirectory",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"unstageFile",1),ye([(0,G.cM)()],GitHubGitProvider.prototype,"unstageDirectory",1),ye([(0,oe.H)()],GitHubGitProvider.prototype,"ensureRepositoryContext",1),ye([(0,oe.H)()],GitHubGitProvider.prototype,"ensureGitHub",1);class RepositoryWebPathMappingProvider{constructor(e){this._container=e}dispose(){}async getLocalRepoPaths(e){return[]}async writeLocalRepoPath(e,t){}}class WorkspacesWebPathMappingProvider{async getCloudWorkspaceRepoPath(e,t){}async getCloudWorkspaceCodeWorkspacePath(e){}async removeCloudWorkspaceCodeWorkspaceFilePath(e){}async writeCloudWorkspaceCodeWorkspaceFilePathToMap(e,t){}async confirmCloudWorkspaceCodeWorkspaceFilePath(e){return!1}async writeCloudWorkspaceRepoDiskPathToMap(e,t,i){}async getLocalWorkspaceData(){return{workspaces:{}}}async writeCodeWorkspaceFile(e,t,i){return!1}async updateCodeWorkspaceFileSettings(e,t){return!1}}var Re=i(9827);class AnthropicProvider{constructor(e){this.container=e}id="anthropic";name="Anthropic";get model(){return C.D.get("ai.experimental.anthropic.model")||"claude-instant-1"}dispose(){}async generateCommitMessage(e,t){const i=await _e(this.container.storage);if(null==i)return;const s=this.model;let n=0,o=$e(s,2600);for(;;){const a=e.substring(0,o);let c=C.D.get("experimental.generateCommitMessagePrompt");c.endsWith(".")||(c+=".");const l={model:s,prompt:`\n\nHuman: You are an advanced AI programming assistant tasked with summarizing code changes into a concise and meaningful commit message. Compose a commit message that:\n- Strictly synthesizes meaningful information from the provided code diff\n- Utilizes any additional user-provided context to comprehend the rationale behind the code changes\n- Is clear and brief, with an informal yet professional tone, and without superfluous descriptions\n- Avoids unnecessary phrases such as "this commit", "this change", and the like\n- Avoids direct mention of specific code identifiers, names, or file names, unless they are crucial for understanding the purpose of the changes\n- Most importantly emphasizes the 'why' of the change, its benefits, or the problem it addresses rather than only the 'what' that changed\n\nFollow the user's instructions carefully, don't repeat yourself, don't include the code in the output, or make anything up!\n\nHuman: Here is the code diff to use to generate the commit message:\n\n${a}\n\n${t?.context?`Human: Here is additional context which should be taken into account when generating the commit message:\n\n${t.context}`:""}\n\nHuman: ${c}\n\nAssistant:`,stream:!1,max_tokens_to_sample:5e3,stop_sequences:["\n\nHuman:"]},h=await this.fetch(i,l);if(!h.ok){let e;try{e=await h.json()}catch{}if(n++<2&&"invalid_request_error"===e?.error?.type&&e?.error?.message?.includes("prompt is too long")){o-=500*n;continue}throw new Error(`Unable to generate commit message: (${this.name}:${h.status}) ${e?.error?.message||h.statusText})`)}e.length>o&&r.window.showWarningMessage(`The diff of the staged changes had to be truncated to ${o} characters to fit within the Anthropic's limits.`);return(await h.json()).completion.trim()}}async explainChanges(e,t){const i=await _e(this.container.storage);if(null==i)return;const s=this.model;let n=0,o=$e(s,3e3);for(;;){const a={model:s,prompt:`\n\nHuman: You are an advanced AI programming assistant tasked with summarizing code changes into an explanation that is both easy to understand and meaningful. Construct an explanation that:\n\t\t\t- Concisely synthesizes meaningful information from the provided code diff\n\t\t\t- Incorporates any additional context provided by the user to understand the rationale behind the code changes\n\t\t\t- Places the emphasis on the 'why' of the change, clarifying its benefits or addressing the problem that necessitated the change, beyond just detailing the 'what' has changed\n\n\t\t\tDo not make any assumptions or invent details that are not supported by the code diff or the user-provided context.\n\nHuman: Here is additional context provided by the author of the changes, which should provide some explanation to why these changes where made. Please strongly consider this information when generating your explanation:\n\n${e}\n\nHuman: Now, kindly explain the following code diff in a way that would be clear to someone reviewing or trying to understand these changes:\n\n${t.substring(0,o)}\n\nHuman: Remember to frame your explanation in a way that is suitable for a reviewer to quickly grasp the essence of the changes, the issues they resolve, and their implications on the codebase.\n\nAssistant:`,stream:!1,max_tokens_to_sample:5e3,stop_sequences:["\n\nHuman:"]},c=await this.fetch(i,a);if(!c.ok){let e;try{e=await c.json()}catch{}if(n++<2&&"invalid_request_error"===e?.error?.type&&e?.error?.message?.includes("prompt is too long")){o-=500*n;continue}throw new Error(`Unable to explain commit: (${this.name}:${c.status}) ${e?.error?.message||c.statusText})`)}t.length>o&&r.window.showWarningMessage(`The diff of the commit changes had to be truncated to ${o} characters to fit within the OpenAI's limits.`);return(await c.json()).completion.trim()}}fetch(e,t){return(0,Re.he)("https://api.anthropic.com/v1/complete",{headers:{Accept:"application/json",Authorization:`Bearer ${e}`,"Content-Type":"application/json","X-API-Key":e,"anthropic-version":"2023-06-01"},method:"POST",body:JSON.stringify(t)})}}async function _e(e){let t=await e.getSecret("gitlens.anthropic.key");if(!t){const i=r.window.createInputBox();i.ignoreFocusOut=!0;const s=[];try{const e={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the Anthropic API Key Page"};t=await new Promise((t=>{s.push(i.onDidHide((()=>t(void 0))),i.onDidChangeValue((e=>{!e||/(?:sk-)?[a-zA-Z0-9-_]{32,}/.test(e)?i.validationMessage=void 0:i.validationMessage="Please enter a valid Anthropic API key"})),i.onDidAccept((()=>{const e=i.value.trim();e&&/(?:sk-)?[a-zA-Z0-9-_]{32,}/.test(e)?t(e):i.validationMessage="Please enter a valid Anthropic API key"})),i.onDidTriggerButton((t=>{t===e&&r.env.openExternal(r.Uri.parse("https://console.anthropic.com/account/keys"))}))),i.password=!0,i.title="Connect to Anthropic",i.placeholder="Please enter your Anthropic API key to use this feature",i.prompt=(0,V.gn)("input-prompt-links")?'Enter your [Anthropic API Key](https://console.anthropic.com/account/keys "Get your Anthropic API key")':"Enter your Anthropic API Key",i.buttons=[e],i.show()}))}finally{i.dispose(),s.forEach((e=>{e.dispose()}))}if(!t)return;e.storeSecret("gitlens.anthropic.key",t)}return t}class OpenAIProvider{constructor(e){this.container=e}id="openai";name="OpenAI";get model(){return C.D.get("ai.experimental.openai.model")||"gpt-3.5-turbo"}dispose(){}get url(){return C.D.get("ai.experimental.openai.url")||"https://api.openai.com/v1/chat/completions"}async generateCommitMessage(e,t){const i=await Te(this.container.storage);if(null==i)return;const s=this.model;let n=0,o=$e(s,2600);for(;;){const a=e.substring(0,o);let c=C.D.get("experimental.generateCommitMessagePrompt");c.endsWith(".")||(c+=".");const l={model:s,messages:[{role:"system",content:"You are an advanced AI programming assistant tasked with summarizing code changes into a concise and meaningful commit message. Compose a commit message that:\n- Strictly synthesizes meaningful information from the provided code diff\n- Utilizes any additional user-provided context to comprehend the rationale behind the code changes\n- Is clear and brief, with an informal yet professional tone, and without superfluous descriptions\n- Avoids unnecessary phrases such as \"this commit\", \"this change\", and the like\n- Avoids direct mention of specific code identifiers, names, or file names, unless they are crucial for understanding the purpose of the changes\n- Most importantly emphasizes the 'why' of the change, its benefits, or the problem it addresses rather than only the 'what' that changed\n\nFollow the user's instructions carefully, don't repeat yourself, don't include the code in the output, or make anything up!"},{role:"user",content:`Here is the code diff to use to generate the commit message:\n\n${a}`},...t?.context?[{role:"user",content:`Here is additional context which should be taken into account when generating the commit message:\n\n${t.context}`}]:[],{role:"user",content:c}]},h=await this.fetch(i,l);if(!h.ok){if(404===h.status)throw new Error(`Unable to generate commit message: Your API key doesn't seem to have access to the selected '${s}' model`);if(429===h.status)throw new Error(`Unable to generate commit message: (${this.name}:${h.status}) Too many requests (rate limit exceeded) or your API key is associated with an expired trial`);let e;try{e=await h.json()}catch{}if(n++<2&&"context_length_exceeded"===e?.error?.code){o-=500*n;continue}throw new Error(`Unable to generate commit message: (${this.name}:${h.status}) ${e?.error?.message||h.statusText}`)}e.length>o&&r.window.showWarningMessage(`The diff of the staged changes had to be truncated to ${o} characters to fit within the OpenAI's limits.`);return(await h.json()).choices[0].message.content.trim()}}async explainChanges(e,t){const i=await Te(this.container.storage);if(null==i)return;const s=this.model;let n=0,o=$e(s,3e3);for(;;){const a={model:s,messages:[{role:"system",content:"You are an advanced AI programming assistant tasked with summarizing code changes into an explanation that is both easy to understand and meaningful. Construct an explanation that:\n- Concisely synthesizes meaningful information from the provided code diff\n- Incorporates any additional context provided by the user to understand the rationale behind the code changes\n- Places the emphasis on the 'why' of the change, clarifying its benefits or addressing the problem that necessitated the change, beyond just detailing the 'what' has changed\n\nDo not make any assumptions or invent details that are not supported by the code diff or the user-provided context."},{role:"user",content:`Here is additional context provided by the author of the changes, which should provide some explanation to why these changes where made. Please strongly consider this information when generating your explanation:\n\n${e}`},{role:"user",content:`Now, kindly explain the following code diff in a way that would be clear to someone reviewing or trying to understand these changes:\n\n${t.substring(0,o)}`},{role:"user",content:"Remember to frame your explanation in a way that is suitable for a reviewer to quickly grasp the essence of the changes, the issues they resolve, and their implications on the codebase."}]},c=await this.fetch(i,a);if(!c.ok){if(404===c.status)throw new Error(`Unable to explain commit: Your API key doesn't seem to have access to the selected '${s}' model`);if(429===c.status)throw new Error(`Unable to explain commit: (${this.name}:${c.status}) Too many requests (rate limit exceeded) or your API key is associated with an expired trial`);let e;try{e=await c.json()}catch{}if(n++<2&&"context_length_exceeded"===e?.error?.code){o-=500*n;continue}throw new Error(`Unable to explain commit: (${this.name}:${c.status}) ${e?.error?.message||c.statusText}`)}t.length>o&&r.window.showWarningMessage(`The diff of the commit changes had to be truncated to ${o} characters to fit within the OpenAI's limits.`);return(await c.json()).choices[0].message.content.trim()}}fetch(e,t){const i=this.url,r=i.includes(".azure.com");return(0,Re.he)(i,{headers:{Accept:"application/json","Content-Type":"application/json",...r?{"api-key":e}:{Authorization:`Bearer ${e}`}},method:"POST",body:JSON.stringify(t)})}}async function Te(e){let t=await e.getSecret("gitlens.openai.key");if(!t){const i=r.window.createInputBox();i.ignoreFocusOut=!0;const s=[];try{const e={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the OpenAI API Key Page"};t=await new Promise((t=>{s.push(i.onDidHide((()=>t(void 0))),i.onDidChangeValue((e=>{!e||/(?:sk-)?[a-zA-Z0-9]{32,}/.test(e)?i.validationMessage=void 0:i.validationMessage="Please enter a valid OpenAI API key"})),i.onDidAccept((()=>{const e=i.value.trim();e&&/(?:sk-)?[a-zA-Z0-9]{32,}/.test(e)?t(e):i.validationMessage="Please enter a valid OpenAI API key"})),i.onDidTriggerButton((t=>{t===e&&r.env.openExternal(r.Uri.parse("https://platform.openai.com/account/api-keys"))}))),i.password=!0,i.title="Connect to OpenAI",i.placeholder="Please enter your OpenAI API key to use this feature",i.prompt=(0,V.gn)("input-prompt-links")?'Enter your [OpenAI API Key](https://platform.openai.com/account/api-keys "Get your OpenAI API key")':"Enter your OpenAI API Key",i.buttons=[e],i.show()}))}finally{i.dispose(),s.forEach((e=>{e.dispose()}))}if(!t)return;e.storeSecret("gitlens.openai.key",t)}return t}class AIProviderService{constructor(e){this.container=e}_provider;get provider(){const e=C.D.get("ai.experimental.provider");return e===this._provider?.id||(this._provider?.dispose(),this._provider="anthropic"===e?new AnthropicProvider(this.container):new OpenAIProvider(this.container)),this._provider}dispose(){this._provider?.dispose()}get providerId(){return this.provider?.id}async generateCommitMessage(e,t){let i;if(Array.isArray(e))i=e.join("\n");else{const r=(0,v.uC)(e)?e:this.container.git.getRepository(e);if(null==r)throw new Error("Unable to find repository");let s=await this.container.git.getDiff(r.uri,p.pw);if(!s?.contents&&(s=await this.container.git.getDiff(r.uri,p.CL),!s?.contents))throw new Error("No changes to generate a commit message from.");if(t?.cancellation?.isCancellationRequested)return;i=s.contents}const s=this.provider;if(await Fe(s,this.container.storage)&&!t?.cancellation?.isCancellationRequested)return null!=t?.progress?r.window.withProgress(t.progress,(async()=>s.generateCommitMessage(i,{context:t?.context}))):s.generateCommitMessage(i,{context:t?.context})}async explainCommit(e,t,i){let s;if("string"==typeof e||e instanceof r.Uri){if("string"!=typeof t||!t)throw new Error("Invalid arguments provided");s=await this.container.git.getCommit(e,t)}else{if("string"==typeof t)throw new Error("Invalid arguments provided");s=(0,d.f_)(e)?e:await this.container.git.getCommit(e.repoPath,e.ref),i=t}if(null==s)throw new Error("Unable to find commit");const n=await this.container.git.getDiff(s.repoPath,s.sha);if(!n?.contents)throw new Error("No changes found to explain.");const o=this.provider;if(await Fe(o,this.container.storage))return s.hasFullDetails()||(await s.ensureFullDetails(),(0,d.yp)(s)),null!=i?.progress?r.window.withProgress(i.progress,(async()=>o.explainChanges(s.message,n.contents))):o.explainChanges(s.message,n.contents)}reset(){const{providerId:e}=this;null!=e&&(this.container.storage.deleteSecret(`gitlens.${e}.key`),this.container.storage.delete(`confirm:ai:tos:${e}`),this.container.storage.deleteWorkspace(`confirm:ai:tos:${e}`))}}async function Fe(e,t){if(t.get(`confirm:ai:tos:${e.id}`,!1)||t.getWorkspace(`confirm:ai:tos:${e.id}`,!1))return!0;const i={title:"Yes"},s={title:"Always for this Workspace"},n={title:"Always"},o=await r.window.showInformationMessage(`This GitLens experimental feature requires sending a diff of the code changes to ${e.name}. This may contain sensitive information.\n\nDo you want to continue?`,{modal:!0},i,s,n,{title:"No",isCloseAffordance:!0});return o===i||(o===s?(t.storeWorkspace(`confirm:ai:tos:${e.id}`,!0),!0):o===n&&(t.store(`confirm:ai:tos:${e.id}`,!0),!0))}function $e(e,t){let i;switch(e){case"gpt-4-1106-preview":i=128e3;break;case"gpt-4-32k":case"gpt-4-32k-0613":i=32768;break;case"gpt-4":case"gpt-4-0613":i=8192;break;case"gpt-3.5-turbo-1106":case"gpt-3.5-turbo-16k":i=16385;break;case"gpt-3.5-turbo":default:i=4096;break;case"claude-2":case"claude-instant-1":i=1e5}const r=3.1*i-t/3.1;return Math.floor(r-.1*r)}var Ie=i(3139),xe=i(623),Oe=i(9338),Ee=i(1062),Be=i(2226),We=i(248),Me=Object.defineProperty,Ne=Object.getOwnPropertyDescriptor,Le=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ne(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Me(t,i,n),n};const Ue=r.window.createTextEditorDecorationType({after:{margin:"0 0 0 3em",textDecoration:"none"},rangeBehavior:r.DecorationRangeBehavior.ClosedOpen}),Ge=2**30;class LineAnnotationController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this),e.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled,this),e.richRemoteProviders.onAfterDidChangeConnectionState((0,pe.Ds)((()=>{this.refresh(r.window.activeTextEditor)}),250)))}_cancellation;_disposable;_editor;_enabled=!1;dispose(){this.clearAnnotations(this._editor),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){C.D.changed(e,"currentLine")&&(C.D.changed(e,"currentLine.enabled")&&(C.D.get("currentLine.enabled")?(this._enabled=!0,this.resume()):(this._enabled=!1,this.setLineTracker(!1))),this.refresh(r.window.activeTextEditor))}_suspended=!1;get suspended(){return!this._enabled||this._suspended}resume(){return this.setLineTracker(!0),!!this._suspended&&(this._suspended=!1,!0)}suspend(){return this.setLineTracker(!1),!this._suspended&&(this._suspended=!0,!0)}onActiveLinesChanged(e){e.pending||void 0===e.selections?this.clear(e.editor):this.refresh(e.editor)}onFileAnnotationsToggled(){this.refresh(r.window.activeTextEditor)}clear(e){this._cancellation?.cancel(),this._editor!==e&&null!=this._editor&&this.clearAnnotations(this._editor),this.clearAnnotations(e)}async toggle(e){this._enabled=!(this._enabled&&!this.suspended),this._enabled?this.resume()&&await this.refresh(e):this.suspend()&&await this.refresh(e)}clearAnnotations(e){void 0!==e&&!0!==e._disposed&&e.setDecorations(Ue,[])}getPullRequestsForLines(e,t){const i=new Map;if(0===t.size)return i;const r=this.container.git.getBestRemoteWithRichProvider(e);for(const[,e]of t){if(e.commit.isUncommitted)continue;let t=i.get(e.commit.ref);null==t&&(t=r.then((t=>e.commit.getAssociatedPullRequest(t))),i.set(e.commit.ref,t))}return i}async refresh(e){if(null==e&&null==this._editor)return;const t=(0,ce.UH)(),i=this.container.lineTracker.selections;if(null==e||null==i||!(0,V.PH)(e))return(0,ce.lH)(t,` ${n.NE.Dot} Skipped because there is no valid editor or no valid selections`),void this.clear(this._editor);this._editor!==e&&(this.clear(this._editor),this._editor=e);const s=C.D.get("currentLine");if(this.suspended)return(0,ce.lH)(t,` ${n.NE.Dot} Skipped because the controller is suspended`),void this.clear(e);const o=await this.container.tracker.getOrAdd(e.document);if(!o.isBlameable&&this.suspended)return null!=t&&(t.exitDetails=` ${n.NE.Dot} Skipped because the ${this.suspended?"controller is suspended":`document(${o.uri.toString(!0)}) is not blameable`}`),void this.clear(e);if(null==e.document||!this.container.lineTracker.includes(i))return void(null!=t&&(t.exitDetails=` ${n.NE.Dot} Skipped because the ${null==e.document?"editor is gone":`selection(s)=${i.map((e=>`[${e.anchor}-${e.active}]`)).join()} are no longer current`}`));null!=t&&(t.exitDetails=` ${n.NE.Dot} selection(s)=${i.map((e=>`[${e.anchor}-${e.active}]`)).join()}`);const a=new Map,c=new Map;for(const e of i){const i=this.container.lineTracker.getState(e.active);null!=i?.commit?(null!=i.commit.message||a.has(i.commit.ref)||a.set(i.commit.ref,i.commit.ensureFullDetails()),c.set(e.active,i)):A.Yd.debug(t,`Line ${e.active} returned no commit`)}const l=o.uri.repoPath;let h;if(e.document.uri.scheme===n.sN.Vsls||e.document.uri.scheme===n.sN.VslsScc){const e=C.D.get("hovers");h={autolinks:e.autolinks.enabled,dateFormat:C.D.get("defaultDateFormat"),format:e.detailsMarkdownFormat,pullRequests:e.pullRequests.enabled}}const u=null!=l&&s.pullRequests.enabled&&Oe.i.has(s.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState");this._cancellation?.cancel(),this._cancellation=new r.CancellationTokenSource;const d=this._cancellation.token,p=Oe.i.has(s.format,"tips")?this.container.git.getBranchesAndTagsTipsFn(l):void 0;async function m(e,t,i,a,l){const u=[];for(const[d,p]of c){const c=p.commit;if(null==c||c.isUncommitted&&""===s.uncommittedChangesFormat)continue;const m=a?.get(c.ref),g=(0,We.sV)(c,c.isUncommitted?s.uncommittedChangesFormat??s.format:s.format,{dateFormat:null===s.dateFormat?C.D.get("defaultDateFormat"):s.dateFormat,getBranchAndTagTips:i,pullRequest:m?.value,pullRequestPendingMessage:`PR ${n.NE.Ellipsis}`},s.scrollable);g.range=t.document.validateRange(new r.Range(d,Ge,d,Ge)),null!=h&&(g.hoverMessage=await(0,Ee.nN)(e,c,o.uri,d,{...h,pullRequest:m?.value,timeout:l})),u.push(g)}t.setDecorations(Ue,u)}const g=u?await(0,Be.T0)(this.getPullRequestsForLines(l,c),!0,d,100,(async i=>{if("timedout"!==i.reason||d.isCancellationRequested||e!==this._editor)return;A.Yd.debug(t,`${n.NE.Dot} pull request queries took too long (over 100 ms)`);const[r,s]=await Promise.allSettled([p,i.value]);if(d.isCancellationRequested||e!==this._editor)return;const o=(0,he.Sb)(s),a=(0,he.Sb)(r);A.Yd.debug(t,`${n.NE.Dot} pull request queries completed; updating...`),m(this.container,e,a,o)})):void 0,[f]=await Promise.allSettled([p,...a.values()]);d.isCancellationRequested||await m(this.container,e,(0,he.Sb)(f),g,100)}setLineTracker(e){e?this.container.lineTracker.subscribed(this)||this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this)):this.container.lineTracker.unsubscribe(this)}}Le([(0,G.cM)()],LineAnnotationController.prototype,"resume",1),Le([(0,G.cM)()],LineAnnotationController.prototype,"suspend",1),Le([(0,G.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineAnnotationController.prototype,"onActiveLinesChanged",1),Le([(0,G.fF)({args:!1,singleLine:!0})],LineAnnotationController.prototype,"clear",1),Le([(0,G.cM)({args:!1})],LineAnnotationController.prototype,"toggle",1),Le([(0,G.fF)({args:!1})],LineAnnotationController.prototype,"refresh",1);var He=i(8294),Ve=i(8388);class CacheProvider{_cache=new Map;constructor(e){}dispose(){this._cache.clear()}delete(e,t){this._cache.delete(`${e}:${t}`)}get(e,t,i,r){const s=this._cache.get(`${e}:${t}`);if(null==s||null!=s.expiresAt&&s.expiresAt>0&&s.expiresAt<Date.now()||null!=s.etag&&s.etag!==i){const{value:s,expiresAt:n}=r();return this.set(e,t,s,i,n)?.value}return s.value}getIssueOrPullRequest(e,t,i,r){const{key:s,etag:n}=je(i);return null==t?this.get("issuesOrPrsById",`id:${e}:${s}`,n,r):this.get("issuesOrPrsByIdAndRepo",`id:${e}:${s}:${JSON.stringify(t)}}`,n,r)}getPullRequestForBranch(e,t,i){const{key:r,etag:s}=je(t);return this.get("prByBranch",`branch:${e}:${r}`,s,this.wrapPullRequestCacheable(i,r,s))}getPullRequestForSha(e,t,i){const{key:r,etag:s}=je(t);return this.get("prsBySha",`sha:${e}:${r}`,s,this.wrapPullRequestCacheable(i,r,s))}getRepositoryDefaultBranch(e,t){const{key:i,etag:r}=je(e);return this.get("defaultBranch",`repo:${i}`,r,t)}getRepositoryMetadata(e,t){const{key:i,etag:r}=je(e);return this.get("repoMetadata",`repo:${i}`,r,t)}set(e,t,i,r,s){let n;return(0,he.tI)(i)?(i.then((i=>{this.set(e,t,i,r,s)}),(()=>{this.delete(e,t)})),n={value:i,etag:r}):n={value:i,etag:r,expiresAt:s??qe(e,i)},this._cache.set(`${e}:${t}`,n),n}wrapPullRequestCacheable(e,t,i){return()=>{const r=e();return(0,he.tI)(r.value)&&r.value.then((e=>{null!=e&&this.set("issuesOrPrsById",`id:${e.id}:${t}`,e,i)})),r}}}function qe(e,t){const i=Date.now(),r=i+36e5;switch(e){case"defaultBranch":case"repoMetadata":return 0;case"issuesOrPrsById":case"issuesOrPrsByIdAndRepo":{if(null==t)return 0;const e=t;if(!e.closed)return r;return i+60*(i-(e.closedDate??e.date).getTime()>12096e5?12:1)*60*1e3}case"prByBranch":case"prsBySha":{if(null==t)return"prByBranch"===e?r:0;const s=t;if("opened"===s.state)return r;return i+60*(i-(s.closedDate??s.mergedDate??s.date).getTime()>12096e5?12:1)*60*1e3}default:return null==t?0:r}}function je(e){return{key:e.remoteKey,etag:e.hasRichIntegration()?`${e.remoteKey}:${e.maybeConnected??!1}`:e.remoteKey}}class GitCodeLensController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_canToggle=!1;_disposable;_provider;_providerDisposable;dispose(){this._providerDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(C.D.changed(e,["codeLens","defaultDateFormat","defaultDateSource","defaultDateStyle"])){null!=e&&A.Yd.log("CodeLens config changed; resetting CodeLens provider");const t=C.D.get("codeLens");t.enabled&&(t.recentChange.enabled||t.authors.enabled)?this.ensureProvider():(this._providerDisposable?.dispose(),this._provider=void 0),this._canToggle=t.recentChange.enabled||t.authors.enabled,(0,ne.v)("gitlens:disabledToggleCodeLens",!this._canToggle)}}onBlameStateChanged(e){null!=this._provider&&e.blameable&&(A.Yd.log("Blame state changed; resetting CodeLens provider"),this._provider.reset("saved"))}onDirtyIdleTriggered(e){if(null==this._provider||!e.document.isBlameable)return;const t=C.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||(A.Yd.log("Dirty idle triggered; resetting CodeLens provider"),this._provider.reset("idle"))}toggleCodeLens(){if(this._canToggle){if(A.Yd.log("toggleCodeLens()"),null!=this._provider)return this._providerDisposable?.dispose(),void(this._provider=void 0);this.ensureProvider()}}async ensureProvider(){if(null!=this._provider)return void this._provider.reset();this._providerDisposable?.dispose();const{GitCodeLensProvider:e}=await Promise.resolve().then(i.bind(i,5183));this._provider=new e(this.container),this._providerDisposable=r.Disposable.from(r.languages.registerCodeLensProvider(e.selector,this._provider),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))}}var Qe=i(2540);const Ye=new Set(["commit:selected","draft:selected","file:selected"]),ze=new Map;class EventBus{_emitter=new r.EventEmitter;dispose(){this._emitter.dispose()}fire(e,t,i){(function(e){return Ye.has(e)})(e)&&ze.set(e,t),this._emitter.fire({name:e,data:t,source:i?.source})}fireAsync(e,t,i){queueMicrotask((()=>this.fire(e,t,i)))}getCachedEventArgs(e){return ze.get(e)}on(e,t,i){return this._emitter.event((function(r){e===r.name&&t.call(i,r)}),i)}}var Ke=i(429);const Je={done:!0,value:void 0};class StringIterator{_value="";_pos=0;reset(e){return this._value=e,this._pos=0,this}next(){return this._pos+=1,this}hasNext(){return this._pos<this._value.length-1}cmp(e){return e.charCodeAt(0)-this._value.charCodeAt(this._pos)}value(){return this._value[this._pos]}}class PathIterator{constructor(e=!0,t=!0){this._splitOnBackslash=e,this._caseSensitive=t}_value;_from;_to;reset(e){return this._value=e.replace(/\\$|\/$/,""),this._from=0,this._to=0,this.next()}hasNext(){return this._to<this._value.length}next(){this._from=this._to;let e=!0;for(;this._to<this._value.length;this._to++){const t=this._value.charCodeAt(this._to);if(t===n.mN.Slash||this._splitOnBackslash&&t===n.mN.Backslash){if(!e)break;this._from++}else e=!1}return this}cmp(e){return this._caseSensitive?(0,E.TT)(e,this._value,0,e.length,this._from,this._to):(0,E.j_)(e,this._value,0,e.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class TernarySearchTreeNode{segment;value;key;left;mid;right;isEmpty(){return!(this.left||this.mid||this.right||this.value)}}class TernarySearchTree{static forPaths(){return new TernarySearchTree(new PathIterator)}static forStrings(){return new TernarySearchTree(new StringIterator)}_iter;_root;constructor(e){this._iter=e}clear(){this._root=void 0}set(e,t){const i=this._iter.reset(e);let r;for(this._root||(this._root=new TernarySearchTreeNode,this._root.segment=i.value()),r=this._root;;){const e=i.cmp(r.segment);if(e>0)r.left||(r.left=new TernarySearchTreeNode,r.left.segment=i.value()),r=r.left;else if(e<0)r.right||(r.right=new TernarySearchTreeNode,r.right.segment=i.value()),r=r.right;else{if(!i.hasNext())break;i.next(),r.mid||(r.mid=new TernarySearchTreeNode,r.mid.segment=i.value()),r=r.mid}}const s=r.value;return r.value=t,r.key=e,s}get(e){return this._getNode(e)?.value}_getNode(e){const t=this._iter.reset(e);let i=this._root;for(;i;){const e=t.cmp(i.segment);if(e>0)i=i.left;else if(e<0)i=i.right;else{if(!t.hasNext())break;t.next(),i=i.mid}}return i}has(e){const t=this._getNode(e);return!(void 0===t?.value&&void 0===t?.mid)}delete(e){this._delete(e,!1)}deleteSuperstr(e){this._delete(e,!0)}_delete(e,t){const i=this._iter.reset(e),r=[];let s=this._root;for(;s;){const e=i.cmp(s.segment);if(e>0)r.push([1,s]),s=s.left;else if(e<0)r.push([-1,s]),s=s.right;else{if(!i.hasNext()){for(t?(s.left=void 0,s.mid=void 0,s.right=void 0):s.value=void 0;r.length>0&&s.isEmpty();){const[e,t]=r.pop();switch(e){case 1:t.left=void 0;break;case 0:t.mid=void 0;break;case-1:t.right=void 0}s=t}break}i.next(),r.push([0,s]),s=s.mid}}}findSubstr(e){const t=this._iter.reset(e);let i,r=this._root;for(;r;){const e=t.cmp(r.segment);if(e>0)r=r.left;else if(e<0)r=r.right;else{if(!t.hasNext())break;t.next(),i=r.value||i,r=r.mid}}return r?.value||i}findSuperstr(e,t=!1){const i=this._iter.reset(e);let r=this._root;for(;r;){const e=i.cmp(r.segment);if(e>0)r=r.left;else if(e<0)r=r.right;else{if(!i.hasNext()){if(!r.mid)return;return r=r.mid,{[Symbol.iterator]:()=>this._nodeIterator(r,t)}}i.next(),r=r.mid}}}_nodeIterator(e,t=!1){let i,r,s;return{next:()=>(s||(s=[],r=0,this._forEach(e,(e=>s.push(e)),t)),r>=s.length?Je:(i?i.value=s[r++]:i={done:!1,value:s[r++]},i))}}forEach(e){this._forEach(this._root,e)}_forEach(e,t,i=!1){void 0!==e&&(this._forEach(e.left,t,i),e.value&&t(e.value,e.key),i||this._forEach(e.mid,t,i),this._forEach(e.right,t,i))}any(){return void 0!==this._root&&!this._root.isEmpty()}count(e){return void 0===this._root||this._root.isEmpty()?0:(0,ae.QX)(this.entries(),void 0===e?void 0:([,t])=>e(t))}entries(){return this._iterator(this._root)}values(){return(0,ae.UI)(this.entries(),(([,e])=>e))}highlander(){if(void 0===this._root||this._root.isEmpty())return;const e=this.entries();let t,i,r=0;for(;t=e.next(),!t.done;)if(i=t.value,r++,r>1)return;return i}some(e){return void 0!==this._root&&!this._root.isEmpty()&&(0,ae.G)(this.entries(),(([,t])=>e(t)))}*[Symbol.iterator](){yield*this._iterator(this._root)}*_iterator(e){e&&(yield*this._iterator(e.left),e.value&&(yield[e.key,e.value]),yield*this._iterator(e.mid),yield*this._iterator(e.right))}}var Xe=Object.defineProperty,Ze=Object.getOwnPropertyDescriptor,et=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ze(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Xe(t,i,n),n};const tt=new Uint8Array(0);function it(e){const t=(0,h.uy)(e)?e:h.YY.fromRevisionUri(e);return{path:t.relativePath,ref:t.sha,repoPath:t.repoPath}}class GitFileSystemProvider{constructor(e){this.container=e,this._disposable=r.Disposable.from(r.workspace.registerFileSystemProvider(n.sN.GitLens,this,{isCaseSensitive:Ke.IJ,isReadonly:!0}))}_disposable;_searchTreeMap=new Map;dispose(){this._disposable.dispose()}_onDidChangeFile=new r.EventEmitter;get onDidChangeFile(){return this._onDidChangeFile.event}copy(e,t,i){throw r.FileSystemError.NoPermissions(e)}createDirectory(e){throw r.FileSystemError.NoPermissions(e)}delete(e,t){throw r.FileSystemError.NoPermissions(e)}async readDirectory(e){const{path:t,ref:i,repoPath:s}=it(e),n=await this.getTree(t,i,s);if(void 0===n)throw r.FileSystemError.FileNotFound(e);return[...(0,ae.UI)(n,(e=>[null!=t&&0!==t.length?(0,le.AH)((0,le.Gf)(t,e.path)):e.path,rt(e.type)]))]}async readFile(e){const{path:t,ref:i,repoPath:r}=it(e);if(i===p.Ii)return tt;const s=await this.container.git.getRevisionContent(r,t,i);return null!=s?s:tt}rename(e,t,i){throw r.FileSystemError.NoPermissions(e)}async stat(e){const{path:t,ref:i,repoPath:s}=it(e);if(i===p.Ii)return{type:r.FileType.File,size:0,ctime:0,mtime:0};let n;const o=this._searchTreeMap.get(i);if(null!=o)n=(await o).get(`/~/${t}`);else{if(null==t||0===t.length){if(null==await this.getTree(t,i,s))throw r.FileSystemError.FileNotFound(e);return{type:r.FileType.Directory,size:0,ctime:0,mtime:0}}n=await this.container.git.getTreeEntryForRevision(s,t,i)}if(null==n)throw r.FileSystemError.FileNotFound(e);return{type:rt(n.type),size:n.size,ctime:0,mtime:0}}watch(){return{dispose:()=>{}}}writeFile(e){throw r.FileSystemError.NoPermissions(e)}async createSearchTree(e,t){const i=TernarySearchTree.forPaths(),r=await this.container.git.getTreeForRevision(t,e);i.set("~",{commitSha:"",path:"~",size:0,type:"tree"});for(const e of r)i.set(`~/${e.path}`,e);return i}getOrCreateSearchTree(e,t){let i=this._searchTreeMap.get(e);return void 0===i&&(i=this.createSearchTree(e,t),this._searchTreeMap.set(e,i)),i}async getTree(e,t,i){return(await this.getOrCreateSearchTree(t,i)).findSuperstr(`/~/${e}`,!0)}}function rt(e){switch(e){case"blob":return r.FileType.File;case"tree":return r.FileType.Directory;default:return r.FileType.Unknown}}et([(0,G.fF)()],GitFileSystemProvider.prototype,"readDirectory",1),et([(0,G.fF)()],GitFileSystemProvider.prototype,"readFile",1),et([(0,G.fF)()],GitFileSystemProvider.prototype,"stat",1);var st=i(6516),nt=i(2133),ot=i(2800),at=i(9529),ct=i(1526),lt=i(4794),ht=Object.defineProperty,ut=Object.getOwnPropertyDescriptor,dt=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ut(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ht(t,i,n),n};const pt=Object.freeze([]),mt=Object.freeze({dispose:()=>{}}),gt=new Map([["master",100],["main",15],["default",10],["develop",5],["development",1]]);class GitProviderService{constructor(e){this.container=e,this._initializing=(0,he.PQ)(),this._disposable=r.Disposable.from(e.subscription.onDidChange(this.onSubscriptionChanged,this),r.window.onDidChangeWindowState(this.onWindowStateChanged,this),r.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this),C.D.onDidChange(this.onConfigurationChanged,this),e.richRemoteProviders.onAfterDidChangeConnectionState((e=>{"connected"===e.reason&&(0,Ve.E3)("failed"),this.resetCaches("providers"),this.updateContext()})),r.workspace.isTrusted?mt:r.workspace.onDidGrantWorkspaceTrust((()=>{r.workspace.isTrusted&&r.workspace.workspaceFolders?.length&&this.discoverRepositories(r.workspace.workspaceFolders,{force:!0})})),...this.registerCommands()),this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.CommitShaFormatting.reset(),this.container.PullRequestDateFormatting.reset(),this.updateContext()}_onDidChangeProviders=new r.EventEmitter;get onDidChangeProviders(){return this._onDidChangeProviders.event}fireProvidersChanged(e,t){this.container.telemetry.enabled&&(this.container.telemetry.setGlobalAttributes({"providers.count":this._providers.size,"providers.ids":(0,ae.v_)(this._providers.keys(),",")}),this.container.telemetry.sendEvent("providers/changed",{"providers.added":e?.length??0,"providers.removed":t?.length??0})),this._etag=Date.now(),this._onDidChangeProviders.fire({added:e??[],removed:t??[],etag:this._etag})}_onDidChangeRepositories=new r.EventEmitter;get onDidChangeRepositories(){return this._onDidChangeRepositories.event}fireRepositoriesChanged(e,t){if(this.container.telemetry.enabled){const i=this.openRepositories.map((e=>e.uri.scheme));this.container.telemetry.setGlobalAttributes({"repositories.count":i.length,"repositories.schemes":(0,ot.h8)(i,",")}),this.container.telemetry.sendEvent("repositories/changed",{"repositories.added":e?.length??0,"repositories.removed":t?.length??0})}this._etag=Date.now(),this._accessCache.clear(),this._reposVisibilityCache=void 0,this._onDidChangeRepositories.fire({added:e??[],removed:t??[],etag:this._etag}),e?.length&&this.container.telemetry.enabled&&setTimeout((async()=>{for(const t of e){const e=new Set,i=await t.getRemotes();for(const t of i)e.add(t.provider?.id??"unknown");this.container.telemetry.sendEvent("repository/opened",{"repository.id":t.idHash,"repository.scheme":t.uri.scheme,"repository.closed":t.closed,"repository.folder.scheme":t.folder?.uri.scheme,"repository.provider.id":t.provider.id,"repository.remoteProviders":(0,ae.v_)(e,",")})}}),0)}_onDidChangeRepository=new r.EventEmitter;get onDidChangeRepository(){return this._onDidChangeRepository.event}supportedSchemes=new Set;_bestRemotesCache=new Map;_disposable;_initializing;_pendingRepositories=new Map;_providers=new Map;_repositories=new nt.x8;_visitedPaths=new ct.u$;dispose(){this._disposable.dispose(),this._providers.clear(),this._repositories.forEach((e=>e.dispose())),this._repositories.clear()}_etag=0;get etag(){return this._etag}onConfigurationChanged(e){(C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle"))&&(this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.PullRequestDateFormatting.reset()),C.D.changed(e,"advanced.abbreviatedShaLength")&&this.container.CommitShaFormatting.reset(),C.D.changed(e,"views.contributors.showAllBranches")&&this.resetCaches("contributors"),null!=e&&C.D.changed(e,"integrations.enabled")&&this.updateContext()}registerCommands(){return[(0,at.xR)("gitlens.plus.resetRepositoryAccess",(()=>this.clearAllRepoVisibilityCaches())),(0,at.xR)("gitlens.plus.refreshRepositoryAccess",(()=>this.clearAllOpenRepoVisibilityCaches()))]}onSubscriptionChanged(e){this._accessCache.clear(),this._subscription=e.current}onWindowStateChanged(e){e.focused?this._repositories.forEach((e=>e.resume())):this._repositories.forEach((e=>e.suspend()))}onWorkspaceFoldersChanged(e){if(this.container.telemetry.enabled){const e=r.workspace.workspaceFolders?.map((e=>e.uri.scheme));this.container.telemetry.setGlobalAttributes({"folders.count":e?.length??0,"folders.schemes":null!=e?(0,ot.h8)(e,", "):""})}if(e.added.length&&this.discoverRepositories(e.added),e.removed.length){const t=[];for(const i of e.removed){const e=this._repositories.getClosest(i.uri);null!=e&&(this._repositories.remove(e.uri,!1),t.push(e))}t.length&&(this.updateContext(),queueMicrotask((()=>{this.fireRepositoriesChanged([],t),t.forEach((e=>e.dispose()))})))}}get hasProviders(){return 0!==this._providers.size}get registeredProviders(){return[...(0,ae.UI)(this._providers.values(),(e=>({...e.descriptor})))]}get openRepositories(){if(0===this.repositoryCount)return pt;const e=[...(0,ae.hX)(this.repositories,(e=>!e.closed))];return 0===e.length?e:v._j.sort(e)}get openRepositoryCount(){return 0===this.repositoryCount?0:(0,ae.QX)(this.repositories,(e=>!e.closed))}get repositories(){return this._repositories.values()}get repositoryCount(){return this._repositories.count}get highlander(){return 1===this.repositoryCount?(0,ae.Ps)(this._repositories.values()):void 0}register(e,t){if(e!==t.descriptor.id)throw new Error(`Id '${e}' must match provider id '${t.descriptor.id}'`);if(this._providers.has(e))throw new Error(`Provider '${e}' has already been registered`);this._providers.set(e,t);for(const e of t.supportedSchemes)this.supportedSchemes.add(e);const i=[],s=t.openRepositoryInitWatcher?.();null!=s&&i.push(s,s.onDidCreate((e=>{const t=r.workspace.getWorkspaceFolder(e);null!=t&&this.discoverRepositories([t],{force:!0})})));const n=r.Disposable.from(t,...i,t.onDidChange((()=>{A.Yd.debug(`GitProvider(${e}).onDidChange()`);const{workspaceFolders:t}=r.workspace;t?.length&&this.discoverRepositories(t,{force:!0})})),t.onDidChangeRepository((async i=>{if(A.Yd.debug(`GitProvider(${e}).onDidChangeRepository(e=${i.repository.toString()})`),i.changed(v.I6.Remotes,v.I6.RemoteProviders,v.du.Any)&&this._bestRemotesCache.clear(),i.changed(v.I6.Closed,v.du.Any)?(this.updateContext(),queueMicrotask((()=>this.fireRepositoriesChanged([],[i.repository])))):i.changed(v.I6.Opened,v.du.Any)&&(this.updateContext(),queueMicrotask((()=>this.fireRepositoriesChanged([i.repository],[])))),i.changed(v.I6.Remotes,v.du.Any)){const e=await t.getRemotes(i.repository.path),r=this.getVisibilityInfoFromCache(i.repository.path);null!=r&&this.checkVisibilityCachedRemotes(i.repository.path,r,e)}this._onDidChangeRepository.fire(i)})),t.onDidCloseRepository((t=>{const i=this._repositories.get(t.uri);A.Yd.debug(`GitProvider(${e}).onDidCloseRepository(e=${i?.toString()??t.uri.toString()})`),null!=i&&(i.closed=!0)})),t.onDidOpenRepository((t=>{const i=this._repositories.get(t.uri);A.Yd.debug(`GitProvider(${e}).onDidOpenRepository(e=${i?.toString()??t.uri.toString()})`),null!=i?i.closed=!1:this.getOrOpenRepository(t.uri)})));return this.fireProvidersChanged([t]),null!=this._initializing&&this.onWorkspaceFoldersChanged({added:r.workspace.workspaceFolders??[],removed:[]}),{dispose:()=>{n.dispose(),this._providers.delete(e);const i=[];for(const t of[...this._repositories.values()])t?.provider.id===e&&(this._repositories.remove(t.uri,!1),i.push(t));const{deactivating:r}=this.container;r||this.updateContext(),i.length&&queueMicrotask((()=>{r||this.fireRepositoriesChanged([],i),i.forEach((e=>e.dispose()))})),r||this.fireProvidersChanged([],[t])}}}async registrationComplete(){const e=(0,ce.UH)();let{workspaceFolders:t}=r.workspace;t?.length?(await this.discoverRepositories(t),0===this.repositoryCount&&Ke.$L&&setTimeout((()=>{({workspaceFolders:t}=r.workspace),t?.length&&this.discoverRepositories(t,{force:!0})}),1e3)):(this._initializing?.fulfill(this._etag),this._initializing=void 0,this.updateContext());const i=C.D.getAny("git.autoRepositoryDetection");this.container.telemetry.enabled&&setTimeout((()=>this.container.telemetry.sendEvent("providers/registrationComplete",{"config.git.autoRepositoryDetection":i})),0),(0,ce.lH)(e,` ${n.NE.Dot} workspaceFolders=${t?.length}, git.autoRepositoryDetection=${i}`)}getOpenProviders(){return[...this.getOpenRepositoriesByProvider().keys()].map((e=>this._providers.get(e)))}getOpenRepositories(e){return(0,ae.hX)(this.repositories,(t=>!t.closed&&(null==e||e===t.provider.id)))}getOpenRepositoriesByProvider(){const e=[...(0,ae.hX)(this.repositories,(e=>!e.closed))];return 0===e.length?new Map:(0,ot.XI)(e,(e=>e.provider.id))}hasOpenRepositories(e){return(0,ae.G)(this.repositories,(t=>!t.closed&&(null==e||e===t.provider.id)))}_discoveredWorkspaceFolders=new Map;_discoveringRepositories;get isDiscoveringRepositories(){return(0,he.xy)(this._discoveringRepositories)??(0,he.xy)(this._initializing)}async discoverRepositories(e,t){this._discoveringRepositories?.pending&&(await this._discoveringRepositories.promise,this._discoveringRepositories=void 0);const i=this._initializing??(0,he.PQ)();this._discoveringRepositories=i,this._initializing=void 0;try{const i=[];for(const r of e){if(!t?.force&&this._discoveredWorkspaceFolders.has(r))continue;const e=this.discoverRepositoriesCore(r);i.push(e),this._discoveredWorkspaceFolders.set(r,e)}if(0===i.length)return;const r=await Promise.allSettled(i),s=(0,ae.VS)((0,ae.hX)(r,(e=>"fulfilled"===e.status)),(e=>e.value)),n=[];for(const e of s)this._repositories.add(e),e.closed||n.push(e);this.updateContext(),n.length&&queueMicrotask((()=>this.fireRepositoriesChanged(n)))}finally{queueMicrotask((()=>{i.fulfill(this._etag)}))}}async discoverRepositoriesCore(e){const{provider:t}=this.getProvider(e.uri);try{return await t.discoverRepositories(e.uri)}catch(i){return this._discoveredWorkspaceFolders.delete(e),A.Yd.error(i,`${t.descriptor.name} Provider(${t.descriptor.id}) failed discovering repositories in ${e.uri.toString(!0)}`),[]}}async findRepositories(e,t){const{provider:i}=this.getProvider(e);return i.discoverRepositories(e,t)}async findMatchingRepository(e){if(null==e.firstSha&&null==e.remoteUrl)return;let t,i="",s="";null!=e.remoteUrl&&([,i,s]=(0,lt.Sk)(e.remoteUrl));for(const r of this.container.git.repositories){if(null!=i&&null!=s){if((await r.getRemotes({filter:e=>e.matches(i,s)})).length>0){t=r;break}}if(null!=e.firstSha&&"-"!==e.firstSha&&await this.validateReference(r.path,e.firstSha)){t=r;break}}if(null==t&&null!=e.remoteUrl){const i=await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:e.remoteUrl});i.length>0&&(t=await this.getOrOpenRepository(r.Uri.file(i[0])))}return t}_subscription;async getSubscription(){return this._subscription??(this._subscription=await this.container.subscription.getSubscription())}_accessCache=new Map;async access(e,t){if(null==t){let i=this._accessCache.get(void 0);return null==i&&(i=this.accessCore(e,t),this._accessCache.set(void 0,i)),i}const{path:i}=this.getProvider(t),r=i;let s=this._accessCache.get(r);return null==s&&(s=this.accessCore(e,t),this._accessCache.set(r,s)),s}async accessCore(e,t){const i=await this.getSubscription();this.container.telemetry.enabled&&queueMicrotask((()=>{this.visibility()}));const r=i.plan.effective.id;if((0,st.aG)(r))return{allowed:!1!==i.account?.verified,subscription:{current:i}};function s(e,t=!1){const{path:r}=this.getProvider(e);let s=t?void 0:this._accessCache.get(r);return null==s&&(s=this.visibility(e).then((e=>"private"===e?{allowed:!1,subscription:{current:i,required:st.Cx.Pro},visibility:e}:{allowed:!0,subscription:{current:i},visibility:e}),(()=>({allowed:!0,subscription:{current:i}}))),this._accessCache.set(r,s)),s}if(null==t){const e=this.openRepositories;if(0===e.length)return{allowed:!1,subscription:{current:i}};if(1===e.length)return s.call(this,e[0].path);switch(await this.visibility()){case"private":return{allowed:!1,subscription:{current:i,required:st.Cx.Pro},visibility:"private"};case"mixed":return{allowed:"mixed",subscription:{current:i,required:st.Cx.Pro}};default:return{allowed:!0,subscription:{current:i},visibility:"public"}}}return s.call(this,t,!0)}async ensureAccess(e,t){const{allowed:i,subscription:r}=await this.access(e,t);if(!1===i)throw new a.$y(r.current,r.required)}supports(e,t){const{provider:i}=this.getProvider(e);return i.supports(t)}_reposVisibilityCache;_repoVisibilityCache;ensureRepoVisibilityCache(){if(null==this._repoVisibilityCache){const e=this.container.storage.get("repoVisibility")?.map((([e,t])=>[e,{visibility:t.visibility,timestamp:t.timestamp,remotesHash:t.remotesHash}]));this._repoVisibilityCache=new Map(e)}}clearRepoVisibilityCache(e){if(null==e)this._repoVisibilityCache=void 0,this.container.storage.delete("repoVisibility");else{e?.forEach((e=>this._repoVisibilityCache?.delete(e)));const t=Array.from(this._repoVisibilityCache?.entries()??[]);0===t.length?this.container.storage.delete("repoVisibility"):this.container.storage.store("repoVisibility",t)}}getVisibilityInfoFromCache(e){this.ensureRepoVisibilityCache();const t=this._repoVisibilityCache?.get(e);if(null==t)return;if(!(Date.now()-t.timestamp>2592e6))return t;this.clearRepoVisibilityCache([e])}checkVisibilityCachedRemotes(e,t,i){if(null==t)return!0;if("public"===t.visibility){if(0==i.length||!i.some((e=>e.remoteKey===t.remotesHash)))return this.clearRepoVisibilityCache([e]),!1}else if("private"===t.visibility){if((0,w.Ym)(i)!==t.remotesHash)return this.clearRepoVisibilityCache([e]),!1}return!0}updateVisibilityCache(e,t){this.ensureRepoVisibilityCache(),this._repoVisibilityCache?.set(e,t),this.container.storage.store("repoVisibility",Array.from(this._repoVisibilityCache.entries()))}clearAllRepoVisibilityCaches(){this.clearRepoVisibilityCache()}clearAllOpenRepoVisibilityCaches(){const e=this.openRepositories.map((e=>this.getProvider(e.path).path));this.clearRepoVisibilityCache(e)}async visibility(e){if(null==e){let e=this._reposVisibilityCache;return null==e&&(e=await this.visibilityCore(),this.container.telemetry.enabled&&(this.container.telemetry.setGlobalAttribute("repositories.visibility",e),this.container.telemetry.sendEvent("repositories/visibility")),this._reposVisibilityCache=e),e}const{path:t}=this.getProvider(e);let i=this.getVisibilityInfoFromCache(t)?.visibility;return null==i&&(i=await this.visibilityCore(e),this.container.telemetry.enabled&&setTimeout((()=>{const t=this.getRepository(e);this.container.telemetry.sendEvent("repository/visibility",{"repository.visibility":i,"repository.id":t?.idHash,"repository.scheme":t?.uri.scheme,"repository.closed":t?.closed,"repository.folder.scheme":t?.folder?.uri.scheme,"repository.provider.id":t?.provider.id})}),0)),i}async visibilityCore(e){async function t(e){const{provider:t,path:i}=this.getProvider(e),r=await t.getRemotes(i,{sort:!0}),s=this.getVisibilityInfoFromCache(i);if(null==s||!this.checkVisibilityCachedRemotes(i,s,r)){const[e,r]=await t.visibility(i);return"local"!==e&&this.updateVisibilityCache(i,{visibility:e,timestamp:Date.now(),remotesHash:r}),e}return s.visibility}if(null==e){const e=this.openRepositories;if(0===e.length)return"private";if(1===e.length)return t.call(this,e[0].path);let i=!1,r=!1,s=!1;for await(const n of(0,he.rX)(e.map((e=>t.call(this,e.path)))))if("fulfilled"===n.status)if("public"===n.value){if(s||r)return"mixed";i=!0}else if("local"===n.value){if(i||r)return"mixed";s=!0}else if("private"===n.value){if(i||s)return"mixed";r=!0}return i?"public":s?"local":"private"}return t.call(this,e)}_context={enabled:!1,disabled:!1};async setEnabledContext(e){let t=!e;if(e||null==this._initializing||(t=!this.container.storage.getWorkspace("assumeRepositoriesOnStartup")),this.container.telemetry.setGlobalAttribute("enabled",e),this._context.enabled===e&&this._context.disabled===t)return;const i=[];this._context.enabled!==e&&(this._context.enabled=e,i.push((0,ne.v)("gitlens:enabled",e))),this._context.disabled!==t&&(this._context.disabled=t,i.push((0,ne.v)("gitlens:disabled",t))),await Promise.allSettled(i),null==this._initializing&&this.container.storage.storeWorkspace("assumeRepositoriesOnStartup",e).catch()}_sendProviderContextTelemetryDebounced;updateContext(){if(this.container.deactivating)return;const e=this.openRepositoryCount,t=0!==e;this.setEnabledContext(t),null==this._initializing&&(this.container.telemetry.setGlobalAttributes({enabled:t,"repositories.count":e}),t&&(async function(){const e=C.D.get("integrations.enabled"),i=this.container.telemetry.enabled,r=new Set;let s=!1,n=!1,o=!1;if(t)for(const t of this._repositories.values()){if(i){const e=await t.getRemotes();for(const t of e)r.add(t.provider?.id??"unknown")}if(!o&&e&&(o=await t.hasRichRemote(!0),o&&(n=!0,s=!0)),!n&&e&&(n=await t.hasRichRemote(),n&&(s=!0)),s||(s=await t.hasRemotes()),s&&(n&&o||!e))break}i&&(this.container.telemetry.setGlobalAttributes({"repositories.hasRemotes":s,"repositories.hasRichRemotes":n,"repositories.hasConnectedRemotes":o,"repositories.remoteProviders":(0,ae.v_)(r,",")}),null==this._sendProviderContextTelemetryDebounced&&(this._sendProviderContextTelemetryDebounced=(0,pe.Ds)((()=>this.container.telemetry.sendEvent("providers/context")),2500)),this._sendProviderContextTelemetryDebounced()),await Promise.allSettled([(0,ne.v)("gitlens:hasRemotes",s),(0,ne.v)("gitlens:hasRichRemotes",n),(0,ne.v)("gitlens:hasConnectedRemotes",o)])}.call(this),this._providers.forEach((e=>e.updateContext?.()))))}getProvider(e){if(null==e||"string"!=typeof e&&!this.supportedSchemes.has(e.scheme))throw new a.MO(e);let t;"string"==typeof e?t=(0,le.UG)(e)??n.sN.File:({scheme:t}=e);const i=new Set;for(const r of this._providers.values()){const s=r.canHandlePathOrUri(t,e);null!=s&&i.add({provider:r,path:s})}if(0===i.size)throw new a.MO(e);if(i.size>1)for(const e of i)if(this.hasOpenRepositories(e.provider.descriptor.id))return e;return(0,ae.Ps)(i)}getAbsoluteUri(e,t){if(null==t)return"string"==typeof e?(0,le.tE)(e)?r.Uri.parse(e,!0):r.Uri.file(e):e;if("string"!=typeof t&&"string"==typeof e){const i=(0,le.AH)(e);if(!(0,le.YP)(i))return r.Uri.joinPath(t,i)}const{provider:i}=this.getProvider(t);return i.getAbsoluteUri(e,t)}async getBestRevisionUri(e,t,i){if(null==e||i===p.Ii)return;const{provider:r,path:s}=this.getProvider(e);return r.getBestRevisionUri(s,r.getRelativePath(t,s),i)}getRelativePath(e,t){const{provider:i}=this.getProvider(e instanceof r.Uri?e:t);return i.getRelativePath(e,t)}getRevisionUri(e,t,i){let r,s;"string"==typeof e?(s=e,r="string"==typeof t?t:t?.originalPath??t?.path??""):(s=e.sha,i=e.repoPath,r=(0,le.M)(e));const{provider:n,path:o}=this.getProvider(i);return n.getRevisionUri(o,n.getRelativePath(r,o),s)}getWorkingUri(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getWorkingUri(r,t)}addRemote(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.addRemote(n,t,i,r)}pruneRemote(e,t){const{provider:i,path:r}=this.getProvider(e);return i.pruneRemote(r,t)}removeRemote(e,t){const{provider:i,path:r}=this.getProvider(e);return i.removeRemote(r,t)}applyChangesToWorkingFile(e,t,i){const{provider:r}=this.getProvider(e);return r.applyChangesToWorkingFile(e,t,i)}checkout(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.checkout(s,t,i)}async clone(e,t){const{provider:i}=this.getProvider(t);return i.clone?.(e,t)}async applyPatchCommit(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.applyPatchCommit?.(s,t,i)}async createUnreachableCommitForPatch(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.createUnreachableCommitForPatch?.(n,t,i,r)}resetCaches(...e){(0===e.length||e.includes("providers"))&&this._bestRemotesCache.clear(),this.container.events.fire("git:cache:reset",{caches:e})}excludeIgnoredUris(e,t){const{provider:i,path:r}=this.getProvider(e);return i.excludeIgnoredUris(r,t)}fetch(e,t){const{provider:i,path:r}=this.getProvider(e);return i.fetch(r,t)}async fetchAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Fetching ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.fetch({progress:!1,...t})))))):await e[0].fetch(t))}pull(e,t){const{provider:i,path:r}=this.getProvider(e);return i.pull(r,t)}async pullAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Pulling ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.pull({progress:!1,...t})))))):await e[0].pull(t))}push(e,t){const{provider:i,path:r}=this.getProvider(e);return i.push(r,t)}async pushAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Pushing ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.push({progress:!1,...t})))))):await e[0].push(t))}getAheadBehindCommitCount(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.getAheadBehindCommitCount(s,t,i)}async getBlame(e,t){const{provider:i}=this.getProvider(e);return i.getBlame(e,t)}async getBlameContents(e,t){const{provider:i}=this.getProvider(e);return i.getBlameContents(e,t)}async getBlameForLine(e,t,i,r){const{provider:s}=this.getProvider(e);return s.getBlameForLine(e,t,i,r)}async getBlameForLineContents(e,t,i,r){const{provider:s}=this.getProvider(e);return s.getBlameForLineContents(e,t,i,r)}async getBlameForRange(e,t){const{provider:i}=this.getProvider(e);return i.getBlameForRange(e,t)}async getBlameForRangeContents(e,t,i){const{provider:r}=this.getProvider(e);return r.getBlameForRangeContents(e,t,i)}getBlameRange(e,t,i){const{provider:r}=this.getProvider(t);return r.getBlameRange(e,t,i)}async getBranch(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getBranch(i)}async getBranchAheadRange(e){if(e.state.ahead>0)return(0,f.oI)(e.upstream?.name,e.ref);if(null==e.upstream){const{values:t}=await this.getBranches(e.repoPath,{filter:e=>gt.has(e.name)});if(t.length>0){let i;for(const e of t){const t=gt.get(e.name);if((null==i||i.weight<t)&&(i={weight:t,branch:e}),100===i.weight)break}const r=i.branch.upstream?.name??i.branch.ref;if(r!==e.ref)return(0,f.oI)(r,e.ref)}}}async getBranches(e,t){if(null==e)return{values:[]};const{provider:i,path:r}=this.getProvider(e);return i.getBranches(r,t)}async getBranchesAndTagsTipsFn(e,t){const[i,r]=await Promise.allSettled([this.getBranches(e),this.getTags(e)]),s=(0,he.Sb)(i)?.values??[],o=(0,he.Sb)(r)?.values??[],a=(0,ot.Qy)(s.concat(o),(e=>e.sha),(e=>{if(t){if(e.name===t)return;if("branch"===e.refType&&e.getNameWithoutRemote()===t)return{name:e.name,compactName:e.getRemoteName(),type:e.refType}}return{name:e.name,compactName:void 0,type:e.refType}}));return(e,t)=>{const i=a.get(e);if(null!=i&&0!==i.length){if(!t?.compact)return i.map((e=>`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.name}`)).join(", ");if(i.length>1){const[e]=i;return`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.compactName??e.name}, ${n.NE.Ellipsis}`}return i.map((e=>`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.compactName??e.name}`)).join(", ")}}}getChangedFilesCount(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getChangedFilesCount(r,t)}async getCommit(e,t){const{provider:i,path:r}=this.getProvider(e);if(t===p.CL||t===p.pw){const i=new Date,s=await this.getCurrentUser(e);return new d.aM(this.container,r,t,new d._j("You",s?.email??void 0,i),new d._j("You",s?.email??void 0,i),"Uncommitted changes",[],"Uncommitted changes",void 0,void 0,[])}return i.getCommit(r,t)}getCommitBranches(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.getCommitBranches(n,t,i,r)}getCommitCount(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getCommitCount(r,t)}async getCommitForFile(e,t,i){if(null==e)return;const{provider:r,path:s}=this.getProvider(e);return r.getCommitForFile(s,t,i)}getCommitsForGraph(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.getCommitsForGraph(s,t,i)}getCommitTags(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.getCommitTags(s,t,i)}async getConfig(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getConfig?.(r,t)}async setConfig(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.setConfig?.(s,t,i)}async getContributors(e,t){if(null==e)return[];const{provider:i,path:r}=this.getProvider(e);return i.getContributors(r,t)}getCurrentUser(e){const{provider:t,path:i}=this.getProvider(e);return t.getCurrentUser(i)}async getDefaultBranchName(e,t){if(null==e)return;const{provider:i,path:r}=this.getProvider(e);return i.getDefaultBranchName(r,t)}async getDiff(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.getDiff?.(n,t,i,r)}async getDiffFiles(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getDiffFiles?.(r,t)}getDiffForFile(e,t,i){const{provider:r}=this.getProvider(e);return r.getDiffForFile(e,t,i)}getDiffForFileContents(e,t,i){const{provider:r}=this.getProvider(e);return r.getDiffForFileContents(e,t,i)}getDiffForLine(e,t,i,r){const{provider:s}=this.getProvider(e);return s.getDiffForLine(e,t,i,r)}getDiffStatus(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.getDiffStatus(n,t,i,r)}async getFileStatusForCommit(e,t,i){if(i===p.Ii||(0,f.l3)(i))return;const{provider:r,path:s}=this.getProvider(e);return r.getFileStatusForCommit(s,t,i)}getGitDir(e){const{provider:t,path:i}=this.getProvider(e);return Promise.resolve(t.getGitDir?.(i))}getLastFetchedTimestamp(e){const{provider:t,path:i}=this.getProvider(e);return t.getLastFetchedTimestamp(i)}async getLog(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getLog(r,t)}async getLogRefsOnly(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getLogRefsOnly(r,t)}async getLogForFile(e,t,i){if(null==e)return;const{provider:r,path:s}=this.getProvider(e);return r.getLogForFile(s,t,i)}async getMergeBase(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.getMergeBase(n,t,i,r)}async getMergeStatus(e){const{provider:t,path:i}=this.getProvider(e);return t.getMergeStatus(i)}async getRebaseStatus(e){const{provider:t,path:i}=this.getProvider(e);return t.getRebaseStatus(i)}getNextComparisonUris(e,t,i,r=0){if(!i)return Promise.resolve(void 0);const{provider:s,path:n}=this.getProvider(e);return s.getNextComparisonUris(n,t,i,r)}async getOldestUnpushedRefForFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getOldestUnpushedRefForFile(r,t)}getPreviousComparisonUris(e,t,i,r=0){if(i===p.Ii)return Promise.resolve(void 0);const{provider:s,path:n}=this.getProvider(e);return s.getPreviousComparisonUris(n,t,i,r)}getPreviousComparisonUrisForLine(e,t,i,r,s=0){if(r===p.Ii)return Promise.resolve(void 0);const{provider:n,path:o}=this.getProvider(e);return n.getPreviousComparisonUrisForLine(o,t,i,r,s)}async getMyPullRequests(e,t){let i,r;if(w.ss.is(e)){if(({provider:i}=e),!i?.hasRichIntegration())return}else i=e;null!=t&&({timeout:r,...t}=t);let s=i.searchMyPullRequests();if(null==s||!(0,he.tI)(s))return s;null!=r&&r>0&&(s=(0,he.HO)(s,r));try{return await s}catch(e){if(e instanceof he.PK)throw e;return}}async getMyIssues(e,t){let i,r;if(w.ss.is(e)){if(({provider:i}=e),!i?.hasRichIntegration())return}else i=e;null!=t&&({timeout:r,...t}=t);let s=i.searchMyIssues();if(null==s||!(0,he.tI)(s))return s;null!=r&&r>0&&(s=(0,he.HO)(s,r));try{return await s}catch(e){if(e instanceof he.PK)throw e;return}}async getIncomingActivity(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getIncomingActivity(r,t)}async getBestRemoteWithProvider(e,t){return(await this.getBestRemotesWithProviders(e,t))[0]}async getBestRemotesWithProviders(e,t){if(null==e)return[];"string"==typeof e&&(e=this.getAbsoluteUri(e));const i=(0,nt.YW)(e);let r=this._bestRemotesCache.get(i);if(null==r){async function s(){const i=await this.getRemotesWithProviders(e,{sort:!0},t);if(0===i.length)return[];if(1===i.length)return[...i];if(t?.isCancellationRequested)throw new a.FU;const r=i.find((e=>e.default))?.name,s=(await this.getBranch(i[0].repoPath))?.getRemoteName(),n=[];let o=!1;for(const e of i){let i;switch(e.name){case r:i=1e3;break;case s:i=6;break;case"upstream":i=5;break;case"origin":i=4;break;default:i=0}if(i>0&&i<1e3&&!o){const r=e.provider;if(r.hasRichIntegration()&&(r.maybeConnected||void 0===r.maybeConnected&&r.shouldConnect&&await r.isConnected())){if(t?.isCancellationRequested)throw new a.FU;const e=await r.getRepositoryMetadata(t);if(t?.isCancellationRequested)throw new a.FU;null!=e&&(i+=e.isFork?-3:3,o=!e.isFork)}}n.push([i,e])}return n.sort((([e,t],[i,r])=>0===i&&0===e?(0,E.dm)(t.name,r.name):i-e)),n.map((e=>e[1]))}r=s.call(this),this._bestRemotesCache.set(i,r)}return[...await r]}async getBestRemoteWithRichProvider(e,t,i){const r=await this.getBestRemotesWithProviders(e,i),s=t?.includeDisconnected??!1;for(const e of r)if(e.hasRichIntegration()){if(s||!0===e.provider.maybeConnected)return e;if(void 0===e.provider.maybeConnected&&e.default&&await e.provider.isConnected())return e}}async getRemotes(e,t,i){if(null==e)return[];const{provider:r,path:s}=this.getProvider(e);return r.getRemotes(s,t)}async getRemotesWithProviders(e,t,i){return(await this.getRemotes(e,t,i)).filter((e=>null!=e.provider))}async getRemotesWithRichProviders(e,t,i){return(await this.getRemotes(e,t,i)).filter((e=>e.hasRichIntegration()))}getBestRepository(e,t){const i=this.repositoryCount;if(0!==i){if(1===i)return this.highlander;if(null!=e&&e instanceof r.Uri){const t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??r.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??this.highlander}}getBestRepositoryOrFirst(e,t){const i=this.repositoryCount;if(0!==i){if(1===i)return(0,ae.Ps)(this._repositories.values());if(null!=e&&e instanceof r.Uri){const t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??r.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??(0,ae.Ps)(this._repositories.values())}}async getOrOpenRepository(e,t){if(null==e)return;const i=(0,ce.UH)();let s;if("string"==typeof e){if(!e)return;s=this.getAbsoluteUri(e)}else s=e;const n=(0,le.M)(s);let o,a;o=this.getRepository(s),null==o&&this._discoveringRepositories?.pending&&(await this._discoveringRepositories.promise,o=this.getRepository(s));if(t?.detectNested??C.D.get("detectNestedRepositories",s)){if(!t?.force&&this._visitedPaths.has(n))return o;{const h=await r.workspace.fs.stat(s),u=(0,le.M)(s);if(A.Yd.debug(i,`Ensuring URI is a folder; repository=${o?.toString()}, uri=${s.toString(!0)} stats.type=${h.type}, bestPath=${u}, visitedPaths.has=${this._visitedPaths.has(u)}`),(h.type&r.FileType.Directory)!==r.FileType.Directory&&(s=r.Uri.joinPath(s,".."),!t?.force&&this._visitedPaths.has(u)))return o;a=!0}}else if(null!=o)return o;const c=(0,nt.YW)(s);let l=this._pendingRepositories.get(c);if(null==l){async function d(){const{provider:e}=this.getProvider(s),r=await e.findRepositoryUri(s,a);if(this._visitedPaths.set(n),null==r)return;let l;if(0!==this._repositories.count){if(o=this._repositories.get(r),null!=o)return o;l=this._repositories.getClosest(e.getAbsoluteUri(s,r))}const h=C.D.getAny("git.autoRepositoryDetection")??!0,u=t?.closeOnOpen??(!0!==h&&"openEditors"!==h);A.Yd.log(i,`Repository found in '${r.toString(!0)}'`);const d=e.openRepository(l?.folder,r,!1,void 0,u),p=[];for(const e of d)this._repositories.add(e),e.closed||p.push(e);return this._pendingRepositories.delete(c),this.updateContext(),p.length&&queueMicrotask((()=>this.fireRepositoriesChanged(p))),o=1===d.length?d[0]:this.getRepository(s),o}l=d.call(this),this._pendingRepositories.set(c,l)}return l}async getOrOpenRepositoryForEditor(e){return null==(e=e??r.window.activeTextEditor)?this.highlander:this.getOrOpenRepository(e.document.uri)}getRepository(e){if(0!==this.repositoryCount&&null!=e){if("string"==typeof e){if(!e)return;return this._repositories.getClosest(this.getAbsoluteUri(e))}return this._repositories.getClosest(e)}}async getLocalInfoFromRemoteUri(e,t){for(const i of this.openRepositories)for(const r of await i.getRemotes()){const s=await(r?.provider?.getLocalInfoFromRemoteUri(i,e,t));if(null!=s)return s}}async getStash(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getStash(i)}async getStatusForFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getStatusForFile(r,t)}async getStatusForFiles(e,t){const{provider:i,path:r}=this.getProvider(e);return i.getStatusForFiles(r,t)}async getStatusForRepo(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getStatusForRepo(i)}async getTags(e,t){if(null==e)return{values:[]};const{provider:i,path:r}=this.getProvider(e);return i.getTags(r,t)}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;const{provider:r,path:s}=this.getProvider(e);return r.getTreeEntryForRevision(s,r.getRelativePath(t,s),i)}async getTreeForRevision(e,t){if(null==e)return[];const{provider:i,path:r}=this.getProvider(e);return i.getTreeForRevision(r,t)}getRevisionContent(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.getRevisionContent(s,t,i)}async getFirstCommitSha(e){const{provider:t,path:i}=this.getProvider(e);try{return await(t.getFirstCommitSha?.(i))}catch{return}}getUniqueRepositoryId(e){return this.getFirstCommitSha(e)}async hasBranchOrTag(e,t){if(null==e)return!1;const{provider:i,path:r}=this.getProvider(e);return i.hasBranchOrTag(r,t)}async hasCommitBeenPushed(e,t){if(null==e)return!1;const{provider:i,path:r}=this.getProvider(e);return i.hasCommitBeenPushed(r,t)}async hasRemotes(e){if(null==e)return!1;const t=this.getRepository(e);return null!=t&&t.hasRemotes()}async hasTrackingBranch(e){if(null==e)return!1;const t=this.getRepository(e);return null!=t&&t.hasUpstreamBranch()}hasUnsafeRepositories(){for(const e of this._providers.values())if(e.hasUnsafeRepositories?.())return!0;return!1}isRepositoryForEditor(e,t){return null!=(t=t??r.window.activeTextEditor)&&e===this.getRepository(t.document.uri)}isTrackable(e){if(!this.supportedSchemes.has(e.scheme))return!1;const{provider:t}=this.getProvider(e);return t.isTrackable(e)}async isTracked(e){if(!this.supportedSchemes.has(e.scheme))return!1;const{provider:t}=this.getProvider(e);return t.isTracked(e)}async getDiffTool(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getDiffTool(i)}async openDiffTool(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.openDiffTool(s,t,i)}async openDirectoryCompare(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.openDirectoryCompare(n,t,i,r)}async resolveReference(e,t,i,r){if(null!=i&&(0,f.j$)(t)&&(t="HEAD"),!t||t===p.Ii||null==i&&(0,f.D3)(t)||null!=i&&(0,f.l3)(t))return t;const{provider:s,path:n}=this.getProvider(e);return s.resolveReference(n,t,i,r)}async richSearchCommits(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.richSearchCommits(s,t,i)}searchCommits(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.searchCommits(s,t,i)}async runGitCommandViaTerminal(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.runGitCommandViaTerminal?.(n,t,i,r)}validateBranchOrTagName(e,t){const{provider:i,path:r}=this.getProvider(e);return i.validateBranchOrTagName(r,t)}async validateReference(e,t){if(null==t||0===t.length)return!1;if(t===p.Ii||(0,f.l3)(t))return!0;const{provider:i,path:r}=this.getProvider(e);return i.validateReference(r,t)}stageFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.stageFile(r,t)}stageDirectory(e,t){const{provider:i,path:r}=this.getProvider(e);return i.stageDirectory(r,t)}unstageFile(e,t){const{provider:i,path:r}=this.getProvider(e);return i.unstageFile(r,t)}unstageDirectory(e,t){const{provider:i,path:r}=this.getProvider(e);return i.unstageDirectory(r,t)}async stashApply(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.stashApply?.(s,t,i)}async stashDelete(e,t,i){const{provider:r,path:s}=this.getProvider(e);return r.stashDelete?.(s,t,i)}async stashRename(e,t,i,r,s){const{provider:n,path:o}=this.getProvider(e);return n.stashRename?.(o,t,i,r,s)}async stashSave(e,t,i,r){const{provider:s,path:n}=this.getProvider(e);return s.stashSave?.(n,t,i,r)}createWorktree(e,t,i){const{provider:r,path:s}=this.getProvider(e);return Promise.resolve(r.createWorktree?.(s,t,i))}async getWorktree(e,t){const{provider:i,path:r}=this.getProvider(e);return(await(i.getWorktrees?.(r))??[]).find(t)}async getWorktrees(e){const{provider:t,path:i}=this.getProvider(e);return await(t.getWorktrees?.(i))??[]}async getWorktreesDefaultUri(e){const{provider:t,path:i}=this.getProvider(e);let s=await(t.getWorktreesDefaultUri?.(i));return null!=s||(s=this.getRepository(i)?.uri,null!=s&&(s=r.Uri.joinPath(s,".."))),s}deleteWorktree(e,t,i){const{provider:r,path:s}=this.getProvider(e);return Promise.resolve(r.deleteWorktree?.(s,t,i))}async getOpenScmRepositories(){const e=await Promise.allSettled([...this._providers.values()].map((e=>e.getOpenScmRepositories())));return[...(0,ae.VS)((0,ae.hX)(e,(e=>"fulfilled"===e.status)),(e=>e.value))]}getScmRepository(e){const{provider:t,path:i}=this.getProvider(e);return t.getScmRepository(i)}getOrOpenScmRepository(e){const{provider:t,path:i}=this.getProvider(e);return t.getOrOpenScmRepository(i)}}dt([(0,G.fF)({args:{0:e=>`(${e?.length??0}) ${e?.map((e=>e.descriptor.id)).join(", ")}`,1:e=>`(${e?.length??0}) ${e?.map((e=>e.descriptor.id)).join(", ")}`}})],GitProviderService.prototype,"fireProvidersChanged",1),dt([(0,G.fF)({args:{0:e=>`(${e?.length??0}) ${e?.map((e=>e.id)).join(", ")}`,1:e=>`(${e?.length??0}) ${e?.map((e=>e.id)).join(", ")}`}})],GitProviderService.prototype,"fireRepositoriesChanged",1),dt([(0,G.fF)()],GitProviderService.prototype,"onSubscriptionChanged",1),dt([(0,G.fF)({args:{0:e=>`focused=${e.focused}`}})],GitProviderService.prototype,"onWindowStateChanged",1),dt([(0,G.fF)({args:{0:e=>`added=${e.added.length}, removed=${e.removed.length}`},singleLine:!0})],GitProviderService.prototype,"onWorkspaceFoldersChanged",1),dt([(0,G.cM)({args:{1:!1},singleLine:!0})],GitProviderService.prototype,"register",1),dt([(0,G.cM)({singleLine:!0})],GitProviderService.prototype,"registrationComplete",1),dt([(0,G.cM)({args:{0:e=>e.length}})],GitProviderService.prototype,"discoverRepositories",1),dt([(0,G.fF)({exit:!0})],GitProviderService.prototype,"discoverRepositoriesCore",1),dt([(0,G.cM)()],GitProviderService.prototype,"findRepositories",1),dt([(0,G.cM)()],GitProviderService.prototype,"findMatchingRepository",1),dt([(0,G.fF)({exit:!0})],GitProviderService.prototype,"access",1),dt([(0,G.fF)({exit:!0})],GitProviderService.prototype,"accessCore",1),dt([(0,G.fF)({exit:!0})],GitProviderService.prototype,"supports",1),dt([(0,G.fF)({exit:e=>`returned ${e?.visibility}`})],GitProviderService.prototype,"getVisibilityInfoFromCache",1),dt([(0,G.fF)()],GitProviderService.prototype,"clearAllRepoVisibilityCaches",1),dt([(0,G.fF)()],GitProviderService.prototype,"clearAllOpenRepoVisibilityCaches",1),dt([(0,G.fF)({exit:!0})],GitProviderService.prototype,"visibility",1),dt([(0,G.fF)({exit:!0})],GitProviderService.prototype,"visibilityCore",1),dt([(0,G.fF)()],GitProviderService.prototype,"setEnabledContext",1),dt([(0,G.cM)()],GitProviderService.prototype,"getBestRevisionUri",1),dt([(0,G.cM)()],GitProviderService.prototype,"getRevisionUri",1),dt([(0,G.cM)()],GitProviderService.prototype,"getWorkingUri",1),dt([(0,G.cM)()],GitProviderService.prototype,"addRemote",1),dt([(0,G.cM)()],GitProviderService.prototype,"pruneRemote",1),dt([(0,G.cM)()],GitProviderService.prototype,"removeRemote",1),dt([(0,G.cM)()],GitProviderService.prototype,"applyChangesToWorkingFile",1),dt([(0,G.cM)()],GitProviderService.prototype,"checkout",1),dt([(0,G.cM)()],GitProviderService.prototype,"clone",1),dt([(0,G.cM)()],GitProviderService.prototype,"applyPatchCommit",1),dt([(0,G.cM)({args:{1:"<contents>",3:"<message>"}})],GitProviderService.prototype,"createUnreachableCommitForPatch",1),dt([(0,G.cM)({singleLine:!0})],GitProviderService.prototype,"resetCaches",1),dt([(0,G.cM)({args:{1:e=>e.length}})],GitProviderService.prototype,"excludeIgnoredUris",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"fetch",1),dt([(0,oe.H)(((e,t)=>`${null==e?"":e.map((e=>e.id)).join(",")}|${JSON.stringify(t)}`)),(0,G.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"fetchAll",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"pull",1),dt([(0,oe.H)(((e,t)=>`${null==e?"":e.map((e=>e.id)).join(",")}|${JSON.stringify(t)}`)),(0,G.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"pullAll",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"push",1),dt([(0,oe.H)((e=>`${null==e?"":e.map((e=>e.id)).join(",")}`)),(0,G.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"pushAll",1),dt([(0,G.cM)({args:{1:e=>e.join(",")}})],GitProviderService.prototype,"getAheadBehindCommitCount",1),dt([(0,G.cM)({args:{1:e=>e?.isDirty}})],GitProviderService.prototype,"getBlame",1),dt([(0,G.cM)({args:{1:"<contents>"}})],GitProviderService.prototype,"getBlameContents",1),dt([(0,G.cM)({args:{2:e=>e?.isDirty}})],GitProviderService.prototype,"getBlameForLine",1),dt([(0,G.cM)({args:{2:"<contents>"}})],GitProviderService.prototype,"getBlameForLineContents",1),dt([(0,G.cM)()],GitProviderService.prototype,"getBlameForRange",1),dt([(0,G.cM)({args:{2:"<contents>"}})],GitProviderService.prototype,"getBlameForRangeContents",1),dt([(0,G.cM)({args:{0:"<blame>"}})],GitProviderService.prototype,"getBlameRange",1),dt([(0,G.cM)()],GitProviderService.prototype,"getBranch",1),dt([(0,G.cM)({args:{0:e=>e.name}})],GitProviderService.prototype,"getBranchAheadRange",1),dt([(0,G.cM)({args:{1:!1}})],GitProviderService.prototype,"getBranches",1),dt([(0,G.cM)()],GitProviderService.prototype,"getBranchesAndTagsTipsFn",1),dt([(0,G.cM)()],GitProviderService.prototype,"getChangedFilesCount",1),dt([(0,G.cM)()],GitProviderService.prototype,"getCommit",1),dt([(0,G.cM)()],GitProviderService.prototype,"getCommitBranches",1),dt([(0,G.cM)()],GitProviderService.prototype,"getCommitCount",1),dt([(0,G.cM)()],GitProviderService.prototype,"getCommitForFile",1),dt([(0,G.cM)()],GitProviderService.prototype,"getCommitsForGraph",1),dt([(0,G.cM)()],GitProviderService.prototype,"getCommitTags",1),dt([(0,G.cM)()],GitProviderService.prototype,"getConfig",1),dt([(0,G.cM)()],GitProviderService.prototype,"setConfig",1),dt([(0,G.cM)()],GitProviderService.prototype,"getContributors",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"getCurrentUser",1),dt([(0,G.cM)()],GitProviderService.prototype,"getDefaultBranchName",1),dt([(0,G.cM)()],GitProviderService.prototype,"getDiff",1),dt([(0,G.cM)({args:{1:!1}})],GitProviderService.prototype,"getDiffFiles",1),dt([(0,G.cM)()],GitProviderService.prototype,"getDiffForFile",1),dt([(0,G.cM)({args:{1:"<contents>"}})],GitProviderService.prototype,"getDiffForFileContents",1),dt([(0,G.cM)()],GitProviderService.prototype,"getDiffForLine",1),dt([(0,G.cM)()],GitProviderService.prototype,"getDiffStatus",1),dt([(0,G.cM)()],GitProviderService.prototype,"getFileStatusForCommit",1),dt([(0,G.fF)()],GitProviderService.prototype,"getGitDir",1),dt([(0,G.fF)()],GitProviderService.prototype,"getLastFetchedTimestamp",1),dt([(0,G.cM)()],GitProviderService.prototype,"getLog",1),dt([(0,G.cM)()],GitProviderService.prototype,"getLogRefsOnly",1),dt([(0,G.cM)()],GitProviderService.prototype,"getLogForFile",1),dt([(0,G.cM)()],GitProviderService.prototype,"getMergeBase",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"getMergeStatus",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"getRebaseStatus",1),dt([(0,G.cM)()],GitProviderService.prototype,"getNextComparisonUris",1),dt([(0,G.cM)()],GitProviderService.prototype,"getOldestUnpushedRefForFile",1),dt([(0,G.cM)()],GitProviderService.prototype,"getPreviousComparisonUris",1),dt([(0,G.cM)()],GitProviderService.prototype,"getPreviousComparisonUrisForLine",1),dt([(0,G.fF)({args:{0:e=>e.name}})],GitProviderService.prototype,"getMyPullRequests",1),dt([(0,G.fF)({args:{0:e=>e.name}})],GitProviderService.prototype,"getMyIssues",1),dt([(0,G.cM)()],GitProviderService.prototype,"getIncomingActivity",1),dt([(0,G.cM)()],GitProviderService.prototype,"getBestRemoteWithProvider",1),dt([(0,G.cM)()],GitProviderService.prototype,"getBestRemotesWithProviders",1),dt([(0,G.cM)()],GitProviderService.prototype,"getBestRemoteWithRichProvider",1),dt([(0,G.cM)()],GitProviderService.prototype,"getRemotes",1),dt([(0,G.cM)()],GitProviderService.prototype,"getRemotesWithProviders",1),dt([(0,G.cM)()],GitProviderService.prototype,"getRemotesWithRichProviders",1),dt([(0,G.cM)({exit:!0})],GitProviderService.prototype,"getBestRepository",1),dt([(0,G.cM)({exit:!0})],GitProviderService.prototype,"getBestRepositoryOrFirst",1),dt([(0,G.cM)({exit:!0})],GitProviderService.prototype,"getOrOpenRepository",1),dt([(0,G.cM)({args:{0:e=>null!=e?`TextEditor(${A.Yd.toLoggable(e.document.uri)})`:void 0}})],GitProviderService.prototype,"getOrOpenRepositoryForEditor",1),dt([(0,G.cM)({exit:!0})],GitProviderService.prototype,"getRepository",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"getStash",1),dt([(0,G.cM)()],GitProviderService.prototype,"getStatusForFile",1),dt([(0,G.cM)()],GitProviderService.prototype,"getStatusForFiles",1),dt([(0,G.cM)()],GitProviderService.prototype,"getStatusForRepo",1),dt([(0,G.cM)({args:{1:!1}})],GitProviderService.prototype,"getTags",1),dt([(0,G.cM)()],GitProviderService.prototype,"getTreeEntryForRevision",1),dt([(0,G.cM)()],GitProviderService.prototype,"getTreeForRevision",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"getRevisionContent",1),dt([(0,G.cM)()],GitProviderService.prototype,"getFirstCommitSha",1),dt([(0,G.cM)()],GitProviderService.prototype,"getUniqueRepositoryId",1),dt([(0,G.cM)({args:{1:!1}})],GitProviderService.prototype,"hasBranchOrTag",1),dt([(0,G.cM)({args:{1:!1}})],GitProviderService.prototype,"hasCommitBeenPushed",1),dt([(0,G.cM)()],GitProviderService.prototype,"hasRemotes",1),dt([(0,G.cM)()],GitProviderService.prototype,"hasTrackingBranch",1),dt([(0,G.cM)()],GitProviderService.prototype,"hasUnsafeRepositories",1),dt([(0,G.cM)({args:{0:e=>e.uri.toString(!0),1:e=>null!=e?`TextEditor(${A.Yd.toLoggable(e.document.uri)})`:void 0}})],GitProviderService.prototype,"isRepositoryForEditor",1),dt([(0,G.cM)()],GitProviderService.prototype,"getDiffTool",1),dt([(0,G.cM)()],GitProviderService.prototype,"openDiffTool",1),dt([(0,G.cM)()],GitProviderService.prototype,"openDirectoryCompare",1),dt([(0,oe.H)(),(0,G.cM)()],GitProviderService.prototype,"resolveReference",1),dt([(0,G.cM)({args:{1:e=>`[${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}]: ${e.query.length>500?`${e.query.substring(0,500)}...`:e.query}`}})],GitProviderService.prototype,"richSearchCommits",1),dt([(0,G.cM)()],GitProviderService.prototype,"searchCommits",1),dt([(0,G.cM)({args:!1})],GitProviderService.prototype,"runGitCommandViaTerminal",1),dt([(0,G.cM)()],GitProviderService.prototype,"validateBranchOrTagName",1),dt([(0,G.cM)()],GitProviderService.prototype,"validateReference",1),dt([(0,G.cM)()],GitProviderService.prototype,"stageFile",1),dt([(0,G.cM)()],GitProviderService.prototype,"stageDirectory",1),dt([(0,G.cM)()],GitProviderService.prototype,"unstageFile",1),dt([(0,G.cM)()],GitProviderService.prototype,"unstageDirectory",1),dt([(0,G.cM)()],GitProviderService.prototype,"stashApply",1),dt([(0,G.cM)()],GitProviderService.prototype,"stashDelete",1),dt([(0,G.cM)()],GitProviderService.prototype,"stashRename",1),dt([(0,G.cM)({args:{2:e=>e?.length}})],GitProviderService.prototype,"stashSave",1),dt([(0,G.cM)()],GitProviderService.prototype,"createWorktree",1),dt([(0,G.cM)()],GitProviderService.prototype,"getWorktree",1),dt([(0,G.cM)()],GitProviderService.prototype,"getWorktrees",1),dt([(0,G.cM)()],GitProviderService.prototype,"getWorktreesDefaultUri",1),dt([(0,G.cM)()],GitProviderService.prototype,"deleteWorktree",1),dt([(0,G.cM)()],GitProviderService.prototype,"getOpenScmRepositories",1),dt([(0,G.cM)()],GitProviderService.prototype,"getScmRepository",1),dt([(0,G.cM)()],GitProviderService.prototype,"getOrOpenScmRepository",1);class RichRemoteProviderService{constructor(e){this.container=e}_onDidChangeConnectionState=new r.EventEmitter;get onDidChangeConnectionState(){return this._onDidChangeConnectionState.event}_onAfterDidChangeConnectionState=new r.EventEmitter;get onAfterDidChangeConnectionState(){return this._onAfterDidChangeConnectionState.event}_connectedCache=new Set;connected(e){this._connectedCache.has(e)||(this._connectedCache.add(e),this.container.telemetry.sendEvent("remoteProviders/connected",{"remoteProviders.key":e}),this._onDidChangeConnectionState.fire({key:e,reason:"connected"}),setTimeout((()=>this._onAfterDidChangeConnectionState.fire({key:e,reason:"connected"})),250))}disconnected(e){this._connectedCache.delete(e),this.container.telemetry.sendEvent("remoteProviders/disconnected",{"remoteProviders.key":e}),this._onDidChangeConnectionState.fire({key:e,reason:"disconnected"}),setTimeout((()=>this._onAfterDidChangeConnectionState.fire({key:e,reason:"disconnected"})),250)}isConnected(e){return null==e?0!==this._connectedCache.size:this._connectedCache.has(e)}}var ft=i(4298),wt=Object.defineProperty,vt=Object.getOwnPropertyDescriptor,yt=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?vt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&wt(t,i,n),n};const bt=2**30;class LineHoverController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_disposable;_hoverProviderDisposable;_uri;dispose(){this.unregister(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(!C.D.changed(e,"hovers.enabled")&&!C.D.changed(e,"hovers.currentLine.enabled"))return;const t=C.D.get("hovers");t.enabled&&t.currentLine.enabled?(this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this)),this.register(r.window.activeTextEditor)):(this.container.lineTracker.unsubscribe(this),this.unregister())}onActiveLinesChanged(e){e.pending||(null!=e.editor&&null!=e.selections?this.isRegistered(e.editor?.document.uri)||this.register(e.editor):this.unregister())}async provideDetailsHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;const s=this.container.lineTracker.getState(t.line),n=s?.commit;if(null==n)return;const o=C.D.get("hovers");if(o.annotations.details){if("blame"===await this.container.fileAnnotations.getAnnotationType(r.window.activeTextEditor))return}const a="line"===o.currentLine.over;if(!a&&this.container.lineAnnotations.suspended)return;const c=e.validateRange(new r.Range(t.line,a?t.character:bt,t.line,bt));if(!a&&c.start.character!==t.character)return;let l=t.line;const h=l+1;l=(n.lines.find((e=>e.line===h))??n.lines[0]).originalLine-1;const u=await this.container.tracker.get(e);if(null==u||i.isCancellationRequested)return;const d=await(0,Ee.nN)(this.container,n,u.uri,l,{autolinks:o.autolinks.enabled,cancellation:i,dateFormat:C.D.get("defaultDateFormat"),format:o.detailsMarkdownFormat,pullRequests:o.pullRequests.enabled,timeout:250})??"Cancelled";return new r.Hover(d,c)}async provideChangesHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;const s=this.container.lineTracker.getState(t.line),n=s?.commit;if(null==n)return;const o=C.D.get("hovers");if(o.annotations.changes){if("blame"===await this.container.fileAnnotations.getAnnotationType(r.window.activeTextEditor))return}const a="line"===o.currentLine.over;if(!a&&this.container.lineAnnotations.suspended)return;const c=e.validateRange(new r.Range(t.line,a?t.character:bt,t.line,bt));if(!a&&c.start.character!==t.character)return;const l=await this.container.tracker.get(e);if(null==l)return;const h=await(0,Ee.jw)(this.container,n,l.uri,t.line,l.document);return null!=h?new r.Hover(h,c):void 0}isRegistered(e){return null!=this._hoverProviderDisposable&&ft.n.equals(this._uri,e)}register(e){if(this.unregister(),null==e)return;const t=C.D.get("hovers");if(!t.enabled||!t.currentLine.enabled||!t.currentLine.details&&!t.currentLine.changes)return;this._uri=e.document.uri;const i=[];t.currentLine.changes&&i.push(r.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideChangesHover.bind(this)})),t.currentLine.details&&i.push(r.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideDetailsHover.bind(this)})),this._hoverProviderDisposable=r.Disposable.from(...i)}unregister(){this._uri=void 0,null!=this._hoverProviderDisposable&&(this._hoverProviderDisposable.dispose(),this._hoverProviderDisposable=void 0)}}yt([(0,G.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineHoverController.prototype,"onActiveLinesChanged",1),yt([(0,G.fF)({args:{0:e=>A.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],LineHoverController.prototype,"provideDetailsHover",1),yt([(0,G.fF)({args:{0:e=>A.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],LineHoverController.prototype,"provideChangesHover",1);var Ct=Object.defineProperty,At=Object.getOwnPropertyDescriptor,St=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?At(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ct(t,i,n),n};class DraftService{constructor(e,t){this.container=e,this.connection=t}dispose(){}async createDraft(e,t,i,r){const s=(0,ce.UH)();try{const s=await Promise.allSettled(i.map((e=>this.getCreateDraftPatchRequestFromChange(e))));if(!s.length)throw new Error("No changes found");const n=[],o=[];let a;for(const e of s)"fulfilled"===e.status?e.value.contents&&(n.push(e.value),null==a&&(a=e.value.user)):o.push(e.reason);if(o.length)throw new AggregateError(o,"Unable to create draft");const c=await this.connection.fetchGkDevApi("v1/drafts",{method:"POST",body:JSON.stringify({type:e,title:t,description:r?.description,isPublic:!0})});if(!c.ok){const e=await c.json();throw new Error(e?.error?.message??c.statusText)}const l=(await c.json()).data,h=l.id,u=await this.connection.fetchGkDevApi(`v1/drafts/${h}/changesets`,{method:"POST",body:JSON.stringify({gitUserName:a?.name,gitUserEmail:a?.email,patches:n.map((e=>e.patch))})}),d=(await u.json()).data,p=[];let m=0;for(const e of d.patches){const{url:t,method:i,headers:r}=e.secureUploadData,{contents:s,repository:o}=n[m++];if(null==s)throw new Error(`No contents found for ${e.baseCommitSha}`);const a=await this.container.git.getDiffFiles(o.path,s),c=a?.files.map((t=>({...t,gkRepositoryId:e.gitRepositoryId})))??[];await this.connection.fetchRaw(t,{method:i,headers:{"Content-Type":"text/plain",Host:r?.Host?.[0]??""},body:s}),p.push({type:"cloud",id:e.id,createdAt:new Date(e.createdAt),updatedAt:new Date(e.updatedAt??e.createdAt),draftId:e.draftId,changesetId:e.changesetId,userId:d.userId,baseBranchName:e.baseBranchName,baseRef:e.baseCommitSha,gkRepositoryId:e.gitRepositoryId,secureLink:void 0,contents:s,files:c,repository:o})}const g=await this.connection.fetchGkDevApi(`v1/drafts/${h}/publish`,{method:"POST"});if(!g.ok)throw new Error(`Failed to publish draft: ${g.statusText}`);const f=await this.connection.fetchGkDevApi(`v1/drafts/${h}`,{method:"GET"}),w=(await f.json()).data,v={id:w.createdBy,name:void 0,email:void 0},{account:y}=await this.container.subscription.getSubscription();return w.createdBy===y?.id&&(v.name=`${y.name} (you)`,v.email=y.email),{draftType:"cloud",type:w.type,id:h,createdAt:new Date(w.createdAt),updatedAt:new Date(w.updatedAt??w.createdAt),author:v,organizationId:w.organizationId||void 0,isPublished:w.isPublished,title:w.title,description:w.description,deepLinkUrl:l.deepLink,deepLinkAccess:w.isPublic?"public":"private",latestChangesetId:w.latestChangesetId,changesets:[{id:d.id,createdAt:new Date(d.createdAt),updatedAt:new Date(d.updatedAt??d.createdAt),draftId:d.draftId,parentChangesetId:d.parentChangesetId,userId:d.userId,gitUserName:d.gitUserName,gitUserEmail:d.gitUserEmail,deepLinkUrl:d.deepLink,patches:p}]}}catch(e){throw A.Yd.error(e,s),e}}async getCreateDraftPatchRequestFromChange(e){const t=(0,f.l3)(e.revision.to),[i,r,s,n,o]=await Promise.allSettled([t?this.container.git.getBranch(e.repository.uri).then((e=>null!=e?[e.name]:void 0)):this.container.git.getCommitBranches(e.repository.uri,e.revision.to).then((t=>t.length?t:this.container.git.getCommitBranches(e.repository.uri,e.revision.from))),null==e.contents?this.container.git.getDiff(e.repository.path,e.revision.to,e.revision.from):void 0,this.container.git.getFirstCommitSha(e.repository.uri),this.container.git.getBestRemoteWithProvider(e.repository.uri),this.container.git.getCurrentUser(e.repository.uri)]),a=(0,he.Sb)(s),c=(0,he.Sb)(n);let l;if(null==c){if(null==a)throw new Error("No remote or initial commit found");l={initialCommitSha:a}}else l={initialCommitSha:a,remote:{url:c.url,domain:c.domain,path:c.path},provider:null!=c.provider.gkProviderId?{id:c.provider.gkProviderId,repoDomain:c.provider.domain,repoName:c.provider.path}:void 0};const h=(0,he.Sb)(r),u=e.contents??h?.contents;if(null==u)throw new Error(`Unable to diff ${e.revision.from} and ${e.revision.to}`);const d=(0,he.Sb)(o),p=(0,he.Sb)(i),m=p?.[0]??"";let g=e.revision.from;if(!(0,f.D3)(g)){const t=await this.container.git.getCommit(e.repository.uri,g);null!=t&&(g=t.sha)}return{patch:{baseCommitSha:g,baseBranchName:m,gitRepoData:l},contents:u,repository:e.repository,user:d}}async deleteDraft(e){await this.connection.fetchGkDevApi(`v1/drafts/${e}`,{method:"DELETE"})}async getDraft(e){const[t,i]=await Promise.allSettled([this.connection.fetchGkDevApi(`v1/drafts/${e}`,{method:"GET"}),this.getChangesets(e)]),r=(0,he.Sb)(t);if(!1===r?.ok)throw A.Yd.error(void 0,`Getting draft failed: (${r.status}) ${r.statusText}`),new Error(r.statusText);const s=(await r.json()).data,n=(0,he.Sb)(i)??[],o={id:s.createdBy,name:void 0,email:void 0},{account:a}=await this.container.subscription.getSubscription();return s.createdBy===a?.id&&(o.name=`${a.name} (you)`,o.email=a.email),{draftType:"cloud",type:s.type,id:s.id,createdAt:new Date(s.createdAt),updatedAt:new Date(s.updatedAt??s.createdAt),author:o,organizationId:s.organizationId||void 0,isPublished:s.isPublished,title:s.title,description:s.description,deepLinkUrl:s.deepLink,deepLinkAccess:s.isPublic?"public":"private",latestChangesetId:s.latestChangesetId,changesets:n}}async getDrafts(){const e=await this.connection.fetchGkDevApi("/v1/drafts",{method:"GET"}),t=(await e.json()).data,{account:i}=await this.container.subscription.getSubscription();return t.map((e=>({draftType:"cloud",type:e.type,id:e.id,author:e.createdBy===i?.id?{id:e.createdBy,name:`${i.name} (you)`,email:i.email}:{id:e.createdBy,name:"Unknown",email:void 0},organizationId:e.organizationId||void 0,isPublished:e.isPublished,title:e.title,description:e.description,deepLinkUrl:e.deepLink,deepLinkAccess:e.isPublic?"public":"private",createdAt:new Date(e.createdAt),updatedAt:new Date(e.updatedAt??e.createdAt),latestChangesetId:e.latestChangesetId})))}async getChangesets(e){const t=await this.connection.fetchGkDevApi(`/v1/drafts/${e}/changesets`,{method:"GET"}),i=(await t.json()).data,r=[];for(const e of i){const t=[];for(const i of e.patches)t.push({type:"cloud",id:i.id,createdAt:new Date(i.createdAt),updatedAt:new Date(i.updatedAt??i.createdAt),draftId:i.draftId,changesetId:i.changesetId,userId:e.userId,baseBranchName:i.baseBranchName,baseRef:i.baseCommitSha,gkRepositoryId:i.gitRepositoryId,secureLink:i.secureDownloadData});r.push({id:e.id,createdAt:new Date(e.createdAt),updatedAt:new Date(e.updatedAt??e.createdAt),draftId:e.draftId,parentChangesetId:e.parentChangesetId,userId:e.userId,gitUserName:e.gitUserName,gitUserEmail:e.gitUserEmail,deepLinkUrl:e.deepLink,patches:t})}return r}async getPatch(e){const t=await this.getPatchCore(e),i=await this.getPatchDetails(t);return t.contents=i.contents,t.files=i.files,t.repository=i.repository,t}async getPatchCore(e){const t=await this.connection.fetchGkDevApi(`/v1/patches/${e}`,{method:"GET"}),i=(await t.json()).data;return{type:"cloud",id:i.id,createdAt:new Date(i.createdAt),updatedAt:new Date(i.updatedAt??i.createdAt),draftId:i.draftId,changesetId:i.changesetId,userId:i.userId,baseBranchName:i.baseBranchName,baseRef:i.baseCommitSha,gkRepositoryId:i.gitRepositoryId,secureLink:i.secureDownloadData}}async getPatchDetails(e){const t="string"==typeof e?await this.getPatchCore(e):e,[i,r]=await Promise.allSettled([this.getPatchContentsCore(t.secureLink),this.container.repositoryIdentity.getRepositoryOrIdentity(t.gkRepositoryId,{openIfNeeded:!0,skipRefValidation:!0})]),s=(0,he.Sb)(i),n=(0,he.Sb)(r);let o="";(0,v.uC)(n)&&(o=n.path);const a=await this.container.git.getDiffFiles(o,s),c=a?.files.map((e=>({...e,gkRepositoryId:t.gkRepositoryId})))??[];return{id:t.id,contents:s,files:c,repository:n}}async getPatchContentsCore(e){const{url:t,method:i,headers:r}=e;return(await this.connection.fetchRaw(t,{method:i,headers:{Accept:"text/plain",Host:r?.Host?.[0]??""}})).text()}}St([(0,G.cM)({args:{2:!1}})],DraftService.prototype,"createDraft",1),St([(0,G.cM)()],DraftService.prototype,"deleteDraft",1),St([(0,G.cM)()],DraftService.prototype,"getDraft",1),St([(0,G.cM)()],DraftService.prototype,"getDrafts",1),St([(0,G.cM)()],DraftService.prototype,"getChangesets",1),St([(0,G.cM)()],DraftService.prototype,"getPatch",1),St([(0,G.cM)({args:{0:e=>"string"==typeof e?e:e.id}})],DraftService.prototype,"getPatchDetails",1);var Pt=i(4435),kt=Object.defineProperty,Dt=Object.getOwnPropertyDescriptor,Rt=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Dt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&kt(t,i,n),n};class FocusService{constructor(e,t){this.container=e,this.connection=t}dispose(){}async delete(e,t){const i=(0,ce.UH)();try{const i=await this.connection.fetchGkDevApi(`v1/enrich-items/${e}`,{method:"DELETE"});if(!i.ok)throw new Error(`Unable to ${t} item '${e}':  (${i.status}) ${i.statusText}`)}catch(e){throw A.Yd.error(e,i),e}}async get(e){const t=(0,ce.UH)();try{const t=await this.connection.fetchGkDevApi("v1/enrich-items",{method:"GET"}),i=await t.json();return null==e?i.data:i.data.filter((t=>t.type===e))}catch(e){if(e instanceof Error&&"Authentication required"===e.message)return[];throw A.Yd.error(e,t),e}}getPins(){return this.get("pin")}getSnoozed(){return this.get("snooze")}async pinItem(e){const t=(0,ce.UH)();try{if(!await(0,Pt.wz)("Pinning requires a GitKraken account.",this.container))throw new Error("Unable to pin item: account required");const t={provider:e.remote.provider.id,entityType:e.type,entityId:e.id,entityUrl:e.url},i=await this.connection.fetchGkDevApi("v1/enrich-items/pin",{method:"POST",body:JSON.stringify(t)});if(!i.ok)throw new Error(`Unable to pin item '${t.provider}|${t.entityUrl}#${e.id}':  (${i.status}) ${i.statusText}`);return(await i.json()).data}catch(e){throw A.Yd.error(e,t),e}}unpinItem(e){return this.delete(e,"unpin")}async snoozeItem(e){const t=(0,ce.UH)();try{if(!await(0,Pt.eb)("Snoozing requires a trial or paid plan",this.container))throw new Error("Unable to snooze item: subscription required");const t={provider:e.remote.provider.id,entityType:e.type,entityId:e.id,entityUrl:e.url},i=await this.connection.fetchGkDevApi("v1/enrich-items/snooze",{method:"POST",body:JSON.stringify(t)});if(!i.ok)throw new Error(`Unable to snooze item '${t.provider}|${t.entityUrl}#${e.id}':  (${i.status}) ${i.statusText}`);return(await i.json()).data}catch(e){throw A.Yd.error(e,t),e}}unsnoozeItem(e){return this.delete(e,"unsnooze")}}Rt([(0,G.cM)()],FocusService.prototype,"get",1),Rt([(0,G.cM)()],FocusService.prototype,"getPins",1),Rt([(0,G.cM)()],FocusService.prototype,"getSnoozed",1),Rt([(0,G.cM)({args:{0:e=>`${e.id} (${e.remote.provider.name} ${e.type})`}})],FocusService.prototype,"pinItem",1),Rt([(0,G.cM)()],FocusService.prototype,"unpinItem",1),Rt([(0,G.cM)({args:{0:e=>`${e.id} (${e.remote.provider.name} ${e.type})`}})],FocusService.prototype,"snoozeItem",1),Rt([(0,G.cM)()],FocusService.prototype,"unsnoozeItem",1);var _t=i(4290),Tt=Object.defineProperty,Ft=Object.getOwnPropertyDescriptor,$t=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ft(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Tt(t,i,n),n};const It="did-authenticate";class AuthenticationConnection{constructor(e,t){this.container=e,this.connection=t}_cancellationSource;_deferredCodeExchanges=new Map;_pendingStates=new Map;_statusBarItem;dispose(){}abort(){return null==this._cancellationSource?Promise.resolve():(this._cancellationSource.cancel(),new Promise((e=>setTimeout(e,50))))}async getAccountInfo(e){const t=(0,ce.UH)();let i;try{i=await this.connection.fetchApi("user",void 0,e)}catch(e){throw A.Yd.error(e,t),e}if(!i.ok)throw A.Yd.error(void 0,`Getting account info failed: (${i.status}) ${i.statusText}`),new Error(i.statusText);const r=await i.json();return{id:r.id,accountName:r.username}}async login(e,t){this.updateStatusBarItem(!0);const i=(0,_t.Vj)(),s=this._pendingStates.get(t)??[];this._pendingStates.set(t,[...s,i]);const n=await r.env.asExternalUri(r.Uri.parse(`${r.env.uriScheme}://${this.container.context.extension.id}/${It}?gkstate=${i}`)),o=this.connection.getAccountsUri("register",`${e.includes("gitlens")?"referrer=gitlens&":""}pass-token=true&return-url=${encodeURIComponent(n.toString())}`);await r.env.openExternal(o);let a=this._deferredCodeExchanges.get(t);return null==a&&(a=(0,de.ue)(this.container.uri.onDidReceiveAuthenticationUri,this.getUriHandlerDeferredExecutor(t)),this._deferredCodeExchanges.set(t,a)),null!=this._cancellationSource&&(this._cancellationSource.cancel(),this._cancellationSource=void 0),this._cancellationSource=new r.CancellationTokenSource,this.openCompletionInputFallback(this._cancellationSource.token),Promise.race([a.promise,new Promise(((e,t)=>this._cancellationSource?.token.onCancellationRequested((()=>t("Cancelled"))))),new Promise(((e,t)=>setTimeout(t,12e4,"Cancelled")))]).finally((()=>{this._cancellationSource?.cancel(),this._cancellationSource=void 0,this._pendingStates.delete(t),a?.cancel(),this._deferredCodeExchanges.delete(t),this.updateStatusBarItem(!1)}))}async openCompletionInputFallback(e){const t=r.window.createInputBox();t.ignoreFocusOut=!0;const i=[];try{if(e.isCancellationRequested)return;const s=await new Promise((s=>{i.push(e.onCancellationRequested((()=>t.hide())),t.onDidHide((()=>s(void 0))),t.onDidChangeValue((e=>{if(e){try{const i=r.Uri.parse(e.trim());if(i.scheme&&"file"!==i.scheme)return void(t.validationMessage=void 0)}catch{}t.validationMessage="Please enter a valid authorization URL"}else t.validationMessage=void 0})),t.onDidAccept((()=>s(r.Uri.parse(t.value.trim()))))),t.title="GitKraken Sign In",t.placeholder="Please enter the provided authorization URL",t.prompt="If the auto-redirect fails, paste the authorization URL",t.show()}));null!=s&&this.container.uri.handleUri(s)}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}}getUriHandlerDeferredExecutor(e){return(t,i,r)=>{const s=new URLSearchParams(t.query),n=this._pendingStates.get(e),o=s.get("gkstate");if(null==n||!o||!n.includes(o))return void A.Yd.log("State not found in accepted state. Skipping this execution...");const a=s.get("access-token"),c=s.get("code"),l=a??c;null==l?r("Token not returned"):i(l)}}updateStatusBarItem(e){e&&null==this._statusBarItem&&(this._statusBarItem=r.window.createStatusBarItem("gitlens.plus.signIn",r.StatusBarAlignment.Left),this._statusBarItem.name="GitKraken Sign in",this._statusBarItem.text="Signing in to GitKraken...",this._statusBarItem.show()),e||null==this._statusBarItem||(this._statusBarItem.dispose(),this._statusBarItem=void 0)}}$t([(0,G.fF)({args:!1})],AuthenticationConnection.prototype,"getAccountInfo",1),$t([(0,G.fF)()],AuthenticationConnection.prototype,"login",1);var xt=Object.defineProperty,Ot=Object.getOwnPropertyDescriptor,Et=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ot(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&xt(t,i,n),n};const Bt="gitlens+",Wt=["gitlens"];class AccountAuthenticationProvider{constructor(e,t){this.container=e,this._authConnection=new AuthenticationConnection(e,t),this._sessionsPromise=this.getSessionsFromStorage(),this._disposable=r.Disposable.from(this._authConnection,r.authentication.registerAuthenticationProvider(Bt,"GitKraken: GitLens",this,{supportsMultipleAccounts:!1}),this.container.storage.onDidChangeSecrets((()=>this.checkForUpdates())))}_onDidChangeSessions=new r.EventEmitter;get onDidChangeSessions(){return this._onDidChangeSessions.event}_disposable;_authConnection;_sessionsPromise;dispose(){this._disposable.dispose()}get secretStorageKey(){return`gitlens.plus.auth:${this.container.env}`}abort(){return this._authConnection.abort()}async createSession(e){const t=(0,ce.UH)(),i=Mt(e=e.sort());try{const t=await this._authConnection.login(e,i),r=await this.createSessionForToken(t,e),s=await this._sessionsPromise,n=s.findIndex((e=>e.id===r.id||Mt(e.scopes)===i));return n>-1?s.splice(n,1,r):s.push(r),await this.storeSessions(s),this._onDidChangeSessions.fire({added:[r],removed:[],changed:[]}),r}catch(e){if("Cancelled"===e)throw e;throw A.Yd.error(e,t),r.window.showErrorMessage(`Unable to sign in to GitKraken: ${e}`),e}}async getSessions(e){const t=(0,ce.UH)();e=e?.sort();const i=Mt(e),r=await this._sessionsPromise,s=null!=e?r.filter((e=>Mt(e.scopes)===i)):r;return(0,ce.lH)(t,` • Found ${s.length} sessions`),s}async removeSession(e){const t=(0,ce.UH)();try{const t=await this._sessionsPromise,i=t.findIndex((t=>t.id===e));if(-1===i)return void A.Yd.log(`Unable to remove session ${e}; Not found`);const r=t[i];t.splice(i,1),await this.storeSessions(t),this._onDidChangeSessions.fire({added:[],removed:[r],changed:[]})}catch(e){throw A.Yd.error(e,t),r.window.showErrorMessage(`Unable to sign out of GitKraken: ${e}`),e}}async removeSessionsByScopes(e){const t=(0,ce.UH)();try{e=e?.sort();const t=Mt(e),i=[];let r=0;const s=await this._sessionsPromise;for(const e of s)Mt(e.scopes)===t?(s.splice(r,1),i.push(e)):r++;if(0===i.length)return;await this.storeSessions(s),this._onDidChangeSessions.fire({added:[],removed:i,changed:[]})}catch(e){throw A.Yd.error(e,t),r.window.showErrorMessage(`Unable to sign out of GitKraken: ${e}`),e}}async checkForUpdates(){const e=await this._sessionsPromise;this._sessionsPromise=this.getSessionsFromStorage();const t=await this._sessionsPromise,i=[],r=[];for(const r of t)e.some((e=>e.id===r.id))||i.push(r);for(const i of e)t.some((e=>e.id===i.id))||r.push(i);(i.length||r.length)&&(A.Yd.debug(`Firing sessions changed event; added=${i.length}, removed=${r.length}`),this._onDidChangeSessions.fire({added:i,removed:r,changed:[]}))}async createSessionForToken(e,t){const i=await this._authConnection.getAccountInfo(e);return{id:(0,_t.Vj)(),accessToken:e,account:{label:i.accountName,id:i.id},scopes:t}}async getSessionsFromStorage(){let e;try{const t=await this.container.storage.getSecret(this.secretStorageKey);if(!t||"[]"===t)return[];try{e=JSON.parse(t)}catch(e){try{await this.container.storage.deleteSecret(this.secretStorageKey)}catch{}throw e}}catch(e){return A.Yd.error(e,"Unable to read sessions from storage"),[]}const t=e.map((async e=>{const t=Mt(e.scopes);let i;if(A.Yd.debug(`Read session from storage with scopes=${t}`),null==e.account)try{i=await this._authConnection.getAccountInfo(e.accessToken),A.Yd.debug(`Verified session with scopes=${t}`)}catch(e){if("Unauthorized"===e.message)return}return{id:e.id,account:{label:null!=e.account?e.account.label??e.account.displayName??"<unknown>":i?.accountName??"<unknown>",id:e.account?.id??i?.id??"<unknown>"},scopes:e.scopes,accessToken:e.accessToken}})),i=(await Promise.allSettled(t)).filter((e=>"fulfilled"===e.status)).map((e=>e.value)).filter((e=>Boolean(e)));return A.Yd.debug(`Found ${i.length} verified sessions`),i.length!==e.length&&await this.storeSessions(i),i}async storeSessions(e){try{this._sessionsPromise=Promise.resolve(e),await this.container.storage.storeSecret(this.secretStorageKey,JSON.stringify(e))}catch(t){A.Yd.error(t,`Unable to store ${e.length} sessions`)}}}function Mt(e){return e?.join("|")}Et([(0,G.fF)()],AccountAuthenticationProvider.prototype,"createSession",1),Et([(0,G.fF)()],AccountAuthenticationProvider.prototype,"getSessions",1),Et([(0,G.fF)()],AccountAuthenticationProvider.prototype,"removeSession",1),Et([(0,G.fF)()],AccountAuthenticationProvider.prototype,"removeSessionsByScopes",1);var Nt=i(9967),Lt=i(4550);function Ut(e){switch(e){case"gitlens-pro":case"bundle-pro":case"gitkraken_v1-pro":return st.Cx.Pro;case"gitlens-teams":case"bundle-teams":case"gitkraken_v1-teams":return st.Cx.Teams;case"gitlens-hosted-enterprise":case"gitlens-self-hosted-enterprise":case"gitlens-standalone-enterprise":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":case"gitkraken_v1-hosted-enterprise":case"gitkraken_v1-self-hosted-enterprise":case"gitkraken_v1-standalone-enterprise":return st.Cx.Enterprise;default:return st.Cx.FreePlus}}function Gt(e){switch(e){case"bundle-pro":case"bundle-teams":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":return!0;default:return!1}}function Ht(e){switch(e){case"active":return 100;case"expired":case"cancelled":return-100;case"in_trial":case"trial":return 1;case"canceled":case"non_renewing":return 0;default:return-200}}var Vt=i(718),qt=Object.defineProperty,jt=Object.getOwnPropertyDescriptor,Qt=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?jt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&qt(t,i,n),n};class SubscriptionService{constructor(e,t,i){this.container=e,this.connection=t,this._disposable=r.Disposable.from((0,pe.IH)(e.onReady)(this.onReady,this),this.container.accountAuthentication.onDidChangeSessions((e=>setTimeout((()=>this.onAuthenticationChanged(e)),0)),this),C.D.onDidChange((e=>{C.D.changed(e,"plusFeatures")&&this.updateContext()})));const s=this.getStoredSubscription();null!=s&&(0,Lt.L5)(i,"< 14.0")&&(s.previewTrial=void 0),this.changeSubscription(s,{silent:!0}),setTimeout((()=>{this.ensureSession(!1)}),1e4)}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_disposable;_subscription;_statusBarSubscription;_validationTimer;dispose(){this._statusBarSubscription?.dispose(),this._disposable.dispose()}async onAuthenticationChanged(e){let t=this._session;if(null==t&&null!=this._sessionPromise&&(t=await this._sessionPromise),null!=t&&e.removed?.some((e=>e.id===t.id)))return this._session=void 0,this._sessionPromise=void 0,void this.logout();const i=e.added?.[0]??e.changed?.[0];null!=i&&(i.id===t?.id&&i.accessToken===t?.accessToken||(this._session=t,this.validate({force:!0})))}_etag=0;get etag(){return this._etag}onReady(){this._disposable=r.Disposable.from(this._disposable,this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),...this.registerCommands()),this.updateContext()}onRepositoriesChanged(e){this.updateContext()}registerCommands(){return this.container.viewCommands,[(0,at.xR)(n.Gh.PlusLoginOrSignUp,(()=>this.loginOrSignUp())),(0,at.xR)(n.Gh.PlusLogout,(()=>this.logout())),(0,at.xR)(n.Gh.PlusStartPreviewTrial,(()=>this.startPreviewTrial())),(0,at.xR)(n.Gh.PlusManage,(()=>this.manage())),(0,at.xR)(n.Gh.PlusPurchase,(()=>this.purchase())),(0,at.xR)(n.Gh.PlusResendVerification,(()=>this.resendVerification())),(0,at.xR)(n.Gh.PlusValidate,(()=>this.validate({force:!0}))),(0,at.xR)(n.Gh.PlusShowPlans,(()=>this.showPlans())),(0,at.xR)(n.Gh.PlusHide,(()=>C.D.updateEffective("plusFeatures.enabled",!1))),(0,at.xR)(n.Gh.PlusRestore,(()=>C.D.updateEffective("plusFeatures.enabled",!0))),(0,at.xR)("gitlens.plus.reset",(()=>this.logout(!0)))]}async getAuthenticationSession(e=!1){return this.ensureSession(e)}async getSubscription(e=!1){const t=this.ensureSession(!1);return e||await t,this._subscription}async learnAboutPreviewOrTrial(){const e=await this.getSubscription();e.state===st.jc.FreeInPreviewTrial?(0,V.lN)(this.container.context.extension.id,"gitlens.welcome","gitlens.welcome.preview",!1):e.state===st.jc.FreePlusInTrial&&(0,V.lN)(this.container.context.extension.id,"gitlens.welcome","gitlens.welcome.trial",!1)}async loginOrSignUp(){if(!await(0,Vt.C)())return!1;await this.container.accountAuthentication.abort(),this.showAccountView();const e=await this.ensureSession(!0),t=Boolean(e);if(t){const{account:e,plan:{actual:t,effective:i}}=this._subscription;if(!1===e?.verified){const e={title:"Resend Verification",isCloseAffordance:!0},t={title:"Cancel"};await r.window.showInformationMessage(`You must verify your email before you can access ${i.name}.`,e,t)===e&&this.resendVerification()}else if((0,st.dz)(this._subscription)){const e=(0,st.PY)(this._subscription,"days"),t={title:"OK",isCloseAffordance:!0},s={title:"Learn More"};await r.window.showInformationMessage(`Welcome to ${i.name} (Trial). You can now try Pro features on privately hosted repos for ${(0,E._6)("more day",e??0)}.`,{modal:!0},t,s)===s&&this.learnAboutPreviewOrTrial()}else(0,st.ww)(this._subscription)?r.window.showInformationMessage(`Welcome to ${t.name}. You can now use Pro features on privately hosted repos.`,"OK"):r.window.showInformationMessage(`Welcome to ${t.name}. You can use Pro features on local & publicly hosted repos.`,"OK")}return t}async logout(e=!1){return this.logoutCore(e)}async logoutCore(e=!1){this._lastValidatedDate=void 0,null!=this._validationTimer&&(clearInterval(this._validationTimer),this._validationTimer=void 0),await this.container.accountAuthentication.abort(),this._sessionPromise=void 0,null!=this._session?(this.container.accountAuthentication.removeSession(this._session.id),this._session=void 0):this.container.accountAuthentication.removeSessionsByScopes(Wt),e&&this.container.debugging?this.changeSubscription(void 0):this.changeSubscription({...this._subscription,plan:{actual:(0,st.fV)(st.Cx.Free,!1,0,void 0,null!=this._subscription.plan?.actual?.startedOn?new Date(this._subscription.plan.actual.startedOn):void 0),effective:(0,st.fV)(st.Cx.Free,!1,0,void 0,null!=this._subscription.plan?.effective?.startedOn?new Date(this._subscription.plan.actual.startedOn):void 0)},account:void 0})}manage(){r.env.openExternal(this.connection.getAccountsUri())}async purchase(){await(0,Vt.C)()&&(null==this._subscription.account?this.showPlans():r.env.openExternal(this.connection.getAccountsUri("subscription","product=gitlens&license=PRO")),await this.showAccountView())}async resendVerification(){if(this._subscription.account?.verified)return!0;const e=(0,ce.UH)();this.showAccountView(!0);const t=await this.ensureSession(!1);if(null==t)return!1;try{const i=await this.connection.fetchApi("resend-email",{method:"POST",body:JSON.stringify({id:t.account.id})},t.accessToken);if(!i.ok)return A.Yd.error("",e,`Unable to resend verification email; status=(${i.status}): ${i.statusText}`),r.window.showErrorMessage(`Unable to resend verification email; Status: ${i.statusText}`,"OK"),!1;const s={title:"Recheck"},n={title:"Cancel"};if(await r.window.showInformationMessage("Once you have verified your email address, click 'Recheck'.",s,n)===s)return await this.validate({force:!0}),!0}catch(t){A.Yd.error(t,e),r.window.showErrorMessage("Unable to resend verification email","OK")}return!1}async showAccountView(e=!1){e&&!C.D.get("plusFeatures.enabled",void 0,!0)||this.container.accountView.visible||await(0,at.P0)(n.Gh.ShowAccountView)}showPlans(){r.env.openExternal(this.connection.getSiteUri("gitlens/pricing"))}async startPreviewTrial(e){if(!await(0,Vt.C)())return;let{plan:t,previewTrial:i}=this._subscription;if(null!=i){if(this.showAccountView(),!e&&t.effective.id===st.Cx.Free){const e={title:"Start Free GitKraken Trial",isCloseAffordance:!0},t={title:"Cancel"};await r.window.showInformationMessage("Your 3-day Pro preview has ended, start a free GitKraken trial to get an additional 7 days.\n\n✨ A trial or paid plan is required to use Pro features on privately hosted repos.",{modal:!0},e,t)===e&&this.loginOrSignUp()}return}if((0,st._n)(this._subscription))return;const s=new Date;let n,o=new Date(s);this.container.debugging?(o=(0,U.IH)(o,{minutes:1}),n=0):(o.setHours(23,59,59,999),o=(0,U.IH)(o,{days:3}),n=3),i={startedOn:s.toISOString(),expiresOn:o.toISOString()},this.changeSubscription({...this._subscription,plan:{...this._subscription.plan,effective:(0,st.fV)(st.Cx.Pro,!1,0,void 0,s,o)},previewTrial:i}),e||setTimeout((async()=>{const e={title:"Learn More"};await r.window.showInformationMessage(`You can now preview Pro features for ${(0,E._6)("day",n)}. After which, you can start a free GitKraken trial for an additional 7 days.`,{title:"OK",isCloseAffordance:!0},e)===e&&this.learnAboutPreviewOrTrial()}),1)}async validate(e){const t=(0,ce.UH)(),i=await this.ensureSession(!1);if(null!=i)try{await this.checkInAndValidate(i,e)}catch(e){A.Yd.error(e,t)}else this.changeSubscription(this._subscription)}_lastValidatedDate;async checkInAndValidate(e,t){const i=(0,ce.UH)();if(!t?.force&&null!=this._lastValidatedDate&&Date.now()-this._lastValidatedDate.getTime()<432e5&&!(0,st.Z1)(this._subscription))return void(0,ce.lH)(i,` (${(0,U.Zh)(this._lastValidatedDate.getTime(),!0)})...`,"skipped");const s=this.checkInAndValidateCore(e);if(!t?.showSlowProgress)return s;const n=await(0,Be.Zo)(s,void 0,3e3);n.paused&&await r.window.withProgress({location:r.ProgressLocation.Notification,title:"Validating your GitKraken account..."},(()=>n.value))}async checkInAndValidateCore(e){const t=(0,ce.UH)();this._lastValidatedDate=void 0;try{const t={id:e.account.id,platform:(0,Ke.Xf)(),gitlensVersion:this.container.version,machineId:r.env.machineId,sessionId:r.env.sessionId,vscodeEdition:r.env.appName,vscodeHost:r.env.appHost,vscodeVersion:r.version,previewStartedOn:this._subscription.previewTrial?.startedOn,previewExpiresOn:this._subscription.previewTrial?.expiresOn},i=await this.connection.fetchApi("gitlens/checkin",{method:"POST",body:JSON.stringify(t)},e.accessToken);if(!i.ok)throw new a.dt("Unable to validate account",void 0,i.status,i.statusText);const s=await i.json();this.validateAndUpdateSubscription(s)}catch(e){if(A.Yd.error(e,t),e instanceof a.dt)throw e;throw new a.dt("Unable to validate account",e)}finally{this.startDailyValidationTimer()}}startDailyValidationTimer(){null!=this._validationTimer&&clearInterval(this._validationTimer),this._validationTimer=setInterval((()=>{null!=this._lastValidatedDate&&this._lastValidatedDate.getDate()===(new Date).getDate()||this.ensureSession(!1,!0)}),216e5)}validateAndUpdateSubscription(e){const t=function(e){const t={id:e.user.id,name:e.user.name,email:e.user.email,verified:"activated"===e.user.status,createdOn:e.user.createdDate,organizationIds:e.orgIds??[]},i=Object.entries(e.licenses.effectiveLicenses),r=Object.entries(e.licenses.paidLicenses);let s,n;if(r.length>0){r.length>1&&r.sort(((e,t)=>(0,st.kU)(Ut(t[0]))+Ht(t[1].latestStatus)-((0,st.kU)(Ut(e[0]))+Ht(e[1].latestStatus))));const[e,t]=r[0];s=(0,st.fV)(Ut(e),Gt(e),t.reactivationCount??0,t.organizationId,new Date(t.latestStartDate),new Date(t.latestEndDate),"cancelled"===t.latestStatus)}if(null==s&&(s=(0,st.fV)(st.Cx.FreePlus,!1,0,void 0,null!=e.user.firstGitLensCheckIn?new Date(e.user.firstGitLensCheckIn):null!=e.user.createdDate?new Date(e.user.createdDate):void 0)),i.length>0){i.length>1&&i.sort(((e,t)=>(0,st.kU)(Ut(t[0]))+Ht(t[1].latestStatus)-((0,st.kU)(Ut(e[0]))+Ht(e[1].latestStatus))));const[e,t]=i[0];n=(0,st.fV)(Ut(e),Gt(e),t.reactivationCount??0,t.organizationId,new Date(t.latestStartDate),new Date(t.latestEndDate),"cancelled"===t.latestStatus)}return(null==n||(0,st.kU)(s.id)>=(0,st.kU)(n.id))&&(n={...s}),{plan:{actual:s,effective:n},account:t}}(e);this._lastValidatedDate=new Date,this.changeSubscription({...this._subscription,...t},{store:!0})}_sessionPromise;_session;async ensureSession(e,t){if(null!=this._sessionPromise&&void 0===this._session&&await this._sessionPromise,!t&&null!=this._session)return this._session;if(null===this._session&&!e)return;void 0===this._sessionPromise&&(this._sessionPromise=this.getOrCreateSession(e).then((e=>(this._session=e,this._sessionPromise=void 0,this._session)),(()=>(this._session=null,this._sessionPromise=void 0,this._session))));return await this._sessionPromise??void 0}async getOrCreateSession(e){const t=(0,ce.UH)();let i;try{i=await r.authentication.getSession(Bt,Wt,{createIfNone:e,silent:!e})}catch(e){if(i=null,e instanceof Error&&e.message.includes("User did not consent"))return(0,ce.lH)(t," • User declined authentication"),await this.logoutCore(),null;A.Yd.error(e,t)}if(null==i)return(0,ce.lH)(t," • No valid session was found"),await this.logoutCore(),i??null;try{await this.checkInAndValidate(i,{showSlowProgress:e,force:e})}catch(s){if(A.Yd.error(s,t),this.container.telemetry.sendEvent("account/validation/failed",{"account.id":i.account.id,exception:String(s),code:s.original?.code,statusCode:s.statusCode}),(0,ce.lH)(t,` • Account validation failed (${s.statusCode??s.original?.code})`,"FAILED"),s instanceof a.dt){const t=i.account.label;if("ENOTFOUND"!==s.original?.code&&null!=s.statusCode&&s.statusCode<500&&s.statusCode>=400){if(i=null,await this.logoutCore(),e){const e=401===s.statusCode;queueMicrotask((async()=>{const i={title:"Retry Sign In"};await r.window.showErrorMessage(`Unable to sign in to your (${t}) GitKraken account. Please try again. If this issue persists, please contact support.${e?"":` Error=${s.message}`}`,i)===i&&this.loginOrSignUp()}))}}else i=i??null}}return i}changeSubscription(e,t){null==e&&(e={plan:{actual:(0,st.fV)(st.Cx.Free,!1,0,void 0),effective:(0,st.fV)(st.Cx.Free,!1,0,void 0)},account:void 0,state:st.jc.Free}),(0,st.Z1)(e)&&(e={...e,plan:{...e.plan,effective:e.plan.actual}}),!(0,st.ww)(e)&&null!=e.previewTrial&&((0,st.EE)(e.previewTrial.expiresOn)??0)>0&&(e={...e,plan:{...e.plan,effective:(0,st.fV)(st.Cx.Pro,!1,0,void 0,new Date(e.previewTrial.startedOn),new Date(e.previewTrial.expiresOn))}}),e.state=(0,st.RE)(e),(0,st.cF)(e);const i=this._subscription,r=null!=i&&JSON.stringify(i)===JSON.stringify(e);r?t?.store&&this.storeSubscription(e):(queueMicrotask((()=>{let t=Yt(e);this.container.telemetry.setGlobalAttributes(t),t={...t,...r?{}:Yt(i,"previous")},this.container.telemetry.sendEvent(null==i?"subscription":"subscription/changed",t)})),this.storeSubscription(e),this._subscription=e,this._etag=Date.now(),t?.silent||(this.updateContext(),null!=i&&this._onDidChange.fire({current:e,previous:i,etag:this._etag})))}getStoredSubscription(){const e=this.container.storage.get("premium:subscription");let t,i;return null!=e?.data?(({lastValidatedAt:t,...i}=e.data),this._lastValidatedDate=null!=t?new Date(t):void 0):i=void 0,null!=i&&(i.plan.actual.name=(0,st.tL)(i.plan.actual.id),i.plan.effective.name=(0,st.tL)(i.plan.effective.id)),i}async storeSubscription(e){return this.container.storage.store("premium:subscription",{v:1,data:{...e,lastValidatedAt:this._lastValidatedDate?.getTime()}})}_cancellationSource;_updateAccessContextDebounced;updateContext(){this._updateAccessContextDebounced?.cancel(),null==this._updateAccessContextDebounced&&(this._updateAccessContextDebounced=(0,pe.Ds)(this.updateAccessContext.bind(this),500)),null!=this._cancellationSource&&this._cancellationSource.cancel(),this._cancellationSource=new r.CancellationTokenSource,this._updateAccessContextDebounced(this._cancellationSource.token),this.updateStatusBar();const{plan:{actual:e},state:t}=this._subscription;(0,ne.v)("gitlens:plus",e.id!=st.Cx.Free?e.id:void 0),(0,ne.v)("gitlens:plus:state",t)}async updateAccessContext(e){let t=!1;if(0!==this.container.git.repositoryCount&&(({allowed:t}=await this.container.git.access()),e.isCancellationRequested))return;const i=C.D.get("plusFeatures.enabled")??!0;let r;if(!i&&"mixed"===t){r=[];for(const t of this.container.git.repositories){if(t.closed)continue;const i=await this.container.git.access(void 0,t.uri);if(e.isCancellationRequested)return;i.allowed||r.push(t.uri.toString())}}(0,ne.v)("gitlens:plus:enabled",Boolean(t)||i),(0,ne.v)("gitlens:plus:required",!1===t),(0,ne.v)("gitlens:plus:disallowedRepos",r)}updateStatusBar(){const{account:e,plan:{effective:t},state:i}=this._subscription;if(t.id===st.Cx.Free)return this._statusBarSubscription?.dispose(),void(this._statusBarSubscription=void 0);const s=(0,st.dz)(this._subscription);if(!s&&!1!==e?.verified)return this._statusBarSubscription?.dispose(),void(this._statusBarSubscription=void 0);if(null==this._statusBarSubscription&&(this._statusBarSubscription=r.window.createStatusBarItem("gitlens.plus.subscription",r.StatusBarAlignment.Left,1)),this._statusBarSubscription.name="GitKraken Subscription",this._statusBarSubscription.command=n.Gh.ShowAccountView,!1===e?.verified)this._statusBarSubscription.text=`$(warning) ${t.name} (Unverified)`,this._statusBarSubscription.backgroundColor=new r.ThemeColor("statusBarItem.warningBackground"),this._statusBarSubscription.tooltip=new r.MarkdownString(s?`**Please verify your email**\n\nYou must verify your email before you can start your **${t.name}** trial.\n\nClick for details`:"**Please verify your email**\n\nYou must verify your email before you can use Pro features on privately hosted repos.\n\nClick for details",!0);else{const e=(0,st.PY)(this._subscription,"days"),s=i===st.jc.FreePlusInTrial&&t.trialReactivationCount>0;this._statusBarSubscription.text=`${t.name} (Trial)`,this._statusBarSubscription.tooltip=new r.MarkdownString((s?`[See what's new](https://help.gitkraken.com/gitlens/gitlens-release-notes-current/) with\n\t\t\t${(0,E._6)("day",e??0,{infix:" more "})}\n\t\t\tin your **${t.name}** trial.`:`You have ${(0,E._6)("day",e??0)} remaining in your **${t.name}** trial.`)+" Once your trial ends, you'll need a paid plan to continue using ✨ features.\n\nTry our\n\t\t\t[other developer tools](https://www.gitkraken.com/suite) also included in your trial.",!0)}this._statusBarSubscription.show()}}function Yt(e,t){return null==e?{}:{...(0,Nt.xH)(e.account,{arrays:"join",prefix:(t?`${t}.`:"")+"account",skipPaths:["name","email"],skipNulls:!0,stringify:!0}),...(0,Nt.xH)(e.plan,{prefix:(t?`${t}.`:"")+"subscription",skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),...(0,Nt.xH)(e.previewTrial,{prefix:(t?`${t}.`:"")+"subscription.previewTrial",skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),"subscription.state":e.state}}Qt([(0,G.fF)()],SubscriptionService.prototype,"learnAboutPreviewOrTrial",1),Qt([(0,G.cM)()],SubscriptionService.prototype,"loginOrSignUp",1),Qt([(0,G.cM)()],SubscriptionService.prototype,"logout",1),Qt([(0,G.cM)()],SubscriptionService.prototype,"manage",1),Qt([(0,G.cM)()],SubscriptionService.prototype,"purchase",1),Qt([(0,oe.H)(),(0,G.cM)()],SubscriptionService.prototype,"resendVerification",1),Qt([(0,G.cM)()],SubscriptionService.prototype,"showAccountView",1),Qt([(0,oe.H)(),(0,G.cM)()],SubscriptionService.prototype,"startPreviewTrial",1),Qt([(0,oe.H)((e=>`${e?.force??!1}`)),(0,G.cM)()],SubscriptionService.prototype,"validate",1),Qt([(0,G.fF)({args:{0:e=>e?.account?.label}})],SubscriptionService.prototype,"checkInAndValidate",1),Qt([(0,oe.H)((e=>e.account.id)),(0,G.fF)({args:{0:e=>e?.account?.label}})],SubscriptionService.prototype,"checkInAndValidateCore",1),Qt([(0,G.fF)()],SubscriptionService.prototype,"validateAndUpdateSubscription",1),Qt([(0,oe.H)(),(0,G.fF)()],SubscriptionService.prototype,"ensureSession",1),Qt([(0,G.fF)()],SubscriptionService.prototype,"getOrCreateSession",1),Qt([(0,G.fF)()],SubscriptionService.prototype,"changeSubscription",1);var zt=i(4488),Kt=Object.defineProperty,Jt=Object.getOwnPropertyDescriptor,Xt=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Jt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Kt(t,i,n),n};class ServerConnection{constructor(e){this.container=e}dispose(){}get accountsUri(){return"staging"===this.container.env?r.Uri.parse("https://stagingapp.gitkraken.com"):"dev"===this.container.env?r.Uri.parse("https://devapp.gitkraken.com"):r.Uri.parse("https://app.gitkraken.com")}getAccountsUri(e,t){let i=null!=e?r.Uri.joinPath(this.accountsUri,e):this.accountsUri;return null!=t&&(i=i.with({query:t})),i}get baseApiUri(){return"staging"===this.container.env?r.Uri.parse("https://stagingapi.gitkraken.com"):"dev"===this.container.env?r.Uri.parse("https://devapi.gitkraken.com"):r.Uri.parse("https://api.gitkraken.com")}getApiUrl(...e){return r.Uri.joinPath(this.baseApiUri,...e).toString()}get baseGkDevApiUri(){return"staging"===this.container.env?r.Uri.parse("https://staging-api.gitkraken.dev"):"dev"===this.container.env?r.Uri.parse("https://dev-api.gitkraken.dev"):r.Uri.parse("https://api.gitkraken.dev")}getGkDevApiUrl(...e){return r.Uri.joinPath(this.baseGkDevApiUri,...e).toString()}get siteUri(){const{env:e}=this.container;return"staging"===e?r.Uri.parse("https://staging.gitkraken.com"):"dev"===e?r.Uri.parse("https://dev.gitkraken.com"):r.Uri.parse("https://gitkraken.com")}getSiteUri(e,t){let i=null!=e?r.Uri.joinPath(this.siteUri,e):this.siteUri;return null!=t&&(i=i.with({query:t})),i}get userAgent(){return"Visual-Studio-Code-GitLens"}async fetch(e,t,i){const r=(0,ce.UH)();try{i??=await this.getAccessToken();const r={agent:(0,Re.Nx)(),...t,headers:{Authorization:`Bearer ${i}`,"User-Agent":this.userAgent,"Content-Type":"application/json",...t?.headers}};return await(0,Re.he)(e,r)}catch(e){throw A.Yd.error(e,r),e}}async fetchApi(e,t,i){return this.fetch(this.getApiUrl(e),t,i)}async fetchApiGraphQL(e,t,i){return this.fetchApi(e,{method:"POST",...i,body:JSON.stringify(t)})}async fetchGkDevApi(e,t,i){return this.fetch(this.getGkDevApiUrl(e),t,i)}async fetchRaw(e,t){const i=(0,ce.UH)();try{const i={agent:(0,Re.Nx)(),...t,headers:{"User-Agent":this.userAgent,...t?.headers}};return await(0,Re.he)(e,i)}catch(e){throw A.Yd.error(e,i),e}}async getAccessToken(){const e=await this.container.subscription.getAuthenticationSession();if(null!=e)return e.accessToken;throw new Error("Authentication required")}}Xt([(0,zt.H)()],ServerConnection.prototype,"accountsUri",1),Xt([(0,zt.H)()],ServerConnection.prototype,"baseApiUri",1),Xt([(0,zt.H)()],ServerConnection.prototype,"baseGkDevApiUri",1),Xt([(0,zt.H)()],ServerConnection.prototype,"siteUri",1),Xt([(0,zt.H)()],ServerConnection.prototype,"userAgent",1);var Zt=Object.defineProperty,ei=Object.getOwnPropertyDescriptor,ti=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ei(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Zt(t,i,n),n};class IntegrationAuthenticationService{constructor(e){this.container=e}providers=new Map;dispose(){this.providers.clear()}registerProvider(e,t){if(this.providers.has(e))throw new Error(`Provider with id ${e} already registered`);return this.providers.set(e,t),{dispose:()=>this.providers.delete(e)}}hasProvider(e){return this.providers.has(e)}async createSession(e,t){const i=this.providers.get(e);if(null==i)throw new Error(`Provider with id ${e} not registered`);const r=await(i?.createSession(t));if(null==r)return;const s=this.getSecretKey(e,i.getSessionId(t));return await this.container.storage.storeSecret(s,JSON.stringify(r)),r}async getSession(e,t,i){const r=this.providers.get(e);if(null==r)throw new Error(`Provider with id ${e} not registered`);const s=this.getSecretKey(e,r.getSessionId(t));let n;i?.forceNewSession&&await this.container.storage.deleteSecret(s);try{const e=await this.container.storage.getSecret(s);e&&(n=JSON.parse(e))}catch(e){try{await this.container.storage.deleteSecret(s)}catch{}if(!i?.createIfNeeded)throw e}return i?.createIfNeeded&&null==n?this.createSession(e,t):n}async deleteSession(e,t){const i=this.providers.get(e);if(null==i)throw new Error(`Provider with id ${e} not registered`);const r=this.getSecretKey(e,i.getSessionId(t));await this.container.storage.deleteSecret(r)}getSecretKey(e,t){return`gitlens.integration.auth:${e}|${t}`}}ti([(0,G.fF)()],IntegrationAuthenticationService.prototype,"createSession",1),ti([(0,G.fF)()],IntegrationAuthenticationService.prototype,"getSession",1),ti([(0,G.fF)()],IntegrationAuthenticationService.prototype,"deleteSession",1);var ii=i(6503);var ri=Object.defineProperty,si=Object.getOwnPropertyDescriptor,ni=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?si(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ri(t,i,n),n};class RepositoryIdentityService{constructor(e,t){this.container=e,this.connection=t}dispose(){}getRepository(e,t){return this.locateRepository(e,t)}async getRepositoryOrIdentity(e,t){const i=await this.getRepositoryIdentity(e);return await this.locateRepository(i,t)??i}async locateRepository(e,t){const i="string"==typeof e?await this.getRepositoryIdentity(e):e,s=await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:i.remote?.url,repoInfo:null!=i.provider?{provider:i.provider.id,owner:i.provider.repoDomain,repoName:i.provider.repoName}:void 0});let n;if(s.length){for(const e of s){const t=this.container.git.getRepository(r.Uri.file(e));if(null!=t){n=t;break}}null==n&&t?.openIfNeeded&&(n=await this.container.git.getOrOpenRepository(r.Uri.file(s[0]),{closeOnOpen:!0}))}else{const[,e,r]=null!=i.remote?.url?(0,lt.Sk)(i.remote.url):[];for(const s of this.container.git.repositories){if(null!=e&&null!=r){if((await s.getRemotes({filter:t=>t.matches(e,r)})).length>0){n=s;break}}if(!t?.skipRefValidation&&null!=i.initialCommitSha&&"-"!==i.initialCommitSha&&await this.container.git.validateReference(s.uri,i.initialCommitSha)){n=s;break}}}if(null==n&&t?.prompt){const e={title:"Locate Repository"},t={title:"Cancel",isCloseAffordance:!0};if(await r.window.showInformationMessage(`Unable to locate a repository for ${i.name}`,{modal:!0},e,t)!==e)return;const s=(await r.window.showOpenDialog({title:`Choose a location for ${i.name}`,canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0];if(null==s)return;const o=await this.container.git.getOrOpenRepository(s,{closeOnOpen:!0,detectNested:!1});if(null==o)return;(null==i.initialCommitSha||await this.container.git.validateReference(o.uri,i.initialCommitSha))&&(n=o,await this.addFoundRepositoryToMap(n,i))}return n}async getRepositoryIdentity(e){const t=await this.connection.fetchGkDevApi(`/v1/git-repositories/${e}`,{method:"GET"}),i=(await t.json()).data;let r;if("name"in i&&"string"==typeof i.name)r=i.name;else if(null!=i.provider?.repoName)r=i.provider.repoName;else if(null!=i.remote?.url&&null!=i.remote?.domain&&null!=i.remote?.path){const e=re(this.container)(i.remote.url,i.remote.domain,i.remote.path);r=e?.repoName??i.remote.path}else r=i.remote?.path??"Unknown "+(i.initialCommitSha?` (${(0,f.zL)(i.initialCommitSha)})`:"");return{id:i.id,createdAt:new Date(i.createdAt),updatedAt:new Date(i.updatedAt),name:r,initialCommitSha:i.initialCommitSha,remote:i.remote,provider:i.provider}}async addFoundRepositoryToMap(e,t){const i=e.uri.fsPath,r=await e.getRemotes();for(const e of r){const t=e.provider?.url({type:ii.J.Repo});null!=t&&await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:t},i)}null!=t?.provider?.id&&null!=t?.provider?.repoDomain&&null!=t?.provider?.repoName&&await this.container.repositoryPathMapping.writeLocalRepoPath({repoInfo:{provider:t.provider.id,owner:t.provider.repoDomain,repoName:t.provider.repoName}},i)}}ni([(0,G.cM)()],RepositoryIdentityService.prototype,"getRepository",1),ni([(0,G.cM)()],RepositoryIdentityService.prototype,"getRepositoryOrIdentity",1),ni([(0,G.cM)()],RepositoryIdentityService.prototype,"locateRepository",1),ni([(0,G.cM)()],RepositoryIdentityService.prototype,"getRepositoryIdentity",1);var oi=i(7139),ai=i(7707);function ci(e,t){return r.Disposable.from((0,at.xR)(n.Gh.ShowGraph,((...t)=>{const[i]=t;let r;if((0,oi.WO)(i)){if(null!=i.rootUri){const t=e.git.getRepository(i.rootUri);null!=t&&(r=t)}t=[]}else i instanceof ai.Re&&(i.is("repo-folder")&&(r=i.repo),t=[]);return null!=r?(0,at.P0)(n.Gh.ShowInCommitGraph,r):"panel"===C.D.get("graph.layout")?(0,at.P0)(n.Gh.ShowGraphView,...t):(0,at.P0)(n.Gh.ShowGraphPage,void 0,...t)})),(0,at.xR)(`${t.id}.switchToEditorLayout`,(async()=>{await C.D.updateEffective("graph.layout","editor"),queueMicrotask((()=>{(0,at.P0)(n.Gh.ShowGraphPage)}))})),(0,at.xR)(`${t.id}.switchToPanelLayout`,(async()=>{await C.D.updateEffective("graph.layout","panel"),queueMicrotask((async()=>{await(0,at.dO)("gitlens.views.graph.resetViewLocation"),await(0,at.dO)("gitlens.views.graphDetails.resetViewLocation"),(0,at.P0)(n.Gh.ShowGraphView)}))})),(0,at.xR)(n.Gh.ToggleGraph,((...e)=>{(0,ne.fw)("gitlens:webviewView:graph:visible")?(0,at.dO)("workbench.action.closePanel"):(0,at.P0)(n.Gh.ShowGraphView,...e)})),(0,at.xR)(n.Gh.ToggleMaximizedGraph,((...e)=>{(0,ne.fw)("gitlens:webviewView:graph:visible")||(0,at.P0)(n.Gh.ShowGraphView,...e),(0,at.dO)("workbench.action.toggleMaximizedPanel")})),(0,at.xR)(n.Gh.ShowInCommitGraph,(i=>{const r="preserveFocus"in i&&(i.preserveFocus??!1);if("panel"===C.D.get("graph.layout")){if(!e.graphView.visible){const e=t.getBestInstance({preserveFocus:r},i);if(null!=e)return void e.show({preserveFocus:r},i)}e.graphView.show({preserveFocus:r},i)}else t.show({preserveFocus:r},i)})),(0,at.xR)(n.Gh.ShowInCommitGraphView,(t=>{const i="preserveFocus"in t&&(t.preserveFocus??!1);e.graphView.show({preserveFocus:i},t)})),(0,at.xR)(`${t.id}.refresh`,(()=>{t.getActiveInstance()?.refresh(!0)})),(0,at.xR)(`${t.id}.split`,(()=>{t.splitActiveInstance({preserveInstance:!1,column:r.ViewColumn.Beside})})))}class GraphStatusBarController{_disposable;_statusBarItem;constructor(e){this._disposable=r.Disposable.from(C.D.onDidChange(this.onConfigurationChanged,this),e.subscription.onDidChange(this.onSubscriptionChanged,this),(0,pe.IH)(e.onReady)((()=>queueMicrotask((()=>this.updateStatusBar())))),(0,ne.ve)((e=>{"gitlens:enabled"!==e&&"gitlens:plus:enabled"!==e||this.updateStatusBar()})),{dispose:()=>this._statusBarItem?.dispose()})}dispose(){this._disposable.dispose()}onConfigurationChanged(e){(C.D.changed(e,"graph.statusBar.enabled")||C.D.changed(e,"plusFeatures.enabled"))&&this.updateStatusBar()}onSubscriptionChanged(e){this.updateStatusBar()}updateStatusBar(){C.D.get("graph.statusBar.enabled")&&(0,ne.fw)("gitlens:enabled")&&(0,Vt.L)()?(null==this._statusBarItem&&(this._statusBarItem=r.window.createStatusBarItem("gitlens.graph",r.StatusBarAlignment.Left,9997),this._statusBarItem.name="GitLens Commit Graph",this._statusBarItem.command=n.Gh.ShowGraph,this._statusBarItem.text="$(gitlens-graph)",this._statusBarItem.tooltip=new r.MarkdownString("Visualize commits on the Commit Graph ✨"),this._statusBarItem.accessibilityInformation={label:"Show the GitLens Commit Graph"}),this._statusBarItem.show()):(this._statusBarItem?.dispose(),this._statusBarItem=void 0)}}function li(e){return e.registerWebviewView({id:"gitlens.views.patchDetails",fileName:"patchDetails.html",title:"Patch",contextKeyPrefix:"gitlens:webviewView:patchDetails",trackingFeature:"patchDetailsView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{PatchDetailsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9804));return new r(e,t)}),(async(...e)=>{if("editor"===C.D.get("cloudPatches.experimental.layout"))return await(0,ne.v)("gitlens:views:patchDetails:mode",void 0),void(0,at.P0)(n.Gh.ShowPatchDetailsPage,void 0,...e);const t=e[0];null!=t&&await(0,ne.v)("gitlens:views:patchDetails:mode","state"in t?t.state.mode:t.mode)}))}var hi=i(635),ui=i(1907),di=Object.defineProperty,pi=Object.getOwnPropertyDescriptor,mi=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?pi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&di(t,i,n),n};class WorkspacesApi{constructor(e,t){this.container=e,this.connection=t}async getWorkspace(e,t){let i;if(t?.includeRepositories){let e=`(first: ${t?.repoCount??ui.CL}`;t?.repoPage&&(e+=`, page: ${t.repoPage}`),e+=")",i=`\n\t\t\t\tprovider_data {\n\t\t\t\t\trepositories ${e} {\n\t\t\t\t\t\ttotal_count\n\t\t\t\t\t\tpage_info {\n\t\t\t\t\t\t\tend_cursor\n\t\t\t\t\t\t\thas_next_page\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\trepository_id\n\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\tprovider_project_name\n\t\t\t\t\t\t\tprovider_organization_id\n\t\t\t\t\t\t\tprovider_organization_name\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`}const r=`\n\t\t\tquery getWorkspace {\n\t\t\t\tproject(id: "${e}") { ${`\n\t\t\tid\n\t\t\tdescription\n\t\t\tname\n\t\t\torganization {\n\t\t\t\tid\n\t\t\t}\n\t\t\tprovider\n\t\t\tazure_organization_id\n\t\t\tazure_project\n\t\t\trepo_relation\n\t\t\t${i??""}\n\t\t`} }\n\t\t\t}\n\t\t`,s=await this.fetch({query:r});if(!s.ok)throw A.Yd.error(void 0,`Getting workspace failed: (${s.status}) ${s.statusText}`),new Error(s.statusText);return await s.json()}async getWorkspaces(e){let t;if(e?.includeRepositories){let i=`(first: ${e?.repoCount??ui.CL}`;e?.repoPage&&(i+=`, page: ${e.repoPage}`),i+=")",t=`\n\t\t\t\tprovider_data {\n\t\t\t\t\trepositories ${i} {\n\t\t\t\t\t\ttotal_count\n\t\t\t\t\t\tpage_info {\n\t\t\t\t\t\t\tend_cursor\n\t\t\t\t\t\t\thas_next_page\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\trepository_id\n\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\tprovider_project_name\n\t\t\t\t\t\t\tprovider_organization_id\n\t\t\t\t\t\t\tprovider_organization_name\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`}const i=`\n\t\t\ttotal_count\n\t\t\tpage_info {\n\t\t\t\tend_cursor\n\t\t\t\thas_next_page\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t\tname\n\t\t\t\torganization {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t\tprovider\n\t\t\t\tazure_organization_id\n\t\t\t\tazure_project\n\t\t\t\trepo_relation\n\t\t\t\t${t??""}\n\t\t\t}\n\t\t`;let r=`(first: ${e?.count??ui.U1}`;e?.cursor?r+=`, after: "${e.cursor}"`:e?.page&&(r+=`, page: ${e.page}`),r+=")";let s="query getWorkpaces {";if(s+=`memberProjects: projects ${r} { ${i} }`,null==e?.cursor&&e?.includeOrganizations){const t=(await this.container.subscription.getSubscription())?.account?.organizationIds??[];for(const r of t){let t=`(first: ${e?.count??ui.U1}`;e?.page&&(t+=`, page: ${e.page}`),t+=`, organization_id: "${r}")`,s+=`organizationProjects_${r}: projects ${t} { ${i} }`}}s+="}";const n=await this.fetch({query:s});if(!n.ok)throw A.Yd.error(void 0,`Getting workspaces failed: (${n.status}) ${n.statusText}`),new Error(n.statusText);const o=new Set,a=await n.json();if(null==a?.data)return;let c;for(const e of Object.values(a.data))if(null!=e)if(null==c){c={data:{projects:e}};for(const t of e.nodes)o.add(t.id)}else for(const t of e.nodes)o.has(t.id)||(o.add(t.id),c.data.projects.nodes.push(t));return null!=c&&(c.data.projects.total_count=o.size),c}async getWorkspaceRepositories(e,t){let i=`(first: ${t?.count??ui.CL}`;t?.cursor?i+=`, after: "${t.cursor}"`:t?.page&&(i+=`, page: ${t.page}`),i+=")";const r=await this.fetch({query:`\n\t\t\t\t\tquery getWorkspaceRepos {\n\t\t\t\t\t\tproject (id: "${e}") {\n\t\t\t\t\t\t\tprovider_data {\n\t\t\t\t\t\t\t\trepositories ${i} {\n\t\t\t\t\t\t\t\t\ttotal_count\n\t\t\t\t\t\t\t\t\tpage_info {\n\t\t\t\t\t\t\t\t\t\tend_cursor\n\t\t\t\t\t\t\t\t\t\thas_next_page\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\trepository_id\n\t\t\t\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\t\t\t\tprovider_project_name\n\t\t\t\t\t\t\t\t\t\tprovider_organization_id\n\t\t\t\t\t\t\t\t\t\tprovider_organization_name\n\t\t\t\t\t\t\t\t\t\turl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!r.ok)throw A.Yd.error(void 0,`Getting workspace repos failed: (${r.status}) ${r.statusText}`),new Error(r.statusText);return await r.json()}async createWorkspace(e){if(!e.name||!e.description||!e.provider)return;if(!(e.provider!==ui.Xu.Azure||e.azureOrganizationName&&e.azureProjectName))return;if((e.provider===ui.Xu.GitHubEnterprise||e.provider===ui.Xu.GitLabSelfHosted)&&!e.hostUrl)return;const t=await this.fetch({query:`\n\t\t\t\t\tmutation createWorkspace {\n\t\t\t\t\t\tcreate_project(\n\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t  \t\ttype: GK_PROJECT\n\t\t\t\t\t\t  \t\tname: "${e.name}"\n\t\t\t\t\t\t  \t\tdescription: "${e.description}"\n\t\t\t\t\t\t  \t\tprovider: ${e.provider}\n\t\t\t\t\t\t\t\t${e.hostUrl?`host_url: "${e.hostUrl}"`:""}\n\t\t\t\t\t\t\t\t${e.azureOrganizationName?`azure_organization_id: "${e.azureOrganizationName}"`:""}\n\t\t\t\t\t\t\t\t${e.azureProjectName?`azure_project: "${e.azureProjectName}"`:""}\n\t\t\t\t\t\t  \t\tprofile_id: "shared-services"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\torganization {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprovider\n\t\t\t\t\t\t\tazure_organization_id\n\t\t\t\t\t\t\tazure_project\n\t\t\t\t\t\t\trepo_relation\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!t.ok)throw A.Yd.error(void 0,`Creating workspace failed: (${t.status}) ${t.statusText}`),new Error(t.statusText);return await t.json()}async deleteWorkspace(e){const t=await this.fetch({query:`\n\t\t\t\t\tmutation deleteWorkspace {\n\t\t\t\t\t\tdelete_project(\n\t\t\t\t\t\t\tid: "${e}"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!t.ok)throw A.Yd.error(void 0,`Deleting workspace failed: (${t.status}) ${t.statusText}`),new Error(t.statusText);const i=await t.json();if(i?.errors?.some((e=>e.message.includes("permission")))){const e="Adding repositories to workspace failed: you do not have permission to delete this workspace";throw A.Yd.error(void 0,e),new Error(e)}return i}async addReposToWorkspace(e,t){if(0===t.length)return;let i="[";i+=t.map((e=>`{ provider_organization_id: "${e.owner}", name: "${e.repoName}" }`)).join(","),i+="]";let r=1;const s=t.map((e=>`Repository${r++}: repository(provider_organization_id: "${e.owner}", name: "${e.repoName}") {\n\t\t\tid\n\t\t\tname\n\t\t\trepository_id\n\t\t\tprovider\n\t\t\tprovider_project_name\n\t\t\tprovider_organization_id\n\t\t\tprovider_organization_name\n\t\t\turl\n\t\t}`)).join(","),n=await this.fetch({query:`\n\t\t\t\t\tmutation addReposToWorkspace {\n\t\t\t\t\t\tadd_repositories_to_project(\n\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\tproject_id: "${e}",\n\t\t\t\t\t\t\t\trepositories: ${i}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tprovider_data {\n\t\t\t\t\t\t\t\t${s}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!n.ok)throw A.Yd.error(void 0,`Adding repositories to workspace failed: (${n.status}) ${n.statusText}`),new Error(n.statusText);const o=await n.json();if(o?.errors?.some((e=>e.message.includes("permission")))){const e="Adding repositories to workspace failed: you do not have permission to add repositories to this workspace";throw A.Yd.error(void 0,e),new Error(e)}return o}async removeReposFromWorkspace(e,t){if(0===t.length)return;let i="[";i+=t.map((e=>`{ provider_organization_id: "${e.owner}", name: "${e.repoName}" }`)).join(","),i+="]";const r=await this.fetch({query:`\n\t\t\t\t\tmutation removeReposFromWorkspace {\n\t\t\t\t\t\tremove_repositories_from_project(\n\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\tproject_id: "${e}",\n\t\t\t\t\t\t\t\trepositories: ${i}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`});if(!r.ok)throw A.Yd.error(void 0,`Removing repositories from workspace failed: (${r.status}) ${r.statusText}`),new Error(r.statusText);const s=await r.json();if(s?.errors?.some((e=>e.message.includes("permission")))){const e="Adding repositories to workspace failed: you do not have permission to remove repositories from this workspace";throw A.Yd.error(void 0,e),new Error(e)}return s}async fetch(e,t){return this.connection.fetchApiGraphQL("api/projects/graphql",e,t)}}mi([(0,G.cM)()],WorkspacesApi.prototype,"getWorkspace",1),mi([(0,G.cM)()],WorkspacesApi.prototype,"getWorkspaces",1),mi([(0,G.cM)()],WorkspacesApi.prototype,"getWorkspaceRepositories",1),mi([(0,G.cM)()],WorkspacesApi.prototype,"createWorkspace",1),mi([(0,G.cM)()],WorkspacesApi.prototype,"deleteWorkspace",1),mi([(0,G.cM)()],WorkspacesApi.prototype,"addReposToWorkspace",1),mi([(0,G.cM)()],WorkspacesApi.prototype,"removeReposFromWorkspace",1);var gi=Object.defineProperty,fi=Object.getOwnPropertyDescriptor,wi=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?fi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&gi(t,i,n),n};class WorkspacesService{constructor(e,t){this.container=e,this.connection=t,this._workspacesApi=new WorkspacesApi(this.container,this.connection),this._workspacesPathProvider=new WorkspacesWebPathMappingProvider,this._currentWorkspaceId=yi(),this._currentWorkspaceAutoAddSetting=r.workspace.getConfiguration("gitkraken")?.get("workspaceAutoAddSetting")??"disabled",this._disposable=r.Disposable.from(e.subscription.onDidChange(this.onSubscriptionChanged,this))}_onDidResetWorkspaces=new r.EventEmitter;get onDidResetWorkspaces(){return this._onDidResetWorkspaces.event}_cloudWorkspaces;_disposable;_localWorkspaces;_workspacesApi;_workspacesPathProvider;_currentWorkspaceId;_currentWorkspaceAutoAddSetting="disabled";_currentWorkspace;dispose(){this._disposable.dispose()}get currentWorkspaceId(){return this._currentWorkspaceId}get currentWorkspace(){return this._currentWorkspace}onSubscriptionChanged(e){null!=e.current.account&&e.current.account.id===e.previous?.account?.id&&e.current.state===e.previous?.state||this.resetWorkspaces({cloud:!0})}async loadCloudWorkspaces(e=!1){const t=await this.container.subscription.getSubscription();if(null==t?.account)return{cloudWorkspaces:void 0,cloudWorkspaceInfo:"Please sign in to use cloud workspaces."};const i=[];let r;try{const t=await this._workspacesApi.getWorkspaces({includeRepositories:!e,includeOrganizations:!0});r=t?.data?.projects?.nodes}catch{return{cloudWorkspaces:void 0,cloudWorkspaceInfo:"Failed to load cloud workspaces."}}let s=0;const n=t.state===st.jc.FreeInPreviewTrial||t.state===st.jc.FreePlusInTrial||t.state===st.jc.Paid;if(r?.length)for(const t of r){const r=await this._workspacesPathProvider.getCloudWorkspaceCodeWorkspacePath(t.id);if(!n&&t.organization?.id){s+=1;continue}const o=t.provider_data?.repositories?.nodes;let a=null!=o?o.map((e=>({...e,workspaceId:t.id}))):o;null!=a||e||(a=[]),i.push(new ui.CH(this.container,t.id,t.name,t.organization?.id,t.provider,t.repo_relation,null!=this._currentWorkspaceId&&this._currentWorkspaceId===t.id,t.provider===ui._N.Azure?{organizationId:t.azure_organization_id??void 0,project:t.azure_project??void 0}:void 0,a,r))}return{cloudWorkspaces:i,cloudWorkspaceInfo:s>0?`${s} shared workspaces hidden - upgrade to GitKraken Pro to access.`:void 0}}async loadLocalWorkspaces(){const e=[],t=(await this._workspacesPathProvider.getLocalWorkspaceData())?.workspaces||{};for(const i of Object.values(t))e.push(new ui.qP(this.container,i.localId,i.name,i.repositories.map((e=>({localPath:e.localPath,name:e.localPath.split(/[\\/]/).pop()??"unknown",workspaceId:i.localId}))),null!=this._currentWorkspaceId&&this._currentWorkspaceId===i.localId));return{localWorkspaces:e,localWorkspaceInfo:void 0}}getCloudWorkspace(e){return this._cloudWorkspaces?.find((t=>t.id===e))}getLocalWorkspace(e){return this._localWorkspaces?.find((t=>t.id===e))}async getWorkspaces(e){const t={cloudWorkspaces:[],localWorkspaces:[],cloudWorkspaceInfo:void 0,localWorkspaceInfo:void 0};if(null==this._cloudWorkspaces||e?.force){const i=await this.loadCloudWorkspaces(e?.excludeRepositories);this._cloudWorkspaces=i.cloudWorkspaces,t.cloudWorkspaceInfo=i.cloudWorkspaceInfo}if(null==this._localWorkspaces||e?.force){const e=await this.loadLocalWorkspaces();this._localWorkspaces=e.localWorkspaces,t.localWorkspaceInfo=e.localWorkspaceInfo}const i=[...this._cloudWorkspaces??[],...this._localWorkspaces??[]].find((e=>e.current));return null!=i&&(this._currentWorkspaceId=i.id,this._currentWorkspace=i),t.cloudWorkspaces=this._cloudWorkspaces??[],t.localWorkspaces=this._localWorkspaces??[],t}async getCloudWorkspaceRepositories(e){const t=await this._workspacesApi.getWorkspaceRepositories(e),i=t?.data?.project?.provider_data?.repositories?.nodes;return i?.map((t=>({...t,workspaceId:e})))??[]}async addMissingCurrentWorkspaceRepos(e){if(null==this._currentWorkspaceId)return;let t=[...this._cloudWorkspaces??[],...this._localWorkspaces??[]].find((e=>e.current));if(null==t)try{const e=await this._workspacesApi.getWorkspace(this._currentWorkspaceId,{includeRepositories:!0});if(null==e?.data?.project)return;const i=e.data.project.provider_data?.repositories?.nodes,s=null!=i?i.map((t=>({...t,workspaceId:e.data.project.id}))):[];t=new ui.CH(this.container,e.data.project.id,e.data.project.name,e.data.project.organization?.id,e.data.project.provider,e.data.project.repo_relation,!0,e.data.project.provider===ui._N.Azure?{organizationId:e.data.project.azure_organization_id??void 0,project:e.data.project.azure_project??void 0}:void 0,s,r.workspace.workspaceFile?.fsPath)}catch{return}if(!e?.force&&"disabled"===this._currentWorkspaceAutoAddSetting||!t?.current)return;if(this._currentWorkspace=t,!(await t.getRepositoryDescriptors())?.length)return;const i=[...(await this.resolveWorkspaceRepositoriesByName(t,{resolveFromPath:!0,usePathMapping:!0})).values()].map((e=>e.repository)),s=new Map;for(const e of this.container.git.openRepositories)s.set(e.id,e);const n=i.filter((e=>!s.has(e.id)));if(0===n.length)return void(e?.force&&r.window.showInformationMessage("No new repositories found to add.",{modal:!0}));let o=[];if(!e?.force&&"prompt"===this._currentWorkspaceAutoAddSetting){const e={title:"Add..."},t={title:"Change Auto-Add Behavior..."},i={title:"Cancel",isCloseAffordance:!0},s=await r.window.showInformationMessage("New repositories found in the linked GitKraken workspace. Would you like to add them to the current VS Code workspace?",e,t,i);if(null==s||s===i)return;if(s===t)return void this.chooseCodeWorkspaceAutoAddSetting({current:!0})}if(e?.force||"prompt"===this._currentWorkspaceAutoAddSetting){const e=await(0,hi.rf)("Add Repositories to Workspace","Choose which repositories to add to the current workspace",n);if(0===e.length)return;o=e.map((e=>e.repoPath))}else o=n.map((e=>e.path));if(0===o.length)return;const a=r.workspace.workspaceFolders?.length??0;r.window.withProgress({location:r.ProgressLocation.Notification,title:"Adding new repositories from linked cloud workspace...",cancellable:!1},(()=>new Promise((e=>{r.workspace.updateWorkspaceFolders(a,0,...o.map((e=>({uri:r.Uri.file(e)})))),e(!0)}))))}resetWorkspaces(e){(e?.cloud??1)&&(this._cloudWorkspaces=void 0),(e?.local??1)&&(this._localWorkspaces=void 0),this._onDidResetWorkspaces.fire()}async getCloudWorkspaceRepoPath(e,t){return this._workspacesPathProvider.getCloudWorkspaceRepoPath(e,t)}async updateCloudWorkspaceRepoLocalPath(e,t,i){await this._workspacesPathProvider.writeCloudWorkspaceRepoDiskPathToMap(e,t,i)}async getRepositoriesInParentFolder(e){const t=(await r.window.showOpenDialog({title:"Choose a folder containing repositories for this workspace",canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0];if(null!=t&&!e?.isCancellationRequested)try{return this.container.git.findRepositories(t,{cancellation:e,depth:1,silent:!0})}catch(e){return}}async locateAllCloudWorkspaceRepos(e,t){const i=this.getCloudWorkspace(e);if(null==i)return;const r=await i.getRepositoryDescriptors();if(null==r||0===r.length)return;const s=await this.getRepositoriesInParentFolder(t);if(null!=s&&0!==s.length&&!t?.isCancellationRequested)for(const i of(await this.resolveWorkspaceRepositoriesByName(e,{cancellation:t,repositories:s})).values())if(await this.locateWorkspaceRepo(e,i.descriptor,i.repository),t?.isCancellationRequested)return}async locateWorkspaceRepo(e,t,i){let s;if(null==i||i instanceof r.Uri){let e=i;if(null==e&&(e=(await r.window.showOpenDialog({title:`Choose a location for ${t.name}`,canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0]),null==e)return;if(s=await this.container.git.getOrOpenRepository(e,{closeOnOpen:!0,detectNested:!1}),null==s)return}else s=i;const n=s.uri.fsPath,o=await s.getRemotes(),a=[];for(const e of o){const t=e.provider?.url({type:ii.J.Repo});null!=t&&a.push(t)}for(const e of a)await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:e},n);const c=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);let l;null==l&&"cloud"===c?.type&&(l=c.provider),null!=t.id&&null!=t.url&&null!=l&&(await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:t.url,repoInfo:{provider:l,owner:t.provider_organization_id,repoName:t.name}},n),await this.updateCloudWorkspaceRepoLocalPath(e,t.id,n))}async createCloudWorkspace(e){const t=r.window.createInputBox();t.title="Create Cloud Workspace";const i=r.window.createQuickPick();i.title="Create Cloud Workspace";const s={GitHub:ui.Xu.GitHub,"GitHub Enterprise":ui.Xu.GitHubEnterprise};t.ignoreFocusOut=!0;const n=[];let o,a,c,l,h,u;if(null!=e?.repos&&e.repos.length>0){for(const t of e.repos){if(0===(await t.getRemotes({filter:e=>"github.com"===e.domain})).length)return void await r.window.showErrorMessage("Only GitHub is supported for this operation. Please ensure all open repositories are hosted on GitHub.",{modal:!0})}u=ui.Xu.GitHub}try{if(o=await new Promise((e=>{n.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty name for the workspace"}))),t.placeholder="Please enter a name for the new workspace",t.prompt="Enter your workspace name",t.show()})),!o)return;if(a=await new Promise((e=>{n.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty description for the workspace"}))),t.value="",t.title="Create Workspace",t.placeholder="Please enter a description for the new workspace",t.prompt="Enter your workspace description",t.show()})),!a)return;if(null==u&&(u=await new Promise((e=>{n.push(i.onDidHide((()=>e(void 0))),i.onDidAccept((()=>{0!==i.activeItems.length&&e(s[i.activeItems[0].label])}))),i.placeholder="Please select a provider for the new workspace",i.items=Object.keys(s).map((e=>({label:e}))),i.canSelectMany=!1,i.show()}))),!u)return;if((u==ui.Xu.GitHubEnterprise||u==ui.Xu.GitLabSelfHosted)&&(c=await new Promise((e=>{n.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty host URL for the workspace"}))),t.value="",t.placeholder="Please enter a host URL for the new workspace",t.prompt="Enter your workspace host URL",t.show()})),!c))return;if(u==ui.Xu.Azure){if(l=await new Promise((e=>{n.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty organization name for the workspace"}))),t.value="",t.placeholder="Please enter an organization name for the new workspace",t.prompt="Enter your workspace organization name",t.show()})),!l)return;if(h=await new Promise((e=>{n.push(t.onDidHide((()=>e(void 0))),t.onDidAccept((()=>{const i=t.value.trim();i?e(i):t.validationMessage="Please enter a non-empty project name for the workspace"}))),t.value="",t.placeholder="Please enter a project name for the new workspace",t.prompt="Enter your workspace project name",t.show()})),!h)return}}finally{t.dispose(),i.dispose(),n.forEach((e=>{e.dispose()}))}const d={name:o,description:a,provider:u,hostUrl:c,azureOrganizationName:l,azureProjectName:h};let p;try{const e=await this._workspacesApi.createWorkspace(d);p=e?.data?.create_project}catch{return}if(null!=p){null==this._cloudWorkspaces&&(this._cloudWorkspaces=[]);const t=await this._workspacesPathProvider.getCloudWorkspaceCodeWorkspacePath(p.id);this._cloudWorkspaces?.push(new ui.CH(this.container,p.id,p.name,p.organization?.id,p.provider,p.repo_relation,null!=this._currentWorkspaceId&&this._currentWorkspaceId===p.id,p.provider===ui._N.Azure?{organizationId:p.azure_organization_id??void 0,project:p.azure_project??void 0}:void 0,[],t));const i=this.getCloudWorkspace(p.id);null!=i&&await this.addCloudWorkspaceRepos(i.id,{repos:e?.repos,suppressNotifications:!0})}}async deleteCloudWorkspace(e){const t=await r.window.showWarningMessage("Are you sure you want to delete this workspace? This cannot be undone.",{modal:!0},{title:"Confirm"},{title:"Cancel",isCloseAffordance:!0});if(null!=t&&"Cancel"!=t.title)try{const t=await this._workspacesApi.deleteWorkspace(e);t?.data?.delete_project?.id===e&&(this._cloudWorkspaces=this._cloudWorkspaces?.filter((t=>t.id!==e)))}catch(e){r.window.showErrorMessage(e.message)}}async filterReposForProvider(e,t){const i=[];for(const r of e){(await r.getRemotes({filter:e=>e.provider?.id===ui.Jv[t]})).length&&i.push(r)}return i}async filterReposForCloudWorkspace(e,t){const i=this.getCloudWorkspace(t)??this.getLocalWorkspace(t);if(null==i)return e;const r=[...(await i.getRepositoriesByName()).values()].map((e=>e.repository));return e.filter((e=>!r.find((t=>t.id===e.id))))}async addCloudWorkspaceRepos(e,t){const i=this.getCloudWorkspace(e);if(null==i)return;const s=[];let n=t?.repos;if(!t?.repos){let s=await this.filterReposForProvider(this.container.git.openRepositories,i.provider);s=await this.filterReposForCloudWorkspace(s,e);const o=[{label:"Choose repositories from a folder",description:void 0,choice:ui.Pv.ParentFolder}];s.length>0&&o.unshift({label:"Choose repositories from the current window",description:void 0,choice:ui.Pv.CurrentWindow}),o[0].picked=!0;const a=await r.window.showQuickPick(o,{placeHolder:"Choose repositories from the current window or a folder",ignoreFocusOut:!0});if(null==a)return;a.choice===ui.Pv.ParentFolder&&await r.window.withProgress({location:r.ProgressLocation.Notification,title:"Finding repositories to add to the workspace...",cancellable:!0},(async(n,o)=>{const a=await this.getRepositoriesInParentFolder(o);null!=a&&(0!==a.length?o.isCancellationRequested||(s=await this.filterReposForProvider(a,i.provider),0!==s.length?o.isCancellationRequested||(s=await this.filterReposForCloudWorkspace(s,e),0===s.length&&(t?.suppressNotifications||r.window.showInformationMessage("All possible repositories are already in this workspace.",{modal:!0}))):t?.suppressNotifications||r.window.showInformationMessage(`No matching repositories found for provider ${i.provider}.`,{modal:!0})):t?.suppressNotifications||r.window.showInformationMessage("No repositories found in the chosen folder.",{modal:!0}))}));const c=await(0,hi.rf)("Add Repositories to Workspace","Choose which repositories to add to the workspace",s);if(0===c.length)return;n=c.map((e=>e.repoPath))}if(null==n)return;for(const e of n){const t=e instanceof v._j?e:await this.container.git.getOrOpenRepository(r.Uri.file(e),{closeOnOpen:!0});if(null==t)continue;const i=vi(await t.getRemote("origin")||(await t.getRemotes())?.[0]);null!=i&&s.push({owner:i.owner,repoName:i.repoName,repo:t,url:i.url})}if(0===s.length)return;let o=[];const a=new Set((await i.getRepositoryDescriptors()).map((e=>e.id)));await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Adding repositories to workspace ${i.name}...`,cancellable:!1},(async()=>{try{const t=await this._workspacesApi.addReposToWorkspace(e,s.map((e=>({owner:e.owner,repoName:e.repoName}))));if(null==t?.data.add_repositories_to_project)return;o=Object.values(t.data.add_repositories_to_project.provider_data).filter((e=>null!=e)).map((t=>({...t,workspaceId:e})))}catch(e){return void r.window.showErrorMessage(e.message)}o.length>0&&i.addRepositories(o),o.length<s.length&&(o=(await i.getRepositoryDescriptors({force:!0})).filter((e=>!a.has(e.id))));for(const{repo:t,repoName:i,url:r}of s){const s=o.find((e=>e.name.toLowerCase()===i||e.url===r));null!=s&&await this.locateWorkspaceRepo(e,s,t)}}))}async removeCloudWorkspaceRepo(e,t){const i=this.getCloudWorkspace(e);if(null==i)return;const s=await r.window.showWarningMessage(`Are you sure you want to remove ${t.name} from this workspace? This cannot be undone.`,{modal:!0},{title:"Confirm"},{title:"Cancel",isCloseAffordance:!0});if(null!=s&&"Cancel"!=s.title)try{const r=await this._workspacesApi.removeReposFromWorkspace(e,[{owner:t.provider_organization_id,repoName:t.name}]);if(null==r?.data.remove_repositories_from_project)return;i.removeRepositories([t.name])}catch(e){r.window.showErrorMessage(e.message)}}async resolveWorkspaceRepositoriesByName(e,t){const i=new Map,s=e instanceof ui.CH||e instanceof ui.qP?e:this.getLocalWorkspace(e)??this.getCloudWorkspace(e);if(null==s)return i;const n=await s.getRepositoryDescriptors();if(null==n||0===n.length)return i;const o=t?.repositories??this.container.git.repositories,a=new Map,c=new Map;for(const e of o){if(t?.cancellation?.isCancellationRequested)break;if(c.set((0,le.AH)(e.uri.fsPath.toLowerCase()),e),s instanceof ui.CH){const t=await e.getRemotes();for(const i of t){const t=vi(i);null!=t&&a.set(`${t.provider}/${t.owner}/${t.repoName}`,e)}}}for(const e of n){let s=null,n=null;null==e.id?s=e.localPath:!0===t?.usePathMapping&&(s=await this.getMappedPathForCloudWorkspaceRepoDescriptor(e)),null!=s&&(n=c.get((0,le.AH)(s.toLowerCase()))),null==n&&null!=e.id&&null!=e.provider&&(n=a.get(`${e.provider.toLowerCase()}/${e.provider_organization_id.toLowerCase()}/${e.name.toLowerCase()}`)),null!=s&&null==n&&!0===t?.resolveFromPath&&(n=await this.container.git.getOrOpenRepository(r.Uri.file(s),{closeOnOpen:!0,force:!0})),null!=n&&i.set(e.name,{descriptor:e,repository:n})}return i}async saveAsCodeWorkspaceFile(e){const t=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);if(null==t)return;const i=await t.getRepositoryDescriptors();if(null==i)return;const s=await t.getRepositoriesByName();if(0===s.size)return void r.window.showErrorMessage("No repositories in this workspace could be found locally. Please locate at least one repository.",{modal:!0});const n=[];for(const e of s.values()){const t=e.repository;t.virtual||n.push(t.uri.fsPath)}if(n.length<i.length){const e=await r.window.showWarningMessage("Some repositories in this workspace could not be located locally. Do you want to continue?",{modal:!0},{title:"Continue"},{title:"Cancel",isCloseAffordance:!0});if(null==e||"Cancel"==e.title)return}const o=await r.window.showSaveDialog({defaultUri:r.Uri.file(`${t.name}.code-workspace`),filters:{"Code Workspace":["code-workspace"]},title:"Choose a location for the new code workspace file"});if(null==o)return;const a=await this.chooseCodeWorkspaceAutoAddSetting();if(!await this._workspacesPathProvider.writeCodeWorkspaceFile(o,n,{workspaceId:e,workspaceAutoAddSetting:a}))return void r.window.showErrorMessage("Could not create the new workspace file. Check logs for details");t.setLocalPath(o.fsPath);const c={title:"Cancel",isCloseAffordance:!0},l=await r.window.showInformationMessage(`Workspace file created for ${t.name}. Would you like to open it now?`,{modal:!0},{title:"Open in New Window",location:"newWindow"},{title:"Open in Current Window",location:"currentWindow"},c);null!=l&&l!==c&&this.openCodeWorkspaceFile(e,{location:l.location})}async chooseCodeWorkspaceAutoAddSetting(e){if(e?.current&&(null==r.workspace.workspaceFile||null==this._currentWorkspaceId||null==this._currentWorkspaceAutoAddSetting))return"disabled";const t=e?.current?this._currentWorkspaceAutoAddSetting:"disabled",i=[{label:"Add on Workspace (Window) Open",description:"enabled"===this._currentWorkspaceAutoAddSetting?"current":void 0,option:"enabled"},{label:"Prompt on Workspace (Window) Open",description:"prompt"===this._currentWorkspaceAutoAddSetting?"current":void 0,option:"prompt"},{label:"Never",description:"disabled"===this._currentWorkspaceAutoAddSetting?"current":void 0,option:"disabled"}],s=await r.window.showQuickPick(i,{placeHolder:"Choose the behavior of automatically adding missing repositories to the current VS Code workspace",title:"Linked Workspace: Automatically Add Repositories"});if(null==s?.option)return t;const n=s.option;if(e?.current&&null!=r.workspace.workspaceFile){if(!await this._workspacesPathProvider.updateCodeWorkspaceFileSettings(r.workspace.workspaceFile,{workspaceAutoAddSetting:n}))return this._currentWorkspaceAutoAddSetting;this._currentWorkspaceAutoAddSetting=n}return n}async openCodeWorkspaceFile(e,t){const i=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);if(null==i)return;if(null==i.localPath){const t=await r.window.showInformationMessage(`The workspace file for ${i.name} has not been created. Would you like to create it now?`,{modal:!0},{title:"Create"},{title:"Cancel",isCloseAffordance:!0});if(null==t||"Cancel"==t.title)return;return void this.saveAsCodeWorkspaceFile(e)}let s="currentWindow"===t?.location?"currentWindow":"newWindow";if(!t?.location){const e=await r.window.showInformationMessage(`How would you like to open the workspace file for ${i.name}?`,{modal:!0},{title:"Open in New Window",location:"newWindow"},{title:"Open in Current Window",location:"currentWindow"},{title:"Cancel",isCloseAffordance:!0});if(null==e||"Cancel"==e.title)return;s=e.location??"newWindow"}if(!await this._workspacesPathProvider.confirmCloudWorkspaceCodeWorkspaceFilePath(i.id)){await this._workspacesPathProvider.removeCloudWorkspaceCodeWorkspaceFilePath(i.id),i.setLocalPath(void 0);const e=await r.window.showInformationMessage(`The workspace file for ${i.name} could not be found. Would you like to locate it now?`,{modal:!0},{title:"Locate"},{title:"Cancel",isCloseAffordance:!0});if("Locate"!==e?.title)return;const t=(await r.window.showOpenDialog({defaultUri:r.Uri.file(i.localPath),canSelectFiles:!0,canSelectFolders:!1,canSelectMany:!1,filters:{"Code Workspace":["code-workspace"]},title:"Locate the workspace file"}))?.[0]?.fsPath;if(null==t)return;await this._workspacesPathProvider.writeCloudWorkspaceCodeWorkspaceFilePathToMap(i.id,t),i.setLocalPath(t)}(0,V.ic)(r.Uri.file(i.localPath),{location:s})}async getMappedPathForCloudWorkspaceRepoDescriptor(e){let t=await this.getCloudWorkspaceRepoPath(e.workspaceId,e.id);return null==t&&(t=(await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:e.url??void 0,repoInfo:{repoName:e.name,provider:e.provider??void 0,owner:e.provider_organization_id}}))?.[0]),t}}function vi(e){if(null==e.provider?.owner)return;const t=e.provider.path.split("/").pop();return null!=t?{provider:e.provider.id.toLowerCase(),owner:e.provider.owner.toLowerCase(),repoName:t.toLowerCase(),url:e.provider.url({type:ii.J.Repo})}:void 0}function yi(){return r.workspace.getConfiguration("gitkraken")?.get("workspaceId")}wi([(0,G.cM)()],WorkspacesService.prototype,"getWorkspaces",1),wi([(0,G.cM)()],WorkspacesService.prototype,"addMissingCurrentWorkspaceRepos",1),wi([(0,G.cM)()],WorkspacesService.prototype,"resetWorkspaces",1),wi([(0,G.cM)({args:{1:!1,2:!1}})],WorkspacesService.prototype,"locateWorkspaceRepo",1),wi([(0,G.cM)({args:!1})],WorkspacesService.prototype,"createCloudWorkspace",1),wi([(0,G.cM)()],WorkspacesService.prototype,"deleteCloudWorkspace",1),wi([(0,G.cM)({args:{1:!1}})],WorkspacesService.prototype,"addCloudWorkspaceRepos",1),wi([(0,G.cM)({args:{1:!1}})],WorkspacesService.prototype,"removeCloudWorkspaceRepo",1),wi([(0,G.cM)({args:{1:!1}})],WorkspacesService.prototype,"resolveWorkspaceRepositoriesByName",1),wi([(0,G.cM)()],WorkspacesService.prototype,"saveAsCodeWorkspaceFile",1),wi([(0,G.cM)()],WorkspacesService.prototype,"chooseCodeWorkspaceAutoAddSetting",1),wi([(0,G.cM)()],WorkspacesService.prototype,"openCodeWorkspaceFile",1);var bi=Object.defineProperty,Ci=Object.getOwnPropertyDescriptor,Ai=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ci(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&bi(t,i,n),n};class StatusBarController{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_cancellation;_disposable;_selectedSha;_statusBarBlame;_statusBarMode;dispose(){this.clearBlame(),this._statusBarBlame?.dispose(),this._statusBarMode?.dispose(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(C.D.changed(e,"mode")){const t=C.D.get("mode.statusBar.enabled")?this.container.mode:void 0;if(t?.statusBarItemName){const i="left"!==C.D.get("mode.statusBar.alignment")?r.StatusBarAlignment.Right:r.StatusBarAlignment.Left;C.D.changed(e,"mode.statusBar.alignment")&&this._statusBarMode?.alignment!==i&&(this._statusBarMode?.dispose(),this._statusBarMode=void 0),this._statusBarMode=this._statusBarMode??r.window.createStatusBarItem("gitlens.mode",i,i===r.StatusBarAlignment.Right?999:1),this._statusBarMode.name="GitLens Modes",this._statusBarMode.command=n.Gh.SwitchMode,this._statusBarMode.text=t.statusBarItemName,this._statusBarMode.tooltip=new r.MarkdownString(`**${t.statusBarItemName}** ${n.NE.Dash} ${t.description}\n\n---\n\nClick to Switch GitLens Modes`,!0),this._statusBarMode.accessibilityInformation={label:`GitLens Mode: ${t.statusBarItemName}\nClick to Switch GitLens Modes`},this._statusBarMode.show()}else this._statusBarMode?.dispose(),this._statusBarMode=void 0}if(C.D.changed(e,"statusBar"))if(C.D.get("statusBar.enabled")){const t="left"!==C.D.get("statusBar.alignment")?r.StatusBarAlignment.Right:r.StatusBarAlignment.Left;C.D.changed(e,"statusBar.alignment")&&this._statusBarBlame?.alignment!==t&&(this._statusBarBlame?.dispose(),this._statusBarBlame=void 0),this._statusBarBlame=this._statusBarBlame??r.window.createStatusBarItem("gitlens.blame",t,t===r.StatusBarAlignment.Right?1e3:0),this._statusBarBlame.name="GitLens Current Line Blame",this._statusBarBlame.command=C.D.get("statusBar.command"),C.D.changed(e,"statusBar.enabled")&&this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this))}else C.D.changed(e,"statusBar.enabled")&&(this.container.lineTracker.unsubscribe(this),this._statusBarBlame?.dispose(),this._statusBarBlame=void 0)}onActiveLinesChanged(e){let t=!(C.D.get("statusBar.reduceFlicker")&&"selection"===e.reason&&(e.pending||null!=e.selections));if(!e.pending&&null!=e.selections){const i=this.container.lineTracker.getState(e.selections[0].active);if(null!=i?.commit)return void this.updateBlame(e.editor,i);t=!0}t?this.clearBlame():this._statusBarBlame?.text.startsWith("$(git-commit)")&&(this._statusBarBlame.text=`$(watch)${this._statusBarBlame.text.substring(13)}`)}clearBlame(){this._selectedSha=void 0,this._cancellation?.cancel(),this._statusBarBlame?.hide()}async updateBlame(e,t){const i=C.D.get("statusBar");if(!i.enabled||null==this._statusBarBlame||!(0,V.PH)(e))return this._cancellation?.cancel(),void(this._selectedSha=void 0);const{commit:s}=t;if(null==s)return void this._cancellation?.cancel();if(this._selectedSha===s.sha&&!s.isUncommitted)return void(this._statusBarBlame?.text.startsWith("$(watch)")&&(this._statusBarBlame.text=`$(git-commit)${this._statusBarBlame.text.substring(8)}`));const o=(0,ce.UH)();this._selectedSha=s.sha,this._cancellation?.cancel(),this._cancellation=new r.CancellationTokenSource;const a=this._cancellation.token;let c;switch(i.command){case Qe.ef.CopyRemoteCommitUrl:c="Click to Copy Remote Commit URL";break;case Qe.ef.CopyRemoteFileUrl:this._statusBarBlame.command=n.Gh.CopyRemoteFileUrl,c="Click to Copy Remote File Revision URL";break;case Qe.ef.DiffWithPrevious:this._statusBarBlame.command=n.Gh.DiffLineWithPrevious,c="Click to Open Line Changes with Previous Revision";break;case Qe.ef.DiffWithWorking:this._statusBarBlame.command=n.Gh.DiffLineWithWorking,c="Click to Open Line Changes with Working File";break;case Qe.ef.OpenCommitOnRemote:c="Click to Open Commit on Remote";break;case Qe.ef.OpenFileOnRemote:c="Click to Open Revision on Remote";break;case Qe.ef.RevealCommitInView:c="Click to Reveal Commit in the Side Bar";break;case Qe.ef.ShowCommitsInView:c="Click to Search for Commit";break;case Qe.ef.ShowQuickCommitDetails:c="Click to Show Commit";break;case Qe.ef.ShowQuickCommitFileDetails:c="Click to Show Commit (file)";break;case Qe.ef.ShowQuickCurrentBranchHistory:c="Click to Show Branch History";break;case Qe.ef.ShowQuickFileHistory:c="Click to Show File History";break;case Qe.ef.ToggleCodeLens:c="Click to Toggle Git CodeLens";break;case Qe.ef.ToggleFileBlame:c="Click to Toggle File Blame";break;case Qe.ef.ToggleFileChanges:null!=s.file&&(this._statusBarBlame.command=(0,at._N)({title:"Toggle File Changes",command:n.Gh.ToggleFileChanges,arguments:[s.file.uri,{type:"changes",context:{sha:s.sha,only:!1,selection:!1}}]})),c="Click to Toggle File Changes";break;case Qe.ef.ToggleFileChangesOnly:null!=s.file&&(this._statusBarBlame.command=(0,at._N)({title:"Toggle File Changes",command:n.Gh.ToggleFileChanges,arguments:[s.file.uri,{type:"changes",context:{sha:s.sha,only:!0,selection:!1}}]})),c="Click to Toggle File Changes";break;case Qe.ef.ToggleFileHeatmap:c="Click to Toggle File Heatmap"}this._statusBarBlame.tooltip=new r.MarkdownString(`Loading... \n\n---\n\n${c}`),this._statusBarBlame.accessibilityInformation={label:`${this._statusBarBlame.text}\n${c}`};const l=await this.container.git.getBestRemotesWithProviders(s.repoPath),[h]=l,u=C.D.get("defaultDateFormat"),d=Oe.i.has(i.format,"tips")||Oe.i.has(i.tooltipFormat,"tips")?this.container.git.getBranchesAndTagsTipsFn(s.repoPath):void 0,p=!s.isUncommitted&&h?.hasRichIntegration()&&i.pullRequests.enabled&&(Oe.i.has(i.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")||Oe.i.has(i.tooltipFormat,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState"));function m(e,t,r){e.text=`$(git-commit) ${Oe.i.fromTemplate(i.format,s,{dateFormat:null===i.dateFormat?u:i.dateFormat,getBranchAndTagTips:t,messageTruncateAtNewLine:!0,pullRequest:r,pullRequestPendingMessage:"PR $(watch)",remotes:l})}`,e.accessibilityInformation={label:`${e.text}\n${c}`}}async function g(e,t,r,n){return(0,Ee.nN)(e,s,s.getGitUri(),s.lines[0].line-1,{autolinks:!0,cancellation:a,dateFormat:u,format:i.tooltipFormat,getBranchAndTagTips:t,pullRequest:r,pullRequests:p&&null!=r,remotes:l,timeout:n})}let f;if(p){const e=100;f=await(0,Be.Zo)(s.getAssociatedPullRequest(h),a,e,(async t=>{if("timedout"!==t.reason||null==this._statusBarBlame)return;A.Yd.debug(o,`${n.NE.Dot} pull request query took too long (over ${e} ms)`);const[i,r]=await Promise.allSettled([d,t.value]);if(a.isCancellationRequested||null==this._statusBarBlame)return;const s=(0,he.Sb)(r),l=(0,he.Sb)(i);A.Yd.debug(o,`${n.NE.Dot} pull request query completed; updating...`),m(this._statusBarBlame,l,s);const h=await g(this.container,l,s);null!=h&&(this._statusBarBlame.tooltip=h.appendMarkdown(`\n\n---\n\n${c}`))}))}const w=null!=d?await d:void 0;if(a.isCancellationRequested)return;m(this._statusBarBlame,w,f?.value),this._statusBarBlame.show();const v=await(0,Be.Zo)(g(this.container,w,f?.value,20),a,100,(async e=>{if("timedout"!==e.reason||null==this._statusBarBlame)return;const t=await e.value;null!=t&&(this._statusBarBlame.tooltip=t.appendMarkdown(`\n\n---\n\n${c}`))}));a.isCancellationRequested||v.paused||null==v.value||(this._statusBarBlame.tooltip=v.value.appendMarkdown(`\n\n---\n\n${c}`))}}Ai([(0,G.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],StatusBarController.prototype,"onActiveLinesChanged",1),Ai([(0,G.fF)({args:{0:!1,1:e=>e.commit?.sha}})],StatusBarController.prototype,"updateBlame",1);var Si=Object.defineProperty,Pi=Object.getOwnPropertyDescriptor,ki=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Pi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Si(t,i,n),n};const Di=Object.create(null),Ri=[];class KeyboardScope{_mapping;constructor(e){this._mapping=e;for(const e in this._mapping)this._mapping[e]=this._mapping[e]??Di;Ri.push(this._mapping)}async dispose(){const e=Ri.indexOf(this._mapping),t=(0,ce.UH)();(0,ce.lH)(t,` • index=${e}`),e===Ri.length-1?(Ri.pop(),await this.updateKeyCommandsContext(Ri[Ri.length-1])):Ri.splice(e,1)}_paused=!0;get paused(){return this._paused}async clearKeyCommand(e){const t=(0,ce.UH)(),i=Ri[Ri.length-1];i===this._mapping&&null!=i[e]?(i[e]=void 0,await(0,ne.v)(`${n.m1}:key:${e}`,!1)):(0,ce.lH)(t," • skipped")}async pause(e){if(this._paused)return;this._paused=!0;const t=Object.keys(this._mapping).reduce(((t,i)=>(t[i]=null==e||e.includes(i)?void 0:this._mapping[i],t)),Object.create(null));await this.updateKeyCommandsContext(t)}async resume(){this._paused&&(this._paused=!1,await this.updateKeyCommandsContext(this._mapping))}async start(){await this.resume()}async setKeyCommand(e,t){const i=(0,ce.UH)(),r=Ri[Ri.length-1];if(r!==this._mapping)return void(0,ce.lH)(i," • skipped");const s=Boolean(r[e]);r[e]=t,s||await(0,ne.v)(`${n.m1}:key:${e}`,!0)}async updateKeyCommandsContext(e){await Promise.all(n.XP.map((t=>(0,ne.v)(`${n.m1}:key:${t}`,Boolean(e?.[t])))))}}ki([(0,G.cM)({args:!1,prefix:e=>`${e.prefix}[${Ri.length}]`})],KeyboardScope.prototype,"dispose",1),ki([(0,G.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${Ri.length}](${t})`})],KeyboardScope.prototype,"clearKeyCommand",1),ki([(0,G.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],KeyboardScope.prototype,"pause",1),ki([(0,G.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],KeyboardScope.prototype,"resume",1),ki([(0,G.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${Ri.length}](${t})`})],KeyboardScope.prototype,"setKeyCommand",1);class Keyboard{_disposable;constructor(){const e=n.XP.map((e=>(0,at.xR)(`${n.m1}.key.${e}`,(()=>this.execute(e)),this)));this._disposable=r.Disposable.from(...e)}dispose(){this._disposable.dispose()}createScope(e){return new KeyboardScope({...e})}async beginScope(e){const t=this.createScope(e);return await t.start(),t}async execute(e){const t=(0,ce.UH)();if(Ri.length)try{let i=Ri[Ri.length-1][e];if("function"==typeof i&&(i=await i()),"function"!=typeof i?.onDidPressKey)return void(0,ce.lH)(t," • skipped, no callback");await i.onDidPressKey(e)}catch(e){A.Yd.error(e,t)}else(0,ce.lH)(t," • skipped, no mappings")}}ki([(0,G.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${Ri.length}](${void 0===t?"":Object.keys(t).join(",")})`})],Keyboard.prototype,"createScope",1),ki([(0,G.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${Ri.length}](${void 0===t?"":Object.keys(t).join(",")})`})],Keyboard.prototype,"beginScope",1),ki([(0,G.cM)()],Keyboard.prototype,"execute",1);class TelemetryService{constructor(e){this.container=e,e.context.subscriptions.push(C.D.onDidChange((t=>{C.D.changed(t,"telemetry.enabled")&&this.ensureTelemetry(e)})),r.env.onDidChangeTelemetryEnabled((()=>this.ensureTelemetry(e)))),this.ensureTelemetry(e)}_enabled=!1;get enabled(){return this._enabled}provider;globalAttributes=new Map;eventQueue=[];dispose(){this.provider?.dispose(),this.provider=void 0}_initializationTimer;ensureTelemetry(e){if(this._enabled=r.env.isTelemetryEnabled&&C.D.get("telemetry.enabled",void 0,!0),!this._enabled)return null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.eventQueue.length=0,this.provider?.dispose(),void(this.provider=void 0);null==this._initializationTimer&&(this._initializationTimer=setTimeout((()=>this.initializeTelemetry(e)),7500))}async initializeTelemetry(e){if(null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.provider=new((await Promise.resolve().then(i.bind(i,200))).OpenTelemetryProvider)({env:e.env,extensionId:e.id,extensionVersion:e.version,machineId:r.env.machineId,sessionId:r.env.sessionId,language:r.env.language,platform:(0,Ke.Xf)(),vscodeEdition:r.env.appName,vscodeHost:r.env.appHost,vscodeRemoteName:r.env.remoteName??"",vscodeShell:r.env.shell,vscodeUIKind:String(r.env.uiKind),vscodeVersion:r.version},(0,Re.Nx)(),e.debugging),this.eventQueue.length){const e=[...this.eventQueue];this.eventQueue.length=0;for(const{type:t,name:i,data:r,global:s}of e)"sendEvent"===t&&(this.provider.setGlobalAttributes(s),this.provider.sendEvent(i,_i(r)))}this.provider.setGlobalAttributes(this.globalAttributes)}sendEvent(e,t,i,r){this._enabled&&(null!=this.provider?this.provider.sendEvent(e,_i(t),i,r):this.eventQueue.push({type:"sendEvent",name:e,data:t,global:new Map([...this.globalAttributes]),startTime:i??Date.now(),endTime:r??Date.now()}))}startEvent(e,t,i){if(this._enabled){if(null!=this.provider){const r=this.provider.startEvent(e,_i(t),i);return{dispose:()=>r?.end()}}return i=i??Date.now(),{dispose:()=>this.sendEvent(e,t,i,Date.now())}}}setGlobalAttribute(e,t){null==t?this.globalAttributes.delete(e):this.globalAttributes.set(e,t),this.provider?.setGlobalAttributes(this.globalAttributes)}setGlobalAttributes(e){for(const[t,i]of Object.entries(e))null==i?this.globalAttributes.delete(t):this.globalAttributes.set(t,i);this.provider?.setGlobalAttributes(this.globalAttributes)}deleteGlobalAttribute(e){this.globalAttributes.delete(e),this.provider?.setGlobalAttributes(this.globalAttributes)}}function _i(e){if(null==e)return;const t=Object.create(null);for(const[i,r]of Object.entries(e))null!=r&&(t[i]=r);return t}class UsageTracker{constructor(e,t){this.container=e,this.storage=t}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}dispose(){}get(e){return this.storage.get("usages")?.[e]}async reset(e){let t=this.storage.get("usages");if(null!=t){if(null==e)return await this.storage.delete("usages"),void this._onDidChange.fire(void 0);t=(0,Nt.iC)(t,e,void 0),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:void 0})}}async track(e){let t=this.storage.get("usages");null==t&&(t=Object.create(null));const i=Date.now();let r=t[e];null==r?(r={count:0,firstUsedAt:i,lastUsedAt:i},t[e]=r):(r.count!==Number.MAX_SAFE_INTEGER&&r.count++,r.lastUsedAt=i),this.container.telemetry.sendEvent("usage/track",{"usage.key":e,"usage.count":r.count}),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:r})}}const Ti=/\b(g(?:it)?\b\s*)\b(branch|checkout|cherry-pick|fetch|grep|log|merge|pull|push|rebase|reset|revert|show|stash|status|tag)\b/gi,Fi=/\b((?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ,~^:?*[\\]+[^ ./])\b/gi,$i=/^[0-9a-f]{7,40}\.\.\.?[0-9a-f]{7,40}$/,Ii=/^[0-9a-f]{7,40}$/;class GitTerminalLinkProvider{constructor(e){this.container=e,this.disposable=r.window.registerTerminalLinkProvider(this)}disposable;dispose(){this.disposable.dispose()}async provideTerminalLinks(e){if(0===e.line.trim().length)return[];const t=this.container.git.highlander?.path;if(!t)return[];const i=C.D.get("terminalLinks.showDetailsView"),r=[];let s,o;const a=new RegExp(Fi,Fi.flags),c=new RegExp(Ti,Ti.flags);let l;for(;;){if(l=c.exec(e.line),null!=l){const[e,t,i]=l,s={startIndex:l.index+t.length,length:i.length,tooltip:"Open in Git Command Palette",command:{command:n.Gh.GitCommands,args:{command:i}}};r.push(s)}if(l=a.exec(e.line),null==l)break;const[h,d]=l;if("HEAD"===d.toUpperCase()){const e={startIndex:l.index,length:d.length,tooltip:"Show HEAD",command:{command:n.Gh.ShowQuickBranchHistory,args:{branch:"HEAD",repoPath:t}}};r.push(e);continue}void 0===s&&(s=await this.container.git.getBranches(t));let p=s.values.find((e=>e.name===d));if(null==p&&(p=s.values.find((e=>(0,u.S3)(e.name)===d))),null!=p){const e={startIndex:l.index,length:d.length,tooltip:"Show Branch",command:{command:n.Gh.ShowQuickBranchHistory,args:{repoPath:t,branch:p.name}}};r.push(e);continue}void 0===o&&(o=await this.container.git.getTags(t));const m=o.values.find((e=>e.name===d));if(null==m){if(Ii.test(d)){if(await this.container.git.validateReference(t,d)){const e={startIndex:l.index,length:d.length,tooltip:"Show Commit",command:i?{command:n.Gh.ShowInDetailsView,args:{repoPath:t,refs:[d]}}:{command:n.Gh.ShowQuickCommit,args:{repoPath:t,sha:d}}};r.push(e)}}else if($i.test(d)){const e={startIndex:l.index,length:d.length,tooltip:"Show Commits",command:{command:n.Gh.GitCommands,args:{command:"log",state:{repo:t,reference:(0,f.xB)(d,t,{refType:"revision"})}}}};r.push(e)}}else{const e={startIndex:l.index,length:d.length,tooltip:"Show Tag",command:{command:n.Gh.ShowQuickBranchHistory,args:{repoPath:t,tag:m.name}}};r.push(e)}}return r}handleTerminalLink(e){r.commands.executeCommand(e.command.command,e.command.args)}}var xi=Object.defineProperty,Oi=Object.getOwnPropertyDescriptor,Ei=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Oi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&xi(t,i,n),n};class LineTracker{_onDidChangeActiveLines=new r.EventEmitter;get onDidChangeActiveLines(){return this._onDidChangeActiveLines.event}_disposable;_editor;_state=new Map;dispose(){for(const e of this._subscriptions.keys())this.unsubscribe(e)}onActiveTextEditorChanged(e){e!==this._editor&&(null==e||(0,V.PH)(e))&&(this._editor=e,this._selections=Wi(e?.selections),this.notifyLinesChanged("editor"))}onTextEditorSelectionChanged(e){if(this._editor!==e.textEditor&&!(0,V.PH)(e.textEditor))return;const t=Wi(e.selections);this._editor===e.textEditor&&this.includes(t)||(this._editor=e.textEditor,this._selections=t,this.notifyLinesChanged(this._editor===e.textEditor?"selection":"editor"))}getState(e){return this._state.get(e)}resetState(e){null==e?this._state.clear():this._state.delete(e)}setState(e,t){this._state.set(e,t)}_selections;get selections(){return this._selections}includes(e,t){if("number"!=typeof e)return Bi(e,this._selections);if(null==this._selections||0===this._selections.length)return!1;const i=e,r=t?.activeOnly??!0;for(const e of this._selections)if(i===e.active||!r&&(e.anchor>=i&&i>=e.active||e.active>=i&&i>=e.anchor))return!0;return!1}refresh(){this.notifyLinesChanged("editor")}_subscriptions=new Map;subscribed(e){return this._subscriptions.has(e)}subscribe(e,t){const i=(0,ce.UH)(),s={dispose:()=>this.unsubscribe(e)},n=0===this._subscriptions.size;let o=this._subscriptions.get(e);return null==o?(o=[t],this._subscriptions.set(e,o)):o.push(t),n?((0,ce.lH)(i," • starting line tracker..."),this._disposable=r.Disposable.from(r.window.onDidChangeActiveTextEditor((0,pe.Ds)(this.onActiveTextEditorChanged,0),this),r.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this),this.onStart?.()??{dispose:()=>{}}),queueMicrotask((()=>this.onActiveTextEditorChanged(r.window.activeTextEditor)))):(0,ce.lH)(i," • already started..."),s}unsubscribe(e){const t=this._subscriptions.get(e);if(null!=t){this._subscriptions.delete(e);for(const e of t)e.dispose();0===this._subscriptions.size&&(this._fireLinesChangedDebounced?.cancel(),this._disposable?.dispose(),this._disposable=void 0)}}_suspended=!1;get suspended(){return this._suspended}resume(e){(e?.force||this._suspended)&&(this._suspended=!1,this.onResume?.(),this.notifyLinesChanged("editor"))}suspend(e){!e?.force&&this._suspended||(this._suspended=!0,this.onSuspend?.(),this.notifyLinesChanged("editor"))}fireLinesChanged(e){this._onDidChangeActiveLines.fire(e)}_fireLinesChangedDebounced;notifyLinesChanged(e){"editor"===e&&this.resetState();const t={editor:this._editor,selections:this.selections,reason:e};null!=t.selections?(null==this._fireLinesChangedDebounced&&(this._fireLinesChangedDebounced=(0,pe.Ds)((e=>{e.editor===r.window.activeTextEditor&&Bi(e.selections,Wi(e.editor?.selections))&&this.fireLinesChanged(e)}),250)),this._fireLinesChangedDebounced.pending?.()||this.fireLinesChanged({...t,pending:!0}),this._fireLinesChangedDebounced(t)):queueMicrotask((()=>{t.editor===r.window.activeTextEditor&&(this._fireLinesChangedDebounced?.cancel(),this.fireLinesChanged(t))}))}}function Bi(e,t){if(null==e&&null==t)return!0;if(null==e||null==t||e.length!==t.length)return!1;let i;return e.every(((e,r)=>(i=t[r],e.active===i.active&&e.anchor===i.anchor)))}function Wi(e){return e?.map((e=>({active:e.active.line,anchor:e.anchor.line})))}Ei([(0,G.fF)({args:!1,singleLine:!0})],LineTracker.prototype,"subscribe",1),Ei([(0,G.fF)({args:!1,singleLine:!0})],LineTracker.prototype,"unsubscribe",1),Ei([(0,G.fF)()],LineTracker.prototype,"resume",1),Ei([(0,G.fF)()],LineTracker.prototype,"suspend",1);var Mi=Object.defineProperty,Ni=Object.getOwnPropertyDescriptor,Li=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ni(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Mi(t,i,n),n};class GitLineTracker extends LineTracker{constructor(e){super(),this.container=e}async fireLinesChanged(e){let t=!1;this.suspended||e.pending||null==e.selections||null==e.editor||(t=await this.updateState(e.selections,e.editor)),super.fireLinesChanged(t?e:{...e,selections:void 0,suspended:this.suspended})}_subscriptionOnlyWhenActive;onStart(){return this.onResume(),r.Disposable.from({dispose:()=>this.onSuspend()},this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))}onResume(){null==this._subscriptionOnlyWhenActive&&(this._subscriptionOnlyWhenActive=this.container.tracker.onDidChangeContent(this.onContentChanged,this))}onSuspend(){this._subscriptionOnlyWhenActive?.dispose(),this._subscriptionOnlyWhenActive=void 0}onBlameStateChanged(e){this.notifyLinesChanged("editor")}onContentChanged(e){e.contentChanges.some((e=>this.selections?.some((t=>e.range.end.line>=t.active&&t.active>=e.range.start.line||e.range.start.line>=t.active&&t.active>=e.range.end.line))))&&this.notifyLinesChanged("editor")}onDirtyIdleTriggered(e){const t=C.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||this.resume()}onDirtyStateChanged(e){e.dirty?this.suspend():this.resume({force:!0})}async updateState(e,t){const i=(0,ce.UH)();if(!this.includes(e))return(0,ce.lH)(i,` ${n.NE.Dot} lines no longer match`),!1;const r=await this.container.tracker.getOrAdd(t.document);if(!r.isBlameable)return(0,ce.lH)(i,` ${n.NE.Dot} document is not blameable`),!1;if(1===e.length){const s=await this.container.git.getBlameForLine(r.uri,e[0].active,t?.document);if(null==s)return(0,ce.lH)(i,` ${n.NE.Dot} blame failed`),!1;null!=s.commit&&s.commit.file,this.setState(s.line.line-1,{commit:s.commit})}else{const s=await this.container.git.getBlame(r.uri,t.document);if(null==s)return(0,ce.lH)(i,` ${n.NE.Dot} blame failed`),!1;for(const t of e){const e=s.lines[t.active],i=s.commits.get(e.sha);null!=i&&i.file,null==i?this.resetState(t.active):this.setState(t.active,{commit:i})}}return this.includes(e)?r.isBlameable?(t.document.isDirty&&r.setForceDirtyStateChangeOnNextDocumentChange(),!0):((0,ce.lH)(i,` ${n.NE.Dot} document is not blameable`),!1):((0,ce.lH)(i,` ${n.NE.Dot} lines no longer match`),!1)}}Li([(0,G.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}, blameable=${e.blameable}`}})],GitLineTracker.prototype,"onBlameStateChanged",1),Li([(0,G.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}`}})],GitLineTracker.prototype,"onContentChanged",1),Li([(0,G.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}`}})],GitLineTracker.prototype,"onDirtyIdleTriggered",1),Li([(0,G.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}, dirty=${e.dirty}`}})],GitLineTracker.prototype,"onDirtyStateChanged",1),Li([(0,G.fF)({args:{0:e=>e?.map((e=>e.active)).join(","),1:e=>e.document.uri.toString(!0)},exit:!0})],GitLineTracker.prototype,"updateState",1);var Ui=i(4043);class DeepLinkService{constructor(e){this.container=e,this._context={state:Ui.mg.Idle},this._disposables.push(e.uri.onDidReceiveUri((async e=>{const t=(0,Ui.lX)(e);if(null!=t&&this._context.state===Ui.mg.Idle){if(this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories,!t.type||!t.mainId&&!t.remoteUrl&&!t.repoPath&&!t.targetId)return r.window.showErrorMessage("Unable to resolve link"),void A.Yd.warn(`Unable to resolve link - missing basic properties: ${e.toString()}`);if(!Object.values(Ui._n).includes(t.type))return r.window.showErrorMessage("Unable to resolve link"),void A.Yd.warn(`Unable to resolve link - unknown link type: ${e.toString()}`);if(t.type!==Ui._n.Repository&&null==t.targetId&&null==t.mainId)return r.window.showErrorMessage("Unable to resolve link"),void A.Yd.warn(`Unable to resolve link - no main/target id provided: ${e.toString()}`);if(t.type===Ui._n.Comparison&&null==t.secondaryTargetId)return r.window.showErrorMessage("Unable to resolve link"),void A.Yd.warn(`Unable to resolve link - no secondary target id provided: ${e.toString()}`);this.setContextFromDeepLink(t,e.toString()),await this.processDeepLink()}})));const t=this.container.storage.get("deepLinks:pending");null!=t&&(this.container.storage.delete("deepLinks:pending"),this.processPendingDeepLink(t))}_disposables=[];_context;_onDeepLinkProgressUpdated=new r.EventEmitter;dispose(){r.Disposable.from(...this._disposables).dispose()}resetContext(){this._context={state:Ui.mg.Idle,url:void 0,mainId:void 0,repo:void 0,remoteUrl:void 0,remote:void 0,secondaryRemote:void 0,repoPath:void 0,targetId:void 0,secondaryTargetId:void 0,secondaryRemoteUrl:void 0,targetType:void 0,targetSha:void 0}}setContextFromDeepLink(e,t){this._context={...this._context,mainId:e.mainId,targetType:e.type,url:t,remoteUrl:e.remoteUrl,repoPath:e.repoPath,targetId:e.targetId,secondaryTargetId:e.secondaryTargetId,secondaryRemoteUrl:e.secondaryRemoteUrl}}async processPendingDeepLink(e){if(null==e.url)return;const t=(0,Ui.lX)(r.Uri.parse(e.url));if(null==t)return;this._context={state:Ui.mg.CloneOrAddRepo},this.setContextFromDeepLink(t,e.url);let i=Ui.WA.OpenRepo;if(this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories,null!=e.repoPath){const t=r.Uri.parse(e.repoPath);try{const e=await this.container.git.getOrOpenRepository(t,{detectNested:!1});null!=e&&(this._context.repo=e,i=Ui.WA.RepoOpened)}catch{}}queueMicrotask((()=>{this.processDeepLink(i)}))}async getShaForBranch(e){const{repo:t,remote:i,secondaryRemote:r}=this._context;if(!t)return;let s=e;null==i||s.startsWith(`${i.name}/`)?null==r||s.startsWith(`${r.name}/`)||(s=`${r.name}/${s}`):s=`${i.name}/${s}`;let n=await t.getBranch(s);if(null!=n?.sha)return n.sha;if(e.includes(":")){const[i,r]=e.split(":");if(null!=i&&null!=s){const[e,o]=i.split("/");if(null!=e&&null!=o){const i=await t.getRemotes();for(const o of i)if(o.provider?.owner===e&&(s=`${o.name}/${r}`,n=await t.getBranch(s),null!=n?.sha))return n.sha}}}return n=await t.getBranch(e),null!=n?.sha?n.sha:void 0}async getShaForTag(e){const{repo:t}=this._context;if(!t)return;const i=await t.getTag(e);return null!=i?.sha?i.sha:void 0}async getShaForCommit(e){const{repo:t}=this._context;if(t)return await this.container.git.validateReference(t.path,e)?e:void 0}async getShasForComparison(e,t){const i=await this.getComparisonRefSha(e);if(null==i)return;const r=await this.getComparisonRefSha(t);return null!=r?[i,r]:void 0}async getComparisonRefSha(e){if(""===e)return e;if((0,f.D3)(e))return this.getShaForCommit(e);const t=e.toLocaleLowerCase();if(!t.startsWith("refs/tags/")&&!t.startsWith("tags/")){const t=await this.getShaForBranch(e);if(null!=t)return t}const i=await this.getShaForTag(e);return null!=i?i:this.getShaForCommit(e)}async getShasForTargets(){const{repo:e,targetType:t,targetId:i,secondaryTargetId:r}=this._context;if(null!=e&&t!==Ui._n.Repository&&null!=i){if(t===Ui._n.Branch)return this.getShaForBranch(i);if(t===Ui._n.Tag)return this.getShaForTag(i);if(t===Ui._n.Commit)return this.getShaForCommit(i);if(t===Ui._n.Comparison){if(null==r)return;return this.getShasForComparison(i,r)}}}async showOpenTypePrompt(e){const t=[{title:"Open Folder",action:"folder"},{title:"Open Workspace",action:"workspace"}];null!=this._context.remoteUrl&&t.push({title:"Clone",action:"clone"}),e?.includeCurrent&&t.push({title:"Use Current Window",action:"current"}),t.push({title:"Cancel",isCloseAffordance:!0});const i=await r.window.showInformationMessage(e?.customMessage??"No matching repository found. Please choose an option.",{modal:!0},...t);return i?.action}async showOpenLocationPrompt(e){const t=[{title:"Open",action:"currentWindow"},{title:"Open in New Window",action:"newWindow"}];"workspace"!==e&&t.push({title:"Add to Workspace",action:"addToWorkspace"}),t.push({title:"Cancel",isCloseAffordance:!0});const i=await r.window.showInformationMessage(`Please choose an option to open the repository ${"clone"===e?"after cloning":e}.`,{modal:!0},...t);return i?.action}async showFetchPrompt(){const e=await r.window.showInformationMessage("The link target(s) couldn't be found. Would you like to fetch from the remote?",{modal:!0},{title:"Fetch",action:!0},{title:"Cancel",isCloseAffordance:!0});return e?.action||!1}async showAddRemotePrompt(e,t){let i;const s=await r.window.showInformationMessage(`Unable to find a remote for '${e}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});return"Yes"!==s?.title||(i=await r.window.showInputBox({prompt:"Enter a name for the remote",validateInput:e=>e?t.includes(e)?"A remote with that name already exists":void 0:"A name is required"})),i}async processDeepLink(e=Ui.WA.DeepLinkEventFired){let t="",i=e;if(i===Ui.WA.DeepLinkCancelled&&this._context.state===Ui.mg.Idle)return;let s=[];const{targetType:o}=this._context;for(queueMicrotask((()=>{r.window.withProgress({cancellable:!0,location:r.ProgressLocation.Notification,title:`Opening ${(0,Ui.$k)(o??Ui._n.Repository)} link...`},((e,t)=>(e.report({increment:0}),new Promise((i=>{t.onCancellationRequested((()=>{queueMicrotask((()=>this.processDeepLink(Ui.WA.DeepLinkCancelled))),i()})),this._onDeepLinkProgressUpdated.event((({message:t,increment:r})=>{e.report({message:t,increment:r}),100===r&&i()}))})))))}));;){this._context.state=Ui.eT[this._context.state][i];const{state:e,mainId:o,repo:a,url:c,remoteUrl:l,secondaryRemoteUrl:h,remote:u,secondaryRemote:d,repoPath:p,targetId:m,secondaryTargetId:g,targetSha:w,secondaryTargetSha:v,targetType:y}=this._context;switch(this._onDeepLinkProgressUpdated.fire(Ui.gn[e]),e){case Ui.mg.Idle:return i===Ui.WA.DeepLinkErrored&&(r.window.showErrorMessage("Unable to resolve link"),A.Yd.warn(`Unable to resolve link - ${t}: ${c}`)),void this.resetContext();case Ui.mg.AccountCheck:if(null==y){i=Ui.WA.DeepLinkErrored,t="No link type provided.";break}if(!Ui.l5.includes(y)){i=Ui.WA.AccountCheckPassed;break}if(!await(0,Pt.wz)(`Opening ${(0,Ui.$k)(y)} links requires a GitKraken account.`,this.container)){i=Ui.WA.DeepLinkErrored,t="Account required to open link";break}i=Ui.WA.AccountCheckPassed;break;case Ui.mg.PlanCheck:if(null==y){i=Ui.WA.DeepLinkErrored,t="No link type provided.";break}if(!Ui.VE.includes(y)){i=Ui.WA.PlanCheckPassed;break}if(!await(0,Pt.eb)(`A paid plan is required to open ${(0,Ui.$k)(y)} links.`,this.container)){i=Ui.WA.DeepLinkErrored,t="Paid plan required to open link";break}i=Ui.WA.PlanCheckPassed;break;case Ui.mg.TypeMatch:switch(y){case Ui._n.Draft:i=Ui.WA.LinkIsDraftType;break;case Ui._n.Workspace:i=Ui.WA.LinkIsWorkspaceType;break;default:i=Ui.WA.LinkIsRepoType}break;case Ui.mg.RepoMatch:case Ui.mg.AddedRepoMatch:{if(!o&&!l&&!p){i=Ui.WA.DeepLinkErrored,t="No repository id, remote url or path was provided.";break}let r,n=o,a=l;null!=r&&(this._context.remoteUrl=r.remote?.url??void 0,a=r.remote?.url,this._context.mainId=r.initialCommitSha??void 0,n=r.initialCommitSha);let c="",h="";null!=a&&([,c,h]=(0,lt.Sk)(a));for(const e of this.container.git.repositories){if(null!=p&&(0,le.AH)(e.path.toLowerCase())===(0,le.AH)(p.toLowerCase())){this._context.repo=e,i=Ui.WA.RepoMatched;break}if(null!=c&&null!=h){const t=await e.getRemotes({filter:e=>e.matches(c,h)});if(t.length>0){this._context.repo=e,this._context.remote=t[0],i=Ui.WA.RepoMatched;break}}if(null!=n&&"-"!==n&&await this.container.git.validateReference(e.path,n)){this._context.repo=e,i=Ui.WA.RepoMatched;break}}if(!this._context.repo&&e===Ui.mg.RepoMatch&&(s=await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:a}),s.length>0)){for(const e of this.container.git.repositories)if(s.some((t=>(0,le.AH)(e.path.toLowerCase())===(0,le.AH)(t.toLowerCase())))){this._context.repo=e,i=Ui.WA.RepoMatched;break}if(null==this._context.repo){i=Ui.WA.RepoMatchedInLocalMapping;break}}this._context.repo||(e===Ui.mg.RepoMatch?i=Ui.WA.RepoMatchFailed:(i=Ui.WA.DeepLinkErrored,t="No matching repository found."));break}case Ui.mg.CloneOrAddRepo:{if(!o&&!l&&!p){i=Ui.WA.DeepLinkErrored,t="Missing repository id, remote url and path.";break}let e,n,a;if(s.length>0){if(e=await r.window.showQuickPick([...s,"Choose a different location"],{placeHolder:"Matching repository found. Choose a location to open it."}),null==e){i=Ui.WA.DeepLinkCancelled;break}"Choose a different location"!==e&&(a=r.Uri.file(e),n="folder")}if(null==n&&(n=await this.showOpenTypePrompt({customMessage:"Choose a different location"===e?"Please choose an option to open the repository":void 0})),!n){i=Ui.WA.DeepLinkCancelled;break}const c=await this.showOpenLocationPrompt(n);if(!c){i=Ui.WA.DeepLinkCancelled;break}if(null==a&&(a=(await r.window.showOpenDialog({title:`Choose a ${"workspace"===n?"workspace":"folder"} to ${"clone"===n?"clone the repository to":"open the repository"}`,canSelectFiles:"workspace"===n,canSelectFolders:"workspace"!==n,canSelectMany:!1,..."workspace"===n&&{filters:{Workspaces:["code-workspace"]}}}))?.[0]),!a){i=Ui.WA.DeepLinkCancelled;break}if(null!=a&&null!=l&&"clone"===n){let e;try{e=await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Cloning repository for link: ${this._context.url}}`},(async()=>this.container.git.clone(l,a?.fsPath??"")))}catch{i=Ui.WA.DeepLinkErrored,t="Unable to clone repository";break}if(!e){i=Ui.WA.DeepLinkErrored,t="Unable to clone repository";break}a=r.Uri.file(e)}if("current"!==n&&"workspace"!==n&&!s.includes(a.fsPath)){const e=await this.container.git.getOrOpenRepository(a,{closeOnOpen:!0,detectNested:!1});null!=e&&await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:l},e.uri.fsPath)}"addToWorkspace"===c&&(r.workspace.workspaceFolders?.length||0)>1?i=Ui.WA.OpenRepo:(await this.container.storage.store("deepLinks:pending",{url:this._context.url,repoPath:a.toString()}),i=Ui.WA.DeepLinkStored),(0,V.ic)(a,{location:c});break}case Ui.mg.OpeningRepo:return void this._disposables.push((0,de.IH)(this.container.git.onDidChangeRepositories)((()=>{queueMicrotask((()=>this.processDeepLink(Ui.WA.RepoAdded)))})));case Ui.mg.RemoteMatch:if(p&&a&&!l&&!h){i=Ui.WA.RemoteMatchUnneeded;break}if(!a||!l&&!h){i=Ui.WA.DeepLinkErrored,t="Missing repository or remote url.";break}if(l&&!u){const e=await a.getRemotes({filter:e=>e.url===l});e.length>0&&(this._context.remote=e[0])}if(h&&!d){const e=await a.getRemotes({filter:e=>e.url===h});e.length>0&&(this._context.secondaryRemote=e[0])}i=l&&!this._context.remote||h&&!this._context.secondaryRemote?Ui.WA.RemoteMatchFailed:Ui.WA.RemoteMatched;break;case Ui.mg.AddRemote:{if(!a||!l&&!h){i=Ui.WA.DeepLinkErrored,t="Missing repository or remote url.";break}let e,r;if(l&&!u&&(e=await this.showAddRemotePrompt(l,(await a.getRemotes()).map((e=>e.name))),e)){try{await a.addRemote(e,l,{fetch:!0})}catch{i=Ui.WA.DeepLinkErrored,t="Failed to add remote.";break}if([this._context.remote]=await a.getRemotes({filter:e=>e.url===l}),!this._context.remote){i=Ui.WA.DeepLinkErrored,t="Failed to add remote.";break}}if(h&&!d&&(r=await this.showAddRemotePrompt(h,(await a.getRemotes()).map((e=>e.name))),r)){try{await a.addRemote(r,h,{fetch:!0})}catch{i=Ui.WA.DeepLinkErrored,t="Failed to add remote.";break}if([this._context.secondaryRemote]=await a.getRemotes({filter:e=>e.url===h}),!this._context.secondaryRemote){i=Ui.WA.DeepLinkErrored,t="Failed to add remote.";break}}this._context.secondaryRemote&&!this._context.remote&&(this._context.remote=this._context.secondaryRemote),e||r?this._context.remote||(i=Ui.WA.DeepLinkErrored,t="Failed to add remote."):i=Ui.WA.DeepLinkCancelled,i=Ui.WA.RemoteAdded;break}case Ui.mg.TargetMatch:case Ui.mg.FetchedTargetMatch:if(!a||!y){i=Ui.WA.DeepLinkErrored,t="Missing repository or target type.";break}if(y===Ui._n.Repository){i=Ui.WA.TargetMatched;break}if(y===Ui._n.Comparison?[this._context.targetSha,this._context.secondaryTargetSha]=await this.getShasForTargets()??[]:this._context.targetSha=await this.getShasForTargets(),null==this._context.targetSha||null==this._context.secondaryTargetSha&&y===Ui._n.Comparison){e===Ui.mg.TargetMatch&&null!=u?i=Ui.WA.TargetMatchFailed:(i=Ui.WA.DeepLinkErrored,t=`No matching ${null==w?"target":"secondary target"} found.`);break}i=y===Ui._n.Comparison?Ui.WA.TargetsMatched:Ui.WA.TargetMatched;break;case Ui.mg.Fetch:if(!a||!u){i=Ui.WA.DeepLinkErrored,t="Missing repository or remote.";break}if(!await this.showFetchPrompt()){i=Ui.WA.DeepLinkCancelled;break}try{await a.fetch({remote:u.name,progress:!0})}catch{i=Ui.WA.DeepLinkErrored,t="Error fetching remote.";break}if(d&&d.name!==u.name)try{await a.fetch({remote:d.name,progress:!0})}catch{}i=Ui.WA.TargetFetched;break;case Ui.mg.OpenGraph:if(!a||!y){i=Ui.WA.DeepLinkErrored,t="Missing repository or target type.";break}if(y===Ui._n.Repository){await(0,at.P0)(n.Gh.ShowInCommitGraph,a),i=Ui.WA.DeepLinkResolved;break}if(!w){i=Ui.WA.DeepLinkErrored,t=`Cannot find target ${y} in repo.`;break}await(0,at.P0)(n.Gh.ShowInCommitGraph,{ref:(0,f.xB)(w,a.path)}),i=Ui.WA.DeepLinkResolved;break;case Ui.mg.OpenComparison:if(!a){i=Ui.WA.DeepLinkErrored,t="Missing repository.";break}if(null==m||null==g||null==w||null==v){i=Ui.WA.DeepLinkErrored,t="Missing target or secondary target.";break}await this.container.searchAndCompareView.compare(a.path,""===g||(0,f.D3)(g)?g:{label:g,ref:v},""===m||(0,f.D3)(m)?m:{label:m,ref:w}),i=Ui.WA.DeepLinkResolved;break;case Ui.mg.OpenDraft:if(!m){i=Ui.WA.DeepLinkErrored,t="Missing cloud patch id.";break}await(0,at.P0)(n.Gh.OpenCloudPatch,{id:m,patchId:g}),i=Ui.WA.DeepLinkResolved;break;case Ui.mg.OpenWorkspace:if(!o){i=Ui.WA.DeepLinkErrored,t="Missing workspace id.";break}await this.container.workspacesView.revealWorkspaceNode(o,{select:!0,focus:!0,expand:!0}),i=Ui.WA.DeepLinkResolved;break;default:i=Ui.WA.DeepLinkErrored,t="Unknown state."}}}async copyDeepLinkUrl(e,t,i,s){const n=await("string"==typeof e?null!=t?this.generateDeepLinkUrl(e,t,i,s):this.generateDeepLinkUrl(e):this.generateDeepLinkUrl(e,t));await r.env.clipboard.writeText(n.toString())}async generateDeepLinkUrl(e,t,i,s){let n,o,a;const c=C.D.get("deepLinks.schemeOverride"),l=c?!0===c?r.env.uriScheme:c:"vscode";let h="";if("dev"===this.container.env?h="dev.":"staging"===this.container.env&&(h="staging."),null==t&&"string"==typeof e)return new URL(`https://${h}gitkraken.dev/link/workspaces/${e}`);const d="string"!=typeof e?e.repoPath:e,p=await this.container.git.getUniqueRepositoryId(d)??"-";if("string"!=typeof e)switch(e.refType){case"branch":n=Ui._n.Branch,o=e.remote?(0,u.S3)(e.name):e.name;break;case"revision":n=Ui._n.Commit,o=e.ref;break;case"tag":n=Ui._n.Tag,o=e.name}let m;null!=i&&null!=s&&(n=Ui._n.Comparison,o=i.label??i.ref,a=s.label??s.ref),m=n===Ui._n.Comparison?`/${n}/${a}...${o}`:null!=n&&n!==Ui._n.Repository?`/${n}/${o}`:"";const g=new URL(`${l}://${this.container.context.extension.id}/link/${Ui._n.Repository}/${p}${m}`);null!=t&&g.searchParams.set("url",t);return new URL(`https://${h}gitkraken.dev/link/${encodeURIComponent(Buffer.from(g.href).toString("base64"))}`)}}var Gi=Object.defineProperty,Hi=Object.getOwnPropertyDescriptor;class UriService{constructor(e){this.container=e,this._disposable=r.window.registerUriHandler(this)}_disposable;_onDidReceiveAuthenticationUri=new r.EventEmitter;get onDidReceiveAuthenticationUri(){return this._onDidReceiveAuthenticationUri.event}_onDidReceiveUri=new r.EventEmitter;get onDidReceiveUri(){return this._onDidReceiveUri.event}dispose(){this._disposable.dispose()}handleUri(e){const[,t]=e.path.split("/");t!==It?this._onDidReceiveUri.fire(e):this._onDidReceiveAuthenticationUri.fire(e)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Hi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&Gi(t,i,n)})([(0,G.cM)({args:{0:e=>e.with({query:""}).toString(!0)}})],UriService.prototype,"handleUri",1);var Vi=i(8583),qi=Object.defineProperty,ji=Object.getOwnPropertyDescriptor;class RepositoriesSubscribeableNode extends Vi.C{splatted=!0;constructor(e){super("repositories",h.Wj,e)}async getSplattedChild(){return null==this.children&&await this.getChildren(),1===this.children?.length?this.children[0]:void 0}etag(){return(0,pe.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}subscribe(){return r.Disposable.from((0,de.D$)(this.view.container.git.onDidChangeRepositories,this.onRepositoriesChanged,this),(0,de.D$)(this.view.container.subscription.onDidChange,this.onSubscriptionChanged,this))}onRepositoriesChanged(e){this.triggerChange(!0)}onSubscriptionChanged(e){e.current.plan!==e.previous.plan&&this.triggerChange(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ji(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&qi(t,i,n)})([(0,G.fF)()],RepositoriesSubscribeableNode.prototype,"subscribe",1);var Qi=i(5010),Yi=i(9165),zi=i(5517),Ki=i(2610),Ji=i(4481),Xi=i(6586);class BranchTrackingStatusFilesNode extends ai.Re{constructor(e,t,i,r,s){super("tracking-status-files",h.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.status=r,this.direction=s,this.updateContext({branch:i,branchStatus:r,branchStatusUpstreamType:s}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get repoPath(){return this.status.repoPath}async getChildren(){const e=await this.view.container.git.getLog(this.repoPath,{limit:0,ref:(0,f.oI)(this.status.upstream,this.branch.ref,"behind"===this.direction?"...":"..")});let t;null!=e?(await Promise.allSettled((0,ae.UI)((0,ae.hX)(e.commits.values(),(e=>null==e.files)),(e=>e.ensureFullDetails()))),t=[...(0,ae.VS)(e.commits.values(),(e=>e.files?.map((t=>({...t,commit:e})))??[]))]):t=[],t.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const i=(0,ot.vM)(t,(e=>e.path));let r=Object.values(i).map((e=>new Xi.q(this.view,this,e[e.length-1],this.repoPath,e.map((e=>e.commit)),this.direction)));if("list"!==this.view.config.files.layout){const e=(0,ot.Mo)(r,(e=>e.uri.relativePath.split("/")),((...e)=>(0,le.AH)((0,le.RQ)(...e))),this.view.config.files.compact);r=new Ji.Y(this.view,this,e,this.repoPath,"",void 0,!1).getChildren()}else r.sort(((e,t)=>e.priority-t.priority||(0,E.dm)(e.label,t.label)));return r}async getTreeItem(){const e=await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}${"behind"===this.direction?"..":"..."}`),t=e?.changedFiles??0,i=`${(0,E._6)("file",t)} changed`,s=new r.TreeItem(i,r.TreeItemCollapsibleState.Collapsed);return s.id=this.id,s.contextValue=ai.Td.BranchStatusFiles,s}}var Zi=i(2925),er=i(21),tr=i(4741),ir=Object.defineProperty,rr=Object.getOwnPropertyDescriptor,sr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?rr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ir(t,i,n),n};class BranchTrackingStatusNode extends ai.Re{constructor(e,t,i,r,s,n=!1,o){super("tracking-status",h.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.status=r,this.upstreamType=s,this.root=n,this.options=o,this.updateContext({branch:i,branchStatus:r,branchStatusUpstreamType:s,root:n}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}get repoPath(){return this.uri.repoPath}async getChildren(){if("same"===this.upstreamType||"none"===this.upstreamType)return[];const e=await this.getLog();if(null==e)return[];let t;if("ahead"===this.upstreamType){t=[...e.commits.values()];const i=t[t.length-1];if(null==await i.getPreviousSha()){const e=await this.view.container.git.getLog(this.uri.repoPath,{limit:2,ref:i.sha});null!=e&&(t[t.length-1]=(0,ae.Ps)(e.commits.values()))}}else t=e.commits.values();const i=[];let r=!0;return!this.options?.showAheadCommits&&"ahead"===this.upstreamType&&this.status.upstream&&this.status.state.ahead>0?(r=!1,i.push(...await new BranchTrackingStatusFilesNode(this.view,this,this.branch,this.status,this.upstreamType).getChildren())):(i.push(...(0,tr.E)((0,ae.UI)(t,(e=>new Zi.D(this.view,this,e,"ahead"===this.upstreamType,this.branch))),this,1)),e.hasMore&&i.push(new er.Gd(this.view,this,i[i.length-1]))),r&&i.unshift(new BranchTrackingStatusFilesNode(this.view,this,this.branch,this.status,this.upstreamType)),i}async getTreeItem(){let e,t,i,s,n,o,a=0;if("none"!==this.upstreamType){const e=this.view.container.git.getRepository(this.repoPath);a=await(e?.getLastFetched())??0}switch(this.upstreamType){case"ahead":{const a=await this.branch.getRemote();e=`Changes to push to ${a?.name??(0,u.Lo)(this.status.upstream)}${a?.provider?.name?` on ${a?.provider.name}`:""}`,t=(0,E._6)("commit",this.status.state.ahead),o=`Branch $(git-branch) ${this.branch.name} is ${(0,E._6)("commit",this.status.state.ahead,{infix:"$(arrow-up) "})} ahead of $(git-branch) ${this.status.upstream}${a?.provider?.name?` on ${a.provider.name}`:""}`,i=r.TreeItemCollapsibleState.Collapsed,s=this.root?ai.Td.StatusAheadOfUpstream:ai.Td.BranchStatusAheadOfUpstream,n=new r.ThemeIcon("cloud-upload",new r.ThemeColor("gitlens.unpublishedChangesIconColor"));break}case"behind":{const a=await this.branch.getRemote();e=`Changes to pull from ${a?.name??(0,u.Lo)(this.status.upstream)}${a?.provider?.name?` on ${a.provider.name}`:""}`,t=(0,E._6)("commit",this.status.state.behind),o=`Branch $(git-branch) ${this.branch.name} is ${(0,E._6)("commit",this.status.state.behind,{infix:"$(arrow-down) "})} behind $(git-branch) ${this.status.upstream}${a?.provider?.name?` on ${a.provider.name}`:""}`,i=r.TreeItemCollapsibleState.Collapsed,s=this.root?ai.Td.StatusBehindUpstream:ai.Td.BranchStatusBehindUpstream,n=new r.ThemeIcon("cloud-download",new r.ThemeColor("gitlens.unpulledChangesIconColor"));break}case"same":{const c=await this.branch.getRemote();e=`Up to date with ${c?.name??(0,u.Lo)(this.status.upstream)}${c?.provider?.name?` on ${c.provider.name}`:""}`,t=a?`Last fetched ${(0,U.Zh)(new Date(a))}`:"",o=`Branch $(git-branch) ${this.branch.name} is up to date with $(git-branch) ${this.status.upstream}${c?.provider?.name?` on ${c.provider.name}`:""}`,i=r.TreeItemCollapsibleState.None,s=this.root?ai.Td.StatusSameAsUpstream:ai.Td.BranchStatusSameAsUpstream,n=new r.ThemeIcon("cloud");break}case"none":{const t=await this.view.container.git.getRemotesWithProviders(this.branch.repoPath),a=w.ss.getHighlanderProviders(t),c=a?.length?a[0].name:void 0;e=`Publish ${this.branch.name} to ${c??"a remote"}`,o=`Branch $(git-branch) ${this.branch.name} hasn't been published to ${c??"a remote"}`,i=r.TreeItemCollapsibleState.None,s=this.root?ai.Td.StatusNoUpstream:ai.Td.BranchStatusNoUpstream,n=new r.ThemeIcon("cloud-upload",t.length?new r.ThemeColor("gitlens.unpublishedChangesIconColor"):void 0);break}}const c=new r.TreeItem(e,i);c.id=this.id,c.contextValue=s,c.description=t,a&&(o+=`\n\nLast fetched ${(0,U.Zh)(new Date(a))}`),c.iconPath=n;const l=new r.MarkdownString(o,!0);return l.supportHtml=!0,l.isTrusted=!0,c.tooltip=l,c}refresh(e){e&&(this._log=void 0)}_log;async getLog(){if("same"!==this.upstreamType&&"none"!==this.upstreamType){if(null==this._log){const e="ahead"===this.upstreamType?(0,f.oI)(this.status.upstream,this.status.ref):(0,f.oI)(this.status.ref,this.status.upstream);this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}sr([(0,oe.H)(),(0,G.fF)()],BranchTrackingStatusNode.prototype,"refresh",1),sr([(0,oe.H)()],BranchTrackingStatusNode.prototype,"loadMore",1);var nr=i(9729),or=i(3636),ar=i(5538),cr=i(5988),lr=i(812),hr=Object.defineProperty,ur=Object.getOwnPropertyDescriptor,dr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ur(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&hr(t,i,n),n};class CompareBranchNode extends Vi.C{constructor(e,t,i,r,s,n=!1){super("compare-branch",e,t,i),this.parent=i,this.branch=r,this.showComparison=s,this.root=n,this.updateContext({branch:r,root:n,storedComparisonId:this.getStorageId()}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.loadCompareWith()}_compareWith;etag(){return 0}get ahead(){return{ref1:this._compareWith?.ref||"HEAD",ref2:this.branch.ref}}get behind(){return{ref1:this.branch.ref,ref2:this._compareWith?.ref||"HEAD"}}_isFiltered;get filterByAuthors(){const e=this.getState("filterCommits"),t=Boolean(e?.length);return null!=this._isFiltered&&this._isFiltered!==t&&this.updateContext({comparisonFiltered:t}),this._isFiltered=t,e}get repoPath(){return this.branch.repoPath}subscribe(){return(0,de.D$)(this.view.onDidChangeNodesCheckedState,this.onNodesCheckedStateChanged,this)}onNodesCheckedStateChanged(e){const t=(0,ar.iS)(this.getStorageId());e.items.some((([e])=>e.id?.startsWith(t)))&&this.storeCompareWith(!1)}async getChildren(){if(null==this._compareWith)return[];if(null==this.children){const e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.branch.repoPath,[(0,f.oI)(t.ref1,t.ref2,"...")],{authors:this.filterByAuthors}),r=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2),s=[new cr.J(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery((0,f.oI)(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:this.compareWithWorkingTree?"":r??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{description:(0,E._6)("commit",i?.behind??0),expand:!1}),new cr.J(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery((0,f.oI)(e.ref1,this.compareWithWorkingTree?"":e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:r??e.ref1,ref2:this.compareWithWorkingTree?"":e.ref2,query:this.getAheadFilesQuery.bind(this)}},{description:(0,E._6)("commit",i?.ahead??0),expand:!1})];this.filterByAuthors?.length||s.push(new lr.V(this.view,this,this.repoPath,this._compareWith.ref||"HEAD",this.compareWithWorkingTree?"":this.branch.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})),this.children=s}return this.children}getTreeItem(){let e,t,i;null==this._compareWith?(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with <branch, tag, or ref>`,e=r.TreeItemCollapsibleState.None,i=`Click to compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with a branch, tag, or ref`):(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with ${(0,f.zL)(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,e=r.TreeItemCollapsibleState.Collapsed);const s=new r.TreeItem(t,e);return s.id=this.id,s.contextValue=`${ai.Td.CompareBranch}${this.branch.current?"+current":""}+${this.comparisonType}${null==this._compareWith?"":"+comparing"}${this.root?"+root":""}${this.filterByAuthors?.length?"+filtered":""}`,null==this._compareWith&&(s.command={title:`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with${n.NE.Ellipsis}`,command:"gitlens.views.editNode",arguments:[this]}),s.iconPath=new r.ThemeIcon("git-compare"),s.tooltip=i,s}async clear(){this._compareWith=void 0,await this.updateCompareWith(void 0),this.children=void 0,this.view.triggerNodeChange(this)}clearReviewed(){this.storeCompareWith(!0),this.triggerChange()}async edit(){await this.compareWith()}refresh(e){super.refresh(e),this.loadCompareWith()}async setComparisonType(e){null!=this._compareWith?await this.updateCompareWith({...this._compareWith,type:e,checkedFiles:void 0}):this.showComparison=e,this.children=void 0,this.view.triggerNodeChange(this)}get comparisonType(){return this._compareWith?.type??this.showComparison}get compareWithWorkingTree(){return"working"===this.comparisonType}async compareWith(){const e=await(0,or.V)(this.branch.repoPath,`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:this.branch.ref,sort:{branches:{current:!0},tags:{}}});null==e||e instanceof nr.$w||(await this.updateCompareWith({ref:e.ref,notation:void 0,type:this.comparisonType}),this.children=void 0,this.view.triggerNodeChange(this))}async getAheadFilesQuery(){const e=(0,f.oI)(this._compareWith?.ref||"HEAD",this.branch.ref||"HEAD","..."),[t,i,r,s]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]);let n=(0,he.Sb)(t)??[],o=(0,he.Sb)(r);if(this.compareWithWorkingTree){const e=(0,he.Sb)(i);if(null!=e)if(0===n.length)n=e;else for(const t of e){const e=n.findIndex((e=>e.path===t.path));-1!==e?n.splice(e,1,t):n.push(t)}const t=(0,he.Sb)(s);null!=t&&(o=null==o?t:{additions:o.additions+t.additions,deletions:o.deletions+t.deletions,changedFiles:n.length,approximated:!0})}return{label:`${(0,E._6)("file",n.length,{zero:"No"})} changed`,files:n,stats:o}}async getBehindFilesQuery(){const e=(0,f.oI)(this.branch.ref,this._compareWith?.ref||"HEAD","..."),[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,he.Sb)(t)??[];return{label:`${(0,E._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,he.Sb)(i)}}getCommitsQuery(e){const t=this.repoPath;return async i=>{const r=await this.view.container.git.getLog(t,{limit:i,ref:e,authors:this.filterByAuthors}),s={log:r,hasMore:r?.hasMore??!0};return s.hasMore&&(s.more=async e=>{s.log=await(s.log?.more?.(e))??s.log,s.hasMore=s.log?.hasMore??!0}),s}}async getFilesQuery(){let e;e=this._compareWith?.ref?this.compareWithWorkingTree?this._compareWith.ref:`${this._compareWith.ref}..${this.branch.ref}`:this.branch.ref;const[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,he.Sb)(t)??[];return{label:`${(0,E._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,he.Sb)(i)}}getStorageId(){return`${this.branch.id}${this.branch.current?"+current":""}`}loadCompareWith(){const e=this.view.container.storage.getWorkspace("branch:comparisons"),t=this.getStorageId(),i=e?.[t];null!=i&&"string"==typeof i?this._compareWith={ref:i,notation:void 0,type:this.showComparison}:(this._compareWith=i,null!=i&&(0,ar.k7)(this.view,i.checkedFiles))}async storeCompareWith(e){const t=this.getStorageId();e&&(0,ar.vK)(this.view,t);let i=this.view.container.storage.getWorkspace("branch:comparisons");if(null==i){if(null==this._compareWith)return;i=Object.create(null)}if(null!=this._compareWith){const e=(0,ar.uL)(this.view,t);this._compareWith.checkedFiles=e,i[t]={...this._compareWith}}else{if(null==i[t])return;const{[t]:e,...r}=i;i=r}await this.view.container.storage.storeWorkspace("branch:comparisons",i)}async updateCompareWith(e){this._compareWith=e,await this.storeCompareWith(!0)}}dr([(0,G.cM)()],CompareBranchNode.prototype,"clear",1),dr([(0,G.cM)()],CompareBranchNode.prototype,"clearReviewed",1),dr([(0,G.cM)()],CompareBranchNode.prototype,"edit",1),dr([(0,G.fF)()],CompareBranchNode.prototype,"refresh",1),dr([(0,G.cM)()],CompareBranchNode.prototype,"setComparisonType",1);var pr=i(6373),mr=i(5209),gr=i(7692),fr=i(4167);class MergeConflictFileNode extends mr.T{constructor(e,t,i,r){super("conflict-file",h.YY.fromFile(i,r.repoPath,r.HEAD.ref),e,t,i),this.status=r}toClipboard(){return this.fileName}get baseUri(){return h.YY.fromFile(this.file,this.status.repoPath,this.status.mergeBase??"HEAD")}get fileName(){return this.file.path}getChildren(){return[new gr.l(this.view,this,this.status,this.file),new fr.w(this.view,this,this.status,this.file)]}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.Collapsed);e.description=this.description,e.contextValue=`${ai.Td.File}+conflicted`;const t=pr.o.fromTemplate("${file}${ • changesDetail}${\\\\\ndirectory}${\n\nstatus}${ (originalPath)} in Index (staged)",this.file),i=new r.MarkdownString(t,!0);return i.isTrusted=!0,i.supportHtml=!0,e.tooltip=i,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File,e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=pr.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,le.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=pr.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}get priority(){return 0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){return(0,at.j$)("vscode.open","Open File",this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),{preserveFocus:!0,preview:!0})}}class MergeConflictFilesNode extends ai.Re{constructor(e,t,i,r){super("conflict-files",h.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.conflicts=r}get repoPath(){return this.uri.repoPath}getChildren(){let e=this.conflicts.map((e=>new MergeConflictFileNode(this.view,this,e,this.status)));if("list"!==this.view.config.files.layout){const t=(0,ot.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,le.AH)((0,le.RQ)(...e))),this.view.config.files.compact);e=new Ji.Y(this.view,this,t,this.repoPath,"",void 0).getChildren()}else e.sort(((e,t)=>(0,E.dm)(e.label,t.label)));return e}getTreeItem(){return new r.TreeItem((0,E._6)("conflict",this.conflicts.length),r.TreeItemCollapsibleState.Expanded)}}class MergeStatusNode extends ai.Re{constructor(e,t,i,r,s,n){super("merge-status",h.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.mergeStatus=r,this.status=s,this.root=n,this.updateContext({branch:i,root:n,status:"merging"}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get repoPath(){return this.uri.repoPath}getChildren(){return this.status?.hasConflicts?[new MergeConflictFilesNode(this.view,this,this.mergeStatus,this.status.conflicts)]:[]}getTreeItem(){const e=!0===this.status?.hasConflicts,t=new r.TreeItem(`${e?"Resolve conflicts before merging":"Merging"} ${null!=this.mergeStatus.incoming?`${(0,f.Wh)(this.mergeStatus.incoming,{expand:!1,icon:!1})} `:""}into ${(0,f.Wh)(this.mergeStatus.current,{expand:!1,icon:!1})}`,e?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.None);t.id=this.id,t.contextValue=ai.Td.Merge,t.description=e?(0,E._6)("conflict",this.status.conflicts.length):void 0,t.iconPath=e?new r.ThemeIcon("warning",new r.ThemeColor("gitlens.decorations.statusMergingOrRebasingConflictForegroundColor")):new r.ThemeIcon("warning",new r.ThemeColor("gitlens.decorations.statusMergingOrRebasingForegroundColor"));const i=new r.MarkdownString(`Merging ${null!=this.mergeStatus.incoming?(0,f.Wh)(this.mergeStatus.incoming,{label:!1}):""}into ${(0,f.Wh)(this.mergeStatus.current,{label:!1})}${e?`\n\nResolve ${(0,E._6)("conflict",this.status.conflicts.length)} before continuing`:""}`,!0);return i.supportHtml=!0,i.isTrusted=!0,t.tooltip=i,t}}var wr=i(2060);class RebaseCommitNode extends Zi.D{async getTreeItem(){const e=new r.TreeItem(`Paused at commit ${this.commit.shortSha}`,this._options.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=`${ai.Td.Commit}+rebase`,e.description=Oe.i.fromTemplate("${message}",this.commit,{messageTruncateAtNewLine:!0}),e.iconPath=new r.ThemeIcon("debug-pause"),e}getTooltipTemplate(){return`Rebase paused at ${super.getTooltipTemplate()}`}}class RebaseStatusNode extends ai.Re{constructor(e,t,i,r,s,n){super("rebase-status",h.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.rebaseStatus=r,this.status=s,this.root=n,this.updateContext({branch:i,root:n,status:"rebasing"}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get repoPath(){return this.uri.repoPath}async getChildren(){const e=[],t=this.rebaseStatus.steps.current.commit;if(null!=t){const i=null!=t?await this.view.container.git.getCommit(this.rebaseStatus.repoPath,t.ref):void 0;null!=i&&e.push(new RebaseCommitNode(this.view,this,i))}return this.status?.hasConflicts&&e.push(new MergeConflictFilesNode(this.view,this,this.rebaseStatus,this.status.conflicts)),e}getTreeItem(){const e=this.rebaseStatus.steps.total>0,t=e&&null!=this.rebaseStatus.steps.current.commit,i=!0===this.status?.hasConflicts,s=new r.TreeItem(`${i?"Resolve conflicts to continue rebasing":e?"Rebasing":"Pending rebase of"} ${null!=this.rebaseStatus.incoming?`${(0,f.Wh)(this.rebaseStatus.incoming,{expand:!1,icon:!1})}`:""} onto ${(0,f.Wh)(this.rebaseStatus.current??this.rebaseStatus.onto,{expand:!1,icon:!1})}${e?` (${this.rebaseStatus.steps.current.number}/${this.rebaseStatus.steps.total})`:""}`,t?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.None);s.id=this.id,s.contextValue=ai.Td.Rebase,s.description=i?(0,E._6)("conflict",this.status.conflicts.length):void 0,s.iconPath=i?new r.ThemeIcon("warning",new r.ThemeColor("gitlens.decorations.statusMergingOrRebasingConflictForegroundColor")):new r.ThemeIcon("warning",new r.ThemeColor("gitlens.decorations.statusMergingOrRebasingForegroundColor"));const n=new r.MarkdownString(`${e?"Rebasing":"Pending rebase of"} ${null!=this.rebaseStatus.incoming?(0,f.Wh)(this.rebaseStatus.incoming,{label:!1}):""} onto ${(0,f.Wh)(this.rebaseStatus.current??this.rebaseStatus.onto,{label:!1})}${e?`\n\nPaused at step ${this.rebaseStatus.steps.current.number} of ${this.rebaseStatus.steps.total}${i?`\\\nResolve ${(0,E._6)("conflict",this.status.conflicts.length)} before continuing`:""}`:""}`,!0);return n.supportHtml=!0,n.isTrusted=!0,s.tooltip=n,s.resourceUri=r.Uri.parse("gitlens-view://status/rebasing"+(i?"/conflicts":"")),s}async openEditor(){const e=r.Uri.joinPath(this.uri,".git","rebase-merge","git-rebase-todo");await(0,at.dO)("vscode.openWith",e,"gitlens.rebase",{preview:!1})}}var vr=Object.defineProperty,yr=Object.getOwnPropertyDescriptor,br=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?yr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&vr(t,i,n),n};class BranchNode extends Ki.b{constructor(e,t,i,r,s,n,o){super("branch",e,t,i),this.parent=i,this.repo=r,this.branch=s,this.root=n,this.updateContext({repository:r,branch:s,root:n}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this),this.options={expanded:!1,limitCommits:!1,showAsCommits:!1,showComparison:!1,showCurrent:!this.root,showStatus:!0,showTracking:!this.root,...o}}limit;options;splatted=!0;dispose(){super.dispose(),this.children=void 0}get id(){return this._uniqueId}toClipboard(){return this.branch.name}compacted=!1;get current(){return this.branch.current}get label(){if(this.options.showAsCommits)return"Commits";const e=this.branch.getNameWithoutRemote();return`${"tree"!==this.view.config.branches?.layout||this.compacted||this.root||this.current||this.branch.detached||this.branch.starred?e:this.branch.getBasename()}${this.branch.rebasing?" (Rebasing)":""}`}get ref(){return this.branch}get treeHierarchy(){return this.root||this.current||this.branch.detached||this.branch.starred?[this.branch.name]:this.branch.getNameWithoutRemote().split("/")}_children;get children(){return this._children}set children(e){this._children!==e&&((0,zi.Qu)(this._children,e),this._children=e)}async getChildren(){if(null==this.children){const e=this.branch;let t,i;if(this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=e.upstream||e.remote)&&(0,ne.fw)("gitlens:hasConnectedRemotes")&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,he.PQ)();const i=this.getAssociatedPullRequest(e,this.root?{include:["opened","merged"]}:void 0);queueMicrotask((async()=>{await(t?.promise);let r=!1;const s=setTimeout((()=>{r=!0,this.view.triggerNodeChange(this)}),250),n=await i;clearTimeout(s),null!=n&&null!=this.children&&this.children.splice(this.children[0]instanceof CompareBranchNode?1:0,0,new wr.Z(this.view,this,n,e)),(r||null!=n)&&this.view.triggerNodeChange(this.root?this.parent??this:this)}))}const[r,s,o,a,c,l]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,e.name),this.options.showStatus&&e.current?this.view.container.git.getStatusForRepo(this.uri.repoPath):void 0,this.options.showStatus&&e.current?this.view.container.git.getMergeStatus(this.uri.repoPath):void 0,this.options.showStatus?this.view.container.git.getRebaseStatus(this.uri.repoPath):void 0,e.remote?void 0:this.view.container.git.getBranchAheadRange(e).then((e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e,merges:this.options.showMergeCommits}):void 0))]),h=(0,he.Sb)(r);if(null==h)return[new er.AE(this.view,this,"No commits could be found.")];const u=[];!1!==this.options.showComparison&&"remotes"!==this.view.type&&u.push(new CompareBranchNode(this.uri,this.view,this,e,this.options.showComparison,this.splatted)),null!=i&&u.push(new wr.Z(this.view,this,i,e));const d=(0,he.Sb)(o),p=(0,he.Sb)(a),m=(0,he.Sb)(c);if(this.options.showStatus&&null!=p)u.push(new MergeStatusNode(this.view,this,e,p,d??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showStatus&&null!=m&&(e.current||e.name===m.incoming.name))u.push(new RebaseStatusNode(this.view,this,e,m,d??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showTracking){const t={ref:e.ref,repoPath:e.repoPath,state:e.state,upstream:e.upstream?.name};null!=e.upstream?!this.root||t.state.behind||t.state.ahead?(t.state.behind&&u.push(new BranchTrackingStatusNode(this.view,this,e,t,"behind",this.root)),t.state.ahead&&u.push(new BranchTrackingStatusNode(this.view,this,e,t,"ahead",this.root))):u.push(new BranchTrackingStatusNode(this.view,this,e,t,"same",this.root)):u.push(new BranchTrackingStatusNode(this.view,this,e,t,"none",this.root))}0!==u.length&&u.push(new er.AE(this.view,this,"",n.NE.Dash.repeat(2),""));const g=(0,he.Sb)(l),f=(0,he.Sb)(s);u.push(...(0,tr.E)((0,ae.UI)(h.commits.values(),(t=>new Zi.D(this.view,this,t,g?.has(t.ref),e,f))),this)),h.hasMore&&u.push(new er.Gd(this.view,this,u[u.length-1],{getCount:()=>this.view.container.git.getCommitCount(e.repoPath,e.name)})),this.children=u,setTimeout((()=>t?.fulfill()),1)}return this.children}async getTreeItem(){this.splatted=!1;let e,t,i=`${this.current?"Current branch":"Branch"} $(git-branch) ${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}`,s=ai.Td.Branch;this.current&&(s+="+current"),this.branch.remote&&(s+="+remote"),this.branch.starred&&(s+="+starred"),null==this.branch.upstream||this.branch.upstream.missing||(s+="+tracking"),this.options.showAsCommits&&(s+="+commits"),this.repo.closed&&(s+="+closed");let o="";if(!this.branch.remote)if(null!=this.branch.upstream){let a=n.NE.Dash;const c=await this.branch.getRemote();if(this.branch.upstream.missing)a=n.NE.Warning;else if(null!=c){let e,t;for(const{type:i}of c.urls)if("fetch"===i){if(e=!0,t)break}else if("push"===i&&(t=!0,e))break;e&&t?a=n.NE.ArrowsRightLeft:t?a=n.NE.ArrowRight:e&&(a=n.NE.ArrowLeft)}t=this.options.showAsCommits?`${this.branch.getTrackingStatus({suffix:(0,E.vk)(n.NE.Dot,1,1)})}${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}${(0,E.vk)(a,2,2)}${this.branch.upstream.name}`:`${this.branch.getTrackingStatus({suffix:`${n.NE.Space} `})}${a}${n.NE.Space} ${this.branch.upstream.name}`,i+=` is ${this.branch.getTrackingStatus({empty:this.branch.upstream.missing?`missing upstream $(git-branch) ${this.branch.upstream.name}`:`up to date with $(git-branch)  ${this.branch.upstream.name}${c?.provider?.name?` on ${c.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${this.branch.upstream.name}${c?.provider?.name?` on ${c.provider.name}`:""}`})}`,(this.branch.state.ahead||this.branch.state.behind)&&(this.branch.state.ahead&&(s+="+ahead",e=new r.ThemeColor("gitlens.unpublishedChangesIconColor"),o="-green"),this.branch.state.behind&&(s+="+behind",e=new r.ThemeColor("gitlens.unpulledChangesIconColor"),o=this.branch.state.ahead?"-yellow":"-red"))}else{const e=w.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(this.branch.repoPath));i+=` hasn't been published to ${(e?.length?e[0].name:void 0)??"a remote"}`}null!=this.branch.date&&(t=`${t?`${t}${(0,E.vk)(n.NE.Dot,2,2)}`:""}${this.branch.formattedDate}`,i+=`\n\nLast commit ${this.branch.formatDateFromNow()} (${this.branch.formatDate(this.view.container.BranchDateFormatting.dateFormat)})`),i=new r.MarkdownString(i,!0),i.supportHtml=!0,i.isTrusted=!0,this.branch.starred&&i.appendMarkdown("\\\n$(star-full) Favorited");const a=this.getState("pendingPullRequest");null!=a&&i.appendMarkdown(`\n\n$(loading~spin) Loading associated pull request${n.NE.Ellipsis}`);const c=new r.TreeItem(this.label,this.options.expanded?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return c.id=this.id,c.contextValue=s,c.description=t,c.iconPath=null!=a?new r.ThemeIcon("loading~spin"):this.options.showAsCommits?new r.ThemeIcon("git-commit",e):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-branch${o}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-branch${o}.svg`)},c.tooltip=i,c.resourceUri=r.Uri.parse(`gitlens-view://branch/status/${await this.branch.getStatus()}${this.options.showCurrent&&this.current?"/current":""}`),c}async star(){await this.branch.star(),this.view.refresh(!0)}async unstar(){await this.branch.unstar(),this.view.refresh(!0)}refresh(e){super.refresh?.(e),this.children=void 0,e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return r??(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}_log;async getLog(){if(null==this._log){let e=this.limit??(this.root&&!this.options.limitCommits?this.view.config.pageItemLimit:this.view.config.defaultItemLimit);0!==e&&this.branch.state.ahead>e&&(e=Math.min(this.branch.state.ahead+1,2*e)),this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:e,ref:this.ref.ref,authors:this.options?.authors,merges:this.options?.showMergeCommits})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.children=void 0,this.triggerChange(!1)))}}br([(0,G.fF)()],BranchNode.prototype,"dispose",1),br([(0,G.cM)()],BranchNode.prototype,"star",1),br([(0,G.cM)()],BranchNode.prototype,"unstar",1),br([(0,oe.H)()],BranchNode.prototype,"loadMore",1);class BranchOrTagFolderNode extends ai.Re{constructor(e,t,i,r,s,n,o,a=!1){super("branch-tag-folder",h.YY.fromRepoPath(s),e,t),this.parent=t,this.folderType=i,this.root=r,this.repoPath=s,this.folderName=n,this.relativePath=o,this._expanded=a,this._uniqueId=(0,ai.tO)(`${this.type}+${i}+${o??n}`,this.context)}get id(){return this._uniqueId}toClipboard(){return this.folderName}getChildren(){if(void 0===this.root.descendants||void 0===this.root.children)return[];const e=[];for(const t of this.root.children.values())if(void 0!==t.value)t.value.parent=this.folderName?this:this.parent,e.push(t.value);else{const i=t.descendants?.some((e=>e.is("branch")&&e.current));e.push(new BranchOrTagFolderNode(this.view,this.folderName?this:this.parent,this.folderType,t,this.repoPath,t.name,t.relativePath,i))}return e}getTreeItem(){const e=new r.TreeItem(this.label,this._expanded?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Folder,e.iconPath=r.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}}var Cr=Object.defineProperty,Ar=Object.getOwnPropertyDescriptor;class BranchesNode extends Yi.y{constructor(e,t,i,r){super("branches",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){const e=await this.repo.getBranches({filter:e=>!e.remote,sort:{current:!1}});if(0===e.values.length)return[new er.AE(this.view,this,"No branches could be found.")];const t=e.values.map((e=>new BranchNode(h.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,this.repo,e,!1,{showComparison:"repositories"===this.view.type?this.view.config.branches.showBranchComparison:this.view.config.showBranchComparison})));if("list"===this.view.config.branches.layout)return t;const i=(0,ot.Mo)(t,(e=>e.treeHierarchy),((...e)=>e.join("/")),this.view.config.files.compact,(e=>(e.compacted=!0,!0))),r=new BranchOrTagFolderNode(this.view,this,"branch",i,this.repo.path,"",void 0);this.children=r.getChildren()}return this.children}async getTreeItem(){const e=new r.TreeItem("Branches",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Branches,await this.repo.hasRemotes()&&(e.contextValue+="+remotes"),this.repo.closed&&(e.contextValue+="+closed"),e.iconPath=new r.ThemeIcon("git-branch"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ar(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&Cr(t,i,n)})([(0,G.fF)()],BranchesNode.prototype,"refresh",1);var Sr=i(9311),Pr=i(3401),kr=i(6897),Dr=i(7445),Rr=i(4155),_r=i(8834),Tr=i(252),Fr=i(6713),$r=i(5025),Ir=i(4731),xr=i(2601),Or=Object.defineProperty,Er=Object.getOwnPropertyDescriptor,Br=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Er(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Or(t,i,n),n};class ContributorNode extends ai.Re{constructor(e,t,i,r,s){super("contributor",e,t,i),this.parent=i,this.contributor=r,this._options=s,this.updateContext({contributor:r}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}toClipboard(){return`${this.contributor.name}${this.contributor.email?` <${this.contributor.email}>`:""}`}get repoPath(){return this.contributor.repoPath}async getChildren(){const e=await this.getLog();if(null==e)return[new er.AE(this.view,this,"No commits could be found.")];const t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),i=[...(0,tr.E)((0,ae.UI)(e.commits.values(),(e=>new Zi.D(this.view,this,e,void 0,void 0,t))),this)];return e.hasMore&&i.push(new er.Gd(this.view,this,i[i.length-1])),i}async getTreeItem(){const e=this._options?.presence?.get(this.contributor.email),t=new r.TreeItem(this.contributor.current?`${this.contributor.label} (you)`:this.contributor.label,r.TreeItemCollapsibleState.Collapsed);let i,s;if(t.id=this.id,t.contextValue=this.contributor.current?`${ai.Td.Contributor}+current`:ai.Td.Contributor,t.description=`${null!=e&&"offline"!==e.status?`${e.statusText} ${n.NE.Space}${n.NE.Dot}${n.NE.Space} `:""}${null!=this.contributor.date?`${this.contributor.formatDateFromNow()}, `:""}${(0,E._6)("commit",this.contributor.count)}`,this.view.config.avatars){const t=C.D.get("hovers.avatarSize");if(i=await this.contributor.getAvatarUri({defaultStyle:C.D.get("defaultGravatarsStyle"),size:t}),null!=e){const r=`${this.contributor.count?"You are":`${this.contributor.label} is`} ${"dnd"===e.status?"in ":""}${e.statusText.toLocaleLowerCase()}`;s=`![${r}](${i.toString(!0)}|width=${t},height=${t} "${r}")![${r}](${(0,Ve.TU)(e.status)} "${r}")`}else s=`![${this.contributor.label}](${i.toString(!0)}|width=${t},height=${t} "${this.contributor.label}")`}const o=new Intl.NumberFormat,a=null!=this.contributor.stats?`\\\n${(0,E._6)("file",this.contributor.stats.files,{format:o.format})} changed, ${(0,E._6)("addition",this.contributor.stats.additions,{format:o.format})}, ${(0,E._6)("deletion",this.contributor.stats.deletions,{format:o.format})}`:"",c=this.contributor.email?`__[${this.contributor.name}](mailto:${this.contributor.email} "Email ${this.contributor.label} (${this.contributor.email})")__`:`__${this.contributor.label}__`,l=null!=this.contributor.date?`Last commit ${this.contributor.formatDateFromNow()} (${this.contributor.formatDate()})\\\n`:"",h=new r.MarkdownString(`${null!=s?s:""} &nbsp;${c} \n\n${l}${(0,E._6)("commit",this.contributor.count,{format:o.format})}${a}`);return h.supportHtml=!0,h.isTrusted=!0,t.tooltip=h,t.iconPath=i,t}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{all:this._options?.all,ref:this._options?.ref,limit:this.limit??this.view.config.defaultItemLimit,authors:[{name:this.contributor.name,email:this.contributor.email,username:this.contributor.username,id:this.contributor.id}]})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}Br([(0,oe.H)(),(0,G.fF)()],ContributorNode.prototype,"refresh",1),Br([(0,oe.H)()],ContributorNode.prototype,"loadMore",1);var Wr=Object.defineProperty,Mr=Object.getOwnPropertyDescriptor,Nr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Mr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Wr(t,i,n),n};class FileHistoryTrackerNode extends Vi.C{_base;splatted=!0;constructor(e){super("file-history-tracker",h.Wj,e)}dispose(){super.dispose(),this.child=void 0}_child;get child(){return this._child}set child(e){this._child!==e&&(this._child?.dispose(),this._child=e)}async getChildren(){if(null==this.child){if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide file history information.",[];this.view.message=void 0;const e={...this.uri,repoPath:this.uri.repoPath,sha:this._base??this.uri.sha},t=new h.YY(this.uri,e);let i,s=!1;try{((await r.workspace.fs.stat(this.uri)).type&r.FileType.Directory)===r.FileType.Directory&&(s=!0)}catch{}this.view.title=s?"Folder History":"File History",e.sha&&"HEAD"!==e.sha?(0,f.D3)(e.sha)||({values:[i]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:t=>t.name===e.sha})):i=await this.view.container.git.getBranch(this.uri.repoPath),this.child=new FileHistoryNode(t,this.view,this,s,i)}return this.child.getChildren()}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("File History",r.TreeItemCollapsibleState.Expanded);return e.contextValue=ai.Td.ActiveFileHistory,e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=h.Wj&&null!=this._uri.repoPath}async changeBase(){const e=await(0,or.V)(this.uri.repoPath,"Change File History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if((0,f.UR)(e)){const t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this.child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){const t=(0,ce.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==h.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());const i=r.window.activeTextEditor;if(null==i||!this.view.container.git.isTrackable(i.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&r.window.visibleTextEditors.some((e=>e.document?.uri.path===this.uri.path)))||(this.reset(),(0,ce.lH)(t,`, uri=${A.Yd.toLoggable(this._uri)}`),!1);if(i.document.uri.path===this.uri.path)return(0,ce.lH)(t,`, uri=${A.Yd.toLoggable(this._uri)}`),!0;let s,n=await h.YY.fromUri(i.document.uri);if(null!=n.sha){const e=await this.view.container.git.getWorkingUri(n.repoPath,n);null!=e&&(s=e)}return!(!this.hasUri||!ft.n.equals(s??n,this.uri))||(null!=s&&(n=await h.YY.fromUri(s)),null==n.repoPath?this.reset():(this.setUri(n),this.child=void 0),(0,ce.lH)(t,`, uri=${A.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this.child=void 0}setEditorFollowing(e){e&&this.setUri(),this.canSubscribe=e,e||this.triggerChange()}async showHistoryForUri(e){this.setUri(e),await this.triggerChange()}subscribe(){return r.Disposable.from((0,de.D$)(r.window.onDidChangeActiveTextEditor,(0,pe.Ds)(this.onActiveEditorChanged,250),this))}etag(){return 0}_triggerChangeDebounced;onActiveEditorChanged(e){if(null==e&&(0,V.pt)(this._uri))return null==this._triggerChangeDebounced&&(this._triggerChangeDebounced=(0,pe.Ds)((()=>this.triggerChange()),1500)),void this._triggerChangeDebounced();this.triggerChange()}setUri(e){this._uri=e??h.Wj,(0,ne.v)("gitlens:views:fileHistory:canPin",this.hasUri)}}Nr([(0,G.fF)()],FileHistoryTrackerNode.prototype,"dispose",1),Nr([(0,oe.H)(),(0,G.cM)()],FileHistoryTrackerNode.prototype,"changeBase",1),Nr([(0,oe.H)(),(0,G.fF)({exit:!0})],FileHistoryTrackerNode.prototype,"refresh",1),Nr([(0,G.cM)()],FileHistoryTrackerNode.prototype,"setEditorFollowing",1),Nr([(0,G.cM)()],FileHistoryTrackerNode.prototype,"showHistoryForUri",1),Nr([(0,G.fF)()],FileHistoryTrackerNode.prototype,"subscribe",1),Nr([(0,G.fF)({args:!1})],FileHistoryTrackerNode.prototype,"onActiveEditorChanged",1);var Lr=i(9719),Ur=Object.defineProperty,Gr=Object.getOwnPropertyDescriptor,Hr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Gr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ur(t,i,n),n};class FileHistoryNode extends Vi.C{constructor(e,t,i,r,s){super("file-history",e,t,i),this.parent=i,this.folder=r,this.branch=s,null!=s&&this.updateContext({branch:s}),this._uniqueId=(0,ai.tO)(`${this.type}+${e.toString()}`,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;splatted=!0;get id(){return this._uniqueId}toClipboard(){return this.uri.fileName}async getChildren(){this.view.description=`${this.label}${this.parent instanceof FileHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`;const e=[];if(null==this.uri.repoPath)return e;const t=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[i,r,s,n,o]=await Promise.all([this.getLog(),null==this.uri.sha?this.view.container.git.getStatusForFiles(this.uri.repoPath,this.getPathOrGlob()):void 0,null==this.uri.sha?this.view.container.git.getCurrentUser(this.uri.repoPath):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,t?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:t}):void 0]);if(r?.length)if(this.folder){const t=(0,ae.UI)((0,ae.uw)((0,ae.VS)(r,(e=>e.getPseudoCommits(this.view.container,s))),(e=>e.sha),((e,t)=>e.with({files:{files:[...e.files??(null!=e.file?[e.file]:[]),...t.files??(null!=t.file?[t.file]:[])]}}))),(e=>new Zi.D(this.view,this,e)));e.push(...t)}else{const[t]=r,i=t.getPseudoCommits(this.view.container,s);i.length&&e.push(...i.map((e=>new Lr.m(this.view,this,t,e))))}return null!=i&&(e.push(...(0,tr.E)((0,ae.DZ)(i.commits.values(),(e=>this.folder?new Zi.D(this.view,this,e,o?.has(e.ref),this.branch,void 0,{expand:!1}):null!=e.file?new Lr.m(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:n,unpublished:o?.has(e.ref)}):void 0)),this)),i.hasMore&&e.push(new er.Gd(this.view,this,e[e.length-1]))),0===e.length?[new er.AE(this.view,this,"No file history could be found.")]:e}getTreeItem(){this.splatted=!1;const e=this.label,t=new r.TreeItem(e,r.TreeItemCollapsibleState.Expanded);return t.contextValue=ai.Td.FileHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}\n${this.uri.directory}/${null==this.uri.sha?"":`\n\n${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof FileHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return this.folder&&""===this.uri.fileName?`${(0,le.EZ)(this.uri.path)}${this.uri.sha?` ${this.uri.sha===p.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`:`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===p.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}subscribe(){const e=this.view.container.git.getRepository(this.uri);if(null==e)return;return r.Disposable.from((0,de.D$)(e.onDidChange,this.onRepositoryChanged,this),(0,de.D$)(e.onDidChangeFileSystem,this.onFileSystemChanged,this,[e.watchFileSystem()]),(0,de.D$)(C.D.onDidChange,(e=>{C.D.changed(e,"advanced.fileHistoryFollowsRenames")&&this.view.resetNodeLastKnownLimit(this)}),this))}etag(){return Date.now()}onRepositoryChanged(e){e.changed(v.I6.Index,v.I6.Heads,v.I6.Remotes,v.I6.RemoteProviders,v.I6.Status,v.I6.Unknown,v.du.Any)&&(A.Yd.debug(`FileHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){if(this.folder){if(!e.uris.some((e=>e.fsPath.startsWith(this.uri.fsPath))))return}else if(!e.uris.some((e=>e.toString()===this.uri.toString())))return;A.Yd.debug(`FileHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0)}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.getPathOrGlob(),{limit:this.limit??this.view.config.pageItemLimit,ref:this.uri.sha})),this._log}getPathOrGlob(){return this.folder?r.Uri.joinPath(this.uri,"*"):this.uri}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}}Hr([(0,G.fF)()],FileHistoryNode.prototype,"subscribe",1),Hr([(0,oe.H)(),(0,G.fF)()],FileHistoryNode.prototype,"refresh",1),Hr([(0,zt.H)()],FileHistoryNode.prototype,"getPathOrGlob",1),Hr([(0,oe.H)()],FileHistoryNode.prototype,"loadMore",1);var Vr=Object.defineProperty,qr=Object.getOwnPropertyDescriptor,jr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?qr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Vr(t,i,n),n};class LineHistoryTrackerNode extends Vi.C{_base;_editorContents;_selection;splatted=!0;constructor(e){super("line-history-tracker",h.Wj,e)}dispose(){super.dispose(),this.child=void 0}_child;get child(){return this._child}set child(e){this._child!==e&&(this._child?.dispose(),this._child=e)}async getChildren(){if(null==this.child){if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide line history information.",[];if(null==this._selection)return this.view.description=void 0,this.view.message="There was no selection provided for line history.",this.view.description=`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===p.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}${this.followingEditor?"":" (pinned)"}`,[];this.view.message=void 0;const e={...this.uri,repoPath:this.uri.repoPath,sha:this.uri.sha??this._base},t=new h.YY(this.uri,e);let i;e.sha&&"HEAD"!==e.sha?(0,f.D3)(e.sha)||({values:[i]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:t=>t.name===e.sha})):i=await this.view.container.git.getBranch(this.uri.repoPath),this.child=new LineHistoryNode(t,this.view,this,i,this._selection,this._editorContents)}return this.child.getChildren()}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("Line History",r.TreeItemCollapsibleState.Expanded);return e.contextValue=ai.Td.ActiveLineHistory,this.ensureSubscription(),e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=h.Wj&&null!=this._uri.repoPath}async changeBase(){const e=await(0,or.V)(this.uri.repoPath,"Change Line History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if((0,f.UR)(e)){const t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this.child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){const t=(0,ce.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==h.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());const i=r.window.activeTextEditor;if(null==i||!this.view.container.git.isTrackable(i.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&r.window.visibleTextEditors.some((e=>e.document?.uri.path===this.uri.path)))||(this.reset(),(0,ce.lH)(t,`, uri=${A.Yd.toLoggable(this._uri)}`),!1);if(i.document.uri.path===this.uri.path&&null!=this._selection&&i.selection.isEqual(this._selection))return(0,ce.lH)(t,`, uri=${A.Yd.toLoggable(this._uri)}`),!0;const s=await h.YY.fromUri(i.document.uri);return!!(this.hasUri&&ft.n.equals(s,this.uri)&&null!=this._selection&&i.selection.isEqual(this._selection))||(null==s.repoPath?this.reset():(this.setUri(s),this._editorContents=i.document.isDirty?i.document.getText():void 0,this._selection=i.selection,this.child=void 0),(0,ce.lH)(t,`, uri=${A.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this._editorContents=void 0,this._selection=void 0,this.child=void 0}setEditorFollowing(e){this.canSubscribe=e}subscribe(){if(this.view.container.lineTracker.subscribed(this))return;const e=(0,pe.Ds)(this.onActiveLinesChanged.bind(this),250);return this.view.container.lineTracker.subscribe(this,(0,de.D$)(this.view.container.lineTracker.onDidChangeActiveLines,(t=>{t.pending||e(t)}),this))}etag(){return 0}onActiveLinesChanged(e){this.triggerChange()}setUri(e){this._uri=e??h.Wj,(0,ne.v)("gitlens:views:fileHistory:canPin",this.hasUri)}}jr([(0,G.fF)()],LineHistoryTrackerNode.prototype,"dispose",1),jr([(0,oe.H)(),(0,G.cM)()],LineHistoryTrackerNode.prototype,"changeBase",1),jr([(0,oe.H)(),(0,G.fF)({exit:!0})],LineHistoryTrackerNode.prototype,"refresh",1),jr([(0,G.cM)()],LineHistoryTrackerNode.prototype,"setEditorFollowing",1),jr([(0,G.fF)()],LineHistoryTrackerNode.prototype,"subscribe",1),jr([(0,G.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineHistoryTrackerNode.prototype,"onActiveLinesChanged",1);var Qr=Object.defineProperty,Yr=Object.getOwnPropertyDescriptor,zr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Yr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Qr(t,i,n),n};class LineHistoryNode extends Vi.C{constructor(e,t,i,r,s,n){super("line-history",e,t,i),this.parent=i,this.branch=r,this.selection=s,this.editorContents=n,null!=r&&this.updateContext({branch:r}),this._uniqueId=(0,ai.tO)(`${this.type}+${e.toString()}+[${s.start.line},${s.start.character}-${s.end.line},${s.end.character}]`,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;splatted=!0;get id(){return this._uniqueId}toClipboard(){return this.uri.fileName}async getChildren(){this.view.description=`${this.label}${this.parent instanceof LineHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`;const e=[];if(null==this.uri.repoPath)return e;let t=this.selection;const i=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[s,n,o,a]=await Promise.all([this.getLog(t),null==this.uri.sha||(0,f.l3)(this.uri.sha)?this.editorContents?await this.view.container.git.getBlameForRangeContents(this.uri,t,this.editorContents):await this.view.container.git.getBlameForRange(this.uri,t):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,i?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:i}):void 0]);if(null!=n)for(const i of n.commits.values()){if(!i.isUncommitted)continue;const s=n.lines[0],o=n.lines[n.lines.length-1],a=t.active.line===s.line-1;t=new r.Selection((a?o:s).originalLine-1,t.anchor.character,(a?s:o).originalLine-1,t.active.character);const c=await this.view.container.git.getStatusForFile(this.uri.repoPath,this.uri);if(null!=c){const r={conflictStatus:c?.conflictStatus,path:i.file?.path??"",indexStatus:c?.indexStatus,originalPath:i.file?.originalPath,repoPath:this.uri.repoPath,status:c?.status??g.NV.Modified,workingTreeStatus:c?.workingTreeStatus},s=await this.view.container.git.getCurrentUser(this.uri.repoPath),n=c?.getPseudoCommits(this.view.container,s);if(null!=n)for(const i of n.reverse())e.unshift(new Lr.m(this.view,this,r,i,{selection:t}))}break}return null!=s&&(e.push(...(0,tr.E)((0,ae.DZ)(s.commits.values(),(e=>null!=e.file?new Lr.m(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:o,selection:t,unpublished:a?.has(e.ref)}):void 0)),this)),s.hasMore&&e.push(new er.Gd(this.view,this,e[e.length-1]))),0===e.length?[new er.AE(this.view,this,"No line history could be found.")]:e}getTreeItem(){this.splatted=!1;const e=this.label,t=new r.TreeItem(e,r.TreeItemCollapsibleState.Expanded);return t.contextValue=ai.Td.LineHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}${this.lines}\n${this.uri.directory}/${null==this.uri.sha?"":`\n\n${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof LineHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return`${this.uri.fileName}${this.lines}${this.uri.sha?` ${this.uri.sha===p.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}get lines(){return this.selection.isSingleLine?`:${this.selection.start.line+1}`:`:${this.selection.start.line+1}-${this.selection.end.line+1}`}subscribe(){const e=this.view.container.git.getRepository(this.uri);if(null==e)return;return r.Disposable.from((0,de.D$)(e.onDidChange,this.onRepositoryChanged,this),(0,de.D$)(e.onDidChangeFileSystem,this.onFileSystemChanged,this,[e.watchFileSystem()]))}etag(){return Date.now()}onRepositoryChanged(e){e.changed(v.I6.Index,v.I6.Heads,v.I6.Remotes,v.I6.RemoteProviders,v.I6.Status,v.I6.Unknown,v.du.Any)&&(A.Yd.debug(`LineHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){e.uris.some((e=>e.toString()===this.uri.toString()))&&(A.Yd.debug(`LineHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0))}refresh(e){e&&(this._log=void 0)}_log;async getLog(e){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.uri,{all:!1,limit:this.limit??this.view.config.pageItemLimit,range:e??this.selection,ref:this.uri.sha,renames:!1})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}}zr([(0,zt.H)()],LineHistoryNode.prototype,"lines",1),zr([(0,G.fF)()],LineHistoryNode.prototype,"subscribe",1),zr([(0,oe.H)(),(0,G.fF)()],LineHistoryNode.prototype,"refresh",1),zr([(0,oe.H)()],LineHistoryNode.prototype,"loadMore",1);var Kr=Object.defineProperty,Jr=Object.getOwnPropertyDescriptor;class RemoteNode extends ai.Re{constructor(e,t,i,r,s){super("remote",e,t,i),this.parent=i,this.repo=r,this.remote=s,this.updateContext({repository:r,remote:s}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.remote.name}get repoPath(){return this.repo.path}async getChildren(){const e=await this.repo.getBranches({filter:e=>e.remote&&e.name.startsWith(this.remote.name),sort:!0});if(0===e.values.length)return[new er.AE(this.view,this,"No branches could be found.")];const t=e.values.map((e=>new BranchNode(h.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,this.repo,e,!1,{showComparison:!1,showTracking:!1})));if("list"===this.view.config.branches.layout)return t;const i=(0,ot.Mo)(t,(e=>e.treeHierarchy),((...e)=>e.join("/")),this.view.config.files.compact,(e=>(e.compacted=!0,!0)));return new BranchOrTagFolderNode(this.view,this,"remote-branch",i,this.repo.path,"",void 0).getChildren()}async getTreeItem(){const e=new r.TreeItem(this.remote.name,r.TreeItemCollapsibleState.Collapsed);if(e.id=this.id,e.description=(0,w.jv)(this.remote),null!=this.remote.provider){const{provider:t}=this.remote;if(e.iconPath=null!=t.avatarUri&&this.view.config.avatars?t.avatarUri:"remote"===t.icon?new r.ThemeIcon("cloud"):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-${t.icon}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-${t.icon}.svg`)},t.hasRichIntegration()){const i=t.maybeConnected??await t.isConnected();e.contextValue=`${ai.Td.Remote}${i?"+connected":"+disconnected"}`,e.tooltip=`${this.remote.name} (${t.name} ${n.NE.Dash} ${i?"connected":"not connected"})\n${t.displayPath}\n`}else e.contextValue=ai.Td.Remote,e.tooltip=`${this.remote.name} (${t.name})\n${t.displayPath}\n`}else e.contextValue=ai.Td.Remote,e.iconPath=new r.ThemeIcon("cloud"),e.tooltip=`${this.remote.name} (${this.remote.domain})\n${this.remote.path}\n`;this.remote.default&&(e.contextValue+="+default",e.resourceUri=r.Uri.parse("gitlens-view://remote/default"));for(const{type:t,url:i}of this.remote.urls)e.tooltip+=`\n${i} (${t})`;return e}async setAsDefault(e=!0){await this.remote.setAsDefault(e),this.triggerChange()}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Jr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&Kr(t,i,n)})([(0,G.cM)()],RemoteNode.prototype,"setAsDefault",1);var Xr=Object.defineProperty,Zr=Object.getOwnPropertyDescriptor,es=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Zr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Xr(t,i,n),n};class ContributorsNode extends Yi.y{constructor(e,t,i,r){super("contributors",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}splatted=!0;get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){const e=C.D.get("views.contributors.showAllBranches");let t;if(!e)try{const e=await this.view.container.git.getBranch(this.uri.repoPath);null==e?.upstream?.name||e.upstream.missing||(t="@{u}")}catch{}const i=C.D.get("views.contributors.showStatistics"),r=await this.repo.getContributors({all:e,ref:t,stats:i});if(0===r.length)return[new er.AE(this.view,this,"No contributors could be found.")];m.V.sort(r);const s=this.view.container.vsls.enabled?await this.getPresenceMap(r):void 0;this.children=r.map((i=>new ContributorNode(this.uri,this.view,this,i,{all:e,ref:t,presence:s})))}return this.children}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("Contributors",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Contributors,e.iconPath=new r.ThemeIcon("organization"),e}updateAvatar(e){if(null!=this.children)for(const t of this.children)t.contributor.email===e&&t.triggerChange()}refresh(){super.refresh(!0)}async getPresenceMap(e){const t=e.find((e=>e.current))?.email;if(null!=t)return this.view.container.vsls.getContactsPresence([t])}}es([(0,G.fF)()],ContributorsNode.prototype,"refresh",1),es([(0,G.fF)({args:!1})],ContributorsNode.prototype,"getPresenceMap",1);var ts=Object.defineProperty,is=Object.getOwnPropertyDescriptor,rs=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?is(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ts(t,i,n),n};class ReflogRecordNode extends ai.Re{constructor(e,t,i){super("reflog-record",h.YY.fromRepoPath(i.repoPath),e,t),this.record=i,this.updateContext({reflog:i}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}async getChildren(){const e=await this.getLog();if(void 0===e)return[new er.AE(this.view,this,"No commits could be found.")];const t=[...(0,ae.UI)(e.commits.values(),(e=>new Zi.D(this.view,this,e)))];return e.hasMore&&t.push(new er.Gd(this.view,this,t[t.length-1])),t}getTreeItem(){const e=new r.TreeItem(`${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}`,r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=`${0===this.record.HEAD.length?"":`${this.record.HEAD} ${n.NE.Space}${n.NE.Dot}${n.NE.Space} `}${this.record.formattedDate}`,e.contextValue=ai.Td.ReflogRecord,e.tooltip=`${0===this.record.HEAD.length?"":`${this.record.HEAD}\n`}${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}${this.record.details?` (${this.record.details})`:""}\n${this.record.formatDateFromNow()} (${this.record.formatDate()})\n${this.record.previousShortSha} ${n.NE.Space}${n.NE.ArrowRight}${n.NE.Space} ${this.record.shortSha}`,e}refresh(e){e&&(this._log=void 0)}_log;async getLog(){if(void 0===this._log){const e=`${this.record.previousSha}..${this.record.sha}`;this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));void 0!==t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}rs([(0,oe.H)(),(0,G.fF)()],ReflogRecordNode.prototype,"refresh",1),rs([(0,oe.H)()],ReflogRecordNode.prototype,"loadMore",1);var ss=Object.defineProperty,ns=Object.getOwnPropertyDescriptor;class ReflogNode extends Yi.y{constructor(e,t,i,r){super("reflog",e,t,i),this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}async getChildren(){if(void 0===this.children){const e=[],t=await this.getReflog();if(void 0===t||0===t.records.length)return[new er.AE(this.view,this,"No activity could be found.")];e.push(...t.records.map((e=>new ReflogRecordNode(this.view,this,e)))),t.hasMore&&e.push(new er.Gd(this.view,this,e[e.length-1])),this.children=e}return this.children}getTreeItem(){const e=new r.TreeItem("Incoming Activity",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Reflog,e.description="experimental",e.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-activity.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-activity.svg")},e}refresh(e){super.refresh(!0),e&&(this._reflog=void 0)}_reflog;async getReflog(){return void 0===this._reflog&&(this._reflog=await this.view.container.git.getIncomingActivity(this.repo.path,{all:!0,limit:this.limit??this.view.config.defaultItemLimit})),this._reflog}get hasMore(){return this._reflog?.hasMore??!0}async loadMore(e){let t=await this.getReflog();void 0!==t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._reflog!==t&&(this._reflog=t,this.limit=t?.count,this.triggerChange(!1)))}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ns(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&ss(t,i,n)})([(0,G.fF)()],ReflogNode.prototype,"refresh",1);var os=Object.defineProperty,as=Object.getOwnPropertyDescriptor;class RemotesNode extends Yi.y{constructor(e,t,i,r){super("remotes",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){const e=await this.repo.getRemotes({sort:!0});if(0===e.length)return[new er.AE(this.view,this,"No remotes could be found")];this.children=e.map((e=>new RemoteNode(this.uri,this.view,this,this.repo,e)))}return this.children}getTreeItem(){const e=new r.TreeItem("Remotes",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Remotes,e.iconPath=new r.ThemeIcon("cloud"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?as(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&os(t,i,n)})([(0,G.fF)()],RemotesNode.prototype,"refresh",1);var cs=i(1101),ls=Object.defineProperty,hs=Object.getOwnPropertyDescriptor;class StashesNode extends Yi.y{constructor(e,t,i,r){super("stashes",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){const e=await this.repo.getStash();if(null==e)return[new er.AE(this.view,this,"No stashes could be found.")];this.children=[...(0,ae.UI)(e.commits.values(),(e=>new cs.i(this.view,this,e)))]}return this.children}getTreeItem(){const e=new r.TreeItem("Stashes",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Stashes,e.iconPath=new r.ThemeIcon("gitlens-stashes"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?hs(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&ls(t,i,n)})([(0,G.fF)()],StashesNode.prototype,"refresh",1);class StatusFilesNode extends ai.Re{constructor(e,t,i,r){super("status-files",h.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.range=r,this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.status.repoPath}async getChildren(){let e=[];const t=this.repoPath;let i;null!=this.range&&(i=await this.view.container.git.getLog(t,{limit:0,ref:this.range}),null!=i&&(await Promise.allSettled((0,ae.UI)((0,ae.hX)(i.commits.values(),(e=>null==e.files)),(e=>e.ensureFullDetails()))),e=[...(0,ae.VS)(i.commits.values(),(e=>e.files?.map((t=>({...t,commit:e})))??[]))])),"worktrees"!==this.view.type&&!this.view.config.includeWorkingTree||0===this.status.files.length||e.unshift(...(0,ae.VS)(this.status.files,(e=>(0,ae.UI)(e.getPseudoCommits(this.view.container,void 0),(t=>this.getFileWithPseudoCommit(e,t)))))),e.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const r=(0,ot.vM)(e,(e=>e.path));let s=Object.values(r).map((e=>new Xi.q(this.view,this,e[e.length-1],t,e.map((e=>e.commit)))));if("list"!==this.view.config.files.layout){const e=(0,ot.Mo)(s,(e=>e.uri.relativePath.split("/")),((...e)=>(0,le.AH)((0,le.RQ)(...e))),this.view.config.files.compact);s=new Ji.Y(this.view,this,e,t,"",void 0,!0).getChildren()}else s.sort(((e,t)=>e.priority-t.priority||(0,E.dm)(e.label,t.label)));return s}async getTreeItem(){let e="worktrees"===this.view.type||this.view.config.includeWorkingTree?this.status.files.length:0;if(null!=this.range&&null!=this.status.upstream&&this.status.state.ahead>0)if(e>0){const t=await this.view.container.git.getDiffStatus(this.repoPath,`${this.status.upstream}...`);if(null!=t){const i=new Set;for(const e of this.status.files)i.add(e.path);for(const e of t)i.add(e.path);e=i.size}}else{const t=await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}...`);null!=t?e+=t.changedFiles:e=-1}const t=-1===e?"?? files changed":`${(0,E._6)("file",e)} changed`,i=new r.TreeItem(t,r.TreeItemCollapsibleState.Collapsed);return i.id=this.id,i.contextValue=ai.Td.StatusFiles,i.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-diff.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-diff.svg")},i}getFileWithPseudoCommit(e,t){return{status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:t}}}var us=Object.defineProperty,ds=Object.getOwnPropertyDescriptor,ps=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ds(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&us(t,i,n),n};class TagNode extends Ki.b{constructor(e,t,i,r){super("tag",e,t,i),this.parent=i,this.tag=r,this.updateContext({tag:r}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}toClipboard(){return this.tag.name}get label(){return"tree"===this.view.config.branches.layout?this.tag.getBasename():this.tag.name}get ref(){return this.tag}async getChildren(){const e=await this.getLog();if(null==e)return[new er.AE(this.view,this,"No commits could be found.")];const t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.tag.name),i=[...(0,tr.E)((0,ae.UI)(e.commits.values(),(e=>new Zi.D(this.view,this,e,void 0,void 0,t))),this)];return e.hasMore&&i.push(new er.Gd(this.view,this,i[i.length-1],{getCount:()=>this.view.container.git.getCommitCount(this.tag.repoPath,this.tag.name)})),i}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Tag,e.description=(0,o.X)(this.tag.message),e.tooltip=`${this.tag.name}${(0,E.vk)(n.NE.Dash,2,2)}${(0,f.zL)(this.tag.sha,{force:!0})}${null!=this.tag.date?`\n${this.tag.formatDateFromNow()} (${this.tag.formatDate(this.view.container.TagDateFormatting.dateFormat)})`:""}\n\n${(0,o.X)(this.tag.message)}${null!=this.tag.commitDate&&this.tag.date!==this.tag.commitDate?`\n${this.tag.formatCommitDateFromNow()} (${this.tag.formatCommitDate(this.view.container.TagDateFormatting.dateFormat)})`:""}`,e}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:this.tag.name})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}ps([(0,oe.H)(),(0,G.fF)()],TagNode.prototype,"refresh",1),ps([(0,oe.H)()],TagNode.prototype,"loadMore",1);var ms=Object.defineProperty,gs=Object.getOwnPropertyDescriptor;class TagsNode extends Yi.y{constructor(e,t,i,r){super("tags",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){const e=await this.repo.getTags({sort:!0});if(0===e.values.length)return[new er.AE(this.view,this,"No tags could be found.")];const t=e.values.map((e=>new TagNode(h.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,e)));if("list"===this.view.config.branches.layout)return t;const i=(0,ot.Mo)(t,(e=>e.tag.name.split("/")),((...e)=>e.join("/")),this.view.config.files.compact),r=new BranchOrTagFolderNode(this.view,this,"tag",i,this.repo.path,"",void 0);this.children=r.getChildren()}return this.children}getTreeItem(){const e=new r.TreeItem("Tags",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.Tags,e.iconPath=new r.ThemeIcon("tag"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?gs(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&ms(t,i,n)})([(0,G.fF)()],TagsNode.prototype,"refresh",1);class UncommittedFileNode extends mr.T{constructor(e,t,i,r){super("uncommitted-file",h.YY.fromFile(r,i),e,t,r)}toClipboard(){return this.path}get path(){return this.file.path}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);e.contextValue=ai.Td.File,e.description=this.description,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath);const t=(0,g.tK)(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,le.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,le.RQ)("images","light",t))},e.tooltip=pr.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)}",this.file),e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=pr.o.fromTemplate(this.view.config.formats.files.description,{...this.file},{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,le.XX)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=pr.o.fromTemplate("${file}",{...this.file},{relativePath:this.relativePath})),this._label}get priority(){return 0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){const e={uri:h.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:n.Gh.DiffWithPrevious,arguments:[void 0,e]}}}class UncommittedFilesNode extends ai.Re{constructor(e,t,i,r){super("uncommitted-files",h.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.range=r,this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.status.repoPath}getChildren(){const e=this.repoPath,t=[...(0,ae.VS)(this.status.files,(e=>e.getPseudoCommits(this.view.container,void 0).map((t=>({status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:t})))))];t.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const i=(0,ot.vM)(t,(e=>e.path));let r=Object.values(i).map((t=>new UncommittedFileNode(this.view,this,e,t[t.length-1])));if("list"!==this.view.config.files.layout){const t=(0,ot.Mo)(r,(e=>e.uri.relativePath.split("/")),((...e)=>(0,le.AH)((0,le.RQ)(...e))),this.view.config.files.compact);r=new Ji.Y(this.view,this,t,e,"",void 0,!0).getChildren()}else r.sort(((e,t)=>e.priority-t.priority||e.label.localeCompare(t.label,void 0,{numeric:!0,sensitivity:"base"})));return r}getTreeItem(){const e=new r.TreeItem("Uncommitted changes",r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=ai.Td.UncommittedFiles,e.iconPath=new r.ThemeIcon("folder"),e}}var fs=Object.defineProperty,ws=Object.getOwnPropertyDescriptor,vs=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ws(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&fs(t,i,n),n};class WorktreeNode extends Yi.y{constructor(e,t,i,r){super("worktree",e,t,i),this.parent=i,this.worktree=r,this.updateContext({worktree:r}),this._uniqueId=(0,ai.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;_branch;get id(){return this._uniqueId}toClipboard(){return this.worktree.uri.fsPath}get repoPath(){return this.uri.repoPath}async getChildren(){if(null==this.children){const e=this._branch;let t,i;if(null!=e&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=e.upstream||e.remote)&&(0,ne.fw)("gitlens:hasConnectedRemotes")&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,he.PQ)();const i=this.getAssociatedPullRequest(e,{include:["opened","merged"]});queueMicrotask((async()=>{await(t?.promise);let r=!1;const s=setTimeout((()=>{r=!0,this.view.triggerNodeChange(this)}),250),n=await i;clearTimeout(s),null!=n&&null!=this.children&&this.children.splice("compare-branch"===this.children[0].type?1:0,0,new wr.Z(this.view,this,n,e)),(r||null!=n)&&this.view.triggerNodeChange(this)}))}const[r,s,n,o]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),this.worktree.getStatus(),null==e||e.remote?void 0:this.view.container.git.getBranchAheadRange(e).then((e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e}):void 0))]),a=(0,he.Sb)(r);if(null==a)return[new er.AE(this.view,this,"No commits could be found.")];const c=[];null!=e&&!1!==this.view.config.showBranchComparison&&c.push(new CompareBranchNode(this.uri,this.view,this,e,this.view.config.showBranchComparison,this.splatted)),null!=e&&null!=i&&c.push(new wr.Z(this.view,this,i,e));const l=(0,he.Sb)(o),h=(0,he.Sb)(s);c.push(...(0,tr.E)((0,ae.UI)(a.commits.values(),(t=>new Zi.D(this.view,this,t,l?.has(t.ref),e,h))),this)),a.hasMore&&c.push(new er.Gd(this.view,this,c[c.length-1]));const u=(0,he.Sb)(n);u?.hasChanges&&c.unshift(new UncommittedFilesNode(this.view,this,u,void 0)),this.children=c,t?.fulfill()}return this.children}async getTreeItem(){this.splatted=!1;let e="";const t=new r.MarkdownString("",!0);let i,s=!1;const o=this.worktree.main||this.worktree.opened?`${(0,E.vk)(n.NE.Dash,2,2)} ${this.worktree.main?"_Main"+(this.worktree.opened?", Active_":"_"):this.worktree.opened?"_Active_":""} `:"";let a=!1;switch(this.worktree.type){case"bare":i=new r.ThemeIcon("folder"),t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Bare Worktree${o}\\\n\`${this.worktree.friendlyPath}\``);break;case"branch":{const[c,l]=await Promise.allSettled([this.worktree.getBranch(),this.worktree.getStatus()]),h=(0,he.Sb)(c),u=(0,he.Sb)(l);if(this._branch=h,t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Worktree for Branch $(git-branch) ${h?.getNameWithoutRemote()??this.worktree.branch}${o}\\\n\`${this.worktree.friendlyPath}\``),i=new r.ThemeIcon("git-branch"),null!=u?(s=u.hasChanges,t.appendMarkdown(`\n\n${u.getFormattedDiffStatus({prefix:"Has Uncommitted Changes\\\n",empty:"No Uncommitted Changes",expand:!0})}`)):"rejected"===l.status&&(A.Yd.error(l.reason,"Worktree status failed"),a=!0),null!=h&&(t.appendMarkdown(`\n\nBranch $(git-branch) ${h.getNameWithoutRemote()}`),!h.remote))if(null!=h.upstream){let i=n.NE.Dash;const r=await h.getRemote();if(h.upstream.missing)i=n.NE.Warning;else if(null!=r){let e,t;for(const{type:i}of r.urls)if("fetch"===i){if(e=!0,t)break}else if("push"===i&&(t=!0,e))break;e&&t?i=n.NE.ArrowsRightLeft:t?i=n.NE.ArrowRight:e&&(i=n.NE.ArrowLeft)}e=`${h.getTrackingStatus({empty:(0,E.vk)(i,0,2),suffix:(0,E.vk)(i,2,2)})}${h.upstream.name}`,t.appendMarkdown(` is ${h.getTrackingStatus({empty:h.upstream.missing?`missing upstream $(git-branch) ${h.upstream.name}`:`up to date with $(git-branch)  ${h.upstream.name}${r?.provider?.name?` on ${r.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${h.upstream.name}${r?.provider?.name?` on ${r.provider.name}`:""}`})}`)}else{const e=w.ss.getHighlanderProviderName(await this.view.container.git.getRemotesWithProviders(h.repoPath));t.appendMarkdown(` hasn't been published to ${e??"a remote"}`)}break}case"detached":{let e;i=new r.ThemeIcon("git-commit"),t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Detached Worktree at $(git-commit) ${(0,f.zL)(this.worktree.sha)}${o}\\\n\`${this.worktree.friendlyPath}\``);try{e=await this.worktree.getStatus()}catch(e){A.Yd.error(e,"Worktree status failed"),a=!0}null!=e&&(s=e.hasChanges,t.appendMarkdown(`\n\n${e.getFormattedDiffStatus({prefix:"Has Uncommitted Changes",empty:"No Uncommitted Changes",expand:!0})}`));break}}const c=this.getState("pendingPullRequest");null!=c&&t.appendMarkdown(`\n\n$(loading~spin) Loading associated pull request${n.NE.Ellipsis}`),a&&t.appendMarkdown(`\n\n${n.NE.Warning} Unable to locate worktree path`);const l=new r.TreeItem(this.worktree.name,r.TreeItemCollapsibleState.Collapsed);return l.id=this.id,l.description=e,l.contextValue=`${ai.Td.Worktree}${this.worktree.main?"+main":""}${this.worktree.opened?"+active":""}`,l.iconPath=null!=c?new r.ThemeIcon("loading~spin"):this.worktree.opened?new r.ThemeIcon("check"):i,l.tooltip=t,l.resourceUri=a?r.Uri.parse("gitlens-view://worktree/missing"):s?r.Uri.parse("gitlens-view://worktree/changes"):void 0,l}refresh(e){super.refresh(!0),e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return r??(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{ref:this.worktree.sha,limit:this.limit??this.view.config.defaultItemLimit})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await r.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.children=void 0,this.triggerChange(!1)))}}vs([(0,G.fF)()],WorktreeNode.prototype,"refresh",1),vs([(0,oe.H)()],WorktreeNode.prototype,"loadMore",1);var ys=Object.defineProperty,bs=Object.getOwnPropertyDescriptor;class WorktreesNode extends Yi.y{constructor(e,t,i,r){super("worktrees",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){if(!(await this.repo.access(c.x.Worktrees)).allowed)return[];const e=await this.repo.getWorktrees();if(0===e.length)return[new er.AE(this.view,this,"No worktrees could be found.")];this.children=e.map((e=>new WorktreeNode(this.uri,this.view,this,e)))}return this.children}async getTreeItem(){const e=await this.repo.access(c.x.Worktrees),t=new r.TreeItem("Worktrees",e.allowed?r.TreeItemCollapsibleState.Collapsed:r.TreeItemCollapsibleState.None);return t.id=this.id,t.contextValue=ai.Td.Worktrees,t.description=e.allowed?void 0:` ${n.NE.Warning}  Requires a trial or paid plan for use on privately hosted repos`,t.iconPath=new r.ThemeIcon("folder-opened"),t}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?bs(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&ys(t,i,n)})([(0,G.fF)()],WorktreesNode.prototype,"refresh",1);var Cs=Object.defineProperty,As=Object.getOwnPropertyDescriptor,Ss=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?As(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Cs(t,i,n),n};class RepositoryNode extends Vi.C{constructor(e,t,i,r,s){super("repository",e,t,i),this.repo=r,this.updateContext({...s,repository:this.repo}),this._uniqueId=(0,ai.tO)(this.type,this.context),this._status=this.repo.getStatus()}_status;get id(){return this._uniqueId}toClipboard(){return this.repo.path}get repoPath(){return this.repo.path}get workspace(){return this.context.workspace}get wsRepositoryDescriptor(){return this.context.wsRepositoryDescriptor}async getChildren(){if(void 0===this.children){const e=[],t=await this._status;if(null!=t){const i=new u.XI(this.view.container,t.repoPath,t.branch,!1,!0,void 0,t.sha,t.upstream?{name:t.upstream,missing:!1}:void 0,t.state.ahead,t.state.behind,t.detached,t.rebasing);!1!==this.view.config.showBranchComparison&&e.push(new CompareBranchNode(this.uri,this.view,this,i,this.view.config.showBranchComparison,!0));const[r,s]=await Promise.all([this.view.container.git.getMergeStatus(t.repoPath),this.view.container.git.getRebaseStatus(t.repoPath)]);if(null!=r?e.push(new MergeStatusNode(this.view,this,i,r,t,!0)):null!=s?e.push(new RebaseStatusNode(this.view,this,i,s,t,!0)):this.view.config.showUpstreamStatus&&(t.upstream?t.state.behind||t.state.ahead?(t.state.behind&&e.push(new BranchTrackingStatusNode(this.view,this,i,t,"behind",!0)),t.state.ahead&&e.push(new BranchTrackingStatusNode(this.view,this,i,t,"ahead",!0,{showAheadCommits:!0}))):e.push(new BranchTrackingStatusNode(this.view,this,i,t,"same",!0)):e.push(new BranchTrackingStatusNode(this.view,this,i,t,"none",!0))),this.view.config.includeWorkingTree&&0!==t.files.length){const i=void 0;e.push(new StatusFilesNode(this.view,this,t,i))}0===e.length||this.view.config.compact||e.push(new er.AE(this.view,this,"",n.NE.Dash.repeat(2),"")),this.view.config.showCommits&&e.push(new BranchNode(this.uri,this.view,this,this.repo,i,!0,{showAsCommits:!0,showComparison:!1,showCurrent:!1,showStatus:!1,showTracking:!1}))}this.view.config.showBranches&&e.push(new BranchesNode(this.uri,this.view,this,this.repo)),this.view.config.showRemotes&&e.push(new RemotesNode(this.uri,this.view,this,this.repo)),this.view.config.showStashes&&await this.repo.supports(c.A.Stashes)&&e.push(new StashesNode(this.uri,this.view,this,this.repo)),this.view.config.showTags&&e.push(new TagsNode(this.uri,this.view,this,this.repo)),this.view.config.showWorktrees&&await this.repo.supports(c.A.Worktrees)&&e.push(new WorktreesNode(this.uri,this.view,this,this.repo)),this.view.config.showContributors&&e.push(new ContributorsNode(this.uri,this.view,this,this.repo)),this.view.config.showIncomingActivity&&!this.repo.provider.virtual&&e.push(new ReflogNode(this.uri,this.view,this,this.repo)),this.children=e}return this.children}async getTreeItem(){const e=this.repo.formattedName??this.uri.repoPath??"",t=await(this.repo?.getLastFetched())??0;let i,s=`${this.repo.formattedName??this.uri.repoPath??""}${t?`${(0,E.vk)(n.NE.Dash,2,2)}Last fetched ${v._j.formatLastFetched(t,!1)}`:""}${this.repo.formattedName?`\\\n${this.uri.repoPath}`:""}`,o="";const{workspace:a}=this.context;let c,l=ai.Td.Repository;this.repo.starred&&(l+="+starred"),null!=a&&(l+="+workspace","cloud"===a.type?l+="+cloud":"local"===a.type&&(l+="+local")),this.repo.closed?(l+="+closed",c=""):c="-solid",this.repo.virtual&&(l+="+virtual",c="-cloud");const h=await this._status;if(null!=h){s+=`\n\nCurrent branch $(git-branch) ${h.branch}${h.rebasing?" (Rebasing)":""}`,this.view.config.includeWorkingTree&&0!==h.files.length&&(o=h.getFormattedDiffStatus({compact:!0,prefix:(0,E.vk)(n.NE.Dot,1,1)}));let e;if(i=`${h.getUpstreamStatus({suffix:(0,E.vk)(n.NE.Dot,1,1)})}${h.branch}${h.rebasing?" (Rebasing)":""}${o}`,null!=h.upstream){const t=w.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(h.repoPath));e=t?.length?t[0].name:void 0}else{const t=await h.getRemote();e=t?.provider?.name}c+=o?"-blue":"",null!=h.upstream&&(s+=` is ${h.getUpstreamStatus({empty:`up to date with $(git-branch) ${h.upstream}${e?` on ${e}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${h.upstream}${e?` on ${e}`:""}`})}`,h.state.behind&&(l+="+behind",c+="-red"),h.state.ahead&&(c+=h.state.behind?"-yellow":"-green",l+="+ahead")),o&&(s+=`\n\nWorking tree has uncommitted changes${h.getFormattedDiffStatus({expand:!0,prefix:"\n",separator:"\n"})}`)}null!=a&&(s+=`\n\nRepository is ${this.repo.closed?"not ":""}open in the current window`);const u=new r.TreeItem(e,null!=a||"workspaces"===this.view.type?r.TreeItemCollapsibleState.Collapsed:r.TreeItemCollapsibleState.Expanded);u.id=this.id,u.contextValue=l,u.description=`${i??""}${t?`${(0,E.vk)(n.NE.Dot,1,1)}Last fetched ${v._j.formatLastFetched(t)}`:""}`,u.iconPath={dark:this.view.container.context.asAbsolutePath(`images/dark/icon-repo${c}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-repo${c}.svg`)},null==a||this.repo.closed||(u.resourceUri=r.Uri.parse("gitlens-view://workspaces/repository/open"));const d=new r.MarkdownString(s,!0);return d.supportHtml=!0,d.isTrusted=!0,u.tooltip=d,u}fetch(e={}){return this.repo.fetch(e)}pull(e={}){return this.repo.pull(e)}push(e={}){return this.repo.push(e)}async refresh(e=!1){super.refresh(e),e&&(this._status=this.repo.getStatus()),await this.ensureSubscription()}async star(){await this.repo.star(),this.parent.triggerChange()}async unstar(){await this.repo.unstar(),this.parent.triggerChange()}async subscribe(){const e=await(this.repo?.getLastFetched())??0,t=[(0,de.D$)(this.repo.onDidChange,this.onRepositoryChanged,this)],i=v._j.getLastFetchedUpdateInterval(e);return 0!==e&&i>0&&t.push((0,pe.DH)((()=>{i!==v._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)}),i)),this.view.config.includeWorkingTree&&t.push((0,de.D$)(this.repo.onDidChangeFileSystem,this.onFileSystemChanged,this,[this.repo.watchFileSystem()])),r.Disposable.from(...t)}etag(){return this.repo.etag}async onFileSystemChanged(e){if(this._status=this.repo.getStatus(),void 0!==this.children){const e=await this._status;let t=this.children.findIndex((e=>"status-files"===e.type));if(void 0===e||!e.state.ahead&&0===e.files.length)-1!==t&&this.children.splice(t,1);else{let i=1;-1===t&&(t=(0,ot.qr)(this.children,(e=>"tracking-status"===e.type||"branch"===e.type)),i=0,t++);const r=void 0;this.children.splice(t,i,new StatusFilesNode(this.view,this,e,r))}}this.triggerChange(!1)}onRepositoryChanged(e){if(e.changed(v.I6.Closed,v.du.Any))this.dispose();else if(null==this.children||e.changed(v.I6.Config,v.I6.Index,v.I6.Heads,v.I6.Opened,v.I6.Status,v.I6.Unknown,v.du.Any))this.triggerChange(!0);else{if(e.changed(v.I6.Remotes,v.I6.RemoteProviders,v.du.Any)){const e=this.children.find((e=>"remotes"===e.type));null!=e&&this.view.triggerNodeChange(e)}if(e.changed(v.I6.Stash,v.du.Any)){const e=this.children.find((e=>"stashes"===e.type));null!=e&&this.view.triggerNodeChange(e)}if(e.changed(v.I6.Tags,v.du.Any)){const e=this.children.find((e=>"tags"===e.type));null!=e&&this.view.triggerNodeChange(e)}}}}Ss([(0,G.cM)()],RepositoryNode.prototype,"fetch",1),Ss([(0,G.cM)()],RepositoryNode.prototype,"pull",1),Ss([(0,G.cM)()],RepositoryNode.prototype,"push",1),Ss([(0,oe.H)(),(0,G.fF)()],RepositoryNode.prototype,"refresh",1),Ss([(0,G.cM)()],RepositoryNode.prototype,"star",1),Ss([(0,G.cM)()],RepositoryNode.prototype,"unstar",1),Ss([(0,G.fF)()],RepositoryNode.prototype,"subscribe",1),Ss([(0,G.fF)({args:{0:e=>`{ repository: ${e.repository?.name??""}, uris(${e.uris.length}): [${e.uris.slice(0,1).map((e=>e.fsPath)).join(", ")}${e.uris.length>1?", ...":""}] }`}})],RepositoryNode.prototype,"onFileSystemChanged",1),Ss([(0,G.fF)({args:{0:e=>e.toString()}})],RepositoryNode.prototype,"onRepositoryChanged",1);var Ps=i(202),ks=i(2758),Ds=Object.defineProperty,Rs=Object.getOwnPropertyDescriptor,_s=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Rs(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ds(t,i,n),n};function Ts(e,t,i,r=1){return(0,at.xR)(e,((...e)=>{if(0!==r){let[s,n,...o]=e;if(s instanceof ai.Re&&Array.isArray(n)&&n[0]instanceof ai.Re)return n=n.filter((e=>e?.constructor===s.constructor)),2===r?t.apply(i,[s,n,...o]):(0,pe.df)(t,n.map((e=>[e,...o])),i)}return t.apply(i,e)}),i)}class ViewCommands{constructor(e){this.container=e,Ts("gitlens.views.clearComparison",(e=>this.clearComparison(e)),this),Ts("gitlens.views.clearReviewed",(e=>this.clearReviewed(e)),this),(0,at.xR)(n.Gh.ViewsCopy,(async(e,t)=>{if(0===(t=Array.isArray(t)?t:null!=e?[e]:[]).length)return;const i=t.map((e=>e.toClipboard?.())).filter((e=>Boolean(e))).join("\n");await r.env.clipboard.writeText(i)}),this),Ts("gitlens.views.collapseNode",(()=>(0,at.dO)("list.collapseAllToFocus")),this),Ts("gitlens.views.dismissNode",(e=>(0,ai.kP)(e.view)&&e.view.dismissNode(e)),this),Ts("gitlens.views.editNode",(e=>(0,ai.LD)(e)&&e.edit()),this),Ts("gitlens.views.expandNode",(e=>e.view.reveal(e,{select:!1,focus:!1,expand:3})),this),Ts("gitlens.views.loadMoreChildren",(e=>e.loadMore()),this),Ts("gitlens.views.loadAllChildren",(e=>e.loadAll()),this),Ts("gitlens.views.refreshNode",((e,t)=>(null==t&&(0,ai.On)(e)&&(e.limit=void 0,e.view.resetNodeLastKnownLimit(e)),e.view.refreshNode(e,t??!0))),this),Ts("gitlens.views.setShowRelativeDateMarkersOn",(()=>this.setShowRelativeDateMarkers(!0)),this),Ts("gitlens.views.setShowRelativeDateMarkersOff",(()=>this.setShowRelativeDateMarkers(!1)),this),Ts("gitlens.views.fetch",this.fetch,this),Ts("gitlens.views.publishBranch",this.publishBranch,this),Ts("gitlens.views.publishRepository",this.publishRepository,this),Ts("gitlens.views.pull",this.pull,this),Ts("gitlens.views.push",this.push,this),Ts("gitlens.views.pushWithForce",(e=>this.push(e,!0)),this),Ts("gitlens.views.closeRepository",this.closeRepository,this),Ts("gitlens.views.setAsDefault",this.setAsDefault,this),Ts("gitlens.views.unsetAsDefault",this.unsetAsDefault,this),Ts("gitlens.views.openInTerminal",this.openInTerminal,this),Ts("gitlens.views.star",this.star,this),Ts("gitlens.views.unstar",this.unstar,this),Ts("gitlens.views.browseRepoAtRevision",this.browseRepoAtRevision,this),Ts("gitlens.views.browseRepoAtRevisionInNewWindow",(e=>this.browseRepoAtRevision(e,{openInNewWindow:!0})),this),Ts("gitlens.views.browseRepoBeforeRevision",(e=>this.browseRepoAtRevision(e,{before:!0})),this),Ts("gitlens.views.browseRepoBeforeRevisionInNewWindow",(e=>this.browseRepoAtRevision(e,{before:!0,openInNewWindow:!0})),this),Ts("gitlens.views.addAuthors",this.addAuthors,this),Ts("gitlens.views.addAuthor",this.addAuthor,this),Ts("gitlens.views.openChanges",this.openChanges,this),Ts("gitlens.views.openChangesWithWorking",this.openChangesWithWorking,this),Ts("gitlens.views.openPreviousChangesWithWorking",this.openPreviousChangesWithWorking,this),Ts("gitlens.views.openFile",this.openFile,this),Ts("gitlens.views.openFileRevision",this.openRevision,this),Ts("gitlens.views.openChangedFiles",this.openFiles,this),Ts("gitlens.views.openChangedFileDiffs",this.openAllChanges,this),Ts("gitlens.views.openChangedFileDiffsWithWorking",this.openAllChangesWithWorking,this),Ts("gitlens.views.openChangedFileRevisions",this.openRevisions,this),Ts("gitlens.views.applyChanges",this.applyChanges,this),Ts("gitlens.views.highlightChanges",this.highlightChanges,this),Ts("gitlens.views.highlightRevisionChanges",this.highlightRevisionChanges,this),Ts("gitlens.views.restore",this.restore,this),Ts("gitlens.views.switchToAnotherBranch",this.switch,this),Ts("gitlens.views.switchToBranch",this.switchTo,this),Ts("gitlens.views.switchToCommit",this.switchTo,this),Ts("gitlens.views.switchToTag",this.switchTo,this),Ts("gitlens.views.addRemote",this.addRemote,this),Ts("gitlens.views.pruneRemote",this.pruneRemote,this),Ts("gitlens.views.removeRemote",this.removeRemote,this),Ts("gitlens.views.stageDirectory",this.stageDirectory,this),Ts("gitlens.views.stageFile",this.stageFile,this),Ts("gitlens.views.unstageDirectory",this.unstageDirectory,this),Ts("gitlens.views.unstageFile",this.unstageFile,this),Ts("gitlens.views.compareAncestryWithWorking",this.compareAncestryWithWorking,this),Ts("gitlens.views.compareWithHead",this.compareHeadWith,this),Ts("gitlens.views.compareWithUpstream",this.compareWithUpstream,this),Ts("gitlens.views.compareWithSelected",this.compareWithSelected,this),Ts("gitlens.views.selectForCompare",this.selectForCompare,this),Ts("gitlens.views.compareFileWithSelected",this.compareFileWithSelected,this),Ts("gitlens.views.selectFileForCompare",this.selectFileForCompare,this),Ts("gitlens.views.compareWithWorking",this.compareWorkingWith,this),Ts("gitlens.views.setBranchComparisonToWorking",(e=>this.setBranchComparison(e,"working")),this),Ts("gitlens.views.setBranchComparisonToBranch",(e=>this.setBranchComparison(e,"branch")),this),Ts("gitlens.views.cherryPick",this.cherryPick,this,2),Ts("gitlens.views.title.createBranch",(()=>this.createBranch())),Ts("gitlens.views.createBranch",this.createBranch,this),Ts("gitlens.views.deleteBranch",this.deleteBranch,this),Ts("gitlens.views.renameBranch",this.renameBranch,this),Ts("gitlens.views.title.applyStash",(()=>this.applyStash())),Ts("gitlens.views.stash.delete",this.deleteStash,this,2),Ts("gitlens.views.stash.rename",this.renameStash,this),Ts("gitlens.views.title.createTag",(()=>this.createTag())),Ts("gitlens.views.createTag",this.createTag,this),Ts("gitlens.views.deleteTag",this.deleteTag,this),Ts("gitlens.views.mergeBranchInto",this.merge,this),Ts("gitlens.views.pushToCommit",this.pushToCommit,this),Ts("gitlens.views.rebaseOntoBranch",this.rebase,this),Ts("gitlens.views.rebaseOntoUpstream",this.rebaseToRemote,this),Ts("gitlens.views.rebaseOntoCommit",this.rebase,this),Ts("gitlens.views.resetCommit",this.resetCommit,this),Ts("gitlens.views.resetToCommit",this.resetToCommit,this),Ts("gitlens.views.resetToTip",this.resetToTip,this),Ts("gitlens.views.revert",this.revert,this),Ts("gitlens.views.undoCommit",this.undoCommit,this),Ts("gitlens.views.createPullRequest",this.createPullRequest,this),Ts("gitlens.views.openPullRequest",this.openPullRequest,this),Ts("gitlens.views.title.createWorktree",(()=>this.createWorktree())),Ts("gitlens.views.createWorktree",this.createWorktree,this),Ts("gitlens.views.deleteWorktree",this.deleteWorktree,this),Ts("gitlens.views.openWorktree",this.openWorktree,this),Ts("gitlens.views.revealRepositoryInExplorer",this.revealRepositoryInExplorer,this),Ts("gitlens.views.revealWorktreeInExplorer",this.revealWorktreeInExplorer,this),Ts("gitlens.views.openWorktreeInNewWindow",(e=>this.openWorktree(e,{location:"newWindow"})),this),Ts("gitlens.views.setResultsCommitsFilterAuthors",(e=>this.setResultsCommitsFilter(e,!0)),this),Ts("gitlens.views.setResultsCommitsFilterOff",(e=>this.setResultsCommitsFilter(e,!1)),this)}addAuthors(e){return Dr.q((0,ai.pp)(e))}addAuthor(e){return e instanceof ContributorNode?Dr.q(e.repoPath,e.contributor.current?void 0:e.contributor):Promise.resolve()}addRemote(e){return Rr.IH((0,ai.pp)(e))}applyChanges(e){return e instanceof Ki.R?e instanceof Ps.C?kr.zb(e.file,(0,f.xB)(e.ref1,e.repoPath),(0,f.xB)(e.ref2,e.repoPath)):null==e.ref||"HEAD"===e.ref.ref?Promise.resolve():kr.zb(e.file,e.ref):Promise.resolve()}applyStash(){return Tr.nn()}browseRepoAtRevision(e,t){return e instanceof Ki.b||e instanceof Ki.R?(0,Sr.g)(e.uri,{before:t?.before,openInNewWindow:t?.openInNewWindow}):Promise.resolve()}cherryPick(e,t){return e instanceof Zi.D?null!=t&&0!==t.length?_r.QP(e.repoPath,t.map((e=>e.ref))):_r.QP(e.repoPath,e.ref):Promise.resolve()}clearComparison(e){e.is("compare-branch")&&e.clear()}clearReviewed(e){let t;if(e.is("results-files")){if(t=e.getParent(),null==t)return}else t=e;(t.is("compare-branch")||t.is("compare-results"))&&t.clearReviewed()}closeRepository(e){(e instanceof RepositoryNode||e instanceof Qi.v)&&(e.repo.closed=!0)}async createBranch(e){let t=e instanceof Ki.b||e instanceof Ki.R?e?.ref:e instanceof BranchTrackingStatusNode?e.branch:void 0;if(null==t){t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)}return Pr.Ue(e?.repoPath,t)}async createPullRequest(e){if(!(e instanceof BranchNode||e instanceof BranchTrackingStatusNode))return Promise.resolve();const t=await e.branch.getRemote();return(0,at.SI)("createPullRequest",{repoPath:e.repoPath,remote:null!=t?{name:t.name,provider:null!=t.provider?{id:t.provider.id,name:t.provider.name,domain:t.provider.domain}:void 0,url:t.url}:void 0,branch:{name:e.branch.name,upstream:e.branch.upstream?.name,isRemote:e.branch.remote}})}async createTag(e){let t=e instanceof Ki.b||e instanceof Ki.R?e?.ref:e instanceof BranchTrackingStatusNode?e.branch:void 0;if(null==t){t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)}return Fr.Ue(e?.repoPath,t)}async createWorktree(e){if(e instanceof WorktreesNode&&(e=void 0),null==e||e instanceof BranchNode)return $r.Ue(e?.repoPath,void 0,e?.ref)}deleteBranch(e){return e instanceof BranchNode?Pr.Od(e.repoPath,e.branch):Promise.resolve()}deleteStash(e,t){if(!(e instanceof cs.i))return Promise.resolve();if(null!=t&&0!==t.length){const e=t.sort(((e,t)=>parseInt(t.commit.number,10)-parseInt(e.commit.number,10)));return(0,pe.df)(Tr.Cw,e.map((e=>[e.repoPath,e.commit])),this)}return Tr.Cw(e.repoPath,e.commit)}renameStash(e){return e instanceof cs.i?Tr.PQ(e.repoPath,e.commit):Promise.resolve()}deleteTag(e){return e instanceof TagNode?Fr.Od(e.repoPath,e.tag):Promise.resolve()}async deleteWorktree(e){if(e instanceof WorktreeNode)return $r.Od(e.repoPath,e.worktree.uri)}fetch(e){return e instanceof RepositoryNode||e instanceof Qi.v?_r.he(e.repo):e instanceof RemoteNode?Rr.he(e.remote.repoPath,e.remote.name):e instanceof BranchNode||e instanceof BranchTrackingStatusNode?_r.he(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}async highlightChanges(e){(e instanceof xr.R||e instanceof ks.y||e instanceof Lr.m||e instanceof Ps.C)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(r.window.activeTextEditor,"changes",{sha:e.ref.ref},!0))}async highlightRevisionChanges(e){(e instanceof xr.R||e instanceof ks.y||e instanceof Lr.m||e instanceof Ps.C)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(r.window.activeTextEditor,"changes",{sha:e.ref.ref,only:!0},!0))}merge(e){return e instanceof BranchNode||e instanceof TagNode?_r.TS(e.repoPath,e instanceof BranchNode?e.branch:e.tag):Promise.resolve()}openInTerminal(e){return e instanceof RepositoryNode||e instanceof Qi.v?(0,at.dO)("openInTerminal",r.Uri.file(e.repo.path)):Promise.resolve()}openPullRequest(e){return e instanceof wr.Z?(0,at.SI)("openPullRequest",{repoPath:e.uri.repoPath,provider:{id:e.pullRequest.provider.id,name:e.pullRequest.provider.name,domain:e.pullRequest.provider.domain},pullRequest:{id:e.pullRequest.id,url:e.pullRequest.url}}):Promise.resolve()}openWorktree(e,t){e instanceof WorktreeNode&&(0,V.ic)(e.worktree.uri,t)}pruneRemote(e){return e instanceof RemoteNode?Rr.Qs(e.remote.repoPath,e.remote.name):Promise.resolve()}async removeRemote(e){return e instanceof RemoteNode?Rr.Od(e.remote.repoPath,e.remote.name):Promise.resolve()}publishBranch(e){return e instanceof BranchNode||e instanceof BranchTrackingStatusNode?_r.VF(e.repoPath,void 0,e.branch):Promise.resolve()}publishRepository(e){return e instanceof BranchNode||e instanceof BranchTrackingStatusNode?(0,at.Zv)("git.publish",r.Uri.file(e.repoPath)):Promise.resolve()}pull(e){return e instanceof RepositoryNode||e instanceof Qi.v?_r.X4(e.repo):e instanceof BranchNode||e instanceof BranchTrackingStatusNode?_r.X4(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}push(e,t){return e instanceof RepositoryNode||e instanceof Qi.v?_r.VF(e.repo,t):e instanceof BranchNode||e instanceof BranchTrackingStatusNode?_r.VF(e.repoPath,t,e.root?void 0:e.branch):e instanceof Zi.D||e instanceof Lr.m?e.isTip?_r.VF(e.repoPath,t):this.pushToCommit(e):Promise.resolve()}pushToCommit(e){return e instanceof Zi.D||e instanceof Lr.m?_r.VF(e.repoPath,!1,e.commit):Promise.resolve()}rebase(e){return e instanceof BranchNode||e instanceof Zi.D||e instanceof Lr.m||e instanceof TagNode?_r.DW(e.repoPath,e.ref):Promise.resolve()}rebaseToRemote(e){if(!(e instanceof BranchNode||e instanceof BranchTrackingStatusNode))return Promise.resolve();const t=e instanceof BranchNode?e.branch.upstream?.name:e.status.upstream;return null==t?Promise.resolve():_r.DW(e.repoPath,(0,f.xB)(t,e.repoPath,{refType:"branch",name:t,remote:!0}))}renameBranch(e){return e instanceof BranchNode?Pr.PQ(e.repoPath,e.branch):Promise.resolve()}resetCommit(e){return e instanceof Zi.D||e instanceof Lr.m?_r.mc(e.repoPath,(0,f.xB)(`${e.ref.ref}^`,e.ref.repoPath,{refType:"revision",name:`${e.ref.name}^`,message:e.ref.message})):Promise.resolve()}resetToCommit(e){return e instanceof Zi.D||e instanceof Lr.m?_r.mc(e.repoPath,e.ref):Promise.resolve()}resetToTip(e){return e instanceof BranchNode?_r.mc(e.repoPath,(0,f.xB)(e.ref.ref,e.repoPath,{refType:"revision",name:e.ref.name})):Promise.resolve()}restore(e){return e instanceof Ki.R?kr.Hl(e.file,e.ref):Promise.resolve()}revealRepositoryInExplorer(e){if(e instanceof RepositoryNode)return(0,V.qM)(e.repo.uri)}revealWorktreeInExplorer(e){if(e instanceof WorktreeNode)return(0,V.qM)(e.worktree.uri)}revert(e){return e instanceof Zi.D||e instanceof Lr.m?_r.CU(e.repoPath,e.ref):Promise.resolve()}setAsDefault(e){return e instanceof RemoteNode?e.setAsDefault():Promise.resolve()}setBranchComparison(e,t){if(e instanceof CompareBranchNode)return e.setComparisonType(t)}setShowRelativeDateMarkers(e){return C.D.updateEffective("views.showRelativeDateMarkers",e)}async stageFile(e){(e instanceof xr.R||e instanceof Lr.m||e instanceof Xi.q)&&(await this.container.git.stageFile(e.repoPath,e.file.path),e.triggerChange())}async stageDirectory(e){e instanceof Ji.Y&&e.relativePath&&(await this.container.git.stageDirectory(e.repoPath,e.relativePath),e.triggerChange())}star(e){return e instanceof BranchNode||e instanceof RepositoryNode||e instanceof Qi.v?e.star():Promise.resolve()}switch(e){return _r.gu((0,ai.pp)(e))}switchTo(e){return e instanceof Ki.b?_r.gu(e.repoPath,e instanceof BranchNode&&e.branch.current?void 0:e.ref):_r.gu((0,ai.pp)(e))}async undoCommit(e){if(!(e instanceof Zi.D||e instanceof Lr.m))return;const t=await this.container.git.getOrOpenScmRepository(e.repoPath),i=await(t?.getCommit("HEAD"));i?.hash===e.ref.ref?await(0,at.Zv)("git.undoCommit",e.repoPath):r.window.showWarningMessage(`Commit ${(0,f.Wh)(e.ref,{capitalize:!0,icon:!1})} cannot be undone, because it is no longer the most recent commit.`)}unsetAsDefault(e){return e instanceof RemoteNode?e.setAsDefault(!1):Promise.resolve()}async unstageFile(e){(e instanceof xr.R||e instanceof Lr.m||e instanceof Xi.q)&&(await this.container.git.unstageFile(e.repoPath,e.file.path),e.triggerChange())}async unstageDirectory(e){e instanceof Ji.Y&&e.relativePath&&(await this.container.git.unstageDirectory(e.repoPath,e.relativePath),e.triggerChange())}unstar(e){return e instanceof BranchNode||e instanceof RepositoryNode||e instanceof Qi.v?e.unstar():Promise.resolve()}compareHeadWith(e){return e instanceof Ki.b||e instanceof Ki.R?e instanceof Ki.R?this.compareFileWith(e.repoPath,e.uri,e.ref.ref,void 0,"HEAD"):this.container.searchAndCompareView.compare(e.repoPath,"HEAD",e.ref):Promise.resolve()}compareWithUpstream(e){return e instanceof BranchNode?null==e.branch.upstream?Promise.resolve():this.container.searchAndCompareView.compare(e.repoPath,e.ref,e.branch.upstream.name):Promise.resolve()}compareWorkingWith(e){return e instanceof Ki.b||e instanceof Ki.R?e instanceof Ki.R?this.compareFileWith(e.repoPath,e.uri,e.ref.ref,void 0,""):this.container.searchAndCompareView.compare(e.repoPath,"",e.ref):Promise.resolve()}async compareAncestryWithWorking(e){if(!(e instanceof BranchNode))return;const t=await this.container.git.getBranch(e.repoPath);if(null==t)return;const i=await this.container.git.getMergeBase(e.repoPath,t.ref,e.ref.ref);return null!=i?this.container.searchAndCompareView.compare(e.repoPath,{ref:i,label:`ancestry with ${e.ref.ref} (${(0,f.zL)(i)})`},""):void 0}compareWithSelected(e){(e instanceof Ki.b||e instanceof Ki.R)&&this.container.searchAndCompareView.compareWithSelected(e.repoPath,e.ref)}selectForCompare(e){(e instanceof Ki.b||e instanceof Ki.R)&&this.container.searchAndCompareView.selectForCompare(e.repoPath,e.ref)}async compareFileWith(e,t,i,r,s){return null==r&&(r=await this.container.git.getWorkingUri(e,t)),(0,at.P0)(n.Gh.DiffWith,{repoPath:e,lhs:{sha:i,uri:t},rhs:{sha:s,uri:r??t}})}compareFileWithSelected(e){if(null==this._selectedFile||!(e instanceof Ki.R)||null==e.ref)return Promise.resolve();if(this._selectedFile.repoPath!==e.repoPath)return this.selectFileForCompare(e),Promise.resolve();const t=this._selectedFile;return this._selectedFile=void 0,(0,ne.v)("gitlens:views:canCompare:file",!1),this.compareFileWith(t.repoPath,t.uri,t.ref,e.uri,e.ref.ref)}_selectedFile;selectFileForCompare(e){e instanceof Ki.R&&null!=e.ref&&(this._selectedFile={ref:e.ref.ref,repoPath:e.repoPath,uri:e.uri},(0,ne.v)("gitlens:views:canCompare:file",!0))}async openAllChanges(e,t){if(e instanceof Zi.D||e instanceof cs.i||e instanceof lr.V){if(e instanceof lr.V){const{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return kr.Gp(i,{repoPath:e.repoPath,lhs:e.ref1,rhs:e.ref2},t)}return kr.Gp(e.commit,t)}}openChanges(e){if(!(e instanceof Ki.R||e instanceof MergeConflictFileNode||e instanceof Xi.q))return;if(e instanceof MergeConflictFileNode)return void(0,at.P0)(n.Gh.DiffWith,{lhs:{sha:e.status.HEAD.ref,uri:h.YY.fromFile(e.file,e.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:h.YY.fromFile(e.file,e.repoPath)},repoPath:e.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}});const t=e.getCommand();if(null!=t?.arguments)switch(t.command){case n.Gh.DiffWith:{const[e]=t.arguments;e.showOptions.preview=!1,(0,at.P0)(t.command,e);break}case n.Gh.DiffWithPrevious:{const[,e]=t.arguments;e.showOptions.preview=!1,(0,at.b2)(t.command,void 0,e);break}default:throw new Error(`Unexpected command: ${t.command}`)}}async openAllChangesWithWorking(e,t){if(e instanceof Zi.D||e instanceof cs.i||e instanceof lr.V){if(e instanceof lr.V){const{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return kr.Ou(i,{repoPath:e.repoPath,ref:e.ref1||e.ref2},t)}return kr.Ou(e.commit,t)}}async openChangesWithWorking(e){if(!(e instanceof Ki.R||e instanceof MergeConflictFileNode||e instanceof Xi.q))return Promise.resolve();if(e instanceof Xi.q)return(0,at.b2)(n.Gh.DiffWithWorking,void 0,{uri:e.uri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof MergeConflictFileNode)return(0,at.b2)(n.Gh.DiffWithWorking,void 0,{uri:e.baseUri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof Lr.m&&e.commit.file?.hasConflicts){const t=await e.getConflictBaseUri();if(null!=t)return(0,at.b2)(n.Gh.DiffWithWorking,void 0,{uri:t,showOptions:{preserveFocus:!0,preview:!0}})}return kr.ce(e.file,{repoPath:e.repoPath,ref:e.ref.ref})}async openPreviousChangesWithWorking(e){return e instanceof Ki.R?kr.ce(e.file,{repoPath:e.repoPath,ref:`${e.ref.ref}^`}):Promise.resolve()}openFile(e,t){return e instanceof Ki.R||e instanceof MergeConflictFileNode||e instanceof Xi.q||e instanceof FileHistoryNode||e instanceof LineHistoryNode?kr.ZB(e.uri,{preserveFocus:!0,preview:!1,...t}):Promise.resolve()}async openFiles(e){if(e instanceof Zi.D||e instanceof cs.i||e instanceof lr.V){if(e instanceof lr.V){const{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return kr.aE(t,e.repoPath,e.ref1||e.ref2)}return kr.aE(e.commit)}}async openRevision(e,t){if(!(e instanceof xr.R||e instanceof Lr.m||e instanceof Ps.C||e instanceof ks.y||e instanceof MergeConflictFileNode||e instanceof Xi.q))return Promise.resolve();let i=(t={showOptions:{preserveFocus:!0,preview:!1},...t}).revisionUri;return null==i&&(i=e instanceof Ps.C||e instanceof MergeConflictFileNode?this.container.git.getRevisionUri(e.uri):"D"===e.commit.file?.status?this.container.git.getRevisionUri(await e.commit.getPreviousSha()??p.Ii,e.commit.file.path,e.commit.repoPath):this.container.git.getRevisionUri(e.uri)),kr.YS(i,t.showOptions??{preserveFocus:!0,preview:!1})}async openRevisions(e,t){if(e instanceof Zi.D||e instanceof cs.i||e instanceof lr.V){if(e instanceof lr.V){const{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return kr.Dh(t,e.repoPath,e.ref1,e.ref2)}return kr.Dh(e.commit)}}async setResultsCommitsFilter(e,t){if(!e?.is("compare-results")&&!e?.is("compare-branch"))return;const i=this.container.git.getRepository(e.repoPath);if(null!=i){if(t){let r=e.getState("filterCommits");if(null==r){const e=await this.container.git.getCurrentUser(i.uri);r=null!=e?[e]:void 0}const s=await(0,Ir.J)(this.container,i,"Filter Commits",i.virtual?"Choose a contributor to show commits from":"Choose contributors to show commits from",{appendReposToTitle:!0,clearButton:!0,multiselect:!i.virtual,picked:e=>r?.some((t=>(0,m.v)(e,t)))??!1});if(null==s)return;0===s.length?(t=!1,e.deleteState("filterCommits")):e.storeState("filterCommits",s)}else e.deleteState("filterCommits");e.triggerChange(!0)}}}_s([(0,G.cM)()],ViewCommands.prototype,"addAuthors",1),_s([(0,G.cM)()],ViewCommands.prototype,"addAuthor",1),_s([(0,G.cM)()],ViewCommands.prototype,"addRemote",1),_s([(0,G.cM)()],ViewCommands.prototype,"applyChanges",1),_s([(0,G.cM)()],ViewCommands.prototype,"applyStash",1),_s([(0,G.cM)()],ViewCommands.prototype,"browseRepoAtRevision",1),_s([(0,G.cM)()],ViewCommands.prototype,"cherryPick",1),_s([(0,G.cM)()],ViewCommands.prototype,"clearComparison",1),_s([(0,G.cM)()],ViewCommands.prototype,"clearReviewed",1),_s([(0,G.cM)()],ViewCommands.prototype,"closeRepository",1),_s([(0,G.cM)()],ViewCommands.prototype,"createBranch",1),_s([(0,G.cM)()],ViewCommands.prototype,"createPullRequest",1),_s([(0,G.cM)()],ViewCommands.prototype,"createTag",1),_s([(0,G.cM)()],ViewCommands.prototype,"createWorktree",1),_s([(0,G.cM)()],ViewCommands.prototype,"deleteBranch",1),_s([(0,G.cM)()],ViewCommands.prototype,"deleteStash",1),_s([(0,G.cM)()],ViewCommands.prototype,"renameStash",1),_s([(0,G.cM)()],ViewCommands.prototype,"deleteTag",1),_s([(0,G.cM)()],ViewCommands.prototype,"deleteWorktree",1),_s([(0,G.cM)()],ViewCommands.prototype,"fetch",1),_s([(0,G.cM)()],ViewCommands.prototype,"highlightChanges",1),_s([(0,G.cM)()],ViewCommands.prototype,"highlightRevisionChanges",1),_s([(0,G.cM)()],ViewCommands.prototype,"merge",1),_s([(0,G.cM)()],ViewCommands.prototype,"openInTerminal",1),_s([(0,G.cM)()],ViewCommands.prototype,"openPullRequest",1),_s([(0,G.cM)()],ViewCommands.prototype,"openWorktree",1),_s([(0,G.cM)()],ViewCommands.prototype,"pruneRemote",1),_s([(0,G.cM)()],ViewCommands.prototype,"removeRemote",1),_s([(0,G.cM)()],ViewCommands.prototype,"publishBranch",1),_s([(0,G.cM)()],ViewCommands.prototype,"publishRepository",1),_s([(0,G.cM)()],ViewCommands.prototype,"pull",1),_s([(0,G.cM)()],ViewCommands.prototype,"push",1),_s([(0,G.cM)()],ViewCommands.prototype,"pushToCommit",1),_s([(0,G.cM)()],ViewCommands.prototype,"rebase",1),_s([(0,G.cM)()],ViewCommands.prototype,"rebaseToRemote",1),_s([(0,G.cM)()],ViewCommands.prototype,"renameBranch",1),_s([(0,G.cM)()],ViewCommands.prototype,"resetCommit",1),_s([(0,G.cM)()],ViewCommands.prototype,"resetToCommit",1),_s([(0,G.cM)()],ViewCommands.prototype,"resetToTip",1),_s([(0,G.cM)()],ViewCommands.prototype,"restore",1),_s([(0,G.cM)()],ViewCommands.prototype,"revealRepositoryInExplorer",1),_s([(0,G.cM)()],ViewCommands.prototype,"revealWorktreeInExplorer",1),_s([(0,G.cM)()],ViewCommands.prototype,"revert",1),_s([(0,G.cM)()],ViewCommands.prototype,"setAsDefault",1),_s([(0,G.cM)()],ViewCommands.prototype,"setBranchComparison",1),_s([(0,G.cM)()],ViewCommands.prototype,"setShowRelativeDateMarkers",1),_s([(0,G.cM)()],ViewCommands.prototype,"stageFile",1),_s([(0,G.cM)()],ViewCommands.prototype,"stageDirectory",1),_s([(0,G.cM)()],ViewCommands.prototype,"star",1),_s([(0,G.cM)()],ViewCommands.prototype,"switch",1),_s([(0,G.cM)()],ViewCommands.prototype,"switchTo",1),_s([(0,G.cM)()],ViewCommands.prototype,"undoCommit",1),_s([(0,G.cM)()],ViewCommands.prototype,"unsetAsDefault",1),_s([(0,G.cM)()],ViewCommands.prototype,"unstageFile",1),_s([(0,G.cM)()],ViewCommands.prototype,"unstageDirectory",1),_s([(0,G.cM)()],ViewCommands.prototype,"unstar",1),_s([(0,G.cM)()],ViewCommands.prototype,"compareHeadWith",1),_s([(0,G.cM)()],ViewCommands.prototype,"compareWithUpstream",1),_s([(0,G.cM)()],ViewCommands.prototype,"compareWorkingWith",1),_s([(0,G.cM)()],ViewCommands.prototype,"compareAncestryWithWorking",1),_s([(0,G.cM)()],ViewCommands.prototype,"compareWithSelected",1),_s([(0,G.cM)()],ViewCommands.prototype,"selectForCompare",1),_s([(0,G.cM)()],ViewCommands.prototype,"compareFileWithSelected",1),_s([(0,G.cM)()],ViewCommands.prototype,"selectFileForCompare",1),_s([(0,G.cM)()],ViewCommands.prototype,"openAllChanges",1),_s([(0,G.cM)()],ViewCommands.prototype,"openChanges",1),_s([(0,G.cM)()],ViewCommands.prototype,"openAllChangesWithWorking",1),_s([(0,G.cM)()],ViewCommands.prototype,"openChangesWithWorking",1),_s([(0,G.cM)()],ViewCommands.prototype,"openPreviousChangesWithWorking",1),_s([(0,G.cM)()],ViewCommands.prototype,"openFile",1),_s([(0,G.cM)()],ViewCommands.prototype,"openFiles",1),_s([(0,G.cM)()],ViewCommands.prototype,"openRevision",1),_s([(0,G.cM)()],ViewCommands.prototype,"openRevisions",1),_s([(0,G.cM)()],ViewCommands.prototype,"setResultsCommitsFilter",1);var Fs=Object.defineProperty,$s=Object.getOwnPropertyDescriptor,Is=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?$s(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Fs(t,i,n),n};class BranchesRepositoryNode extends Qi.v{async getChildren(){return null==this.child&&(this.child=new BranchesNode(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(v.I6.Config,v.I6.Heads,v.I6.Index,v.I6.Remotes,v.I6.RemoteProviders,v.I6.Status,v.I6.Unknown,v.du.Any)}}class BranchesViewNode extends RepositoriesSubscribeableNode{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading branches...":"No branches could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new BranchesRepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getBranches({filter:e=>!e.remote});return 0===t.values.length?(this.view.message="No branches could be found.",this.view.title="Branches",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Branches (${t.values.length})`,e.getChildren())}return this.view.title="Branches",this.children}getTreeItem(){return new r.TreeItem("Branches",r.TreeItemCollapsibleState.Expanded)}}class BranchesView extends zi._H{configKey="branches";constructor(e){super(e,"branches","Branches","branchesView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showBranches")}getRoot(){return new BranchesViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches"),this.refresh(!0))),this),Ts(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout("list")),this),Ts(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout("tree")),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortBranchesBy")||C.D.changed(e,"sortRepositoriesBy"))}findBranch(e,t){if(e.remote)return;const{repoPath:i}=e;return this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:4,canTraverse:e=>e instanceof BranchesViewNode||(e instanceof BranchesRepositoryNode||e instanceof BranchOrTagFolderNode)&&e.repoPath===i,token:t})}async findCommit(e,t){const{repoPath:i}=e,r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,d.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==r.length)return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:async t=>t instanceof BranchesViewNode||(t instanceof BranchesRepositoryNode||t instanceof BranchOrTagFolderNode?t.repoPath===i:!!(t instanceof BranchNode&&t.repoPath===i&&r.includes(t.branch.name))&&(await t.loadMore({until:e.ref}),!0)),token:t})}revealBranch(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findBranch(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof BranchesViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"branch")}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}Is([(0,oe.H)((()=>""))],BranchesView.prototype,"revealBranch",1),Is([(0,oe.H)((()=>""))],BranchesView.prototype,"revealCommit",1),Is([(0,oe.H)((()=>""))],BranchesView.prototype,"revealRepository",1);var xs=Object.defineProperty,Os=Object.getOwnPropertyDescriptor,Es=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Os(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&xs(t,i,n),n};class CommitsRepositoryNode extends Qi.v{async getChildren(){if(null==this.child){const e=await this.repo.getBranch();if(null==e)return this.view.message="No commits could be found.",[];this.view.message=void 0;const t=this.view.state.filterCommits.get(this.repo.id);this.child=new BranchNode(this.uri,this.view,this.splatted?this.parent??this:this,this.repo,e,!0,{expanded:!0,limitCommits:!this.splatted,showComparison:this.view.config.showBranchComparison,showCurrent:!1,showMergeCommits:!this.view.state.hideMergeCommits,showTracking:!0,authors:t})}return this.child.getChildren()}async refresh(e=!1){e?this.child=void 0:this.parent?.triggerChange(!1),await this.ensureSubscription()}async subscribe(){const e=await(this.repo?.getLastFetched())??0,t=v._j.getLastFetchedUpdateInterval(e);return 0!==e&&t>0?r.Disposable.from(await super.subscribe(),(0,pe.DH)((()=>{t!==v._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)}),t)):super.subscribe()}changed(e){return e.changed(v.I6.Config,v.I6.Heads,v.I6.Index,v.I6.Remotes,v.I6.RemoteProviders,v.I6.Status,v.I6.Unknown,v.du.Any)}}Es([(0,oe.H)(),(0,G.fF)()],CommitsRepositoryNode.prototype,"refresh",1),Es([(0,G.fF)()],CommitsRepositoryNode.prototype,"subscribe",1);class CommitsViewNode extends RepositoriesSubscribeableNode{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading commits...":"No commits could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new CommitsRepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e,t,{showBranchAndLastFetched:!0})))}const e=C.D.get("plusFeatures.enabled")&&null==this.view.container.usage.get("graphView:shown")&&null==this.view.container.usage.get("graphWebview:shown")?new er.$h(this.view,this,(0,at.fA)(n.Gh.ShowGraph,"Show Commit Graph"),"Visualize commits on the Commit Graph ✨",void 0,"Visualize commits on the Commit Graph ✨",new r.ThemeIcon("gitlens-graph")):void 0;if(1===this.children.length){const[t]=this.children,i=await t.repo.getBranch();if(null!=i){const e=await t.repo.getLastFetched()??0,r=i.getTrackingStatus();this.view.description=`${r?`${r} ${n.NE.Dot} `:""}${i.name}${i.rebasing?" (Rebasing)":""}${e?` ${n.NE.Dot} Last fetched ${v._j.formatLastFetched(e)}`:""}`}return null==e?t.getChildren():[e,...await t.getChildren()]}return null==e?this.children:[e,...this.children]}getTreeItem(){return new r.TreeItem("Commits",r.TreeItemCollapsibleState.Expanded)}}class CommitsView extends zi._H{configKey="commits";constructor(e){super(e,"commits","Commits","commitsView"),this.disposables.push(e.usage.onDidChange(this.onUsageChanged,this))}onUsageChanged(e){null!=e&&"graphView:shown"!==e.key&&"graphWebview:shown"!==e.key||this.refresh()}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showCommits")}_state={filterCommits:new Map};get state(){return this._state}getRoot(){return new CommitsViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","status","tags"),this.refresh(!0))),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setCommitsFilterAuthors"),(e=>this.setCommitsFilter(e,!0)),this),Ts(this.getQualifiedCommand("setCommitsFilterOff"),(e=>this.setCommitsFilter(e,!1)),this),Ts(this.getQualifiedCommand("setShowMergeCommitsOn"),(()=>this.setShowMergeCommits(!0)),this),Ts(this.getQualifiedCommand("setShowMergeCommitsOff"),(()=>this.setShowMergeCommits(!1)),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"plusFeatures.enabled")||C.D.changed(e,"sortRepositoriesBy"))}async findCommit(e,t){const{repoPath:i}=e,r=await this.container.git.getBranch(e.repoPath);if(null==r)return;return(await this.container.git.getCommitBranches(e.repoPath,e.ref,r.name,{commitDate:(0,d.f_)(e)?e.committer.date:void 0})).length?this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:2,canTraverse:async t=>{if(t instanceof CommitsViewNode){let i=await(t.getSplattedChild?.());return i instanceof CommitsRepositoryNode&&(i=await(i.getSplattedChild?.()),i instanceof BranchNode&&await i.loadMore({until:e.ref})),!0}if(t instanceof CommitsRepositoryNode&&t.repoPath===i){const i=await(t.getSplattedChild?.());if(i instanceof BranchNode)return await i.loadMore({until:e.ref}),!0}return t instanceof BranchTrackingStatusNode&&t.repoPath===i},token:t}):void 0}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof CommitsViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}async setCommitsFilter(e,t){let i;if(null!=e)if(e.is("repo-folder"))i=e.repo;else{let t=e;do{if(t=t.getParent(),t?.is("repo-folder")){i=t.repo;break}}while(null!=t)}if(t){if(i??=await(0,hi.vJ)("Filter Commits","Choose a repository"),null==i)return;let e=this.state.filterCommits.get(i.id);if(null==e){const t=await this.container.git.getCurrentUser(i.uri);e=null!=t?[t]:void 0}const r=await(0,Ir.J)(this.container,i,"Filter Commits",i.virtual?"Choose a contributor to show commits from":"Choose contributors to show commits from",{appendReposToTitle:!0,clearButton:!0,multiselect:!i.virtual,picked:t=>e?.some((e=>(0,m.v)(t,e)))??!1});if(null==r)return;0===r.length?(t=!1,this.state.filterCommits.delete(i.id)):this.state.filterCommits.set(i.id,r)}else null!=i?this.state.filterCommits.delete(i.id):this.state.filterCommits.clear();(0,ne.v)("gitlens:views:commits:filtered",0!==this.state.filterCommits.size),this.refresh(!0)}setShowMergeCommits(e){(0,ne.v)("gitlens:views:commits:hideMergeCommits",!e),this.state.hideMergeCommits=!e,this.refresh(!0)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"working")}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}Es([(0,oe.H)((()=>""))],CommitsView.prototype,"revealCommit",1),Es([(0,oe.H)((()=>""))],CommitsView.prototype,"revealRepository",1);var Bs=Object.defineProperty,Ws=Object.getOwnPropertyDescriptor,Ms=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ws(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Bs(t,i,n),n};class ContributorsRepositoryNode extends Qi.v{async getChildren(){return null==this.child&&(this.child=new ContributorsNode(this.uri,this.view,this,this.repo)),this.child.getChildren()}async subscribe(){return r.Disposable.from(await super.subscribe(),(0,Ve.cL)((e=>this.child?.updateAvatar(e.email))))}changed(e){return e.changed(v.I6.Config,v.I6.Heads,v.I6.Remotes,v.I6.Unknown,v.du.Any)}}Ms([(0,G.fF)()],ContributorsRepositoryNode.prototype,"subscribe",1);class ContributorsViewNode extends RepositoriesSubscribeableNode{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading contributors...":"No contributors could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new ContributorsRepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.getChildren();return 0===t.length?(this.view.message="No contributors could be found.",this.view.title="Contributors",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Contributors (${t.length})`,t)}return this.view.title="Contributors",this.children}getTreeItem(){return new r.TreeItem("Contributors",r.TreeItemCollapsibleState.Expanded)}}class ContributorsView extends zi._H{configKey="contributors";constructor(e){super(e,"contributors","Contributors","contributorsView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showContributors")}getRoot(){return new ContributorsViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("contributors"),this.refresh(!0))),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setShowAllBranchesOn"),(()=>this.setShowAllBranches(!0)),this),Ts(this.getQualifiedCommand("setShowAllBranchesOff"),(()=>this.setShowAllBranches(!1)),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Ts(this.getQualifiedCommand("setShowStatisticsOn"),(()=>this.setShowStatistics(!0)),this),Ts(this.getQualifiedCommand("setShowStatisticsOff"),(()=>this.setShowStatistics(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortContributorsBy")||C.D.changed(e,"sortRepositoriesBy"))}findContributor(e,t){const{repoPath:i,username:r,email:s,name:n}=e;return this.findNode((e=>e instanceof ContributorNode&&e.contributor.username===r&&e.contributor.email===s&&e.contributor.name===n),{maxDepth:2,canTraverse:e=>e instanceof ContributorsViewNode||e instanceof ContributorsRepositoryNode&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof ContributorsViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}async revealContributor(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing contributor '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findContributor(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAllBranches(e){return C.D.updateEffective(`views.${this.configKey}.showAllBranches`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowStatistics(e){return C.D.updateEffective(`views.${this.configKey}.showStatistics`,e)}}Ms([(0,oe.H)((()=>""))],ContributorsView.prototype,"revealRepository",1),Ms([(0,oe.H)((()=>""))],ContributorsView.prototype,"revealContributor",1);var Ns=i(9679);class DraftNode extends ai.Re{constructor(e,t,i,r){super("draft",e,t,i),this.parent=i,this.draft=r,this.updateContext({draft:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.draft.title??this.draft.description??""}getChildren(){return[]}getTreeItem(){const e=this.draft.title??`Draft (${this.draft.id})`,t=new r.TreeItem(e,r.TreeItemCollapsibleState.None),i=C.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",s=this.draft.updatedAt.getTime()-this.draft.createdAt.getTime()>=1e3;return t.id=this.id,t.contextValue=ai.Td.Draft,t.iconPath=new r.ThemeIcon("cloud"),t.tooltip=new r.MarkdownString(`${e}${this.draft.description?`\\\n${this.draft.description}`:""}\n\nCreated ${(0,U.Zh)(this.draft.createdAt)} &nbsp; _(${(0,U.p6)(this.draft.createdAt,i)})_${s?` \\\nLast updated ${(0,U.Zh)(this.draft.updatedAt)} &nbsp; _(${(0,U.p6)(this.draft.updatedAt,i)})_`:""}`),t.description=(0,U.Zh)(this.draft.updatedAt),t.command={title:"Show Patch",command:this.view.getQualifiedCommand("open"),arguments:[this]},t}}var Ls=Object.defineProperty,Us=Object.getOwnPropertyDescriptor;class DraftsViewNode extends Yi.y{constructor(e){super("drafts",h.Wj,e)}async getChildren(){if(null==this.children){const e=[],t=await this.view.container.drafts.getDrafts();t.sort(((e,t)=>t.createdAt.getTime()-e.createdAt.getTime()));for(const i of t)e.push(new DraftNode(this.uri,this.view,this,i));this.children=e}return this.children}getTreeItem(){return new r.TreeItem("Drafts",r.TreeItemCollapsibleState.Expanded)}}class DraftsView extends zi._H{configKey="drafts";_disposable;constructor(e){super(e,"drafts","Cloud Patches","draftsView"),this.description="PREVIEW  ☁️"}dispose(){this._disposable?.dispose(),super.dispose()}get canSelectMany(){return!1}getRoot(){return new DraftsViewNode(this)}async show(e){if(await(0,Vt.C)())return super.show(e)}get canReveal(){return!1}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),Ts(this.getQualifiedCommand("create"),(async()=>{await(0,at.P0)(n.Gh.CreateCloudPatch),this.ensureRoot().triggerChange(!0)}),this),Ts(this.getQualifiedCommand("delete"),(async e=>{const t={title:"Delete"};await r.window.showInformationMessage(`Are you sure you want to delete Cloud Patch '${e.draft.title}'?`,{modal:!0},t,{title:"Cancel",isCloseAffordance:!0})===t&&(await this.container.drafts.deleteDraft(e.draft.id),e.getParent()?.triggerChange(!0))}),this),Ts(this.getQualifiedCommand("open"),(async e=>{let t=e.draft;null==t.changesets&&(t=await this.container.drafts.getDraft(e.draft.id)),(0,Ns.l)({mode:"view",draft:t})}),this)]}async findDraft(e,t){return this.findNode((t=>t.draft?.id===e.id),{allowPaging:!1,maxDepth:2,canTraverse:e=>e instanceof DraftsViewNode,token:t})}async revealDraft(e,t){const i=await this.findDraft(e);if(null!=i)return await this.ensureRevealNode(i,t),i}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Us(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&Ls(t,i,n)})([(0,oe.H)((()=>""))],DraftsView.prototype,"revealDraft",1);const Gs=" (pinned)";class FileHistoryView extends zi._H{configKey="fileHistory";_followCursor=!1;_followEditor=!0;constructor(e){super(e,"fileHistory","File History","fileHistoryView"),(0,ne.v)("gitlens:views:fileHistory:cursorFollowing",this._followCursor),(0,ne.v)("gitlens:views:fileHistory:editorFollowing",this._followEditor)}get showCollapseAll(){return!1}getRoot(){return this._followCursor?new LineHistoryTrackerNode(this):new FileHistoryTrackerNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),Ts(this.getQualifiedCommand("changeBase"),(()=>this.changeBase()),this),Ts(this.getQualifiedCommand("setCursorFollowingOn"),(()=>this.setCursorFollowing(!0)),this),Ts(this.getQualifiedCommand("setCursorFollowingOff"),(()=>this.setCursorFollowing(!1)),this),Ts(this.getQualifiedCommand("setEditorFollowingOn"),(()=>this.setEditorFollowing(!0)),this),Ts(this.getQualifiedCommand("setEditorFollowingOff"),(()=>this.setEditorFollowing(!1)),this),Ts(this.getQualifiedCommand("setRenameFollowingOn"),(()=>this.setRenameFollowing(!0)),this),Ts(this.getQualifiedCommand("setRenameFollowingOff"),(()=>this.setRenameFollowing(!1)),this),Ts(this.getQualifiedCommand("setShowAllBranchesOn"),(()=>this.setShowAllBranches(!0)),this),Ts(this.getQualifiedCommand("setShowAllBranchesOff"),(()=>this.setShowAllBranches(!1)),this),Ts(this.getQualifiedCommand("setShowMergeCommitsOn"),(()=>this.setShowMergeCommits(!0)),this),Ts(this.getQualifiedCommand("setShowMergeCommitsOff"),(()=>this.setShowMergeCommits(!1)),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"advanced.fileHistoryFollowsRenames")||C.D.changed(e,"advanced.fileHistoryShowAllBranches")||C.D.changed(e,"advanced.fileHistoryShowMergeCommits"))}async showHistoryForUri(e){this.setCursorFollowing(!1);const t=this.ensureRoot(!0);return t instanceof FileHistoryTrackerNode&&(await t.showHistoryForUri(e),this.setEditorFollowing(!1)),this.show()}changeBase(){this.root?.changeBase()}setCursorFollowing(e){const t=!this._followEditor&&this.root?.hasUri?this.root.uri:void 0;this._followCursor=e,(0,ne.v)("gitlens:views:fileHistory:cursorFollowing",e),this.title=this._followCursor?"Line History":"File History";const i=this.ensureRoot(!0);null!=t&&i.setUri(t),i.setEditorFollowing(this._followEditor),i.ensureSubscription(),this.refresh(!0)}setEditorFollowing(e){const t=this.ensureRoot();t.hasUri&&(this._followEditor=e,(0,ne.v)("gitlens:views:fileHistory:editorFollowing",e),t.setEditorFollowing(e),this.description?.endsWith(Gs)?e&&(this.description=this.description.substr(0,this.description.length-9)):e||null==this.description||(this.description+=Gs),e&&(t.ensureSubscription(),this.refresh(!0)))}setRenameFollowing(e){return C.D.updateEffective("advanced.fileHistoryFollowsRenames",e)}setShowAllBranches(e){return C.D.updateEffective("advanced.fileHistoryShowAllBranches",e)}setShowMergeCommits(e){return C.D.updateEffective("advanced.fileHistoryShowMergeCommits",e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}}const Hs=" (pinned)";class LineHistoryView extends zi._H{configKey="lineHistory";constructor(e){super(e,"lineHistory","Line History","lineHistoryView"),(0,ne.v)("gitlens:views:lineHistory:editorFollowing",!0)}get showCollapseAll(){return!1}getRoot(){return new LineHistoryTrackerNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),Ts(this.getQualifiedCommand("changeBase"),(()=>this.changeBase()),this),Ts(this.getQualifiedCommand("setEditorFollowingOn"),(()=>this.setEditorFollowing(!0)),this),Ts(this.getQualifiedCommand("setEditorFollowingOff"),(()=>this.setEditorFollowing(!1)),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat"))}changeBase(){this.root?.changeBase()}setEditorFollowing(e){const t=this.ensureRoot();t.hasUri&&((0,ne.v)("gitlens:views:lineHistory:editorFollowing",e),this.root?.setEditorFollowing(e),this.description?.endsWith(Hs)?e&&(this.description=this.description.substr(0,this.description.length-9)):e||null==this.description||(this.description+=Hs),e&&(t.ensureSubscription(),this.refresh(!0)))}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}}var Vs=Object.defineProperty,qs=Object.getOwnPropertyDescriptor,js=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?qs(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Vs(t,i,n),n};class RemotesRepositoryNode extends Qi.v{async getChildren(){return null==this.child&&(this.child=new RemotesNode(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(v.I6.Config,v.I6.Remotes,v.I6.RemoteProviders,v.I6.Unknown,v.du.Any)}}class RemotesViewNode extends RepositoriesSubscribeableNode{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading remotes...":"No remotes could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new RemotesRepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getRemotes();return 0===t.length?(this.view.message="No remotes could be found.",this.view.title="Remotes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Remotes (${t.length})`,e.getChildren())}return this.view.title="Remotes",this.children}getTreeItem(){return new r.TreeItem("Remotes",r.TreeItemCollapsibleState.Expanded)}}class RemotesView extends zi._H{configKey="remotes";constructor(e){super(e,"remotes","Remotes","remotesView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showRemotes")}getRoot(){return new RemotesViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","remotes"),this.refresh(!0))),this),Ts(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout("list")),this),Ts(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout("tree")),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"integrations.enabled")||C.D.changed(e,"sortBranchesBy")||C.D.changed(e,"sortRepositoriesBy"))}findBranch(e,t){if(!e.remote)return;const{repoPath:i}=e;return this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:t=>t instanceof RemotesViewNode||(t instanceof RemotesRepositoryNode||t instanceof BranchOrTagFolderNode?t.repoPath===i:t instanceof RemoteNode&&(t.repoPath===i&&t.remote.name===(0,u.Lo)(e.name))),token:t})}async findCommit(e,t){const{repoPath:i}=e,r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,d.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0});if(0===r.length)return;const s=r.map((e=>e.split("/",1)[0]));return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:e=>e instanceof RemotesViewNode||(e instanceof RemotesRepositoryNode||e instanceof BranchOrTagFolderNode?e.repoPath===i:e instanceof RemoteNode?e.repoPath===i&&s.includes(e.remote.name):e instanceof BranchNode?e.repoPath===i&&r.includes(e.branch.name):(e instanceof RepositoryNode||e instanceof RemotesNode||e instanceof BranchOrTagFolderNode)&&e.repoPath===i),token:t})}findRemote(e,t){const{repoPath:i}=e;return this.findNode((t=>t.remote?.name===e.name),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof RemotesViewNode||e instanceof RemotesRepositoryNode&&e.repoPath===i,token:t})}revealBranch(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findBranch(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}revealRemote(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findRemote(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof RemotesViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}js([(0,oe.H)((()=>""))],RemotesView.prototype,"revealBranch",1),js([(0,oe.H)((()=>""))],RemotesView.prototype,"revealCommit",1),js([(0,oe.H)((()=>""))],RemotesView.prototype,"revealRemote",1),js([(0,oe.H)((()=>""))],RemotesView.prototype,"revealRepository",1);var Qs=Object.defineProperty,Ys=Object.getOwnPropertyDescriptor,zs=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ys(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Qs(t,i,n),n};class RepositoriesNode extends Vi.C{constructor(e){super("repositories",h.Wj,e)}getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return[new er.AE(this.view,this,"No repositories could be found.")];this.children=e.map((e=>new RepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e)))}return this.children}getTreeItem(){const e="workspaces"===this.view.type,t=e&&null!=this.view.container.workspaces.currentWorkspaceId,i=t&&null!=this.view.container.workspaces.currentWorkspace,s=new r.TreeItem(e?"Current Window":"Repositories",e?r.TreeItemCollapsibleState.Collapsed:r.TreeItemCollapsibleState.Expanded);e&&(s.description=r.workspace.name??r.workspace.workspaceFolders?.[0]?.name??"");let n=ai.Td.Repositories;return e&&(n+="+workspaces"),t&&(n+="+linked"),i&&(n+="+current",s.resourceUri=r.Uri.parse("gitlens-view://workspaces/workspace/current")),s.contextValue=n,s}async refresh(e=!1){const t=null!=this.children;if(super.refresh(e),!t)return;if(e)return await this.unsubscribe(),void this.ensureSubscription();const i=this.view.container.git.openRepositories;if(0===i.length&&(null==this.children||0===this.children.length))return;if(0===i.length)return void(this.children=[new er.AE(this.view,this,"No repositories could be found.")]);const r=[];for(const e of i){const t=e.id,i=this.children.find((e=>e.repo.id===t));null!=i?(r.push(i),i.refresh()):r.push(new RepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e))}this.children=r,this.ensureSubscription()}subscribe(){const e=[(0,de.D$)(this.view.container.git.onDidChangeRepositories,this.onRepositoriesChanged,this)];return"gitlens.views.repositories"===this.view.id&&this.view.config.autoReveal&&e.push((0,de.D$)(r.window.onDidChangeActiveTextEditor,(0,pe.Ds)(this.onActiveEditorChanged,500),this)),r.Disposable.from(...e)}etag(){return(0,pe.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}onActiveEditorChanged(e){if(null!=e&&null!=this.children&&1!==this.children.length)try{const t=e.document.uri,i=this.children.find((e=>e instanceof RepositoryNode&&e.repo.containsUri(t)));if(null==i)return;let r=0===this.view.selection.length?void 0:this.view.selection[0];for(;null!=r;){if(r===i)return;r=r.getParent()}this.view.reveal(i,{expand:!0})}catch(e){A.Yd.error(e)}}onRepositoriesChanged(e){this.triggerChange(!0)}}zs([(0,oe.H)(),(0,G.fF)()],RepositoriesNode.prototype,"refresh",1),zs([(0,G.fF)()],RepositoriesNode.prototype,"subscribe",1),zs([(0,G.fF)({args:!1})],RepositoriesNode.prototype,"onActiveEditorChanged",1),zs([(0,G.fF)()],RepositoriesNode.prototype,"onRepositoriesChanged",1);var Ks=Object.defineProperty,Js=Object.getOwnPropertyDescriptor,Xs=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Js(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ks(t,i,n),n};class RepositoriesView extends zi._H{configKey="repositories";constructor(e){super(e,"repositories","Repositories","repositoriesView")}_onDidChangeAutoRefresh=new r.EventEmitter;get onDidChangeAutoRefresh(){return this._onDidChangeAutoRefresh.event}get canSelectMany(){return!1}getRoot(){return new RepositoriesNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","contributors","remotes","stashes","status","tags"),this.refresh(!0))),this),Ts(this.getQualifiedCommand("setBranchesLayoutToList"),(()=>this.setBranchesLayout("list")),this),Ts(this.getQualifiedCommand("setBranchesLayoutToTree"),(()=>this.setBranchesLayout("tree")),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setAutoRefreshToOn"),(()=>this.setAutoRefresh(C.D.get("views.repositories.autoRefresh"),!0)),this),Ts(this.getQualifiedCommand("setAutoRefreshToOff"),(()=>this.setAutoRefresh(C.D.get("views.repositories.autoRefresh"),!1)),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Ts(this.getQualifiedCommand("setBranchesShowBranchComparisonOn"),(()=>this.setBranchShowBranchComparison(!0)),this),Ts(this.getQualifiedCommand("setBranchesShowBranchComparisonOff"),(()=>this.setBranchShowBranchComparison(!1)),this),Ts(this.getQualifiedCommand("setShowBranchesOn"),(()=>this.toggleSection("showBranches",!0)),this),Ts(this.getQualifiedCommand("setShowBranchesOff"),(()=>this.toggleSection("showBranches",!1)),this),Ts(this.getQualifiedCommand("setShowCommitsOn"),(()=>this.toggleSection("showCommits",!0)),this),Ts(this.getQualifiedCommand("setShowCommitsOff"),(()=>this.toggleSection("showCommits",!1)),this),Ts(this.getQualifiedCommand("setShowContributorsOn"),(()=>this.toggleSection("showContributors",!0)),this),Ts(this.getQualifiedCommand("setShowContributorsOff"),(()=>this.toggleSection("showContributors",!1)),this),Ts(this.getQualifiedCommand("setShowRemotesOn"),(()=>this.toggleSection("showRemotes",!0)),this),Ts(this.getQualifiedCommand("setShowRemotesOff"),(()=>this.toggleSection("showRemotes",!1)),this),Ts(this.getQualifiedCommand("setShowStashesOn"),(()=>this.toggleSection("showStashes",!0)),this),Ts(this.getQualifiedCommand("setShowStashesOff"),(()=>this.toggleSection("showStashes",!1)),this),Ts(this.getQualifiedCommand("setShowTagsOn"),(()=>this.toggleSection("showTags",!0)),this),Ts(this.getQualifiedCommand("setShowTagsOff"),(()=>this.toggleSection("showTags",!1)),this),Ts(this.getQualifiedCommand("setShowWorktreesOn"),(()=>this.toggleSection("showWorktrees",!0)),this),Ts(this.getQualifiedCommand("setShowWorktreesOff"),(()=>this.toggleSection("showWorktrees",!1)),this),Ts(this.getQualifiedCommand("setShowUpstreamStatusOn"),(()=>this.toggleSection("showUpstreamStatus",!0)),this),Ts(this.getQualifiedCommand("setShowUpstreamStatusOff"),(()=>this.toggleSection("showUpstreamStatus",!1)),this),Ts(this.getQualifiedCommand("setShowSectionOff"),(e=>this.toggleSectionByNode(e,!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortBranchesBy")||C.D.changed(e,"sortContributorsBy")||C.D.changed(e,"sortTagsBy")||C.D.changed(e,"sortRepositoriesBy"))}onConfigurationChanged(e){C.D.changed(e,`views.${this.configKey}.autoRefresh`)&&this.setAutoRefresh(C.D.get("views.repositories.autoRefresh")),super.onConfigurationChanged(e)}get autoRefresh(){return this.config.autoRefresh&&this.container.storage.getWorkspace("views:repositories:autoRefresh",!0)}findBranch(e,t){const{repoPath:i}=e;return e.remote?this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:t=>t instanceof RepositoriesNode||(t instanceof RemoteNode?t.repoPath===i&&(e.remote&&t.remote.name===(0,u.Lo)(e.name)):(t instanceof RepositoryNode||t instanceof BranchesNode||t instanceof RemotesNode||t instanceof BranchOrTagFolderNode)&&t.repoPath===i),token:t}):this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof RepositoryNode||e instanceof BranchesNode||e instanceof BranchOrTagFolderNode)&&e.repoPath===i,token:t})}async findCommit(e,t){const{repoPath:i}=e;let r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,d.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==r.length)return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:async t=>t instanceof RepositoriesNode||(t instanceof RepositoryNode||t instanceof BranchesNode||t instanceof BranchOrTagFolderNode?t.repoPath===i:!!(t instanceof BranchNode&&t.repoPath===i&&r.includes(t.branch.name))&&(await t.loadMore({until:e.ref}),!0)),token:t});if(r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,d.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0}),0===r.length)return;const s=r.map((e=>e.split("/",1)[0]));return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:8,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof RemoteNode?e.repoPath===i&&s.includes(e.remote.name):e instanceof BranchNode?e.repoPath===i&&r.includes(e.branch.name):(e instanceof RepositoryNode||e instanceof RemotesNode||e instanceof BranchOrTagFolderNode)&&e.repoPath===i),token:t})}findContributor(e,t){const{repoPath:i,username:r,email:s,name:n}=e;return this.findNode((e=>e instanceof ContributorNode&&e.contributor.username===r&&e.contributor.email===s&&e.contributor.name===n),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof RepositoryNode||e instanceof ContributorsNode)&&e.repoPath===i,token:t})}findRemote(e,t){const{repoPath:i}=e;return this.findNode((t=>t.remote?.name===e.name),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof RepositoryNode||e instanceof RemotesNode)&&e.repoPath===i,token:t})}findStash(e,t){const{repoPath:i}=e;return this.findNode((t=>t.commit?.ref===e.ref),{maxDepth:3,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof RepositoryNode||e instanceof StashesNode)&&e.repoPath===i,token:t})}findTag(e,t){const{repoPath:i}=e;return this.findNode((t=>t.tag?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof RepositoryNode||e instanceof TagsNode||e instanceof BranchOrTagFolderNode)&&e.repoPath===i,token:t})}findWorktree(e,t){const{repoPath:i,uri:r}=e,s=r.toString();return this.findNode((t=>t instanceof WorktreeNode&&e.uri.toString()===s),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof RepositoryNode||e instanceof WorktreesNode)&&e.repoPath===i,token:t})}revealBranch(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const s=await this.findBranch(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealBranches(e,t){const i=await this.findNode((t=>t instanceof BranchesNode&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof RepositoriesNode||t instanceof RepositoryNode&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}async revealCommit(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealContributor(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing contributor '${e.name} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const s=await this.findContributor(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}revealRemote(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findRemote(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof RepositoryNode&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof RepositoriesNode});return void 0!==i&&await this.reveal(i,t),i}async revealStash(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const s=await this.findStash(e,r);return void 0!==s&&await this.reveal(s,t),s}))}async revealStashes(e,t){const i=await this.findNode((t=>t instanceof StashesNode&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof RepositoriesNode||t instanceof RepositoryNode&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}revealTag(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,r)=>{const s=await this.findTag(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealTags(e,t){const i=await this.findNode((t=>t instanceof TagsNode&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof RepositoriesNode||t instanceof RepositoryNode&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}revealWorktree(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findWorktree(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}async revealWorktrees(e,t){const i=await this.findNode((t=>t instanceof WorktreesNode&&t.repoPath===e),{maxDepth:2,canTraverse:t=>t instanceof RepositoriesNode||t instanceof RepositoryNode&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}async setAutoRefresh(e,t){e&&(void 0===t?t=this.container.storage.getWorkspace("views:repositories:autoRefresh",!0):await this.container.storage.storeWorkspace("views:repositories:autoRefresh",t)),(0,ne.v)("gitlens:views:repositories:autoRefresh",e&&t),this._onDidChangeAutoRefresh.fire()}setBranchesLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"working")}setBranchShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.branches.showBranchComparison`,!!e&&"branch")}toggleSection(e,t){return C.D.updateEffective(`views.${this.configKey}.${e}`,t)}toggleSectionByNode(e,t){return e instanceof BranchesNode?C.D.updateEffective(`views.${this.configKey}.showBranches`,t):e instanceof BranchNode?C.D.updateEffective(`views.${this.configKey}.showCommits`,t):e instanceof BranchTrackingStatusNode?C.D.updateEffective(`views.${this.configKey}.showUpstreamStatus`,t):e instanceof CompareBranchNode?this.setShowBranchComparison(t):e instanceof ContributorsNode?C.D.updateEffective(`views.${this.configKey}.showContributors`,t):e instanceof ReflogNode?C.D.updateEffective(`views.${this.configKey}.showIncomingActivity`,t):e instanceof RemotesNode?C.D.updateEffective(`views.${this.configKey}.showRemotes`,t):e instanceof StashesNode?C.D.updateEffective(`views.${this.configKey}.showStashes`,t):e instanceof TagsNode?C.D.updateEffective(`views.${this.configKey}.showTags`,t):e instanceof WorktreesNode?C.D.updateEffective(`views.${this.configKey}.showWorktrees`,t):Promise.resolve()}}Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealBranch",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealBranches",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealCommit",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealContributor",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealRemote",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealRepository",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealStash",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealStashes",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealTag",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealTags",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealWorktree",1),Xs([(0,oe.H)((()=>""))],RepositoriesView.prototype,"revealWorktrees",1);class ComparePickerNode extends ai.Re{constructor(e,t,i){super("compare-picker",h.Wj,e,t),this.selectedRef=i}order=Date.now();getChildren(){return[]}getTreeItem(){const e=this.selectedRef,t=e?.repoPath;let i,s;if(void 0!==t&&this.view.container.git.repositoryCount>1){const e=this.view.container.git.getRepository(t);i=e?.formattedName??t}return null==e?(s=new r.TreeItem("Compare <branch, tag, or ref> with <branch, tag, or ref>",r.TreeItemCollapsibleState.None),s.contextValue=ai.Td.ComparePicker,s.description=i,s.tooltip=`Click to select or enter a reference for compare${n.NE.Ellipsis}`,s.command={title:`Compare${n.NE.Ellipsis}`,command:this.view.getQualifiedCommand("selectForCompare")}):(s=new r.TreeItem(`Compare ${e.label} with <branch, tag, or ref>`,r.TreeItemCollapsibleState.None),s.contextValue=ai.Td.ComparePickerWithRef,s.description=i,s.tooltip=`Click to compare ${e.label} with${n.NE.Ellipsis}`,s.command={title:`Compare ${e.label} with${n.NE.Ellipsis}`,command:this.view.getQualifiedCommand("compareWithSelected")}),s}}var Zs=i(4655),en=Object.defineProperty,tn=Object.getOwnPropertyDescriptor,rn=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?tn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&en(t,i,n),n};class SearchAndCompareViewNode extends ai.Re{splatted=!0;comparePicker;constructor(e){super("search-compare",h.Wj,e)}dispose(){(0,zi.Qu)(this._children)}_children;get children(){if(null==this._children){const e=[],t=this.view.getStoredNodes();0!==t.length&&e.push(...t),(0,zi.Qu)(this._children,e),this._children=e}return this._children}set children(e){this.children!==e&&((0,zi.Qu)(this.children,e),this._children=e)}getChildren(){const e=this.children;return 0===e.length?[]:e.sort(((e,t)=>t.order-e.order))}getTreeItem(){this.splatted=!1;const e=new r.TreeItem("SearchAndCompare",r.TreeItemCollapsibleState.Expanded);return e.contextValue=ai.Td.SearchAndCompare,e}addOrReplace(e){const t=[...this.children];t.includes(e)||(t.push(e),this.children=t,this.view.triggerNodeChange())}async clear(){0!==this.children.length&&(this.removeComparePicker(!0),this.children=[],await this.view.clearStorage(),this.view.triggerNodeChange())}dismiss(e){if(e===this.comparePicker)return void this.removeComparePicker();(e instanceof ar.fc||e instanceof Zs.V)&&e.dismiss();const t=[...this.children];if(0===t.length)return;const i=t.indexOf(e);-1!==i&&(t.splice(i,1),this.children=t,this.view.triggerNodeChange())}async refresh(e=!1){const t=this.children;if(0===t.length)return;const i=[...(0,ot.DZ)(t,(t=>{const i=t.refresh?.(e);return(0,he.tI)(i)?i:void 0}))];await Promise.allSettled(i)}async compareWithSelected(e,t){const i=this.comparePicker?.selectedRef;if(null!=i){if(null==e)e=i.repoPath;else if(e!==i.repoPath)return void this.selectForCompare(e,t);if(null==t){const r=await(0,or.V)(e,`Compare ${this.getRefName(i.ref)} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:"string"==typeof i.ref?i.ref:i.ref.ref,include:or.H.BranchesAndTags|or.H.HEAD,sort:{branches:{current:!0}}});if(null==r)return void(null!=this.comparePicker&&(await this.view.show(),await this.view.reveal(this.comparePicker,{focus:!0,select:!0})));t=r.ref}this.removeComparePicker(),await this.view.compare(e,i.ref,t)}}async selectForCompare(e,t,i){if(null==e&&(e=(await(0,hi.vJ)("Compare"))?.path),null==e)return;this.removeComparePicker(!0);let r,s=i?.prompt??!1;if(null==t){const i=await(0,or.V)(e,"Compare","Choose a reference to compare",{allowEnteringRefs:{ranges:!0},include:or.H.BranchesAndTags|or.H.HEAD|or.H.WorkingTree,sort:{branches:{current:!0},tags:{}}});if(null==i)return void await this.triggerChange();if(t=i.ref,(0,f.yk)(t)){const e=(0,f.t6)(t);null!=e&&(t=e.ref1||"HEAD",r=e.ref2||"HEAD")}s=!0}this.comparePicker=new ComparePickerNode(this.view,this,{label:this.getRefName(t),repoPath:e,ref:t});const n=[...this.children];n.unshift(this.comparePicker),this.children=n,(0,ne.v)("gitlens:views:canCompare",!0),await this.triggerChange(),await this.view.reveal(this.comparePicker,{focus:!1,select:!0}),s&&await this.compareWithSelected(e,r)}getRefName(e){return"string"==typeof e?(0,f.zL)(e,{strings:{working:"Working Tree"}}):e.label??(0,f.zL)(e.ref)}removeComparePicker(e=!1){if((0,ne.v)("gitlens:views:canCompare",!1),null!=this.comparePicker){const t=[...this.children],i=t.indexOf(this.comparePicker);-1!==i&&(t.splice(i,1),this.children=t,e||this.triggerChange()),this.comparePicker=void 0}}}rn([(0,G.cM)()],SearchAndCompareViewNode.prototype,"clear",1),rn([(0,G.cM)({args:{0:e=>e.toString()}})],SearchAndCompareViewNode.prototype,"dismiss",1),rn([(0,oe.H)(),(0,G.fF)()],SearchAndCompareViewNode.prototype,"refresh",1);class SearchAndCompareView extends zi._H{configKey="searchAndCompare";constructor(e){super(e,"searchAndCompare","Search & Compare","searchAndCompareView")}getRoot(){return new SearchAndCompareViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("clear"),(()=>{this.clear()}),this),Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Ts(this.getQualifiedCommand("swapComparison"),this.swapComparison,this),Ts(this.getQualifiedCommand("selectForCompare"),(()=>this.selectForCompare())),Ts(this.getQualifiedCommand("compareWithSelected"),this.compareWithSelected,this),Ts(this.getQualifiedCommand("setFilesFilterOnLeft"),(e=>this.setFilesFilter(e,lr.W.Left)),this),Ts(this.getQualifiedCommand("setFilesFilterOnRight"),(e=>this.setFilesFilter(e,lr.W.Right)),this),Ts(this.getQualifiedCommand("setFilesFilterOff"),(e=>this.setFilesFilter(e,void 0)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat"))}clear(){return this.root?.clear()}dismissNode(e){null!=this.root&&(e instanceof ComparePickerNode||e instanceof ar.fc||e instanceof Zs.V)&&this.root.dismiss(e)}compare(e,t,i){return this.addResults(new ar.fc(this,this.ensureRoot(),e,"string"==typeof t?{ref:t}:t,"string"==typeof i?{ref:i}:i))}compareWithSelected(e,t){this.ensureRoot().compareWithSelected(e,t)}selectForCompare(e,t,i){this.ensureRoot().selectForCompare(e,t,i)}async search(e,t,{label:i,reveal:r},s,n){this.visible||await this.show();const o={label:`Search results ${"string"==typeof i?i:i.label}`,queryLabel:i};null==n?await this.addResults(new Zs.V(this,this.root,e,t,o,s),r):await n.edit({pattern:t,labels:o,log:s})}getStoredNodes(){const e=this.container.storage.getWorkspace("views:searchAndCompare:pinned");if(null==e)return[];const t=this.ensureRoot();return Object.entries(e).sort((([,e],[,t])=>(t.timestamp??0)-(e.timestamp??0))).map((([,e])=>"comparison"===e.type?((0,ar.k7)(this,e.checkedFiles),new ar.fc(this,t,e.path,{label:e.ref1.label,ref:e.ref1.ref??e.ref1.name??e.ref1.sha},{label:e.ref2.label,ref:e.ref2.ref??e.ref2.name??e.ref2.sha},e.timestamp)):new Zs.V(this,t,e.path,(0,se.uP)(e.search),e.labels,void 0,e.timestamp)))}clearStorage(){return this.container.storage.deleteWorkspace("views:searchAndCompare:pinned")}async updateStorage(e,t,i=!1){let r=this.container.storage.getWorkspace("views:searchAndCompare:pinned");r=(0,Nt.iC)(r,e,t),await this.container.storage.storeWorkspace("views:searchAndCompare:pinned",r),i||this.triggerNodeChange(this.ensureRoot())}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof SearchAndCompareViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}async addResults(e,t={expand:!0,focus:!0,select:!0}){this.visible||await this.show();this.ensureRoot().addOrReplace(e),queueMicrotask((()=>this.reveal(e,t)))}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setFilesFilter(e,t){e instanceof lr.V&&(e.filter=t)}swapComparison(e){if(e instanceof ar.fc)return e.swap()}}rn([(0,oe.H)((()=>""))],SearchAndCompareView.prototype,"revealRepository",1);var sn=Object.defineProperty,nn=Object.getOwnPropertyDescriptor,on=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?nn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&sn(t,i,n),n};class StashesRepositoryNode extends Qi.v{async getChildren(){return null==this.child&&(this.child=new StashesNode(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(v.I6.Stash,v.I6.Unknown,v.du.Any)}}class StashesViewNode extends RepositoriesSubscribeableNode{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading stashes...":"No stashes could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new StashesRepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getStash();return null==t||0===t.commits.size?(this.view.message="No stashes could be found.",this.view.title="Stashes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Stashes (${t.commits.size})`,e.getChildren())}return this.view.title="Stashes",this.children}getTreeItem(){return new r.TreeItem("Stashes",r.TreeItemCollapsibleState.Expanded)}}class StashesView extends zi._H{configKey="stashes";constructor(e){super(e,"stashes","Stashes","stashesView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showStashes")}getRoot(){return new StashesViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("stashes"),this.refresh(!0))),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortRepositoriesBy"))}findStash(e,t){const{repoPath:i}=e;return this.findNode((t=>t.commit?.ref===e.ref),{maxDepth:2,canTraverse:e=>e instanceof StashesViewNode||e instanceof StashesRepositoryNode&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof StashesViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}async revealStash(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findStash(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}}on([(0,oe.H)((()=>""))],StashesView.prototype,"revealRepository",1),on([(0,oe.H)((()=>""))],StashesView.prototype,"revealStash",1);var an=Object.defineProperty,cn=Object.getOwnPropertyDescriptor,ln=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?cn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&an(t,i,n),n};class TagsRepositoryNode extends Qi.v{async getChildren(){return null==this.child&&(this.child=new TagsNode(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(v.I6.Tags,v.I6.Unknown,v.du.Any)}}class TagsViewNode extends RepositoriesSubscribeableNode{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading tags...":"No tags could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new TagsRepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getTags();return 0===t.values.length?(this.view.message="No tags could be found.",this.view.title="Tags",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Tags (${t.values.length})`,e.getChildren())}return this.view.title="Tags",this.children}getTreeItem(){return new r.TreeItem("Tags",r.TreeItemCollapsibleState.Expanded)}}class TagsView extends zi._H{configKey="tags";constructor(e){super(e,"tags","Tags","tagsView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showTags")}getRoot(){return new TagsViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("tags"),this.refresh(!0))),this),Ts(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout("list")),this),Ts(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout("tree")),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortTagsBy")||C.D.changed(e,"sortRepositoriesBy"))}findTag(e,t){const{repoPath:i}=e;return this.findNode((t=>t.tag?.ref===e.ref),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof TagsViewNode||(e instanceof TagsRepositoryNode||e instanceof BranchOrTagFolderNode)&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof TagsViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}revealTag(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing ${(0,f.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findTag(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}setLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}}ln([(0,oe.H)((()=>""))],TagsView.prototype,"revealRepository",1),ln([(0,oe.H)((()=>""))],TagsView.prototype,"revealTag",1);var hn=i(4398);class ViewFileDecorationProvider{_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}disposable;constructor(){this.disposable=r.Disposable.from(r.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"===e.scheme)switch(e.authority){case"branch":return this.provideBranchCurrentDecoration(e,t);case"remote":return this.provideRemoteDefaultDecoration(e,t);case"status":return this.provideStatusDecoration(e,t);case"workspaces":return this.provideWorkspaceDecoration(e,t);default:return}}}),r.window.registerFileDecorationProvider(this))}dispose(){this.disposable.dispose()}provideWorkspaceDecoration(e,t){const[,i,s]=e.path.split("/");if("repository"===i){if("open"===s)return{badge:"●",color:new r.ThemeColor("gitlens.decorations.workspaceRepoOpenForegroundColor"),tooltip:""};if("missing"===s)return{badge:"?",color:new r.ThemeColor("gitlens.decorations.workspaceRepoMissingForegroundColor"),tooltip:""}}if("workspace"===i&&"current"===s)return{badge:"●",color:new r.ThemeColor("gitlens.decorations.workspaceCurrentForegroundColor"),tooltip:""}}provideFileDecoration(e,t){if(e.scheme===n.sN.Git){const t=(0,hn.h)(e);null!=t?.decoration&&(e=r.Uri.parse(t?.decoration))}if("gitlens-view"===e.scheme)switch(e.authority){case"branch":return this.provideBranchStatusDecoration(e,t);case"commit-file":return this.provideCommitFileStatusDecoration(e,t)}}provideCommitFileStatusDecoration(e,t){const[,,i]=e.path.split("/");switch(i){case"!":return{badge:"I",color:new r.ThemeColor("gitlens.decorations.ignoredForegroundColor"),tooltip:"Ignored"};case"?":return{badge:"U",color:new r.ThemeColor("gitlens.decorations.untrackedForegroundColor"),tooltip:"Untracked"};case"A":return{badge:"A",color:new r.ThemeColor("gitlens.decorations.addedForegroundColor"),tooltip:"Added"};case"C":return{badge:"C",color:new r.ThemeColor("gitlens.decorations.copiedForegroundColor"),tooltip:"Copied"};case"D":return{badge:"D",color:new r.ThemeColor("gitlens.decorations.deletedForegroundColor"),tooltip:"Deleted"};case"M":return{badge:"M",tooltip:"Modified"};case"R":return{badge:"R",color:new r.ThemeColor("gitlens.decorations.renamedForegroundColor"),tooltip:"Renamed"};default:return}}provideBranchStatusDecoration(e,t){const[,,i]=e.path.split("/");switch(i){case"ahead":return{badge:"▲",color:new r.ThemeColor("gitlens.decorations.branchAheadForegroundColor"),tooltip:"Ahead"};case"behind":return{badge:"▼",color:new r.ThemeColor("gitlens.decorations.branchBehindForegroundColor"),tooltip:"Behind"};case"diverged":return{badge:"▼▲",color:new r.ThemeColor("gitlens.decorations.branchDivergedForegroundColor"),tooltip:"Diverged"};case"missingUpstream":return{badge:"!",color:new r.ThemeColor("gitlens.decorations.branchMissingUpstreamForegroundColor"),tooltip:"Missing Upstream"};case"upToDate":return{badge:"",color:new r.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor"),tooltip:"Up to Date"};case"unpublished":return{badge:"▲+",color:new r.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor"),tooltip:"Unpublished"};default:return}}provideBranchCurrentDecoration(e,t){const[,,i,s]=e.path.split("/");if(!s)return;let o;switch(i){case"ahead":o=new r.ThemeColor("gitlens.decorations.branchAheadForegroundColor");break;case"behind":o=new r.ThemeColor("gitlens.decorations.branchBehindForegroundColor");break;case"diverged":o=new r.ThemeColor("gitlens.decorations.branchDivergedForegroundColor");break;case"upToDate":o=new r.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor");break;case"unpublished":o=new r.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor")}return{badge:n.NE.Check,color:o,tooltip:"Current Branch"}}provideRemoteDefaultDecoration(e,t){const[,i]=e.path.split("/");if(i)return{badge:n.NE.Check,tooltip:"Default Remote"}}provideStatusDecoration(e,t){const[,i,s]=e.path.split("/");if("rebasing"===i)return s?{badge:"!",color:new r.ThemeColor("gitlens.decorations.statusMergingOrRebasingConflictForegroundColor")}:{color:new r.ThemeColor("gitlens.decorations.statusMergingOrRebasingForegroundColor")}}}class WorkspaceMissingRepositoryNode extends ai.Re{constructor(e,t,i,r){super("workspace-missing-repository",h.Wj,e,t),this.workspace=i,this.wsRepositoryDescriptor=r,this.updateContext({wsRepositoryDescriptor:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.name}get name(){return this.wsRepositoryDescriptor.name}get workspaceId(){return this.wsRepositoryDescriptor.workspaceId}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.name,r.TreeItemCollapsibleState.None);return e.id=this.id,e.description="missing",e.tooltip=new r.MarkdownString(`${this.name}\n\nRepository could not be found`),e.contextValue=ai.Td.WorkspaceMissingRepository,e.iconPath=new r.ThemeIcon("question",new r.ThemeColor("gitlens.decorations.workspaceRepoMissingForegroundColor")),e.resourceUri=r.Uri.parse("gitlens-view://workspaces/repository/missing"),e}}var un=Object.defineProperty,dn=Object.getOwnPropertyDescriptor;class WorkspaceNode extends Vi.C{constructor(e,t,i,r){super("workspace",e,t,i),this.parent=i,this.workspace=r,this.updateContext({workspace:r}),this._uniqueId=(0,ai.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.workspace.name}async getChildren(){if(null==this.children){const e=[];try{const t=await this.workspace.getRepositoryDescriptors();if(!t?.length)return e.push(new er.$h(this.view,this,(0,at.fA)("gitlens.views.workspaces.addRepos","Add Repositories...",this),"No repositories")),this.children=e,this.children;const i=await this.workspace.getRepositoriesByName({force:!0});for(const r of t){const t=i.get(r.name)?.repository;t?e.push(new RepositoryNode(h.YY.fromRepoPath(t.path),this.view,this,t,this.getNewContext({wsRepositoryDescriptor:r}))):e.push(new WorkspaceMissingRepositoryNode(this.view,this,this.workspace,r))}}catch(e){return this.children=void 0,[new er.AE(this.view,this,"Failed to load repositories")]}this.children=e}return this.children}async getTreeItem(){const e=new r.TreeItem(this.workspace.name,r.TreeItemCollapsibleState.Collapsed),t="cloud"===this.workspace.type;let i=`${ai.Td.Workspace}`;e.resourceUri=void 0;const s=[];return i+=t?"+cloud":"+local",this.workspace.current&&(i+="+current",s.push("current"),e.resourceUri=r.Uri.parse("gitlens-view://workspaces/workspace/current")),null!=this.workspace.localPath&&(i+="+hasPath"),0===(await this.workspace.getRepositoryDescriptors())?.length&&(i+="+empty"),e.id=this.id,e.contextValue=i,e.iconPath=new r.ThemeIcon("cloud"==this.workspace.type?"cloud":"folder"),e.tooltip=`${this.workspace.name}\n${t?"Cloud Workspace "+(this.workspace.shared?"(Shared)":""):"Local Workspace"}${t&&null!=this.workspace.provider?`\nProvider: ${this.workspace.provider}`:""}`,t&&null!=this.workspace.organizationId&&s.push("shared"),e.description=s.join(", "),e}etag(){return this.view.container.git.etag}subscribe(){return r.Disposable.from((0,de.D$)(this.view.container.git.onDidChangeRepositories,this.onRepositoriesChanged,this))}onRepositoriesChanged(e){this.triggerChange(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?dn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&un(t,i,n)})([(0,G.fF)()],WorkspaceNode.prototype,"subscribe",1);var pn=Object.defineProperty,mn=Object.getOwnPropertyDescriptor;class WorkspacesViewNode extends ai.Re{constructor(e){super("workspaces-view",h.Wj,e)}_children;async getChildren(){if(null==this._children){const e=[],{cloudWorkspaces:t,cloudWorkspaceInfo:i,localWorkspaces:r,localWorkspaceInfo:s}=await this.view.container.workspaces.getWorkspaces();if(t.length||r.length){e.push(new RepositoriesNode(this.view));for(const i of t)e.push(new WorkspaceNode(this.uri,this.view,this,i));null!=i&&e.push(new er.AE(this.view,this,i));for(const t of r)e.push(new WorkspaceNode(this.uri,this.view,this,t));0===t.length&&null==i&&e.push(new er.AE(this.view,this,"No cloud workspaces found.")),null!=s&&e.push(new er.AE(this.view,this,s))}this._children=e}return this._children}getTreeItem(){return new r.TreeItem("Workspaces",r.TreeItemCollapsibleState.Expanded)}refresh(){null!=this._children&&((0,zi.Qu)(this._children),this._children=void 0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?mn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&pn(t,i,n)})([(0,oe.H)(),(0,G.fF)()],WorkspacesViewNode.prototype,"refresh",1);class WorkspacesView extends zi._H{configKey="workspaces";_disposable;constructor(e){super(e,"workspaces","Workspaces","workspacesView"),this.description="PREVIEW  ☁️",this.disposables.push(e.workspaces.onDidResetWorkspaces((()=>{this.refresh(!0)})))}dispose(){this._disposable?.dispose(),super.dispose()}get canSelectMany(){return!1}getRoot(){return new WorkspacesViewNode(this)}async show(e){if(await(0,Vt.C)())return super.show(e)}async findWorkspaceNode(e,t){return this.findNode((t=>t.workspace?.id===e),{allowPaging:!1,maxDepth:2,canTraverse:e=>e instanceof WorkspacesViewNode,token:t})}async revealWorkspaceNode(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing workspace ${e} in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findWorkspaceNode(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("info"),(()=>r.env.openExternal(r.Uri.parse("https://help.gitkraken.com/gitlens/side-bar/#workspaces-☁%ef%b8%8f"))),this),Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(()=>{this.container.workspaces.resetWorkspaces()}),this),Ts(this.getQualifiedCommand("addRepos"),(async e=>{await this.container.workspaces.addCloudWorkspaceRepos(e.workspace.id),e.getParent()?.triggerChange(!0)})),Ts(this.getQualifiedCommand("addReposFromLinked"),(async e=>{await this.container.workspaces.addMissingCurrentWorkspaceRepos({force:!0}),e.getParent()?.triggerChange(!0)})),Ts(this.getQualifiedCommand("convert"),(async e=>{const t=[];for(const i of e.getChildren())i instanceof RepositoryNode&&t.push(i.repo);0!==t.length&&(await this.container.workspaces.createCloudWorkspace({repos:t}),this.ensureRoot().triggerChange(!0))}),this),Ts(this.getQualifiedCommand("create"),(async()=>{await this.container.workspaces.createCloudWorkspace(),this.ensureRoot().triggerChange(!0)}),this),Ts(this.getQualifiedCommand("createLocal"),(async e=>{await this.container.workspaces.saveAsCodeWorkspaceFile(e.workspace.id),this.ensureRoot().triggerChange(!0)}),this),Ts(this.getQualifiedCommand("openLocal"),(async e=>{await this.container.workspaces.openCodeWorkspaceFile(e.workspace.id,{location:"currentWindow"}),this.ensureRoot().triggerChange(!0)}),this),Ts(this.getQualifiedCommand("openLocalNewWindow"),(async e=>{await this.container.workspaces.openCodeWorkspaceFile(e.workspace.id,{location:"newWindow"})}),this),Ts(this.getQualifiedCommand("changeAutoAddSetting"),(async()=>{await this.container.workspaces.chooseCodeWorkspaceAutoAddSetting({current:!0})}),this),Ts(this.getQualifiedCommand("delete"),(async e=>{await this.container.workspaces.deleteCloudWorkspace(e.workspace.id),e.getParent()?.triggerChange(!0)}),this),Ts(this.getQualifiedCommand("locateAllRepos"),(async e=>{"cloud"===e.workspace.type&&(await r.window.withProgress({location:r.ProgressLocation.Notification,title:`Locating Repositories for '${e.workspace.name}'...`,cancellable:!0},((t,i)=>this.container.workspaces.locateAllCloudWorkspaceRepos(e.workspace.id,i))),e.triggerChange(!0))}),this),Ts(this.getQualifiedCommand("repo.locate"),(async e=>{const t=e.wsRepositoryDescriptor;null!=t&&null!=e.workspace?.id&&(await this.container.workspaces.locateWorkspaceRepo(e.workspace.id,t),e.getParent()?.triggerChange(!0))}),this),Ts(this.getQualifiedCommand("repo.openInNewWindow"),(e=>{const t=e.getParent();null!=t&&t instanceof WorkspaceNode&&(0,V.ic)(e.repo.uri,{location:"newWindow"})}),this),Ts(this.getQualifiedCommand("repo.open"),(e=>{const t=e.getParent();null!=t&&t instanceof WorkspaceNode&&(0,V.ic)(e.repo.uri,{location:"currentWindow"})}),this),Ts(this.getQualifiedCommand("repo.addToWindow"),(e=>{const t=e.getParent();null!=t&&t instanceof WorkspaceNode&&(0,V.ic)(e.repo.uri,{location:"addToWorkspace"})}),this),Ts(this.getQualifiedCommand("repo.remove"),(async e=>{const t=e.wsRepositoryDescriptor;null!=t?.id&&null!=e.workspace?.id&&(await this.container.workspaces.removeCloudWorkspaceRepo(e.workspace.id,t),e.getParent()?.getParent()?.triggerChange(!0))}))]}}var gn=Object.defineProperty,fn=Object.getOwnPropertyDescriptor,wn=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?fn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&gn(t,i,n),n};class WorktreesRepositoryNode extends Qi.v{getChildren(){return null==this.child&&(this.child=new WorktreesNode(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(v.I6.Config,v.I6.Worktrees,v.I6.Unknown,v.du.Any)}}class WorktreesViewNode extends RepositoriesSubscribeableNode{async getChildren(){if(!1===(await this.view.container.git.access(c.x.Worktrees)).allowed)return[];if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading worktrees...":"No worktrees could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new WorktreesRepositoryNode(h.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.getChildren();return t.length<=1?(this.view.message=void 0,this.view.title="Worktrees",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Worktrees (${t.length})`,t)}return this.view.title="Worktrees",this.children}getTreeItem(){return new r.TreeItem("Worktrees",r.TreeItemCollapsibleState.Expanded)}}class WorktreesView extends zi._H{configKey="worktrees";constructor(e){super(e,"worktrees","Worktrees","worktreesView"),this.disposables.push(r.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"!==e.scheme||"worktree"!==e.authority)return;const[,i]=e.path.split("/");switch(i){case"changes":return{badge:"●",color:new r.ThemeColor("gitlens.decorations.worktreeHasUncommittedChangesForegroundColor"),tooltip:"Has Uncommitted Changes"};case"missing":return{badge:n.NE.Warning,color:new r.ThemeColor("gitlens.decorations.worktreeMissingForegroundColor"),tooltip:""};default:return}}})),this.description="✨"}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showWorktrees")}async show(e){if(await(0,Vt.C)())return super.show(e)}getRoot(){return new WorktreesViewNode(this)}registerCommands(){return this.container.viewCommands,[Ts(this.getQualifiedCommand("copy"),(()=>(0,at.P0)(n.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Ts(this.getQualifiedCommand("refresh"),(async()=>this.refresh(!0)),this),Ts(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout("auto")),this),Ts(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout("list")),this),Ts(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout("tree")),this),Ts(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Ts(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Ts(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Ts(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortRepositoriesBy"))}findWorktree(e,t){const{repoPath:i,uri:r}=e,s=r.toString();return this.findNode((t=>t instanceof WorktreeNode&&e.uri.toString()===s),{maxDepth:2,canTraverse:e=>e instanceof WorktreesViewNode||e instanceof WorktreesRepositoryNode&&e.repoPath===i,token:t})}async revealRepository(e,t){const i=await this.findNode((t=>t instanceof Qi.v&&t.repoPath===e),{maxDepth:1,canTraverse:e=>e instanceof WorktreesViewNode||e instanceof Qi.v});return void 0!==i&&await this.reveal(i,t),i}revealWorktree(e,t){return r.window.withProgress({location:r.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},(async(i,r)=>{const s=await this.findWorktree(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s}))}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"branch")}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}wn([(0,oe.H)((()=>""))],WorktreesView.prototype,"revealRepository",1),wn([(0,oe.H)((()=>""))],WorktreesView.prototype,"revealWorktree",1);class RequestType{constructor(e){this.name=e}}const vn=new RequestType("git"),yn=new RequestType("git/logStreamTo"),bn=new RequestType("repositories/inFolder");var Cn=Object.defineProperty,An=Object.getOwnPropertyDescriptor,Sn=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?An(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Cn(t,i,n),n};const Pn=()=>!0,kn=new Map([["blame",Pn],["branch",e=>"--contains"===e[1]],["cat-file",Pn],["check-mailmap",Pn],["check-ref-format",Pn],["config",e=>"--get"===e[1]||"--get-regex"===e[1]],["diff",Pn],["difftool",Pn],["for-each-ref",Pn],["log",Pn],["ls-files",Pn],["ls-tree",Pn],["merge-base",Pn],["remote",e=>"-v"===e[1]||"get-url"===e[1]],["rev-list",Pn],["rev-parse",Pn],["show",Pn],["show-ref",Pn],["stash",e=>"list"===e[1]],["status",Pn],["symbolic-ref",Pn],["tag",e=>"-l"===e[1]],["worktree",e=>"list"===e[1]]]),Dn=/^[/|\\]/,Rn=class _VslsHostService{constructor(e,t,i){this._api=e,this._service=t,this.container=i,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this._disposable=r.Disposable.from(r.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this)),this.onRequest(vn,this.onGitCommandRequest.bind(this)),this.onRequest(yn,this.onGitLogStreamToCommandRequest.bind(this)),this.onRequest(bn,this.onGetRepositoriesForUriRequest.bind(this)),this.onWorkspaceFoldersChanged()}static ServiceId="proxy";static async share(e,t){const i=await e.shareService(this.ServiceId);if(null==i)throw new Error("Failed to share host service");return new _VslsHostService(e,i,t)}_disposable;_localPathsRegex;_localToSharedPaths=new Map;_sharedPathsRegex;_sharedToLocalPaths=new Map;dispose(){this._disposable.dispose(),this._api.unshareService(_VslsHostService.ServiceId)}onRequest(e,t){this._service.onRequest(e.name,(function(e,i){let r;for(const t of e)if("object"==typeof t&&"__type"in t){r=t;break}return t(r??e[0],i)}))}onAvailabilityChanged(e){}onWorkspaceFoldersChanged(e){if(null==r.workspace.workspaceFolders||0===r.workspace.workspaceFolders.length)return;const t=(0,ce.UH)();let i,s;this._localToSharedPaths.clear(),this._sharedToLocalPaths.clear();for(const e of r.workspace.workspaceFolders)i=(0,le.AH)(e.uri.fsPath),s=(0,le.AH)(this.convertLocalUriToShared(e.uri).toString()),A.Yd.debug(t,`shared='${s}' ↔ local='${i}'`),this._localToSharedPaths.set(i,s),this._sharedToLocalPaths.set(s,i);let n=(0,ae.v_)(this._sharedToLocalPaths.values(),"|");n=n.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._localPathsRegex=new RegExp(`(${n})`,"gi");let o=(0,ae.v_)(this._localToSharedPaths.values(),"|");o=o.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._sharedPathsRegex=new RegExp(`^(${o})`,"i")}async onGitCommandRequest(e,t){const i=kn.get(e.args[0]);if(null==i||!i(e.args))throw new Error(`Git ${e.args[0]} command is not allowed`);const{options:r,args:s}=e,[n,o]=this.convertGitCommandCwd(r.cwd);r.cwd=n;let a=await function(e,...t){return Promise.resolve("")}(r,...this.convertGitCommandArgs(s,o));return"string"==typeof a?(null!=this._localPathsRegex&&a.length>0&&(a=a.replace(this._localPathsRegex,((e,t)=>{const i=this._localToSharedPaths.get((0,le.AH)(t));return null!=i?i:t}))),{data:a}):{data:a.toString("binary"),isBuffer:!0}}async onGitLogStreamToCommandRequest(e,t){const{options:i,args:r}=e,[s,n]=this.convertGitCommandCwd(e.repoPath);let[o,a]=await function(e,t,i,r,...s){return Promise.resolve([[""],0])}(s,e.sha,e.limit,i,...this.convertGitCommandArgs(r,n));return null!=this._localPathsRegex&&o.length>0&&(o=o.map((e=>e.replace(this._localPathsRegex,((e,t)=>{const i=this._localToSharedPaths.get((0,le.AH)(t));return null!=i?i:t}))))),{data:o,count:a}}async onGetRepositoriesForUriRequest(e,t){const i=[],s=this.convertSharedUriToLocal(r.Uri.parse(e.folderUri,!0)),n=this.container.git.getRepository(s);if(null!=n){const e=this.convertLocalUriToShared(n.uri);i.push({folderUri:e.toString(),root:n.root,closed:n.closed})}return{repositories:i}}convertLocalUriToShared(e){const t=(0,ce.UH)();let i=this._api.convertLocalUriToShared(e);A.Yd.debug(t,`LiveShare.convertLocalUriToShared(${e.toString(!0)}) returned ${i.toString(!0)}`);const s=e.path;let n=i.path;if(i.authority.length>0&&(n=`/${i.authority}${n}`),new RegExp(`${s}$`,"i").test(n))if(n.length===s.length){const t=r.workspace.getWorkspaceFolder(e);i=i.with({authority:"",path:`/~${t.index}`})}else i=i.with({authority:"",path:n.substr(0,n.length-s.length)});else if(!n.startsWith("/~")){const t=r.workspace.getWorkspaceFolder(e);i=i.with({authority:"",path:`/~${t.index}${n}`})}return i}convertGitCommandCwd(e){let t=!1;if(null!=e&&e.length>0&&null!=this._sharedToLocalPaths)if(this._sharedPathsRegex?.test(e))e=(0,le.AH)(e).replace(this._sharedPathsRegex,((e,i)=>{t||(t="/~0"===i);const r=this._sharedToLocalPaths.get(i);return null!=r?r:i}));else if(Dn.test(e)){const i=this._sharedToLocalPaths.get("vsls:/~0");null!=i&&(t=!0,e=(0,le.AH)(this.container.git.getAbsoluteUri(e,i).fsPath))}return[e,t]}convertGitCommandArgs(e,t){let i=!1,r=-1;for(const s of e)r++,"--"!==s?i&&"string"==typeof s&&(t&&Dn.test(s[0])&&e.splice(r,1,s.substr(1)),this._sharedPathsRegex?.test(s)&&e.splice(r,1,(0,le.AH)(s).replace(this._sharedPathsRegex,((e,t)=>{const i=this._sharedToLocalPaths.get(t);return null!=i?i:t})))):i=!0;return e}convertSharedUriToLocal(e){(0,le.tD)(e.path)&&(e=e.with({path:`${e.path}/`}));const t=this._api.convertSharedUriToLocal(e);let i=t.path;const r=e.path;return i.endsWith(r)&&(i=i.substr(0,i.length-r.length)),47===i.charCodeAt(i.length-1)&&(i=i.slice(0,-1)),t.with({path:i})}};Sn([(0,G.cM)()],Rn.prototype,"onAvailabilityChanged",1),Sn([(0,G.fF)()],Rn.prototype,"onWorkspaceFoldersChanged",1),Sn([(0,G.cM)()],Rn.prototype,"onGitCommandRequest",1),Sn([(0,G.cM)()],Rn.prototype,"onGitLogStreamToCommandRequest",1),Sn([(0,G.cM)()],Rn.prototype,"onGetRepositoriesForUriRequest",1),Sn([(0,G.fF)({exit:!0})],Rn.prototype,"convertLocalUriToShared",1),Sn([(0,G.cM)()],Rn,"share",1);let _n=Rn;var Tn=Object.defineProperty,Fn=Object.getOwnPropertyDescriptor,$n=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Fn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Tn(t,i,n),n};const In=class _VslsGuestService{constructor(e,t,i){this._api=e,this._service=t,this.container=i,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this.onAvailabilityChanged(t.isServiceAvailable)}static async connect(e,t){const i=(0,ce.UH)();try{const i=await e.getSharedService(_n.ServiceId);if(null==i)throw new Error("Failed to connect to host service");return new _VslsGuestService(e,i,t)}catch(e){return void A.Yd.error(e,i)}}dispose(){}onAvailabilityChanged(e){e?this.container.git.setEnabledContext(!0):(this.container.git.setEnabledContext(!1),r.window.showWarningMessage("GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed."))}async git(e,...t){const i=await this.sendRequest(vn,{__type:"gitlens",options:e,args:t});return i.isBuffer?Buffer.from(i.data,"binary"):i.data}async gitLogStreamTo(e,t,i,r,...s){const n=await this.sendRequest(yn,{__type:"gitlens",repoPath:e,sha:t,limit:i,options:r,args:s});return[n.data,n.count]}async getRepositoriesForUri(e){return(await this.sendRequest(bn,{__type:"gitlens",folderUri:e.toString()})).repositories}sendRequest(e,t,i){return this._service.request(e.name,[t],i)}};$n([(0,G.cM)()],In.prototype,"onAvailabilityChanged",1),$n([(0,G.cM)()],In.prototype,"git",1),$n([(0,G.cM)()],In.prototype,"gitLogStreamTo",1),$n([(0,G.cM)()],In.prototype,"getRepositoriesForUri",1),$n([(0,G.fF)()],In.prototype,"sendRequest",1),$n([(0,G.cM)()],In,"connect",1);let xn=In;var On=Object.defineProperty,En=Object.getOwnPropertyDescriptor,Bn=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?En(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&On(t,i,n),n};function Wn(e){switch(e){case"available":return{status:"online",statusText:"Available"};case"away":return{status:"away",statusText:"Away"};case"busy":return{status:"busy",statusText:"Busy"};case"doNotDisturb":return{status:"dnd",statusText:"DND"};default:return{status:"offline",statusText:"Offline"}}}class VslsController{constructor(e){this.container=e,this._ready=(0,he.PQ)(),this._disposable=r.Disposable.from((0,de.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_api;_disposable;_guest;_host;_ready;dispose(){this._ready.fulfill(),this._disposable.dispose(),this._host?.dispose(),this._guest?.dispose()}onReady(){this.initialize()}async initialize(){if(this.enabled){r.workspace.workspaceFolders?.some((e=>e.uri.scheme===n.sN.Vsls))&&this.setReadonly(!0);try{this._api=this.getLiveShareApi();const e=await this._api;if(null==e)return(0,ne.v)("gitlens:vsls",!1),void this._ready.fulfill();(0,ne.v)("gitlens:vsls",!0),this._disposable=r.Disposable.from(this._disposable,e.onDidChangeSession((t=>this.onLiveShareSessionChanged(e,t)),this)),this.onLiveShareSessionChanged(e,{session:e.session})}catch(e){A.Yd.error(e)}}else(0,ne.v)("gitlens:vsls",!1)}onConfigurationChanged(e){C.D.changed(e,"liveshare.enabled")&&this.initialize()}async onLiveShareSessionChanged(e,t){switch(this._host?.dispose(),this._host=void 0,this._guest?.dispose(),this._guest=void 0,t.session.role){case 1:this.setReadonly(!1),(0,ne.v)("gitlens:vsls","host"),C.D.get("liveshare.allowGuestAccess")&&(this._host=await _n.share(e,this.container)),this._ready.fulfill();break;case 2:this.setReadonly(!0),(0,ne.v)("gitlens:vsls","guest"),this._guest=await xn.connect(e,this.container),this._ready.fulfill();break;default:this.setReadonly(!1),(0,ne.v)("gitlens:vsls",!0),this._ready.pending||(this._ready=(0,he.PQ)())}}async getLiveShareApi(){try{const e=r.extensions.getExtension("ms-vsliveshare.vsliveshare");if(null!=e){const t=e.isActive?e.exports:await e.activate();return await t.getApi("1.0.4753")??void 0}}catch(e){A.Yd.error(e)}}_readonly=!1;get readonly(){return this._readonly}setReadonly(e){this._readonly=e,(0,ne.v)("gitlens:readonly",!!e||void 0)}get enabled(){return C.D.get("liveshare.enabled")}async guest(){return null!=this._guest||await this._ready.promise,this._guest}async getContact(e){if(null==e)return;const t=await this._api;if(null==t)return;return(await t.getContacts([e])).contacts[e]}async getContacts(e){const t=await this._api;if(null==t)return;const i=await t.getContacts(e);return Object.values(i.contacts)}async getContactPresence(e){const t=await this.getContact(e);if(null!=t)return Wn(t.status)}async getContactsPresence(e){const t=await this.getContacts(e);if(null!=t)return new Map(Object.values(t).map((e=>[e.email,Wn(e.status)])))}async invite(e){if(null==e)return;const t=await this.getContact(e);return null!=t?t.invite():void 0}async startSession(){const e=await this._api;if(null!=e)return e.share()}}Bn([(0,G.fF)()],VslsController.prototype,"getContact",1),Bn([(0,G.fF)({args:{0:e=>e.length}})],VslsController.prototype,"getContacts",1),Bn([(0,G.fF)()],VslsController.prototype,"getContactPresence",1),Bn([(0,G.fF)({args:{0:e=>e.length}})],VslsController.prototype,"getContactsPresence",1);var Mn=i(1676),Nn=i(7925),Ln=i(5798),Un=i(6260);const Gn=new Ln.ke("rebase/abort"),Hn=new Ln.ke("rebase/disable"),Vn=new Ln.ke("rebase/search"),qn=new Ln.ke("rebase/start"),jn=new Ln.ke("rebase/switch"),Qn=new Ln.ke("rebase/reorder"),Yn=new Ln.ke("rebase/change/entry"),zn=new Ln.ke("rebase/move/entry"),Kn=new Ln.ke("rebase/selection/update"),Jn=new Ln.jH("rebase/didChange");var Xn=Object.defineProperty,Zn=Object.getOwnPropertyDescriptor,eo=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Zn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Xn(t,i,n),n};const to=2**30,io=new TextDecoder("utf8");let ro=0;let so=0;const no=/^\s?#\s?Rebase\s([0-9a-f]+)(?:..([0-9a-f]+))?\sonto\s([0-9a-f]+)\s.*$/im,oo=/^\s?(p|pick|r|reword|e|edit|s|squash|f|fixup|d|drop)\s([0-9a-f]+?)\s(.*)$/gm,ao=new Map([["p","pick"],["pick","pick"],["r","reword"],["reword","reword"],["e","edit"],["edit","edit"],["s","squash"],["squash","squash"],["f","fixup"],["fixup","fixup"],["d","drop"],["drop","drop"]]);class RebaseEditorProvider{constructor(e){this.container=e,this._disposable=r.Disposable.from(r.window.registerCustomEditorProvider("gitlens.rebase",this,{supportsMultipleEditorsPerDocument:!1,webviewOptions:{enableFindWidget:!0,retainContextWhenHidden:!0}})),this.ascending="asc"===C.D.get("rebaseEditor.ordering")}_disposable;ascending=!1;dispose(){this._disposable.dispose()}get contextKeyPrefix(){return"gitlens:webview:rebase"}get enabled(){const e=C.D.inspectAny("workbench.editorAssociations")?.globalValue;if(null==e||0===e.length)return!0;if(Array.isArray(e)){const t=e.find((e=>"git-rebase-todo"===e.filenamePattern));return null==t||"gitlens.rebase"===t.viewType}const t=e["git-rebase-todo"];return null==t||"gitlens.rebase"===t}_disableAfterNextUse=!1;async enableForNextUse(){this.enabled||(await this.setEnabled(!0),this._disableAfterNextUse=!0)}async setEnabled(e){this._disableAfterNextUse=!1;const t=C.D.inspectAny("workbench.editorAssociations");let i=t?.globalValue;if(Array.isArray(i)&&(i=i.reduce(((e,t)=>(e[t.filenamePattern]=t.viewType,e)),Object.create(null))),null==i){if(e)return;i={"git-rebase-todo":"default"}}else i["git-rebase-todo"]=e?"gitlens.rebase":"default";await C.D.updateAny("workbench.editorAssociations",i,r.ConfigurationTarget.Global)}async resolveCustomTextEditor(e,t,i){this.container.usage.track("rebaseEditor:shown");const s=(0,le.AH)(r.Uri.joinPath(e.uri,"..","..","..").fsPath),n=this.container.git.getRepository(s),o=[],a={dispose:()=>{r.Disposable.from(...o).dispose()},id:(so===to?so=1:so++,so),subscriptions:o,document:e,panel:t,repoPath:n?.path??s,firstSelection:!0};o.push(t.onDidDispose((()=>{(0,Un.qW)(this.contextKeyPrefix),r.Disposable.from(...o).dispose()})),t.onDidChangeViewState((e=>this.onViewStateChanged(a,e))),t.webview.onDidReceiveMessage((e=>this.onMessageReceived(a,e))),r.workspace.onDidChangeTextDocument((t=>{0!==t.contentChanges.length&&t.document.uri.toString()===e.uri.toString()&&this.updateState(a,!0)})),r.workspace.onDidSaveTextDocument((t=>{t.uri.toString()===e.uri.toString()&&this.updateState(a,!0)}))),null!=n&&o.push(n.onDidChange((e=>{e.changed(v.I6.Rebase,v.du.Any)&&this.updateState(a)}))),t.webview.options={enableCommandUris:!0,enableScripts:!0},t.webview.html=await this.getHtml(a),this._disableAfterNextUse&&(this._disableAfterNextUse=!1,this.setEnabled(!1))}onViewFocusChanged(e){(0,Un.Db)(this.contextKeyPrefix)}onViewStateChanged(e,t){t.webviewPanel.visible?(0,Un.Db)(this.contextKeyPrefix):(0,Un.qW)(this.contextKeyPrefix),e.pendingChange&&this.updateState(e)}async parseState(e){if(void 0===e.branchName){const t=await this.container.git.getBranch(e.repoPath);e.branchName=t?.name??null}const t=await async function(e,t,i){const r=t.document.getText(),s=co(r);let[,,,n]=no.exec(r)??["","",""];null!=t.authors&&null!=t.commits||await async function(e,t,i,r){t.commits=[],t.authors=new Map;const s=await e.git.richSearchCommits(t.repoPath,{query:`${i?`#:${i} `:""}${(0,ae.v_)((0,ae.UI)(r,(e=>`#:${e.sha}`))," ")}`},{limit:0});if(null!=s)for(const e of s.commits.values())if(t.commits.push(e),t.authors.has(e.author.name)||t.authors.set(e.author.name,{author:e.author.name,avatarUrl:(await e.getAvatarUri()).toString(!0),email:e.author.email}),!t.authors.has(e.committer.name)){const i=await e.committer.getAvatarUri(e);t.authors.set(e.committer.name,{author:e.committer.name,avatarUrl:i.toString(!0),email:e.committer.email})}}(e,t,n,s);const a=C.D.get("defaultDateFormat"),c=Mn.C.getMarkdownCommandArgs("${commit}",t.repoPath),l=n?t.commits?.find((e=>e.sha.startsWith(n))):void 0;let h;for(const e of s)h=t.commits?.find((t=>t.sha.startsWith(e.sha))),null!=h&&(h.sha===l?.sha&&(n=""),e.commit={sha:h.sha,author:h.author.name,committer:h.committer.name,date:h.formatDate(a),dateFromNow:h.formatDateFromNow(),message:(0,o.X)(h.message??h.summary)});return{webviewId:"gitlens.rebase",webviewInstanceId:void 0,timestamp:Date.now(),branch:t.branchName??"",onto:n?{sha:n,commit:null!=l?{sha:l.sha,author:l.author.name,committer:l.committer.name,date:l.formatDate(a),dateFromNow:l.formatDateFromNow(),message:(0,o.X)(l.message||"root")}:void 0}:void 0,entries:s,authors:null!=t.authors?Object.fromEntries(t.authors):{},commands:{commit:c},ascending:i}}(this.container,e,this.ascending);return t}async postMessage(e,t){try{const i=await e.panel.webview.postMessage(t);return e.pendingChange=!i,i}catch(t){return A.Yd.error(t),e.pendingChange=!0,!1}}onMessageReceived(e,t){switch(t.method){case Ln.W2.method:(0,Ln.mq)(Ln.W2,t,(e=>{this.onViewFocusChanged(e)}));break;case Gn.method:(0,Ln.mq)(Gn,t,(()=>this.abort(e)));break;case Hn.method:(0,Ln.mq)(Hn,t,(()=>this.disable(e)));break;case Vn.method:(0,Ln.mq)(Vn,t,(()=>(0,at.dO)("editor.action.webvieweditor.showFind")));break;case qn.method:(0,Ln.mq)(qn,t,(()=>this.rebase(e)));break;case jn.method:(0,Ln.mq)(jn,t,(()=>this.switchToText(e)));break;case Qn.method:(0,Ln.mq)(Qn,t,(t=>this.swapOrdering(t,e)));break;case Yn.method:(0,Ln.mq)(Yn,t,(t=>this.onEntryChanged(e,t)));break;case zn.method:(0,Ln.mq)(zn,t,(t=>this.onEntryMoved(e,t)));break;case Kn.method:(0,Ln.mq)(Kn,t,(t=>this.onSelectionChanged(e,t)))}}async onEntryChanged(e,t){const i=co(e.document),s=i.find((e=>e.sha===t.sha));if(null==s)return;const n=e.document.positionAt(s.index),o=e.document.validateRange(new r.Range(new r.Position(n.line,0),new r.Position(n.line,to)));let a=t.action;const c=new r.WorkspaceEdit,l=[...i];l.splice(i.indexOf(s),1,{...s,action:t.action});let h=!1;for(const e of l)"squash"===e.action||"fixup"===e.action?h=!0:h&&"drop"!==e.action&&(h=!1);if(h){const t=l[l.length-1];if(s.sha===t.sha)a="pick";else{const i=e.document.positionAt(t.index),s=e.document.validateRange(new r.Range(new r.Position(i.line,0),new r.Position(i.line,to)));c.replace(e.document.uri,s,`pick ${t.sha} ${t.message}`)}}c.replace(e.document.uri,o,`${a} ${s.sha} ${s.message}`),await r.workspace.applyEdit(c)}async onEntryMoved(e,t){const i=co(e.document),s=i.find((e=>e.sha===t.sha));if(null==s)return;const n=i.findIndex((e=>e.sha===t.sha));let o;if(t.relative){if(-1===t.to&&0===n||1===t.to&&n===i.length-1)return;o=n+t.to}else{if(n===t.to)return;o=t.to}const a=i[o];let c=e.document.positionAt(a.index).line;o<n&&c++;const l=e.document.positionAt(s.index),h=e.document.validateRange(new r.Range(new r.Position(l.line,0),new r.Position(l.line+1,0))),u=[...i];u.splice(n,1),u.splice(o,0,s);let d=!1;for(const e of u)"squash"===e.action||"fixup"===e.action?d=!0:d&&"drop"!==e.action&&(d=!1);const p=new r.WorkspaceEdit;let m=s.action;if(d){const t=u[u.length-1];if(s.sha===t.sha)m="pick";else{const i=e.document.positionAt(t.index),s=e.document.validateRange(new r.Range(new r.Position(i.line,0),new r.Position(i.line,to)));p.replace(e.document.uri,s,`pick ${t.sha} ${t.message}`)}}p.delete(e.document.uri,h),p.insert(e.document.uri,new r.Position(c,0),`${m} ${s.sha} ${s.message}\n`),await r.workspace.applyEdit(p)}onSelectionChanged(e,t){null==e.fireSelectionChangedDebounced&&(e.fireSelectionChangedDebounced=(0,pe.Ds)(this.fireSelectionChanged.bind(this),250)),e.fireSelectionChangedDebounced(e,t.sha)}fireSelectionChanged(e,t){if(null==t)return;const i=C.D.get("rebaseEditor.showDetailsView");t=e.commits?.find((e=>e.sha.startsWith(t)))?.sha??t,this.container.events.fire("commit:selected",{commit:(0,f.xB)(t,e.repoPath,{refType:"revision"}),interaction:"passive",preserveFocus:!0,preserveVisibility:e.firstSelection?!1===i:"selection"!==i},{source:"gitlens.rebase"}),e.firstSelection=!1}updateState(e,t=!1){if(t)return e.notifyDidChangeStateDebounced?.cancel(),void this.notifyDidChangeState(e);null==e.notifyDidChangeStateDebounced&&(e.notifyDidChangeStateDebounced=(0,pe.Ds)(this.notifyDidChangeState.bind(this),250)),e.notifyDidChangeStateDebounced(e)}async notifyDidChangeState(e){if(!e.panel.visible)return void(e.pendingChange=!0);const t=await this.parseState(e);this.postMessage(e,{id:(ro===to?ro=1:ro++,`host:${ro}`),method:Jn.method,params:{state:t}})}async abort(e){e.dispose();const t=new r.WorkspaceEdit;t.replace(e.document.uri,new r.Range(0,0,e.document.lineCount,0),""),await r.workspace.applyEdit(t),await e.document.save(),e.panel.dispose()}async disable(e){await this.abort(e),await this.setEnabled(!1)}async rebase(e){e.dispose(),await e.document.save(),e.panel.dispose()}swapOrdering(e,t){this.ascending=e.ascending??!1,C.D.updateEffective("rebaseEditor.ordering",this.ascending?"asc":"desc"),this.updateState(t,!0)}switchToText(e){(0,Nn.QP)(),(0,at.dO)("vscode.open",e.document.uri,{override:!1,preview:!1})}async getHtml(e){const t=r.Uri.joinPath(this.container.context.extensionUri,"dist","webviews"),i=r.Uri.joinPath(t,"rebase.html"),[s,n]=await Promise.all([r.workspace.fs.readFile(i),this.parseState(e)]);return(0,Un.Q5)(io.decode(s),"gitlens.rebase",void 0,e.panel.webview.cspSource,(0,_t.Vu)(),e.panel.webview.asWebviewUri(this.container.context.extensionUri).toString(),e.panel.webview.asWebviewUri(t).toString(),"editor",n)}}function co(e){const t="string"==typeof e?e:e.getText(),i=[];let r,s,n,o;for(;;){if(r=oo.exec(t),null==r)break;[,s,n,o]=r,i.push({index:r.index,action:ao.get(s)??"pick",sha:` ${n}`.substr(1),message:null==o||0===o.length?"":` ${o}`.substr(1)})}return i.reverse()}eo([(0,G.fF)({args:{0:e=>e.uri.toString(!0)}})],RebaseEditorProvider.prototype,"resolveCustomTextEditor",1),eo([(0,G.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],RebaseEditorProvider.prototype,"onViewFocusChanged",1),eo([(0,G.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`,1:e=>`active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`}})],RebaseEditorProvider.prototype,"onViewStateChanged",1),eo([(0,G.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],RebaseEditorProvider.prototype,"updateState",1),eo([(0,G.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],RebaseEditorProvider.prototype,"notifyDidChangeState",1),eo([(0,G.cM)({args:!1})],RebaseEditorProvider.prototype,"abort",1),eo([(0,G.cM)({args:!1})],RebaseEditorProvider.prototype,"disable",1),eo([(0,G.cM)({args:!1})],RebaseEditorProvider.prototype,"rebase",1),eo([(0,G.cM)({args:!1})],RebaseEditorProvider.prototype,"swapOrdering",1),eo([(0,G.cM)({args:!1})],RebaseEditorProvider.prototype,"switchToText",1);var lo=i(620);var ho=Object.defineProperty,uo=Object.getOwnPropertyDescriptor,po=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?uo(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ho(t,i,n),n};const mo=class _Container{static#e;static#t=new Proxy({},{get:function(e,t){if(null!=_Container.#e)return _Container.#e[t];if("config"===t)return C.D.getAll();throw new Error("Container is not initialized")}});static create(e,t,i,r,s){if(null!=_Container.#e)throw new Error("Container is already initialized");return _Container.#e=new _Container(e,t,i,r,s),_Container.#e}static get instance(){return _Container.#e??_Container.#t}_onReady=new r.EventEmitter;get onReady(){return this._onReady.event}BranchDateFormatting={dateFormat:void 0,dateStyle:void 0,reset:()=>{this.BranchDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.BranchDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};CommitDateFormatting={dateFormat:null,dateSource:"authored",dateStyle:"relative",reset:()=>{this.CommitDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.CommitDateFormatting.dateSource=C.D.get("defaultDateSource"),this.CommitDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};CommitShaFormatting={length:7,reset:()=>{this.CommitShaFormatting.length=Math.max(5,C.D.get("advanced.abbreviatedShaLength"))}};PullRequestDateFormatting={dateFormat:null,dateStyle:"relative",reset:()=>{this.PullRequestDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.PullRequestDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};TagDateFormatting={dateFormat:null,dateStyle:"relative",reset:()=>{this.TagDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.TagDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};_connection;_disposables;_terminalLinks;_webviews;constructor(e,t,s,o,a){this._context=e,this._prerelease=s,this._version=o,this.ensureModeApplied(),this._disposables=[this._storage=t,this._telemetry=new TelemetryService(this),this._usage=new UsageTracker(this,t),C.D.onDidChangeAny(this.onAnyConfigurationChanged,this)],this._disposables.push(this._connection=new ServerConnection(this)),this._disposables.push(this._accountAuthentication=new AccountAuthenticationProvider(this,this._connection)),this._disposables.push(this._subscription=new SubscriptionService(this,this._connection,a)),this._disposables.push(this._git=new GitProviderService(this)),this._disposables.push(new GitFileSystemProvider(this)),this._disposables.push(this._uri=new UriService(this)),this._disposables.push(this._deepLinks=new DeepLinkService(this)),this._disposables.push(this._actionRunners=new He.AR(this)),this._disposables.push(this._tracker=new GitDocumentTracker(this)),this._disposables.push(this._lineTracker=new GitLineTracker(this)),this._disposables.push(this._keyboard=new Keyboard),this._disposables.push(this._vsls=new VslsController(this)),this._disposables.push(this._eventBus=new EventBus),this._disposables.push(this._fileAnnotationController=new xe.f(this)),this._disposables.push(this._lineAnnotationController=new LineAnnotationController(this)),this._disposables.push(this._lineHoverController=new LineHoverController(this)),this._disposables.push(this._statusBarController=new StatusBarController(this)),this._disposables.push(this._codeLensController=new GitCodeLensController(this)),this._disposables.push(this._webviews=new lo.V(this));const c=this._webviews.registerWebviewPanel({id:n.Gh.ShowGraphPage,options:{preserveInstance:!0}},{id:"gitlens.graph",fileName:"graph.html",iconPath:"images/gitlens-icon.png",title:"Commit Graph",contextKeyPrefix:"gitlens:webview:graph",trackingFeature:"graphWebview",plusFeature:!0,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!0,enableFindWidget:!1},allowMultipleInstances:C.D.get("graph.allowMultiple")},(async(e,t)=>{const{GraphWebviewProvider:r}=await Promise.resolve().then(i.bind(i,1302));return new r(e,t)}));this._disposables.push(c),this._disposables.push(ci(this,c)),this._disposables.push(this._graphView=function(e){return e.registerWebviewView({id:"gitlens.views.graph",fileName:"graph.html",title:"Commit Graph",contextKeyPrefix:"gitlens:webviewView:graph",trackingFeature:"graphView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!0}},(async(e,t)=>{const{GraphWebviewProvider:r}=await Promise.resolve().then(i.bind(i,1302));return new r(e,t)}))}(this._webviews)),this._disposables.push(new GraphStatusBarController(this));const l=function(e){return e.registerWebviewPanel({id:n.Gh.ShowFocusPage,options:{preserveInstance:!0}},{id:"gitlens.focus",fileName:"focus.html",iconPath:"images/gitlens-icon.png",title:"Focus",contextKeyPrefix:"gitlens:webview:focus",trackingFeature:"focusWebview",plusFeature:!0,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!0,enableFindWidget:!0},allowMultipleInstances:C.D.get("focus.allowMultiple")},(async(e,t)=>{const{FocusWebviewProvider:r}=await Promise.resolve().then(i.bind(i,1629));return new r(e,t)}))}(this._webviews);var h;this._disposables.push(l),this._disposables.push((h=l,r.Disposable.from((0,at.xR)(`${h.id}.refresh`,(()=>{h.getActiveInstance()?.refresh(!0)})),(0,at.xR)(`${h.id}.split`,(()=>{h.splitActiveInstance({preserveInstance:!1,column:r.ViewColumn.Beside})})))));const u=function(e){return e.registerWebviewPanel({id:n.Gh.ShowTimelinePage,options:{preserveInstance:!0}},{id:"gitlens.timeline",fileName:"timeline.html",iconPath:"images/gitlens-icon.png",title:"Visual File History",contextKeyPrefix:"gitlens:webview:timeline",trackingFeature:"timelineWebview",plusFeature:!0,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!1},allowMultipleInstances:C.D.get("visualHistory.allowMultiple")},(async(e,t)=>{const{TimelineWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9042));return new r(e,t)}))}(this._webviews);this._disposables.push(u),this._disposables.push(function(e){return r.Disposable.from((0,at.xR)(n.Gh.ShowInTimeline,((...t)=>{e.show(void 0,...t)})),(0,at.xR)(`${e.id}.refresh`,(()=>{e.getActiveInstance()?.refresh(!0)})),(0,at.xR)(`${e.id}.split`,(()=>{e.splitActiveInstance({preserveInstance:!1,column:r.ViewColumn.Beside})})))}(u)),this._disposables.push(this._timelineView=function(e){return e.registerWebviewView({id:"gitlens.views.timeline",fileName:"timeline.html",title:"Visual File History",contextKeyPrefix:"gitlens:webviewView:timeline",trackingFeature:"timelineView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{TimelineWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9042));return new r(e,t)}))}(this._webviews)),this._disposables.push(this._rebaseEditor=new RebaseEditorProvider(this));const d=function(e){return e.registerWebviewPanel({id:n.Gh.ShowSettingsPage},{id:"gitlens.settings",fileName:"settings.html",iconPath:"images/gitlens-icon.png",title:"GitLens Settings",contextKeyPrefix:"gitlens:webview:settings",trackingFeature:"settingsWebview",plusFeature:!1,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!0}},(async(e,t)=>{const{SettingsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,5596));return new r(e,t)}))}(this._webviews);this._disposables.push(d),this._disposables.push(function(e){return r.Disposable.from(...[n.Gh.ShowSettingsPageAndJumpToBranchesView,n.Gh.ShowSettingsPageAndJumpToCommitsView,n.Gh.ShowSettingsPageAndJumpToContributorsView,n.Gh.ShowSettingsPageAndJumpToFileHistoryView,n.Gh.ShowSettingsPageAndJumpToLineHistoryView,n.Gh.ShowSettingsPageAndJumpToRemotesView,n.Gh.ShowSettingsPageAndJumpToRepositoriesView,n.Gh.ShowSettingsPageAndJumpToSearchAndCompareView,n.Gh.ShowSettingsPageAndJumpToStashesView,n.Gh.ShowSettingsPageAndJumpToTagsView,n.Gh.ShowSettingsPageAndJumpToWorkTreesView,n.Gh.ShowSettingsPageAndJumpToViews,n.Gh.ShowSettingsPageAndJumpToCommitGraph,n.Gh.ShowSettingsPageAndJumpToAutolinks].map((t=>{let i;const r=/.*?!(.*)/.exec(t);return null!=r&&([,i]=r),(0,at.xR)(t,(()=>{e.show(void 0,...i?[i]:[])}))})))}(d)),this._disposables.push(function(e){return e.registerWebviewPanel({id:n.Gh.ShowWelcomePage},{id:"gitlens.welcome",fileName:"welcome.html",iconPath:"images/gitlens-icon.png",title:"Welcome to GitLens",contextKeyPrefix:"gitlens:webview:welcome",trackingFeature:"welcomeWebview",plusFeature:!1,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!0}},(async(e,t)=>{const{WelcomeWebviewProvider:r}=await Promise.resolve().then(i.bind(i,7338));return new r(e,t)}))}(this._webviews)),this._disposables.push(new ViewFileDecorationProvider),this._disposables.push(this._repositoriesView=new RepositoriesView(this)),this._disposables.push(this._commitDetailsView=function(e){return e.registerWebviewView({id:"gitlens.views.commitDetails",fileName:"commitDetails.html",title:"Commit Details",contextKeyPrefix:"gitlens:webviewView:commitDetails",trackingFeature:"commitDetailsView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{CommitDetailsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9263));return new r(e,t,{attachedTo:"default"})}))}(this._webviews));const p=function(e){return e.registerWebviewPanel({id:n.Gh.ShowPatchDetailsPage,options:{preserveInstance:!0}},{id:"gitlens.patchDetails",fileName:"patchDetails.html",iconPath:"images/gitlens-icon.png",title:"Patch",contextKeyPrefix:"gitlens:webview:patchDetails",trackingFeature:"patchDetailsWebview",plusFeature:!0,column:r.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!1},allowMultipleInstances:!0},(async(e,t)=>{const{PatchDetailsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9804));return new r(e,t)}))}(this._webviews);var m;this._disposables.push(p),this._disposables.push(this._patchDetailsView=li(this._webviews)),this._disposables.push(this._graphDetailsView=function(e){return e.registerWebviewView({id:"gitlens.views.graphDetails",fileName:"commitDetails.html",title:"Commit Graph Details",contextKeyPrefix:"gitlens:webviewView:graphDetails",trackingFeature:"graphDetailsView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{CommitDetailsWebviewProvider:r}=await Promise.resolve().then(i.bind(i,9263));return new r(e,t,{attachedTo:"graph"})}))}(this._webviews)),this._disposables.push(this._commitsView=new CommitsView(this)),this._disposables.push(this._fileHistoryView=new FileHistoryView(this)),this._disposables.push(this._lineHistoryView=new LineHistoryView(this)),this._disposables.push(this._branchesView=new BranchesView(this)),this._disposables.push(this._remotesView=new RemotesView(this)),this._disposables.push(this._stashesView=new StashesView(this)),this._disposables.push(this._tagsView=new TagsView(this)),this._disposables.push(this._worktreesView=new WorktreesView(this)),this._disposables.push(this._contributorsView=new ContributorsView(this)),this._disposables.push(this._searchAndCompareView=new SearchAndCompareView(this)),this._disposables.push(this._draftsView=new DraftsView(this)),this._disposables.push(this._workspacesView=new WorkspacesView(this)),this._disposables.push(this._homeView=function(e){return e.registerWebviewView({id:"gitlens.views.home",fileName:"home.html",title:"Home",contextKeyPrefix:"gitlens:webviewView:home",trackingFeature:"homeView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{HomeWebviewProvider:r}=await Promise.resolve().then(i.bind(i,2384));return new r(e,t)}))}(this._webviews)),this._disposables.push(this._accountView=function(e){return e.registerWebviewView({id:"gitlens.views.account",fileName:"account.html",title:"GitKraken Account",contextKeyPrefix:"gitlens:webviewView:account",trackingFeature:"accountView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},(async(e,t)=>{const{AccountWebviewProvider:r}=await Promise.resolve().then(i.bind(i,420));return new r(e,t)}))}(this._webviews)),C.D.get("terminalLinks.enabled")&&this._disposables.push(this._terminalLinks=new GitTerminalLinkProvider(this)),this._disposables.push(C.D.onDidChange((e=>{C.D.changed(e,"terminalLinks.enabled")&&(this._terminalLinks?.dispose(),C.D.get("terminalLinks.enabled")&&this._disposables.push(this._terminalLinks=new GitTerminalLinkProvider(this)))}))),e.subscriptions.push({dispose:()=>this._disposables.reverse().forEach((e=>{e.dispose()}))}),m=this,null!=yi()&&setTimeout((()=>m.workspaces.addMissingCurrentWorkspaceRepos()),1e4)}deactivate(){this._deactivating=!0}_deactivating=!1;get deactivating(){return this._deactivating}_ready=!1;async ready(){if(this._ready)throw new Error("Container is already ready");this._ready=!0,await this.registerGitProviders(),queueMicrotask((()=>this._onReady.fire()))}async registerGitProviders(){const e=await async function(e){return[new GitHubGitProvider(e)]}(this);for(const t of e)this._disposables.push(this._git.register(t.descriptor.id,t));this._git.registrationComplete()}onAnyConfigurationChanged(e){C.D.changedAny(e,n.m1)&&(this._mode=void 0,C.D.changed(e,"outputLevel")&&(A.Yd.logLevel=(0,Qe.oE)(C.D.get("outputLevel"))),C.D.changed(e,"defaultGravatarsStyle")&&(0,Ve.Wr)(C.D.get("defaultGravatarsStyle")),C.D.changed(e,"mode")&&this.ensureModeApplied())}_accountAuthentication;get accountAuthentication(){return this._accountAuthentication}_accountView;get accountView(){return this._accountView}_actionRunners;get actionRunners(){return this._actionRunners}_ai;get ai(){return null==this._ai&&this._disposables.push(this._ai=new AIProviderService(this)),this._ai}_autolinks;get autolinks(){return null==this._autolinks&&this._disposables.push(this._autolinks=new Ie.P(this)),this._autolinks}_branchesView;get branchesView(){return this._branchesView}_cache;get cache(){return null==this._cache&&this._disposables.push(this._cache=new CacheProvider(this)),this._cache}_drafts;get drafts(){return null==this._drafts&&this._disposables.push(this._drafts=new DraftService(this,this._connection)),this._drafts}_repositoryIdentity;get repositoryIdentity(){return null==this._repositoryIdentity&&this._disposables.push(this._repositoryIdentity=new RepositoryIdentityService(this,this._connection)),this._repositoryIdentity}_draftsView;get draftsView(){return this._draftsView}_codeLensController;get codeLens(){return this._codeLensController}_commitsView;get commitsView(){return this._commitsView}_commitDetailsView;get commitDetailsView(){return this._commitDetailsView}_context;get context(){return this._context}_contributorsView;get contributorsView(){return this._contributorsView}get debugging(){return this._context.extensionMode===r.ExtensionMode.Development}_deepLinks;get deepLinks(){return this._deepLinks}get env(){if(this.prereleaseOrDebugging){const e=C.D.getAny("gitkraken.env");if("dev"===e)return"dev";if("staging"===e)return"staging"}return"production"}_eventBus;get events(){return this._eventBus}_fileAnnotationController;get fileAnnotations(){return this._fileAnnotationController}_fileHistoryView;get fileHistoryView(){return this._fileHistoryView}_focus;get focus(){return null==this._focus&&this._disposables.push(this._focus=new FocusService(this,new ServerConnection(this))),this._focus}_git;get git(){return this._git}_github;get github(){return null==this._github&&(this._github=this._loadGitHubApi()),this._github}async _loadGitHubApi(){try{const e=new((await Promise.resolve().then(i.bind(i,7467))).GitHubApi)(this);return this._disposables.push(e),e}catch(e){return void A.Yd.error(e)}}_gitlab;get gitlab(){return null==this._gitlab&&(this._gitlab=this._loadGitLabApi()),this._gitlab}async _loadGitLabApi(){try{const e=new((await Promise.resolve().then(i.bind(i,2142))).GitLabApi)(this);return this._disposables.push(e),e}catch(e){return void A.Yd.error(e)}}_graphDetailsView;get graphDetailsView(){return this._graphDetailsView}_graphView;get graphView(){return this._graphView}_homeView;get homeView(){return this._homeView}get id(){return this._context.extension.id}_integrationAuthentication;get integrationAuthentication(){return null==this._integrationAuthentication&&this._disposables.push(this._integrationAuthentication=new IntegrationAuthenticationService(this),new L.z4(this),new GitLabAuthenticationProvider(this)),this._integrationAuthentication}_keyboard;get keyboard(){return this._keyboard}_lineAnnotationController;get lineAnnotations(){return this._lineAnnotationController}_lineHistoryView;get lineHistoryView(){return this._lineHistoryView}_lineHoverController;get lineHovers(){return this._lineHoverController}_lineTracker;get lineTracker(){return this._lineTracker}_mode;get mode(){return null==this._mode&&(this._mode=C.D.get("modes")?.[C.D.get("mode.active")]),this._mode}_patchDetailsView;get patchDetailsView(){return this._patchDetailsView}_prerelease;get prerelease(){return this._prerelease}get prereleaseOrDebugging(){return this._prerelease||this.debugging}_rebaseEditor;get rebaseEditor(){return this._rebaseEditor}_remotesView;get remotesView(){return this._remotesView}_repositoriesView;get repositoriesView(){return this._repositoriesView}_repositoryPathMapping;get repositoryPathMapping(){return null==this._repositoryPathMapping&&this._disposables.push(this._repositoryPathMapping=new RepositoryWebPathMappingProvider(this)),this._repositoryPathMapping}_richRemoteProviders;get richRemoteProviders(){return null==this._richRemoteProviders&&(this._richRemoteProviders=new RichRemoteProviderService(this)),this._richRemoteProviders}_searchAndCompareView;get searchAndCompareView(){return this._searchAndCompareView}_stashesView;get stashesView(){return this._stashesView}_statusBarController;get statusBar(){return this._statusBarController}_storage;get storage(){return this._storage}_subscription;get subscription(){return this._subscription}_tagsView;get tagsView(){return this._tagsView}_telemetry;get telemetry(){return this._telemetry}_timelineView;get timelineView(){return this._timelineView}_tracker;get tracker(){return this._tracker}_uri;get uri(){return this._uri}_usage;get usage(){return this._usage}_version;get version(){return this._version}_viewCommands;get viewCommands(){return null==this._viewCommands&&(this._viewCommands=new ViewCommands(this)),this._viewCommands}_vsls;get vsls(){return this._vsls}_workspaces;get workspaces(){return null==this._workspaces&&this._disposables.push(this._workspaces=new WorkspacesService(this,this._connection)),this._workspaces}_workspacesView;get workspacesView(){return this._workspacesView}_worktreesView;get worktreesView(){return this._worktreesView}ensureModeApplied(){const e=this.mode;if(null!=e){if(null!=e.annotations){let t;switch(e.annotations){case"blame":t=n.Gh.ToggleFileBlame;break;case"changes":t=n.Gh.ToggleFileChanges;break;case"heatmap":t=n.Gh.ToggleFileHeatmap}if(null!=t){const i={type:e.annotations,on:!0};setTimeout(at.P0,50,t,i)}}C.D.applyOverrides({get:(t,i)=>{if(null!=e.annotations){if(C.D.matches(`${e.annotations}.toggleMode`,t,i))return i="window";if(C.D.matches(e.annotations,t,i))return i.toggleMode="window",i}for(const r of["codeLens","currentLine","hovers","statusBar"])if(null!=e[r]){if(C.D.matches(`${r}.enabled`,t,i))return i=e[r];if(C.D.matches(r,t,i))return i.enabled=e[r],i}return i},getAll:t=>(null!=e.annotations&&(t[e.annotations].toggleMode="window"),null!=e.codeLens&&(t.codeLens.enabled=e.codeLens),null!=e.currentLine&&(t.currentLine.enabled=e.currentLine),null!=e.hovers&&(t.hovers.enabled=e.hovers),null!=e.statusBar&&(t.statusBar.enabled=e.statusBar),t),onDidChange:e=>{if(!C.D.changed(e,["mode","modes"]))return e;const t=e.affectsConfiguration;return{...e,affectsConfiguration:(e,i)=>!!/^gitlens\.(?:modes?|blame|changes|heatmap|codeLens|currentLine|hovers|statusBar)\b/.test(e)||t(e,i)}}})}else C.D.clearOverrides()}};po([(0,G.cM)()],mo.prototype,"registerGitProviders",1),po([(0,zt.H)()],mo.prototype,"debugging",1),po([(0,zt.H)()],mo.prototype,"env",1),po([(0,zt.H)()],mo.prototype,"id",1),po([(0,zt.H)()],mo.prototype,"prereleaseOrDebugging",1);let go=mo;function fo(e){return e instanceof go}},3148:(e,t,i)=>{i.d(t,{X:()=>a});const r="";var s=i(3620);const n=/:([-+_a-z0-9]+):/g;let o;function a(e){return null==o&&(o=JSON.parse((0,s.QC)(r))),e.replace(n,((e,t)=>o[t]||e))}},3317:(e,t,i)=>{i.d(t,{U:()=>n});const{fromCharCode:r}=String,s=new TextEncoder;function n(e){let t="string"==typeof e?s.encode(e):e,i="";for(let e=0,{length:s}=t;e<s;e++)i+=r(t[e]);return globalThis.btoa(i)}},4290:(e,t,i)=>{i.d(t,{Vu:()=>l,FB:()=>h,Vj:()=>u});var r=i(3317);function s(e,t){let[i,r,s,n]=e;i+=(r&s|~r&n)+t[0]-680876936|0,i=(i<<7|i>>>25)+r|0,n+=(i&r|~i&s)+t[1]-389564586|0,n=(n<<12|n>>>20)+i|0,s+=(n&i|~n&r)+t[2]+606105819|0,s=(s<<17|s>>>15)+n|0,r+=(s&n|~s&i)+t[3]-1044525330|0,r=(r<<22|r>>>10)+s|0,i+=(r&s|~r&n)+t[4]-176418897|0,i=(i<<7|i>>>25)+r|0,n+=(i&r|~i&s)+t[5]+1200080426|0,n=(n<<12|n>>>20)+i|0,s+=(n&i|~n&r)+t[6]-1473231341|0,s=(s<<17|s>>>15)+n|0,r+=(s&n|~s&i)+t[7]-45705983|0,r=(r<<22|r>>>10)+s|0,i+=(r&s|~r&n)+t[8]+1770035416|0,i=(i<<7|i>>>25)+r|0,n+=(i&r|~i&s)+t[9]-1958414417|0,n=(n<<12|n>>>20)+i|0,s+=(n&i|~n&r)+t[10]-42063|0,s=(s<<17|s>>>15)+n|0,r+=(s&n|~s&i)+t[11]-1990404162|0,r=(r<<22|r>>>10)+s|0,i+=(r&s|~r&n)+t[12]+1804603682|0,i=(i<<7|i>>>25)+r|0,n+=(i&r|~i&s)+t[13]-40341101|0,n=(n<<12|n>>>20)+i|0,s+=(n&i|~n&r)+t[14]-1502002290|0,s=(s<<17|s>>>15)+n|0,r+=(s&n|~s&i)+t[15]+1236535329|0,r=(r<<22|r>>>10)+s|0,i+=(r&n|s&~n)+t[1]-165796510|0,i=(i<<5|i>>>27)+r|0,n+=(i&s|r&~s)+t[6]-1069501632|0,n=(n<<9|n>>>23)+i|0,s+=(n&r|i&~r)+t[11]+643717713|0,s=(s<<14|s>>>18)+n|0,r+=(s&i|n&~i)+t[0]-373897302|0,r=(r<<20|r>>>12)+s|0,i+=(r&n|s&~n)+t[5]-701558691|0,i=(i<<5|i>>>27)+r|0,n+=(i&s|r&~s)+t[10]+38016083|0,n=(n<<9|n>>>23)+i|0,s+=(n&r|i&~r)+t[15]-660478335|0,s=(s<<14|s>>>18)+n|0,r+=(s&i|n&~i)+t[4]-405537848|0,r=(r<<20|r>>>12)+s|0,i+=(r&n|s&~n)+t[9]+568446438|0,i=(i<<5|i>>>27)+r|0,n+=(i&s|r&~s)+t[14]-1019803690|0,n=(n<<9|n>>>23)+i|0,s+=(n&r|i&~r)+t[3]-187363961|0,s=(s<<14|s>>>18)+n|0,r+=(s&i|n&~i)+t[8]+1163531501|0,r=(r<<20|r>>>12)+s|0,i+=(r&n|s&~n)+t[13]-1444681467|0,i=(i<<5|i>>>27)+r|0,n+=(i&s|r&~s)+t[2]-51403784|0,n=(n<<9|n>>>23)+i|0,s+=(n&r|i&~r)+t[7]+1735328473|0,s=(s<<14|s>>>18)+n|0,r+=(s&i|n&~i)+t[12]-1926607734|0,r=(r<<20|r>>>12)+s|0,i+=(r^s^n)+t[5]-378558|0,i=(i<<4|i>>>28)+r|0,n+=(i^r^s)+t[8]-2022574463|0,n=(n<<11|n>>>21)+i|0,s+=(n^i^r)+t[11]+1839030562|0,s=(s<<16|s>>>16)+n|0,r+=(s^n^i)+t[14]-35309556|0,r=(r<<23|r>>>9)+s|0,i+=(r^s^n)+t[1]-1530992060|0,i=(i<<4|i>>>28)+r|0,n+=(i^r^s)+t[4]+1272893353|0,n=(n<<11|n>>>21)+i|0,s+=(n^i^r)+t[7]-155497632|0,s=(s<<16|s>>>16)+n|0,r+=(s^n^i)+t[10]-1094730640|0,r=(r<<23|r>>>9)+s|0,i+=(r^s^n)+t[13]+681279174|0,i=(i<<4|i>>>28)+r|0,n+=(i^r^s)+t[0]-358537222|0,n=(n<<11|n>>>21)+i|0,s+=(n^i^r)+t[3]-722521979|0,s=(s<<16|s>>>16)+n|0,r+=(s^n^i)+t[6]+76029189|0,r=(r<<23|r>>>9)+s|0,i+=(r^s^n)+t[9]-640364487|0,i=(i<<4|i>>>28)+r|0,n+=(i^r^s)+t[12]-421815835|0,n=(n<<11|n>>>21)+i|0,s+=(n^i^r)+t[15]+530742520|0,s=(s<<16|s>>>16)+n|0,r+=(s^n^i)+t[2]-995338651|0,r=(r<<23|r>>>9)+s|0,i+=(s^(r|~n))+t[0]-198630844|0,i=(i<<6|i>>>26)+r|0,n+=(r^(i|~s))+t[7]+1126891415|0,n=(n<<10|n>>>22)+i|0,s+=(i^(n|~r))+t[14]-1416354905|0,s=(s<<15|s>>>17)+n|0,r+=(n^(s|~i))+t[5]-57434055|0,r=(r<<21|r>>>11)+s|0,i+=(s^(r|~n))+t[12]+1700485571|0,i=(i<<6|i>>>26)+r|0,n+=(r^(i|~s))+t[3]-1894986606|0,n=(n<<10|n>>>22)+i|0,s+=(i^(n|~r))+t[10]-1051523|0,s=(s<<15|s>>>17)+n|0,r+=(n^(s|~i))+t[1]-2054922799|0,r=(r<<21|r>>>11)+s|0,i+=(s^(r|~n))+t[8]+1873313359|0,i=(i<<6|i>>>26)+r|0,n+=(r^(i|~s))+t[15]-30611744|0,n=(n<<10|n>>>22)+i|0,s+=(i^(n|~r))+t[6]-1560198380|0,s=(s<<15|s>>>17)+n|0,r+=(n^(s|~i))+t[13]+1309151649|0,r=(r<<21|r>>>11)+s|0,i+=(s^(r|~n))+t[4]-145523070|0,i=(i<<6|i>>>26)+r|0,n+=(r^(i|~s))+t[11]-1120210379|0,n=(n<<10|n>>>22)+i|0,s+=(i^(n|~r))+t[2]+718787259|0,s=(s<<15|s>>>17)+n|0,r+=(n^(s|~i))+t[9]-343485551|0,r=(r<<21|r>>>11)+s|0,e[0]=i+e[0]|0,e[1]=r+e[1]|0,e[2]=s+e[2]|0,e[3]=n+e[3]|0}function n(e){const t=[];for(let i=0;i<64;i+=4)t[i>>2]=e.charCodeAt(i)+(e.charCodeAt(i+1)<<8)+(e.charCodeAt(i+2)<<16)+(e.charCodeAt(i+3)<<24);return t}const o=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function a(e){let t="";for(let i=0;i<4;i+=1)t+=o[e>>8*i+4&15]+o[e>>8*i&15];return t}function c(e,t="hex"){const i=(r=function(e){const t=e.length;let i,r=[1732584193,-271733879,-1732584194,271733878];for(i=64;i<=t;i+=64)s(r,n(e.substring(i-64,i)));let o=(e=e.substring(i-64)).length,a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;i<o;i+=1)a[i>>2]|=e.charCodeAt(i)<<(i%4<<3);if(a[i>>2]|=128<<(i%4<<3),i>55)for(s(r,a),i=0;i<16;i+=1)a[i]=0;const c=(8*t).toString(16).match(/(.*?)(.{0,8})$/),l=parseInt(c[2],16),h=parseInt(c[1],16)||0;return a[14]=l,a[15]=h,s(r,a),r}(e),r.map(a).join(""));var r;return"hex"===t?i:btoa(function(e){const t=[],i=e.length;for(let r=0;r<i-1;r+=2)t.push(parseInt(e.substr(r,2),16));return String.fromCharCode.apply(String,t)}(i))}function l(){return(0,r.U)(globalThis.crypto.getRandomValues(new Uint8Array(16)))}function h(e,t="hex"){return c(e,t)}function u(){return globalThis.crypto.randomUUID()}},9827:(e,t,i)=>{i.d(t,{Nx:()=>s,a_:()=>n,he:()=>r});const r=globalThis.fetch;function s(e){}async function n(e,t){return t()}},185:(e,t,i)=>{i.d(t,{d:()=>a,e:()=>o});const r=new TextDecoder,s=new TextEncoder,n=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function o(e){const t=s.encode(e),i=new Array(t.length);for(let e=0;e<t.length;++e)i[e]=n[t[e]];return i.join("")}function a(e){const t=e.match(/(\w{2})/g);if(null===t)return"";const i=new Uint8Array(t.map((e=>parseInt(e,16))));return r.decode(i)}},9376:(e,t,i)=>{function r(e){const t=.001*performance.now();let i=Math.floor(t),r=Math.floor(t%1*1e9);return void 0!==e&&(i-=e[0],r-=e[1],r<0&&(i--,r+=1e9)),[i,r]}i.d(t,{a:()=>r})},429:(e,t,i)=>{i.d(t,{$L:()=>r,ED:()=>c,IJ:()=>o,Xf:()=>l});const r=!0,s=navigator?.userAgentData?.platform,n=navigator.userAgent,o="Linux"===s||n.indexOf("Linux")>=0,a="macOS"===s||n.indexOf("Macintosh")>=0,c="Windows"===s||n.indexOf("Windows")>=0;function l(){return c?"web-windows":a?"web-macOS":o?"web-linux":"web"}},4575:(e,t,i)=>{i.d(t,{$y:()=>AccessDeniedError,Bn:()=>ProviderRequestClientError,FU:()=>CancellationError,Jx:()=>n,MO:()=>ProviderNotFoundError,R5:()=>ExtensionNotFoundError,Ww:()=>ProviderRequestNotFoundError,Xq:()=>ProviderFetchError,_7:()=>AuthenticationError,dt:()=>AccountValidationError,kX:()=>OpenVirtualRepositoryError,sh:()=>o,yx:()=>ProviderRequestRateLimitError});var r=i(9496),s=i(6516);class AccessDeniedError extends Error{subscription;required;constructor(e,t){let i;i=!1===e.account?.verified?"Email verification required":null!=t&&(0,s.aG)(t)?"Paid plan required":"Plan required",super(i),this.subscription=e,this.required=t,Error.captureStackTrace?.(this,AccessDeniedError)}}class AccountValidationError extends Error{original;statusCode;statusText;constructor(e,t,i,r){super(e+=`; status=${i}: ${r}`),this.original=t,this.statusCode=i,this.statusText=r,Error.captureStackTrace?.(this,AccountValidationError)}}var n=(e=>(e[e.UserDidNotConsent=1]="UserDidNotConsent",e[e.Unauthorized=2]="Unauthorized",e[e.Forbidden=3]="Forbidden",e))(n||{});class AuthenticationError extends Error{id;original;reason;constructor(e,t,i){let r,s;if(null==t)r=`Unable to get required authentication session for '${e}'`;else if("string"==typeof t)r=t,s=void 0;else switch(s=t,s){case 1:r=`'${e}' authentication is required for this operation`;break;case 2:r=`Your '${e}' credentials are either invalid or expired`;break;case 3:r=`Your '${e}' credentials do not have the required access`}super(r),this.id=e,this.original=i,this.reason=s,Error.captureStackTrace?.(this,AuthenticationError)}}class CancellationError extends r.CancellationError{constructor(){super(),Error.captureStackTrace?.(this,CancellationError)}}class ExtensionNotFoundError extends Error{constructor(e,t){super(`Unable to find the ${t} extension (${e}). Please ensure it is installed and enabled.`),this.extensionId=e,this.extensionName=t,Error.captureStackTrace?.(this,ExtensionNotFoundError)}}var o=(e=>(e[e.RemoteHubApiNotFound=1]="RemoteHubApiNotFound",e[e.NotAGitHubRepository=2]="NotAGitHubRepository",e[e.GitHubAuthenticationNotFound=3]="GitHubAuthenticationNotFound",e[e.GitHubAuthenticationDenied=4]="GitHubAuthenticationDenied",e))(o||{});class OpenVirtualRepositoryError extends Error{original;reason;repoPath;constructor(e,t,i){let r,s;if(null==t)r=`Unable to open the virtual repository: ${e}`;else if("string"==typeof t)r=t,s=void 0;else switch(s=t,r=`Unable to open the virtual repository: ${e}; `,s){case 1:r+="Unable to get required api from the GitHub Repositories extension. Please ensure that the GitHub Repositories extension is installed and enabled";break;case 2:r+="Only GitHub repositories are supported currently";break;case 3:r+="Unable to get required GitHub authentication";break;case 4:r+="GitHub authentication is required"}super(r),this.original=i,this.reason=s,this.repoPath=e,Error.captureStackTrace?.(this,OpenVirtualRepositoryError)}}class ProviderFetchError extends Error{constructor(e,t,i){super(`${e} request failed: ${t.ok?"":`(${t.status}) ${t.statusText}. `}${i?.length?i[0].message:""}`),this.response=t,Error.captureStackTrace?.(this,ProviderFetchError)}get status(){return this.response.status}get statusText(){return this.response.statusText}}class ProviderNotFoundError extends Error{constructor(e){super(`No provider registered for '${null==e?String(e):"string"==typeof e?e:e.toString(!0)}'`),Error.captureStackTrace?.(this,ProviderNotFoundError)}}class ProviderRequestClientError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,ProviderRequestClientError)}}class ProviderRequestNotFoundError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,ProviderRequestNotFoundError)}}class ProviderRequestRateLimitError extends Error{constructor(e,t,i){super(e.message),this.original=e,this.token=t,this.resetAt=i,Error.captureStackTrace?.(this,ProviderRequestRateLimitError)}}},8887:(e,t,i)=>{i.d(t,{A:()=>r,x:()=>s});var r=(e=>(e.Stashes="stashes",e.Timeline="timeline",e.Worktrees="worktrees",e.StashOnlyStaged="stashOnlyStaged",e.ForceIfIncludes="forceIfIncludes",e))(r||{}),s=(e=>(e.Timeline="timeline",e.Worktrees="worktrees",e.Graph="graph",e.Focus="focus",e))(s||{})},9311:(e,t,i)=>{i.d(t,{g:()=>a,m:()=>o});var r=i(5255),s=i(9529),n=i(7469);async function o(e){const t=(0,n.PQ)();return await(0,s.P0)(r.Gh.GitCommands,{...e,completion:t}),t.promise}async function a(e,t){await(0,s.b2)(r.Gh.BrowseRepoAtRevision,void 0,{uri:e,before:t?.before,openInNewWindow:t?.openInNewWindow})}},3401:(e,t,i)=>{i.d(t,{Od:()=>o,PQ:()=>a,Ue:()=>n,ay:()=>c});var r=i(6894),s=i(9311);function n(e,t,i){return(0,s.m)({command:"branch",state:{subcommand:"create",repo:e,reference:t,name:i}})}function o(e,t){return(0,s.m)({command:"branch",state:{subcommand:"delete",repo:e,references:t}})}function a(e,t,i){return(0,s.m)({command:"branch",state:{subcommand:"rename",repo:e,reference:t,name:i}})}async function c(e,t){const i=e.remote?r.W.instance.remotesView:r.W.instance.branchesView,s=i.canReveal?await i.revealBranch(e,t):await r.W.instance.repositoriesView.revealBranch(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}},6897:(e,t,i)=>{i.d(t,{$H:()=>p,$J:()=>$,Dh:()=>_,E4:()=>x,Fw:()=>I,GM:()=>O,Gp:()=>g,Hl:()=>T,Os:()=>S,Ou:()=>w,SJ:()=>m,Uc:()=>E,Xy:()=>y,YM:()=>D,YS:()=>k,ZB:()=>P,aE:()=>R,ay:()=>F,ce:()=>b,iK:()=>C,tc:()=>A,vw:()=>v,wr:()=>f,zb:()=>d});var r=i(9496),s=i(5255),n=i(6894),o=i(9529),a=i(2509),c=i(7462),l=i(6450),h=i(439),u=i(4321);async function d(e,t,i){let s=!1,o=t.ref,a=i?.ref;if("string"!=typeof e)if("?"===e.status)o=`${o}^3`,s=!0;else if("A"===e.status)s=!0;else if("D"===e.status){const i=c.YY.fromFile(e,t.repoPath);try{await r.workspace.fs.stat(i)}catch{s=!0,a=o,o=`${o}^`}}if(s){const i=c.YY.fromFile(e,t.repoPath);await n.W.instance.git.applyChangesToWorkingFile(i,o,a),await P(i,{preserveFocus:!0,preview:!1})}else await P(e,t,{preserveFocus:!0,preview:!1}),await n.W.instance.git.applyChangesToWorkingFile(c.YY.fromFile(e,t.repoPath,o),o,a)}async function p(e){await r.env.clipboard.writeText(e.ref)}async function m(e){let t;if((0,l.f_)(e))t=e,null==t.message&&await t.ensureFullDetails();else if(t=await n.W.instance.git.getCommit(e.repoPath,e.ref),null==t)return;const i=t.message??t.summary;await r.env.clipboard.writeText(i)}async function g(e,t,i){let s,n;if((0,l.f_)(e)?(null==e.files&&await e.ensureFullDetails(),s=e.files??[],n={repoPath:e.repoPath,rhs:e.sha,lhs:e.unresolvedPreviousSha},i=t):(s=e,n=t),s.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${s.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}i={preserveFocus:!0,preview:!1,...i};for(const e of s)await v(e,n,i)}async function f(e,t){let i;if((0,l.f_)(e)?(null==e.files&&await e.ensureFullDetails(),i=e.files??[],t={repoPath:e.repoPath,ref:e.sha}):i=e,i.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${i.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}for(const e of i)y(e,t)}async function w(e,t,i){let s,n;if((0,l.f_)(e)?(null==e.files&&await e.ensureFullDetails(),s=e.files??[],n={repoPath:e.repoPath,ref:e.sha},i=t):(s=e,n=t),s.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${s.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}i={preserveFocus:!0,preview:!1,...i};for(const e of s)await b(e,n,i)}async function v(e,t,i){const r=(0,l.f_)(t);if("string"==typeof e){if(!r)throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}if(i={preserveFocus:!0,preview:!1,...i},"A"===e.status&&r){const r=await t.getCommitForFile(e);return void(0,o.P0)(s.Gh.DiffWithPrevious,{commit:r,showOptions:i})}const n=r?{repoPath:t.repoPath,rhs:t.sha,lhs:t.unresolvedPreviousSha}:t,a=c.YY.fromFile(e,n.repoPath),h="R"===e.status||"C"===e.status?c.YY.fromFile(e,n.repoPath,n.lhs,!0):a;await(0,o.P0)(s.Gh.DiffWith,{repoPath:n.repoPath,lhs:{uri:h,sha:n.lhs,title:i?.lhsTitle},rhs:{uri:a,sha:n.rhs,title:i?.rhsTitle},showOptions:i})}async function y(e,t,i){if("string"==typeof e){if(!(0,l.f_)(t))throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}return n.W.instance.git.openDiffTool(t.repoPath,c.YY.fromFile(e,e.repoPath??t.repoPath),{ref1:(0,u.l3)(t.ref)?"":`${t.ref}^`,ref2:(0,u.l3)(t.ref)?"":t.ref,staged:(0,u.rD)(t.ref)||null!=e.indexStatus,tool:i})}async function b(e,t,i){if("string"==typeof e){if(!(0,l.f_)(t))throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}if("D"===e.status)return;let r;r=(0,l.f_)(t)?{repoPath:t.repoPath,ref:t.sha}:t,i={preserveFocus:!0,preview:!1,...i},await(0,o.b2)(s.Gh.DiffWithWorking,void 0,{uri:c.YY.fromFile(e,r.repoPath,r.ref),showOptions:i,lhsTitle:i?.lhsTitle})}async function C(e,t,i,r){return n.W.instance.git.openDirectoryCompare(e,t,i,r)}async function A(e){return C(e.repoPath,e.ref,`${e.ref}^`)}async function S(e){return C(e.repoPath,e.ref,void 0)}async function P(e,t,i){let n;if(e instanceof r.Uri)n=e,i=t;else{const i=t;if(n=c.YY.fromFile(e,i.repoPath,i.ref),"string"!=typeof e&&"?"===e.status)return}i={preserveFocus:!0,preview:!1,...i},await(0,o.b2)(s.Gh.OpenWorkingFile,void 0,{uri:n,showOptions:i})}async function k(e,t,i){let s;if(e instanceof r.Uri){if((0,l.f_)(t))throw new Error("Invalid arguments");s=e,i=t}else{if(!(0,l.f_)(t))throw new Error("Invalid arguments");const i=t;let r;if("string"==typeof e){const t=await i.findFile(e);if(null==t)throw new Error("Invalid arguments");r=t}else r=e;s=n.W.instance.git.getRevisionUri("D"===r.status?await i.getPreviousSha()??h.Ii:i.sha,r,i.repoPath)}const{annotationType:o,line:c,...u}={preserveFocus:!0,preview:!1,...i};null!=c&&0!==c&&(u.selection=new r.Range(c,0,c,0));const d=await(0,a.GR)(s,u);null!=o&&null!=d&&await n.W.instance.fileAnnotations.show(d,o,{selection:{line:c}})}async function D(e,t){let i;if(e instanceof r.Uri)i=e;else{if(null==t)throw new Error("Invalid arguments");if(i=c.YY.fromFile(e,t.repoPath,t.ref),"string"!=typeof e&&"?"===e.status)return}await(0,o.P0)(s.Gh.OpenFileOnRemote,i,{sha:t?.ref})}async function R(e,t,i){let s;if((0,l.f_)(e)?(null==e.files&&await e.ensureFullDetails(),s=e.files??[],t=e.repoPath,i=e.sha):s=e,s.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open all ${s.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}const o=(await Promise.all(s.map((e=>n.W.instance.git.getWorkingUri(t,c.YY.fromFile(e,t,i)))))).filter((e=>Boolean(e)));(0,a.$_)(o)}async function _(e,t,i,s){let o;if((0,l.f_)(e)?(null==e.files&&await e.ensureFullDetails(),o=e.files??[],t=e.repoPath,i=e.sha,s=await e.getPreviousSha()):o=e,o.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open all ${o.length} file revisions?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}(0,a.$_)(o.map((e=>n.W.instance.git.getRevisionUri("D"===e.status?s:i,e,t))))}async function T(e,t){let i,s;if("string"==typeof e)i=e,s=t.ref;else if(i=e.path,"D"===e.status){const i=c.YY.fromFile(e,t.repoPath);try{await r.workspace.fs.stat(i),s=`${t.ref}^`}catch{s=t.ref}}else s="?"===e.status?`${t.ref}^3`:t.ref;await n.W.instance.git.checkout(t.repoPath,s,{path:i})}async function F(e,t){const i=[n.W.instance.commitsView,n.W.instance.branchesView,n.W.instance.remotesView];for(const r of i){const i=r.canReveal?await r.revealCommit(e,t):await n.W.instance.repositoriesView.revealCommit(e,t);if(null!=i)return i}i[0].show({preserveFocus:!t?.focus})}async function $(e,t){if(null==t)return void await(0,o.P0)(s.Gh.ShowQuickCommit,{commit:e});let i;i=t instanceof r.Uri?t:c.YY.fromFile(t,e.repoPath,e.ref),await(0,o.P0)(s.Gh.ShowQuickCommitFile,i,{sha:e.sha})}function I(e,t){const{preserveFocus:i,...r}={...t,commit:e};return n.W.instance.commitDetailsView.show({preserveFocus:i},r)}function x(e,t){const{preserveFocus:i,...r}={...t,commit:e};return n.W.instance.graphDetailsView.show({preserveFocus:i},r)}async function O(e,t){await(0,o.P0)(s.Gh.ShowInCommitGraph,{ref:(0,u.qj)(e),preserveFocus:t?.preserveFocus})}async function E(e){await e.ensureFullDetails();const t=e.files??[];if(t.length>10){const e=await r.window.showWarningMessage(`Are you sure you want to open all ${t.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}await(0,o.P0)(s.Gh.OpenOnlyChangedFiles,{uris:t.filter((e=>"D"!==e.status)).map((e=>e.uri))})}},7445:(e,t,i)=>{i.d(t,{a:()=>o,q:()=>n});var r=i(6894),s=i(9311);function n(e,t){return(0,s.m)({command:"co-authors",state:{repo:e,contributors:t}})}async function o(e,t){const i=r.W.instance.contributorsView,s=i.canReveal?await i.revealContributor(e,t):await r.W.instance.repositoriesView.revealContributor(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}},4155:(e,t,i)=>{i.d(t,{IH:()=>n,Od:()=>c,Qs:()=>a,ay:()=>l,he:()=>o});var r=i(6894),s=i(9311);function n(e,t,i,r){return(0,s.m)({command:"remote",confirm:r?.confirm,state:{repo:e,subcommand:"add",name:t,url:i,flags:r?.fetch?["-f"]:void 0,reveal:r?.reveal}})}async function o(e,t){if("string"==typeof e){const t=r.W.instance.git.getRepository(e);if(null==t)return;e=t}await e.fetch({remote:t})}async function a(e,t){return(0,s.m)({command:"remote",state:{repo:e,subcommand:"prune",remote:t}})}async function c(e,t){return(0,s.m)({command:"remote",state:{repo:e,subcommand:"remove",remote:t}})}async function l(e,t){const i=r.W.instance.remotesView,s=null!=e?i.canReveal?await i.revealRemote(e,t):await r.W.instance.repositoriesView.revealRemote(e,t):void 0;return null==s&&i.show({preserveFocus:!t?.focus}),s}},8834:(e,t,i)=>{i.d(t,{CU:()=>d,DW:()=>h,QP:()=>n,TS:()=>a,VF:()=>l,X4:()=>c,ay:()=>m,gu:()=>p,he:()=>o,mc:()=>u});var r=i(6894),s=i(9311);function n(e,t){return(0,s.m)({command:"cherry-pick",state:{repo:e,references:t}})}function o(e,t){return(0,s.m)({command:"fetch",state:{repos:e,reference:t}})}function a(e,t){return(0,s.m)({command:"merge",state:{repo:e,reference:t}})}function c(e,t){return(0,s.m)({command:"pull",state:{repos:e,reference:t}})}function l(e,t,i){return(0,s.m)({command:"push",state:{repos:e,flags:t?["--force"]:[],reference:i}})}function h(e,t,i=!0){return(0,s.m)({command:"rebase",state:{repo:e,reference:t,flags:i?["--interactive"]:[]}})}function u(e,t,i){return(0,s.m)({command:"reset",confirm:null==i||i.includes("--hard"),state:{repo:e,reference:t,flags:i}})}function d(e,t){return(0,s.m)({command:"revert",state:{repo:e,references:t}})}function p(e,t,i){return(0,s.m)({command:"switch",state:{repos:e,reference:t},confirm:i})}async function m(e,t,i){const s=t?.canReveal?await t.revealRepository(e,i):await r.W.instance.repositoriesView.revealRepository(e,i);return null==s&&(t??r.W.instance.repositoriesView).show({preserveFocus:!i?.focus}),s}},252:(e,t,i)=>{i.d(t,{Cw:()=>o,Fw:()=>u,PQ:()=>a,Sw:()=>c,VF:()=>l,ay:()=>h,nn:()=>n});var r=i(6894),s=i(9311);function n(e,t){return(0,s.m)({command:"stash",state:{subcommand:"apply",repo:e,reference:t}})}function o(e,t){return(0,s.m)({command:"stash",state:{subcommand:"drop",repo:e,reference:t}})}function a(e,t,i){return(0,s.m)({command:"stash",state:{subcommand:"rename",repo:e,reference:t,message:i}})}function c(e,t){return(0,s.m)({command:"stash",state:{subcommand:"pop",repo:e,reference:t}})}function l(e,t,i,r=!1,n=!1,o){return(0,s.m)({command:"stash",state:{subcommand:"push",repo:e,uris:t,onlyStagedUris:o,message:i,flags:[...r?["--keep-index"]:[],...n?["--staged"]:[]]}})}async function h(e,t){const i=r.W.instance.stashesView,s=i.canReveal?await i.revealStash(e,t):await r.W.instance.repositoriesView.revealStash(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}function u(e,t){const{preserveFocus:i,...s}={...t,commit:e};return r.W.instance.commitDetailsView.show({preserveFocus:i},s)}},6713:(e,t,i)=>{i.d(t,{Od:()=>o,Ue:()=>n,ay:()=>a});var r=i(6894),s=i(9311);function n(e,t,i){return(0,s.m)({command:"tag",state:{subcommand:"create",repo:e,reference:t,name:i}})}function o(e,t){return(0,s.m)({command:"tag",state:{subcommand:"delete",repo:e,references:t}})}async function a(e,t){const i=r.W.instance.tagsView,s=i.canReveal?await i.revealTag(e,t):await r.W.instance.repositoriesView.revealTag(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}},5025:(e,t,i)=>{i.d(t,{BC:()=>u,Od:()=>c,Ue:()=>o,ay:()=>l,bA:()=>a});var r=i(6894),s=i(2800),n=i(9311);function o(e,t,i,r){return(0,n.m)({command:"worktree",state:{subcommand:"create",repo:e,uri:t,reference:i,createBranch:r?.createBranch,flags:r?.createBranch?["-b"]:void 0,reveal:r?.reveal}})}function a(e,t){return(0,n.m)({command:"worktree",state:{subcommand:"open",repo:e.repoPath,uri:e.uri,flags:h(t?.location)}})}function c(e,t){return(0,n.m)({command:"worktree",state:{subcommand:"delete",repo:e,uris:(0,s.zx)(t)}})}async function l(e,t){const i=r.W.instance.worktreesView,s=null!=e?i.canReveal?await i.revealWorktree(e,t):await r.W.instance.repositoriesView.revealWorktree(e,t):void 0;return null==s&&i.show({preserveFocus:!t?.focus}),s}function h(e){if(null!=e)switch(e){case"newWindow":return["--new-window"];case"addToWorkspace":return["--add-to-workspace"];default:return[]}}function u(e){if(null!=e)return e.includes("--new-window")?"newWindow":e.includes("--add-to-workspace")?"addToWorkspace":"currentWindow"}},6592:(e,t,i)=>{i.d(t,{Nk:()=>WorktreeDeleteError,P6:()=>WorktreeCreateError,bk:()=>r,ef:()=>StashApplyError,g1:()=>s,hK:()=>n,l0:()=>GitSearchError,s8:()=>StashPushError,xe:()=>o});class GitSearchError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,GitSearchError)}}var r=(e=>(e[e.WorkingChanges=1]="WorkingChanges",e))(r||{});class StashApplyError extends Error{static is(e,t){return e instanceof StashApplyError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;null==e?i="Unable to apply stash":"string"==typeof e?(i=e,r=void 0):(r=e,i="Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"),super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,StashApplyError)}}var s=(e=>(e[e.ConflictingStagedAndUnstagedLines=1]="ConflictingStagedAndUnstagedLines",e))(s||{});class StashPushError extends Error{static is(e,t){return e instanceof StashPushError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to stash";else if("string"==typeof e)i=e,r=void 0;else if(r=e,1===r)i="Stash was created, but the working tree cannot be updated because at least one file has staged and unstaged changes on the same line(s).\n\nDo you want to try again by stashing both your staged and unstaged changes?";else i="Unable to stash";super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,StashApplyError)}}var n=(e=>(e[e.AlreadyCheckedOut=1]="AlreadyCheckedOut",e[e.AlreadyExists=2]="AlreadyExists",e))(n||{});class WorktreeCreateError extends Error{static is(e,t){return e instanceof WorktreeCreateError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to create worktree";else if("string"==typeof e)i=e,r=void 0;else switch(r=e,r){case 1:i="Unable to create worktree because it is already checked out";break;case 2:i="Unable to create worktree because it already exists"}super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,WorktreeCreateError)}}var o=(e=>(e[e.HasChanges=1]="HasChanges",e[e.MainWorkingTree=2]="MainWorkingTree",e))(o||{});class WorktreeDeleteError extends Error{static is(e,t){return e instanceof WorktreeDeleteError&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to delete worktree";else if("string"==typeof e)i=e,r=void 0;else switch(r=e,r){case 1:i="Unable to delete worktree because there are uncommitted changes";break;case 2:i="Unable to delete worktree because it is a main working tree"}super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,WorktreeDeleteError)}}},9338:(e,t,i)=>{i.d(t,{i:()=>CommitFormatter});var r=i(8388),s=i(7139),n=i(1848),o=i(2138),a=i(4893),c=i(6199),l=i(1676),h=i(8918),u=i(5255),d=i(6894),p=i(3148),m=i(718),g=i(5148),f=i(3105),w=i(7469),v=i(3620),y=i(6450),b=i(439),C=i(8452),A=i(4092),S=i(4321),P=i(3050),k=i(5485);class CommitFormatter extends k.M{reset(e,t){super.reset(e,t),null==this._options.outputFormat&&(this._options.outputFormat="plaintext")}get _authorDate(){return this._item.author.formatDate(this._options.dateFormat)}get _authorDateAgo(){return this._item.author.fromNow()}get _authorDateAgoShort(){return this._item.author.fromNow(!0)}get _committerDate(){return this._item.committer.formatDate(this._options.dateFormat)}get _committerDateAgo(){return this._item.committer.fromNow()}get _committerDateAgoShort(){return this._item.committer.fromNow(!0)}get _date(){return this._item.formatDate(this._options.dateFormat)}get _dateAgo(){return this._item.formatDateFromNow()}get _dateAgoShort(){return this._item.formatDateFromNow(!0)}get _pullRequestDate(){const{pullRequest:e}=this._options;return null!=e&&A.i7.is(e)?e.formatDate(this._options.dateFormat)??"":""}get _pullRequestDateAgo(){const{pullRequest:e}=this._options;return null!=e&&A.i7.is(e)?e.formatDateFromNow()??"":""}get _pullRequestDateOrAgo(){return"absolute"===(null!=this._options.dateStyle?this._options.dateStyle:g.D.get("defaultDateStyle"))?this._pullRequestDate:this._pullRequestDateAgo}get ago(){return this._padOrTruncate(this._dateAgo,this._options.tokenOptions.ago)}get agoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:g.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._date:this._dateAgo,this._options.tokenOptions.agoOrDate)}get agoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:g.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._date:this._dateAgoShort,this._options.tokenOptions.agoOrDateShort)}get author(){let{name:e,email:t}=this._item.author;const i=this._padOrTruncate(e,this._options.tokenOptions.author);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,v.se)(e),t=(0,v.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get authorAgo(){return this._padOrTruncate(this._authorDateAgo,this._options.tokenOptions.authorAgo)}get authorAgoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:g.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._authorDate:this._authorDateAgo,this._options.tokenOptions.authorAgoOrDate)}get authorAgoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:g.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._authorDate:this._authorDateAgoShort,this._options.tokenOptions.authorAgoOrDateShort)}get authorDate(){return this._padOrTruncate(this._authorDate,this._options.tokenOptions.authorDate)}get authorNotYou(){let{name:e,email:t}=this._item.author;if("You"===e)return this._padOrTruncate("",this._options.tokenOptions.authorNotYou);const i=this._padOrTruncate(e,this._options.tokenOptions.authorNotYou);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,v.se)(e),t=(0,v.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get avatar(){const{outputFormat:e}=this._options;if("plaintext"===e||!g.D.get("hovers.avatars"))return this._padOrTruncate("",this._options.tokenOptions.avatar);let{name:t}=this._item.author;const i=this._options.presence;if(null!=i){let r=`${t} ${"You"===t?"are":"is"} ${"dnd"===i.status?"in ":""}${i.statusText.toLocaleLowerCase()}`;"html"===e&&(r=(0,v.se)(r));return this._getAvatar(e,r,this._options.avatarSize).then((t=>this._padOrTruncate(`${t}${this._getPresence(e,i,r)}`,this._options.tokenOptions.avatar)))}return"html"===e&&(t=(0,v.se)(t)),this._getAvatar(e,t,this._options.avatarSize)}async _getAvatar(e,t,i){i=i??g.D.get("hovers.avatarSize");const r=this._item.getAvatarUri({defaultStyle:g.D.get("defaultGravatarsStyle"),size:i}),s=(await r).toString(!0);return this._padOrTruncate("html"===e?`<img src="${s}" alt="title)" title="${t}" width="${i}" height="${i}"${this._options.htmlFormat?.classes?.avatar?` class="${this._options.htmlFormat.classes.avatar}"`:""} />`:`![${t}](${s}|width=${i},height=${i} "${t}")`,this._options.tokenOptions.avatar)}_getPresence(e,t,i){return"html"===e?`<img src="${(0,r.TU)(t.status)}" alt="${i}" title="${i}"${this._options.htmlFormat?.classes?.avatarPresence?` class="${this._options.htmlFormat.classes.avatarPresence}"`:""}/>`:`![${i}](${(0,r.TU)(t.status)} "${i}")`}get changes(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}get commands(){if("plaintext"===this._options.outputFormat||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.commands);let e;if(this._item.isUncommitted){const{previousLineComparisonUris:t}=this._options;return null!=t?.previous?(e=`[\`${this._padOrTruncate((0,S.zL)((0,S.rD)(t.current.sha)?t.current.sha:b.CL),this._options.tokenOptions.commands)}\`](${l.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e+=` &nbsp;[$(chevron-left)$(compare-changes)](${n.V.getMarkdownCommandArgs({lhs:{sha:t.previous.sha??"",uri:t.previous.documentUri()},rhs:{sha:t.current.sha??"",uri:t.current.documentUri()},repoPath:this._item.repoPath,line:this._options.editor?.line})} "Open Changes with Previous Revision")`,e+=` &nbsp;[$(versions)](${a.D.getMarkdownCommandArgs(d.W.instance.git.getRevisionUri(t.previous),"blame",this._options.editor?.line)} "Open Blame Prior to this Change")`):e=`[\`${this._padOrTruncate((0,S.zL)(this._item.isUncommittedStaged?b.pw:b.CL),this._options.tokenOptions.commands)}\`](${l.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e}const t=" &nbsp;&nbsp;|&nbsp;&nbsp; ";if(e=`---\n\n[\`$(git-commit) ${this.id}\`](${l.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e+=` &nbsp;[$(chevron-left)$(compare-changes)](${n.V.getMarkdownCommandArgs(this._item,this._options.editor?.line)} "Open Changes with Previous Revision")`,null!=this._item.file&&null!=this._item.unresolvedPreviousSha){const t=d.W.instance.git.getRevisionUri(this._item.unresolvedPreviousSha,this._item.file.originalPath??this._item.file?.path,this._item.repoPath);e+=` &nbsp;[$(versions)](${a.D.getMarkdownCommandArgs(t,"blame",this._options.editor?.line)} "Open Blame Prior to this Change")`}e+=` &nbsp;[$(search)](${s.mY.getMarkdownCommandArgsCore(u.Gh.RevealCommitInView,{repoPath:this._item.repoPath,sha:this._item.sha,revealInView:!0})} "Reveal in Side Bar")`,(0,m.L)()&&(e+=` &nbsp;[$(gitlens-graph)](${s.mY.getMarkdownCommandArgsCore(u.Gh.ShowInCommitGraph,{ref:(0,S.qj)(this._item,{excludeMessage:!0})})} "Open in Commit Graph")`);const{pullRequest:i,remotes:r}=this._options;if(r?.length){const t=P.ss.getHighlanderProviders(r);e+=` &nbsp;[$(globe)](${o._.getMarkdownCommandArgs(this._item.sha)} "Open Commit on ${t?.length?t[0].name:"Remote"}")`}if(null!=i)A.i7.is(i)?e+=`${t}[$(git-pull-request) PR #${i.id}](${D("openPullRequest",{repoPath:this._item.repoPath,provider:{id:i.provider.id,name:i.provider.name,domain:i.provider.domain},pullRequest:{id:i.id,url:i.url}})} "Open Pull Request \\#${i.id}${1==d.W.instance.actionRunners.count("openPullRequest")?` on ${i.provider.name}`:"..."}\n${u.NE.Dash.repeat(2)}\n${(0,v.ry)(i.title).replace(/"/g,'\\"')}\n${i.state}, ${i.formatDateFromNow()}")`:(0,w.tI)(i)&&(e+=`${t}[$(git-pull-request) PR $(loading~spin)](command:${u.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`);else if(null!=r){const[i]=r;i?.hasRichIntegration()&&!i.provider.maybeConnected&&g.D.get("integrations.enabled")&&(e+=`${t}[$(plug) Connect to ${i?.provider.name}${u.NE.Ellipsis}](${c.t.getMarkdownCommandArgs(i)} "Connect to ${i.provider.name} to enable the display of the Pull Request (if any) that introduced this commit")`)}if(d.W.instance.actionRunners.count("hover.commands")>0){const{name:i,email:r}=this._item.author;e+=`${t}[$(organization) Team${u.NE.SpaceThinnest}${u.NE.Ellipsis}](${D("hover.commands",{repoPath:this._item.repoPath,commit:{sha:this._item.sha,author:{name:i,email:r,presence:this._options.presence}},file:null!=this._options.editor?{uri:this._options.editor?.uri.toString(),line:this._options.editor?.line}:void 0})} "Show Team Actions")`}const p=this._item.getGitUri();return e+=`${t}[$(ellipsis)](${h.M.getMarkdownCommandArgs(null!=p?{revisionUri:d.W.instance.git.getRevisionUri(p).toString(!0)}:{commit:this._item})} "Show More Actions")`,this._padOrTruncate(e,this._options.tokenOptions.commands)}get committerAgo(){return this._padOrTruncate(this._committerDateAgo,this._options.tokenOptions.committerAgo)}get committerAgoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:g.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._committerDate:this._committerDateAgo,this._options.tokenOptions.committerAgoOrDate)}get committerAgoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:g.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._committerDate:this._committerDateAgoShort,this._options.tokenOptions.committerAgoOrDateShort)}get committerDate(){return this._padOrTruncate(this._committerDate,this._options.tokenOptions.committerDate)}get date(){return this._padOrTruncate(this._date,this._options.tokenOptions.date)}get email(){const{email:e}=this._item.author;return this._padOrTruncate(e??"",this._options.tokenOptions.email)}get footnotes(){const{outputFormat:e}=this._options;return this._padOrTruncate(null==this._options.footnotes||0===this._options.footnotes.size?"":(0,f.v_)((0,f.UI)(this._options.footnotes,(([t,i])=>"plaintext"===e?`${(0,v.sC)(t)} ${i}`:i)),"html"===e?"<br \\>":"markdown"===e?"\\\n":"\n"),this._options.tokenOptions.footnotes)}get id(){const e=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);return"plaintext"!==this._options.outputFormat&&this._options.unpublished?`<span style="color:#35b15e;"${this._options.htmlFormat?.classes?.id?` class="${this._options.htmlFormat.classes.id}"`:""}>${e} (unpublished)</span>`:e}get link(){let e;switch(this._options.outputFormat){case"markdown":e=`[\`$(git-commit) ${this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id)}\`](${l.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`;break;case"html":{const t=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);e=`<a href="${l.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)}" title="Open Details"${this._options.htmlFormat?.classes?.link?` class="${this._options.htmlFormat.classes.link}"`:""}><span class="codicon codicon-git-commit"></span>${t}</a>`;break}default:return this.id}return this._padOrTruncate(e,this._options.tokenOptions.link)}get message(){const{outputFormat:e}=this._options;if(this._item.isUncommitted){const t=this._item.file?.hasConflicts??!1,i=this._item.isUncommittedStaged||(this._options.previousLineComparisonUris?.current?.isUncommittedStaged??!1);let r=(t?"Merge":i?"Staged":"Uncommitted")+" changes";switch(e){case"html":r=`<span ${this._options.htmlFormat?.classes?.message?`class="${this._options.htmlFormat.classes.message}"`:""}>${r}</span>`;break;case"markdown":r=`\n> ${r}`}return this._padOrTruncate(r,this._options.tokenOptions.message)}let t=(this._options.messageTruncateAtNewLine?this._item.summary:this._item.message??this._item.summary).trim().replace(/\r?\n/g,"\n");switch(t=(0,p.X)(t),t=this._padOrTruncate(t,this._options.tokenOptions.message),"plaintext"!==e&&(t=(0,v.se)(t)),"markdown"===e&&(t=(0,v.ry)(t,{quoted:!0})),this._options.messageAutolinks&&(t=d.W.instance.autolinks.linkify(t,e,this._options.remotes,this._options.enrichedAutolinks,null==this._options.pullRequest||(0,w.tI)(this._options.pullRequest)?void 0:new Set([this._options.pullRequest.id]),this._options.footnotes)),null!=this._options.messageIndent&&"plaintext"===e&&(t=t.replace(/^/gm,u.NE.Space.repeat(this._options.messageIndent))),e){case"html":return`<span ${this._options.htmlFormat?.classes?.id?`class="${this._options.htmlFormat.classes.id}"`:""}>${t}</span>`;case"markdown":return`\n> ${t}`;default:return t}}get pullRequest(){const{pullRequest:e}=this._options;if(null==e||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.pullRequest);let t;if(A.i7.is(e))if("markdown"===this._options.outputFormat){if(t=`PR [**#${e.id}**](${D("openPullRequest",{repoPath:this._item.repoPath,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain},pullRequest:{id:e.id,url:e.url}})} "Open Pull Request \\#${e.id}${1==d.W.instance.actionRunners.count("openPullRequest")?` on ${e.provider.name}`:"..."}\n${u.NE.Dash.repeat(2)}\n${(0,v.ry)(e.title).replace(/"/g,'\\"')}\n${e.state}, ${e.formatDateFromNow()}")`,null!=this._options.footnotes){const t=(0,v.ry)(e.title).replace(/"/g,'\\"').trim(),i=this._options.footnotes.size+1;this._options.footnotes.set(i,`${(0,C.sy)(e)} [**${t}**](${e.url} "Open Pull Request \\#${e.id} on ${e.provider.name}")\\\n${u.NE.Space.repeat(4)} #${e.id} ${e.state} ${e.formatDateFromNow()}`)}}else if(null!=this._options.footnotes){const i=this._options.footnotes.size+1;this._options.footnotes.set(i,`PR #${e.id}: ${e.title}  ${u.NE.Dot}  ${e.state}, ${e.formatDateFromNow()}`),t=`PR #${e.id}${(0,v.sC)(i)}`}else t=`PR #${e.id}`;else{if(!(0,w.tI)(e))return this._padOrTruncate("",this._options.tokenOptions.pullRequest);t="markdown"===this._options.outputFormat?`[PR $(loading~spin)](command:${u.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`:this._options?.pullRequestPendingMessage??""}return this._padOrTruncate(t,this._options.tokenOptions.pullRequest)}get pullRequestAgo(){return this._padOrTruncate(this._pullRequestDateAgo,this._options.tokenOptions.pullRequestAgo)}get pullRequestAgoOrDate(){return this._padOrTruncate(this._pullRequestDateOrAgo,this._options.tokenOptions.pullRequestAgoOrDate)}get pullRequestDate(){return this._padOrTruncate(this._pullRequestDate,this._options.tokenOptions.pullRequestDate)}get pullRequestState(){const{pullRequest:e}=this._options;return this._padOrTruncate(null!=e&&A.i7.is(e)?e.state??"":"",this._options.tokenOptions.pullRequestState)}get sha(){return this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.sha)}get stashName(){return this._padOrTruncate(this._item.stashName??"",this._options.tokenOptions.stashName)}get stashNumber(){return this._padOrTruncate(this._item.number??"",this._options.tokenOptions.stashNumber)}get stashOnRef(){return this._padOrTruncate(this._item.stashOnRef??"",this._options.tokenOptions.stashOnRef)}get tips(){let e=this._options.getBranchAndTagTips?.(this._item.sha,{icons:"markdown"===this._options.outputFormat});if(null!=e&&"plaintext"!==this._options.outputFormat){const t=e.split(", ");e=t.map((e=>`<span style="color:#ffffff;background-color:#1d76db;"${this._options.htmlFormat?.classes?.tips?` class="${this._options.htmlFormat.classes.tips}"`:""}>&nbsp;&nbsp;${e}&nbsp;&nbsp;</span>`)).join(u.NE.Space.repeat(3))}return this._padOrTruncate(e??"",this._options.tokenOptions.tips)}static fromTemplate(e,t,i){if(null!=i&&"string"!=typeof i||(i={dateFormat:i}),CommitFormatter.has(e,"footnotes")&&null==i.footnotes&&(i.footnotes=new Map),CommitFormatter.has(e,"avatar")&&i?.outputFormat)throw new Error("Invalid template token 'avatar' used in non-async call");return super.fromTemplateCore(this,e,t,i)}static fromTemplateAsync(e,t,i){return CommitFormatter.has(e,"footnotes")&&(null!=i&&"string"!=typeof i||(i={dateFormat:i}),null==i.footnotes&&(i.footnotes=new Map)),super.fromTemplateCoreAsync(this,e,t,i)}static has(e,...t){return super.has(e,...t)}}function D(e,t){return s.mY.getMarkdownCommandArgsCore(`${u.Gh.ActionPrefix}${e}`,{...t,type:e})}},5485:(e,t,i)=>{i.d(t,{M:()=>Formatter});var r=i(3620);const s=new Map,n=/ /g;class Formatter{_item;_options;constructor(e,t){this.reset(e,t)}reset(e,t){this._item=e,this.collapsableWhitespace=0,null==t&&null!=this._options||(null==t&&(t={}),null==t.dateFormat&&(t.dateFormat="MMMM Do, YYYY h:mma"),null==t.tokenOptions&&(t.tokenOptions={}),this._options=t)}collapsableWhitespace=0;_padOrTruncate(e,t){if(null==e||0===e.length)return e;null==t&&(t={collapseWhitespace:!1,padDirection:"left",prefix:void 0,suffix:void 0,truncateTo:void 0});let i=t.truncateTo;if(null==i)this.collapsableWhitespace=0;else{i+=this.collapsableWhitespace,this.collapsableWhitespace=0;const s=(0,r.dz)(e),n=i-s;n>0?(t.collapseWhitespace&&(this.collapsableWhitespace=n),"left"===t.padDirection?e=(0,r.Q_)(e,i,void 0,s):(t.collapseWhitespace&&(i-=n),e=(0,r.eh)(e,i,void 0,s))):n<0&&(e=(0,r.$G)(e,i,void 0,s))}return(t.prefix||t.suffix)&&(e=`${t.prefix??""}${e}${t.suffix??""}`),e}static _formatter=void 0;static fromTemplateCore(e,t,i,s){if(t=t.replace(n," "),e instanceof Formatter)return(0,r.sX)(t,e);let o;if(o=null==s||"string"==typeof s?{dateFormat:s}:s,null==o.tokenOptions){const e=(0,r.Gg)(t).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));o.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,o):this._formatter.reset(i,o),(0,r.sX)(t,this._formatter)}static fromTemplateCoreAsync(e,t,i,s){if(t=t.replace(n," "),e instanceof Formatter)return(0,r.Qu)(t,e);let o;if(o=null==s||"string"==typeof s?{dateFormat:s}:s,null==o.tokenOptions){const e=(0,r.Gg)(t).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));o.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,o):this._formatter.reset(i,o),(0,r.Qu)(t,this._formatter)}static has(e,...t){const i=1===t.length?t[0]:`(${t.join("|")})`;let r=s.get(i);return null==r&&(r=new RegExp(`\\b${i}\\b`),s.set(i,r)),r.test(e)}}},6373:(e,t,i)=>{i.d(t,{o:()=>StatusFileFormatter});var r=i(5255),s=i(3700),n=i(7881),o=i(5485);class StatusFileFormatter extends o.M{get directory(){const e=(0,n.OC)(this._item,!1,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.directory)}get file(){const e=(0,s.EZ)(this._item.path);return this._padOrTruncate(e,this._options.tokenOptions.file)}get filePath(){const e=(0,n.PM)(this._item,{relativeTo:this._options.relativePath,truncateTo:this._options.tokenOptions.filePath?.truncateTo});return this._padOrTruncate(e,this._options.tokenOptions.filePath)}get originalPath(){const e=(0,n.Gv)(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.originalPath)}get path(){const e=(0,n.W5)(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.path)}get status(){const e=(0,n.K9)(this._item.status);return this._padOrTruncate(e,this._options.tokenOptions.status)}get working(){let e="";return e=null!=this._item.workingTreeStatus&&null!=this._item.indexStatus?`${r.NE.Pencil}${r.NE.Space}${r.NE.SpaceThinnest}${r.NE.Check}`:null!=this._item.workingTreeStatus?`${r.NE.Pencil}${r.NE.SpaceThin}${r.NE.SpaceThinnest}${r.NE.EnDash}${r.NE.Space}`:null!=this._item.indexStatus?`${r.NE.Space}${r.NE.EnDash}${r.NE.Space.repeat(2)}${r.NE.Check}`:"",this._padOrTruncate(e,this._options.tokenOptions.working)}get changes(){return this._padOrTruncate(n.K8.is(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate(n.K8.is(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate(n.K8.is(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}static fromTemplate(e,t,i){return super.fromTemplateCore(this,e,t,i)}}},7462:(e,t,i)=>{i.d(t,{Wj:()=>C,YY:()=>b,uj:()=>S,uy:()=>A});var r=i(9496),s=i(185),n=i(4398),o=i(5255),a=i(6894),c=i(4298),l=i(1219),h=i(4488),u=i(1774),d=i(3700),p=i(2509),m=i(439),g=i(4321),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&f(t,i,n),n};const y=class _GitUri extends r.Uri{repoPath;sha;constructor(e,t){if(null==e)return void super({scheme:"unknown"});if(e.scheme===o.sN.GitLens){let i=e.path;const r=S(e.authority);null==r.uncPath||i.startsWith(r.uncPath)||(i=`${r.uncPath}${e.path}`),super({scheme:e.scheme,authority:e.authority,path:i,query:e.query,fragment:e.fragment}),this.repoPath=r.repoPath;let s=r.ref;return null!=t&&"string"!=typeof t&&(s=t.sha),void(!(0,g.rD)(s)&&(0,g.l3)(s)||(this.sha=s))}if((0,p.pt)(e)){super(e);const[,i,r]=e.path.split("/",3);this.repoPath=e.with({path:`/${i}/${r}`}).toString();const n=function(e){const[t,i]=e.authority.split("+");let r;if(i)try{r=JSON.parse((0,s.d)(i))}catch{}return{scheme:t,metadata:r}}(e);let o=n.metadata?.ref?.id;return null!=t&&"string"!=typeof t&&(o=t.sha),void(!o||!(0,g.rD)(o)&&(0,g.l3)(o)||(this.sha=o))}if(void 0===t)return void super(e);if("string"==typeof t)return super(e),void(this.repoPath=t);let i,r=e.authority,n=(0,d.AH)(a.W.instance.git.getAbsoluteUri(t.fileName??e.fsPath,t.repoPath).fsPath);if(47===n.charCodeAt(0)&&47===n.charCodeAt(1)){const e=n.indexOf("/",2);-1===e?(r=n.substring(2),n="/"):(r=n.substring(2,e),n=n.substring(e)||"/")}switch(e.scheme){case"https":case"http":case"file":i=n?47!==n.charCodeAt(0)?`/${n}`:n:"/";break;default:i=47!==n.charCodeAt(0)?`/${n}`:n}super({scheme:e.scheme,authority:r,path:i,query:e.query,fragment:e.fragment}),this.repoPath=t.repoPath,!(0,g.rD)(t.sha)&&(0,g.l3)(t.sha)||(this.sha=t.sha)}get directory(){return(0,d.Fd)(this.relativePath)}get fileName(){return(0,d.EZ)(this.relativePath)}get isUncommitted(){return(0,g.l3)(this.sha)}get isUncommittedStaged(){return(0,g.rD)(this.sha)}get relativePath(){return(0,d.uo)((0,d.M)(this.fsPath),this.repoPath)[0]}get shortSha(){return(0,g.zL)(this.sha)}documentUri(){return r.Uri.from({scheme:this.scheme,authority:this.authority,path:this.path,query:this.query,fragment:this.fragment})}equals(e){return!!c.n.equals(this,e)&&this.sha===(A(e)?e.sha:void 0)}getFormattedFileName(e){return(0,u.d)(this.fsPath,{...e,fileOnly:!0})}toFileUri(){return a.W.instance.git.getAbsoluteUri(this.fsPath,this.repoPath)}static fromFile(e,t,i,r=!1){const s=a.W.instance.git.getAbsoluteUri("string"==typeof e?e:r&&e.originalPath||e.path,t);return new _GitUri(s,i?{repoPath:t,sha:"string"!=typeof e&&"?"===e.status?`${i}^3`:i}:t)}static fromRepoPath(e,t){return new _GitUri(a.W.instance.git.getAbsoluteUri(e,e),t?{repoPath:e,sha:t}:e)}static fromRevisionUri(e){return new _GitUri(e)}static async fromUri(e){if(A(e))return e;if(!a.W.instance.git.isTrackable(e))return new _GitUri(e);if(e.scheme===o.sN.GitLens)return new _GitUri(e);if(e.scheme===o.sN.Git){const t=(0,n.h)(e);if(t?.path){const i=await a.W.instance.git.getOrOpenRepository(r.Uri.file(t.path));if(null==i)throw new Error(`Unable to find repository for uri=${r.Uri.file(t.path).toString(!0)}`);let s;switch(t.ref){case"":case"~":s=m.pw;break;case null:s=void 0;break;default:s=t.ref}const n={fileName:t.path,repoPath:i.path,sha:s};return new _GitUri(e,n)}}if(e.scheme===o.sN.PRs){let t;try{t=JSON.parse(e.query)}catch{}if(t?.fileName){const i=await a.W.instance.git.getOrOpenRepository(e);if(null==i)throw new Error(`Unable to find repository for uri=${r.Uri.file(t.fileName).toString(!0)}`);const s={fileName:t.fileName,repoPath:i.path,sha:t.isBase?t.baseCommit:t.headCommit};return new _GitUri(e,s)}}const t=await a.W.instance.git.getOrOpenRepository(e);return new _GitUri(e,t?.path)}};v([(0,h.H)()],y.prototype,"directory",1),v([(0,h.H)()],y.prototype,"fileName",1),v([(0,h.H)()],y.prototype,"isUncommitted",1),v([(0,h.H)()],y.prototype,"isUncommittedStaged",1),v([(0,h.H)()],y.prototype,"relativePath",1),v([(0,h.H)()],y.prototype,"shortSha",1),v([(0,h.H)()],y.prototype,"documentUri",1),v([(0,h.H)()],y.prototype,"toFileUri",1),v([(0,l.fF)({exit:!0})],y,"fromUri",1);let b=y;const C=Object.freeze(new b);function A(e){return e instanceof b}function S(e){return JSON.parse((0,s.d)(e))}},5367:(e,t,i)=>{i.d(t,{$q:()=>b,BF:()=>S,Iq:()=>v,Lo:()=>A,RJ:()=>y,S3:()=>C,Vx:()=>w,XI:()=>GitBranch,YF:()=>k,eK:()=>D,uz:()=>P});var r=i(5148),s=i(7512),n=i(1219),o=i(4488),a=i(4336),c=i(5116),l=i(3620),h=i(4321),u=i(827),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,m=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n),n};const g=/\s/,f=/^(?=.*\bHEAD\b)?(?=.*\bdetached\b).*$/;function w(e,t,i){return`${e}|${t?"remotes/":"heads/"}${i}`}class GitBranch{constructor(e,t,i,r,s,n,o,a,c=0,l=0,h=!1,u=!1){this.container=e,this.repoPath=t,this.name=i,this.remote=r,this.current=s,this.date=n,this.sha=o,this.rebasing=u,this.id=w(t,r,i),this.detached=h||!!this.current&&P(i),this.detached&&(this.name=v(this.sha)),this.upstream=null==a?.name||0===a.name.length?void 0:a,this.state={ahead:c,behind:l}}refType="branch";detached;id;upstream;state;toString(){return`${(0,a.q4)(this)}(${this.id})`}get formattedDate(){return"absolute"===this.container.BranchDateFormatting.dateStyle?this.formatDate(this.container.BranchDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.detached?this.sha:this.name}formatDate(e){return null!=this.date?(0,s.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,s.Zh)(this.date):""}async getAssociatedPullRequest(e){const t=await this.getRemote();return t?.hasRichIntegration()?t.provider.getPullRequestForBranch(this.getTrackingWithoutRemote()??this.getNameWithoutRemote(),e):void 0}getBasename(){const e=this.getNameWithoutRemote(),t=e.lastIndexOf("/");return-1!==t?e.substring(t+1):e}getNameWithoutRemote(){return this.remote?this.name.substring(y(this.name)+1):this.name}getTrackingWithoutRemote(){return(0,h.Gn)(this)}async getRemote(){const e=this.getRemoteName();if(null==e)return;const t=await this.container.git.getRemotes(this.repoPath);return t.length?t.find((t=>t.name===e)):void 0}getRemoteName(){return this.remote?A(this.name):null!=this.upstream?A(this.upstream.name):void 0}async getStatus(){if(this.remote)return"remote";if(null!=this.upstream)return this.upstream.missing?"missingUpstream":this.state.ahead&&this.state.behind?"diverged":this.state.ahead?"ahead":this.state.behind?"behind":"upToDate";return(await this.container.git.getRemotes(this.repoPath)).length?"unpublished":"local"}getTrackingStatus(e){return(0,u.JP)(this.upstream,this.state,e)}get starred(){const e=this.container.storage.getWorkspace("starred:branches");return void 0!==e&&!0===e[this.id]}star(){return this.container.git.getRepository(this.repoPath)?.star(this)}unstar(){return this.container.git.getRepository(this.repoPath)?.unstar(this)}}function v(e){return`(${(0,h.zL)(e)}...)`}function y(e){return e.startsWith("remotes/")?e.indexOf("/",8):e.indexOf("/")}function b(e){if(e.remote){const t=y(e.name);return-1===t?[e.name,void 0]:[e.name.substring(t+1),e.name.substring(0,t)]}if(null!=e.upstream?.name){const t=y(e.upstream.name);return-1===t?[e.name,void 0]:[e.name,e.upstream.name.substring(0,t)]}return[e.name,void 0]}function C(e){return e.substring(y(e)+1)}function A(e){return e.substring(0,y(e))}function S(e){return e instanceof GitBranch}function P(e){return g.test(e)||f.test(e)}function k(e,t){switch((t={current:!0,orderBy:r.D.get("sortBranchesBy"),...t}).orderBy){case"date:asc":return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==e.date?-1:e.date.getTime())-(null==i.date?-1:i.date.getTime())));case"name:asc":return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,l.dm)(e.name,i.name)));case"name:desc":return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,l.dm)(i.name,e.name)));default:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==i.date?-1:i.date.getTime())-(null==e.date?-1:e.date.getTime())))}}async function D(e,t,i){let r;t.startsWith("remotes/")?(r=t,t=t.substring(8)):r=`remotes/${t}`,i??=new c.X((t=>e.getBranches(null!=t?{paging:t}:void 0)));for await(const e of i.values())if(!e.remote&&null!=e.upstream?.name&&(e.upstream.name===t||e.upstream.name===r))return e}m([(0,o.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitBranch.prototype,"formatDate",1),m([(0,n.fF)()],GitBranch.prototype,"getAssociatedPullRequest",1),m([(0,o.H)()],GitBranch.prototype,"getBasename",1),m([(0,o.H)()],GitBranch.prototype,"getNameWithoutRemote",1),m([(0,o.H)()],GitBranch.prototype,"getTrackingWithoutRemote",1),m([(0,o.H)()],GitBranch.prototype,"getRemote",1),m([(0,o.H)()],GitBranch.prototype,"getRemoteName",1),m([(0,o.H)()],GitBranch.prototype,"getStatus",1)},6450:(e,t,i)=>{i.d(t,{By:()=>S,G2:()=>A,_j:()=>GitCommitIdentity,aM:()=>b,f_:()=>C,yp:()=>P});var r=i(9496),s=i(8388),n=i(5255),o=i(7512),a=i(5432),c=i(4488),l=i(4336),h=i(3620),u=i(7462),d=i(439),p=i(7881),m=i(4321),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor,w=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&g(t,i,n),n};const v=/stash@{(\d+)}/,y=class _GitCommit{constructor(e,t,i,r,s,o,a,c,l,h,u,d,g,f){this.container=e,this.repoPath=t,this.sha=i,this.author=r,this.committer=s,this.parents=a,this.ref=i,this.shortSha=i.substring(0,this.container.CommitShaFormatting.length),this.tips=d,g?(this.refType="stash",this.stashName=g||void 0,this.stashOnRef=f||void 0,this.number=v.exec(g)?.[1]):this.refType="revision",null!=c?(this._message=c,this._summary=o!==c?`${o} ${n.NE.Ellipsis}`:o):(0,m.l3)(i,!0)?(this._summary=o,this._message="Uncommitted Changes"):this._summary=`${o} ${n.NE.Ellipsis}`,null!=h&&(this._stats=h),null!=l&&(Array.isArray(l)?this._files=l:l instanceof p.K8?this._file=l:(null!=l.file&&(this._file=l.file),null!=l.files&&(this._files=l.files)),this._recomputeStats=!0),null!=u?Array.isArray(u)?this.lines=u:this.lines=[u]:this.lines=[]}_stashUntrackedFilesLoaded=!1;_recomputeStats=!1;lines;ref;refType;shortSha;stashName;number;stashOnRef;tips;toString(){return`${(0,l.q4)(this)}(${this.repoPath}|${this.shortSha})`}get date(){return"committed"===this.container.CommitDateFormatting.dateSource?this.committer.date:this.author.date}_file;get file(){return this._file}_files;get files(){return this._files}get formattedDate(){return"absolute"===this.container.CommitDateFormatting.dateStyle?this.formatDate(this.container.CommitDateFormatting.dateFormat):this.formatDateFromNow()}get isUncommitted(){return(0,m.l3)(this.sha)}get isUncommittedStaged(){return(0,m.rD)(this.sha)}_message;get message(){return this._message}get name(){return this.stashName?this.stashName:this.shortSha}_stats;get stats(){return this._recomputeStats&&this.computeFileStats(),this._stats}_summary;get summary(){return this._summary}_resolvedPreviousSha;get unresolvedPreviousSha(){const e=this._resolvedPreviousSha??(null!=this.file?this.file.previousSha:this.parents[0])??`${this.sha}^`;return(0,m.j$)(e)?"HEAD":e}_etagFileSystem;hasFullDetails(){return null!=this.message&&null!=this.files&&(this.isUncommitted&&this._etagFileSystem===this.container.git.getRepository(this.repoPath)?.etagFileSystem||0!==this.parents.length)&&("stash"!==this.refType||this._stashUntrackedFilesLoaded)}async ensureFullDetails(){if(this.hasFullDetails())return;if(this.isUncommitted){const e=this.container.git.getRepository(this.repoPath);if(this._etagFileSystem=e?.etagFileSystem,null!=this._etagFileSystem){const t=await this.container.git.getStatusForRepo(this.repoPath);null!=t&&(this._files=t.files.flatMap((e=>e.getPseudoFileChanges()))),this._etagFileSystem=e?.etagFileSystem}return void(null==this._files&&(this._files=null!=this.file?[this.file]:[]))}const[e,t]=await Promise.allSettled(["stash"!==this.refType?this.container.git.getCommit(this.repoPath,this.sha):void 0,"stash"!==this.refType||this._stashUntrackedFilesLoaded?void 0:this.container.git.getCommit(this.repoPath,`${this.stashName}^3`),this.getPreviousSha()]);let i;if("fulfilled"===e.status&&null!=e.value&&(i=e.value,this.parents.push(...i.parents??[]),this._summary=i.summary,this._message=i.message,this._files=i.files,null!=this._file)){const e=this._files.find((e=>e.path===this._file.path));null!=e&&(this._file=new p.K8(e.repoPath,e.path,e.status,e.originalPath??this._file.originalPath,e.previousSha??this._file.previousSha,e.stats??this._file.stats))}if("fulfilled"===t.status&&null!=t.value&&(this._stashUntrackedFilesLoaded=!0,i=t.value,null!=i?.files&&0!==i.files.length)){const e=i.files.map((e=>new p.K8(this.repoPath,e.path,p.Bh.Untracked,e.originalPath)));null==this._files?this._files=e:this._files.push(...e)}this._recomputeStats=!0}computeFileStats(){if(!this._recomputeStats||null==this._files)return;this._recomputeStats=!1;const e={added:0,deleted:0,changed:0};let t=0,i=0;for(const r of this._files)switch(null!=r.stats&&(t+=r.stats.additions,i+=r.stats.deletions),r.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}null!=this._stats&&(0===t&&0!==this._stats.additions&&(t=this._stats.additions),0===i&&0!==this._stats.deletions&&(i=this._stats.deletions)),this._stats={...this._stats,changedFiles:e,additions:t,deletions:i}}async findFile(e,t){if(!this.hasFullDetails()&&(await this.ensureFullDetails(),null==this._files))return;const i=this.container.git.getRelativePath(e,this.repoPath);return this.isUncommitted&&null!=t?this._files?.find((e=>e.path===i&&e.staged===t)):this._files?.find((e=>e.path===i))}formatDate(e){return"committed"===this.container.CommitDateFormatting.dateSource?this.committer.formatDate(e):this.author.formatDate(e)}formatDateFromNow(e){return"committed"===this.container.CommitDateFormatting.dateSource?this.committer.fromNow(e):this.author.fromNow(e)}formatStats(e){const t=this.stats;if(null==t)return e?.empty??"";const{changedFiles:i,additions:r,deletions:s}=t;if(S(i)<=0&&r<=0&&s<=0)return e?.empty??"";const{compact:o=!1,expand:a=!1,prefix:c="",sectionSeparator:l=` ${(0,h.vk)(n.NE.Dot,1,1,n.NE.Space)} `,separator:u=" ",suffix:d=""}=e??{};let p=c;if("number"==typeof i)i&&(p+=a?`${(0,h._6)("file",i)} changed`:`~${i}`);else{const{added:e,changed:t,deleted:s}=i;e?p+=a?`${(0,h._6)("file",e)} added`:`+${e}`:a||o||(p+="+0"),t?p+=`${e?u:""}${a?`${(0,h._6)("file",t)} changed`:`~${t}`}`:a||o||(p+="~0"),s?p+=`${t|r?u:""}${a?`${(0,h._6)("file",s)} deleted`:`-${s}`}`:a||o||(p+="-0")}return a&&(r&&(p+=`${i?l:""}${(0,h._6)("addition",r)}`),s&&(p+=`${i||r?u:""}${(0,h._6)("deletion",s)}`)),p+=d,p}async getAssociatedPullRequest(e){return e??=await this.container.git.getBestRemoteWithRichProvider(this.repoPath),e?.hasRichIntegration()?e.provider.getPullRequestForCommit(this.ref):void 0}async getEnrichedAutolinks(e){if(!this.isUncommitted&&(e??=await this.container.git.getBestRemoteWithRichProvider(this.repoPath),e?.hasRichIntegration()))return null==this.message&&await this.ensureFullDetails(),this.container.autolinks.getEnrichedAutolinks(this.message??this.summary,e)}getAvatarUri(e){return this.author.getAvatarUri(this,e)}getCachedAvatarUri(e){return this.author.getCachedAvatarUri(e)}async getCommitForFile(e,t){const i="string"==typeof e?this.container.git.getRelativePath(e,this.repoPath):e.path,r=await this.findFile(i,t);if(null==r)return;return this.with({sha:r.staged?d.pw:this.sha,files:{file:r}})}async getCommitsForFiles(){if(!this.hasFullDetails()&&(await this.ensureFullDetails(),null==this._files))return[];const e=this._files?.map((e=>this.with({files:{file:e}})));return e??[]}getGitUri(e=!1){const t=this._file?.uri??this.container.git.getAbsoluteUri(this.repoPath,this.repoPath);return e?new u.YY(this._file?.originalUri??t,{repoPath:this.repoPath,sha:this.unresolvedPreviousSha}):new u.YY(t,this)}getPreviousComparisonUrisForLine(e,t){return null!=this.file?this.container.git.getPreviousComparisonUrisForLine(this.repoPath,this.file.uri,e,t??(this.sha===d.CL?void 0:this.sha)):Promise.resolve(void 0)}_previousShaPromise;async getPreviousSha(){if(null==this._previousShaPromise){async function e(){if(null!=this.file){if(null!=this.file.previousSha&&(0,m.D3)(this.file.previousSha))return this.file.previousSha;const e=await this.container.git.resolveReference(this.repoPath,(0,m.l3)(this.sha,!0)?"HEAD":`${this.sha}^`,this.file.originalPath??this.file.path);return this._resolvedPreviousSha=e,e}const e=this.parents[0];if(null!=e&&(0,m.D3)(e))return e;const t=await this.container.git.resolveReference(this.repoPath,(0,m.l3)(this.sha,!0)?"HEAD":`${this.sha}^`);return this._resolvedPreviousSha=t,t}this._previousShaPromise=e.call(this)}return this._previousShaPromise}getRepository(){return this.container.git.getRepository(this.repoPath)}async isPushed(){return this.container.git.hasCommitBeenPushed(this.repoPath,this.ref)}with(e){let t;return null!=e.files?(t={file:this._file,files:this._files},null!=e.files.file?t.file=e.files.file:null===e.files.file&&(t.file=void 0),null!=e.files.files?t.files=e.files.files:null===e.files.files&&(t.files=void 0)):null===e.files&&(t=void 0),new _GitCommit(this.container,this.repoPath,e.sha??this.sha,this.author,this.committer,this.summary,this.getChangedValue(e.parents,this.parents)??[],this.message,t,this.stats,this.getChangedValue(e.lines,this.lines),this.tips,this.stashName,this.stashOnRef)}getChangedValue(e,t){return void 0===e?t:null!==e?e:void 0}};w([(0,c.H)()],y.prototype,"isUncommitted",1),w([(0,c.H)()],y.prototype,"isUncommittedStaged",1),w([(0,a.H)()],y.prototype,"ensureFullDetails",1),w([(0,c.H)()],y.prototype,"getGitUri",1),w([(0,c.H)(((e,t)=>`${e}|${t??""}`))],y.prototype,"getPreviousComparisonUrisForLine",1),w([(0,a.H)()],y.prototype,"isPushed",1);let b=y;function C(e){return e instanceof b}function A(e){return e instanceof b&&"stash"===e.refType&&Boolean(e.stashName)}class GitCommitIdentity{constructor(e,t,i,r){this.name=e,this.email=t,this.date=i,this.avatarUrl=r}formatDate(e){return(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma")}fromNow(e){return(0,o.Zh)(this.date,e)}getAvatarUri(e,t){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,s.oP)(this.email,e,t)}getCachedAvatarUri(e){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,s.x4)(this.email,e)}}function S(e){return null==e?0:"number"==typeof e?e:e.added+e.changed+e.deleted}function P(e){if(!e.hasFullDetails())throw new Error(`GitCommit(${e.sha}) is not fully loaded`)}w([(0,c.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitCommitIdentity.prototype,"formatDate",1)},439:(e,t,i)=>{i.d(t,{CL:()=>s,Ii:()=>r,pw:()=>n});const r="0000000000000000000000000000000000000000-",s="0000000000000000000000000000000000000000",n="0000000000000000000000000000000000000000:"},1719:(e,t,i)=>{i.d(t,{V:()=>d,v:()=>p});var r=i(9496),s=i(8388),n=i(5148),o=i(7512),a=i(4488),c=i(3620),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor;const u=class _GitContributor{constructor(e,t,i,r,s,n=!1,o,a,c,l){this.repoPath=e,this.name=t,this.email=i,this.count=r,this.date=s,this.current=n,this.stats=o,this.username=a,this.avatarUrl=c,this.id=l}static is(e){return e instanceof _GitContributor}static sort(e,t){switch((t={current:!0,orderBy:n.D.get("sortContributorsBy"),...t}).orderBy){case"count:asc":return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||e.count-t.count||(e.date?.getTime()??0)-(t.date?.getTime()??0)));case"date:desc":return e.sort(((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(i.date?.getTime()??0)-(e.date?.getTime()??0)||i.count-e.count));case"date:asc":return e.sort(((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.date?.getTime()??0)-(i.date?.getTime()??0)||i.count-e.count));case"name:asc":return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,c.dm)(e.name??e.username,t.name??t.username)));case"name:desc":return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,c.dm)(t.name??t.username,e.name??e.username)));default:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||t.count-e.count||(t.date?.getTime()??0)-(e.date?.getTime()??0)))}}get label(){return this.name??this.username}formatDate(e){return null!=this.date?(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(e){return null!=this.date?(0,o.Zh)(this.date,e):""}getAvatarUri(e){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,s.oP)(this.email,void 0,e)}getCoauthor(){return`${this.name}${this.email?` <${this.email}>`:""}`}};((e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&l(t,i,n)})([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],u.prototype,"formatDate",1);let d=u;function p(e,t){return e.name===t.name&&e.email===t.email&&e.username===t.username}},7881:(e,t,i)=>{i.d(t,{Bh:()=>m,Gv:()=>w,K8:()=>D,K9:()=>P,NV:()=>p,OC:()=>g,PM:()=>f,Qw:()=>A,Vz:()=>d,W5:()=>v,tK:()=>b});var r=i(5255),s=i(6894),n=i(4488),o=i(1774),a=i(3700),c=i(3620),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n},d=(e=>(e.AddedByBoth="AA",e.AddedByUs="AU",e.AddedByThem="UA",e.DeletedByBoth="DD",e.DeletedByUs="DU",e.DeletedByThem="UD",e.ModifiedByBoth="UU",e))(d||{}),p=(e=>(e.Modified="M",e.Added="A",e.Deleted="D",e.Renamed="R",e.Copied="C",e.Unchanged=".",e.Untracked="?",e.Ignored="!",e.UpdatedButUnmerged="U",e))(p||{}),m=(e=>(e.Modified="M",e.Added="A",e.Deleted="D",e.Untracked="?",e.Ignored="!",e))(m||{});function g(e,t=!1,i){const s=(0,a.Fd)(e.path,i);return t&&("R"===e.status||"C"===e.status)&&e.originalPath?`${s} ${(0,c.vk)(r.NE.ArrowLeft,1,1)} ${e.originalPath}`:s}function f(e,t={}){return(0,o.d)(e.path,t)}function w(e,t){return e.originalPath?(0,a.uo)(e.originalPath,t)[0]:""}function v(e,t){return(0,a.uo)(e.path,t)[0]}const y={".":void 0,"!":"icon-status-ignored.svg","?":"icon-status-untracked.svg",A:"icon-status-added.svg",D:"icon-status-deleted.svg",M:"icon-status-modified.svg",R:"icon-status-renamed.svg",C:"icon-status-copied.svg",AA:"icon-status-conflict.svg",AU:"icon-status-conflict.svg",UA:"icon-status-conflict.svg",DD:"icon-status-conflict.svg",DU:"icon-status-conflict.svg",UD:"icon-status-conflict.svg",UU:"icon-status-conflict.svg",T:"icon-status-modified.svg",U:"icon-status-modified.svg"};function b(e){return y[e]??"icon-status-unknown.svg"}const C={".":void 0,"!":"$(diff-ignored)","?":"$(diff-added)",A:"$(diff-added)",D:"$(diff-removed)",M:"$(diff-modified)",R:"$(diff-renamed)",C:"$(diff-added)",AA:"$(warning)",AU:"$(warning)",UA:"$(warning)",DD:"$(warning)",DU:"$(warning)",UD:"$(warning)",UU:"$(warning)",T:"$(diff-modified)",U:"$(diff-modified)"};function A(e,t=r.NE.Space.repeat(4)){return C[e]??t}const S={".":"Unchanged","!":"Ignored","?":"Untracked",A:"Added",D:"Deleted",M:"Modified",R:"Renamed",C:"Copied",AA:"Conflict",AU:"Conflict",UA:"Conflict",DD:"Conflict",DU:"Conflict",UD:"Conflict",UU:"Conflict",T:"Modified",U:"Updated but Unmerged"};function P(e){return S[e]??"Unknown"}const k=class _GitFileChange{constructor(e,t,i,r,s,n,o){this.repoPath=e,this.path=t,this.status=i,this.originalPath=r,this.previousSha=s,this.stats=n,this.staged=o}static is(e){return e instanceof _GitFileChange}get hasConflicts(){switch(this.status){case"UA":case"AU":case"AA":case"UD":case"DU":case"DD":case"UU":return!0;default:return!1}}get uri(){return s.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}get originalUri(){return this.originalPath?s.W.instance.git.getAbsoluteUri(this.originalPath,this.repoPath):void 0}getWorkingUri(){return s.W.instance.git.getWorkingUri(this.repoPath,this.uri)}formatStats(e){if(null==this.stats)return e?.empty??"";const{additions:t,deletions:i}=this.stats;if(t<0&&i<0)return e?.empty??"";const{compact:r=!1,expand:s=!1,prefix:n="",separator:o=" ",suffix:a=""}=e??{};let l=n;return t?l+=s?`${(0,c._6)("line",t)} added`:`+${t}`:s||r||(l+="+0"),i?l+=`${t?o:""}${s?`${(0,c._6)("line",i)} deleted`:`-${i}`}`:s||r||(l+="-0"),l+=a,l}};u([(0,n.H)()],k.prototype,"uri",1),u([(0,n.H)()],k.prototype,"originalUri",1),u([(0,n.H)()],k.prototype,"getWorkingUri",1);let D=k},8452:(e,t,i)=>{i.d(t,{$9:()=>Issue,Gj:()=>s,Ty:()=>n,sy:()=>o,xX:()=>a,y$:()=>c});var r=i(9496);function s(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,nodeId:e.nodeId,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,state:e.state}}function n(e){if(null==e)return`<span class="codicon codicon-link" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`;if("pullrequest"!==e.type)return e.closed?`<span class="codicon codicon-pass" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`:`<span class="codicon codicon-issues" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`;switch(e.state){case"merged":return`<span class="codicon codicon-git-merge" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`;case"closed":return`<span class="codicon codicon-git-pull-request-closed" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#f85149":"#cf222e"};"></span>`;case"opened":return`<span class="codicon codicon-git-pull-request" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`;default:return'<span class="codicon codicon-git-pull-request"></span>'}}function o(e){if(null==e)return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(link)</span>`;if("pullrequest"!==e.type)return e.closed?`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(pass)</span>`:`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(issues)</span>`;switch(e.state){case"merged":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(git-merge)</span>`;case"closed":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#f85149":"#cf222e"};">$(git-pull-request-closed)</span>`;case"opened":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(git-pull-request)</span>`;default:return"$(git-pull-request)"}}function a(e){if(null==e)return new r.ThemeIcon("link",new r.ThemeColor("gitlens.closedAutolinkedIssueIconColor"));if("pullrequest"!==e.type)return e.closed?new r.ThemeIcon("pass",new r.ThemeColor("gitlens.closedAutolinkedIssueIconColor")):new r.ThemeIcon("issues",new r.ThemeColor("gitlens.openAutolinkedIssueIconColor"));switch(e.state){case"merged":return new r.ThemeIcon("git-merge",new r.ThemeColor("gitlens.mergedPullRequestIconColor"));case"closed":return new r.ThemeIcon("git-pull-request-closed",new r.ThemeColor("gitlens.closedPullRequestIconColor"));case"opened":return new r.ThemeIcon("git-pull-request",new r.ThemeColor("gitlens.openPullRequestIconColor"));default:return new r.ThemeIcon("git-pull-request")}}function c(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,nodeId:e.nodeId,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,state:e.state,updatedDate:e.updatedDate,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},repository:{owner:e.repository.owner,repo:e.repository.repo},assignees:e.assignees.map((e=>({name:e.name,avatarUrl:e.avatarUrl,url:e.url}))),labels:null==e.labels?void 0:e.labels.map((e=>({color:e.color,name:e.name}))),commentsCount:e.commentsCount,thumbsUpCount:e.thumbsUpCount}}class Issue{constructor(e,t,i,r,s,n,o,a,c,l,h,u,d,p,m,g){this.provider=e,this.id=t,this.nodeId=i,this.title=r,this.url=s,this.date=n,this.closed=o,this.state=a,this.updatedDate=c,this.author=l,this.repository=h,this.assignees=u,this.closedDate=d,this.labels=p,this.commentsCount=m,this.thumbsUpCount=g}type="issue"}},4092:(e,t,i)=>{i.d(t,{Cz:()=>h,i7:()=>p,l1:()=>u,pD:()=>l});var r=i(6894),s=i(7512),n=i(4488),o=Object.defineProperty,a=Object.getOwnPropertyDescriptor,c=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?a(t,i):t,c=e.length-1;c>=0;c--)(s=e[c])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&o(t,i,n),n},l=(e=>(e.Approved="Approved",e.ChangesRequested="ChangesRequested",e.ReviewRequired="ReviewRequired",e))(l||{}),h=(e=>(e.Unknown="Unknown",e.Mergeable="Mergeable",e.Conflicting="Conflicting",e))(h||{});function u(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,nodeId:e.nodeId,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},state:e.state,mergedDate:e.mergedDate,mergeableState:e.mergeableState,refs:e.refs?{head:{exists:e.refs.head.exists,owner:e.refs.head.owner,repo:e.refs.head.repo,sha:e.refs.head.sha,branch:e.refs.head.branch,url:e.refs.head.url},base:{exists:e.refs.base.exists,owner:e.refs.base.owner,repo:e.refs.base.repo,sha:e.refs.base.sha,branch:e.refs.base.branch,url:e.refs.base.url},isCrossRepository:e.refs.isCrossRepository}:void 0,isDraft:e.isDraft,additions:e.additions,deletions:e.deletions,comments:e.comments,reviewDecision:e.reviewDecision,reviewRequests:e.reviewRequests,assignees:e.assignees}}const d=class _PullRequest{constructor(e,t,i,r,s,n,o,a,c,l,h,u,d,p,m,g,f,w,v){this.provider=e,this.author=t,this.id=i,this.nodeId=r,this.title=s,this.url=n,this.state=o,this.date=a,this.closedDate=c,this.mergedDate=l,this.mergeableState=h,this.refs=u,this.isDraft=d,this.additions=p,this.deletions=m,this.comments=g,this.reviewDecision=f,this.reviewRequests=w,this.assignees=v}static is(e){return e instanceof _PullRequest}type="pullrequest";get closed(){return"closed"===this.state}get formattedDate(){return"absolute"===r.W.instance.PullRequestDateFormatting.dateStyle?this.formatDate(r.W.instance.PullRequestDateFormatting.dateFormat):this.formatDateFromNow()}formatDate(e){return(0,s.p6)(this.mergedDate??this.closedDate??this.date,e??"MMMM Do, YYYY h:mma")}formatDateFromNow(){return(0,s.Zh)(this.mergedDate??this.closedDate??this.date)}formatClosedDate(e){return null==this.closedDate?"":(0,s.p6)(this.closedDate,e??"MMMM Do, YYYY h:mma")}formatClosedDateFromNow(){return null==this.closedDate?"":(0,s.Zh)(this.closedDate)}formatMergedDate(e){return null==this.mergedDate?"":(0,s.p6)(this.mergedDate,e??"MMMM Do, YYYY h:mma")??""}formatMergedDateFromNow(){return null==this.mergedDate?"":(0,s.Zh)(this.mergedDate)}formatUpdatedDate(e){return(0,s.p6)(this.date,e??"MMMM Do, YYYY h:mma")??""}formatUpdatedDateFromNow(){return(0,s.Zh)(this.date)}};c([(0,n.H)((e=>e??"MMMM Do, YYYY h:mma"))],d.prototype,"formatDate",1),c([(0,n.H)((e=>e??"MMMM Do, YYYY h:mma"))],d.prototype,"formatClosedDate",1),c([(0,n.H)((e=>e??"MMMM Do, YYYY h:mma"))],d.prototype,"formatMergedDate",1),c([(0,n.H)((e=>e??"MMMM Do, YYYY h:mma"))],d.prototype,"formatUpdatedDate",1);let p=d},4321:(e,t,i)=>{i.d(t,{Av:()=>_,D3:()=>v,FT:()=>I,Gn:()=>T,LB:()=>D,Nn:()=>x,UR:()=>$,Wh:()=>B,Yn:()=>F,gA:()=>E,j$:()=>C,l3:()=>b,oI:()=>f,pZ:()=>O,qj:()=>R,rD:()=>A,t6:()=>P,xB:()=>k,yk:()=>w,yo:()=>y,zL:()=>S});var r=i(5255),s=i(5148),n=i(3620),o=i(5367),a=i(439);const c=/^(\S*?)(\.\.\.?)(\S*)\s*$/,l=/(^[0-9a-f]{40}([\^@~:]\S*)?$)|(^[0]{40}(:|-)$)/,h=/(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/,u=/(^[0-9a-f]{40})\^[0-3]?$/,d=/^(.*?)([\^@~:].*)?$/,p=/^[0]{40}(?:[\^@~:]\S*)?:?$/,m=/^[0]{40}([\^@~]\S*)?:$/;function g(e,t){return!!t&&e.test(t)}function f(e,t,i=".."){return`${e??""}${i}${t??""}`}function w(e){return e?.includes("..")??!1}function v(e){return g(h,e)}function y(e){return g(l,e)}function b(e,t=!1){return e===a.CL||e===a.pw||!t&&g(p,e)}function C(e){return e===`${a.CL}^`||e===`${a.pw}^`}function A(e,t=!1){return e===a.pw||!t&&g(m,e)}function S(e,t){if(e===a.Ii)return"(deleted)";if(!e)return t?.strings?.working??"";if(b(e))return A(e)?t?.strings?.uncommittedStaged??"Index":t?.strings?.uncommitted??"Working Tree";if(w(e))return e;if(!t?.force&&!y(e))return e;const i=Math.max(5,s.D.get("advanced.abbreviatedShaLength")),r=d.exec(e);if(null!=r){const[,e,t]=r;if(null!=t)return`${e.substr(0,i)}${t}`}return e.substr(0,i)}function P(e){const t=c.exec(e);if(null==t)return;const[,i,r,s]=t;return{ref1:i,notation:r,ref2:s}}function k(e,t,i={refType:"revision"}){switch(i.refType){case"branch":return{refType:"branch",repoPath:t,ref:e,name:i.name,id:i.id,remote:i.remote,upstream:i.upstream};case"stash":return{refType:"stash",repoPath:t,ref:e,name:i.name,number:i.number,message:i.message,stashOnRef:i.stashOnRef};case"tag":return{refType:"tag",repoPath:t,ref:e,name:i.name,id:i.id};default:return{refType:"revision",repoPath:t,ref:e,name:i.name??S(e,{force:!0,strings:{working:"Working Tree"}}),message:i.message}}}function D(e){return k(e.ref,e.repoPath,{id:e.id,refType:e.refType,name:e.name,remote:e.remote,upstream:e.upstream})}function R(e,t){return"stash"===e.refType?k(e.ref,e.repoPath,{refType:e.refType,name:e.name,number:e.number,message:t?.excludeMessage?void 0:e.message}):k(e.ref,e.repoPath,{refType:e.refType,name:e.name,message:t?.excludeMessage?void 0:e.message})}function _(e){return"branch"===e.refType&&e.remote?(0,o.S3)(e.name):e.name}function T(e){return e.upstream?.name.substring((0,o.RJ)(e.upstream.name)+1)}function F(e){if(null==e||"object"!=typeof e)return!1;const t=e;return"string"==typeof t.refType&&"string"==typeof t.repoPath&&"string"==typeof t.ref&&"string"==typeof t.name}function $(e){return"branch"===e?.refType}function I(e){return"revision"===e?.refType}function x(e){return"revision"===e?.refType&&w(e.ref)}function O(e){return"stash"===e?.refType||"revision"===e?.refType&&Boolean(e?.stashName)}function E(e){return"tag"===e?.refType}function B(e,t){if(null==e)return"";let i;if(t=!1===t?{}:{expand:!0,icon:!0,label:t?.label??t?.expand??!0,...t},!Array.isArray(e)||1===e.length){const s=Array.isArray(e)?e[0]:e;let a=t?.quoted?`'${s.name}'`:s.name;switch(s.refType){case"branch":s.remote&&(a=`${(0,o.Lo)(a)}: ${(0,o.S3)(a)}`,a=t?.quoted?`'${a}'`:a),i=`${t.label?(s.remote?"remote ":"")+"branch ":""}${t.icon?`$(git-branch)${r.NE.Space}${a}`:a}`;break;case"tag":i=`${t.label?"tag ":""}${t.icon?`$(tag)${r.NE.Space}${a}`:a}`;break;default:if(O(s)){let e;t.expand&&s.message&&(e=`${null!=s.number?`#${s.number}: `:""}${s.message.length>20?`${s.message.substring(0,20).trimRight()}${r.NE.Ellipsis}`:s.message}`),i=`${t.label?"stash ":""}${t.icon?`$(archive)${r.NE.Space}${e??s.name}`:`${e??(s.number?`#${s.number}`:s.name)}`}`}else if(w(s.ref))i=a;else{let e,n;t.expand&&s.message&&(e=s.message.length>20?` (${s.message.substring(0,20).trimRight()}${r.NE.Ellipsis})`:` (${s.message})`),t.expand&&t.label&&function(e){return g(u,e)}(s.ref)?(a=s.name.endsWith("^")?s.name.substr(0,s.name.length-1):s.name,t?.quoted&&(a=`'${a}'`),n="before "):n="",i=`${t.label?`${n}commit `:""}${t.icon?`$(git-commit)${r.NE.Space}${a}${e??""}`:`${a}${e??""}`}`}}return t.capitalize&&t.expand&&!1!==t.label?(0,n.kC)(i):i}const s=t.expand?` (${e.map((e=>e.name)).join(", ")})`:"";switch(e[0].refType){case"branch":return`${e.length} branches${s}`;case"tag":return`${e.length} tags${s}`;default:return`${e.length} ${O(e[0])?"stashes":"commits"}${s}`}}},3050:(e,t,i)=>{i.d(t,{Ym:()=>w,dM:()=>f,jv:()=>g,ss:()=>m});var r=i(9496),s=i(5255),n=i(6894),o=i(4488),a=i(3620),c=i(2509),l=i(4794),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&h(t,i,n),n};const p=class _GitRemote{constructor(e,t,i,r,s,n,o){this.repoPath=e,this.name=t,this.scheme=i,this._domain=r,this._path=s,this.provider=n,this.urls=o}static getHighlanderProviders(e){if(0===e.length)return;const t=1===e.length?e[0]:e.find((e=>e.default));if(null!=t)return[t.provider];const i=e[0].provider.name;return e.every((e=>e.provider.name===i))?e.map((e=>e.provider)):void 0}static getHighlanderProviderName(e){if(0===e.length)return;const t=1===e.length?e[0]:e.find((e=>e.default));if(null!=t)return t.provider.name;const i=e[0].provider.name;return e.every((e=>e.provider.name===i))?i:void 0}static is(e){return e instanceof _GitRemote}static sort(e){return e.sort(((e,t)=>(e.default?-1:1)-(t.default?-1:1)||("origin"===e.name?-1:1)-("origin"===t.name?-1:1)||("upstream"===e.name?-1:1)-("upstream"===t.name?-1:1)||(0,a.dm)(e.name,t.name)))}get default(){const e=n.W.instance.storage.getWorkspace("remote:default");return this.name===e||this.remoteKey===e}get domain(){return this.provider?.domain??this._domain}get id(){return`${this.name}/${this.remoteKey}`}get path(){return this.provider?.path??this._path}get remoteKey(){return this._domain?`${this._domain}/${this._path}`:this.path}get url(){let e;for(const t of this.urls){if("push"===t.type)return t.url;null==e&&(e=t.url)}return e}hasRichIntegration(){return this.provider?.hasRichIntegration()??!1}get maybeConnected(){return null!=this.provider&&this.provider.maybeConnected}matches(e,t){if(null==t){if((0,a.qq)(e,this.url))return!0;[,e,t]=(0,l.Sk)(e)}return(0,a.qq)(e,this.domain)&&(0,a.qq)(t,this.path)}async setAsDefault(e=!0){const t=n.W.instance.git.getRepository(this.repoPath);await(t?.setRemoteAsDefault(this,e))}};d([(0,o.H)()],p.prototype,"domain",1),d([(0,o.H)()],p.prototype,"id",1),d([(0,o.H)()],p.prototype,"path",1),d([(0,o.H)()],p.prototype,"remoteKey",1),d([(0,o.H)()],p.prototype,"url",1);let m=p;function g(e){const t=function(e){let t,i,r;for(const{type:t}of e.urls)if("fetch"===t){if(i=!0,r)break}else if("push"===t&&(r=!0,i))break;return t=i&&r?s.NE.ArrowsRightLeft:r?s.NE.ArrowRight:i?s.NE.ArrowLeft:s.NE.Dash,t}(e),{provider:i}=e;return null!=i?`${t}${s.NE.Space} ${i.name} ${s.NE.Space}${s.NE.Dot}${s.NE.Space} ${i.displayPath}`:`${t}${s.NE.Space} ${e.domain?`${e.domain} ${s.NE.Space}${s.NE.Dot}${s.NE.Space} `:""}${e.path}`}function f(e,t,i,s=r.window.activeColorTheme){if(null==t.provider?.icon)return;const n=r.Uri.joinPath(e.context.extensionUri,`images/${(0,c.GC)(s)?"light":"dark"}/icon-${t.provider.icon}.svg`);return null!=i?i(n):n}function w(e){return Array.isArray(e)?e.map((e=>e.remoteKey)).sort().join(","):e.remoteKey}},6503:(e,t,i)=>{i.d(t,{C:()=>s,J:()=>r});var r=(e=>(e.Branch="branch",e.Branches="branches",e.Commit="commit",e.Comparison="comparison",e.CreatePullRequest="createPullRequest",e.File="file",e.Repo="repo",e.Revision="revision",e))(r||{});function s(e){switch(e.type){case"branch":return"Branch";case"branches":return"Branches";case"commit":return"Commit";case"comparison":return"Comparison";case"createPullRequest":return"Create Pull Request";case"file":case"revision":return"File";case"repo":return"Repository";default:return""}}},3646:(e,t,i)=>{i.d(t,{I6:()=>E,_j:()=>M,du:()=>B,uC:()=>N});var r=i(9496),s=i(4290),n=i(5640),o=i(5255),a=i(7925),c=i(2133),l=i(2800),h=i(9529),u=i(5148),d=i(7512),p=i(5432),m=i(1219),g=i(9796),f=i(3105),w=i(4336),v=i(6004),y=i(9967),b=i(3700),C=i(3620),A=i(5367),S=i(4321),P=Object.defineProperty,k=Object.getOwnPropertyDescriptor,D=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?k(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&P(t,i,n),n};const R=Object.freeze([]),_=36e5,T=864e5,F="index,HEAD,*_HEAD,MERGE_*,rebase-merge/**,sequencer/**",$="worktrees/**/index,worktrees/**/HEAD,worktrees/**/*_HEAD,worktrees/**/MERGE_*,worktrees/**/rebase-merge/**,worktrees/**/sequencer/**",I=`{${F}}`,x=`{config,refs/**,${$}}`,O=`{${F},config,refs/**,${$}}`;var E=(e=>(e[e.Unknown=-1]="Unknown",e[e.Index=0]="Index",e[e.Head=1]="Head",e[e.Heads=2]="Heads",e[e.Tags=3]="Tags",e[e.Stash=4]="Stash",e[e.Remotes=5]="Remotes",e[e.Worktrees=6]="Worktrees",e[e.Config=7]="Config",e[e.Status=8]="Status",e[e.CherryPick=9]="CherryPick",e[e.Merge=10]="Merge",e[e.Rebase=11]="Rebase",e[e.Closed=100]="Closed",e[e.Ignores=101]="Ignores",e[e.RemoteProviders=102]="RemoteProviders",e[e.Starred=103]="Starred",e[e.Opened=104]="Opened",e))(E||{}),B=(e=>(e[e.Any=0]="Any",e[e.Exclusive=1]="Exclusive",e))(B||{});const W=2500;class RepositoryChangeEvent{constructor(e,t){this.repository=e,this._changes=new Set(t)}_changes;toString(e=!1){return e?`changes=${(0,f.v_)(this._changes,", ")}`:`{ repository: ${this.repository?.name??""}, changes: ${(0,f.v_)(this._changes,", ")} }`}changed(...e){const t=e.slice(0,-1),i=e[e.length-1];if(0===i)return(0,f.G)(this._changes,(e=>t.includes(e)));let r=this._changes;1===i&&(t.includes(9)||t.includes(10)||t.includes(11)?t.includes(8)||t.push(8):t.includes(8)&&(r=new Set(r),r.delete(9),r.delete(10),r.delete(11)));const s=[...(0,f.hX)(r,(e=>t.includes(e)))];return 1===i?s.length===r.size:s.length===t.length}with(e){return new RepositoryChangeEvent(this.repository,[...this._changes,...e])}}let M=class{constructor(e,t,i,s,n,o,a,l=!1){if(this.container=e,this.onDidRepositoryChange=t,this.provider=i,this.folder=s,this.uri=n,this.root=o,null!=s)if(o)this.name=s.name;else{const t=e.git.getRelativePath(n,s.uri);this.name=t||s.name}else this.name=(0,b.EZ)(n.path);this.index=s?.index??e.git.repositoryCount,this.id=(0,c.YW)(n),this._suspended=a,this._closed=l,this._disposable=r.Disposable.from(this.setupRepoWatchers(),u.D.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged(),this._orderByLastFetched&&this.getLastFetched()}static formatLastFetched(e,t=!0){const i=new Date(e);if(Date.now()-e<T)return(0,d.Zh)(i);if(t)return(0,d.p6)(i,u.D.get("defaultDateShortFormat")??"short");let r=u.D.get("defaultDateFormat")??`dddd, MMMM Do, YYYY [at] ${u.D.get("defaultTimeFormat")??"h:mma"}`;return/[hHm]/.test(r)||(r+=` [at] ${u.D.get("defaultTimeFormat")??"h:mma"}`),(0,d.p6)(i,r)}static getLastFetchedUpdateInterval(e){const t=Date.now()-e;return t<T?(t<_?6e4:_)/2:0}static sort(e,t){switch((t={orderBy:u.D.get("sortRepositoriesBy"),...t}).orderBy){case"name:asc":return e.sort(((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(0,C.dm)(e.name,t.name)));case"name:desc":return e.sort(((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(0,C.dm)(t.name,e.name)));case"lastFetched:asc":return e.sort(((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(e._lastFetched??0)-(t._lastFetched??0)));case"lastFetched:desc":return e.sort(((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(t._lastFetched??0)-(e._lastFetched??0)));default:return e}}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeFileSystem=new r.EventEmitter;get onDidChangeFileSystem(){return this._onDidChangeFileSystem.event}get formattedName(){return this.name}id;index;name;_idHash;get idHash(){return void 0===this._idHash&&(this._idHash=(0,s.FB)(this.id)),this._idHash}_branch;_disposable;_fireChangeDebounced=void 0;_fireFileSystemChangeDebounced=void 0;_pendingFileSystemChange;_pendingRepoChange;_suspended;setupRepoWatchers(){let e;return this.setupRepoWatchersCore().then((t=>e=t)),{dispose:()=>{e?.dispose()}}}async setupRepoWatchersCore(){const e=(0,v.UH)(),t=[];t.push(this.container.events.on("git:cache:reset",(e=>{e.data.repoPath&&e.data.repoPath!==this.path||(this.resetCaches(...e.data.caches??R),e.data.caches?.includes("providers")&&this.fireChange(102))})));const i=r.workspace.createFileSystemWatcher(new r.RelativePattern(this.uri,"**/.gitignore"));function s(i,s){w.Yd.debug(e,`watching '${i.toString(!0)}' for repository changes`);const n=r.workspace.createFileSystemWatcher(new r.RelativePattern(i,s));return t.push(n,n.onDidChange((e=>this.onRepositoryChanged(e,i))),n.onDidCreate((e=>this.onRepositoryChanged(e,i))),n.onDidDelete((e=>this.onRepositoryChanged(e,i)))),n}t.push(i,i.onDidChange(this.onGitIgnoreChanged,this),i.onDidCreate(this.onGitIgnoreChanged,this),i.onDidDelete(this.onGitIgnoreChanged,this));const n=await this.getGitDir();return null!=n&&(null==n?.commonUri?s.call(this,n.uri,O):(s.call(this,n.uri,I),s.call(this,n.commonUri,x))),r.Disposable.from(...t)}dispose(){this.unWatchFileSystem(!0),this._disposable.dispose()}toString(){return`${(0,w.q4)(this)}(${this.id})`}get virtual(){return this.provider.virtual}get path(){return this.uri.scheme===o.sN.File?(0,b.AH)(this.uri.fsPath):this.uri.toString()}get etag(){return this._updatedAt}_orderByLastFetched=!1;get orderByLastFetched(){return this._orderByLastFetched}_updatedAt=0;get updatedAt(){return this._updatedAt}onConfigurationChanged(e){u.D.changed(e,"sortRepositoriesBy")&&(this._orderByLastFetched=u.D.get("sortRepositoriesBy")?.startsWith("lastFetched:")??!1),null!=e&&u.D.changed(e,"remotes",this.folder?.uri)&&(this.resetCaches("remotes"),this.fireChange(5))}onFileSystemChanged(e){/\.git(?:\/|\\|$)/.test(e.fsPath)||(this._etagFileSystem=Date.now(),this.fireFileSystemChange(e))}onGitIgnoreChanged(e){this.fireChange(101)}onRepositoryChanged(e,t){if(e?.path.includes("/fsmonitor--daemon/"))return;this._lastFetched=void 0,this._orderByLastFetched&&this.getLastFetched();const i=null!=e?/(worktrees|index|HEAD|FETCH_HEAD|ORIG_HEAD|CHERRY_PICK_HEAD|MERGE_HEAD|REBASE_HEAD|rebase-merge|config|refs\/(?:heads|remotes|stash|tags))/.exec(this.container.git.getRelativePath(e,t)):void 0;if(null!=i)switch(i[1]){case"config":return this.resetCaches(),void this.fireChange(7,5);case"index":return void this.fireChange(0);case"FETCH_HEAD":return;case"HEAD":return this.resetCaches("branches"),void this.fireChange(1,2);case"ORIG_HEAD":case"refs/heads":return this.resetCaches("branches"),void this.fireChange(2);case"CHERRY_PICK_HEAD":return void this.fireChange(9,8);case"MERGE_HEAD":return void this.fireChange(10,8);case"REBASE_HEAD":case"rebase-merge":return void this.fireChange(11,8);case"refs/remotes":return this.resetCaches(),void this.fireChange(5);case"refs/stash":return void this.fireChange(4);case"refs/tags":return void this.fireChange(3);case"worktrees":return void this.fireChange(6)}this.fireChange(-1)}_closed=!1;get closed(){return this._closed}set closed(e){const t=this._closed!==e;this._closed=e,t&&(w.Yd.debug(`Repository(${this.id}).closed(${e})`),this.fireChange(this._closed?100:104))}access(e){return this.container.git.access(e,this.uri)}supports(e){return this.container.git.supports(this.uri,e)}async addRemote(e,t,i){await this.container.git.addRemote(this.uri,e,t,i);const[r]=await this.getRemotes({filter:e=>e.url===t});return r}pruneRemote(e){return this.container.git.pruneRemote(this.uri,e)}removeRemote(e){return this.container.git.removeRemote(this.uri,e)}branch(...e){this.runTerminalCommand("branch",...e)}branchDelete(e,t){Array.isArray(e)||(e=[e]);const i=e.filter((e=>!e.remote));if(0!==i.length){const r=["--delete"];if(t?.force&&r.push("--force"),this.runTerminalCommand("branch",...r,...e.map((e=>e.ref))),t?.remote){const e=i.filter((e=>null!=e.upstream));if(0!==e.length){const t=(0,l.XI)(e,(e=>(0,A.Lo)(e.upstream.name)));for(const[e,i]of t.entries())this.runTerminalCommand("push","-d",e,...i.map((e=>(0,A.S3)(e.upstream.name))))}}}const r=e.filter((e=>e.remote));if(0!==r.length){const e=(0,l.XI)(r,(e=>(0,A.Lo)(e.name)));for(const[t,i]of e.entries())this.runTerminalCommand("push","-d",t,...i.map((e=>(0,S.Av)(e))))}}cherryPick(...e){this.runTerminalCommand("cherry-pick",...e)}containsUri(e){return this===this.container.git.getRepository(e)}async fetch(e){const{progress:t,...i}={progress:!0,...e};return t?r.window.withProgress({location:r.ProgressLocation.Notification,title:null!=i.branch?`${i.pull?"Pulling":"Fetching"} ${i.branch.name}...`:`Fetching ${i.remote?`${i.remote} of `:""}${this.formattedName}...`},(()=>this.fetchCore(i))):this.fetchCore(i)}async fetchCore(e){try{null!=e?.branch||u.D.get("experimental.nativeGit")?await this.container.git.fetch(this.uri,e):await(0,h.Zv)("git.fetch",this.path),this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to fetch repository")}}async getBranch(e){if(e){const{values:[t]}=await this.getBranches({filter:t=>t.name===e});return t}return null==this._branch&&(this._branch=this.container.git.getBranch(this.uri)),this._branch}getBranches(e){return this.container.git.getBranches(this.uri,e)}getChangedFilesCount(e){return this.container.git.getChangedFilesCount(this.uri,e)}getCommit(e){return this.container.git.getCommit(this.uri,e)}getContributors(e){return this.container.git.getContributors(this.uri,e)}_gitDir;_gitDirPromise;getGitDir(){return null==this._gitDirPromise&&(this._gitDirPromise=this.container.git.getGitDir(this.uri).then((e=>this._gitDir=e))),this._gitDirPromise}_lastFetched;async getLastFetched(){const e=await this.container.git.getLastFetchedTimestamp(this.uri);return null!=e&&(this._lastFetched=e),this._lastFetched??0}async getMainRepository(){const e=await this.getGitDir();return null==e?.commonUri?this:this.container.git.getOrOpenRepository(e.commonUri,{detectNested:!1,force:!0,closeOnOpen:!0})}getMergeStatus(){return this.container.git.getMergeStatus(this.uri)}getRebaseStatus(){return this.container.git.getRebaseStatus(this.uri)}async getRemote(e){return(await this.getRemotes()).find((t=>t.name===e))}async getRemotes(e){const t=await this.container.git.getRemotes(this.uri,null!=e?.sort?{sort:e.sort}:void 0);return null!=e?.filter?t.filter(e.filter):t}async getRichRemote(e=!1){return this.container.git.getBestRemoteWithRichProvider(this.uri,{includeDisconnected:!e})}getStash(){return this.container.git.getStash(this.uri)}getStatus(){return this.container.git.getStatusForRepo(this.uri)}async getTag(e){const{values:[t]}=await this.getTags({filter:t=>t.name===e});return t}getTags(e){return this.container.git.getTags(this.uri,e)}async createWorktree(e,t){await this.container.git.createWorktree(this.uri,e.fsPath,t);const i=e.toString();return this.container.git.getWorktree(this.uri,(e=>e.uri.toString()===i))}getWorktrees(){return this.container.git.getWorktrees(this.uri)}async getWorktreesDefaultUri(){return this.container.git.getWorktreesDefaultUri(this.uri)}deleteWorktree(e,t){return this.container.git.deleteWorktree(this.uri,e.fsPath,t)}async hasRemotes(){const e=await this.getRemotes();return e?.length>0}async hasRichRemote(e=!1){const t=await this.getRichRemote(e);return null!=t?.provider}async hasUpstreamBranch(){const e=await this.getBranch();return null!=e?.upstream}isMaybeWorktree(){if(null!=this._gitDir)return null!=this._gitDir.commonUri}async isWorktree(){return null!=(await this.getGitDir())?.commonUri}merge(...e){this.runTerminalCommand("merge",...e)}async pull(e){const{progress:t,...i}={progress:!0,...e};return t?r.window.withProgress({location:r.ProgressLocation.Notification,title:`Pulling ${this.formattedName}...`},(()=>this.pullCore(i))):this.pullCore()}async pullCore(e){try{if(u.D.get("experimental.nativeGit")){const t=u.D.getAny("git.pullTags",this.uri);u.D.getAny("git.fetchOnPull",this.uri)&&await this.container.git.fetch(this.uri),await this.container.git.pull(this.uri,{...e,tags:t})}else{await this.hasUpstreamBranch()?await(0,h.Zv)(e?.rebase?"git.pullRebase":"git.pull",this.path):u.D.getAny("git.fetchOnPull",this.uri)&&await this.container.git.fetch(this.uri)}this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to pull repository")}}async showCreatePullRequestPrompt(e,t){if(!this.container.actionRunners.count("createPullRequest"))return;if(!await(0,a.B8)(t.name))return;const i=await this.getRemote(e);(0,h.SI)("createPullRequest",{repoPath:this.path,remote:null!=i?{name:i.name,provider:null!=i.provider?{id:i.provider.id,name:i.provider.name,domain:i.provider.domain}:void 0,url:i.url}:{name:e},branch:{name:t.name,isRemote:t.remote,upstream:t.upstream?.name}})}async push(e){const{progress:t,...i}={progress:!0,...e};return t?r.window.withProgress({location:r.ProgressLocation.Notification,title:(0,S.UR)(i.reference)?`${null!=i.publish?"Publishing ":"Pushing "}${i.reference.name}...`:`Pushing ${this.formattedName}...`},(()=>this.pushCore(i))):this.pushCore(i)}async pushCore(e){try{if(u.D.get("experimental.nativeGit"))await this.container.git.push(this.uri,{reference:e?.reference,force:e?.force,publish:e?.publish}),(0,S.UR)(e?.reference)&&null!=e?.publish&&this.showCreatePullRequestPrompt(e.publish.remote,e.reference);else if((0,S.UR)(e?.reference)){const t=await this.container.git.getOrOpenScmRepository(this.uri);if(null==t)return;if(null!=e?.publish)await(t?.push(e.publish.remote,e.reference.name,!0)),this.showCreatePullRequestPrompt(e.publish.remote,e.reference);else{const i=await this.getBranch(e?.reference.name);if(null==i)return;await(t?.push(i.getRemoteName(),i.name,void 0,e?.force?n.QO.ForceWithLease:void 0))}}else if(null!=e?.reference){const t=await this.container.git.getOrOpenScmRepository(this.uri);if(null==t)return;const i=await this.getBranch();if(null==i)return;await(t?.push(i.getRemoteName(),`${e.reference.ref}:${i.getNameWithoutRemote()}`,void 0,e?.force?n.QO.ForceWithLease:void 0))}else await(0,h.Zv)(e?.force?"git.pushForce":"git.push",this.path);this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to push repository")}}rebase(e,...t){this.runTerminalCommand(null!=e&&0!==e.length?`${e.join(" ")} rebase`:"rebase",...t)}reset(...e){this.runTerminalCommand("reset",...e)}resetCaches(...e){(0===e.length||e.includes("branches"))&&(this._branch=void 0)}resume(){this._suspended&&(this._suspended=!1,null!=this._pendingRepoChange&&this._fireChangeDebounced(),null!=this._pendingFileSystemChange&&this._fireFileSystemChangeDebounced?.())}revert(...e){this.runTerminalCommand("revert",...e)}richSearchCommits(e,t){return this.container.git.richSearchCommits(this.uri,e,t)}searchCommits(e,t){return this.container.git.searchCommits(this.uri,e,t)}async setRemoteAsDefault(e,t=!0){await this.container.storage.storeWorkspace("remote:default",t?e.name:void 0),this.fireChange(5,102)}get starred(){const e=this.container.storage.getWorkspace("starred:repositories");return null!=e&&!0===e[this.id]}star(e){return this.updateStarred(!0,e)}async stashApply(e,t){await this.container.git.stashApply(this.uri,e,t),this.fireChange(4)}async stashDelete(e,t){await this.container.git.stashDelete(this.uri,e,t),this.fireChange(4)}async stashRename(e,t,i,r){await this.container.git.stashRename(this.uri,e,t,i,r),this.fireChange(4)}async stashSave(e,t,i){await this.container.git.stashSave(this.uri,e,t,i),this.fireChange(4)}async switch(e,t){const{progress:i,...s}={progress:!0,...t};return i?r.window.withProgress({location:r.ProgressLocation.Notification,title:`Switching ${this.formattedName} to ${e}...`,cancellable:!1},(()=>this.switchCore(e,s))):this.switchCore(e,s)}async switchCore(e,t){try{await this.container.git.checkout(this.uri,e,t),this.fireChange(-1)}catch(e){w.Yd.error(e),(0,a.W8)("Unable to switch to reference")}}toAbsoluteUri(e,t){const i=this.container.git.getAbsoluteUri(e,this.uri);return!(t?.validate??1)||this.containsUri(i)?i:void 0}unstar(e){return this.updateStarred(!1,e)}async updateStarred(e,t){null!=t?await this.updateStarredCore("branches",t.id,e):await this.updateStarredCore("repositories",this.id,e),this.fireChange(103)}async updateStarredCore(e,t,i){const r=`starred:${e}`;let s=this.container.storage.getWorkspace(r);s=(0,y.iC)(s,t,i),await this.container.storage.storeWorkspace(r,s),this.fireChange(103)}_etagFileSystem;get etagFileSystem(){return this._etagFileSystem}suspend(){this._suspended=!0}tag(...e){this.runTerminalCommand("tag",...e)}tagDelete(e){Array.isArray(e)||(e=[e]);this.runTerminalCommand("tag","--delete",...e.map((e=>e.ref)))}_fsWatcherDisposable;_fsWatchers=new Map;_fsChangeDelay=W;watchFileSystem(e=2500){const t=(0,s.Vj)();if(this._fsWatchers.set(t,e),null==this._fsWatcherDisposable){const e=r.workspace.createFileSystemWatcher(new r.RelativePattern(this.uri,"**"));this._fsWatcherDisposable=r.Disposable.from(e,e.onDidChange(this.onFileSystemChanged,this),e.onDidCreate(this.onFileSystemChanged,this),e.onDidDelete(this.onFileSystemChanged,this)),this._etagFileSystem=Date.now()}return this.ensureMinFileSystemChangeDelay(),{dispose:()=>this.unWatchFileSystem(t)}}unWatchFileSystem(e){"boolean"==typeof e||(this._fsWatchers.delete(e),0===this._fsWatchers.size)?(this._etagFileSystem=void 0,this._fsChangeDelay=W,this._fsWatchers.clear(),this._fsWatcherDisposable?.dispose(),this._fsWatcherDisposable=void 0):this.ensureMinFileSystemChangeDelay()}ensureMinFileSystemChangeDelay(){const e=(0,f.VV)(this._fsWatchers.values());e!==this._fsChangeDelay&&(this._fsChangeDelay=e,this._fireFileSystemChangeDebounced?.flush(),this._fireFileSystemChangeDebounced=void 0)}fireChange(...e){const t=(0,v.UH)();this._updatedAt=Date.now(),null==this._fireChangeDebounced&&(this._fireChangeDebounced=(0,g.Ds)(this.fireChangeCore.bind(this),250)),this._pendingRepoChange=this._pendingRepoChange?.with(e)??new RepositoryChangeEvent(this,e),this.onDidRepositoryChange(this,new RepositoryChangeEvent(this,e)),this._suspended?w.Yd.debug(t,`queueing suspended ${this._pendingRepoChange.toString(!0)}`):this._fireChangeDebounced()}fireChangeCore(){const e=this._pendingRepoChange;null!=e&&(this._pendingRepoChange=void 0,w.Yd.debug(`Repository(${this.id}) firing ${e.toString(!0)}`),this._onDidChange.fire(e))}fireFileSystemChange(e){const t=(0,v.UH)();this._updatedAt=Date.now(),null==this._fireFileSystemChangeDebounced&&(this._fireFileSystemChangeDebounced=(0,g.Ds)(this.fireFileSystemChangeCore.bind(this),this._fsChangeDelay)),null==this._pendingFileSystemChange&&(this._pendingFileSystemChange={repository:this,uris:[]});const i=this._pendingFileSystemChange;i.uris.push(e),this._suspended?w.Yd.debug(t,`queueing suspended fs changes=${i.uris.map((e=>e.fsPath)).join(", ")}`):this._fireFileSystemChangeDebounced()}async fireFileSystemChangeCore(){let e=this._pendingFileSystemChange;if(null==e)return;this._pendingFileSystemChange=void 0;const t=await this.container.git.excludeIgnoredUris(this.uri,e.uris);0!==t.length&&(t.length!==e.uris.length&&(e={...e,uris:t}),w.Yd.debug(`Repository(${this.id}) firing fs changes=${e.uris.map((e=>e.fsPath)).join(", ")}`),this._onDidChangeFileSystem.fire(e))}async runTerminalCommand(e,...t){await(this.container.git.runGitCommandViaTerminal?.(this.uri,e,t,{execute:!0})),setTimeout((()=>this.fireChange(-1)),2500)}};function N(e){return e instanceof M}D([(0,m.fF)({singleLine:!0})],M.prototype,"setupRepoWatchersCore",1),D([(0,m.fF)()],M.prototype,"onGitIgnoreChanged",1),D([(0,m.fF)()],M.prototype,"onRepositoryChanged",1),D([(0,m.cM)()],M.prototype,"access",1),D([(0,m.cM)()],M.prototype,"supports",1),D([(0,m.cM)()],M.prototype,"addRemote",1),D([(0,m.cM)()],M.prototype,"pruneRemote",1),D([(0,m.cM)()],M.prototype,"removeRemote",1),D([(0,m.cM)()],M.prototype,"branch",1),D([(0,m.cM)()],M.prototype,"branchDelete",1),D([(0,m.cM)()],M.prototype,"cherryPick",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"fetch",1),D([(0,p.H)()],M.prototype,"getLastFetched",1),D([(0,p.H)(),(0,m.cM)({exit:!0})],M.prototype,"getMainRepository",1),D([(0,m.cM)()],M.prototype,"createWorktree",1),D([(0,m.cM)()],M.prototype,"merge",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"pull",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"push",1),D([(0,m.cM)()],M.prototype,"rebase",1),D([(0,m.cM)()],M.prototype,"reset",1),D([(0,m.cM)({singleLine:!0})],M.prototype,"resetCaches",1),D([(0,m.cM)()],M.prototype,"revert",1),D([(0,m.fF)()],M.prototype,"richSearchCommits",1),D([(0,m.fF)()],M.prototype,"searchCommits",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"stashApply",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"stashDelete",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"stashRename",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"stashSave",1),D([(0,p.H)(),(0,m.cM)()],M.prototype,"switch",1),D([(0,m.cM)()],M.prototype,"tag",1),D([(0,m.cM)()],M.prototype,"tagDelete",1),D([(0,m.fF)()],M.prototype,"fireChange",1),D([(0,m.fF)()],M.prototype,"fireFileSystemChange",1),M=D([(0,m.hJ)(((e,t)=>`${t}(${e.id})`))],M)},827:(e,t,i)=>{i.d(t,{Hk:()=>GitStatus,JP:()=>m});var r=i(5255),s=i(6894),n=i(4488),o=i(3620),a=i(5367),c=i(6450),l=i(439),h=i(7881),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor,p=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&u(t,i,n),n};class GitStatus{constructor(e,t,i,r,s,n,o=!1){this.repoPath=e,this.branch=t,this.sha=i,this.files=r,this.state=s,this.upstream=n,this.rebasing=o,this.detached=(0,a.uz)(t),this.detached&&(this.branch=(0,a.Iq)(this.sha))}detached;get conflicts(){return this.files.filter((e=>e.conflicted))}get hasChanges(){return 0!==this.files.length}get hasConflicts(){return this.files.some((e=>e.conflicted))}get ref(){return this.detached?this.sha:this.branch}computeWorkingTreeStatus(){let e=0,t=0,i=0,r=0,s=0,n=0,o=0,a=0,c=0;const l=[],u=[],d=[];for(const p of this.files){switch(p.conflictStatus){case void 0:break;case h.Vz.AddedByBoth:case h.Vz.AddedByUs:case h.Vz.AddedByThem:e++,u.push(p);break;case h.Vz.DeletedByBoth:case h.Vz.DeletedByUs:case h.Vz.DeletedByThem:t++;break;default:i++,l.push(p)}switch(p.indexStatus){case void 0:break;case h.NV.Added:r++,u.push(p);break;case h.NV.Deleted:a++;break;default:n++,u.push(p)}switch(p.workingTreeStatus){case void 0:case h.Bh.Ignored:break;case h.Bh.Added:case h.Bh.Untracked:s++,d.push(p);break;case h.Bh.Deleted:c++;break;default:o++,d.push(p)}}const p=e+i+t,m=r+n+a,g=s+o+c;return{conflicted:p,conflictedAddsAndChanges:l,conflictedStatus:p>0?`+${e} ~${i} -${t}`:"",staged:m,stagedStatus:m>0?`+${r} ~${n} -${a}`:"",stagedAddsAndChanges:u,unstaged:g,unstagedStatus:g>0?`+${s} ~${o} -${c}`:"",unstagedAddsAndChanges:d}}getDiffStatus(){const e={added:0,deleted:0,changed:0};if(0===this.files.length)return e;for(const t of this.files)switch(t.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}return e}getFormattedDiffStatus({compact:e,empty:t,expand:i,prefix:r="",separator:s=" ",suffix:n=""}={}){const{added:a,changed:c,deleted:l}=this.getDiffStatus();if(0===a&&0===c&&0===l)return t??"";if(i){let e="";return a&&(e+=`${(0,o._6)("file",a)} added`),c&&(e+=`${0===e.length?"":s}${(0,o._6)("file",c)} changed`),l&&(e+=`${0===e.length?"":s}${(0,o._6)("file",l)} deleted`),`${r}${e}${n}`}let h="";return e?(0!==a&&(h+=`+${a}`),0!==c&&(h+=`${0===h.length?"":s}~${c}`),0!==l&&(h+=`${0===h.length?"":s}-${l}`)):h+=`+${a}${s}~${c}${s}-${l}`,`${r}${h}${n}`}async getRemote(){if(null==this.upstream)return;const e=await s.W.instance.git.getRemotesWithProviders(this.repoPath);if(0===e.length)return;const t=(0,a.Lo)(this.upstream);return e.find((e=>e.name===t))}getUpstreamStatus(e){return m(this.upstream?{name:this.upstream,missing:!1}:void 0,this.state,e)}}function m(e,t,i){let s=!0,n=!1,a=!1,c="",l=" ",h="";if(null!=i&&({count:s=!0,expand:n=!1,icons:a=!1,prefix:c="",separator:l=" ",suffix:h=""}=i),null==e||0===t.behind&&0===t.ahead)return i?.empty??"";if(n){let i="";return e.missing?i="missing":(t.behind&&(i+=`${(0,o._6)("commit",t.behind,{infix:a?"$(arrow-down) ":void 0})} behind`),t.ahead&&(i+=`${0===i.length?"":l}${(0,o._6)("commit",t.ahead,{infix:a?"$(arrow-up) ":void 0})} ahead`,h.startsWith(` ${e.name.split("/")[0]}`)&&(i+=" of"))),`${c}${i}${h}`}const u=s&&!e.missing;return`${c}${u?t.behind:""}${u||0!==t.behind?r.NE.ArrowDown:""}${l}${u?t.ahead:""}${u||0!==t.ahead?r.NE.ArrowUp:""}${h}`}p([(0,n.H)()],GitStatus.prototype,"conflicts",1),p([(0,n.H)()],GitStatus.prototype,"hasConflicts",1),p([(0,n.H)()],GitStatus.prototype,"computeWorkingTreeStatus",1),p([(0,n.H)()],GitStatus.prototype,"getDiffStatus",1),p([(0,n.H)()],GitStatus.prototype,"getRemote",1);class GitStatusFile{constructor(e,t,i,r,s){if(this.repoPath=e,this.path=r,this.originalPath=s,null!=t&&null!=i)switch(t+i){case"??":this.workingTreeStatus=h.Bh.Untracked;break;case"!!":this.workingTreeStatus=h.Bh.Ignored;break;case"AA":this.conflictStatus=h.Vz.AddedByBoth;break;case"AU":this.conflictStatus=h.Vz.AddedByUs;break;case"UA":this.conflictStatus=h.Vz.AddedByThem;break;case"DD":this.conflictStatus=h.Vz.DeletedByBoth;break;case"DU":this.conflictStatus=h.Vz.DeletedByUs;break;case"UD":this.conflictStatus=h.Vz.DeletedByThem;break;case"UU":this.conflictStatus=h.Vz.ModifiedByBoth}if(null==this.conflictStatus){switch(t){case"A":this.indexStatus=h.NV.Added;break;case"D":this.indexStatus=h.NV.Deleted;break;case"M":this.indexStatus=h.NV.Modified;break;case"R":this.indexStatus=h.NV.Renamed;break;case"C":this.indexStatus=h.NV.Copied}switch(i){case"A":case"?":this.workingTreeStatus=h.Bh.Added;break;case"D":this.workingTreeStatus=h.Bh.Deleted;break;case"M":this.workingTreeStatus=h.Bh.Modified}}}conflictStatus;indexStatus;workingTreeStatus;get conflicted(){return null!=this.conflictStatus}get staged(){return null!=this.indexStatus}get status(){return this.conflictStatus??this.indexStatus??this.workingTreeStatus}get uri(){return s.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}get wip(){return null!=this.workingTreeStatus}getFormattedDirectory(e=!1){return(0,h.OC)(this,e)}getFormattedPath(e={}){return(0,h.PM)(this,e)}getOcticon(){return(0,h.Qw)(this.status)}getStatusText(){return(0,h.K9)(this.status)}getPseudoCommits(e,t){const i=new Date;if(this.conflicted){const r=new h.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!1);return[new c.aM(e,this.repoPath,l.CL,new c._j("You",t?.email??void 0,i),new c._j("You",t?.email??void 0,i),"Uncommitted changes",["HEAD"],"Uncommitted changes",{file:r,files:[r]},void 0,[])]}const r=[],s=this.staged;if(this.wip){const n=s?l.pw:"HEAD",o=new h.K8(this.repoPath,this.path,this.status,this.originalPath,n,void 0,!1);r.push(new c.aM(e,this.repoPath,l.CL,new c._j("You",t?.email??void 0,i),new c._j("You",t?.email??void 0,i),"Uncommitted changes",[n],"Uncommitted changes",{file:o,files:[o]},void 0,[])),i.setMilliseconds(i.getMilliseconds()-1)}if(s){const s=new h.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!0);r.push(new c.aM(e,this.repoPath,l.pw,new c._j("You",t?.email??void 0,i),new c._j("You",t?.email??void 0,i),"Uncommitted changes",["HEAD"],"Uncommitted changes",{file:s,files:[s]},void 0,[]))}return r}getPseudoFileChanges(){if(this.conflicted)return[new h.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!1)];const e=[],t=this.staged;return this.wip&&e.push(new h.K8(this.repoPath,this.path,this.status,this.originalPath,t?l.pw:"HEAD",void 0,!1)),t&&e.push(new h.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!0)),e}}p([(0,n.H)()],GitStatusFile.prototype,"status",1),p([(0,n.H)()],GitStatusFile.prototype,"uri",1)},9502:(e,t,i)=>{i.d(t,{Pj:()=>m,YR:()=>p,YU:()=>d,gE:()=>GitTag});var r=i(6894),s=i(5148),n=i(7512),o=i(4488),a=i(4336),c=i(3620),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n};function d(e,t){return`${e}|tag/${t}`}class GitTag{constructor(e,t,i,r,s,n){this.repoPath=e,this.name=t,this.sha=i,this.message=r,this.date=s,this.commitDate=n,this.id=d(e,t)}refType="tag";id;toString(){return`${(0,a.q4)(this)}(${this.id})`}get formattedDate(){return"absolute"===r.W.instance.TagDateFormatting.dateStyle?this.formatDate(r.W.instance.TagDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.name}formatCommitDate(e){return null!=this.commitDate?(0,n.p6)(this.commitDate,e??"MMMM Do, YYYY h:mma"):""}formatCommitDateFromNow(){return null!=this.commitDate?(0,n.Zh)(this.commitDate):""}formatDate(e){return null!=this.date?(0,n.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,n.Zh)(this.date):""}getBasename(){const e=this.name.lastIndexOf("/");return-1!==e?this.name.substring(e+1):this.name}}function p(e){return e instanceof GitTag}function m(e,t){switch((t={orderBy:s.D.get("sortTagsBy"),...t}).orderBy){case"date:asc":return e.sort(((e,t)=>(e.date?.getTime()??0)-(t.date?.getTime()??0)));case"name:asc":return e.sort(((e,t)=>(0,c.dm)(e.name,t.name)));case"name:desc":return e.sort(((e,t)=>(0,c.dm)(t.name,e.name)));default:return e.sort(((e,t)=>(t.date?.getTime()??0)-(e.date?.getTime()??0)))}}u([(0,o.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitTag.prototype,"formatCommitDate",1),u([(0,o.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitTag.prototype,"formatDate",1),u([(0,o.H)()],GitTag.prototype,"getBasename",1)},2674:(e,t,i)=>{i.d(t,{K:()=>m,e:()=>p});var r=i(9496),s=i(6894),n=i(4488),o=i(5116),a=i(3700),c=i(4321),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n};const d=class _GitWorktree{constructor(e,t,i,r,s,n,o,a){this.main=e,this.type=t,this.repoPath=i,this.uri=r,this.locked=s,this.prunable=n,this.sha=o,this.branch=a}static is(e){return e instanceof _GitWorktree}get opened(){return this.workspaceFolder?.uri.toString()===this.uri.toString()}get name(){switch(this.type){case"bare":return"(bare)";case"detached":return(0,c.zL)(this.sha);default:return this.branch||this.friendlyPath}}get friendlyPath(){return _GitWorktree.getFriendlyPath(this.uri)}get workspaceFolder(){return r.workspace.getWorkspaceFolder(this.uri)}_branch;getBranch(){return"branch"!==this.type||null==this.branch?Promise.resolve(void 0):(null==this._branch&&(this._branch=s.W.instance.git.getBranches(this.repoPath,{filter:e=>e.name===this.branch}).then((e=>e.values[0]))),this._branch)}_status;getStatus(e){return"bare"===this.type?Promise.resolve(void 0):((null==this._status||e?.force)&&(this._status=s.W.instance.git.getStatusForRepo(this.uri.fsPath)),this._status)}static getFriendlyPath(e){const t=r.workspace.getWorkspaceFolder(e);if(null==t)return(0,a.AH)(e.fsPath);const i=(0,a.AH)((0,a.Gf)(t.uri.fsPath,e.fsPath));return 0===i.length?t.name:i}};u([(0,n.H)()],d.prototype,"friendlyPath",1),u([(0,n.H)()],d.prototype,"workspaceFolder",1);let p=d;async function m(e,t,i,r,s){null==i||Array.isArray(i)||(i=[i]),r??=await e.getWorktrees();for(const n of r){if(n.branch===t)return n;if(null!=i&&null!=n.branch){s??=new o.X((t=>e.getBranches(null!=t?{paging:t}:void 0)));for await(const e of s.values())if(e.name===n.branch){if(null!=e.upstream?.name&&(i.includes(e.upstream.name)||e.upstream.name.startsWith("remotes/")&&i.includes(e.upstream.name.substring(8))))return n;break}}}}},4794:(e,t,i)=>{i.d(t,{Sk:()=>n,gK:()=>s});i(6398),i(3050);const r="";const s=/^(?:(git:\/\/)(.*?)\/|(https?:\/\/)(?:.*?@)?(.*?)\/|git@(.*):|(ssh:\/\/)(?:.*@)?(.*?)(?::.*?)?(?:\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;function n(e){const t=s.exec(e);return null==t?[r,r,e]:[t[1]||t[3]||t[6],t[2]||t[4]||t[5]||t[7]||t[8],t[9].replace(/\.git\/?$/,r)]}},2075:(e,t,i)=>{i.d(t,{at:()=>P,gu:()=>GitHubRemote,z4:()=>GitHubAuthenticationProvider});var r=i(9496),s=i(5255),n=i(7512),o=i(1219),a=i(4488),c=i(8786),l=i(3620),h=i(2509),u=i(8452),d=i(4321),p=i(3084),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&m(t,i,n),n};const w=/\b([^/\s]+\/[^/\s]+?)(?:\\)?#([0-9]+)\b(?!]\()/g,v=/^\/([^/]+)\/([^/]+?)\/blob(.+)$/i,y=/^L(\d+)(?:-L(\d+))?$/,b=Object.freeze({id:"github",scopes:["repo","read:user","user:email"]}),C=Object.freeze({id:"github-enterprise",scopes:["repo","read:user","user:email"]});function A(e){return(0,l.qq)(e,"github.com")}class GitHubRemote extends p.D{get authProvider(){return A(this.domain)?b:C}constructor(e,t,i,r,s,n=!1){super(e,t,i,r,s,n)}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api/v3`:`https://api.${this.domain}`}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,description:`${this.name} Issue or Pull Request #<num>`},{prefix:"gh-",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,ignoreCase:!0,description:`${this.name} Issue or Pull Request #<num>`},{tokenize:(e,t,i,r,o,a)=>"plaintext"===t?e:e.replace(w,((e,h,d)=>{const p=(0,c.M)(`${this.protocol}://${this.domain}/${(0,l.I6)(h)}/issues/${d}`),m=` "Open Issue or Pull Request #${d} from ${h} on ${this.name}"`,g=`\0${i.size}\0`;let f;"markdown"===t?i.set(g,`[${e}](${p}${m})`):"html"===t&&i.set(g,`<a href="${p}" title=${m}>${e}</a>`);const w=r?.get(d)?.[0];if(null!=w?.value)if(w.paused)null==a||o?.has(d)||(f=a.size+1,a.set(f,`[${(0,u.sy)()} ${this.name} Issue or Pull Request ${h}#${d} $(loading~spin)](${p}${m}")`));else{const t=w.value,i=(0,l.ry)(t.title.trim());null==a||o?.has(d)||(f=a.size+1,a.set(f,`[${(0,u.sy)(t)} **${i}**](${p}${m})\\\n${s.NE.Space.repeat(5)}${e} ${t.state} ${(0,n.Zh)(t.closedDate??t.date)}`))}else null==a||o?.has(d)||(f=a.size+1,a.set(f,`[${(0,u.sy)()} ${this.name} Issue or Pull Request ${h}#${d}](${p}${m})`));return g})),parse:(e,t)=>{let i,r,s;for(;;){if(s=w.exec(e),null==s)break;[,i,r]=s;const[n,o]=i.split("/",2);t.set(r,{provider:this,id:r,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/issues/${r}`,title:`Open Issue or Pull Request #<num> from ${i} on ${this.name}`,description:`${this.name} Issue or Pull Request ${i}#${r}`,descriptor:{owner:n,name:o}})}}}]),this._autolinks}get avatarUri(){const[e]=this.splitPath();return r.Uri.parse(`https://avatars.githubusercontent.com/${e}`)}get icon(){return"github"}get id(){return"github"}get gkProviderId(){return A(this.domain)?"github":"githubEnterprise"}get name(){return this.formatName("GitHub")}async connect(){return!(!A(this.domain)&&!await(0,p.e)("GitHub Enterprise instance",this.container))&&super.connect()}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let r,s;if(t.fragment){const e=y.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}const n=v.exec(t.path);if(null==n)return;const[,,,o]=n;let a,c=o.indexOf("/",1);if(-1!==c){const t=o.substring(1,c);if((0,d.D3)(t)){const t=e.toAbsoluteUri(o.substr(c),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}const l=new Map;c=o.length;do{c=o.lastIndexOf("/",c-1),a=o.substring(1,c),l.set(a,o.substr(c))}while(c>0);if(0!==l.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&l.has(e.getNameWithoutRemote())});for(const n of t){const t=l.get(n.getNameWithoutRemote());if(null==t)continue;const o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}${i}${t}`)}getUrlForCreatePullRequest(e,t){if(e.remote.url===t.remote.url)return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${t.branch}`);const[i]=t.remote.path.split("/",1);return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${i}:${t.branch}`)}getUrlForFile(e,t,i,r){let s;return s=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-L${r.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/blob/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/blob/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${s}`}async getProviderAccountForCommit({accessToken:e},t,i){const[r,s]=this.splitPath();return(await this.container.github)?.getAccountForCommit(this,e,r,s,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i){const[r,s]=this.splitPath();return(await this.container.github)?.getAccountForEmail(this,e,r,s,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.github)?.getDefaultBranch(this,e,t,i,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t,i){let r,s;return null!=i?({owner:r,name:s}=i):[r,s]=this.splitPath(),(await this.container.github)?.getIssueOrPullRequest(this,e,r,s,Number(t),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,r){const[s,n]=this.splitPath(),{include:o,...a}=r??{},c=(await Promise.resolve().then(i.bind(i,3878))).toGitHubPullRequestState;return(await this.container.github)?.getPullRequestForBranch(this,e,s,n,t,{...a,include:o?.map((e=>c(e))),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t){const[i,r]=this.splitPath();return(await this.container.github)?.getPullRequestForCommit(this,e,i,r,t,{baseUrl:this.apiBaseUrl})}async getProviderRepositoryMetadata({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.github)?.getRepositoryMetadata(this,e,t,i,{baseUrl:this.apiBaseUrl})}async searchProviderMyPullRequests({accessToken:e}){return(await this.container.github)?.searchMyPullRequests(this,e,{repos:[this.path],baseUrl:this.apiBaseUrl})}async searchProviderMyIssues({accessToken:e}){return(await this.container.github)?.searchMyIssues(this,e,{repos:[this.path],baseUrl:this.apiBaseUrl})}}f([(0,a.H)()],GitHubRemote.prototype,"authProvider",1),f([(0,o.cM)()],GitHubRemote.prototype,"connect",1);const S=/^(?:(\d+)\+)?([a-zA-Z\d-]{1,39})@users\.noreply\.(.*)$/i;function P(e){const t=S.exec(e);if(null==t)return;const[,i,r,s]=t;return{userId:i,login:r,authority:s}}class GitHubAuthenticationProvider{_disposable;constructor(e){this._disposable=e.integrationAuthentication.registerProvider("github-enterprise",this)}dispose(){this._disposable.dispose()}getSessionId(e){return e?.domain??""}async createSession(e){const t=r.window.createInputBox();t.ignoreFocusOut=!0;const i=[];let s;try{const n={iconPath:new r.ThemeIcon("link-external"),tooltip:"Open the GitHub Access Tokens Page"};s=await new Promise((s=>{i.push(t.onDidHide((()=>s(void 0))),t.onDidChangeValue((()=>t.validationMessage=void 0)),t.onDidAccept((()=>{const e=t.value.trim();e?s(e):t.validationMessage="A personal access token is required"})),t.onDidTriggerButton((t=>{t===n&&r.env.openExternal(r.Uri.parse(`https://${e?.domain??"github.com"}/settings/tokens`))}))),t.password=!0,t.title="GitHub Authentication"+(e?.domain?`  • ${e.domain}`:""),t.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,t.prompt=(0,h.gn)("input-prompt-links")?`Paste your [GitHub Personal Access Token](https://${e?.domain??"github.com"}/settings/tokens "Get your GitHub Access Token")`:"Paste your GitHub Personal Access Token",t.buttons=[n],t.show()}))}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}if(s)return{id:this.getSessionId(e),accessToken:s,scopes:[],account:{id:"",label:""}}}}},2795:(e,t,i)=>{i.d(t,{x:()=>RemoteProvider});var r=i(9496),s=i(4488),n=i(8786),o=i(6503),a=Object.defineProperty,c=Object.getOwnPropertyDescriptor;class RemoteProvider{constructor(e,t,i="https",r,s=!1){this.domain=e,this.path=t,this.protocol=i,this.custom=s,this._name=r}type="simple";_name;get remoteKey(){return this.domain?`${this.domain}/${this.path}`:this.path}get autolinks(){return[]}get avatarUri(){}get displayPath(){return this.path}get icon(){return"remote"}get owner(){return this.splitPath()[0]}get repoName(){return this.splitPath()[1]}async copy(e){const t=this.url(e);null!=t&&await r.env.clipboard.writeText(t)}hasRichIntegration(){return"rich"===this.type}get maybeConnected(){return!1}open(e){return this.openUrl(this.url(e))}url(e){switch(e.type){case o.J.Branch:return this.getUrlForBranch(e.branch);case o.J.Branches:return this.getUrlForBranches();case o.J.Commit:return this.getUrlForCommit(e.sha);case o.J.Comparison:return this.getUrlForComparison?.(e.base,e.compare,e.notation??"...");case o.J.CreatePullRequest:return this.getUrlForCreatePullRequest?.(e.base,e.compare);case o.J.File:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,void 0,e.range);case o.J.Repo:return this.getUrlForRepository();case o.J.Revision:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,null!=e.sha?e.sha:void 0,e.range);default:return}}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}formatName(e){return null!=this._name?this._name:`${e}${this.custom?` (${this.domain})`:""}`}splitPath(){const e=this.path.indexOf("/");return[this.path.substring(0,e),this.path.substring(e+1)]}getUrlForRepository(){return this.baseUrl}async openUrl(e){if(null!=e)return r.env.openExternal(e)}encodeUrl(e){return(0,n.M)(e)?.replace(/#/g,"%23")}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&a(t,i,n)})([(0,s.H)()],RemoteProvider.prototype,"remoteKey",1)},3084:(e,t,i)=>{i.d(t,{D:()=>v,e:()=>y});var r=i(9496),s=i(9827),n=i(429),o=i(4575),a=i(7925),c=i(6516),l=i(5148),h=i(5432),u=i(1219),d=i(4336),p=i(6004),m=i(2795),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor,w=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&g(t,i,n),n};let v=class extends m.x{constructor(e,t,i,s,n,o){super(t,i,s,n,o),this.container=e,this._disposable=r.Disposable.from(l.D.onDidChange((e=>{l.D.changed(e,"remotes")&&this._ignoreSSLErrors.clear()})),e.richRemoteProviders.onDidChangeConnectionState((e=>{e.key===this.key&&("disconnected"===e.reason?this.disconnect({silent:!0}):"connected"===e.reason&&this.ensureSession(!1))})),r.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged,this)),e.context.subscriptions.push(this._disposable),this.shouldConnect&&this.isConnected()}type="rich";_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_disposable;disposed=!1;dispose(){this._disposable.dispose(),this.disposed=!0}get authProviderDescriptor(){return{domain:this.domain,scopes:this.authProvider.scopes}}get key(){return this.custom?`${this.name}:${this.domain}`:this.name}get connectedKey(){return`connected:${this.key}`}get maybeConnected(){return void 0===this._session?void 0:null!==this._session}get shouldConnect(){return this.container.richRemoteProviders.isConnected(this.key)}_session;session(){return void 0===this._session?this.ensureSession(!1):this._session??void 0}onAuthenticationSessionsChanged(e){e.provider.id===this.authProvider.id&&this.ensureSession(!1)}async connect(){try{const e=await this.ensureSession(!0);return Boolean(e)}catch(e){return!1}}async disconnect(e){if(e?.currentSessionOnly&&null===this._session)return;const t=null!=this._session;if(t&&!e?.silent)if(e?.currentSessionOnly)(0,a.mm)(this.name);else{const e={title:"Disable"},t={title:"Disable & Sign Out"},i={title:"Cancel",isCloseAffordance:!0};let s;if(s=this.container.integrationAuthentication.hasProvider(this.authProvider.id)?await r.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?\n\nNote: signing out clears the saved authentication.`,{modal:!0},e,t,i):await r.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?`,{modal:!0},e,i),null==s||s===i)return;s===t&&this.container.integrationAuthentication.deleteSession(this.authProvider.id,this.authProviderDescriptor)}this.resetRequestExceptionCount(),this._session=null,t&&(e?.currentSessionOnly||this.container.storage.storeWorkspace(this.connectedKey,!1),this._onDidChange.fire(),e?.silent||e?.currentSessionOnly||this.container.richRemoteProviders.disconnected(this.key))}async reauthenticate(){void 0!==this._session&&(this._session=void 0,await this.ensureSession(!0,!0))}requestExceptionCount=0;resetRequestExceptionCount(){this.requestExceptionCount=0}handleProviderException(e,t,i){return e instanceof r.CancellationError||(d.Yd.error(e,t),(e instanceof o._7||e instanceof o.Bn)&&this.trackRequestException()),i}trackRequestException(){this.requestExceptionCount++,this.requestExceptionCount>=5&&null!==this._session&&this.disconnect({currentSessionOnly:!0})}async isConnected(){return null!=await this.session()}async getAccountForCommit(e,t){const i=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderAccountForCommit(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return this.handleProviderException(e,i,void 0)}}async getAccountForEmail(e,t){const i=(0,p.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderAccountForEmail(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return this.handleProviderException(e,i,void 0)}}async getDefaultBranch(){const e=(0,p.UH)();if(!(this.maybeConnected??await this.isConnected()))return;return this.container.cache.getRepositoryDefaultBranch(this,(()=>({value:(async()=>{try{const e=await this.getProviderDefaultBranch(this._session);return this.resetRequestExceptionCount(),e}catch(t){return this.handleProviderException(t,e,void 0)}})()})))}_ignoreSSLErrors=new Map;getIgnoreSSLErrors(){if(n.$L)return!1;let e=this._ignoreSSLErrors.get(this.id);if(void 0===e){const t=l.D.get("remotes")?.find((e=>e.type.toLowerCase()===this.id&&e.domain===this.domain));e=t?.ignoreSSLErrors??!1,this._ignoreSSLErrors.set(this.id,e)}return e}async getRepositoryMetadata(e){const t=(0,p.UH)();if(!(this.maybeConnected??await this.isConnected()))return;return this.container.cache.getRepositoryMetadata(this,(()=>({value:(async()=>{try{const e=await this.getProviderRepositoryMetadata(this._session);return this.resetRequestExceptionCount(),e}catch(e){return this.handleProviderException(e,t,void 0)}})()})))}async getIssueOrPullRequest(e,t){const i=(0,p.UH)();if(!(this.maybeConnected??await this.isConnected()))return;return this.container.cache.getIssueOrPullRequest(e,t,this,(()=>({value:(async()=>{try{const i=await this.getProviderIssueOrPullRequest(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return this.handleProviderException(e,i,void 0)}})()})))}async getPullRequestForBranch(e,t){const i=(0,p.UH)();if(!(this.maybeConnected??await this.isConnected()))return;return this.container.cache.getPullRequestForBranch(e,this,(()=>({value:(async()=>{try{const i=await this.getProviderPullRequestForBranch(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return this.handleProviderException(e,i,void 0)}})()})))}async getPullRequestForCommit(e){const t=(0,p.UH)();if(!(this.maybeConnected??await this.isConnected()))return;return this.container.cache.getPullRequestForSha(e,this,(()=>({value:(async()=>{try{const t=await this.getProviderPullRequestForCommit(this._session,e);return this.resetRequestExceptionCount(),t}catch(e){return this.handleProviderException(e,t,void 0)}})()})))}async searchMyIssues(){const e=(0,p.UH)();try{const e=await this.searchProviderMyIssues(this._session);return this.resetRequestExceptionCount(),e}catch(t){return this.handleProviderException(t,e,void 0)}}async searchMyPullRequests(){const e=(0,p.UH)();try{const e=await this.searchProviderMyPullRequests(this._session);return this.resetRequestExceptionCount(),e}catch(t){return this.handleProviderException(t,e,void 0)}}async ensureSession(e,t=!1){if(null!=this._session)return this._session;if(!l.D.get("integrations.enabled"))return;if(e)await this.container.storage.deleteWorkspace(this.connectedKey);else if(!1===this.container.storage.getWorkspace(this.connectedKey))return;let i;try{i=this.container.integrationAuthentication.hasProvider(this.authProvider.id)?await this.container.integrationAuthentication.getSession(this.authProvider.id,this.authProviderDescriptor,{createIfNeeded:e,forceNewSession:t}):await(0,s.a_)(this.getIgnoreSSLErrors(),(()=>r.authentication.getSession(this.authProvider.id,this.authProvider.scopes,{createIfNone:t?void 0:e,silent:!e&&!t||void 0,forceNewSession:!!t||void 0})))}catch(e){if(await this.container.storage.deleteWorkspace(this.connectedKey),e instanceof Error&&e.message.includes("User did not consent"))return;i=null}return void 0!==i||e||await this.container.storage.deleteWorkspace(this.connectedKey),this._session=i??null,this.resetRequestExceptionCount(),null!=i&&(await this.container.storage.storeWorkspace(this.connectedKey,!0),queueMicrotask((()=>{this._onDidChange.fire(),this.container.richRemoteProviders.connected(this.key)}))),i??void 0}};async function y(e,t){const i=`Connecting to a ${e} instance for rich integration features requires a trial or paid plan.`;for(;;){const e=await t.subscription.getSubscription();if(!1===e.account?.verified){const e={title:"Resend Verification"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${i}\n\nYou must verify your email before you can continue.`,{modal:!0},e,s)===e&&await t.subscription.resendVerification())continue;return!1}const s=e.plan.effective.id;if((0,c.aG)(s))break;if(null==e.account&&!(0,c.gA)(e)){const e={title:"Preview Pro"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${i}\n\nDo you want to preview ✨ features for 3 days?`,{modal:!0},e,s)!==e)return!1;t.subscription.startPreviewTrial();break}if(null==e.account){const e={title:"Start Free GitKraken Trial"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${i}\n\nDo you want to continue to use ✨ features on privately hosted repos, free for an additional 7 days?`,{modal:!0},e,s)===e&&await t.subscription.loginOrSignUp())continue}else{const e={title:"Upgrade to Pro"},s={title:"Cancel",isCloseAffordance:!0};await r.window.showWarningMessage(`${i}\n\nDo you want to continue to use ✨ features on privately hosted repos?`,{modal:!0},e,s)===e&&t.subscription.purchase()}return!1}return!0}w([(0,u.cM)()],v.prototype,"connect",1),w([(0,h.H)(),(0,u.cM)()],v.prototype,"disconnect",1),w([(0,u.cM)()],v.prototype,"reauthenticate",1),w([(0,u.fF)()],v.prototype,"trackRequestException",1),w([(0,h.H)(),(0,u.fF)({exit:!0})],v.prototype,"isConnected",1),w([(0,h.H)(),(0,u.fF)()],v.prototype,"getAccountForCommit",1),w([(0,h.H)(),(0,u.fF)()],v.prototype,"getAccountForEmail",1),w([(0,u.fF)()],v.prototype,"getDefaultBranch",1),w([(0,u.fF)()],v.prototype,"getRepositoryMetadata",1),w([(0,u.fF)()],v.prototype,"getIssueOrPullRequest",1),w([(0,u.fF)()],v.prototype,"getPullRequestForBranch",1),w([(0,u.fF)()],v.prototype,"getPullRequestForCommit",1),w([(0,h.H)(),(0,u.fF)()],v.prototype,"searchMyIssues",1),w([(0,h.H)(),(0,u.fF)()],v.prototype,"searchMyPullRequests",1),w([(0,h.H)()],v.prototype,"ensureSession",1),v=w([(0,u.hJ)(((e,t)=>`${t}(${e.remoteKey})`))],v)},6934:(e,t,i)=>{i.d(t,{FL:()=>a,KQ:()=>o,WY:()=>s,pD:()=>u,pU:()=>c,uP:()=>n});var r=i(4321);const s=new Set(["","=:","message:","@:","author:","#:","commit:","?:","file:","~:","change:"]);function n(e){return{query:e.pattern,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex}}function o(e){return{pattern:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex}}function a(e){return`${"query"in e?e.query:e.pattern}|${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}`}function c(e){return e.map((e=>`#:${"string"==typeof e?(0,r.zL)(e):e.name}`)).join(" ")}const l=new Map([["","message:"],["=:","message:"],["message:","message:"],["@:","author:"],["author:","author:"],["#:","commit:"],["commit:","commit:"],["?:","file:"],["file:","file:"],["~:","change:"],["change:","change:"]]),h=/(?:(?<op>=:|message:|@:|author:|#:|commit:|\?:|file:|~:|change:)\s?(?<value>".+?"|\S+}?))|(?<text>\S+)(?!(?:=|message|@|author|#|commit|\?|file|~|change):)/gi;function u(e){const t=new Map;let i,s,n,o;do{if(o=h.exec(e.query),null==o?.groups)break;if(i=l.get(o.groups.op),({value:s,text:n}=o.groups),n&&(l.has(n.trim())||(i="@me"===n?"author:":(0,r.D3)(n)?"commit:":"message:",s=n)),i&&s){let e=t.get(i);null==e&&(e=new Set,t.set(i,e)),e.add(s)}}while(null!=o);return t}},1062:(e,t,i)=>{i.d(t,{jw:()=>m,nN:()=>f,yq:()=>g});var r=i(9496),s=i(1848),n=i(1744),o=i(5255),a=i(9338),c=i(7462),l=i(439),h=i(4321),u=i(2226),d=i(5148),p=i(7469);async function m(e,t,i,a,c){const u=i.sha;let p=null;const m=await async function(){if(null==t.file)return;const r=a+1,s=t.lines.find((e=>e.line===r))??t.lines[0];let n;if(t.isUncommitted)(0,h.rD)(u)&&(n=u);else if(p=s.previousSha,n=p,null==n)return`\`\`\`diff\n+ ${c.lineAt(a).text}\n\`\`\``;let o=t.file.originalPath;null==o&&i.fsPath!==t.file.uri.fsPath&&(o=t.file.path),a=s.line-1;let m=await e.git.getDiffForLine(i,a,n,u);return null==m&&null==n&&u!==l.pw&&(m=await e.git.getDiffForLine(i,a,void 0,l.pw)),null!=m?function(e,t){if("hunk"===t||null==t&&"hunk"===d.D.get("hovers.changesDiff"))return w(e.hunk);return`\`\`\`diff${null==e.line.previous?"":`\n- ${e.line.previous.trim()}`}${null==e.line.current?"":`\n+ ${e.line.current.trim()}`}\n\`\`\``}(m):void 0}();if(null==m)return;let g,f,v;if(t.isUncommitted){const e=await t.getPreviousComparisonUrisForLine(a,u);if(null==e?.previous)return;g=`[$(compare-changes)](${s.V.getMarkdownCommandArgs({lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},repoPath:t.repoPath,line:a})} "Open Changes")`,f=null==e.previous.sha||e.previous.isUncommitted?`  &nbsp;_${(0,h.zL)(e.previous.sha,{strings:{working:"Working Tree"}})}_ &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; `:`  &nbsp;[$(git-commit) ${(0,h.zL)(e.previous.sha||"")}](${n.o.getMarkdownCommandArgs(e.previous.sha||"")} "Show Commit") &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; `,v=null==e.current.sha||e.current.isUncommitted?`_${(0,h.zL)(e.current.sha,{strings:{working:"Working Tree"}})}_`:`[$(git-commit) ${(0,h.zL)(e.current.sha||"")}](${n.o.getMarkdownCommandArgs(e.current.sha||"")} "Show Commit")`}else g=`[$(compare-changes)](${s.V.getMarkdownCommandArgs(t,a)} "Open Changes")`,null===p&&(p=await t.getPreviousSha()),p&&(f=`  &nbsp;[$(git-commit) ${(0,h.zL)(p)}](${n.o.getMarkdownCommandArgs(p)} "Show Commit") &nbsp;${o.NE.ArrowLeftRightLong}&nbsp;`),v=`[$(git-commit) ${t.shortSha}](${n.o.getMarkdownCommandArgs(t.sha)} "Show Commit")`;g=`${m}\n---\n\nChanges${f??" added in "}${v} &nbsp;&nbsp;|&nbsp;&nbsp; ${g}`;const y=new r.MarkdownString(g,!0);return y.supportHtml=!0,y.isTrusted=!0,y}async function g(e,t,i,a){const l=w(a);let h,u,d;if(null==e)u="_Working Tree_",d="_Unsaved_";else{const r=await e.findFile(t);if(null==r)return;h=`[$(compare-changes)](${s.V.getMarkdownCommandArgs({lhs:{sha:e.sha,uri:c.YY.fromFile(r,t.repoPath,void 0,!0).toFileUri()},rhs:{sha:"",uri:t.toFileUri()},repoPath:t.repoPath,line:i})} "Open Changes")`,u=`[$(git-commit) ${e.shortSha}](${n.o.getMarkdownCommandArgs(e.sha)} "Show Commit")`,d="_Working Tree_"}h=`${l}\n---\n\nLocal Changes  &nbsp;${u} &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; ${d}${null==h?"":` &nbsp;&nbsp;|&nbsp;&nbsp; ${h}`}`;const p=new r.MarkdownString(h,!0);return p.supportHtml=!0,p.isTrusted=!0,p}async function f(e,t,i,s,n){const o=await(0,u.Zo)(n?.remotes??e.git.getBestRemotesWithProviders(t.repoPath),n?.cancellation,n?.timeout);let c,l;if(o.paused){if("cancelled"===o.reason)return}else c=o.value,[l]=c;const h=d.D.get("hovers"),m=null!=l?.provider&&(n?.autolinks||!1!==n?.autolinks&&h.autolinks.enabled&&h.autolinks.enhanced)&&a.i.has(h.detailsMarkdownFormat,"message"),g=l?.hasRichIntegration()&&!1!==l.provider.maybeConnected&&(n?.pullRequests||!1!==n?.pullRequests&&h.pullRequests.enabled)&&a.i.has(n.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState"),[f,w,v,y]=await Promise.allSettled([m?(0,u.IN)(n?.enrichedAutolinks??t.getEnrichedAutolinks(l),n?.cancellation,n?.timeout):void 0,g?(0,u.Zo)(n?.pullRequest??t.getAssociatedPullRequest(l),n?.cancellation,n?.timeout):void 0,e.vsls.enabled?(0,p.HO)(e.vsls.getContactPresence(t.author.email),250,n?.cancellation):void 0,t.isUncommitted?t.getPreviousComparisonUrisForLine(s,i.sha):void 0,null==t.message?t.ensureFullDetails():void 0]);if(n?.cancellation?.isCancellationRequested)return;const b=(0,p.Sb)(f),C=(0,p.Sb)(w),A=(0,p.Sb)(v),S=(0,p.Sb)(y),P=await a.i.fromTemplateAsync(n.format,t,{enrichedAutolinks:null==b?.value||b.paused?void 0:b.value,dateFormat:null===n.dateFormat?"MMMM Do, YYYY h:mma":n.dateFormat,editor:{line:s,uri:i},getBranchAndTagTips:n?.getBranchAndTagTips,messageAutolinks:n?.autolinks||!1!==n?.autolinks&&h.autolinks.enabled,pullRequest:C?.value,presence:A,previousLineComparisonUris:S,outputFormat:"markdown",remotes:c}),k=new r.MarkdownString(P,!0);return k.supportHtml=!0,k.isTrusted=!0,k}function w(e){return`\`\`\`diff\n${e.contents.trim()}\n\`\`\``}},7925:(e,t,i)=>{i.d(t,{B8:()=>h,EB:()=>u,G:()=>l,Nl:()=>m,QP:()=>w,RR:()=>c,W8:()=>d,bi:()=>f,f3:()=>g,mm:()=>v,s$:()=>b,vF:()=>y,xs:()=>C,zk:()=>p});var r=i(9496),s=i(5255),n=(i(6592),i(9529)),o=i(5148),a=i(4336);function c(e){return A("info",null==e?"There is no previous commit.":`Commit ${e.shortSha} (${e.author.name}, ${e.formattedDate}) has no previous commit.`,"suppressCommitHasNoPreviousCommitWarning")}function l(e){return A("warn",`${e}. The commit could not be found.`,"suppressCommitNotFoundWarning")}async function h(e){const t={title:"Create Pull Request..."};return await A("info",`Would you like to create a Pull Request for branch '${e}'?`,"suppressCreatePullRequestPrompt",{title:"Don't Show Again"},t)===t}async function u(){const e={title:"Disable Debug Logging"};return await A("warn","GitLens debug logging is currently enabled. Unless you are reporting an issue, it is recommended to be disabled. Would you like to disable it?","suppressDebugLoggingWarning",{title:"Don't Show Again"},e)===e}async function d(e){if(a.Yd.enabled("error")){null!=await A("error",`${e}. See output channel for more details.`,void 0,null,{title:"Open Output Channel"})&&a.Yd.showOutputChannel()}else{null!=await A("error",`${e}. If the error persists, please enable debug logging and try again.`,void 0,null,{title:"Enable Debug Logging"})&&(0,n.P0)(s.Gh.EnableDebugLogging)}}function p(e){return A("warn",`${e}. The file is probably not under source control.`,"suppressFileNotUnderSourceControlWarning")}function m(e){return A("error",`This GitLens pre-release version (${e}) has expired. Please upgrade to a more recent version.`)}function g(e){return A("warn",`${e}. The line has uncommitted changes.`,"suppressLineUncommittedWarning")}function f(e){return A("warn",`${e}. No repository could be found.`,"suppressNoRepositoryWarning")}function w(){return A("warn","Closing either the git-rebase-todo file or the Rebase Editor will start the rebase.","suppressRebaseSwitchToTextWarning")}function v(e){return A("error",`Rich integration with ${e} has been disconnected for this session, because of too many failed requests.`,"suppressIntegrationDisconnectedTooManyFailedRequestsWarning",void 0,{title:"OK"})}function y(e){return A("error",e,"suppressIntegrationRequestFailed500Warning",void 0,{title:"OK"})}function b(e){return A("error",`${e} request timed out.`,"suppressIntegrationRequestTimedOutWarning",void 0,{title:"OK"})}async function C(e){const t={title:"Switch to New Layout"};await A("info",`Upgraded to GitLens ${e} — [see what's new](https://help.gitkraken.com/gitlens/gitlens-release-notes-current/ "See what's new in GitLens ${e}").\nWe've reimagined and rearranged our views for greater focus and productivity, and recommend switching to the new layout — [learn more and tell us what you think](https://github.com/gitkraken/vscode-gitlens/discussions/2721 "Learn more about what's changed")!`,void 0,null,t)===t&&(0,n.P0)(s.Gh.ResetViewsLayout)}async function A(e,t,i,s={title:"Don't Show Again"},...n){if(a.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)})`),null!=i&&o.D.get(`advanced.messages.${i}`))return void a.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)}) skipped`);let c;switch(null!=i&&null!==s&&n.push(s),e){case"info":c=await r.window.showInformationMessage(t,...n);break;case"warn":c=await r.window.showWarningMessage(t,...n);break;case"error":c=await r.window.showErrorMessage(t,...n)}return null==i||null!==s&&c!==s||(a.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)}) don't show again requested`),await function(e){const t={...o.D.get("advanced.messages")};t[e]=!0;for(const[e,i]of Object.entries(t))!0!==i&&delete t[e];return o.D.update("advanced.messages",t,r.ConfigurationTarget.Global)}(i),c!==s)?(a.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)}) returned ${null!=c?c.title:c}`),c):void 0}},9679:(e,t,i)=>{i.d(t,{l:()=>o});var r=i(9496),s=i(6894),n=i(5148);async function o(e,t){if(!n.D.get("cloudPatches.enabled")){const e={title:"Enable"},t={title:"Cancel",isCloseAffordance:!0};if(await r.window.showInformationMessage("Cloud Patches are currently disabled. Would you like to enable them?",{modal:!0},e,t)!==e)return;await n.D.updateEffective("cloudPatches.enabled",!0)}return"create"===e.mode&&(t={...t,preserveFocus:!1,preserveVisibility:!1}),s.W.instance.patchDetailsView.show(t,e)}},7467:(e,t,i)=>{function r(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&void 0!==process.version?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function s(e){return"[object Object]"===Object.prototype.toString.call(e)}function n(e){var t,i;return!1!==s(e)&&(void 0===(t=e.constructor)||!1!==s(i=t.prototype)&&!1!==i.hasOwnProperty("isPrototypeOf"))}i.r(t),i.d(t,{GitHubApi:()=>GitHubApi});var o=`octokit-endpoint.js/9.0.2 ${r()}`;function a(e,t){const i=Object.assign({},e);return Object.keys(t).forEach((r=>{n(t[r])?r in e?i[r]=a(e[r],t[r]):Object.assign(i,{[r]:t[r]}):Object.assign(i,{[r]:t[r]})})),i}function c(e){for(const t in e)void 0===e[t]&&delete e[t];return e}function l(e,t,i){if("string"==typeof t){let[e,r]=t.split(" ");i=Object.assign(r?{method:e,url:r}:{url:e},i)}else i=Object.assign({},t);var r;i.headers=(r=i.headers)?Object.keys(r).reduce(((e,t)=>(e[t.toLowerCase()]=r[t],e)),{}):{},c(i),c(i.headers);const s=a(e||{},i);return"/graphql"===i.url&&(e&&e.mediaType.previews?.length&&(s.mediaType.previews=e.mediaType.previews.filter((e=>!s.mediaType.previews.includes(e))).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map((e=>e.replace(/-preview/,"")))),s}var h=/\{[^}]+\}/g;function u(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function d(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,i)=>(t[i]=e[i],t)),{})}function p(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function m(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function g(e,t,i){return t="+"===e||"#"===e?p(t):m(t),i?m(i)+"="+t:t}function f(e){return null!=e}function w(e){return";"===e||"&"===e||"?"===e}function v(e,t){var i=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,r,s){if(r){let e="";const s=[];if(-1!==i.indexOf(r.charAt(0))&&(e=r.charAt(0),r=r.substr(1)),r.split(/,/g).forEach((function(i){var r=/([^:\*]*)(?::(\d+)|(\*))?/.exec(i);s.push(function(e,t,i,r){var s=e[i],n=[];if(f(s)&&""!==s)if("string"==typeof s||"number"==typeof s||"boolean"==typeof s)s=s.toString(),r&&"*"!==r&&(s=s.substring(0,parseInt(r,10))),n.push(g(t,s,w(t)?i:""));else if("*"===r)Array.isArray(s)?s.filter(f).forEach((function(e){n.push(g(t,e,w(t)?i:""))})):Object.keys(s).forEach((function(e){f(s[e])&&n.push(g(t,s[e],e))}));else{const e=[];Array.isArray(s)?s.filter(f).forEach((function(i){e.push(g(t,i))})):Object.keys(s).forEach((function(i){f(s[i])&&(e.push(m(i)),e.push(g(t,s[i].toString())))})),w(t)?n.push(m(i)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===t?f(s)&&n.push(m(i)):""!==s||"&"!==t&&"?"!==t?""===s&&n.push(""):n.push(m(i)+"=");return n}(t,e,r[1],r[2]||r[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==s.length?e:"")+s.join(n)}return s.join(",")}return p(s)})),"/"===e?e:e.replace(/\/$/,"")}function y(e){let t,i=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),n=d(e,["method","baseUrl","url","headers","request","mediaType"]);const o=function(e){const t=e.match(h);return t?t.map(u).reduce(((e,t)=>e.concat(t)),[]):[]}(r);var a;r=(a=r,{expand:v.bind(null,a)}).expand(n),/^http/.test(r)||(r=e.baseUrl+r);const c=d(n,Object.keys(e).filter((e=>o.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")),r.endsWith("/graphql")&&e.mediaType.previews?.length)){const t=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=t.concat(e.mediaType.previews).map((t=>`application/vnd.github.${t}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(i)?r=function(e,t){const i=/\?/.test(e)?"&":"?",r=Object.keys(t);return 0===r.length?e:e+i+r.map((e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`)).join("&")}(r,c):"data"in c?t=c.data:Object.keys(c).length&&(t=c),s["content-type"]||void 0===t||(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(i)&&void 0===t&&(t=""),Object.assign({method:i,url:r,headers:s},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function b(e,t,i){return y(l(e,t,i))}var C=function e(t,i){const r=l(t,i),s=b.bind(null,r);return Object.assign(s,{DEFAULTS:r,defaults:e.bind(null,r),merge:l.bind(null,r),parse:y})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":o},mediaType:{format:""}});class Deprecation extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var A=i(778),S=i.n(A),P=S()((e=>console.warn(e))),k=S()((e=>console.warn(e))),D=class extends Error{constructor(e,t,i){let r;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,"headers"in i&&void 0!==i.headers&&(r=i.headers),"response"in i&&(this.response=i.response,r=i.response.headers);const s=Object.assign({},i.request);i.request.headers.authorization&&(s.headers=Object.assign({},i.request.headers,{authorization:i.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),s.url=s.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=s,Object.defineProperty(this,"code",{get:()=>(P(new Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),Object.defineProperty(this,"headers",{get:()=>(k(new Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),r||{})})}};function R(e){const t=e.request&&e.request.log?e.request.log:console,i=!1!==e.request?.parseSuccessResponseBody;(n(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,s,o={},{fetch:a}=globalThis;if(e.request?.fetch&&(a=e.request.fetch),!a)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return a(e.url,{method:e.method,body:e.body,headers:e.headers,signal:e.request?.signal,...e.body&&{duplex:"half"}}).then((async n=>{s=n.url,r=n.status;for(const e of n.headers)o[e[0]]=e[1];if("deprecation"in o){const i=o.link&&o.link.match(/<([^>]+)>; rel="deprecation"/),r=i&&i.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${o.sunset}${r?`. See ${r}`:""}`)}if(204!==r&&205!==r){if("HEAD"===e.method){if(r<400)return;throw new D(n.statusText,r,{response:{url:s,status:r,headers:o,data:void 0},request:e})}if(304===r)throw new D("Not modified",r,{response:{url:s,status:r,headers:o,data:await _(n)},request:e});if(r>=400){const t=await _(n),i=new D(function(e){if("string"==typeof e)return e;if("message"in e)return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message;return`Unknown error: ${JSON.stringify(e)}`}(t),r,{response:{url:s,status:r,headers:o,data:t},request:e});throw i}return i?await _(n):n.body}})).then((e=>({status:r,url:s,headers:o,data:e}))).catch((t=>{if(t instanceof D)throw t;if("AbortError"===t.name)throw t;let i=t.message;throw"TypeError"===t.name&&"cause"in t&&(t.cause instanceof Error?i=t.cause.message:"string"==typeof t.cause&&(i=t.cause)),new D(i,500,{request:e})}))}async function _(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json().catch((()=>e.text())).catch((()=>"")):!t||/^text\/|charset=utf-8$/.test(t)?e.text():function(e){return e.arrayBuffer()}(e)}var T=function e(t,i){const r=t.defaults(i);return Object.assign((function(t,i){const s=r.merge(t,i);if(!s.request||!s.request.hook)return R(r.parse(s));const n=(e,t)=>R(r.parse(r.merge(e,t)));return Object.assign(n,{endpoint:r,defaults:e.bind(null,r)}),s.request.hook(n,s)}),{endpoint:r,defaults:e.bind(null,r)})}(C,{headers:{"user-agent":`octokit-request.js/8.1.5 ${r()}`}});var F=class extends Error{constructor(e,t,i){super("Request failed due to following response errors:\n"+i.errors.map((e=>` - ${e.message}`)).join("\n")),this.request=e,this.headers=t,this.response=i,this.name="GraphqlResponseError",this.errors=i.errors,this.data=i.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},$=["method","baseUrl","url","headers","request","query","mediaType"],I=["query","method","url"],x=/\/api\/v3\/?$/;function O(e,t){const i=e.defaults(t);return Object.assign(((e,t)=>function(e,t,i){if(i){if("string"==typeof t&&"query"in i)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const e in i)if(I.includes(e))return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}const r="string"==typeof t?Object.assign({query:t},i):t,s=Object.keys(r).reduce(((e,t)=>$.includes(t)?(e[t]=r[t],e):(e.variables||(e.variables={}),e.variables[t]=r[t],e)),{}),n=r.baseUrl||e.endpoint.DEFAULTS.baseUrl;return x.test(n)&&(s.url=n.replace(x,"/api/graphql")),e(s).then((e=>{if(e.data.errors){const t={};for(const i of Object.keys(e.headers))t[i]=e.headers[i];throw new F(s,t,e.data)}return e.data.data}))}(i,e,t)),{defaults:O.bind(null,i),endpoint:i.endpoint})}var E=O(T,{headers:{"user-agent":`octokit-graphql.js/7.0.2 ${r()}`},method:"POST",url:"/graphql"});var B=i(9496),W=i(9827),M=i(429),N=i(4575),L=i(4321),U=i(2075),G=i(7925),H=i(2800),V=i(5148),q=i(1219),j=i(4336),Q=i(6004),Y=i(6398),z=i(3620),K=i(4550),J=i(3878),X=Object.defineProperty,Z=Object.getOwnPropertyDescriptor,ee=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Z(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&X(t,i,n),n};const te=Object.freeze({values:[]}),ie=Object.freeze({ranges:[]}),re="\nassignees(first: 10) {\n\tnodes {\n\t\tlogin\n\t\tavatarUrl\n\t\turl\n\t}\n}\nauthor {\n\tlogin\n\tavatarUrl\n\turl\n}\nbaseRefName\nbaseRefOid\nbaseRepository {\n\tname\n\towner {\n\t\tlogin\n\t}\n\turl\n}\nchecksUrl\nisDraft\nisCrossRepository\nisReadByViewer\nheadRefName\nheadRefOid\nheadRepository {\n\tname\n\towner {\n\t\tlogin\n\t}\n\turl\n}\npermalink\nid\nnumber\ntitle\nstate\nadditions\ndeletions\nupdatedAt\nclosedAt\nmergeable\nmergedAt\nmergedBy {\n\tlogin\n}\nrepository {\n\tisFork\n\towner {\n\t\tlogin\n\t}\n}\nreviewDecision\nreviewRequests(first: 10) {\n\tnodes {\n\t\tasCodeOwner\n\t\tid\n\t\trequestedReviewer {\n\t\t\t... on User {\n\t\t\t\tlogin\n\t\t\t\tavatarUrl\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n}\ntotalCommentsCount\n",se="\n... on Issue {\n\tassignees(first: 100) {\n\t\tnodes {\n\t\t\tlogin\n\t\t\turl\n\t\t\tavatarUrl\n\t\t}\n\t}\n\tauthor {\n\t\tlogin\n\t\tavatarUrl\n\t\turl\n\t}\n\tcomments {\n\t  totalCount\n\t}\n\tid\n\tnumber\n\ttitle\n\turl\n\tcreatedAt\n\tclosedAt\n\tclosed\n\tupdatedAt\n\tlabels(first: 20) {\n\t\tnodes {\n\t\t\tcolor\n\t\t\tname\n\t\t}\n\t}\n\treactions(content: THUMBS_UP) {\n\t  totalCount\n\t}\n\trepository {\n\t\tname\n\t\towner {\n\t\t\tlogin\n\t\t}\n\t}\n}\n";class GitHubApi{_onDidReauthenticate=new B.EventEmitter;get onDidReauthenticate(){return this._onDidReauthenticate.event}_disposable;constructor(e){this._disposable=V.D.onDidChangeAny((e=>{(V.D.changedAny(e,["http.proxy","http.proxyStrictSSL"])||V.D.changed(e,["outputLevel","proxy"]))&&this.resetCaches()}))}dispose(){this._disposable.dispose()}resetCaches(){this._proxyAgent=null,this._defaults.clear(),this._enterpriseVersions.clear()}_proxyAgent=null;get proxyAgent(){if(!M.$L)return null===this._proxyAgent&&(this._proxyAgent=(0,W.Nx)()),this._proxyAgent}async getAccountForCommit(e,t,i,r,s,n){const o=(0,Q.UH)();try{const a="query getAccountForCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: GitObjectID!\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $ref) {\n\t\t\t... on Commit {\n\t\t\t\tauthor {\n\t\t\t\t\tname\n\t\t\t\t\temail\n\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",c=await this.graphql(e,t,a,{...n,owner:i,repo:r,ref:s},o),l=c?.repository?.object?.author;if(null==l)return;return{provider:e,name:l.name??void 0,email:l.email??void 0,avatarUrl:!l.avatarUrl||ne(n)?l.avatarUrl??void 0:l.email&&null!=n?.baseUrl?await this.createEnterpriseAvatarUrl(e,t,n.baseUrl,l.email,n.avatarSize):void 0}}catch(t){if(t instanceof N.Ww)return;throw this.handleException(t,e,o)}}async getAccountForEmail(e,t,i,r,s,n){const o=(0,Q.UH)();try{const a="query getAccountForEmail(\n\t$emailQuery: String!\n\t$avatarSize: Int\n) {\n\tsearch(type: USER, query: $emailQuery, first: 1) {\n\t\tnodes {\n\t\t\t... on User {\n\t\t\t\tname\n\t\t\t\temail\n\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t}\n\t\t}\n\t}\n}",c=await this.graphql(e,t,a,{...n,owner:i,repo:r,emailQuery:`in:email ${s}`},o),l=c?.search?.nodes?.[0];if(null==l)return;return{provider:e,name:l.name??void 0,email:l.email??void 0,avatarUrl:!l.avatarUrl||ne(n)?l.avatarUrl??void 0:l.email&&null!=n?.baseUrl?await this.createEnterpriseAvatarUrl(e,t,n.baseUrl,l.email,n.avatarSize):void 0}}catch(t){if(t instanceof N.Ww)return;throw this.handleException(t,e,o)}}async getDefaultBranch(e,t,i,r,s){const n=(0,Q.UH)();try{const o="query getDefaultBranch(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tdefaultBranchRef {\n\t\t\tname\n\t\t}\n\t}\n}",a=await this.graphql(e,t,o,{...s,owner:i,repo:r},n),c=a?.repository?.defaultBranchRef?.name??void 0;if(null==c)return;return{provider:e,name:c}}catch(t){if(t instanceof N.Ww)return;throw this.handleException(t,e,n)}}async getIssueOrPullRequest(e,t,i,r,s,n){const o=(0,Q.UH)();try{const a="query getIssueOrPullRequest(\n\t$owner: String!\n\t$repo: String!\n\t$number: Int!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tissueOrPullRequest(number: $number) {\n\t\t\t__typename\n\t\t\t... on Issue {\n\t\t\t\tcreatedAt\n\t\t\t\tclosed\n\t\t\t\tclosedAt\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t\tstate\n\t\t\t}\n\t\t\t... on PullRequest {\n\t\t\t\tcreatedAt\n\t\t\t\tclosed\n\t\t\t\tclosedAt\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t\tstate\n\t\t\t}\n\t\t}\n\t}\n}",c=await this.graphql(e,t,a,{...n,owner:i,repo:r,number:s},o),l=c?.repository?.issueOrPullRequest;if(null==l)return;return{provider:e,type:l.type,id:String(s),nodeId:l.id,date:new Date(l.createdAt),title:l.title,closed:l.closed,closedDate:null==l.closedAt?void 0:new Date(l.closedAt),url:l.url,state:(0,J.fromGitHubPullRequestState)(l.state)}}catch(t){if(t instanceof N.Ww)return;throw this.handleException(t,e,o)}}async getPullRequestForBranch(e,t,i,r,s,n){const o=(0,Q.UH)();try{const a="query getPullRequestForBranch(\n\t$owner: String!\n\t$repo: String!\n\t$branch: String!\n\t$limit: Int!\n\t$include: [PullRequestState!]\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tref(qualifiedName: $branch) {\n\t\t\tassociatedPullRequests(first: $limit, orderBy: {field: UPDATED_AT, direction: DESC}, states: $include) {\n\t\t\t\tnodes {\n\t\t\t\t\tauthor {\n\t\t\t\t\t\tlogin\n\t\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t\t\turl\n\t\t\t\t\t}\n\t\t\t\t\tpermalink\n\t\t\t\t\tnumber\n\t\t\t\t\ttitle\n\t\t\t\t\tstate\n\t\t\t\t\tupdatedAt\n\t\t\t\t\tclosedAt\n\t\t\t\t\tmergedAt\n\t\t\t\t\trepository {\n\t\t\t\t\t\tisFork\n\t\t\t\t\t\towner {\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",c=await this.graphql(e,t,a,{...n,owner:i,repo:r,branch:`refs/heads/${s}`,limit:10},o),l=c?.repository?.ref?.associatedPullRequests?.nodes?.filter((e=>null!=e&&(!e.repository.isFork||e.repository.owner.login===i)));if(null==l||0===l.length)return;return l.length>1&&l.sort(((e,t)=>(e.repository.owner.login===i?-1:1)-(t.repository.owner.login===i?-1:1)||("OPEN"===e.state?-1:1)-("OPEN"===t.state?-1:1)||new Date(t.updatedAt).getTime()-new Date(e.updatedAt).getTime())),(0,J.fromGitHubPullRequest)(l[0],e)}catch(t){if(t instanceof N.Ww)return;throw this.handleException(t,e,o)}}async getPullRequestForCommit(e,t,i,r,s,n,o){const a=(0,Q.UH)();try{const c="query getPullRequestForCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: GitObjectID!\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $ref) {\n\t\t\t... on Commit {\n\t\t\t\tassociatedPullRequests(first: 2, orderBy: {field: UPDATED_AT, direction: DESC}) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpermalink\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tstate\n\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\tclosedAt\n\t\t\t\t\t\tmergedAt\n\t\t\t\t\t\trepository {\n\t\t\t\t\t\t\tisFork\n\t\t\t\t\t\t\towner {\n\t\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=await this.graphql(e,t,c,{...n,owner:i,repo:r,ref:s},a,o),h=l?.repository?.object?.associatedPullRequests?.nodes?.filter((e=>null!=e&&(!e.repository.isFork||e.repository.owner.login===i)));if(null==h||0===h.length)return;return h.length>1&&h.sort(((e,t)=>(e.repository.owner.login===i?-1:1)-(t.repository.owner.login===i?-1:1)||("MERGED"===e.state?-1:1)-("MERGED"===t.state?-1:1)||new Date(t.updatedAt).getTime()-new Date(e.updatedAt).getTime())),(0,J.fromGitHubPullRequest)(h[0],e)}catch(t){if(t instanceof N.Ww)return;throw this.handleException(t,e,a)}}async getRepositoryMetadata(e,t,i,r,s,n){const o=(0,Q.UH)();try{const a="query getRepositoryMetadata(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\towner {\n\t\t\tlogin\n\t\t}\n\t\tname\n\t\tparent {\n\t\t\towner {\n\t\t\t\tlogin\n\t\t\t}\n\t\t\tname\n\t\t}\n\t}\n}",c=await this.graphql(e,t,a,{...s,owner:i,repo:r},o,n),l=c?.repository??void 0;if(null==l)return;return{provider:e,owner:l.owner.login,name:l.name,isFork:null!=l.parent,parent:null!=l.parent?{owner:l.parent.owner.login,name:l.parent.name}:void 0}}catch(t){if(t instanceof N.Ww)return;throw this.handleException(t,e,o)}}async getBlame(e,t,i,r,s){const n=(0,Q.UH)();try{const o="query getBlameRanges(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String!\n) {\n\tviewer { name }\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\t...on Commit {\n\t\t\t\tblame(path: $path) {\n\t\t\t\t\tranges {\n\t\t\t\t\t\tstartingLine\n\t\t\t\t\t\tendingLine\n\t\t\t\t\t\tcommit {\n\t\t\t\t\t\t\toid\n\t\t\t\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\tchangedFiles\n\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommitter {\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,path:s},n);if(null==a)return ie;const c=a.repository?.object?.blame?.ranges;return null==c||0===c.length?{ranges:[],viewer:a.viewer?.name}:{ranges:c,viewer:a.viewer?.name}}catch(e){if(e instanceof N.Ww)return ie;throw this.handleException(e,void 0,n)}}async getBranches(e,t,i,r){const s=(0,Q.UH)();try{const n='query getBranches(\n\t$owner: String!\n\t$repo: String!\n\t$branchQuery: String\n\t$cursor: String\n\t$limit: Int = 100\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(query: $branchQuery, refPrefix: "refs/heads/", first: $limit, after: $cursor) {\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\toid\n\t\t\t\t\t...on Commit {\n\t\t\t\t\t\tauthoredDate\n\t\t\t\t\t\tcommittedDate\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',o=await this.graphql(void 0,e,n,{owner:t,repo:i,branchQuery:r?.query,cursor:r?.cursor,limit:Math.min(100,r?.limit??100)},s);if(null==o)return te;const a=o.repository?.refs;return null==a?te:{paging:{cursor:a.pageInfo.endCursor,more:a.pageInfo.hasNextPage},values:a.nodes}}catch(e){if(e instanceof N.Ww)return te;throw this.handleException(e,void 0,s)}}async getCommit(e,t,i,r){const s=(0,Q.UH)();try{const n=await this.request(void 0,e,"GET /repos/{owner}/{repo}/commits/{ref}",{owner:t,repo:i,ref:r},s),o=n?.data;if(null==o)return;const{commit:a}=o;return{oid:o.sha,parents:{nodes:o.parents.map((e=>({oid:e.sha})))},message:a.message,additions:o.stats?.additions,changedFiles:o.files?.length,deletions:o.stats?.deletions,author:{avatarUrl:o.author?.avatar_url??void 0,date:a.author?.date??(new Date).toString(),email:a.author?.email??void 0,name:a.author?.name??""},committer:{date:a.committer?.date??(new Date).toString(),email:a.committer?.email??void 0,name:a.committer?.name??""},files:o.files}}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,s)}}async getCommitForFile(e,t,i,r,s){if((0,L.D3)(r))return this.getCommit(e,t,i,r);const n=await this.getCommits(e,t,i,r,{limit:1,path:s});if(0===n.values.length)return;return{...await this.getCommit(e,t,i,n.values[0].oid)??n.values[0],viewer:n.viewer}}async getCommitBranches(e,t,i,r,s){const n=(0,Q.UH)();try{const o='query getCommitBranches(\n\t$owner: String!\n\t$repo: String!\n\t$since: GitTimestamp!\n\t$until: GitTimestamp!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(first: 20, refPrefix: "refs/heads/") {\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\t... on Commit {\n\t\t\t\t\t\thistory(first: 3, since: $since until: $until) {\n\t\t\t\t\t\t\tnodes { oid }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',a=await this.graphql(void 0,e,o,{owner:t,repo:i,since:s.toISOString(),until:s.toISOString()},n),c=a?.repository?.refs?.nodes;if(null==c)return[];const l=[];for(const e of c)for(const t of e.target.history.nodes)if(t.oid===r){l.push(e.name);break}return l}catch(e){if(e instanceof N.Ww)return[];throw this.handleException(e,void 0,n)}}async getCommitCount(e,t,i,r){const s=(0,Q.UH)();try{const n="query getCommitCount(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tref(qualifiedName: $ref) {\n\t\t\ttarget {\n\t\t\t\t... on Commit {\n\t\t\t\t\thistory(first: 1) {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,n,{owner:t,repo:i,ref:r},s),a=o?.repository?.ref?.target.history.totalCount;return a}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,s)}}async getCommitOnBranch(e,t,i,r,s,n){const o=(0,Q.UH)();try{const a="query getCommitOnBranch(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$since: GitTimestamp!\n\t$until: GitTimestamp!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tref(qualifiedName: $ref) {\n\t\t\ttarget {\n\t\t\t\t... on Commit {\n\t\t\t\t\thistory(first: 3, since: $since until: $until) {\n\t\t\t\t\t\tnodes { oid }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",c=await this.graphql(void 0,e,a,{owner:t,repo:i,ref:`refs/heads/${r}`,since:n.toISOString(),until:n.toISOString()},o),l=c?.repository?.ref.target.history.nodes;if(null==l)return[];const h=[];for(const e of l)if(e.oid===s){h.push(r);break}return h}catch(e){if(e instanceof N.Ww)return[];throw this.handleException(e,void 0,o)}}async getCommits(e,t,i,r,s){const n=(0,Q.UH)();if(1===s?.limit&&null==s?.path)return this.getCommitsCoreSingle(e,t,i,r);try{const o="query getCommits(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String\n\t$author: CommitAuthor\n\t$after: String\n\t$before: String\n\t$limit: Int = 100\n\t$since: GitTimestamp\n\t$until: GitTimestamp\n) {\n\tviewer { name }\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: $limit, author: $author, path: $path, after: $after, before: $before, since: $since, until: $until) {\n\t\t\t\t\tpageInfo {\n\t\t\t\t\t\tstartCursor\n\t\t\t\t\t\tendCursor\n\t\t\t\t\t\thasNextPage\n\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t}\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t... on Commit {\n\t\t\t\t\t\t\toid\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\tchangedFiles\n\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommitter {\n\t\t\t\t\t\t\t\t date\n\t\t\t\t\t\t\t\t email\n\t\t\t\t\t\t\t\t name\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}";let a;if(null!=s?.authors)if(1===s.authors.length){const[e]=s.authors;a={id:e.id,emails:e.email?[e.email]:void 0}}else{const e=s.authors.filter((e=>e.email)).map((e=>e.email));a=e.length?{emails:e}:void 0}const c=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,after:s?.after,before:s?.before,path:s?.path,author:a,limit:Math.min(100,s?.limit??100),since:"string"==typeof s?.since?s?.since:s?.since?.toISOString(),until:"string"==typeof s?.until?s?.until:s?.until?.toISOString()},n),l=c?.repository?.object?.history;return null==l?te:{paging:null!=l.pageInfo.endCursor?{cursor:l.pageInfo.endCursor??void 0,more:l.pageInfo.hasNextPage}:void 0,values:l.nodes,viewer:c?.viewer.name}}catch(e){if(e instanceof N.Ww)return te;throw this.handleException(e,void 0,n)}}async getCommitsCoreSingle(e,t,i,r){const s=(0,Q.UH)();try{const n="query getCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\tviewer { name }\n\trepository(name: $repo owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t...on Commit {\n\t\t\t\toid\n\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\tmessage\n\t\t\t\tadditions\n\t\t\t\tchangedFiles\n\t\t\t\tdeletions\n\t\t\t\tauthor {\n\t\t\t\t\tavatarUrl\n\t\t\t\t\tdate\n\t\t\t\t\temail\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tcommitter {\n\t\t\t\t\tdate\n\t\t\t\t\temail\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,n,{owner:t,repo:i,ref:r},s);if(null==o)return te;const a=o.repository?.object;return null!=a?{values:[a],viewer:o.viewer.name}:te}catch(e){if(e instanceof N.Ww)return te;throw this.handleException(e,void 0,s)}}async getCommitRefs(e,t,i,r,s){const n=(0,Q.UH)();try{const o="query getCommitRefs(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$after: String\n\t$before: String\n\t$first: Int\n\t$last: Int\n\t$path: String\n\t$since: GitTimestamp\n\t$until: GitTimestamp\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: $first, last: $last, path: $path, since: $since, until: $until, after: $after, before: $before) {\n\t\t\t\t\tpageInfo { startCursor, endCursor, hasNextPage, hasPreviousPage }\n\t\t\t\t\ttotalCount\n\t\t\t\t\tnodes { oid }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,path:s?.path,first:s?.first,last:s?.last,after:s?.after,before:s?.before,since:s?.since,until:s?.until},n),c=a?.repository?.object?.history;if(null==c)return;return{pageInfo:c.pageInfo,totalCount:c.totalCount,values:c.nodes}}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,n)}}async getCommitTags(e,t,i,r,s){const n=(0,Q.UH)();try{const o='query getCommitTags(\n\t$owner: String!\n\t$repo: String!\n\t$since: GitTimestamp!\n\t$until: GitTimestamp!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(first: 20, refPrefix: "refs/tags/") {\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\t... on Commit {\n\t\t\t\t\t\thistory(first: 3, since: $since until: $until) {\n\t\t\t\t\t\t\tnodes { oid }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',a=await this.graphql(void 0,e,o,{owner:t,repo:i,since:s.toISOString(),until:s.toISOString()},n),c=a?.repository?.refs?.nodes;if(null==c)return[];const l=[];for(const e of c)for(const t of e.target.history.nodes)if(t.oid===r){l.push(e.name);break}return l}catch(e){if(e instanceof N.Ww)return[];throw this.handleException(e,void 0,n)}}async getNextCommitRefs(e,t,i,r,s,n){const o=await this.getCommitDate(e,t,i,n);if(null==o)return[];let a=await this.getCommitRefs(e,t,i,r,{path:s,first:1,since:o});if(null==a)return[];const c=`${a.pageInfo.startCursor.split(" ",1)[0]} ${a.totalCount}`;let l;if([,l]=c.split(" ",2),l=Math.min(parseInt(l,10),5),a=await this.getCommitRefs(e,t,i,r,{path:s,last:l,before:c}),null==a)return[];const h=[];for(const{oid:e}of a.values){if(e===n)break;h.push(e)}return h.reverse()}async getCommitDate(e,t,i,r){const s=(0,Q.UH)();try{const n="query getCommitDate(\n\t$owner: String!\n\t$repo: String!\n\t$sha: GitObjectID!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $sha) {\n\t\t\t... on Commit { committer { date } }\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,n,{owner:t,repo:i,sha:r},s),a=o?.repository?.object?.committer.date;return a}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,s)}}async getContributors(e,t,i){const r=(0,Q.UH)();try{const s=await this.request(void 0,e,"GET /repos/{owner}/{repo}/contributors",{owner:t,repo:i,per_page:100},r),n=s?.data;return null==n?[]:s.data}catch(e){if(e instanceof N.Ww)return[];throw this.handleException(e,void 0,r)}}async getDefaultBranchName(e,t,i){const r=(0,Q.UH)();try{const s="query getDefaultBranch(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tdefaultBranchRef {\n\t\t\tname\n\t\t}\n\t}\n}",n=await this.graphql(void 0,e,s,{owner:t,repo:i},r);if(null==n)return;return n.repository?.defaultBranchRef?.name??void 0}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,r)}}async getCurrentUser(e,t,i){const r=(0,Q.UH)();try{const s="query getCurrentUser(\n\t$owner: String!\n\t$repo: String!\n) {\n\tviewer { name, email, login, id }\n\trepository(owner: $owner, name: $repo) { viewerPermission }\n}",n=await this.graphql(void 0,e,s,{owner:t,repo:i},r);if(null==n)return;return{name:n.viewer?.name,email:n.viewer?.email,username:n.viewer?.login,id:n.viewer?.id}}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,r)}}async getRepositoryVisibility(e,t,i){const r=(0,Q.UH)();try{const s="query getRepositoryVisibility(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tvisibility\n\t}\n}",n=await this.graphql(void 0,e,s,{owner:t,repo:i},r);if(null==n?.repository?.visibility)return;return"PUBLIC"===n.repository.visibility?"public":"private"}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,r)}}async getTags(e,t,i,r){const s=(0,Q.UH)();try{const n='query getTags(\n\t$owner: String!\n\t$repo: String!\n\t$tagQuery: String\n\t$cursor: String\n\t$limit: Int = 100\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(query: $tagQuery, refPrefix: "refs/tags/", first: $limit, after: $cursor, orderBy: { field: TAG_COMMIT_DATE, direction: DESC }) {\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\toid\n\t\t\t\t\t...on Tag {\n\t\t\t\t\t\tmessage\n\t\t\t\t\t\ttagger { date }\n\t\t\t\t\t\ttarget {\n\t\t\t\t\t...on Commit {\n\t\t\t\t\t\t\t\toid\n\t\t\t\t\t\tauthoredDate\n\t\t\t\t\t\tcommittedDate\n\t\t\t\t\t\tmessage\n\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',o=await this.graphql(void 0,e,n,{owner:t,repo:i,tagQuery:r?.query,cursor:r?.cursor,limit:Math.min(100,r?.limit??100)},s);if(null==o)return te;const a=o.repository?.refs;return null==a?te:{paging:{cursor:a.pageInfo.endCursor,more:a.pageInfo.hasNextPage},values:a.nodes}}catch(e){if(e instanceof N.Ww)return te;throw this.handleException(e,void 0,s)}}async resolveReference(e,t,i,r,s){const n=(0,Q.UH)();try{if(!s){const s="query resolveReference(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\toid\n\t\t}\n\t}\n}",o=await this.graphql(void 0,e,s,{owner:t,repo:i,ref:r},n);return o?.repository?.object?.oid??void 0}const o="query resolveReference(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: 1, path: $path) {\n\t\t\t\t\tnodes { oid }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=await this.graphql(void 0,e,o,{owner:t,repo:i,ref:r,path:s},n);return a?.repository?.object?.history.nodes?.[0]?.oid??void 0}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,n)}}async searchCommits(e,t,i){const r=(0,Q.UH)(),s=Math.min(100,i?.limit??100);let n,o,a;null!=i?.cursor?([n,o,a]=i.cursor.split(" ",3),n=parseInt(n,10),o=parseInt(o,10),a=parseInt(a,10)):(n=1,o=s,a=0);try{const s=await this.request(void 0,e,"GET /search/commits",{q:t,sort:i?.sort,order:i?.order,per_page:o,page:n},r),c=s?.data;if(null==c||0===c.items.length)return;const l=c.items.map((e=>({oid:e.sha,parents:{nodes:e.parents.map((e=>({oid:e.sha})))},message:e.commit.message,author:{avatarUrl:e.author?.avatar_url??void 0,date:e.commit.author?.date??e.commit.author?.date??(new Date).toString(),email:e.author?.email??e.commit.author?.email??void 0,name:e.author?.name??e.commit.author?.name??""},committer:{date:e.commit.committer?.date??e.committer?.date??(new Date).toString(),email:e.committer?.email??e.commit.committer?.email??void 0,name:e.committer?.name??e.commit.committer?.name??""}}))),h=a+c.items.length,u=c.incomplete_results||c.total_count>h;return{pageInfo:{startCursor:`${n} ${o} ${a}`,endCursor:u?`${n+1} ${o} ${h}`:void 0,hasPreviousPage:c.total_count>0&&n>1,hasNextPage:u},totalCount:c.total_count,values:l}}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,r)}}async searchCommitShas(e,t,i){const r=(0,Q.UH)(),s=Math.min(100,i?.limit??100);let n,o,a;null!=i?.cursor?([n,o,a]=i.cursor.split(" ",3),n=parseInt(n,10),o=parseInt(o,10),a=parseInt(a,10)):(n=1,o=s,a=0);try{const s=await this.request(void 0,e,"GET /search/commits",{q:t,sort:i?.sort,order:i?.order,per_page:o,page:n},r),c=s?.data;if(null==c||0===c.items.length)return;const l=a+c.items.length,h=c.incomplete_results||c.total_count>l;return{pageInfo:{startCursor:`${n} ${o} ${a}`,endCursor:h?`${n+1} ${o} ${l}`:void 0,hasPreviousPage:c.total_count>0&&n>1,hasNextPage:h},totalCount:c.total_count,values:c.items.map((e=>({sha:e.sha,authorDate:new Date(e.commit.author.date).getTime(),committerDate:new Date(e.commit.committer?.date??e.commit.author.date).getTime()})))}}catch(e){if(e instanceof N.Ww)return;throw this.handleException(e,void 0,r)}}_enterpriseVersions=new Map;async getEnterpriseVersion(e,t,i){let r=this._enterpriseVersions.get(t);if(null!=r)return r;if(null===r)return;const s=(0,Q.UH)();try{const n=await this.request(e,t,"GET /meta",i,s),o=n?.data?.installed_version;r=o?(0,K.mL)(o):null}catch(e){r=null}return this._enterpriseVersions.set(t,r),r??void 0}async graphql(e,t,i,r,s,n){try{let s;if(null!=n){if(n.isCancellationRequested)throw new N.FU;s=new AbortController,n.onCancellationRequested((()=>s.abort())),r={...r,request:{...r?.request,signal:s.signal}}}return await(0,W.a_)(e?.getIgnoreSSLErrors()??!1,(()=>this.getDefaults(t,E)(i,r)))}catch(i){if(i instanceof F){switch(i.errors?.[0]?.type){case"NOT_FOUND":throw new N.Ww(i);case"FORBIDDEN":throw new N._7("github",N.Jx.Forbidden,i);case"RATE_LIMITED":{let e;const r=i.headers?.["x-ratelimit-reset"];throw null!=r&&(e=parseInt(r,10),Number.isNaN(e)&&(e=void 0)),new N.yx(i,t,e)}}j.Yd.isDebugging&&B.window.showErrorMessage(`GitHub request failed: ${i.errors?.[0]?.message??i.message}`)}else i instanceof D||"AbortError"===i.name?this.handleRequestError(e,t,i,s):j.Yd.isDebugging&&B.window.showErrorMessage(`GitHub request failed: ${i.message}`);throw i}}async request(e,t,i,r,s,n){try{let s;if(null!=n){if(n.isCancellationRequested)throw new N.FU;s=new AbortController,n.onCancellationRequested((()=>s.abort())),r={...r,request:{...r?.request,signal:s.signal}}}return await(0,W.a_)(e?.getIgnoreSSLErrors()??!1,(()=>this.getDefaults(t,T)(i,r)))}catch(i){throw i instanceof D||"AbortError"===i.name?this.handleRequestError(e,t,i,s):j.Yd.isDebugging&&B.window.showErrorMessage(`GitHub request failed: ${i.message}`),i}}_defaults=new Map;getDefaults(e,t){let i=this._defaults.get(t);null==i&&(i=new Map,this._defaults.set(t,i));let r=i.get(e);return null==r&&(r=t.defaults({headers:{authorization:`token ${e}`},request:{agent:this.proxyAgent,fetch:M.$L?(e,t)=>{if(null!=t.headers){const{"user-agent":e,...i}=t.headers;e&&(t.headers=i)}return(0,W.he)(e,t)}:W.he,hook:"debug"===j.Yd.logLevel||j.Yd.isDebugging?async(e,t)=>{const i=(0,Y.k)(`[GITHUB] ${t.method} ${t.url}`,{log:!1});try{return await e(t)}finally{let e;try{if("string"==typeof t.query){const i=/(^[^({\n]+)/.exec(t.query);e=` ${i?.[1].trim()??t.query}`}}catch{}i?.stop({message:e})}}:void 0}}),i.set(e,r)),r}handleRequestError(e,t,i,r){if("AbortError"===i.name)throw new N.FU;switch(i.status){case 404:case 410:case 422:throw new N.Ww(i);case 401:throw new N._7("github",N.Jx.Unauthorized,i);case 403:if(i.message.includes("rate limit")){let e;const r=i.response?.headers?.["x-ratelimit-reset"];throw null!=r&&(e=parseInt(r,10),Number.isNaN(e)&&(e=void 0)),new N.yx(i,t,e)}throw new N._7("github",N.Jx.Forbidden,i);case 500:return j.Yd.error(i,r),void(null!=i.response&&(e?.trackRequestException(),(0,G.vF)(`${e?.name??"GitHub"} failed to respond and might be experiencing issues.${e?.custom?"":" Please visit the [GitHub status page](https://githubstatus.com) for more information."}`)));case 502:if(j.Yd.error(i,r),i.message.includes("timeout"))return e?.trackRequestException(),void(0,G.s$)(e?.name??"GitHub");break;default:if(i.status>=400&&i.status<500)throw new N.Bn(i)}j.Yd.error(i,r),j.Yd.isDebugging&&B.window.showErrorMessage(`GitHub request failed: ${i.response?.errors?.[0]?.message??i.message}`)}handleException(e,t,i){return j.Yd.error(e,i),e instanceof N._7&&this.showAuthenticationErrorMessage(e,t),e}async showAuthenticationErrorMessage(e,t){if(e.reason===N.Jx.Unauthorized||e.reason===N.Jx.Forbidden){const i="Reauthenticate";await B.window.showErrorMessage(`${e.message}. Would you like to try reauthenticating${e.reason===N.Jx.Forbidden?" to provide additional access":""}?`,i)===i&&(await(t?.reauthenticate()),this.resetCaches(),this._onDidReauthenticate.fire())}else B.window.showErrorMessage(e.message)}async createEnterpriseAvatarUrl(e,t,i,r,s){s=s??16;const n=await this.getEnterpriseVersion(e,t,{baseUrl:i});if((0,K.L5)(n,">= 3.0.0")){let n;const o=(0,U.at)(r);null!=o&&B.Uri.parse(i).authority===o.authority&&(null!=o.userId?n=`${i}/enterprise/avatars/u/${encodeURIComponent(o.userId)}?s=${s}`:null!=o.login&&(n=`${i}/enterprise/avatars/${encodeURIComponent(o.login)}?s=${s}`)),null==n&&(n=`${i}/enterprise/avatars/u/e?email=${encodeURIComponent(r)}&s=${s}`);const a=await(0,W.a_)(e?.getIgnoreSSLErrors()??!1,(()=>(0,W.he)(n,{method:"GET",headers:{Authorization:`Bearer ${t}`}})));if(a.ok){const e=(0,z.US)(new Uint8Array(await a.arrayBuffer()));return`data:${a.headers.get("content-type")};base64,${e}`}}return`https://avatars.githubusercontent.com/u/e?email=${encodeURIComponent(r)}&s=${s}`}async searchMyPullRequests(e,t,i){const r=(0,Q.UH)();try{let s=function(t,i){return{pullRequest:(0,J.fromGitHubPullRequestDetailed)(t,e),reasons:i?[i]:[]}};const n=`query searchPullRequests(\n\t$authored: String!\n\t$assigned: String!\n\t$reviewRequested: String!\n\t$mentioned: String!\n) {\n\tauthored: search(first: 100, query: $authored, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${re}\n\t\t\t}\n\t\t}\n\t}\n\tassigned: search(first: 100, query: $assigned, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${re}\n\t\t\t}\n\t\t}\n\t}\n\treviewRequested: search(first: 100, query: $reviewRequested, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${re}\n\t\t\t}\n\t\t}\n\t}\n\tmentioned: search(first: 100, query: $mentioned, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${re}\n\t\t\t}\n\t\t}\n\t}\n}`;let o=i?.search?.trim()??"";if(i?.user&&(o+=` user:${i.user}`),null!=i?.repos&&i.repos.length>0){const e="  repo:";o+=`${e}${i.repos.join(e)}`}const a="is:pr is:open archived:false",c=await this.graphql(e,t,n,{authored:`${o} ${a} author:@me`.trim(),assigned:`${o} ${a} assignee:@me`.trim(),reviewRequested:`${o} ${a} review-requested:@me`.trim(),mentioned:`${o} ${a} mentions:@me`.trim(),baseUrl:i?.baseUrl},r);if(void 0===c)return[];return oe([...c.assigned.nodes.map((e=>s(e,"assigned"))),...c.reviewRequested.nodes.map((e=>s(e,"review-requested"))),...c.mentioned.nodes.map((e=>s(e,"mentioned"))),...c.authored.nodes.map((e=>s(e,"authored")))],(e=>e.pullRequest.url))}catch(t){throw this.handleException(t,e,r)}}async searchMyIssues(e,t,i){const r=(0,Q.UH)(),s=`query searchIssues(\n\t\t\t\t$authored: String!\n\t\t\t\t$assigned: String!\n\t\t\t\t$mentioned: String!\n\t\t\t) {\n\t\t\t\tauthored: search(first: 100, query: $authored, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${se}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassigned: search(first: 100, query: $assigned, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${se}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmentioned: search(first: 100, query: $mentioned, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${se}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}`;let n=i?.search?.trim()??"";if(i?.user&&(n+=` user:${i.user}`),null!=i?.repos&&i.repos.length>0){const e="  repo:";n+=`${e}${i.repos.join(e)}`}const o="type:issue is:open archived:false";try{let a=function(t,i){return{issue:(0,J.fromGitHubIssueDetailed)(t,e),reasons:i?[i]:[]}};const c=await this.graphql(e,t,s,{authored:`${n} ${o} author:@me`.trim(),assigned:`${n} ${o} assignee:@me`.trim(),mentioned:`${n} ${o} mentions:@me`.trim(),baseUrl:i?.baseUrl},r);if(void 0===c)return[];return oe([...c.assigned.nodes.map((e=>a(e,"assigned"))),...c.mentioned.nodes.map((e=>a(e,"mentioned"))),...c.authored.nodes.map((e=>a(e,"authored")))],(e=>e.issue.url))}catch(t){throw this.handleException(t,e,r)}}}function ne(e){return null==e?.baseUrl||"https://api.github.com"===e.baseUrl}function oe(e,t){return(0,H.uw)(e,t,((e,t)=>(0!==t.reasons.length&&e.reasons.push(...t.reasons),e)))}ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getAccountForCommit",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getAccountForEmail",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getDefaultBranch",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getIssueOrPullRequest",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getPullRequestForBranch",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getPullRequestForCommit",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getRepositoryMetadata",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getBlame",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getBranches",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommit",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitForFile",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitBranches",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitCount",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitOnBranch",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommits",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitRefs",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitTags",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getNextCommitRefs",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getContributors",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getDefaultBranchName",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCurrentUser",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getRepositoryVisibility",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getTags",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"resolveReference",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchCommits",1),ee([(0,q.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchCommitShas",1),ee([(0,q.fF)({args:{0:e=>e?.name,1:"<token>"}})],GitHubApi.prototype,"getEnterpriseVersion",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"searchMyPullRequests",1),ee([(0,q.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"searchMyIssues",1)},3878:(e,t,i)=>{i.r(t),i.d(t,{fromCommitFileStatus:()=>g,fromGitHubIssueDetailed:()=>m,fromGitHubPullRequest:()=>o,fromGitHubPullRequestDetailed:()=>p,fromGitHubPullRequestMergeableState:()=>u,fromGitHubPullRequestReviewDecision:()=>l,fromGitHubPullRequestState:()=>a,toGitHubPullRequestMergeableState:()=>d,toGitHubPullRequestReviewDecision:()=>h,toGitHubPullRequestState:()=>c});var r=i(7881),s=i(8452),n=i(4092);function o(e,t){return new n.i7(t,{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},String(e.number),e.id,e.title,e.permalink,a(e.state),new Date(e.updatedAt),null==e.closedAt?void 0:new Date(e.closedAt),null==e.mergedAt?void 0:new Date(e.mergedAt))}function a(e){return"MERGED"===e?"merged":"CLOSED"===e?"closed":"opened"}function c(e){return"merged"===e?"MERGED":"closed"===e?"CLOSED":"OPEN"}function l(e){switch(e){case"APPROVED":return n.pD.Approved;case"CHANGES_REQUESTED":return n.pD.ChangesRequested;case"REVIEW_REQUIRED":return n.pD.ReviewRequired}}function h(e){switch(e){case n.pD.Approved:return"APPROVED";case n.pD.ChangesRequested:return"CHANGES_REQUESTED";case n.pD.ReviewRequired:return"REVIEW_REQUIRED"}}function u(e){switch(e){case"MERGEABLE":return n.Cz.Mergeable;case"CONFLICTING":return n.Cz.Conflicting;case"UNKNOWN":return n.Cz.Unknown}}function d(e){switch(e){case n.Cz.Mergeable:return"MERGEABLE";case n.Cz.Conflicting:return"CONFLICTING";case n.Cz.Unknown:return"UNKNOWN"}}function p(e,t){return new n.i7(t,{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},String(e.number),e.id,e.title,e.permalink,a(e.state),new Date(e.updatedAt),null==e.closedAt?void 0:new Date(e.closedAt),null==e.mergedAt?void 0:new Date(e.mergedAt),u(e.mergeable),{head:{exists:null!=e.headRepository,owner:e.headRepository?.owner.login,repo:e.baseRepository?.name,sha:e.headRefOid,branch:e.headRefName,url:e.headRepository?.url},base:{exists:null!=e.baseRepository,owner:e.baseRepository?.owner.login,repo:e.baseRepository?.name,sha:e.baseRefOid,branch:e.baseRefName,url:e.baseRepository?.url},isCrossRepository:e.isCrossRepository},e.isDraft,e.additions,e.deletions,e.totalCommentsCount,l(e.reviewDecision),e.reviewRequests.nodes.map((e=>({isCodeOwner:e.asCodeOwner,reviewer:{name:e.requestedReviewer.login,avatarUrl:e.requestedReviewer.avatarUrl,url:e.requestedReviewer.url}}))),e.assignees.nodes.map((e=>({name:e.login,avatarUrl:e.avatarUrl,url:e.url}))))}function m(e,t){return new s.$9({id:t.id,name:t.name,domain:t.domain,icon:t.icon},String(e.number),e.id,e.title,e.url,new Date(e.createdAt),e.closed,a(e.state),new Date(e.updatedAt),{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},{owner:e.repository.owner.login,repo:e.repository.name},e.assignees.nodes.map((e=>({name:e.login,avatarUrl:e.avatarUrl,url:e.url}))),null==e.closedAt?void 0:new Date(e.closedAt),null==e.labels?.nodes?void 0:e.labels.nodes.map((e=>({color:e.color,name:e.name}))),e.comments?.totalCount,e.reactions?.totalCount)}function g(e){switch(e){case"added":return r.NV.Added;case"changed":case"modified":return r.NV.Modified;case"removed":return r.NV.Deleted;case"renamed":return r.NV.Renamed;case"copied":return r.NV.Copied}}},2142:(e,t,i)=>{i.r(t),i.d(t,{GitLabApi:()=>GitLabApi});var r=i(9496),s=i(9827),n=i(429),o=i(4575),a=i(4092),c=i(7925),l=i(5148),h=i(1219),u=i(4336),d=i(6004),p=i(6398),m=i(3620),g=i(6630),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&f(t,i,n),n};class GitLabApi{_disposable;_projectIds=new Map;constructor(e){this._disposable=l.D.onDidChangeAny((e=>{(l.D.changedAny(e,["http.proxy","http.proxyStrictSSL"])||l.D.changed(e,["proxy","remotes"]))&&this.resetCaches()}))}dispose(){this._disposable.dispose()}resetCaches(){this._projectIds.clear(),this._proxyAgents.clear()}_proxyAgents=new Map;getProxyAgent(e){if(n.$L)return;let t=this._proxyAgents.get(e.id);if(void 0===t){const i=e.getIgnoreSSLErrors();t=(0,s.Nx)(!0!==i&&"force"!==i&&void 0),this._proxyAgents.set(e.id,t??null)}return t??void 0}async getAccountForCommit(e,t,i,s,n,a,c){const l=(0,d.UH)(),h=await this.getProjectId(e,t,i,s,a?.baseUrl,c);if(h)try{const i=await this.request(e,t,a?.baseUrl,`v4/projects/${h}/repository/commits/${n}?stats=false`,{method:"GET"},c,l);let s;const o=await this.findUser(e,t,i.author_name,a);for(const e of o)if(e.name===i.author_name||e.publicEmail&&e.publicEmail===i.author_email){if(s=e,"active"===e.state)break}else((0,m.qq)(e.name,i.author_name)||e.publicEmail&&(0,m.qq)(e.publicEmail,i.author_email))&&(s=e);if(null==s)return;return s.avatarUrl&&!/^([a-zA-Z][\w+.-]+):/.test(s.avatarUrl)&&(s.avatarUrl=r.Uri.joinPath(r.Uri.parse(s.webUrl),"..",s.avatarUrl).toString()),{provider:e,name:s.name||void 0,email:i.author_email||void 0,avatarUrl:s.avatarUrl||void 0}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,l)}}async getAccountForEmail(e,t,i,r,s,n){const a=(0,d.UH)();try{const[i]=await this.findUser(e,t,s,n);if(null==i)return;return{provider:e,name:i.name||void 0,email:i.publicEmail||void 0,avatarUrl:i.avatarUrl||void 0}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,a)}}async getDefaultBranch(e,t,i,r,s,n){const a=(0,d.UH)();try{const o="query getDefaultBranch(\n\t$fullPath: ID!\n) {\n\tproject(fullPath: $fullPath) {\n\t\trepository {\n\t\t\trootRef\n\t\t}\n}",c=await this.graphql(e,t,s?.baseUrl,o,{fullPath:`${i}/${r}`},n,a),l=c?.data?.project?.repository?.rootRef??void 0;if(null==l)return;return{provider:e,name:l}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,a)}}async getIssueOrPullRequest(e,t,i,r,s,n,a){const c=(0,d.UH)();try{const o="query getIssueOrMergeRequest(\n\t$fullPath: ID!\n\t$iid: String!\n) {\n\tproject(fullPath: $fullPath) {\n\t\tmergeRequest(iid: $iid) {\n\t\t\tauthor {\n\t\t\t\tname\n\t\t\t\tavatarUrl\n\t\t\t\twebUrl\n\t\t\t}\n\t\t\tiid\n\t\t\ttitle\n\t\t\tdescription\n\t\t\tstate\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tmergedAt\n\t\t\twebUrl\n\t\t}\n\t\tissue(iid: $iid) {\n\t\t\tauthor {\n\t\t\t\tname\n\t\t\t\tavatarUrl\n\t\t\t\twebUrl\n\t\t\t}\n\t\t\tiid\n\t\t\ttitle\n\t\t\tdescription\n\t\t\tstate\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tclosedAt\n\t\t\twebUrl\n\t\t}\n\t}\n}",l=await this.graphql(e,t,n?.baseUrl,o,{fullPath:`${i}/${r}`,iid:String(s)},a,c);if(null!=l?.data?.project?.issue){const t=l.data.project.issue;return{provider:e,type:"issue",id:t.iid,nodeId:void 0,date:new Date(t.createdAt),title:t.title,closed:"closed"===t.state,closedDate:null==t.closedAt?void 0:new Date(t.closedAt),url:t.webUrl,state:"locked"===t.state?"closed":t.state}}if(null!=l?.data?.project?.mergeRequest){const t=l.data.project.mergeRequest;return{provider:e,type:"pullrequest",id:t.iid,nodeId:void 0,date:new Date(t.createdAt),title:t.title,closed:"closed"===t.state,closedDate:"closed"===t.state?new Date(t.updatedAt):void 0,url:t.webUrl,state:"locked"===t.state?"closed":t.state}}return}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,c)}}async getPullRequestForBranch(e,t,i,r,s,n,c){const l=(0,d.UH)();try{const o="\n\t\t\tnodes {\n\t\t\t\tiid\n\t\t\t\tauthor {\n\t\t\t\t\tname\n\t\t\t\t\tavatarUrl\n\t\t\t\t\twebUrl\n\t\t\t\t}\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tstate\n\t\t\t\tcreatedAt\n\t\t\t\tupdatedAt\n\t\t\t\tmergedAt\n\t\t\t\twebUrl\n\t\t\t}",h=`query getMergeRequestForBranch(\n\t$fullPath: ID!\n\t$branches: [String!]\n) {\n\tproject(fullPath: $fullPath) {\n\t\t${null==n?.include?`mergeRequests(sourceBranches: $branches sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t\t${n?.include?.includes("opened")?`opened: mergeRequests(sourceBranches: $branches state: opened sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t\t${n?.include?.includes("merged")?`merged: mergeRequests(sourceBranches: $branches state: merged sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t\t${n?.include?.includes("closed")?`closed: mergeRequests(sourceBranches: $branches state: closed sort: UPDATED_DESC first: 1) {\n\t\t\t${o}\n\t\t}`:""}\n\t}\n}`,u=await this.graphql(e,t,n?.baseUrl,h,{fullPath:`${i}/${r}`,branches:[s],state:n?.include},c,l);let d;if(null==n?.include)d=u?.data?.project?.mergeRequests?.nodes?.[0];else for(const e of n.include){let t;"opened"===e?t=u?.data?.project?.opened?.nodes?.[0]:"merged"===e?t=u?.data?.project?.merged?.nodes?.[0]:"closed"===e&&(t=u?.data?.project?.closed?.nodes?.[0]),null!=t&&(null==d||new Date(t.updatedAt)>new Date(d.updatedAt))&&(d=t)}if(null==d)return;return new a.i7(e,{name:d.author?.name??"Unknown",avatarUrl:d.author?.avatarUrl??"",url:d.author?.webUrl??""},String(d.iid),void 0,d.title,d.webUrl,(0,g.fromGitLabMergeRequestState)(d.state),new Date(d.updatedAt),"closed"!==d.state?void 0:new Date(d.updatedAt),null==d.mergedAt?void 0:new Date(d.mergedAt))}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,l)}}async getPullRequestForCommit(e,t,i,r,s,n,a){const c=(0,d.UH)(),l=await this.getProjectId(e,t,i,r,n?.baseUrl,a);if(l)try{const i=await this.request(e,t,n?.baseUrl,`v4/projects/${l}/repository/commits/${s}/merge_requests`,{method:"GET"},a,c);if(null==i||0===i.length)return;return i.length>1&&i.sort(((e,t)=>("opened"===e.state?-1:1)-("opened"===t.state?-1:1)||new Date(t.updated_at).getTime()-new Date(e.updated_at).getTime())),(0,g.fromGitLabMergeRequestREST)(i[0],e)}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,c)}}async getRepositoryMetadata(e,t,i,r,s,n){const a=(0,d.UH)(),c=await this.getProjectId(e,t,i,r,s?.baseUrl,n);if(c)try{const i=await this.request(e,t,s?.baseUrl,`v4/projects/${c}`,{method:"GET"},n,a);if(null==i)return;return{provider:e,owner:i.namespace.full_path,name:i.path,isFork:null!=i.forked_from_project,parent:null!=i.forked_from_project?{owner:i.forked_from_project.namespace.full_path,name:i.forked_from_project.path}:void 0}}catch(t){if(t instanceof o.Ww)return;throw this.handleException(t,e,a)}}async findUser(e,t,i,r,s){const n=(0,d.UH)();try{const o="query findUser(\n$search: String!\n) {\n\tusers(search: $search) {\n\t\tnodes {\n\t\t\tid\n\t\t\tname\n\t\t\tusername,\n\t\t\tpublicEmail,\n\t\t\tstate\n\t\t\tavatarUrl\n\t\t\twebUrl\n\t\t}\n\t}\n}",a=await this.graphql(e,t,r?.baseUrl,o,{search:i},s,n),c=a?.data?.users?.nodes;if(null==c||0===c.length)return[];const l=[];for(const e of c){const t=/gid:\/\/gitlab\/User\/([0-9]+)\b/.exec(e.id);null!=t&&l.push({id:parseInt(t[1],10),name:e.name,username:e.username,publicEmail:e.publicEmail||void 0,state:e.state,avatarUrl:e.avatarUrl,webUrl:e.webUrl})}return l}catch(t){return t instanceof o.Ww||this.handleException(t,e,n),[]}}getProjectId(e,t,i,r,s,n){const o=`${t}|${i}/${r}`;let a=this._projectIds.get(o);return null==a&&(a=this.getProjectIdCore(e,t,i,r,s,n),this._projectIds.set(o,a)),a}async getProjectIdCore(e,t,i,r,s,n){const a=(0,d.UH)();try{const o="query getProjectId(\n\t$fullPath: ID!\n) {\n\tproject(fullPath: $fullPath) {\n\t\tid\n\t}\n}",c=await this.graphql(e,t,s,o,{fullPath:`${i}/${r}`},n,a),l=c?.data?.project?.id;if(null==l)return;const h=/gid:\/\/gitlab\/Project\/([0-9]+)\b/.exec(l);if(null==h)return;const u=h[1];return(0,d.lH)(a,` • projectId=${u}`),u}catch(t){if(t instanceof o.Ww)return;return void this.handleException(t,e,a)}}async graphql(e,t,i,n,a,c,l){let h;try{const r=(0,p.k)(`[GITLAB] POST ${i}`,{log:!1}),l=this.getProxyAgent(e);try{let r;if(null!=c){if(c.isCancellationRequested)throw new o.FU;r=new AbortController,c.onCancellationRequested((()=>r.abort()))}if(h=await(0,s.a_)(e.getIgnoreSSLErrors(),(()=>(0,s.he)(`${i??"https://gitlab.com/api"}/graphql`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},agent:l,signal:r?.signal,body:JSON.stringify({query:n,variables:a})}))),h.ok){const e=await h.json();if("errors"in e)throw new o.Xq("GitLab",h,e.errors);return e}throw new o.Xq("GitLab",h)}finally{const e=/(^[^({\n]+)/.exec(n),t=` ${e?.[1].trim()??n}`;r?.stop({message:t})}}catch(i){throw i instanceof o.Xq||"AbortError"===i.name?this.handleRequestError(e,t,i,l):u.Yd.isDebugging&&r.window.showErrorMessage(`GitLab request failed: ${i.message}`),i}}async request(e,t,i,n,a,c,l){const h=`${i??"https://gitlab.com/api"}/${n}`;let d;try{const i=(0,p.k)(`[GITLAB] ${a?.method??"GET"} ${h}`,{log:!1}),r=this.getProxyAgent(e);try{let i;if(null!=c){if(c.isCancellationRequested)throw new o.FU;i=new AbortController,c.onCancellationRequested((()=>i.abort()))}if(d=await(0,s.a_)(e.getIgnoreSSLErrors(),(()=>(0,s.he)(h,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},agent:r,signal:i?.signal,...a}))),d.ok){return await d.json()}throw new o.Xq("GitLab",d)}finally{i?.stop()}}catch(i){throw i instanceof o.Xq||"AbortError"===i.name?this.handleRequestError(e,t,i,l):u.Yd.isDebugging&&r.window.showErrorMessage(`GitLab request failed: ${i.message}`),i}}handleRequestError(e,t,i,s){if("AbortError"===i.name||!(i instanceof o.Xq))throw new o.FU;switch(i.status){case 404:case 410:case 422:throw new o.Ww(i);case 401:throw new o._7("gitlab",o.Jx.Unauthorized,i);case 403:if(i.message.includes("rate limit exceeded")){let e;const r=i.response?.headers?.get("x-ratelimit-reset");throw null!=r&&(e=parseInt(r,10),Number.isNaN(e)&&(e=void 0)),new o.yx(i,t,e)}throw new o._7("gitlab",o.Jx.Forbidden,i);case 500:return u.Yd.error(i,s),void(null!=i.response&&(e?.trackRequestException(),(0,c.vF)(`${e?.name??"GitLab"} failed to respond and might be experiencing issues.${e?.custom?"":" Please visit the [GitLab status page](https://status.gitlab.com) for more information."}`)));case 502:if(u.Yd.error(i,s),i.message.includes("timeout"))return e?.trackRequestException(),void(0,c.s$)(e?.name??"GitLab");break;default:if(i.status>=400&&i.status<500)throw new o.Bn(i)}u.Yd.error(i,s),u.Yd.isDebugging&&r.window.showErrorMessage(`GitLab request failed: ${i.response?.errors?.[0]?.message??i.message}`)}handleException(e,t,i){return u.Yd.error(e,i),e instanceof o._7&&this.showAuthenticationErrorMessage(e,t),e}async showAuthenticationErrorMessage(e,t){if(e.reason===o.Jx.Unauthorized||e.reason===o.Jx.Forbidden){const i="Reauthenticate";await r.window.showErrorMessage(`${e.message}. Would you like to try reauthenticating${e.reason===o.Jx.Forbidden?" to provide additional access":""}?`,i)===i&&(await t.reauthenticate(),this.resetCaches())}else r.window.showErrorMessage(e.message)}}v([(0,h.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getAccountForCommit",1),v([(0,h.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getAccountForEmail",1),v([(0,h.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getDefaultBranch",1),v([(0,h.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getIssueOrPullRequest",1),v([(0,h.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getPullRequestForBranch",1),v([(0,h.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getPullRequestForCommit",1),v([(0,h.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getRepositoryMetadata",1)},6630:(e,t,i)=>{i.r(t),i.d(t,{fromGitLabMergeRequestREST:()=>o,fromGitLabMergeRequestState:()=>s,toGitLabMergeRequestState:()=>n});var r=i(4092);function s(e){return"locked"===e?"closed":e}function n(e){return e}function o(e,t){return new r.i7(t,{name:e.author?.name??"Unknown",avatarUrl:e.author?.avatar_url??"",url:e.author?.web_url??""},String(e.iid),void 0,e.title,e.web_url,s(e.state),new Date(e.updated_at),null==e.closed_at?void 0:new Date(e.closed_at),null==e.merged_at?void 0:new Date(e.merged_at))}},6516:(e,t,i)=>{i.d(t,{Cx:()=>s,EE:()=>d,PY:()=>u,RE:()=>o,Z1:()=>g,_n:()=>w,aG:()=>m,cF:()=>y,dz:()=>f,fV:()=>a,gA:()=>v,jc:()=>n,kU:()=>h,tL:()=>c,ww:()=>p});var r=i(7512),s=(e=>(e.Free="free",e.FreePlus="free+",e.Pro="pro",e.Teams="teams",e.Enterprise="enterprise",e))(s||{}),n=(e=>(e[e.VerificationRequired=-1]="VerificationRequired",e[e.Free=0]="Free",e[e.FreeInPreviewTrial=1]="FreeInPreviewTrial",e[e.FreePreviewTrialExpired=2]="FreePreviewTrialExpired",e[e.FreePlusInTrial=3]="FreePlusInTrial",e[e.FreePlusTrialExpired=4]="FreePlusTrialExpired",e[e.Paid=5]="Paid",e))(n||{});function o(e){const{account:t,plan:{actual:i,effective:r},previewTrial:s}=e;if(!1===t?.verified)return-1;if(i.id===r.id)switch(r.id){case"free":return null==s?0:2;case"free+":return 4;case"pro":case"teams":case"enterprise":return 5}switch(r.id){case"free":return null==s?0:1;case"free+":return 4;case"pro":return"free"===i.id?1:3;case"teams":case"enterprise":return 5}}function a(e,t,i,r,s,n,o=!1){return{id:e,name:c(e),bundle:t,cancelled:o,organizationId:r,trialReactivationCount:i,startedOn:(s??new Date).toISOString(),expiresOn:null!=n?n.toISOString():void 0}}function c(e){switch(e){case"free+":return"GitKraken Free";case"pro":return"GitKraken Pro";case"teams":return"GitKraken Teams";case"enterprise":return"GitKraken Enterprise";default:return"GitKraken"}}const l=new Map([[void 0,-1],["free",0],["free+",1],["pro",2],["teams",3],["enterprise",4]]);function h(e){return l.get(e)??-1}function u(e,t){return d(e.plan.effective.expiresOn,t)}function d(e,t){return null!=e?(0,r.hM)(Date.now(),new Date(e),t):void 0}function p(e){return m(e.plan.effective.id)}function m(e){return"free"!==e&&"free+"!==e}function g(e){const t=u(e);return null!=t&&t<=0}function f(e){return e.plan.actual.id!==e.plan.effective.id}function w(e){if(null==e.account||!f(e)||!1===v(e))return!1;const t=u(e);return null==t||t<=0}function v(e){const t=d(e.previewTrial?.expiresOn);return null!=t?t<=0:void 0}function y(e){}},718:(e,t,i)=>{i.d(t,{C:()=>a,L:()=>o});var r=i(9496),s=i(5148),n=i(2061);function o(){return(0,n.fw)("gitlens:plus:enabled",s.D.get("plusFeatures.enabled",void 0,!0))}async function a(){if(o())return!0;const e={title:"Enable"};return await r.window.showInformationMessage("Pro features are currently disabled. Would you like to enable them?",{modal:!0},e,{title:"Cancel",isCloseAffordance:!0})===e&&(await s.D.updateEffective("plusFeatures.enabled",!0),!0)}},4435:(e,t,i)=>{i.d(t,{FQ:()=>a,eb:()=>n,wz:()=>o});var r=i(9496),s=i(6516);async function n(e,t){for(;;){const i=await t.subscription.getSubscription();if(!1===i.account?.verified){const i={title:"Resend Verification"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${e}\n\nYou must verify your email before you can continue.`,{modal:!0},i,s)===i&&await t.subscription.resendVerification())continue;return!1}const n=i.plan.effective.id;if((0,s.aG)(n))break;if(null==i.account){const i={title:"Start Free GitKraken Trial"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${e}\n\nTry our developer productivity and collaboration services free for 7 days.`,{modal:!0},i,s)===i&&await t.subscription.loginOrSignUp())continue}else{const i={title:"Upgrade to Pro"},s={title:"Cancel",isCloseAffordance:!0};await r.window.showWarningMessage(`${e}\n\nContinue to use our developer productivity and collaboration services.`,{modal:!0},i,s)===i&&t.subscription.purchase()}return!1}return!0}async function o(e,t){for(;;){const i=await t.subscription.getSubscription();if(!1===i.account?.verified){const i={title:"Resend Verification"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${e}\n\nYou must verify your email before you can continue.`,{modal:!0},i,s)===i&&await t.subscription.resendVerification())continue;return!1}if(null!=i.account)break;const s={title:"Sign In / Sign Up"},n={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${e}\n\nGain access to our developer productivity and collaboration services.`,{modal:!0},s,n)!==s||!await t.subscription.loginOrSignUp())return!1}return!0}async function a(e){if(e.storage.get("confirm:draft:storage",!1))return!0;for(;;){const t={title:"Continue"},i={title:"Cancel",isCloseAffordance:!0},s={title:"Learn More"},n={title:"Security"},o=await r.window.showInformationMessage("Cloud Patches are securely stored by GitKraken and can be accessed by anyone with the link and a GitKraken account.",{modal:!0},t,s,n,i);if(o===t)return e.storage.store("confirm:draft:storage",!0),!0;if(o!==n){if(o!==s)return!1;r.env.openExternal(r.Uri.parse("https://www.gitkraken.com/solutions/cloud-patches"))}else r.env.openExternal(r.Uri.parse("https://help.gitkraken.com/gitlens/security"))}}},420:(e,t,i)=>{i.d(t,{AccountWebviewProvider:()=>AccountWebviewProvider});var r=i(9496),s=i(8388),n=i(9529),o=i(9796);const a=new(i(5798).jH)("subscription/didChange");class AccountWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this))}_disposable;dispose(){this._disposable.dispose()}onSubscriptionChanged(e){this.notifyDidChangeSubscription(e.current)}registerCommands(){return[(0,n.xR)(`${this.host.id}.refresh`,(async()=>{await this.validateSubscriptionCore(!0),await this.host.refresh(!0)}),this)]}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChangeSubscription()}onVisibilityChanged(e){e?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}onWindowFocusChanged(e){e&&this.host.visible?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}async getSubscription(e){const t=e??await this.container.subscription.getSubscription(!0);let i;return i=t.account?.email?(0,s.GV)(t.account.email,34).toString():`${this.host.getWebRoot()??""}/media/gitlens-logo.webp`,{subscription:t,avatar:i}}async getState(e){const t=await this.getSubscription(e);return{...this.host.baseWebviewState,webroot:this.host.getWebRoot(),subscription:t.subscription,avatar:t.avatar}}notifyDidChangeSubscription(e){return r.window.withProgress({location:{viewId:this.host.id}},(async()=>{const t=await this.getSubscription(e);return this.host.notify(a,{...t})}))}_validateSubscriptionDebounced=void 0;async validateSubscription(){null==this._validateSubscriptionDebounced&&(this._validateSubscriptionDebounced=(0,o.Ds)(this.validateSubscriptionCore,1e3)),await this._validateSubscriptionDebounced()}_validating;async validateSubscriptionCore(e){if(null==this._validating||e){this._validating=this.container.subscription.validate({force:e});try{await this._validating}finally{this._validating=void 0}}}}},1629:(e,t,i)=>{i.d(t,{FocusWebviewProvider:()=>FocusWebviewProvider});var r=i(9496),s=i(5255),n=i(8887),o=i(4155),a=i(8834),c=i(5367),l=i(8452),h=i(4092),u=i(4321),d=i(3646),p=i(2674),m=i(4794),g=i(9529),f=i(1219),w=i(4336),v=i(6004),y=i(5116),b=i(7469),C=i(5798);const A=new C.ke("focus/pr/openWorktree"),S=new C.ke("focus/pr/openBranch"),P=new C.ke("focus/pr/switchToBranch"),k=new C.ke("focus/pr/snooze"),D=new C.ke("focus/pr/pin"),R=new C.ke("focus/issue/snooze"),_=new C.ke("focus/issue/pin"),T=new C.jH("focus/didChange",!0);var F=Object.defineProperty,$=Object.getOwnPropertyDescriptor,I=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?$(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&F(t,i,n),n};class FocusWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepositories((async()=>{if(this._etag!==this.container.git.etag){if(null!=this._discovering&&(this._etag=await this._discovering,this._etag===this.container.git.etag))return;this.host.refresh(!0)}})))}_pullRequests=[];_issues=[];_discovering;_disposable;_etag;_etagSubscription;_repositoryEventsDisposable;_repos;_enrichedItems;dispose(){this._disposable.dispose()}onMessageReceived(e){switch(e.method){case S.method:(0,C.mq)(S,e,(e=>this.onOpenBranch(e)));break;case P.method:(0,C.mq)(P,e,(e=>this.onSwitchBranch(e)));break;case A.method:(0,C.mq)(A,e,(e=>this.onOpenWorktree(e)));break;case k.method:(0,C.mq)(k,e,(e=>this.onSnoozePr(e)));break;case D.method:(0,C.mq)(D,e,(e=>this.onPinPr(e)));break;case R.method:(0,C.mq)(R,e,(e=>this.onSnoozeIssue(e)));break;case _.method:(0,C.mq)(_,e,(e=>this.onPinIssue(e)))}}async onPinIssue({issue:e,pin:t}){const i=this._issues?.find((t=>t.issue.nodeId===e.nodeId));if(null!=i){if(t)await this.container.focus.unpinItem(t),this._enrichedItems=this._enrichedItems?.filter((e=>e.id!==t)),i.enriched=i.enriched?.filter((e=>e.id!==t));else{const e={type:"issue",id:i.issue.nodeId,remote:i.repoAndRemote.remote,url:i.issue.url},t=await this.container.focus.pinItem(e);if(null==t)return;null==this._enrichedItems&&(this._enrichedItems=[]),this._enrichedItems.push(t),null==i.enriched&&(i.enriched=[]),i.enriched.push(t)}this.notifyDidChangeState()}}async onSnoozeIssue({issue:e,snooze:t}){const i=this._issues?.find((t=>t.issue.nodeId===e.nodeId));if(null!=i){if(t)await this.container.focus.unsnoozeItem(t),this._enrichedItems=this._enrichedItems?.filter((e=>e.id!==t)),i.enriched=i.enriched?.filter((e=>e.id!==t));else{const e={type:"issue",id:i.issue.nodeId,remote:i.repoAndRemote.remote,url:i.issue.url},t=await this.container.focus.snoozeItem(e);if(null==t)return;null==this._enrichedItems&&(this._enrichedItems=[]),this._enrichedItems.push(t),null==i.enriched&&(i.enriched=[]),i.enriched.push(t)}this.notifyDidChangeState()}}async onPinPr({pullRequest:e,pin:t}){const i=this._pullRequests?.find((t=>t.pullRequest.nodeId===e.nodeId));if(null!=i){if(t)await this.container.focus.unpinItem(t),this._enrichedItems=this._enrichedItems?.filter((e=>e.id!==t)),i.enriched=i.enriched?.filter((e=>e.id!==t));else{const e={type:"pr",id:i.pullRequest.nodeId,remote:i.repoAndRemote.remote,url:i.pullRequest.url},t=await this.container.focus.pinItem(e);if(null==t)return;null==this._enrichedItems&&(this._enrichedItems=[]),this._enrichedItems.push(t),null==i.enriched&&(i.enriched=[]),i.enriched.push(t)}this.notifyDidChangeState()}}async onSnoozePr({pullRequest:e,snooze:t}){const i=this._pullRequests?.find((t=>t.pullRequest.nodeId===e.nodeId));if(null!=i){if(t)await this.container.focus.unsnoozeItem(t),this._enrichedItems=this._enrichedItems?.filter((e=>e.id!==t)),i.enriched=i.enriched?.filter((e=>e.id!==t));else{const e={type:"pr",id:i.pullRequest.nodeId,remote:i.repoAndRemote.remote,url:i.pullRequest.url},t=await this.container.focus.snoozeItem(e);if(null==t)return;null==this._enrichedItems&&(this._enrichedItems=[]),this._enrichedItems.push(t),null==i.enriched&&(i.enriched=[]),i.enriched.push(t)}this.notifyDidChangeState()}}findSearchedPullRequest(e){return this._pullRequests?.find((t=>t.pullRequest.id===e.id))}async getRemoteBranch(e){const t=e.pullRequest,i=e.repoAndRemote,s=i.repo.uri,n=await i.repo.getMainRepository();if(null==n)return void r.window.showWarningMessage(`Unable to find main repository(${s.toString()}) for PR #${t.id}`);const a=t.refs.base.owner,c=r.Uri.parse(t.refs.base.url),l=t.refs.head.branch,h=r.Uri.parse(t.refs.head.url),d=h.toString(),[,p,g]=(0,m.Sk)(d);let f,w;if([f]=await n.getRemotes({filter:e=>e.matches(p,g)}),null!=f)w=`${f.name}/${l}`,await this.container.git.fetch(n.path,{remote:f.name});else{const e=await r.window.showInformationMessage(`Unable to find a remote for '${d}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});if("Yes"!==e?.title)return;const i=t.refs.head.owner;if(await(0,o.IH)(n,i,d,{confirm:!1,fetch:!0,reveal:!1}),[f]=await n.getRemotes({filter:e=>e.url===d}),null==f)return;w=`${f.name}/${l}`;const s=t.refs.base.repo,u=`pr/${c.toString()===h.toString()?l:w}`;this.container.git.setConfig(n.path,`branch.${u}.github-pr-owner-number`,`${a}#${s}#${t.id}`)}return{remote:f,reference:(0,u.xB)(w,n.path,{refType:"branch",name:w,remote:!0})}}async onOpenBranch({pullRequest:e}){const t=this.findSearchedPullRequest(e);if(null==t)return;const i=await this.getRemoteBranch(t);null!=i?(0,g.P0)(s.Gh.ShowInCommitGraph,{ref:i.reference}):r.window.showErrorMessage(`Unable to find remote branch for '${t.pullRequest.refs?.head.owner}:${t.pullRequest.refs?.head.branch}'`)}async onSwitchBranch({pullRequest:e}){const t=this.findSearchedPullRequest(e);if(null==t||t.isCurrentBranch)return;if(null!=t.branch)return a.gu(t.branch.repoPath,t.branch);const i=await this.getRemoteBranch(t);if(null!=i)return a.gu(i.remote.repoPath,i.reference);r.window.showErrorMessage(`Unable to find remote branch for '${t.pullRequest.refs?.head.owner}:${t.pullRequest.refs?.head.branch}'`)}async onOpenWorktree({pullRequest:e}){const t=this.findSearchedPullRequest(e);if(null==t?.repoAndRemote)return;const i=r.Uri.parse(e.refs.base.url),n=t.repoAndRemote.repo.uri;return(0,g.P0)(s.Gh.OpenOrCreateWorktreeForGHPR,{base:{repositoryCloneUrl:{repositoryName:e.refs.base.repo,owner:e.refs.base.owner,url:i}},githubRepository:{rootUri:n},head:{ref:e.refs.head.branch,sha:e.refs.head.sha,repositoryCloneUrl:{repositoryName:e.refs.head.repo,owner:e.refs.head.owner,url:r.Uri.parse(e.refs.head.url)}},item:{number:parseInt(e.id,10)}})}onSubscriptionChanged(e){e.etag!==this._etagSubscription&&(this._etagSubscription=e.etag,this._access=void 0,this.notifyDidChangeState())}_access;async getAccess(e){return(e||null==this._access)&&(this._access=await this.container.git.access(n.x.Focus)),this._access}async getState(e,t){const i=this.host.baseWebviewState;this._etag=this.container.git.etag,this.container.git.isDiscoveringRepositories&&(this._discovering=this.container.git.isDiscoveringRepositories.then((e=>(this._discovering=void 0,e))),this._etag=await this._discovering);const r=await this.getAccess(e);if(!0!==r.allowed)return{...i,access:r};const s=await this.getRichRepos(e),n=s.filter((e=>e.isGitHub));const o=function(e){return e.filter((e=>e.isConnected&&e.isGitHub))}(n);if(!(o.length>0))return{...i,access:r,repos:n.map((e=>E(e)))};const a=o.map((e=>E(e))),c=Promise.allSettled([this.getMyPullRequests(o,e),this.getMyIssues(o,e),this.getEnrichedItems(e)]);async function u(){const[e,t,s]=await c;return{...i,access:r,repos:a,pullRequests:(0,b.Sb)(e)?.map((e=>({pullRequest:(0,h.l1)(e.pullRequest),reasons:e.reasons,isCurrentBranch:e.isCurrentBranch??!1,isCurrentWorktree:e.isCurrentWorktree??!1,hasWorktree:e.hasWorktree??!1,hasLocalBranch:e.hasLocalBranch??!1,enriched:x(e,(0,b.Sb)(s)),rank:e.rank}))),issues:(0,b.Sb)(t)?.map((e=>({issue:(0,l.y$)(e.issue),reasons:e.reasons,enriched:x(e,(0,b.Sb)(s)),rank:e.rank})))}}if(t)return queueMicrotask((async()=>{const e=await u();this.host.notify(T,{state:e})})),{...i,access:r,repos:a};return await u()}async includeBootstrap(){return this.getState(!0,!0)}async getRichRepos(e){if(e||null==this._repos){const e=[],t=[];for(const i of this.container.git.openRepositories){const r=await i.getRichRemote();null==r||e.findIndex((e=>e.remote===r))>-1||(t.push(i.onDidChange(this.onRepositoryChanged,this)),e.push({repo:i,remote:r,isConnected:await r.provider.isConnected(),isGitHub:"github"===r.provider.id}))}this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0),this._repositoryEventsDisposable=r.Disposable.from(...t),this._repos=e}return this._repos}onRepositoryChanged(e){e.changed(d.I6.RemoteProviders,d.du.Any)&&this.notifyDidChangeState(!0)}async getMyPullRequests(e,t){const i=(0,v.UH)();if(t||null==this._pullRequests){const t=[],r=new Map,s=new Map,n=e.map((e=>[e,this.container.git.getMyPullRequests(e.remote)]));for(const[e,o]of n){let n;try{n=await o}catch(t){w.Yd.error(t,i,`Failed to get prs for '${e.remote.url}'`)}if(null!=n)for(const i of n){if(0===i.reasons.length)continue;const n={...i,repoAndRemote:e,isCurrentWorktree:!1,isCurrentBranch:!1,rank:O(i)},o=`${n.pullRequest.refs.head.owner}/${n.pullRequest.refs.head.branch}`;let a=r.get(n.repoAndRemote.repo);null==a&&(a=new y.X((e=>n.repoAndRemote.repo.getBranches(null!=e?{paging:e}:void 0))),r.set(n.repoAndRemote.repo,a));let l=s.get(n.repoAndRemote.repo);null==l&&(l=await n.repoAndRemote.repo.getWorktrees(),s.set(n.repoAndRemote.repo,l));const h=await(0,p.K)(n.repoAndRemote.repo,n.pullRequest.refs.head.branch,o,l,a);n.hasWorktree=null!=h,n.isCurrentWorktree=!0===h?.opened;const u=await(0,c.eK)(e.repo,o,a);u&&(n.branch=u,n.hasLocalBranch=!0,n.isCurrentBranch=u.current),t.push(n)}}this._pullRequests=t.sort(((e,t)=>{const i=e.rank,r=t.rank;return i===r?e.pullRequest.date.getTime()-t.pullRequest.date.getTime():(r??0)-(i??0)}))}return this._pullRequests}async getMyIssues(e,t){const i=(0,v.UH)();if(t||null==this._pullRequests){const t=[],r=e.map((e=>[e,this.container.git.getMyIssues(e.remote)]));for(const[e,s]of r){let r;try{r=await s}catch(t){w.Yd.error(t,i,`Failed to get issues for '${e.remote.url}'`)}if(null!=r)for(const i of r)0!==i.reasons.length&&t.push({...i,repoAndRemote:e,rank:0})}this._issues=t.sort(((e,t)=>t.issue.updatedDate.getTime()-e.issue.updatedDate.getTime()))}return this._issues}async getEnrichedItems(e){if(e||null==this._enrichedItems){const e=await this.container.focus.get();this._enrichedItems=e}return this._enrichedItems}async notifyDidChangeState(e,t){this.host.notify(T,{state:await this.getState(e,t)})}}function x(e,t){if(null==t||0===t.length)return;let i;return i=null!=e.pullRequest?t.filter((t=>t.entityUrl===e.pullRequest.url)):t.filter((t=>t.entityUrl===e.issue.url)),0!==i.length?(e.enriched=i,i.map((e=>({id:e.id,type:e.type})))):void 0}function O(e){let t=0;return e.reasons.includes("authored")?t+=1e3:e.reasons.includes("assigned")?t+=900:e.reasons.includes("review-requested")?t+=800:e.reasons.includes("mentioned")&&(t+=700),e.pullRequest.reviewDecision===h.pD.Approved?e.pullRequest.mergeableState===h.Cz.Mergeable?t+=100:e.pullRequest.mergeableState===h.Cz.Conflicting?t+=90:t+=80:e.pullRequest.reviewDecision===h.pD.ChangesRequested&&(t+=70),t}function E(e){return{repo:e.repo.path,isGitHub:e.isGitHub,isConnected:e.isConnected}}I([(0,f.fF)({args:!1})],FocusWebviewProvider.prototype,"onPinIssue",1),I([(0,f.fF)({args:!1})],FocusWebviewProvider.prototype,"onSnoozeIssue",1),I([(0,f.fF)({args:!1})],FocusWebviewProvider.prototype,"onPinPr",1),I([(0,f.fF)({args:!1})],FocusWebviewProvider.prototype,"onSnoozePr",1),I([(0,f.fF)({args:!1})],FocusWebviewProvider.prototype,"onOpenBranch",1),I([(0,f.fF)({args:!1})],FocusWebviewProvider.prototype,"onSwitchBranch",1),I([(0,f.fF)({args:!1})],FocusWebviewProvider.prototype,"onOpenWorktree",1),I([(0,f.fF)()],FocusWebviewProvider.prototype,"getAccess",1),I([(0,f.fF)()],FocusWebviewProvider.prototype,"getState",1),I([(0,f.fF)()],FocusWebviewProvider.prototype,"getRichRepos",1),I([(0,f.fF)({args:{0:!1}})],FocusWebviewProvider.prototype,"getMyPullRequests",1),I([(0,f.fF)({args:{0:!1}})],FocusWebviewProvider.prototype,"getMyIssues",1),I([(0,f.fF)()],FocusWebviewProvider.prototype,"getEnrichedItems",1)},1302:(e,t,i)=>{i.d(t,{GraphWebviewProvider:()=>GraphWebviewProvider});var r=i(9496),s=i(8388),n=i(7139),o=i(5255),a=i(8887),c=i(3401),l=i(6897),h=i(7445),u=i(8834),d=i(252),p=i(6713),m=i(5025),g=i(6592),f=i(5367),w=i(439),v=i(1719),y=i(4321),b=i(3050),C=i(6503),A=i(3646),S=i(6934),P=i(635),k=i(9529),D=i(5148),R=i(2061),_=i(5432),T=i(1219),F=i(9796),$=i(3105),I=i(9967),x=i(7469),O=i(2509),E=i(9701),B=i(5010),W=i(5798),M=i(620);const N=["upstream","pullRequest","issue"],L=new W.ke("graph/chooseRepository"),U=new W.ke("graph/dimMergeCommits"),G=new W.ke("graph/dblclick"),H=new W.ke("graph/rows/ensure"),V=new W.ke("graph/avatars/get"),q=new W.ke("graph/refs/metadata/get"),j=new W.ke("graph/rows/get"),Q=new W.ke("graph/search"),Y=new W.ke("graph/search/openInView"),z=new W.ke("graph/columns/update"),K=new W.ke("graph/refs/update/visibility"),J=new W.ke("graph/fitlers/update/excludeType"),X=new W.ke("graph/configuration/update"),Z=new W.ke("graph/fitlers/update/includeOnlyRefs"),ee=new W.ke("graph/selection/update"),te=new W.jH("graph/didChange",!0,!0),ie=new W.jH("graph/configuration/didChange"),re=new W.jH("graph/subscription/didChange"),se=new W.jH("graph/avatars/didChange"),ne=new W.jH("graph/refs/didChangeMetadata"),oe=new W.jH("graph/columns/didChange"),ae=new W.jH("graph/scrollMarkers/didChange"),ce=new W.jH("graph/focus/didChange"),le=new W.jH("graph/window/focus/didChange"),he=new W.jH("graph/refs/didChangeVisibility"),ue=new W.jH("graph/rows/didChange",void 0,!0),de=new W.jH("graph/rows/stats/didChange"),pe=new W.jH("graph/selection/didChange"),me=new W.jH("graph/workingTree/didChange"),ge=new W.jH("graph/rows/didEnsure"),fe=new W.jH("graph/didSearch"),we=new W.jH("graph/didFetch");var ve=Object.defineProperty,ye=Object.getOwnPropertyDescriptor,be=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ye(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ve(t,i,n),n};const Ce={ref:{width:130,isHidden:!1,order:0},graph:{width:150,mode:void 0,isHidden:!1,order:1},message:{width:300,isHidden:!1,order:2},author:{width:130,isHidden:!1,order:3},changes:{width:200,isHidden:!1,order:4},datetime:{width:130,isHidden:!1,order:5},sha:{width:130,isHidden:!1,order:6}},Ae={ref:{width:32,isHidden:!1},graph:{width:150,mode:"compact",isHidden:!1},author:{width:32,isHidden:!1,order:2},message:{width:500,isHidden:!1,order:3},changes:{width:200,isHidden:!1,order:4},datetime:{width:130,isHidden:!0,order:5},sha:{width:130,isHidden:!1,order:6}};class GraphWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._showDetailsView=D.D.get("graph.showDetailsView"),this._theme=r.window.activeColorTheme,this.ensureRepositorySubscriptions(),this.host.isView()&&(this.host.description="✨"),this._disposable=r.Disposable.from(D.D.onDidChange(this.onConfigurationChanged,this),this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepositories((async()=>{if(this._etag!==this.container.git.etag){if(null!=this._discovering&&(this._etag=await this._discovering,this._etag===this.container.git.etag))return;this.host.refresh(!0)}})),r.window.onDidChangeActiveColorTheme(this.onThemeChanged,this),{dispose:()=>{null!=this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0)}})}_repository;get repository(){return this._repository}set repository(e){this._repository!==e?(this._repository=e,this.resetRepositoryState(),this.ensureRepositorySubscriptions(!0),this.host.ready&&this.updateState()):this.ensureRepositorySubscriptions()}_selection;get activeSelection(){return this._selection?.[0]}_discovering;_disposable;_etag;_etagSubscription;_etagRepository;_firstSelection=!0;_graph;_ipcNotificationMap=new Map([[oe,this.notifyDidChangeColumns],[ie,this.notifyDidChangeConfiguration],[te,this.notifyDidChangeState],[he,this.notifyDidChangeRefsVisibility],[ae,this.notifyDidChangeScrollMarkers],[pe,this.notifyDidChangeSelection],[re,this.notifyDidChangeSubscription],[me,this.notifyDidChangeWorkingTree],[le,this.notifyDidChangeWindowFocus],[we,this.notifyDidFetch]]);_refsMetadata;_search;_searchCancellation;_selectedId;_selectedRows;_showDetailsView;_theme;_repositoryEventsDisposable;_lastFetchedDisposable;isWindowFocused=!0;dispose(){this._disposable.dispose()}canReuseInstance(...e){if(1===this.container.git.openRepositoryCount)return!0;const[t]=e;let i;return(0,A.uC)(t)?i=t:_e(t)?i=this.container.git.getRepository(t.ref.repoPath):(0,M.W)(t)&&null!=t.state.selectedRepository&&(i=this.container.git.getRepository(t.state.selectedRepository)),i?.uri.toString()===this.repository?.uri.toString()||void 0}getSplitArgs(){return null!=this.repository?[this.repository]:[]}async onShowing(e,t,...i){this._firstSelection=!0,this._etag=this.container.git.etag,this.container.git.isDiscoveringRepositories&&(this._discovering=this.container.git.isDiscoveringRepositories.then((e=>(this._discovering=void 0,e))),this._etag=await this._discovering);const[r]=i;if((0,A.uC)(r))this.repository=r;else if(_e(r)){this.repository=this.container.git.getRepository(r.ref.repoPath);let e=r.ref.ref;if((0,y.D3)(e)||(e=await this.container.git.resolveReference(r.ref.repoPath,e,void 0,{force:!0})),this.setSelectedRows(e),null!=this._graph){if(this._graph?.ids.has(e))return this.notifyDidChangeSelection(),!0;this.onGetMoreRows({id:e},!0)}}else if((0,M.W)(r)&&null!=r.state.selectedRepository&&(this.repository=this.container.git.getRepository(r.state.selectedRepository)),null==this.repository&&this.container.git.repositoryCount>1){const[t]=(0,n.P)(o.Gh.ShowGraph,void 0,...i),r=Array.isArray(t)?t[0]:t;"scm"===r.type&&null!=r.scm.rootUri?this.repository=this.container.git.getRepository(r.scm.rootUri):"viewItem"===r.type&&r.node instanceof B.v&&(this.repository=r.node.repo),null!=this.repository&&!e&&this.host.ready&&this.updateState()}return!0}onRefresh(e){e&&this.resetRepositoryState()}includeBootstrap(){return this.getState(!0)}registerCommands(){return[...this.host.isView()?[(0,k.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0))),(0,k.xR)(`${this.host.id}.openInTab`,(()=>{(0,k.P0)(o.Gh.ShowGraphPage,void 0,this.repository)}))]:[],this.host.registerWebviewCommand("gitlens.graph.push",this.push),this.host.registerWebviewCommand("gitlens.graph.pull",this.pull),this.host.registerWebviewCommand("gitlens.graph.fetch",this.fetch),this.host.registerWebviewCommand("gitlens.graph.publishBranch",this.publishBranch),this.host.registerWebviewCommand("gitlens.graph.switchToAnotherBranch",this.switchToAnother),this.host.registerWebviewCommand("gitlens.graph.createBranch",this.createBranch),this.host.registerWebviewCommand("gitlens.graph.deleteBranch",this.deleteBranch),this.host.registerWebviewCommand("gitlens.graph.copyRemoteBranchUrl",(e=>this.openBranchOnRemote(e,!0))),this.host.registerWebviewCommand("gitlens.graph.openBranchOnRemote",this.openBranchOnRemote),this.host.registerWebviewCommand("gitlens.graph.mergeBranchInto",this.mergeBranchInto),this.host.registerWebviewCommand("gitlens.graph.rebaseOntoBranch",this.rebase),this.host.registerWebviewCommand("gitlens.graph.rebaseOntoUpstream",this.rebaseToRemote),this.host.registerWebviewCommand("gitlens.graph.renameBranch",this.renameBranch),this.host.registerWebviewCommand("gitlens.graph.switchToBranch",this.switchTo),this.host.registerWebviewCommand("gitlens.graph.hideLocalBranch",this.hideRef),this.host.registerWebviewCommand("gitlens.graph.hideRemoteBranch",this.hideRef),this.host.registerWebviewCommand("gitlens.graph.hideRemote",(e=>this.hideRef(e,{remote:!0}))),this.host.registerWebviewCommand("gitlens.graph.hideRefGroup",(e=>this.hideRef(e,{group:!0}))),this.host.registerWebviewCommand("gitlens.graph.hideTag",this.hideRef),this.host.registerWebviewCommand("gitlens.graph.cherryPick",this.cherryPick),this.host.registerWebviewCommand("gitlens.graph.copyRemoteCommitUrl",(e=>this.openCommitOnRemote(e,!0))),this.host.registerWebviewCommand("gitlens.graph.showInDetailsView",this.openInDetailsView),this.host.registerWebviewCommand("gitlens.graph.openCommitOnRemote",this.openCommitOnRemote),this.host.registerWebviewCommand("gitlens.graph.openSCM",this.openSCM),this.host.registerWebviewCommand("gitlens.graph.rebaseOntoCommit",this.rebase),this.host.registerWebviewCommand("gitlens.graph.resetCommit",this.resetCommit),this.host.registerWebviewCommand("gitlens.graph.resetToCommit",this.resetToCommit),this.host.registerWebviewCommand("gitlens.graph.resetToTip",this.resetToTip),this.host.registerWebviewCommand("gitlens.graph.revert",this.revertCommit),this.host.registerWebviewCommand("gitlens.graph.switchToCommit",this.switchTo),this.host.registerWebviewCommand("gitlens.graph.undoCommit",this.undoCommit),this.host.registerWebviewCommand("gitlens.graph.saveStash",this.saveStash),this.host.registerWebviewCommand("gitlens.graph.applyStash",this.applyStash),this.host.registerWebviewCommand("gitlens.graph.stash.delete",this.deleteStash),this.host.registerWebviewCommand("gitlens.graph.stash.rename",this.renameStash),this.host.registerWebviewCommand("gitlens.graph.createTag",this.createTag),this.host.registerWebviewCommand("gitlens.graph.deleteTag",this.deleteTag),this.host.registerWebviewCommand("gitlens.graph.switchToTag",this.switchTo),this.host.registerWebviewCommand("gitlens.graph.createWorktree",this.createWorktree),this.host.registerWebviewCommand("gitlens.graph.createPullRequest",this.createPullRequest),this.host.registerWebviewCommand("gitlens.graph.openPullRequestOnRemote",this.openPullRequestOnRemote),this.host.registerWebviewCommand("gitlens.graph.compareWithUpstream",this.compareWithUpstream),this.host.registerWebviewCommand("gitlens.graph.compareWithHead",this.compareHeadWith),this.host.registerWebviewCommand("gitlens.graph.compareWithWorking",this.compareWorkingWith),this.host.registerWebviewCommand("gitlens.graph.compareAncestryWithWorking",this.compareAncestryWithWorking),this.host.registerWebviewCommand("gitlens.graph.copy",this.copy),this.host.registerWebviewCommand("gitlens.graph.copyMessage",this.copyMessage),this.host.registerWebviewCommand("gitlens.graph.copySha",this.copySha),this.host.registerWebviewCommand("gitlens.graph.addAuthor",this.addAuthor),this.host.registerWebviewCommand("gitlens.graph.columnAuthorOn",(()=>this.toggleColumn("author",!0))),this.host.registerWebviewCommand("gitlens.graph.columnAuthorOff",(()=>this.toggleColumn("author",!1))),this.host.registerWebviewCommand("gitlens.graph.columnDateTimeOn",(()=>this.toggleColumn("datetime",!0))),this.host.registerWebviewCommand("gitlens.graph.columnDateTimeOff",(()=>this.toggleColumn("datetime",!1))),this.host.registerWebviewCommand("gitlens.graph.columnShaOn",(()=>this.toggleColumn("sha",!0))),this.host.registerWebviewCommand("gitlens.graph.columnShaOff",(()=>this.toggleColumn("sha",!1))),this.host.registerWebviewCommand("gitlens.graph.columnChangesOn",(()=>this.toggleColumn("changes",!0))),this.host.registerWebviewCommand("gitlens.graph.columnChangesOff",(()=>this.toggleColumn("changes",!1))),this.host.registerWebviewCommand("gitlens.graph.columnGraphOn",(()=>this.toggleColumn("graph",!0))),this.host.registerWebviewCommand("gitlens.graph.columnGraphOff",(()=>this.toggleColumn("graph",!1))),this.host.registerWebviewCommand("gitlens.graph.columnMessageOn",(()=>this.toggleColumn("message",!0))),this.host.registerWebviewCommand("gitlens.graph.columnMessageOff",(()=>this.toggleColumn("message",!1))),this.host.registerWebviewCommand("gitlens.graph.columnRefOn",(()=>this.toggleColumn("ref",!0))),this.host.registerWebviewCommand("gitlens.graph.columnRefOff",(()=>this.toggleColumn("ref",!1))),this.host.registerWebviewCommand("gitlens.graph.columnGraphCompact",(()=>this.setColumnMode("graph","compact"))),this.host.registerWebviewCommand("gitlens.graph.columnGraphDefault",(()=>this.setColumnMode("graph",void 0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerLocalBranchOn",(()=>this.toggleScrollMarker("localBranches",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerLocalBranchOff",(()=>this.toggleScrollMarker("localBranches",!1))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerRemoteBranchOn",(()=>this.toggleScrollMarker("remoteBranches",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerRemoteBranchOff",(()=>this.toggleScrollMarker("remoteBranches",!1))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerStashOn",(()=>this.toggleScrollMarker("stashes",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerStashOff",(()=>this.toggleScrollMarker("stashes",!1))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerTagOn",(()=>this.toggleScrollMarker("tags",!0))),this.host.registerWebviewCommand("gitlens.graph.scrollMarkerTagOff",(()=>this.toggleScrollMarker("tags",!1))),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToBranch",this.copyDeepLinkToBranch),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToCommit",this.copyDeepLinkToCommit),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToRepo",this.copyDeepLinkToRepo),this.host.registerWebviewCommand("gitlens.graph.copyDeepLinkToTag",this.copyDeepLinkToTag),this.host.registerWebviewCommand("gitlens.graph.shareAsCloudPatch",this.shareAsCloudPatch),this.host.registerWebviewCommand("gitlens.graph.openChangedFiles",this.openFiles),this.host.registerWebviewCommand("gitlens.graph.openOnlyChangedFiles",this.openOnlyChangedFiles),this.host.registerWebviewCommand("gitlens.graph.openChangedFileDiffs",this.openAllChanges),this.host.registerWebviewCommand("gitlens.graph.openChangedFileDiffsWithWorking",this.openAllChangesWithWorking),this.host.registerWebviewCommand("gitlens.graph.openChangedFileRevisions",this.openRevisions),this.host.registerWebviewCommand("gitlens.graph.resetColumnsDefault",(()=>this.updateColumns(Ce))),this.host.registerWebviewCommand("gitlens.graph.resetColumnsCompact",(()=>this.updateColumns(Ae)))]}onWindowFocusChanged(e){this.isWindowFocused=e,this.notifyDidChangeWindowFocus()}onFocusChanged(e){this._showActiveSelectionDetailsDebounced?.cancel(),this.notifyDidChangeFocus(e),e&&null!=this.activeSelection&&this.container.commitDetailsView.visible&&this.showActiveSelectionDetails()}onVisibilityChanged(e){if(e||this._showActiveSelectionDetailsDebounced?.cancel(),e&&(null!=this.repository&&this.repository.etag!==this._etagRepository||this.container.subscription.etag!==this._etagSubscription))this.updateState(!0);else if(e){this.host.sendPendingIpcNotifications();const{activeSelection:e}=this;if(null==e)return;this.showActiveSelectionDetails()}}onMessageReceived(e){switch(e.method){case L.method:(0,W.mq)(L,e,(()=>this.onChooseRepository()));break;case U.method:(0,W.mq)(U,e,(e=>this.dimMergeCommits(e)));break;case G.method:(0,W.mq)(G,e,(e=>this.onDoubleClick(e)));break;case H.method:(0,W.mq)(H,e,(t=>this.onEnsureRow(t,e.completionId)));break;case V.method:(0,W.mq)(V,e,(e=>this.onGetMissingAvatars(e)));break;case q.method:(0,W.mq)(q,e,(e=>this.onGetMissingRefMetadata(e)));break;case j.method:(0,W.mq)(j,e,(e=>this.onGetMoreRows(e)));break;case Q.method:(0,W.mq)(Q,e,(t=>this.onSearch(t,e.completionId)));break;case Y.method:(0,W.mq)(Y,e,(e=>this.onSearchOpenInView(e)));break;case z.method:(0,W.mq)(z,e,(e=>this.onColumnsChanged(e)));break;case X.method:(0,W.mq)(X,e,(e=>this.updateGraphConfig(e)));break;case K.method:(0,W.mq)(K,e,(e=>this.onRefsVisibilityChanged(e)));break;case ee.method:(0,W.mq)(ee,e,this.onSelectionChanged.bind(this));break;case J.method:(0,W.mq)(J,e,(e=>this.updateExcludedType(this._graph,e)));break;case Z.method:(0,W.mq)(Z,e,(e=>this.updateIncludeOnlyRefs(this._graph,e.refs)))}}updateGraphConfig(e){const t=this.getComponentConfig();let i;for(i in e.changes)if(t[i]!==e.changes[i])switch(i){case"minimap":D.D.updateEffective("graph.minimap.enabled",e.changes[i]);break;case"minimapDataType":D.D.updateEffective("graph.minimap.dataType",e.changes[i]);break;case"minimapMarkerTypes":{const t=[],r=e.changes[i]??[];for(const e of r)switch(e){case"localBranches":case"remoteBranches":case"stashes":case"tags":t.push(e)}D.D.updateEffective("graph.minimap.additionalTypes",t);break}}}_showActiveSelectionDetailsDebounced=void 0;showActiveSelectionDetails(){null==this._showActiveSelectionDetailsDebounced&&(this._showActiveSelectionDetailsDebounced=(0,F.Ds)(this.showActiveSelectionDetailsCore.bind(this),250)),this._showActiveSelectionDetailsDebounced()}showActiveSelectionDetailsCore(){const{activeSelection:e}=this;null!=e&&this.host.active&&this.container.events.fire("commit:selected",{commit:e,interaction:"passive",preserveFocus:!0,preserveVisibility:!1===this._showDetailsView},{source:this.host.id})}onConfigurationChanged(e){D.D.changed(e,"graph.showDetailsView")&&(this._showDetailsView=D.D.get("graph.showDetailsView")),D.D.changed(e,"graph.commitOrdering")?this.updateState():(D.D.changed(e,"defaultDateFormat")||D.D.changed(e,"defaultDateStyle")||D.D.changed(e,"advanced.abbreviatedShaLength")||D.D.changed(e,"graph.avatars")||D.D.changed(e,"graph.dateFormat")||D.D.changed(e,"graph.dateStyle")||D.D.changed(e,"graph.dimMergeCommits")||D.D.changed(e,"graph.highlightRowsOnRefHover")||D.D.changed(e,"graph.scrollRowPadding")||D.D.changed(e,"graph.scrollMarkers.enabled")||D.D.changed(e,"graph.scrollMarkers.additionalTypes")||D.D.changed(e,"graph.showGhostRefsOnRowHover")||D.D.changed(e,"graph.pullRequests.enabled")||D.D.changed(e,"graph.showRemoteNames")||D.D.changed(e,"graph.showUpstreamStatus")||D.D.changed(e,"graph.minimap.enabled")||D.D.changed(e,"graph.minimap.dataType")||D.D.changed(e,"graph.minimap.additionalTypes"))&&(this.notifyDidChangeConfiguration(),(D.D.changed(e,"graph.minimap.enabled")||D.D.changed(e,"graph.minimap.dataType"))&&D.D.get("graph.minimap.enabled")&&"lines"===D.D.get("graph.minimap.dataType")&&!this._graph?.includes?.stats&&this.updateState())}onRepositoryChanged(e){e.changed(A.I6.Config,A.I6.Head,A.I6.Heads,A.I6.Remotes,A.I6.Stash,A.I6.Status,A.I6.Tags,A.I6.Unknown,A.du.Any)?(e.changed(A.I6.Head,A.du.Any)&&this.setSelectedRows(void 0),this.updateState(!e.changed(A.I6.Unknown,A.du.Exclusive))):this._etagRepository=e.repository.etag}onRepositoryFileSystemChanged(e){e.repository?.path===this.repository?.path&&this.notifyDidChangeWorkingTree()}onSubscriptionChanged(e){e.etag!==this._etagSubscription&&(this._etagSubscription=e.etag,this.notifyDidChangeSubscription())}onThemeChanged(e){null!=this._theme&&((0,O.$o)(e)&&(0,O.$o)(this._theme)||(0,O.GC)(e)&&(0,O.GC)(this._theme))||(this._theme=e,this.updateState())}dimMergeCommits(e){D.D.updateEffective("graph.dimMergeCommits",e.dim)}onColumnsChanged(e){this.updateColumns(e.config)}onRefsVisibilityChanged(e){this.updateExcludedRefs(this._graph,e.refs,e.visible)}onDoubleClick(e){if("ref"===e.type&&e.ref.context){let t=this.getGraphItemContext(e.ref.context);if(De(t)){if(null!=e.metadata){if(t=this.getGraphItemContext(e.metadata.data.context),"upstream"===e.metadata.type&&ke(t,"upstreamStatus")){const{ahead:e,behind:i,ref:r}=t.webviewItemValue;if(i>0)return void u.X4(r.repoPath,r);if(e>0)return void u.VF(r.repoPath,!1,r)}else if("pullRequest"===e.metadata.type&&ke(t,"pullrequest"))return void this.openPullRequestOnRemote(t);return}const{ref:i}=t.webviewItemValue;return"head"===e.ref.refType&&e.ref.isCurrentHead?u.gu(i.repoPath):u.gu(i.repoPath,i,!!D.D.isUnset("gitCommands.skipConfirmations")||void 0)}}else if("row"===e.type&&e.row){this._showActiveSelectionDetailsDebounced?.cancel();const t=this.getRevisionReference(this.repository?.path,e.row.id,e.row.type);if(null!=t){this.container.events.fire("commit:selected",{commit:t,interaction:"active",preserveFocus:e.preserveFocus,preserveVisibility:!1},{source:this.host.id});const i=this.host.isView()?this.container.graphDetailsView:this.container.commitDetailsView;i.ready||i.show({preserveFocus:e.preserveFocus},{commit:t,interaction:"active",preserveVisibility:!1})}}return Promise.resolve()}async onEnsureRow(e,t){if(null==this._graph)return;const i=this._graph.remappedIds?.get(e.id)??e.id;let r,s;this._graph.ids.has(i)?(r=e.id,s=e.id!==i?i:void 0):(await this.updateGraphWithMoreRows(this._graph,i,this._search),this.notifyDidChangeRows(),this._graph.ids.has(i)&&(r=e.id,s=e.id!==i?i:void 0)),this.host.notify(ge,{id:r,remapped:s},t)}async onGetMissingAvatars(e){if(null==this._graph)return;const t=this._graph.repoPath;async function i(e,i){const r=await(0,s.oP)(e,{ref:i,repoPath:t});this._graph.avatars.set(e,r.toString(!0))}const r=[];for(const[t,s]of Object.entries(e.emails))this._graph.avatars.has(t)||r.push(i.call(this,t,s));r.length&&(await Promise.allSettled(r),this.updateAvatars())}async onGetMissingRefMetadata(e){if(null==this._graph||null===this._refsMetadata||!(0,R.fw)("gitlens:hasConnectedRemotes"))return;const t=this._graph.repoPath;async function i(e,i){null==this._refsMetadata&&(this._refsMetadata=new Map);const r=(await this.container.git.getBranches(t,{filter:t=>t.id===e}))?.values?.[0],s={...this._refsMetadata.get(e)};if(null!=r)for(const t of i)if(N.includes(t))if("pullRequest"!==t){if("upstream"===t){const t=r?.upstream;if(null==t||null==t||t.missing){s.upstream=null,this._refsMetadata.set(e,s);continue}const i={name:(0,f.S3)(t.name),owner:(0,f.Lo)(t.name),ahead:r.state.ahead,behind:r.state.behind,context:(0,E.BH)({webviewItem:"gitlens:upstreamStatus",webviewItemValue:{type:"upstreamStatus",ref:(0,y.LB)(r),ahead:r.state.ahead,behind:r.state.behind}})};s.upstream=i,this._refsMetadata.set(e,s)}}else{const t=await(r?.getAssociatedPullRequest());if(null==t){void 0!==s.pullRequest&&0!==s.pullRequest?.length||(s.pullRequest=null),this._refsMetadata.set(e,s);continue}const i={hostingServiceType:t.provider.id,id:Number.parseInt(t.id)||0,title:t.title,author:t.author.name,date:(t.mergedDate??t.closedDate??t.date)?.getTime(),state:t.state,url:t.url,context:(0,E.BH)({webviewItem:"gitlens:pullrequest",webviewItemValue:{type:"pullrequest",id:t.id,url:t.url}})};s.pullRequest=[i],this._refsMetadata.set(e,s)}else s[t]=null,this._refsMetadata.set(e,s);else for(const t of i)s[t]=null,this._refsMetadata.set(e,s)}const r=[];for(const t of Object.keys(e.metadata))r.push(i.call(this,t,e.metadata[t]));r.length&&await Promise.allSettled(r),this.updateRefsMetadata()}async onGetMoreRows(e,t=!1){null!=this._graph?.paging&&(null!=this._graph?.more&&this.repository?.etag===this._etagRepository?(await this.updateGraphWithMoreRows(this._graph,e.id,this._search),this.notifyDidChangeRows(t)):this.updateState(!0))}async onSearch(e,t){if(null==e.search)return void this.resetSearchState();let i=this._search;if(e.more&&null!=i?.more&&i.comparisonKey===(0,S.FL)(e.search))return i=await i.more(e.limit??D.D.get("graph.searchItemLimit")??100),void(null!=i&&(this._search=i,await this.ensureSearchStartsInRange(this._graph,i),this.host.notify(fe,{results:i.results.size>0?{ids:Object.fromEntries((0,$.UI)(i.results,(([e,t])=>[this._graph?.remappedIds?.get(e)??e,t]))),count:i.results.size,paging:{hasMore:i.paging?.hasMore??!1}}:void 0},t)));if(null==i||i.comparisonKey!==(0,S.FL)(e.search)){if(null==this.repository)return;this.repository.etag!==this._etagRepository&&this.updateState(!0),null!=this._searchCancellation&&this._searchCancellation.cancel();const s=new r.CancellationTokenSource;this._searchCancellation=s;try{i=await this.repository.searchCommits(e.search,{limit:D.D.get("graph.searchItemLimit")??100,ordering:D.D.get("graph.commitOrdering"),cancellation:s.token})}catch(e){return this._search=void 0,void this.host.notify(fe,{results:{error:e instanceof g.l0?"Invalid search pattern":"Unexpected error"}},t)}if(s.token.isCancellationRequested)return void(null!=t&&this.host.notify(fe,{results:void 0},t));this._search=i}else i=this._search;const s=await this.ensureSearchStartsInRange(this._graph,i);let n=!1;null!=s&&(n=!0,this.setSelectedRows(s)),this.host.notify(fe,{results:0===i.results.size?{count:0}:{ids:Object.fromEntries((0,$.UI)(i.results,(([e,t])=>[this._graph?.remappedIds?.get(e)??e,t]))),count:i.results.size,paging:{hasMore:i.paging?.hasMore??!1}},selectedRows:n?this._selectedRows:void 0},t)}onSearchOpenInView(e){null!=this.repository&&this.container.searchAndCompareView.search(this.repository.path,e.search,{label:{label:`for ${e.search.query}`},reveal:{select:!0,focus:!1,expand:!0}})}async onChooseRepository(){const e=this.container.git.openRepositories.sort(((e,t)=>(e===this.repository?1:-1)-(t===this.repository?1:-1)||(e.starred?-1:1)-(t.starred?-1:1)||e.index-t.index)),t=await(0,P.E2)(`Switch Repository ${o.NE.Dot} ${this.repository?.name}`,"Choose a repository to switch to",e);null!=t&&(this.repository=t.item)}_fireSelectionChangedDebounced=void 0;onSelectionChanged(e){this._showActiveSelectionDetailsDebounced?.cancel();const t=e.selection[0];this.setSelectedRows(t?.id),null==this._fireSelectionChangedDebounced&&(this._fireSelectionChangedDebounced=(0,F.Ds)(this.fireSelectionChanged.bind(this),50)),this._fireSelectionChangedDebounced(t?.id,t?.type)}fireSelectionChanged(e,t){if(null==this.repository)return;const i=this.getRevisionReference(this.repository.path,e,t),r=null!=i?[i]:void 0;this._selection=r,null!=r&&(this._firstSelection||!this.host.isEditor()||this.host.active)&&(this.container.events.fire("commit:selected",{commit:r[0],interaction:"passive",preserveFocus:!0,preserveVisibility:this._firstSelection?!1===this._showDetailsView:"selection"!==this._showDetailsView},{source:this.host.id}),this._firstSelection=!1)}_notifyDidChangeStateDebounced=void 0;getRevisionReference(e,t,i){if(null!=e&&null!=t)switch(i){case"stash-node":return(0,y.xB)(t,e,{refType:"stash",name:t,number:void 0});case"work-dir-changes":return(0,y.xB)(w.CL,e,{refType:"revision"});default:return(0,y.xB)(t,e,{refType:"revision"})}}updateState(e=!1){this.host.clearPendingIpcNotifications(),e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,F.Ds)(this.notifyDidChangeState.bind(this),250)),this._notifyDidChangeStateDebounced())}async notifyDidChangeFocus(e){return!(!this.host.ready||!this.host.visible)&&this.host.notify(ce,{focused:e})}async notifyDidChangeWindowFocus(){return this.host.ready&&this.host.visible?this.host.notify(le,{focused:this.isWindowFocused}):(this.host.addPendingIpcNotification(le,this._ipcNotificationMap,this),!1)}_notifyDidChangeAvatarsDebounced=void 0;updateAvatars(e=!1){e?this.notifyDidChangeAvatars():(null==this._notifyDidChangeAvatarsDebounced&&(this._notifyDidChangeAvatarsDebounced=(0,F.Ds)(this.notifyDidChangeAvatars.bind(this),100)),this._notifyDidChangeAvatarsDebounced())}async notifyDidChangeAvatars(){if(null==this._graph)return;const e=this._graph;return this.host.notify(se,{avatars:Object.fromEntries(e.avatars)})}_notifyDidChangeRefsMetadataDebounced=void 0;updateRefsMetadata(e=!1){e?this.notifyDidChangeRefsMetadata():(null==this._notifyDidChangeRefsMetadataDebounced&&(this._notifyDidChangeRefsMetadataDebounced=(0,F.Ds)(this.notifyDidChangeRefsMetadata.bind(this),100)),this._notifyDidChangeRefsMetadataDebounced())}async notifyDidChangeRefsMetadata(){return this.host.notify(ne,{metadata:null!=this._refsMetadata?Object.fromEntries(this._refsMetadata):this._refsMetadata})}async notifyDidChangeColumns(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(oe,this._ipcNotificationMap,this),!1;const e=this.getColumns(),t=this.getColumnSettings(e);return this.host.notify(oe,{columns:t,context:this.getColumnHeaderContext(t),settingsContext:this.getGraphSettingsIconContext(t)})}async notifyDidChangeScrollMarkers(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(ae,this._ipcNotificationMap,this),!1;const e=this.getColumns(),t=this.getColumnSettings(e);return this.host.notify(ae,{context:this.getGraphSettingsIconContext(t)})}async notifyDidChangeRefsVisibility(){return this.host.ready&&this.host.visible?this.host.notify(he,{excludeRefs:this.getExcludedRefs(this._graph),excludeTypes:this.getExcludedTypes(this._graph),includeOnlyRefs:this.getIncludeOnlyRefs(this._graph)}):(this.host.addPendingIpcNotification(he,this._ipcNotificationMap,this),!1)}async notifyDidChangeConfiguration(){return this.host.ready&&this.host.visible?this.host.notify(ie,{config:this.getComponentConfig()}):(this.host.addPendingIpcNotification(ie,this._ipcNotificationMap,this),!1)}async notifyDidFetch(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(we,this._ipcNotificationMap,this),!1;const e=await this.repository.getLastFetched();return this.host.notify(we,{lastFetched:new Date(e)})}async notifyDidChangeRows(e=!1,t){if(null==this._graph)return;const i=this._graph;return this.host.notify(ue,{rows:i.rows,avatars:Object.fromEntries(i.avatars),downstreams:Object.fromEntries(i.downstreams),refsMetadata:null!=this._refsMetadata?Object.fromEntries(this._refsMetadata):this._refsMetadata,rowsStats:i.rowsStats?.size?Object.fromEntries(i.rowsStats):void 0,rowsStatsLoading:null!=i.rowsStatsDeferred?.isLoaded&&!i.rowsStatsDeferred.isLoaded(),selectedRows:e?this._selectedRows:void 0,paging:{startingCursor:i.paging?.startingCursor,hasMore:i.paging?.hasMore??!1}},t)}async notifyDidChangeRowsStats(e){if(null!=e.rowsStats)return this.host.notify(de,{rowsStats:Object.fromEntries(e.rowsStats),rowsStatsLoading:null!=e.rowsStatsDeferred?.isLoaded&&!e.rowsStatsDeferred.isLoaded()})}async notifyDidChangeWorkingTree(){return this.host.ready&&this.host.visible?this.host.notify(me,{stats:await this.getWorkingTreeStats()??{added:0,deleted:0,modified:0}}):(this.host.addPendingIpcNotification(me,this._ipcNotificationMap,this),!1)}async notifyDidChangeSelection(){return this.host.ready&&this.host.visible?this.host.notify(pe,{selection:this._selectedRows??{}}):(this.host.addPendingIpcNotification(pe,this._ipcNotificationMap,this),!1)}async notifyDidChangeSubscription(){if(!this.host.ready||!this.host.visible)return this.host.addPendingIpcNotification(re,this._ipcNotificationMap,this),!1;const[e]=await this.getGraphAccess();return this.host.notify(re,{subscription:e.subscription.current,allowed:!1!==e.allowed})}async notifyDidChangeState(){return this.host.ready&&this.host.visible?(this._notifyDidChangeStateDebounced?.cancel(),this.host.notify(te,{state:await this.getState()})):(this.host.addPendingIpcNotification(te,this._ipcNotificationMap,this),!1)}ensureRepositorySubscriptions(e){if(this.ensureLastFetchedSubscription(e),!e&&null!=this._repositoryEventsDisposable)return;null!=this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0);const t=this.repository;null!=t&&(this._repositoryEventsDisposable=r.Disposable.from(t.onDidChange(this.onRepositoryChanged,this),t.watchFileSystem(1e3),t.onDidChangeFileSystem(this.onRepositoryFileSystemChanged,this),(0,R.ve)((e=>{"gitlens:hasConnectedRemotes"===e&&(this.resetRefsMetadata(),this.updateRefsMetadata())}))))}async ensureLastFetchedSubscription(e){if(!e&&null!=this._lastFetchedDisposable)return;null!=this._lastFetchedDisposable&&(this._lastFetchedDisposable.dispose(),this._lastFetchedDisposable=void 0);const t=this.repository;if(null==t)return;const i=await t.getLastFetched()??0;let r=A._j.getLastFetchedUpdateInterval(i);0!==i&&r>0&&(this._lastFetchedDisposable=(0,F.DH)((()=>{const e=A._j.getLastFetchedUpdateInterval(i);r!==A._j.getLastFetchedUpdateInterval(i)&&(r=e),this.notifyDidFetch()}),r))}async ensureSearchStartsInRange(e,t){if(0===t.results.size)return;let i;for(const r of t.results.keys()){const t=e.remappedIds?.get(r)??r;if(e.ids.has(t))return t;i=t;break}return null!=i?(await this.updateGraphWithMoreRows(e,i),this.notifyDidChangeRows(),e.ids.has(i)?i:void 0):void 0}getColumns(){return this.container.storage.getWorkspace("graph:columns")}getExcludedTypes(e){if(null!=e)return this.getFiltersByRepo(e)?.excludeTypes}getExcludedRefs(e){if(null==e)return;let t;const i=this.container.storage.getWorkspace("graph:hiddenRefs");if(null!=i&&0!==Object.keys(i).length){t=this.container.storage.getWorkspace("graph:filtersByRepo")??{};for(const e in i){const r=Re(e);t[r]=t[r]??{},t[r].excludeRefs=(0,I.iC)(t[r].excludeRefs,e,i[e])}this.container.storage.storeWorkspace("graph:filtersByRepo",t),this.container.storage.deleteWorkspace("graph:hiddenRefs")}const r=(t?.[e.repoPath]??this.getFiltersByRepo(e))?.excludeRefs;if(null==r||0===Object.keys(r).length)return;const s=D.D.get("graph.avatars",void 0,!0),n={},o=e=>this.host.asWebviewUri(e);for(const t in r){const i={...r[t]};if("remote"===i.type&&i.owner){const t=e.remotes.get(i.owner);null!=t&&(i.avatarUrl=((s?t.provider?.avatarUri:void 0)??(0,b.dM)(this.container,t,o))?.toString(!0))}n[t]=i}return n}getIncludeOnlyRefs(e){if(null==e)return;const t=this.getFiltersByRepo(e),i=t?.includeOnlyRefs;if(null==i||0===Object.keys(i).length)return;const r={};for(const[t,s]of Object.entries(i)){let i;if("HEAD"===s.id){if(i=(0,$.sE)(e.branches.values(),(e=>e.current)),null==i)continue;r[i.id]={...s,id:i.id,name:i.name}}else r[t]=s;if("head"===s.type&&(i=i??e.branches.get(s.name),null!=i?.upstream&&!i.upstream.missing)){const t=(0,f.Vx)(e.repoPath,!0,i.upstream.name);r[t]={id:t,type:"remote",name:(0,f.S3)(i.upstream.name),owner:(0,f.Lo)(i.upstream.name)}}}return r}getFiltersByRepo(e){if(null==e)return;const t=this.container.storage.getWorkspace("graph:filtersByRepo");return t?.[e.repoPath]}getColumnSettings(e){const t={...Ce};if(null!=e)for(const[i,r]of Object.entries(e))t[i]={...Ce[i],...r};return t}getColumnHeaderContext(e){return(0,E.BH)({webviewItem:"gitlens:graph:columns",webviewItemValue:this.getColumnContextItems(e).join(",")})}getGraphSettingsIconContext(e){return(0,E.BH)({webviewItem:"gitlens:graph:settings",webviewItemValue:this.getSettingsIconContextItems(e).join(",")})}getColumnContextItems(e){const t=[],i=["author","changes","datetime","graph","message","ref","sha"];let r=0;for(const[s,n]of Object.entries(e))i.includes(s)&&(n.isHidden||r++,t.push(`column:${s}:${n.isHidden?"hidden":"visible"}${n.mode?`+${n.mode}`:""}`));return r>1&&t.push("columns:canHide"),t}getSettingsIconContextItems(e){const t=null!=e?this.getColumnContextItems(e):[];if(D.D.get("graph.scrollMarkers.enabled")){const e=["localBranches","remoteBranches","stashes","tags"],i=D.D.get("graph.scrollMarkers.additionalTypes");for(const r of e)t.push(`scrollMarker:${r}:${i.includes(r)?"enabled":"disabled"}`)}return t}getComponentConfig(){return{avatars:D.D.get("graph.avatars"),dateFormat:D.D.get("graph.dateFormat")??D.D.get("defaultDateFormat")??"short+short",dateStyle:D.D.get("graph.dateStyle")??D.D.get("defaultDateStyle"),enabledRefMetadataTypes:this.getEnabledRefMetadataTypes(),dimMergeCommits:D.D.get("graph.dimMergeCommits"),enableMultiSelection:!1,highlightRowsOnRefHover:D.D.get("graph.highlightRowsOnRefHover"),minimap:D.D.get("graph.minimap.enabled"),minimapDataType:D.D.get("graph.minimap.dataType"),minimapMarkerTypes:this.getMinimapMarkerTypes(),scrollRowPadding:D.D.get("graph.scrollRowPadding"),scrollMarkerTypes:this.getScrollMarkerTypes(),showGhostRefsOnRowHover:D.D.get("graph.showGhostRefsOnRowHover"),showRemoteNamesOnRefs:D.D.get("graph.showRemoteNames"),idLength:D.D.get("advanced.abbreviatedShaLength")}}getScrollMarkerTypes(){if(!D.D.get("graph.scrollMarkers.enabled"))return[];return["selection","highlights","head","upstream",...D.D.get("graph.scrollMarkers.additionalTypes")]}getMinimapMarkerTypes(){if(!D.D.get("graph.minimap.enabled"))return[];return["selection","highlights","head","upstream",...D.D.get("graph.minimap.additionalTypes")]}getEnabledRefMetadataTypes(){const e=[];return D.D.get("graph.pullRequests.enabled")&&e.push("pullRequest"),D.D.get("graph.showUpstreamStatus")&&e.push("upstream"),e}async getGraphAccess(){let e=await this.container.git.access(a.x.Graph,this.repository?.path);this._etagSubscription=this.container.subscription.etag,!1===e.allowed&&null==e.subscription.current.previewTrial&&(await this.container.subscription.startPreviewTrial(),e=await this.container.git.access(a.x.Graph,this.repository?.path));let t=e?.visibility;return null==t&&null!=this.repository&&(t=await this.container.git.visibility(this.repository?.path)),[e,t]}getGraphItemContext(e){const t="string"==typeof e?JSON.parse(e):e;return null==t||"webview"in t||(t.webview=this.host.id),t}async getWorkingTreeStats(){if(null==this.repository||0===this.container.git.repositoryCount)return;const e=await this.container.git.getStatusForRepo(this.repository.path),t=e?.getDiffStatus();return{added:t?.added??0,deleted:t?.deleted??0,modified:t?.changed??0,context:(0,E.BH)({webviewItem:"gitlens:wip",webviewItemValue:{type:"commit",ref:this.getRevisionReference(this.repository.path,w.CL,"work-dir-changes")}})}}async getState(e){if(0===this.container.git.repositoryCount)return{...this.host.baseWebviewState,allowed:!0,repositories:[]};if(null==this.repository&&(this.repository=this.container.git.getBestRepositoryOrFirst(),null==this.repository))return{...this.host.baseWebviewState,allowed:!0,repositories:[]};this._etagRepository=this.repository?.etag,this.host.title=`${this.host.originalTitle}: ${this.repository.formattedName}`;const{defaultItemLimit:t}=D.D.get("graph"),i=Math.max(t,this._graph?.ids.size??t),r=this._selectedId,s=null==r||r===w.CL?"HEAD":r,n=this.getColumns(),o=this.getColumnSettings(n),a=this.container.git.getCommitsForGraph(this.repository.uri,(e=>this.host.asWebviewUri(e)),{include:{stats:D.D.get("graph.minimap.enabled")&&"lines"===D.D.get("graph.minimap.dataType")||!o.changes.isHidden},limit:i,ref:s}),c=Promise.allSettled([this.getGraphAccess(),this.getWorkingTreeStats(),this.repository.getBranch(),this.repository.getLastFetched()]);let l;e?queueMicrotask((async()=>{const e=await a;this.setGraph(e),r!==w.CL&&this.setSelectedRows(e.id),this.notifyDidChangeRefsVisibility(),this.notifyDidChangeRows(!0)})):(l=await a,this.setGraph(l),r!==w.CL&&this.setSelectedRows(l.id));const[h,u,d,p]=await c,[m,g]=(0,x.Sb)(h)??[];let f;const v=(0,x.Sb)(d);if(null!=v&&(f={...v.state},null!=v.upstream)){f.upstream=v.upstream.name;const e=await v.getRemote();null!=e?.provider&&(f.provider={name:e.provider.name,icon:"remote"===e.provider.icon?"cloud":e.provider.icon,url:e.provider.url({type:C.J.Repo})})}return{...this.host.baseWebviewState,windowFocused:this.isWindowFocused,repositories:Se(this.container.git.openRepositories),selectedRepository:this.repository.path,selectedRepositoryVisibility:g,branchName:v?.name,branchState:f,lastFetched:new Date((0,x.Sb)(p)),selectedRows:this._selectedRows,subscription:m?.subscription.current,allowed:!1!==(m?.allowed??!1),avatars:null!=l?Object.fromEntries(l.avatars):void 0,refsMetadata:null===this.resetRefsMetadata()?null:{},loading:e,rowsStatsLoading:null!=l?.rowsStatsDeferred?.isLoaded&&!l.rowsStatsDeferred.isLoaded(),rows:l?.rows,downstreams:null!=l?Object.fromEntries(l.downstreams):void 0,paging:null!=l?{startingCursor:l.paging?.startingCursor,hasMore:l.paging?.hasMore??!1}:void 0,columns:o,config:this.getComponentConfig(),context:{header:this.getColumnHeaderContext(o),settings:this.getGraphSettingsIconContext(o)},excludeRefs:null!=l?this.getExcludedRefs(l)??{}:{},excludeTypes:this.getExcludedTypes(l)??{},includeOnlyRefs:null!=l?this.getIncludeOnlyRefs(l)??{}:{},nonce:this.host.cspNonce,workingTreeStats:(0,x.Sb)(u)??{added:0,deleted:0,modified:0}}}updateColumns(e){let t=this.container.storage.getWorkspace("graph:columns");for(const[i,r]of Object.entries(e))t=(0,I.iC)(t,i,r);this.container.storage.storeWorkspace("graph:columns",t),this.notifyDidChangeColumns()}updateExcludedRefs(e,t,i){if(null==t||0===t.length)return;let r=this.getFiltersByRepo(e)?.excludeRefs??{};for(const e of t)r=(0,I.iC)(r,e.id,i?void 0:{id:e.id,type:e.type,name:e.name,owner:e.owner});this.updateFiltersByRepo(e,{excludeRefs:r}),this.notifyDidChangeRefsVisibility()}updateFiltersByRepo(e,t){if(null==e)throw new Error("Cannot save repository filters since Graph is undefined");const i=this.container.storage.getWorkspace("graph:filtersByRepo");return this.container.storage.storeWorkspace("graph:filtersByRepo",(0,I.iC)(i,e.repoPath,{...i?.[e.repoPath],...t}))}updateIncludeOnlyRefs(e,t){let i;if(null==t||0===t.length){if(null==this.getFiltersByRepo(e)?.includeOnlyRefs)return;i=void 0}else{i={};for(const e of t)i[e.id]={id:e.id,type:e.type,name:e.name,owner:e.owner}}this.updateFiltersByRepo(e,{includeOnlyRefs:i}),this.notifyDidChangeRefsVisibility()}updateExcludedType(e,{key:t,value:i}){let r=this.getFiltersByRepo(e)?.excludeTypes;(null!=r&&0!==Object.keys(r).length||!1!==i)&&(r=(0,I.iC)(r,t,i),this.updateFiltersByRepo(e,{excludeTypes:r}),this.notifyDidChangeRefsVisibility())}resetRefsMetadata(){return this._refsMetadata=(0,R.fw)("gitlens:hasConnectedRemotes")?void 0:null,this._refsMetadata}resetRepositoryState(){this.setGraph(void 0),this.setSelectedRows(void 0)}resetSearchState(){this._search=void 0,this._searchCancellation?.dispose(),this._searchCancellation=void 0}setSelectedRows(e){this._selectedId!==e&&(this._selectedId=e,e===w.CL&&(e="work-dir-changes"),this._selectedRows=null!=e?{[e]:!0}:void 0)}setGraph(e){this._graph=e,null==e?(this.resetRefsMetadata(),this.resetSearchState()):e.rowsStatsDeferred?.promise.then((()=>{this.notifyDidChangeRowsStats(e)}))}async updateGraphWithMoreRows(e,t,i){const{defaultItemLimit:r,pageItemLimit:s}=D.D.get("graph"),n=await(e.more?.(s??r,t));if(null!=n){if(this.setGraph(n),!i?.paging?.hasMore)return;const e=(0,$.Z$)(i.results)?.[0];if(null==e)return;const t=n.remappedIds?.get(e)??e;n.ids.has(t)&&queueMicrotask((()=>{this.onSearch({search:i.query,more:!0})}))}}fetch(e){const t=null!=e?this.getGraphItemRef(e,"branch"):void 0;u.he(this.repository,t)}pull(e){const t=null!=e?this.getGraphItemRef(e,"branch"):void 0;u.X4(this.repository,t)}push(e){const t=null!=e?this.getGraphItemRef(e):void 0;u.VF(this.repository,void 0,t)}createBranch(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():c.Ue(t.repoPath,t)}deleteBranch(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;return c.Od(t.repoPath,t)}return Promise.resolve()}mergeBranchInto(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;return u.TS(t.repoPath,t)}return Promise.resolve()}openBranchOnRemote(e,t){if(De(e,"branch")){const{ref:i}=e.webviewItemValue;let r;return i.remote?r=(0,f.Lo)(i.name):null!=i.upstream&&(r=(0,f.Lo)(i.upstream.name)),(0,k.P0)(o.Gh.OpenOnRemote,{repoPath:i.repoPath,resource:{type:C.J.Branch,branch:i.name},remote:r,clipboard:t})}return Promise.resolve()}publishBranch(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;return u.VF(t.repoPath,void 0,t)}return Promise.resolve()}rebase(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():u.DW(t.repoPath,t)}rebaseToRemote(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;if(null!=t.upstream)return u.DW(t.repoPath,(0,y.xB)(t.upstream.name,t.repoPath,{refType:"branch",name:t.upstream.name,remote:!0}))}return Promise.resolve()}renameBranch(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;return c.PQ(t.repoPath,t)}return Promise.resolve()}cherryPick(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.QP(t.repoPath,t)}async copy(e){const t=this.getGraphItemRef(e);if(null!=t)await r.env.clipboard.writeText("revision"===t.refType&&t.message?`${t.name}: ${t.message}`:t.name);else if(ke(e,"contributor")){const{name:t,email:i}=e.webviewItemValue;await r.env.clipboard.writeText(`${t}${i?` <${i}>`:""}`)}else if(ke(e,"pullrequest")){const{url:t}=e.webviewItemValue;await r.env.clipboard.writeText(t)}return Promise.resolve()}copyMessage(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():(0,k.P0)(o.Gh.CopyMessageToClipboard,{repoPath:t.repoPath,sha:t.ref,message:"message"in t?t.message:void 0})}async copySha(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();let i=t.ref;return(0,y.D3)(i)||(i=await this.container.git.resolveReference(t.repoPath,i,void 0,{force:!0})),(0,k.P0)(o.Gh.CopyShaToClipboard,{sha:i})}openInDetailsView(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():this.host.isView()?void(0,l.E4)(t,{preserveFocus:!0,preserveVisibility:!1}):(0,k.P0)(o.Gh.ShowInDetailsView,{repoPath:t.repoPath,refs:[t.ref]})}openSCM(e){return null==this.getGraphItemRef(e,"revision")?Promise.resolve():(0,k.dO)("workbench.view.scm")}openCommitOnRemote(e,t){const i=this.getGraphItemRef(e,"revision");return null==i?Promise.resolve():(0,k.P0)(o.Gh.OpenOnRemote,{repoPath:i.repoPath,resource:{type:C.J.Commit,sha:i.ref},clipboard:t})}copyDeepLinkToBranch(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;return(0,k.P0)(o.Gh.CopyDeepLinkToBranch,{refOrRepoPath:t})}return Promise.resolve()}copyDeepLinkToCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():(0,k.P0)(o.Gh.CopyDeepLinkToCommit,{refOrRepoPath:t})}copyDeepLinkToRepo(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;return t.remote?(0,k.P0)(o.Gh.CopyDeepLinkToRepo,{refOrRepoPath:t.repoPath,remote:(0,f.Lo)(t.name)}):Promise.resolve()}return Promise.resolve()}copyDeepLinkToTag(e){if(De(e,"tag")){const{ref:t}=e.webviewItemValue;return(0,k.P0)(o.Gh.CopyDeepLinkToTag,{refOrRepoPath:t})}return Promise.resolve()}async shareAsCloudPatch(e){const t=this.getGraphItemRef(e,"revision")??this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():(0,k.P0)(o.Gh.CreateCloudPatch,{to:t.ref,repoPath:t.repoPath})}resetCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.mc(t.repoPath,(0,y.xB)(`${t.ref}^`,t.repoPath,{refType:"revision",name:`${t.name}^`,message:t.message}))}resetToCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.mc(t.repoPath,t)}resetToTip(e){const t=this.getGraphItemRef(e,"branch");return null==t?Promise.resolve():u.mc(t.repoPath,(0,y.xB)(t.ref,t.repoPath,{refType:"revision",name:t.name}))}revertCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():u.CU(t.repoPath,t)}switchTo(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():u.gu(t.repoPath,t)}hideRef(e,t){let i;if(t?.group&&function(e){return null!=e&&(function(e){return null!=e&&((0,E.dH)(e)&&("gitlens.graph"===e.webview||"gitlens.views.graph"===e.webview))}(e)&&"object"==typeof e.webviewItemGroupValue&&"refGroup"===e.webviewItemGroupValue.type)}(e))({refs:i}=e.webviewItemGroupValue);else if(!t?.group&&De(e)){const{ref:t}=e.webviewItemValue;null!=t.id&&(i=[t])}return null!=i&&this.updateExcludedRefs(this._graph,i.map((e=>{const i="branch"===e.refType&&e.remote;return{id:e.id,name:i?t?.remote?"*":(0,f.S3)(e.name):e.name,owner:i?(0,f.Lo)(e.name):void 0,type:"branch"===e.refType?e.remote?"remote":"head":"tag"}})),!1),Promise.resolve()}switchToAnother(e){const t=this.getGraphItemRef(e);return null==t?u.gu(this.repository?.path):u.gu(t.repoPath)}async undoCommit(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();const i=await this.container.git.getOrOpenScmRepository(t.repoPath),s=await(i?.getCommit("HEAD"));s?.hash===t.ref?(0,k.Zv)("git.undoCommit",t.repoPath):r.window.showWarningMessage(`Commit ${(0,y.Wh)(t,{capitalize:!0,icon:!1})} cannot be undone, because it is no longer the most recent commit.`)}saveStash(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():d.VF(t.repoPath)}applyStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():d.nn(t.repoPath,t)}deleteStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():d.Cw(t.repoPath,t)}renameStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():d.PQ(t.repoPath,t)}async createTag(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():p.Ue(t.repoPath,t)}deleteTag(e){if(De(e,"tag")){const{ref:t}=e.webviewItemValue;return p.Od(t.repoPath,t)}return Promise.resolve()}async createWorktree(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():m.Ue(t.repoPath,void 0,t)}async createPullRequest(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue,i=this.container.git.getRepository(t.repoPath),r=await(i?.getBranch(t.name)),s=await(r?.getRemote());return(0,k.SI)("createPullRequest",{repoPath:t.repoPath,remote:null!=s?{name:s.name,provider:null!=s.provider?{id:s.provider.id,name:s.provider.name,domain:s.provider.domain}:void 0,url:s.url}:void 0,branch:{name:t.name,upstream:t.upstream?.name,isRemote:t.remote}})}return Promise.resolve()}openPullRequestOnRemote(e,t){if(Pe(e)&&"object"==typeof e.webviewItemValue&&"pullrequest"===e.webviewItemValue.type){const{url:i}=e.webviewItemValue;return(0,k.P0)(o.Gh.OpenPullRequestOnRemote,{pr:{url:i},clipboard:t})}return Promise.resolve()}async compareAncestryWithWorking(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();const i=await this.container.git.getBranch(t.repoPath);if(null==i)return;const r=await this.container.git.getMergeBase(t.repoPath,i.ref,t.ref);return null!=r?this.container.searchAndCompareView.compare(t.repoPath,{ref:r,label:`ancestry with ${t.ref} (${(0,y.zL)(r)})`},""):void 0}compareHeadWith(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():this.container.searchAndCompareView.compare(t.repoPath,"HEAD",t.ref)}compareWithUpstream(e){if(De(e,"branch")){const{ref:t}=e.webviewItemValue;if(null!=t.upstream)return this.container.searchAndCompareView.compare(t.repoPath,t.ref,t.upstream.name)}return Promise.resolve()}compareWorkingWith(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():this.container.searchAndCompareView.compare(t.repoPath,"",t.ref)}async openFiles(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,l.aE)(t)}async openAllChanges(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,l.Gp)(t)}async openAllChangesWithWorking(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,l.Ou)(t)}async openRevisions(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,l.Dh)(t)}async openOnlyChangedFiles(e){const t=await this.getCommitFromGraphItemRef(e);if(null!=t)return(0,l.Uc)(t)}addAuthor(e){if(ke(e,"contributor")){const{repoPath:t,name:i,email:r,current:s}=e.webviewItemValue;return h.q(t,new v.V(t,i,r,0,void 0,s))}return Promise.resolve()}async toggleColumn(e,t){let i=this.container.storage.getWorkspace("graph:columns"),r=i?.[e];null!=r?r.isHidden=!t:r={isHidden:!t},i=(0,I.iC)(i,e,r),await this.container.storage.storeWorkspace("graph:columns",i),this.notifyDidChangeColumns(),"changes"!==e||r.isHidden||this._graph?.includes?.stats||this.updateState()}async toggleScrollMarker(e,t){let i=D.D.get("graph.scrollMarkers.additionalTypes"),r=!1;t&&!i.includes(e)?(i=i.concat(e),r=!0):!t&&i.includes(e)&&(i=i.filter((t=>t!==e)),r=!0),r&&(await D.D.updateEffective("graph.scrollMarkers.additionalTypes",i),this.notifyDidChangeScrollMarkers())}async setColumnMode(e,t){let i=this.container.storage.getWorkspace("graph:columns"),r=i?.[e];null!=r?r.mode=t:r={mode:t},i=(0,I.iC)(i,e,r),await this.container.storage.storeWorkspace("graph:columns",i),this.notifyDidChangeColumns()}getCommitFromGraphItemRef(e){let t=this.getGraphItemRef(e,"revision");return null!=t?this.container.git.getCommit(t.repoPath,t.ref):(t=this.getGraphItemRef(e,"stash"),null!=t?this.container.git.getCommit(t.repoPath,t.ref):Promise.resolve(void 0))}getGraphItemRef(e,t){if(null==e){const e=this.activeSelection;return null==e||null!=t&&t!==e.refType?void 0:e}switch(t){case"branch":return De(e,"branch")||ke(e,"upstreamStatus")?e.webviewItemValue.ref:void 0;case"revision":return De(e,"revision")?e.webviewItemValue.ref:void 0;case"stash":return De(e,"stash")?e.webviewItemValue.ref:void 0;case"tag":return De(e,"tag")?e.webviewItemValue.ref:void 0;default:return De(e)?e.webviewItemValue.ref:void 0}}}function Se(e){return 0===e.length?[]:e.map((e=>({formattedName:e.formattedName,id:e.id,name:e.name,path:e.path,isVirtual:e.provider.virtual})))}function Pe(e){return null!=e&&((0,E.tM)(e)&&("gitlens.graph"===e.webview||"gitlens.views.graph"===e.webview))}function ke(e,t){return null!=e&&(Pe(e)&&"object"==typeof e.webviewItemValue&&e.webviewItemValue.type===t)}function De(e,t){return null!=e&&(Pe(e)&&"object"==typeof e.webviewItemValue&&"ref"in e.webviewItemValue&&(null==t||e.webviewItemValue.ref.refType===t))}function Re(e){return e.split("|",1)[0]}function _e(e){return null!=e&&"object"==typeof e&&("ref"in e&&(0,y.Yn)(e.ref))}be([(0,T.fF)({args:{0:e=>e.toString()}})],GraphWebviewProvider.prototype,"onRepositoryChanged",1),be([(0,T.fF)({args:!1})],GraphWebviewProvider.prototype,"onRepositoryFileSystemChanged",1),be([(0,T.fF)({args:!1})],GraphWebviewProvider.prototype,"onSubscriptionChanged",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"onEnsureRow",1),be([(0,_.H)(),(0,T.fF)()],GraphWebviewProvider.prototype,"onGetMoreRows",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"onSearch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"updateState",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeFocus",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeWindowFocus",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"updateAvatars",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeAvatars",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"updateRefsMetadata",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeRefsMetadata",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeColumns",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeScrollMarkers",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeRefsVisibility",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeConfiguration",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidFetch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeRows",1),be([(0,T.fF)({args:!1})],GraphWebviewProvider.prototype,"notifyDidChangeRowsStats",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeWorkingTree",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeSelection",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeSubscription",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"notifyDidChangeState",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"fetch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"pull",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"push",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"createBranch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"deleteBranch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"mergeBranchInto",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openBranchOnRemote",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"publishBranch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"rebase",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"rebaseToRemote",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"renameBranch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"cherryPick",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"copy",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"copyMessage",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"copySha",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openInDetailsView",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openSCM",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openCommitOnRemote",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToBranch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToCommit",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToRepo",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"copyDeepLinkToTag",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"shareAsCloudPatch",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"resetCommit",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"resetToCommit",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"resetToTip",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"revertCommit",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"switchTo",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"hideRef",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"switchToAnother",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"undoCommit",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"saveStash",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"applyStash",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"deleteStash",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"renameStash",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"createTag",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"deleteTag",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"createWorktree",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"createPullRequest",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openPullRequestOnRemote",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"compareAncestryWithWorking",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"compareHeadWith",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"compareWithUpstream",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"compareWorkingWith",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openFiles",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openAllChanges",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openAllChangesWithWorking",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openRevisions",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"openOnlyChangedFiles",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"addAuthor",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"toggleColumn",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"toggleScrollMarker",1),be([(0,T.fF)()],GraphWebviewProvider.prototype,"setColumnMode",1)},9804:(e,t,i)=>{i.d(t,{PatchDetailsWebviewProvider:()=>PatchDetailsWebviewProvider});var r=i(9496),s=i(5255),n=i(6897),o=i(439),a=i(7881),c=i(4321),l=i(3646),h=i(847),u=i(2509);async function d(e,t){if(null==t)return;const i={label:"Create new branch",description:"Creates a branch to apply the Cloud Patch to. (Typing an existing branch name will use that branch.)"},s={label:"Select existing branch",description:"Selects an existing branch to apply the Cloud Patch to."},n=[i,s],o=r.window.createQuickPick();o.ignoreFocusOut=(0,u.hE)();const a=[];try{const c=await new Promise((t=>{a.push(o.onDidHide((()=>t(void 0))),o.onDidAccept((()=>{0!==o.activeItems.length&&t(o.activeItems[0])}))),o.title=e,o.placeholder="Select a branch option",o.matchOnDescription=!0,o.matchOnDetail=!0,o.items=n,o.show()}));return c===i?async function(e,t,i){const s=r.window.createInputBox();s.ignoreFocusOut=!0;const n=[];let o;try{o=await new Promise((i=>{n.push(s.onDidHide((()=>i(void 0))),s.onDidAccept((()=>{const e=s.value.trim();null!=e?i(e):s.validationMessage="Please enter a valid branch name"}))),s.title=e,s.placeholder=t,s.prompt="Enter a name for the new branch",s.show()}))}finally{s.dispose(),n.forEach((e=>{e.dispose()}))}return o}(e,"Enter a name for the new branch"):c===s?async function(e,t,i){if(null==i)return;const s=await(0,h.C_)(i,{});if(0===s.length)return;const n=r.window.createQuickPick();n.ignoreFocusOut=(0,u.hE)();const o=[];try{const i=await new Promise((i=>{o.push(n.onDidHide((()=>i(void 0))),n.onDidAccept((()=>{0!==n.activeItems.length&&i(n.activeItems[0])}))),n.title=e,n.placeholder=t,n.matchOnDescription=!0,n.matchOnDetail=!0,n.items=s,n.show()}));if(null==i)return;return i}finally{n.dispose(),o.forEach((e=>{e.dispose()}))}}(e,"Select an existing branch",t):void 0}finally{o.dispose(),a.forEach((e=>{e.dispose()}))}}var p=i(9529),m=i(5148),g=i(2061),f=i(1219),w=i(9796),v=i(3105),y=i(3700),b=i(7387),C=i(5798),A=i(9679),S=i(4435);const P=new C.ke("patch/apply"),k=new C.ke("patch/create"),D=new C.ke("patch/openInGraph"),R=new C.ke("patch/checked"),_=(new C.ke("patch/selectRepo"),new C.ke("patch/selectBase"),new C.ke("patch/file/actions"),new C.ke("patch/file/open")),T=(new C.ke("patch/file/openOnRemote"),new C.ke("patch/file/compareWorking")),F=new C.ke("patch/file/comparePrevious"),$=new C.ke("patch/explain"),I=new C.ke("patch/preferences/update"),x=new C.ke("patch/switchMode"),O=new C.ke("patch/cloud/copyLink"),E=(new C.ke("patch/local/createPatch"),new C.ke("patch/create/repository/check")),B=new C.ke("patch/update/create/metadata"),W=new C.jH("patch/didChange",!0),M=new C.jH("patch/create/didChange"),N=new C.jH("patch/draft/didChange"),L=new C.jH("patch/preferences/didChange"),U=new C.jH("patch/didExplain"),G=new C.jH("patch/draft/didChangeRepository");class RepositoryRefChangeset{constructor(e,t,i,r,s,n){this.container=e,this.repository=t,this.revision=i,this.files=r,this.checked=s,this.expanded=n}type="revision";dispose(){}suspend(){}resume(){}_checked=!1;get checked(){return this._checked}set checked(e){this._checked=e}_expanded=!1;get expanded(){return this._expanded}set expanded(e){this._expanded!==e&&(this._expanded=e)}async getChange(){return{type:"revision",repository:{name:this.repository.name,path:this.repository.path,uri:this.repository.uri.toString()},revision:this.revision,files:this.files,checked:this.checked,expanded:this.expanded}}}class RepositoryWipChangeset{constructor(e,t,i,r,s,n){this.container=e,this.repository=t,this.revision=i,this.onDidChangeRepositoryWip=r,this.checked=s,this.expanded=n}type="wip";_disposable;dispose(){this._disposable?.dispose(),this._disposable=void 0}suspend(){this._disposable?.dispose(),this._disposable=void 0}resume(){this._files=void 0,this._expanded&&this.subscribe()}_checked=!1;get checked(){return this._checked}set checked(e){this._checked=e}_expanded=!1;get expanded(){return this._expanded}set expanded(e){this._expanded!==e&&(this._files=void 0,e?this.subscribe():(this._disposable?.dispose(),this._disposable=void 0),this._expanded=e)}_files;async getChange(){let e;return this.expanded&&(null==this._files&&(this._files=this.getFiles()),e=await this._files),{type:"wip",repository:{name:this.repository.name,path:this.repository.path,uri:this.repository.uri.toString()},revision:this.revision,files:e?.files,checked:this.checked,expanded:this.expanded}}subscribe(){null==this._disposable&&(this._disposable=r.Disposable.from(this.repository.watchFileSystem(1e3),this.repository.onDidChangeFileSystem((()=>this.onDidChangeWip()),this),this.repository.onDidChange((e=>{e.changed(l.I6.Index,l.du.Any)&&this.onDidChangeWip()}))))}onDidChangeWip(){this._files=void 0,this.onDidChangeRepositoryWip(this)}async getFiles(){const e=await this.container.git.getStatusForRepo(this.repository.path),t=[];if(null!=e)for(const i of e.files){const e={repoPath:i.repoPath,path:i.path,status:i.status,originalPath:i.originalPath,staged:i.staged};t.push(e),i.staged&&i.wip&&t.push({...e,staged:!1})}return{files:t}}}var H=Object.defineProperty,V=Object.getOwnPropertyDescriptor;class PatchDetailsWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._context={mode:"create",draft:void 0,create:void 0,preferences:this.getPreferences()},this.setHostTitle(),this.host.description="PREVIEW ☁️",this._disposable=r.Disposable.from(m.D.onDidChangeAny(this.onAnyConfigurationChanged,this),e.git.onDidChangeRepositories(this.onRepositoriesChanged,this))}_context;_disposable;dispose(){this._disposable.dispose()}canReuseInstance(...e){const[t]=e;if("view"===t?.mode&&null!=t.draft)switch(t.draft.draftType){case"cloud":return this._context.draft?.draftType===t.draft.draftType&&this._context.draft.id===t.draft.id;case"local":return this._context.draft?.draftType===t.draft.draftType&&this._context.draft.patch.contents===t.draft.patch?.contents}return!1}async onShowing(e,t,...i){const[r]=i;if("view"===r?.mode&&null!=r.draft)this.updateViewDraftState(r.draft);else{this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories;const e="create"===r?.mode&&null!=r.create?r.create:{repositories:void 0};this.updateCreateDraftState(e)}return!(t?.preserveVisibility&&!this.host.visible)}includeBootstrap(){return this.getState(this._context)}registerCommands(){return this.host.isView()?[(0,p.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0))),(0,p.xR)(`${this.host.id}.close`,(()=>this.closeView()))]:[]}onMessageReceived(e){switch(e.method){case P.method:(0,C.mq)(P,e,(e=>this.applyPatch(e)));break;case O.method:(0,C.mq)(O,e,(()=>this.copyCloudLink()));break;case k.method:(0,C.mq)(k,e,(e=>this.createDraft(e)));break;case $.method:(0,C.mq)($,e,(()=>this.explainPatch(e.completionId)));break;case F.method:(0,C.mq)(F,e,(e=>{this.openFileComparisonWithPrevious(e)}));break;case T.method:(0,C.mq)(T,e,(e=>{this.openFileComparisonWithWorking(e)}));break;case _.method:(0,C.mq)(_,e,(e=>{this.openFile(e)}));break;case D.method:(0,C.mq)(D,e,(e=>{(0,p.P0)(s.Gh.ShowInCommitGraph,{ref:(0,c.xB)(e.ref,e.repoPath,{refType:"revision"})})}));break;case x.method:(0,C.mq)(x,e,(e=>this.switchMode(e)));break;case B.method:(0,C.mq)(B,e,(e=>this.updateCreateMetadata(e)));break;case E.method:(0,C.mq)(E,e,(e=>this.updateCreateCheckedState(e)));break;case I.method:(0,C.mq)(I,e,(e=>this.updatePreferences(e)));break;case R.method:(0,C.mq)(R,e,(e=>this.onPatchChecked(e)))}}onRefresh(){this.updateState(!0)}onReloaded(){this.updateState(!0)}onVisibilityChanged(e){this._context.create?.changes.forEach((t=>e?t.resume():t.suspend())),e&&this.host.sendPendingIpcNotifications()}onAnyConfigurationChanged(e){(m.D.changed(e,["defaultDateFormat","views.patchDetails.files","views.patchDetails.avatars"])||m.D.changedAny(e,"workbench.tree.renderIndentGuides")||m.D.changedAny(e,"workbench.tree.indent"))&&(this._context.preferences={...this._context.preferences,...this.getPreferences()},this.updateState())}getPreferences(){return{avatars:m.D.get("views.patchDetails.avatars"),dateFormat:m.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",files:m.D.get("views.patchDetails.files"),indentGuides:m.D.getAny("workbench.tree.renderIndentGuides")??"onHover",indent:m.D.getAny("workbench.tree.indent")}}onRepositoriesChanged(e){if("create"===this.mode&&null!=this._context.create){if(this._context.create?.showingAllRepos)for(const t of e.added)this._context.create.changes.set(t.uri.toString(),new RepositoryWipChangeset(this.container,t,{to:o.CL,from:"HEAD"},this.onRepositoryWipChanged.bind(this),!1,!0));for(const t of e.removed)this._context.create.changes.delete(t.uri.toString());this.notifyDidChangeCreateDraftState()}}onRepositoryWipChanged(e){this.notifyDidChangeCreateDraftState()}get mode(){return this._context.mode}setMode(e,t){this._context.mode=e,this.setHostTitle(e),(0,g.v)("gitlens:views:patchDetails:mode","editor"===m.D.get("cloudPatches.experimental.layout")?void 0:e),t||this.updateState(!0)}setHostTitle(e=this._context.mode){this.host.title="create"===e?"Create Cloud Patch":"Cloud Patch Details"}async applyPatch(e){if(null==this._context.draft||"local"===this._context.draft.draftType||!e.selected?.length)return;const t=this._context.draft.changesets?.[0];if(null==t)return;const i="branch"===e.target;for(const n of t.patches)if(e.selected.includes(n.id))try{console.log(n);let e,t=n.commit;if(t||(t=await this.getOrCreateCommitForPatch(n.gkRepositoryId)),!t)continue;if(i){const i=t.getRepository(),o=await d(`Choose a Branch ${s.NE.Dot} ${i?.name}`,i);if(null==o){r.window.showErrorMessage(`Unable apply patch to '${n.repository.name}': No branch selected`);continue}const a="string"==typeof o;e={branchName:a?o:o.ref,createBranchIfNeeded:a}}this.container.git.applyPatchCommit(t.repoPath,t.ref,e)}catch(e){r.window.showErrorMessage(`Unable apply patch to '${n.baseRef}': ${e.message}`)}}closeView(){(0,g.v)("gitlens:views:patchDetails:mode",void 0)}copyCloudLink(){"cloud"===this._context.draft?.draftType&&r.env.clipboard.writeText(this._context.draft.deepLinkUrl)}async createDraft({title:e,changesets:t,description:i}){if(!await(0,S.wz)("Cloud Patches require a GitKraken account.",this.container)||!await(0,S.FQ)(this.container))return;const s=[],n=Object.entries(t),a=1===n.length;for(const[c,l]of n){if(!a&&!1===l.checked)continue;const h=this._context.create?.changes?.get(c);if(null==h)continue;let{revision:u,repository:d}=h;"wip"===l.type&&"staged"===l.checked&&(u={...u,to:o.pw}),s.push({repository:d,revision:u})}if(null!=s)try{const p=await this.container.drafts.createDraft("patch",e,s,i?{description:i}:void 0);async function m(){const e={title:"View Patch"},t={title:"Copy Link"};let i=!1;for(;;){const s=await r.window.showInformationMessage("Cloud Patch successfully created"+(i?"— link copied to the clipboard":""),e,t);if(s!==t){s===e&&(0,A.l)({mode:"view",draft:p});break}r.env.clipboard.writeText(p.deepLinkUrl),i=!0}}m(),this.container.draftsView.refresh(!0).then((()=>{this.container.draftsView.revealDraft(p)})),this.closeView()}catch(g){r.window.showErrorMessage(`Unable to create draft: ${g.message}`)}}async explainPatch(e){if("cloud"!==this._context.draft?.draftType)return;let t;try{const e=await this.getDraftPatch(this._context.draft);if(null==e)throw new Error("Unable to find patch");const i=await this.getOrCreateCommitForPatch(e.gkRepositoryId);if(null==i)throw new Error("Unable to find commit");const r=await this.container.ai.explainCommit(i,{progress:{location:{viewId:this.host.id}}});if(null==r)throw new Error("Error retrieving content");t={summary:r}}catch(e){t={error:{message:e.message}}}this.host.notify(U,t,e)}async openPatchContents(e){}async onPatchChecked(e){if(e.patch.repository.located||!1===e.checked)return;const t=this._context.draft?.changesets?.[0].patches?.find((t=>t.gkRepositoryId===e.patch.gkRepositoryId));if(null==t?.repository||(0,l.uC)(t.repository))return;const i=await this.container.repositoryIdentity.getRepository(t.repository,{openIfNeeded:!0,prompt:!0});null==i?r.window.showErrorMessage(`Unable to locate repository '${t.repository.name}'`):t.repository=i,this.notifyPatchRepositoryUpdated(t)}notifyPatchRepositoryUpdated(e){return this.host.notify(G,{patch:(0,b.q)({...e,contents:void 0,commit:void 0,repository:{id:e.gkRepositoryId,name:e.repository?.name??"",located:null!=e.repository&&(0,l.uC)(e.repository)}})})}updateCreateCheckedState(e){const t=this._context.create?.changes.get(e.repoUri);null!=t&&(t.checked=e.checked,this.notifyDidChangeCreateDraftState())}updateCreateMetadata(e){null!=this._context.create&&(this._context.create.title=e.title,this._context.create.description=e.description,this.notifyDidChangeCreateDraftState())}switchMode(e){this.setMode(e.mode)}_notifyDidChangeStateDebounced=void 0;updateState(e=!1){this.host.clearPendingIpcNotifications(),e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,w.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced())}async getState(e){let t,i;"create"===e.mode&&null!=e.create&&(t=await this.getCreateDraftState(e)),"view"===e.mode&&null!=e.draft&&(i=await this.getViewDraftState(e));return(0,b.q)({...this.host.baseWebviewState,mode:e.mode,create:t,draft:i,preferences:e.preferences})}async notifyDidChangeState(){return this._notifyDidChangeStateDebounced?.cancel(),this.host.notify(W,{state:await this.getState(this._context)})}updateCreateDraftState(e){let t,i=!1;if(null!=e.changes){t=this._context.create?.changes??new Map;const i=new Set;for(const s of e.changes){const e=this.container.git.getRepository(r.Uri.parse(s.repository.uri));if(null==e)continue;let n;n="wip"===s.type?new RepositoryWipChangeset(this.container,e,s.revision,this.onRepositoryWipChanged.bind(this),s.checked??!0,s.expanded??!0):new RepositoryRefChangeset(this.container,e,s.revision,s.files,s.checked??!0,s.expanded??!0),i.add(e.uri.toString()),t.set(e.uri.toString(),n)}if(i.size!==t.size)for(const[e,r]of t)i.has(e)||(r.checked=!1)}else{i=null==e.repositories;const r=e.repositories??this.container.git.openRepositories;t=new Map(r.map((e=>[e.uri.toString(),new RepositoryWipChangeset(this.container,e,{to:o.CL,from:"HEAD"},this.onRepositoryWipChanged.bind(this),!0,!0)])))}this._context.create={title:e.title,description:e.description,changes:t,showingAllRepos:i},this.setMode("create",!0),this.notifyDidChangeCreateDraftState()}async getCreateDraftState(e){const{create:t}=e;if(null==t)return;const i={};if(0!==t.changes.size)for(const[e,r]of t.changes){const t=await r.getChange();0!==t?.files?.length&&(t.checked!==r.checked&&(t.checked=r.checked),i[e]=t)}return{title:t.title,description:t.description,changes:i}}async notifyDidChangeCreateDraftState(){return this.host.notify(M,{mode:this._context.mode,create:await this.getCreateDraftState(this._context)})}updateViewDraftState(e){this._context.draft=e,this.setMode("view",!0),this.notifyDidChangeViewDraftState()}async getViewDraftState(e){if(null==e.draft)return;const t=e.draft;return"cloud"===t.draftType?((null==t.changesets||(0,v.G)(t.changesets,(e=>e.patches.some((e=>null==e.contents||null==e.files||null==e.repository)))))&&setTimeout((async()=>{null==t.changesets&&(t.changesets=await this.container.drafts.getChangesets(t.id));const e=t.changesets.flatMap((e=>e.patches)).filter((e=>null==e.contents||null==e.files||null==e.repository)),i=await Promise.allSettled(e.map((e=>this.container.drafts.getPatchDetails(e))));for(const t of i)if("fulfilled"===t.status){const i=e.find((e=>e.id===t.value.id));null!=i&&(i.contents=t.value.contents,i.files=t.value.files,i.repository=t.value.repository)}this.notifyDidChangeViewDraftState()}),0),{draftType:"cloud",id:t.id,createdAt:t.createdAt.getTime(),updatedAt:t.updatedAt.getTime(),author:t.author,title:t.title,description:t.description,patches:(0,b.q)(t.changesets[0].patches.map((e=>({...e,contents:void 0,commit:void 0,repository:{id:e.gkRepositoryId,name:e.repository?.name??"",located:null!=e.repository&&(0,l.uC)(e.repository)}}))))}):void 0}async notifyDidChangeViewDraftState(){return this.host.notify(N,{mode:this._context.mode,draft:(0,b.q)(await this.getViewDraftState(this._context))})}updatePreferences(e){this._context.preferences?.files?.compact===e.files?.compact&&this._context.preferences?.files?.icon===e.files?.icon&&this._context.preferences?.files?.layout===e.files?.layout&&this._context.preferences?.files?.threshold===e.files?.threshold||(null!=e.files&&(this._context.preferences?.files?.compact!==e.files?.compact&&m.D.updateEffective("views.patchDetails.files.compact",e.files?.compact),this._context.preferences?.files?.icon!==e.files?.icon&&m.D.updateEffective("views.patchDetails.files.icon",e.files?.icon),this._context.preferences?.files?.layout!==e.files?.layout&&m.D.updateEffective("views.patchDetails.files.layout",e.files?.layout),this._context.preferences?.files?.threshold!==e.files?.threshold&&m.D.updateEffective("views.patchDetails.files.threshold",e.files?.threshold),this._context.preferences.files=e.files),this.notifyDidChangePreferences())}async notifyDidChangePreferences(){return this.host.notify(L,{preferences:this._context.preferences})}async getDraftPatch(e,t){if(null==e.changesets){const t=await this.container.drafts.getChangesets(e.id);e.changesets=t}const i=null==t?e.changesets[0].patches?.[0]:e.changesets[0].patches?.find((e=>e.gkRepositoryId===t));if(null!=i){if(null==i.contents||null==i.files||null==i.repository){const e=await this.container.drafts.getPatchDetails(i.id);i.contents=e.contents,i.files=e.files,i.repository=e.repository}return i}}async getFileCommitFromParams(e){let[t,i]=await this.getOrCreateCommit(e);return null!=t&&null!=i?[t,new a.K8(e.repoPath,e.path,e.status,e.originalPath,void 0,void 0,e.staged),i]:(t=await(t?.getCommitForFile(e.path,e.staged)),null!=t?[t,t.file,i]:void 0)}async getOrCreateCommit(e){switch(this.mode){case"create":return this.getCommitForFile(e);case"view":return[await this.getOrCreateCommitForPatch(e.gkRepositoryId)];default:return[void 0]}}async getCommitForFile(e){const t=(0,v.sE)(this._context.create.changes.values(),(t=>t.repository.path===e.repoPath));if(null==t)return[void 0];const i=await t.getChange();if(null==i)return[void 0];if("revision"===i.type){const t=await this.container.git.getCommit(e.repoPath,i.revision.to??o.CL);return i.revision.to===i.revision.from||i.revision.from.length===i.revision.to.length+1&&i.revision.from.endsWith("^")&&i.revision.from.startsWith(i.revision.to)?[t]:[t,i.revision]}return"wip"===i.type?[await this.container.git.getCommit(e.repoPath,i.revision.to??o.CL)]:[void 0]}async getOrCreateCommitForPatch(e){const t=this._context.draft;if("local"===t.draftType)return;const i=await this.getDraftPatch(t,e);if(null!=i?.repository){if(null==i?.commit){if(!(0,l.uC)(i.repository)){const e=await this.container.repositoryIdentity.getRepository(i.repository,{openIfNeeded:!0,prompt:!0});if(null==e)return void r.window.showErrorMessage(`Unable to locate repository '${i.repository.name}'`);i.repository=e}try{const e=await this.container.git.createUnreachableCommitForPatch(i.repository.uri,i.contents,i.baseRef??"HEAD",t.title);i.commit=e}catch(e){r.window.showErrorMessage(`Unable preview the patch on base '${i.baseRef}': ${e.message}`),i.baseRef=void 0}}return i?.commit}}async openFile(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;(0,n.ZB)(r,i,{preserveFocus:!0,preview:!0,...e.showOptions})}async openFileComparisonWithPrevious(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r,s]=t;(0,n.vw)(r,null!=s?{repoPath:i.repoPath,rhs:s.to??o.CL,lhs:s.from}:i,{preserveFocus:!0,preview:!0,...e.showOptions,rhsTitle:"view"===this.mode?`${(0,y.EZ)(r.path)} (Patch)`:void 0}),this.container.events.fire("file:selected",{uri:r.uri},{source:this.host.id})}async openFileComparisonWithWorking(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r,s]=t;(0,n.ce)(r,null!=s?{repoPath:i.repoPath,ref:s.to}:i,{preserveFocus:!0,preview:!0,...e.showOptions,lhsTitle:"view"===this.mode?`${(0,y.EZ)(r.path)} (Patch)`:void 0})}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?V(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&H(t,i,n)})([(0,f.fF)({args:!1})],PatchDetailsWebviewProvider.prototype,"getState",1)},9042:(e,t,i)=>{i.d(t,{TimelineWebviewProvider:()=>TimelineWebviewProvider});var r=i(9496),s=i(5255),n=i(8887),o=i(7462),a=i(6450),c=i(3646),l=i(9529),h=i(5148),u=i(7512),d=i(1219),p=i(9796),m=i(3105),g=i(2509),f=i(5209),w=i(5798),v=i(6260),y=i(620);const b=new w.jH("timeline/didChange"),C=new w.ke("timeline/point/open"),A=new w.ke("timeline/period/update");var S=Object.defineProperty,P=Object.getOwnPropertyDescriptor,k=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?P(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&S(t,i,n),n};class TimelineWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._context={uri:void 0,period:"3|M",etagRepositories:this.container.git.etag,etagRepository:0,etagSubscription:this.container.subscription.etag},this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.host.isEditor()?this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this)):(this.host.description="✨",this._disposable=r.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),r.window.onDidChangeActiveTextEditor((0,p.Ds)(this.onActiveEditorChanged,250),this),this.container.events.on("file:selected",(0,p.Ds)(this.onFileSelected,250),this)))}_bootstraping=!0;_context;_pendingContext;_disposable;dispose(){this._disposable.dispose()}onReloaded(){this.notifyDidChangeState(!0)}canReuseInstance(...e){let t;const[i]=e;return null!=i?i instanceof r.Uri?t=i:(0,f.w)(i)?t=i.uri:(0,y.W)(i)&&null!=i.state.uri&&(t=r.Uri.parse(i.state.uri)):t=r.window.activeTextEditor?.document.uri,t?.toString()===this._context.uri?.toString()||void 0}getSplitArgs(){return null!=this._context.uri?[this._context.uri]:[]}onShowing(e,t,...i){const[s]=i;return null!=s?s instanceof r.Uri?this.updatePendingUri(s):(0,f.w)(s)?this.updatePendingUri(s.uri):(0,y.W)(s)&&this.updatePendingContext({period:s.state.period,uri:null!=s.state.uri?r.Uri.parse(s.state.uri):void 0}):this.updatePendingEditor(r.window.activeTextEditor),e?(this._context={...this._context,...this._pendingContext},this._pendingContext=void 0):this.updateState(),!0}includeBootstrap(){return this._bootstraping=!0,this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.getState(this._context)}registerCommands(){return this.host.isView()?[(0,l.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)),this),(0,l.xR)(`${this.host.id}.openInTab`,(()=>{null!=this._context.uri&&(0,l.P0)(s.Gh.ShowInTimeline,this._context.uri)}),this)]:[]}onVisibilityChanged(e){e&&(this.host.isView()&&this.updatePendingEditor(r.window.activeTextEditor),this._bootstraping&&(this._bootstraping=!1,null==this._pendingContext||!("uri"in this._pendingContext))||this.updateState())}onMessageReceived(e){switch(e.method){case C.method:(0,w.mq)(C,e,(async e=>{if(null==e.data||!e.data.selected||null==this._context.uri)return;const t=this.container.git.getRepository(this._context.uri);if(null==t)return;const i=await t.getCommit(e.data.id);null!=i&&(this.container.events.fire("commit:selected",{commit:i,interaction:"active",preserveFocus:!0,preserveVisibility:!1},{source:this.host.id}),this.container.commitDetailsView.ready||this.container.commitDetailsView.show({preserveFocus:!0},{commit:i,interaction:"active",preserveVisibility:!1}))}));break;case A.method:(0,w.mq)(A,e,(e=>{this.updatePendingContext({period:e.period})&&this.updateState(!0)}))}}onActiveEditorChanged(e){if(null!=e){if(!(0,g.PH)(e))return;this.container.git.isTrackable(e.document.uri)||(e=void 0)}this.updatePendingEditor(e)&&this.updateState()}onFileSelected(e){if(null==e.data)return;let t=e.data.uri;null==t||this.container.git.isTrackable(t)||(t=void 0),this.updatePendingUri(t)&&this.updateState()}onRepositoriesChanged(e){const t=this.updatePendingUri(this._context.uri);(this.updatePendingContext({etagRepositories:e.etag})||t)&&this.updateState()}onRepositoryChanged(e){e.changed(c.I6.Heads,c.I6.Index,c.du.Any)&&this.updatePendingContext({etagRepository:e.repository.etag})&&this.updateState()}onSubscriptionChanged(e){this.updatePendingContext({etagSubscription:e.etag})&&this.updateState()}async getState(e){const t=h.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",i=h.D.get("defaultDateShortFormat")??"short",s=e.period??"3|M",c=null!=e.uri?await o.YY.fromUri(e.uri):void 0,l=c?.repoPath;this.host.isEditor()?this.host.title=null==c?this.host.originalTitle:`${this.host.originalTitle}: ${c.fileName}`:this.host.description=c?.fileName??"✨";const u=await this.container.git.access(n.x.Timeline,l);if(null==e.uri||null==c||null==l||!1===u.allowed){const r=await this.container.git.access(n.x.Timeline,l);return{...this.host.baseWebviewState,period:s,title:c?.relativePath,sha:c?.shortSha,uri:e.uri?.toString(),dateFormat:t,shortDateFormat:i,access:r}}const[d,p]=await Promise.all([this.container.git.getCurrentUser(l),this.container.git.getLogForFile(l,c.fsPath,{limit:0,ref:c.sha,since:D(s)?.toISOString()})]);if(null==p)return{...this.host.baseWebviewState,dataset:[],period:s,title:c.relativePath,sha:c.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:u};let g=[...(0,m.hX)(p.commits.values(),(e=>null==e.file?.stats&&1!==(0,a.By)(e.stats?.changedFiles)))];if(0!==g.length){const t=h.D.get("visualHistory.queryLimit")??20,i=this.container.git.getRepository(e.uri),s=i?.provider.name;g.length>t&&(r.window.showWarningMessage(`Unable able to show more than the first ${t} commits for the specified time period because of ${s?`${s} `:""}rate limits.`),g=g.slice(0,20)),await Promise.allSettled(g.map((e=>e.ensureFullDetails())))}const f=d?.name?`${d.name} (you)`:"You",w=[];for(const e of p.commits.values()){const t=e.file?.stats??(1===(0,a.By)(e.stats?.changedFiles)?e.stats:void 0);w.push({author:"You"===e.author.name?f:e.author.name,additions:t?.additions,deletions:t?.deletions,commit:e.sha,date:e.date.toISOString(),message:e.message??e.summary,sort:e.date.getTime()})}return w.sort(((e,t)=>t.sort-e.sort)),{...this.host.baseWebviewState,dataset:w,period:s,title:c.relativePath,sha:c.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:u}}updatePendingContext(e,t){const[i,r]=(0,v.OY)(this._context,this._pendingContext,e,t);return i&&(this._pendingContext=r),i}updatePendingEditor(e,t){return(null!=e||!(0,g.JM)(this._context.uri??this._pendingContext?.uri))&&(!(null!=e&&!(0,g.PH)(e))&&this.updatePendingUri(e?.document.uri,t))}updatePendingUri(e,t){let i;if(null!=e){const t=this.container.git.getRepository(e);i=t?.etag??0}else i=0;return this.updatePendingContext({uri:e,etagRepository:i},t)}_notifyDidChangeStateDebounced=void 0;updateState(e=!1){e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,p.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced())}async notifyDidChangeState(e=!1){if(this._notifyDidChangeStateDebounced?.cancel(),!e&&null==this._pendingContext)return!1;let t;return null!=this._pendingContext?(t={...this._context,...this._pendingContext},this._context=t,this._pendingContext=void 0):t=this._context,this.host.notify(b,{state:await this.getState(t)})}}function D(e){if("all"==e)return;const[t,i]=e.split("|");let r;switch(i){case"D":r=(0,u.IH)(new Date,{days:-parseInt(t,10)});break;case"M":r=(0,u.IH)(new Date,{months:-parseInt(t,10)});break;case"Y":r=(0,u.IH)(new Date,{years:-parseInt(t,10)});break;default:r=(0,u.IH)(new Date,{months:-3})}return r.getHours()>=12&&r.setDate(r.getDate()+1),r.setHours(0,0,0,0),r}k([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onActiveEditorChanged",1),k([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onFileSelected",1),k([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onRepositoriesChanged",1),k([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onRepositoryChanged",1),k([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"onSubscriptionChanged",1),k([(0,d.fF)({args:!1})],TimelineWebviewProvider.prototype,"getState",1),k([(0,d.fF)()],TimelineWebviewProvider.prototype,"updateState",1),k([(0,d.fF)()],TimelineWebviewProvider.prototype,"notifyDidChangeState",1)},1907:(e,t,i)=>{i.d(t,{CH:()=>CloudWorkspace,CL:()=>c,Jv:()=>n,Pv:()=>o,U1:()=>a,Xu:()=>r,_N:()=>s,qP:()=>LocalWorkspace});class CloudWorkspace{constructor(e,t,i,r,s,n,o,a,c,l){this.container=e,this.id=t,this.name=i,this.organizationId=r,this.provider=s,this.repoRelation=n,this.current=o,this.azureInfo=a,this._repositoryDescriptors=c,this._localPath=l,this._disposable=this.container.git.onDidChangeRepositories(this.resetRepositoriesByName,this)}type="cloud";_repositoryDescriptors;_repositoriesByName;_localPath;_disposable;dispose(){this._disposable.dispose()}get shared(){return null!=this.organizationId}get localPath(){return this._localPath}resetRepositoriesByName(){this._repositoriesByName=void 0}async getRepositoriesByName(e){return(null==this._repositoriesByName||e?.force)&&(this._repositoriesByName=await this.container.workspaces.resolveWorkspaceRepositoriesByName(this.id,{resolveFromPath:!0,usePathMapping:!0})),this._repositoriesByName}async getRepositoryDescriptors(e){return(null==this._repositoryDescriptors||e?.force)&&(this._repositoryDescriptors=await this.container.workspaces.getCloudWorkspaceRepositories(this.id),this.resetRepositoriesByName()),this._repositoryDescriptors}async getRepositoryDescriptor(e){return(await this.getRepositoryDescriptors()).find((t=>t.name===e))}addRepositories(e){null==this._repositoryDescriptors?this._repositoryDescriptors=e:this._repositoryDescriptors=this._repositoryDescriptors.concat(e),this.resetRepositoriesByName()}removeRepositories(e){null!=this._repositoryDescriptors&&(this._repositoryDescriptors=this._repositoryDescriptors.filter((t=>!e.includes(t.name))),this.resetRepositoriesByName())}setLocalPath(e){this._localPath=e}}var r=(e=>(e.GitHub="GITHUB",e.GitHubEnterprise="GITHUB_ENTERPRISE",e.GitLab="GITLAB",e.GitLabSelfHosted="GITLAB_SELF_HOSTED",e.Bitbucket="BITBUCKET",e.Azure="AZURE",e))(r||{}),s=(e=>(e.GitHub="github",e.GitHubEnterprise="github_enterprise",e.GitLab="gitlab",e.GitLabSelfHosted="gitlab_self_hosted",e.Bitbucket="bitbucket",e.Azure="azure",e))(s||{});const n={azure:"azure-devops",bitbucket:"bitbucket",github:"github",github_enterprise:"github",gitlab:"gitlab",gitlab_self_hosted:"gitlab"};var o=(e=>(e.CurrentWindow="Current Window",e.ParentFolder="Parent Folder",e))(o||{});const a=100,c=100;class LocalWorkspace{constructor(e,t,i,r,s,n){this.container=e,this.id=t,this.name=i,this.repositoryDescriptors=r,this.current=s,this._localPath=n,this._disposable=this.container.git.onDidChangeRepositories(this.resetRepositoriesByName,this)}type="local";_localPath;_repositoriesByName;_disposable;dispose(){this._disposable.dispose()}get shared(){return!1}get localPath(){return this._localPath}resetRepositoriesByName(){this._repositoriesByName=void 0}async getRepositoriesByName(e){return(null==this._repositoriesByName||e?.force)&&(this._repositoriesByName=await this.container.workspaces.resolveWorkspaceRepositoriesByName(this.id,{resolveFromPath:!0,usePathMapping:!0})),this._repositoriesByName}getRepositoryDescriptors(){return Promise.resolve(this.repositoryDescriptors)}getRepositoryDescriptor(e){return Promise.resolve(this.repositoryDescriptors.find((t=>t.name===e)))}setLocalPath(e){this._localPath=e}}},1857:(e,t,i)=>{i.d(t,{D:()=>d,h:()=>p});var r=i(9496),s=i(6894),n=i(5148),o=i(3105),a=i(7469),c=i(2509),l=i(9729),h=i(3599),u=i(1742);async function d(e,t,i,d){const p=r.window.createQuickPick();function m(e){return null==e?[(0,h.fw)(h.Xe.Cancel)]:[...d?.showOtherReferences??[],...(0,o.UI)(e.commits.values(),(e=>(0,u.YY)(e,d?.picked===e.ref,{compact:!0,icon:!0}))),...e?.hasMore?[(0,h.fw)(h.Xe.LoadMore)]:[]]}p.ignoreFocusOut=(0,c.hE)(),p.title=t,p.placeholder=i,p.matchOnDescription=!0,p.matchOnDetail=!0,(0,a.tI)(e)&&(p.busy=!0,p.show(),null==(e=await e)&&(p.placeholder="Unable to show commit history")),p.items=m(e),d?.picked&&(p.activeItems=p.items.filter((e=>!l.$w.is(e)&&e.picked)));const g=[];let f;null!=d?.keys&&0!==d.keys.length&&null!==d?.onDidPressKey&&(f=s.W.instance.keyboard.createScope(Object.fromEntries(d.keys.map((e=>[e,{onDidPressKey:e=>{if(0!==p.activeItems.length){const[t]=p.activeItems;null==t||(0,h.Gy)(t)||l.$w.is(t)||d.onDidPressKey(e,t)}}}])))),f.start(),g.push(f));try{const t=await new Promise((t=>{g.push(p.onDidHide((()=>t(void 0))),p.onDidAccept((()=>{if(0!==p.activeItems.length){const[i]=p.activeItems;if((0,h.Gy)(i))return i.directive===h.Xe.LoadMore?void async function(){p.busy=!0;try{const t=m(e=await((await e)?.more?.(n.D.get("advanced.maxListItems"))));let i=-1;if(0!==p.activeItems.length){const e=p.activeItems[0];i=p.items.indexOf(e),(0,h.Gy)(e)&&i--}p.items=t,i&&(p.activeItems=[p.items[i]])}finally{p.busy=!1}}():void t(void 0);t(i)}})),p.onDidChangeValue((async e=>{null!=f&&(0!==e.length?await f.pause(["left","right"]):await f.resume())}))),p.busy=!1,p.show()}));if(null==t||(0,h.Gy)(t))return;return t instanceof l.$w?void await t.execute():t.item}finally{p.dispose(),g.forEach((e=>{e.dispose()}))}}async function p(e,t,i,n){const d=r.window.createQuickPick();d.ignoreFocusOut=(0,c.hE)(),d.title=t,d.placeholder=i,d.matchOnDescription=!0,d.matchOnDetail=!0,(0,a.tI)(e)&&(d.busy=!0,d.show(),e=await e),null!=e&&(d.items=[...n?.showOtherReferences??[],...(0,o.UI)(null!=n?.filter?(0,o.hX)(e.commits.values(),n.filter):e.commits.values(),(e=>(0,u.YY)(e,n?.picked===e.ref,{compact:!0,icon:!0})))]),(null==e||d.items.length<=(n?.showOtherReferences?.length??0))&&(d.placeholder=null==e?"No stashes found":n?.empty??"No matching stashes found",d.items=[(0,h.fw)(h.Xe.Cancel)]),n?.picked&&(d.activeItems=d.items.filter((e=>!l.$w.is(e)&&e.picked)));const p=[];let m;null!=n?.keys&&0!==n.keys.length&&null!==n?.onDidPressKey&&(m=s.W.instance.keyboard.createScope(Object.fromEntries(n.keys.map((e=>[e,{onDidPressKey:e=>{if(0!==d.activeItems.length){const[t]=d.activeItems;null==t||(0,h.Gy)(t)||l.$w.is(t)||n.onDidPressKey(e,t)}}}])))),m.start(),p.push(m));try{const e=await new Promise((e=>{p.push(d.onDidHide((()=>e(void 0))),d.onDidAccept((()=>{if(0!==d.activeItems.length){const[t]=d.activeItems;if((0,h.Gy)(t))return void e(void 0);e(t)}})),d.onDidChangeValue((async e=>{null!=m&&(0!==e.length?await m.pause(["left","right"]):await m.resume())}))),d.busy=!1,d.show()}));if(null==e||(0,h.Gy)(e))return;return e instanceof l.$w?void await e.execute():e.item}finally{d.dispose(),p.forEach((e=>{e.dispose()}))}}},4731:(e,t,i)=>{i.d(t,{J:()=>h});var r=i(9496),s=i(3016),n=i(5255),o=i(7469),a=i(3620),c=i(2509),l=i(1742);async function h(e,t,i,h,u){const d=(0,o.PQ)(),p=[];try{const o=r.window.createQuickPick();p.push(o,o.onDidHide((()=>d.fulfill(void 0))),o.onDidAccept((()=>o.busy?void 0:d.fulfill(o.selectedItems.map((e=>e.item))))),o.onDidTriggerButton((e=>{e===s.AI&&(o.canSelectMany?o.selectedItems=[]:d.fulfill([]))}))),o.ignoreFocusOut=u?.ignoreFocusOut??(0,c.hE)(),o.title=u?.appendReposToTitle?function(e,t,i){return e.git.openRepositoryCount<=1?t:`${t}${(0,a.$G)(`${(0,a.vk)(n.NE.Dot,2,2)}${i.formattedName}`,n.d$-t.length)}`}(e,i,t):i,o.placeholder=h,o.matchOnDescription=!0,o.matchOnDetail=!0,o.canSelectMany=u?.multiselect??!0,o.buttons=u?.clearButton?[s.AI]:[],o.busy=!0,o.show();const m=await t.getContributors();if(!d.pending)return;const g=await Promise.all(m.map((e=>(0,l.RI)(e,u?.picked?.(e)??!1))));if(!d.pending)return;o.items=g,o.canSelectMany?o.selectedItems=g.filter((e=>e.picked)):o.activeItems=g.filter((e=>e.picked)),o.busy=!1;return await d.promise}finally{p.forEach((e=>{e.dispose()}))}}},3931:(e,t,i)=>{i.d(t,{A1:()=>CommitOpenRevisionsCommandQuickPickItem,CV:()=>CommitOpenAllChangesCommandQuickPickItem,EE:()=>CommitOpenDetailsCommandQuickPickItem,Jw:()=>CommitCompareWithHEADCommandQuickPickItem,K6:()=>OpenChangedFilesCommandQuickPickItem,Lf:()=>CommitBrowseRepositoryFromHereCommandQuickPickItem,NC:()=>CommitCopyMessageQuickPickItem,OT:()=>CommitCopyIdQuickPickItem,PF:()=>CommitFilesQuickPickItem,QP:()=>CommitRestoreFileChangesCommandQuickPickItem,Wt:()=>CommitOpenRevisionCommandQuickPickItem,Y4:()=>CommitOpenAllChangesWithWorkingCommandQuickPickItem,ZO:()=>CommitOpenFileCommandQuickPickItem,aU:()=>CommitOpenChangesWithWorkingCommandQuickPickItem,do:()=>CommitApplyFileChangesCommandQuickPickItem,eG:()=>CommitOpenDirectoryCompareCommandQuickPickItem,lN:()=>CommitOpenFilesCommandQuickPickItem,lp:()=>CommitOpenChangesCommandQuickPickItem,m5:()=>CommitCompareWithWorkingCommandQuickPickItem,nl:()=>CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem,o$:()=>CommitOpenAllChangesWithDiffToolCommandQuickPickItem,rl:()=>OpenOnlyChangedFilesCommandQuickPickItem,sQ:()=>CommitOpenInGraphCommandQuickPickItem,xL:()=>CommitOpenChangesWithDiffToolCommandQuickPickItem,zr:()=>CommitFileQuickPickItem});var r=i(9496),s=i(3016),n=i(5255),o=i(6894),a=i(9311),c=i(6897),l=i(9338),h=i(7881),u=i(3700),d=i(3620),p=i(9729);class CommitFilesQuickPickItem extends p.$w{constructor(e,t){super({label:e.summary,description:`${l.i.fromTemplate("${author}, ${ago}  $(git-commit)  ${id}",e)}${t?.unpublished?"  (unpublished)":""}`,detail:`${null!=t?.file?`$(file) ${(0,u.EZ)(t.file.path)}${t.file.formatStats({expand:!0,separator:", ",prefix:` ${n.NE.Dot} `})}`:`$(files) ${e.formatStats({expand:!0,separator:", ",empty:"No files changed"})}`}${null!=t?.hint?`${(0,d.vk)(n.NE.Dash,4,2,n.NE.Space)}${t.hint}`:""}`,alwaysShow:!0,picked:t?.picked??!0,buttons:[s._9,s.Nv]},void 0,void 0,{suppressKeyPress:!0}),this.commit=e}get sha(){return this.commit.sha}}class CommitFileQuickPickItem extends p.$w{constructor(e,t,i){super({label:`${(0,d.vk)((0,h.Qw)(t.status),0,2)}${(0,u.EZ)(t.path)}`,description:(0,h.OC)(t,!0),picked:i}),this.commit=e,this.file=t}get sha(){return this.commit.sha}execute(e){return c.vw(this.file,this.commit,e)}}class CommitBrowseRepositoryFromHereCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??`$(folder-opened) Browse Repository from${t?.before?" Before":""} Here${t?.openInNewWindow?" in New Window":""}`),this.commit=e,this.executeOptions=t}execute(e){return(0,a.g)(this.commit.getGitUri(),{before:this.executeOptions?.before,openInNewWindow:this.executeOptions?.openInNewWindow})}}class CommitCompareWithHEADCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(compare-changes) Compare with HEAD"),this.commit=e}execute(e){return o.W.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"HEAD")}}class CommitCompareWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(compare-changes) Compare with Working Tree"),this.commit=e}execute(e){return o.W.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"")}}class CommitCopyIdQuickPickItem extends p.$w{constructor(e,t){super(t??"$(copy) Copy SHA"),this.commit=e}execute(){return c.$H(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage("Commit SHA copied to the clipboard")}}class CommitCopyMessageQuickPickItem extends p.$w{constructor(e,t){super(t??"$(copy) Copy Message"),this.commit=e}execute(){return c.SJ(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage((this.commit.stashName?"Stash":"Commit")+" Message copied to the clipboard")}}class CommitOpenAllChangesCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes"),this.commit=e}execute(e){return c.Gp(this.commit,e)}}class CommitOpenAllChangesWithDiffToolCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes (difftool)"),this.commit=e}execute(){return c.wr(this.commit)}}class CommitOpenAllChangesWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes with Working Tree"),this.commit=e}execute(e){return c.Ou(this.commit,e)}}class CommitOpenChangesCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes"),this.commit=e,this.file=t}execute(e){return c.vw(this.file,this.commit,e)}}class CommitOpenChangesWithDiffToolCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes (difftool)"),this.commit=e,this.file=t}execute(){return c.Xy(this.file,this.commit)}}class CommitOpenChangesWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes with Working File"),this.commit=e,this.file=t}execute(e){return c.ce(this.file,this.commit,e)}}class CommitOpenDirectoryCompareCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open Directory Compare"),this.commit=e}execute(){return c.tc(this.commit)}}class CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(git-compare) Open Directory Compare with Working Tree"),this.commit=e}execute(){return c.Os(this.commit)}}class CommitOpenDetailsCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(eye) Open Details"),this.commit=e}execute(e){return c.Fw(this.commit,{preserveFocus:e?.preserveFocus})}}class CommitOpenInGraphCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(gitlens-graph) Open in Commit Graph"),this.commit=e}execute(e){return c.GM(this.commit,{preserveFocus:e?.preserveFocus})}}class CommitOpenFilesCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(files) Open Files"),this.commit=e}execute(e){return c.aE(this.commit)}}class CommitOpenFileCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(file) Open File"),this.commit=e,this.file=t}execute(e){return c.ZB(this.file,this.commit,e)}}class CommitOpenRevisionsCommandQuickPickItem extends p.$w{constructor(e,t){super(t??"$(files) Open Files at Revision"),this.commit=e}execute(e){return c.Dh(this.commit)}}class CommitOpenRevisionCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"$(file) Open File at Revision"),this.commit=e,this.file=t}execute(e){return c.YS(this.file,this.commit,e)}}class CommitApplyFileChangesCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??"Apply Changes"),this.commit=e,this.file=t}async execute(){return c.zb(this.file,this.commit)}}class CommitRestoreFileChangesCommandQuickPickItem extends p.$w{constructor(e,t,i){super(i??{label:"Restore",description:"aka checkout"}),this.commit=e,this.file=t}execute(){return c.Hl(this.file,this.commit)}}class OpenChangedFilesCommandQuickPickItem extends p.$w{constructor(e,t){const i={uris:e.map((e=>e.uri))};super(t??"$(files) Open All Changed Files",n.Gh.OpenChangedFiles,[i])}}class OpenOnlyChangedFilesCommandQuickPickItem extends p.$w{constructor(e,t){const i={uris:e.map((e=>e.uri))};super(t??"$(files) Open Changed & Close Unchanged Files",n.Gh.OpenOnlyChangedFiles,[i])}}},9729:(e,t,i)=>{i.d(t,{$w:()=>CommandQuickPickItem,fz:()=>s,qv:()=>ActionQuickPickItem});var r=i(9496);function s(e){return{kind:r.QuickPickItemKind.Separator,label:e??""}}class CommandQuickPickItem{constructor(e,t,i,r){this.command=t,this.args=i,this.options=r,this.command=t,this.args=i,"string"==typeof e?this.label=e:Object.assign(this,e)}static fromCommand(e,t,i){return new CommandQuickPickItem("string"==typeof e?{label:e}:e,t,null==i?[]:[i])}static is(e){return e instanceof CommandQuickPickItem}label;description;detail;execute(e){if(void 0===this.command)return Promise.resolve(void 0);return r.commands.executeCommand(this.command,...this.args??[])}async onDidPressKey(e){if(this.options?.suppressKeyPress)return;const t=this.execute({preserveFocus:!0,preview:!1});this.options?.onDidPressKey?.(e,t),await t}}class ActionQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(e,void 0,void 0),this.action=t}async execute(e){return this.action(e)}}},3599:(e,t,i)=>{i.d(t,{Gy:()=>o,Xe:()=>r,fw:()=>n,wX:()=>s});var r=(e=>(e[e.Back=0]="Back",e[e.Cancel=1]="Cancel",e[e.LoadMore=2]="LoadMore",e[e.Noop=3]="Noop",e[e.RequiresVerification=4]="RequiresVerification",e[e.ExtendTrial=5]="ExtendTrial",e[e.RequiresPaidSubscription=6]="RequiresPaidSubscription",e[e.StartPreviewTrial=7]="StartPreviewTrial",e))(r||{});function s(e){return"number"==typeof e&&null!=r[e]}function n(e,t,i){let r=i?.label,s=i?.detail;if(null==r)switch(e){case 0:r="Back";break;case 1:r="Cancel";break;case 2:r="Load more";break;case 3:r="Try again";break;case 7:r="Preview Pro",s="Preview Pro for 3-days to use this on privately hosted repos";break;case 5:r="Start Free GitKraken Trial",s="Continue to use this on privately hosted repos, free for an additional 7 days";break;case 4:r="Resend Verification Email",s="You must verify your email before you can continue";break;case 6:r="Upgrade to Pro",s="A paid plan is required to use this on privately hosted repos"}return{label:r,description:i?.description,detail:s,alwaysShow:!0,picked:t,directive:e}}function o(e){return null!=e&&"directive"in e}},1742:(e,t,i)=>{i.d(t,{E0:()=>b,FO:()=>v,MH:()=>y,RE:()=>p,RI:()=>g,RP:()=>f,Wv:()=>GitCommandQuickPickItem,YY:()=>m,vl:()=>w});var r=i(2967),s=i(5255),n=i(6894),o=i(3148),a=i(6450),c=i(4321),l=i(3050),h=i(7512),u=i(3620),d=i(9729);class GitCommandQuickPickItem extends d.$w{constructor(e,t){super(e,s.Gh.GitCommands,[t],{suppressKeyPress:!0})}executeSteps(e){return(0,r.I)(n.W.instance,this.args[0],e)}}async function p(e,t,i){let r="";if(!0===i?.type?r=!0===i.current&&e.current?"current branch":"branch":"remote"===i?.type?e.remote&&(r="remote branch"):!0===i?.current&&e.current&&(r="current branch"),i?.status&&!e.remote&&null!=e.upstream){let t=s.NE.Dash;if(e.upstream.missing)t=s.NE.Warning;else{const i=await e.getRemote();if(null!=i){let e,r;for(const{type:t}of i.urls)if("fetch"===t){if(e=!0,r)break}else if("push"===t&&(r=!0,e))break;e&&r?t=s.NE.ArrowsRightLeft:r?t=s.NE.ArrowRight:e&&(t=s.NE.ArrowLeft)}}const i=`${e.getTrackingStatus({suffix:`${s.NE.Space} `})}${t}${s.NE.Space} ${e.upstream.name}`;r=`${r?`${r}${s.NE.Space.repeat(2)}${i}`:i}`}i?.ref&&(e.sha&&(r=r?`${r} $(git-commit)${s.NE.Space}${(0,c.zL)(e.sha)}`:`$(git-commit)${s.NE.Space}${(0,c.zL)(e.sha)}`),void 0!==e.date&&(r=r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}${e.formattedDate}`:e.formattedDate));const n=i?.checked||null==i?.checked&&"checkmark"===i?.current&&e.current;return{label:`$(git-branch)${s.NE.Space}${e.starred?`$(star-full)${s.NE.Space}`:""}${e.name}${n?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t??e.current,item:e,current:e.current,ref:e.name,remote:e.remote}}function m(e,t,i){if((0,a.G2)(e)){const r=null==e.number?"":`${e.number}: `;if(i?.compact){return{label:`${i.icon?`$(archive)${s.NE.Space}`:""}${r}${e.summary}`,description:`${e.formattedDate}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}}return{label:`${i?.icon?`$(archive)${s.NE.Space}`:""}${r}${e.summary}`,description:"",detail:`${s.NE.Space.repeat(2)}${e.formattedDate}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}if(i?.compact){return{label:`${i.icon?`$(git-commit)${s.NE.Space}`:""}${e.summary}`,description:`${e.author.name}, ${e.formattedDate}${(0,u.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}}return{label:`${i?.icon?`$(git-commit)${s.NE.Space}`:""}${e.summary}`,description:"",detail:`${s.NE.Space.repeat(2)}${e.author.name}, ${e.formattedDate}${(0,u.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}async function g(e,t,i){return{label:e.label,description:e.current?"you":e.email,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,iconPath:await e.getAvatarUri()}}function f(e,t,i,r){if(""===e)return{label:(r?.icon?`$(file-directory)${s.NE.Space}`:"")+"Working Tree",description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:(0,c.xB)(e,t,{refType:"revision",name:"Working Tree"}),current:!1,ref:e,remote:!1};if("HEAD"===e)return{label:(r?.icon?`$(git-branch)${s.NE.Space}`:"")+"HEAD",description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:(0,c.xB)(e,t,{refType:"revision",name:"HEAD"}),current:!1,ref:e,remote:!1};let n;if("string"==typeof e?n=(0,c.xB)(e,t):(n=e,e=n.ref),(0,c.yk)(e))return{label:`Range ${n.name}`,description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:n,current:!1,ref:e,remote:!1};return{label:`Commit ${n.name}`,description:r?.ref?`$(git-commit)${s.NE.Space}${e}`:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:n,current:!1,ref:e,remote:!1}}function w(e,t,i){let r="";if(i?.type&&(r="remote"),i?.upstream){const t=(0,l.jv)(e);r=r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}${t}`:t}return{label:`$(cloud)${s.NE.Space}${e.name}${i?.checked?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}async function v(e,t,i){let r;(i?.branch||i?.status)&&(r=await e.getStatus());let n="";if(i?.branch&&null!=r&&(n=r.branch),i?.status&&null!=r){let e="";0!==r.files.length&&(e=r.getFormattedDiffStatus({compact:!0,prefix:(0,u.vk)(s.NE.Dot,2,2)}));const t=`${r.getUpstreamStatus({prefix:n?`${s.NE.Space} `:""})}${e}`;t&&(n=`${n?`${n}${t}`:t}`)}if(i?.fetched){const t=await e.getLastFetched();if(0!==t){const e=`Last fetched ${(0,h.Zh)(new Date(t))}`;n=`${n?`${n}${(0,u.vk)(s.NE.Dot,2,2)}${e}`:e}`}}return{label:e.formattedName,description:n,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,repoPath:e.path}}function y(e,t,i){let r="";if(i?.type&&(r="tag"),i?.ref&&(r=`${r}${(0,u.vk)("$(git-commit)",r?2:0,1)}${(0,c.zL)(e.sha)}`,r=`${r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}`:""}${e.formattedDate}`),i?.message){const t=(0,o.X)(e.message);r=r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}${t}`:t}return{label:`$(tag)${s.NE.Space}${e.name}${i?.checked?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,current:!1,ref:e.name,remote:!1}}function b(e,t,i,r){let n,o,a="";switch(r?.type&&(a="worktree"),null!=r?.status&&(a+=r.status.hasChanges?(0,u.vk)(`Uncommited changes (${r.status.getFormattedDiffStatus()})`,a?2:0,0):(0,u.vk)("No changes",a?2:0,0)),e.type){case"bare":o="(bare)",n="$(folder)";break;case"branch":o=e.branch,n="$(git-branch)";break;case"detached":o=(0,c.zL)(e.sha),n="$(git-commit)"}return{label:`${n}${s.NE.Space}${o}${r?.checked?(0,u.vk)("$(check)",2):""}`,description:a,detail:r?.path?i?`${s.NE.Warning} Unable to locate $(folder) ${e.friendlyPath}`:`In $(folder) ${e.friendlyPath}`:void 0,alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:t,item:e,opened:e.opened,hasChanges:r?.status?.hasChanges}}},3636:(e,t,i)=>{i.d(t,{H:()=>m,V:()=>g});var r=i(9496),s=i(3016),n=i(847),o=i(5255),a=i(6894),c=i(3401),l=i(6897),h=i(6713),u=i(4321),d=i(2509),p=i(1742),m=(e=>(e[e.Branches=1]="Branches",e[e.Tags=2]="Tags",e[e.WorkingTree=4]="WorkingTree",e[e.HEAD=8]="HEAD",e[e.BranchesAndTags=3]="BranchesAndTags",e))(m||{});async function g(e,t,i,m={}){const g=r.window.createQuickPick();g.ignoreFocusOut=(0,d.hE)(),g.title=t,g.placeholder=null!=m.allowEnteringRefs?`${i}${o.NE.Space.repeat(3)}(or enter a reference using #)`:i,g.matchOnDescription=!0;const f=[];let w;null!=m?.keys&&0!==m.keys.length&&null!==m?.onDidPressKey&&(w=a.W.instance.keyboard.createScope(Object.fromEntries(m.keys.map((e=>[e,{onDidPressKey:e=>{0!==g.activeItems.length&&m.onDidPressKey(e,g)}}])))),w.start(),f.push(w));const v=new r.CancellationTokenSource;let y,b=async function(e,{picked:t,filter:i,include:r,sort:o}){r=r??3;const c=await(0,n.B$)(a.W.instance.git.getRepository(e),r?["branches","tags"]:r?["branches"]:r?["tags"]:[],{buttons:[s.Nv],filter:i,picked:t,sort:o??{branches:{current:!1},tags:{}}});if(t){const e=c.findIndex((e=>e.ref===t));-1!==e&&c.unshift(...c.splice(e,1))}8&r&&c.unshift((0,p.RP)("HEAD",e,void 0,{icon:!0}));4&r&&c.unshift((0,p.RP)("",e,void 0,{icon:!0}));return c}(e,m);m.autoPick&&(b=b.then((e=>(e.length<=1&&(y=e[0],v.cancel()),e)))),g.busy=!0,g.show();const C=(0,n.v$)(a.W.instance.git.getRepository(e),{buttons:[s.Nv],ranges:m?.allowEnteringRefs&&"boolean"!=typeof m.allowEnteringRefs?m.allowEnteringRefs.ranges:void 0});g.items=await b,g.busy=!1;try{let e=await new Promise((e=>{f.push(v.token.onCancellationRequested((()=>g.hide())),g.onDidHide((()=>e(void 0))),g.onDidAccept((()=>{0!==g.activeItems.length&&e(g.activeItems[0])})),g.onDidChangeValue((async e=>{m.allowEnteringRefs&&(await C(g,e)||(g.items=await b)),null!=w&&(0!==e.length?await w.pause(["left","right"]):await w.resume())})),g.onDidTriggerItemButton((({button:e,item:{item:t}})=>{e===s.Nv&&((0,u.UR)(t)?(0,c.ay)(t,{select:!0,expand:!0}):(0,u.gA)(t)?(0,h.ay)(t,{select:!0,expand:!0}):(0,u.FT)(t)&&(0,l.Fw)(t,{pin:!1,preserveFocus:!0}))})))}));if(null==e&&null!=y&&(e=y),null==e)return;return e.item}finally{g.dispose(),f.forEach((e=>{e.dispose()}))}}},5009:(e,t,i)=>{i.d(t,{az:()=>OpenRemoteResourceCommandQuickPickItem,cY:()=>p,eO:()=>CopyRemoteResourceCommandQuickPickItem});var r=i(9496),s=i(3016),n=i(5255),o=i(6894),a=i(5367),c=i(3050),l=i(6503),h=i(7469),u=i(2509),d=i(9729);class ConfigureCustomRemoteProviderCommandQuickPickItem extends d.$w{constructor(){super({label:"See how to configure a custom remote provider..."})}async execute(){await r.env.openExternal(r.Uri.parse("https://help.gitkraken.com/gitlens/gitlens-settings/#remote-provider-integration-settings"))}}class CopyOrOpenRemoteCommandQuickPickItem extends d.$w{constructor(e,t,i,r){super({label:`$(repo) ${e.provider.path}`,description:e.name,buttons:r}),this.remote=e,this.resource=t,this.clipboard=i}async execute(){let e=this.resource;if(e.type===l.J.Comparison)(0,a.Lo)(e.base)===this.remote.name&&(e={...e,base:(0,a.S3)(e.base)}),(0,a.Lo)(e.compare)===this.remote.name&&(e={...e,compare:(0,a.S3)(e.compare)});else if(e.type===l.J.CreatePullRequest){let t=e.base.branch;if(null==t&&(t=await o.W.instance.git.getDefaultBranchName(this.remote.repoPath,this.remote.name),null==t&&this.remote.hasRichIntegration())){const e=await(this.remote.provider.getDefaultBranch?.());t=e?.name}e={...e,base:{branch:t,remote:{path:this.remote.path,url:this.remote.url}}}}else if(e.type===l.J.File&&null!=e.branchOrTag&&("bitbucket"===this.remote.provider.id||"bitbucket-server"===this.remote.provider.id)){const{branchOrTag:t}=e,[i,r]=await Promise.allSettled([o.W.instance.git.getBranches(this.remote.repoPath,{filter:e=>e.name===t||e.getNameWithoutRemote()===t}),o.W.instance.git.getTags(this.remote.repoPath,{filter:e=>e.name===t})]),s=(0,h.Sb)(i)?.values[0]?.sha??(0,h.Sb)(r)?.values[0]?.sha;s&&(e={...e,type:l.J.Revision,sha:s})}await(this.clipboard?this.remote.provider.copy(e):this.remote.provider.open(e))}setAsDefault(){return this.remote.setAsDefault(!0)}}class CopyRemoteResourceCommandQuickPickItem extends d.$w{constructor(e,t){const i=c.ss.getHighlanderProviders(e),r={resource:t,remotes:e,clipboard:!0};super(`$(copy) Copy Link to ${(0,l.C)(t)} for ${i?.length?i[0].name:"Remote"}${1===i?.length?"":n.NE.Ellipsis}`,n.Gh.OpenOnRemote,[r])}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage("URL copied to the clipboard")}}class OpenRemoteResourceCommandQuickPickItem extends d.$w{constructor(e,t){const i=c.ss.getHighlanderProviders(e),r={resource:t,remotes:e,clipboard:!1};super(`$(link-external) Open ${(0,l.C)(t)} on ${1===i?.length?i[0].name:`${i?.length?i[0].name:"Remote"}${n.NE.Ellipsis}`}`,n.Gh.OpenOnRemote,[r])}}async function p(e,t,i,n,o){const{autoPick:a,clipboard:c,setDefault:l}={autoPick:!1,clipboard:!1,setDefault:!0,...o};let h;if(0===n.length)h=[new ConfigureCustomRemoteProviderCommandQuickPickItem],t="No auto-detected or configured remote providers found";else{if("default"===a&&n.length>1){const e=n.find((e=>e.default));null!=e&&(n=[e])}h=n.map((e=>new CopyOrOpenRemoteCommandQuickPickItem(e,i,c,l?[s.ip]:void 0)))}if(a&&1===n.length)return h[0];const d=r.window.createQuickPick();d.ignoreFocusOut=(0,u.hE)();const p=[];try{const i=await new Promise((i=>{p.push(d.onDidHide((()=>i(void 0))),d.onDidAccept((()=>{0!==d.activeItems.length&&i(d.activeItems[0])})),d.onDidTriggerItemButton((async e=>{e.button===s.ip&&e.item instanceof CopyOrOpenRemoteCommandQuickPickItem&&(await e.item.setAsDefault(),i(e.item))}))),d.title=e,d.placeholder=t,d.matchOnDetail=!0,d.items=h,d.show()}));if(null==i)return;return i}finally{d.dispose(),p.forEach((e=>{e.dispose()}))}}},635:(e,t,i)=>{i.d(t,{E2:()=>d,hM:()=>h,rf:()=>p,vJ:()=>u});var r=i(9496),s=i(6894),n=i(2800),o=i(3105),a=i(2509),c=i(9729),l=i(1742);async function h(e,t,i,r,n){let o=s.W.instance.git.getBestRepository(e,t);if(null!=o&&null!=n?.filter&&(await n.filter(o)||(o=void 0)),null!=o)return o;const a=await d(i,r,n);if(!(a instanceof c.$w))return a?.item;await a.execute()}async function u(e,t,i,r){let n;if(n=null==i?s.W.instance.git.highlander:await s.W.instance.git.getOrOpenRepository(i),null!=n&&null!=r?.filter&&(await r.filter(n)||(n=void 0)),null!=n)return n;const o=await d(e,t,r);if(!(o instanceof c.$w))return o?.item;await o.execute()}async function d(e,t="Choose a repository",i){let c;if(null==i||Array.isArray(i)||null!=i.filter||(i=void 0),null==i||Array.isArray(i))c=await Promise.all([...(0,o.UI)(i??s.W.instance.git.openRepositories,(e=>(0,l.FO)(e,void 0,{branch:!0,status:!0})))]);else{const{filter:e}=i;c=await(0,n.sj)(s.W.instance.git.openRepositories,(async t=>await e(t)?(0,l.FO)(t,void 0,{branch:!0,status:!0}):void 0))}if(0===c.length)return;const h=r.window.createQuickPick();h.ignoreFocusOut=(0,a.hE)();const u=[];try{const i=await new Promise((i=>{u.push(h.onDidHide((()=>i(void 0))),h.onDidAccept((()=>{0!==h.activeItems.length&&i(h.activeItems[0])}))),h.title=e,h.placeholder=t,h.matchOnDescription=!0,h.matchOnDetail=!0,h.items=c,h.show()}));if(null==i)return;return i}finally{h.dispose(),u.forEach((e=>{e.dispose()}))}}async function p(e,t="Choose a repository",i){let c;if(null==i||Array.isArray(i)||null!=i.filter||(i=void 0),null==i||Array.isArray(i))c=await Promise.all([...(0,o.UI)(i??s.W.instance.git.openRepositories,(e=>(0,l.FO)(e,void 0,{branch:!0,status:!0})))]);else{const{filter:e}=i;c=await(0,n.sj)(s.W.instance.git.openRepositories,(async t=>await e(t)?(0,l.FO)(t,void 0,{branch:!0,status:!0}):void 0))}if(0===c.length)return[];const h=r.window.createQuickPick();h.ignoreFocusOut=(0,a.hE)();const u=[];try{const i=await new Promise((i=>{u.push(h.onDidHide((()=>i(void 0))),h.onDidAccept((()=>i(h.selectedItems)))),h.title=e,h.placeholder=t,h.matchOnDescription=!0,h.matchOnDetail=!0,h.items=c,h.canSelectMany=!0,h.selectedItems=c,h.show()}));return i??[]}finally{h.dispose(),u.forEach((e=>{e.dispose()}))}}},2133:(e,t,i)=>{i.d(t,{YW:()=>l,x8:()=>Repositories});var r=i(429),s=i(5255),n=i(7462),o=i(3700),a=i(1526);const c=47;function l(e){const{path:t}=h(e);return t}function h(e){let t;switch(e.scheme.toLowerCase()){case s.sN.File:return t=(0,o.AH)(e.fsPath),{path:t,ignoreCase:!r.IJ};case s.sN.Git:return t=e.path,t=t.charCodeAt(t.length-1)===c?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!r.IJ};case s.sN.GitLens:{t=e.path;const i=(0,n.uj)(e.authority);return null==i.uncPath||t.startsWith(i.uncPath)||(t=`${i.uncPath}${e.path}`),t=t.charCodeAt(t.length-1)===c?t.slice(1,-1):t.startsWith("//")?t:t.slice(1),{path:t,ignoreCase:!r.IJ}}case s.sN.Virtual:case s.sN.GitHub:{t=e.path,t=t.charCodeAt(t.length-1)===c?t.slice(1,-1):t.slice(1);const i=e.authority?.split("+",1)[0];return{path:i?`${i}/${t}`:t,ignoreCase:!1}}case s.sN.Vsls:case s.sN.VslsScc:return t=(0,o.IC)(e.path),t=t.charCodeAt(t.length-1)===c?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!1};case s.sN.PRs:{t=e.path,t=t.charCodeAt(t.length-1)===c?t.slice(1,-1):t.slice(1);const i=e.authority?.split("+",1)[0];return i===s.sN.GitHub?{path:i?`${i}/${t}`:t,ignoreCase:!1}:{path:t,ignoreCase:!r.IJ}}default:return t=e.path,t=t.charCodeAt(t.length-1)===c?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!1}}}class Repositories{_trie;_count=0;constructor(){this._trie=new a.QF(h)}get count(){return this._count}add(e){const t=this._trie.set(e.uri,e);return t&&this._count++,t}clear(){this._count=0,this._trie.clear()}forEach(e,t){for(const i of this._trie.getDescendants())e.call(t,i)}get(e){return this._trie.get(e)}getClosest(e){return this._trie.getClosest(e)}has(e){return this._trie.has(e)}remove(e,t=!0){const i=this._trie.delete(e,t);return i&&this._count--,i}values(){return this._trie.getDescendants()}}},2800:(e,t,i)=>{i.d(t,{DZ:()=>n,GI:()=>d,Mo:()=>p,Qy:()=>h,XI:()=>l,h8:()=>g,jV:()=>u,qr:()=>a,sj:()=>o,uw:()=>f,vM:()=>c,zx:()=>s});var r=i(3105);function s(e){return null==e?void 0:Array.isArray(e)?e:[e]}function n(e,t){let i=0;return e.reduce(((e,r)=>{const s=t(r,i++);return null!=s&&e.push(s),e}),[])}async function o(e,t){const i=[];for(const r of e){const e=await t(r);null!=e&&i.push(e)}return i}function a(e,t){let i=e.length;for(;i--;)if(t(e[i],i,e))return i;return-1}function c(e,t){return e.reduce(((e,i)=>{const r=t(i),s=e[r];return void 0===s?e[r]=[i]:s.push(i),e}),Object.create(null))}function l(e,t){return e.reduce(((e,i)=>{const r=t(i),s=e.get(r);return void 0===s?e.set(r,[i]):s.push(i),e}),new Map)}function h(e,t,i){return e.reduce(((e,r)=>{const s=i(r);if(null!=s){const i=t(r),n=e.get(i);void 0===n?e.set(i,[s]):n.push(s)}return e}),new Map)}function u(e,t){const i=[],r=e.length;e:for(const s of e[0]){let n=r-1;for(;n--;)if(!e[n+1].some((e=>t(e,s))))break e;i.some((e=>t(e,s)))||i.push(s)}return i}function d(e){return"string"==typeof e[0]}function p(e,t,i,r=!1,s){const n={name:"",relativePath:"",children:new Map,descendants:[]};let o=e.reduce(((e,r)=>{let s=e,n="";for(const e of t(r)){n=i(n,e),void 0===s.children&&(s.children=new Map);let t=s.children.get(e);void 0===t&&(t={name:e,relativePath:n,parent:s,children:void 0,descendants:void 0},s.children.set(e,t)),void 0===s.descendants&&(s.descendants=[]),s.descendants.push(r),s=t}return s.value=r,e}),n);return r&&(o=m(o,i,!0,s)),o}function m(e,t,i=!0,r){if(void 0===e.children)return e;const s=[...e.children.values()];for(const e of s)m(e,t,!1,r);if(!i&&1===s.length){const i=s[0];(void 0===i.value||r?.(i.value))&&(e.name=t(e.name,i.name),e.relativePath=i.relativePath,e.children=i.children,e.descendants=i.descendants,e.value=i.value)}return e}function g(e,t){return(0,r.v_)(new Set(e),t)}function f(e,t,i){return[...e.reduce(((e,r)=>{const s=t(r),n=e.get(s);if(void 0===n)e.set(s,r);else{const t=i(n,r);void 0!==t&&e.set(s,t)}return e}),new Map).values()]}},2226:(e,t,i)=>{i.d(t,{IN:()=>l,T0:()=>a,Zo:()=>o,io:()=>c});var r=i(9496),s=i(3105),n=i(7469);class TimedCancellationSource{cancellation=new r.CancellationTokenSource;timer;constructor(e){this.timer=setTimeout((()=>this.cancellation.cancel()),e)}dispose(){clearTimeout(this.timer),this.cancellation.dispose()}cancel(){clearTimeout(this.timer),this.cancellation.cancel()}get token(){return this.cancellation.token}}function o(e,t,i,r){if(!(0,n.tI)(e))return Promise.resolve({value:e,paused:!1});if(null==t&&null==i)return e.then((e=>({value:e,paused:!1})));let s,o;const a=Promise.race([e.then((e=>(s?.dispose(),o?.dispose(),t?.isCancellationRequested?{value:Promise.resolve(e),paused:!0,reason:"cancelled"}:{value:e,paused:!1}))),new Promise((r=>{const n=t=>{s?.dispose(),o?.dispose(),r({value:e,paused:!0,reason:t})};if(s=t?.onCancellationRequested((()=>n("cancelled"))),null!=i)if("number"==typeof i){const e=setTimeout((()=>n("timedout")),i);o={dispose:()=>clearTimeout(e)}}else o=i.onCancellationRequested((()=>n("timedout")))}))]);return null==r?a:a.then((e=>(e.paused&&setTimeout((()=>r(e)),0),e)))}async function a(e,t,i,r,n){if(0===e.size)return e;let a;null!=r&&"number"==typeof r&&(a=new TimedCancellationSource(r),r=a.token);const c=await Promise.all((0,s.UI)(e,(([e,s])=>o(s.catch((e=>!t&&e instanceof Error?e:void 0)),i,r).then((t=>[e,t])))));if(a?.dispose(),null!=n&&c.some((([,e])=>e.paused))){async function l(){const e=new Map;for(const[t,i]of c)e.set(t,{value:i.paused?await i.value:i.value,paused:!1});return e}const h=c.some((([,e])=>e.paused&&"cancelled"===e.reason));n({value:l(),paused:!0,reason:h?"cancelled":"timedout"})}return new Map(c)}async function c(e,t,i,r){if(0===e.size)return e;let n;null!=i&&"number"==typeof i&&(n=new TimedCancellationSource(i),i=n.token);const a=await Promise.all((0,s.UI)(e,(([e,[r,...s]])=>null==r?[e,[void 0,...s]]:o(r.catch((()=>{})),t,i).then((t=>[e,[t,...s]])))));if(n?.dispose(),null!=r&&a.some((([,[e]])=>e?.paused??!1))){async function c(){const e=new Map;for(const[t,[i,...r]]of a)e.set(t,[{value:i?.paused?await i.value:i?.value,paused:!1},...r]);return e}const l=a.some((([,[e]])=>e?.paused&&"cancelled"===e.reason));r({value:c(),paused:!0,reason:l?"cancelled":"timedout"})}return new Map(a)}async function l(e,t,i,r){let s;null!=i&&"number"==typeof i&&(s=new TimedCancellationSource(i),i=s.token);const n=e.then((e=>null==e?e:c(e,t,i,r)));n.then((()=>s?.dispose()));const a=await o(e,t,i);return a.paused?{value:n,paused:a.paused,reason:a.reason}:{value:await n,paused:!1}}},9529:(e,t,i)=>{i.d(t,{$$:()=>u,P0:()=>g,SI:()=>p,WD:()=>c,Zv:()=>v,_N:()=>d,b2:()=>y,dO:()=>w,fA:()=>m,j$:()=>f,vg:()=>h,xR:()=>l});var r=i(9496),s=i(5255),n=i(6894),o=i(9701);const a=[];function c(){return e=>{a.push(e)}}function l(e,t,i){return r.commands.registerCommand(e,(function(...i){n.W.instance.telemetry.sendEvent("command",{command:e}),t.call(this,...i)}),i)}function h(e,t,i){return r.commands.registerCommand(e,(function(...i){n.W.instance.telemetry.sendEvent("command",{command:e,webview:(0,o.s4)(i[0])?i[0].webview:"<missing>"}),t.call(this,...i)}),i)}function u(e){return a.map((t=>new t(e)))}function d(e){return e}function p(e,t){return r.commands.executeCommand(`${s.Gh.ActionPrefix}${e}`,{...t,type:e})}function m(e,t,...i){return{command:e,title:t,arguments:i}}function g(e,...t){return r.commands.executeCommand(e,...t)}function f(e,t,...i){return{command:e,title:t,arguments:i}}function w(e,...t){return"setContext"!=e&&"vscode.executeDocumentSymbolProvider"!==e&&"vscode.diff"!==e&&"vscode.open"!==e&&n.W.instance.telemetry.sendEvent("command/core",{command:e}),r.commands.executeCommand(e,...t)}function v(e,...t){return n.W.instance.telemetry.sendEvent("command/core",{command:e}),r.commands.executeCommand(e,...t)}function y(e,t,i){return r.commands.executeCommand(e,t,i)}},4298:(e,t,i)=>{i.d(t,{n:()=>r});class Comparer{}new class TextEditorComparer extends Comparer{equals(e,t,i={usePosition:!1}){return e===t||null!=e&&null!=t&&((!i.usePosition||e.viewColumn===t.viewColumn)&&e.document===t.document)}};const r=new class UriComparer extends Comparer{equals(e,t,i={exact:!1}){return e===t||null!=e&&null!=t&&(i.exact?e.toString()===t.toString():e.scheme===t.scheme&&e.fsPath===t.fsPath)}}},5148:(e,t,i)=>{i.d(t,{D:()=>o,V:()=>Configuration});var r=i(9496),s=i(5255),n=i(9967);class Configuration{static configure(e){e.subscriptions.push(r.workspace.onDidChangeConfiguration(o.onConfigurationChanged,o))}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeAny=new r.EventEmitter;get onDidChangeAny(){return this._onDidChangeAny.event}onConfigurationChanged(e){this._onDidChangeAny.fire(e),e.affectsConfiguration(s.m1)&&(null!=this._overrides?.onDidChange&&(e=this._overrides.onDidChange(e)),this._onDidChange.fire(e))}_overrides;applyOverrides(e){this._overrides=e}clearOverrides(){null!=this._overrides&&(this._overrides.get=void 0,this._overrides.getAll=void 0,queueMicrotask((()=>this._overrides=void 0)))}get(e,t,i,n){const o=void 0===i?r.workspace.getConfiguration(s.m1,t).get(e):r.workspace.getConfiguration(s.m1,t).get(e,i);return n||null==this._overrides?.get?o:this._overrides.get(e,o)}getAll(e){const t=r.workspace.getConfiguration().get(s.m1);return e||null==this._overrides?.getAll?t:this._overrides.getAll(t)}getAny(e,t,i){return void 0===i?r.workspace.getConfiguration(void 0,t).get(e):r.workspace.getConfiguration(void 0,t).get(e,i)}changed(e,t,i){return null==e||(Array.isArray(t)?t.some((t=>e.affectsConfiguration(`${s.m1}.${t}`,i))):e.affectsConfiguration(`${s.m1}.${t}`,i))}changedAny(e,t,i){return null==e||(Array.isArray(t)?t.some((t=>e.affectsConfiguration(t,i))):e.affectsConfiguration(t,i))}inspect(e,t){return r.workspace.getConfiguration(s.m1,t).inspect(void 0===e?s.m1:e)}inspectAny(e,t){return r.workspace.getConfiguration(void 0,t).inspect(e)}isUnset(e,t){const i=this.inspect(e,t);return void 0===i.workspaceFolderValue&&(void 0===i.workspaceValue&&void 0===i.globalValue)}async migrate(e,t,i){const s=this.inspect(e);if(void 0===s)return!1;let n=!1;return void 0!==s.globalValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(s.globalValue):s.globalValue,r.ConfigurationTarget.Global),n=!0),void 0!==s.workspaceValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceValue):s.workspaceValue,r.ConfigurationTarget.Workspace),n=!0),void 0!==s.workspaceFolderValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceFolderValue):s.workspaceFolderValue,r.ConfigurationTarget.WorkspaceFolder),n=!0),n||void 0===i.fallbackValue||(await this.update(t,i.fallbackValue,r.ConfigurationTarget.Global),n=!0),n}async migrateIfMissing(e,t,i){const s=this.inspect(e);if(void 0===s)return;const n=this.inspect(t);void 0!==s.globalValue&&void 0===n?.globalValue&&await this.update(t,null!=i.migrationFn?i.migrationFn(s.globalValue):s.globalValue,r.ConfigurationTarget.Global),void 0!==s.workspaceValue&&void 0===n?.workspaceValue&&await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceValue):s.workspaceValue,r.ConfigurationTarget.Workspace),void 0!==s.workspaceFolderValue&&void 0===n?.workspaceFolderValue&&await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceFolderValue):s.workspaceFolderValue,r.ConfigurationTarget.WorkspaceFolder)}matches(e,t,i){return e===t}name(e){return e}update(e,t,i){return r.workspace.getConfiguration(s.m1).update(e,t,i)}updateAny(e,t,i,s){return r.workspace.getConfiguration(void 0,i===r.ConfigurationTarget.Global?void 0:s).update(e,t,i)}updateEffective(e,t){const i=this.inspect(e);return void 0!==i.workspaceFolderValue?t===i.workspaceFolderValue?Promise.resolve(void 0):this.update(e,t,r.ConfigurationTarget.WorkspaceFolder):void 0!==i.workspaceValue?t===i.workspaceValue?Promise.resolve(void 0):this.update(e,t,r.ConfigurationTarget.Workspace):i.globalValue===t||void 0===i.globalValue&&t===i.defaultValue?Promise.resolve(void 0):this.update(e,(0,n.wy)(t,i.defaultValue)?void 0:t,r.ConfigurationTarget.Global)}}const o=new Configuration},2061:(e,t,i)=>{i.d(t,{fw:()=>c,v:()=>l,ve:()=>a});var r=i(9496),s=i(9529);const n=new Map,o=new r.EventEmitter,a=o.event;function c(e,t){return n.get(e)??t}async function l(e,t){n.get(e)!==t&&(n.set(e,t),await(0,s.dO)("setContext",e,t),o.fire(e))}},7512:(e,t,i)=>{i.d(t,{Cz:()=>d,IH:()=>p,Zh:()=>m,hM:()=>f,p6:()=>g});const r=/(?<literal>\[.*?\])|(?<year>YYYY|YY)|(?<month>M{1,4})|(?<day>Do|DD?)|(?<weekday>d{2,4})|(?<hour>HH?|hh?)|(?<minute>mm?)|(?<second>ss?)|(?<fractionalSecond>SSS)|(?<dayPeriod>A|a)|(?<timeZoneName>ZZ?)/g,s=/(?<dateStyle>full|long|medium|short)(?:\+(?<timeStyle>full|long|medium|short))?/,n=[["year",629856e5,31536e6,"yr"],["month",2628e6,2628e6,"mo"],["week",6048e5,6048e5,"wk"],["day",864e5,864e5,"d"],["hour",36e5,36e5,"h"],["minute",6e4,6e4,"m"],["second",1e3,1e3,"s"]];let o;const a=new Map;let c,l,h;const u=new Map;function d(e){c="string"==typeof e?"system"===e||0===e.trim().length?void 0:[e]:e??void 0,l=void 0,h=void 0,a.clear(),u.clear(),o=void 0}function p(e,t){const i=new Date(e.getTime());for(const[e,r]of Object.entries(t))if(r)switch(e){case"years":i.setFullYear(i.getFullYear()+r);break;case"months":i.setMonth(i.getMonth()+r);break;case"days":i.setDate(i.getDate()+r);break;case"hours":i.setHours(i.getHours()+r);break;case"minutes":i.setMinutes(i.getMinutes()+r);break;case"seconds":i.setSeconds(i.getSeconds()+r)}return i}function m(e,t){const i=("number"==typeof e?e:e.getTime())-(new Date).getTime();for(const[e,r,s,a]of n){const n=Math.abs(i);if(n>=r||1e3===r){if(t){if(null==o&&(null!=h?o=h.resolvedOptions().locale:null!=l?o=l.resolvedOptions().locale:(h=new Intl.RelativeTimeFormat(c,{localeMatcher:"best fit",numeric:"always",style:"narrow"}),o=h.resolvedOptions().locale)),"en"===o||o?.startsWith("en-")){return`${Math.round(n/s)}${a}`}return null==h&&(h=new Intl.RelativeTimeFormat(c,{localeMatcher:"best fit",numeric:"always",style:"narrow"})),h.format(Math.round(i/s),e)}return null==l&&(l=new Intl.RelativeTimeFormat(c,{localeMatcher:"best fit",numeric:"auto",style:"long"})),l.format(Math.round(i/s),e)}}return""}function g(e,t,i,n=!0){const o=`${i??""}:${t=t??void 0}`;let l=a.get(o);if(null==l){const e=function(e){if(null==e)return{localeMatcher:"best fit",dateStyle:"full",timeStyle:"short"};const t=s.exec(e);if(null!=t?.groups){const{dateStyle:e,timeStyle:i}=t.groups;return{localeMatcher:"best fit",dateStyle:e||"full",timeStyle:i||void 0}}const i={localeMatcher:"best fit"};for(const{groups:t}of e.matchAll(r))if(null!=t)for(const e in t){const r=t[e];if(null!=r)switch(e){case"year":i.year=4===r.length?"numeric":"2-digit";break;case"month":switch(r.length){case 4:i.month="long";break;case 3:i.month="short";break;case 2:i.month="2-digit";break;case 1:i.month="numeric"}break;case"day":i.day="DD"===r?"2-digit":"numeric";break;case"weekday":switch(r.length){case 4:i.weekday="long";break;case 3:i.weekday="short";break;case 2:i.weekday="narrow"}break;case"hour":i.hour=2===r.length?"2-digit":"numeric",i.hour12="hh"===r||"h"===r;break;case"minute":i.minute=2===r.length?"2-digit":"numeric";break;case"second":i.second=2===r.length?"2-digit":"numeric";break;case"fractionalSecond":i.fractionalSecondDigits=3;break;case"dayPeriod":i.dayPeriod="narrow",i.hour12=!0,i.hourCycle="h12";break;case"timeZoneName":i.timeZoneName=2===r.length?"long":"short"}}return i}(t);let h;h=null==i?c:"system"===i?void 0:[i],l=new Intl.DateTimeFormat(h,e),n&&a.set(o,l)}if(null==t||s.test(t))return l.format(e);function h(e){const t=`${i??""}:time:${e}`;let r=a.get(t);if(null==r){const s={localeMatcher:"best fit",timeStyle:e};let o;o=null==i?c:"system"===i?void 0:[i],r=new Intl.DateTimeFormat(o,s),n&&a.set(t,r)}return r}const u=l.formatToParts(e);return t.replace(r,((t,i,r,s,n,o,a,c,l,d,p,m,g,f,w)=>{if(null!=i)return i.substring(1,i.length-1);for(const t in w){const i=w[t];if(null==i)continue;const r=u.find((e=>e.type===t));if("Do"===i&&"day"===r?.type)return v(Number(r.value));if("a"===i&&"dayPeriod"===r?.type){const t=h("short").formatToParts(e).find((e=>"dayPeriod"===e.type));return` ${(t??r)?.value??""}`}return r?.value??""}return""}))}function f(e,t,i){const r=("number"==typeof t?t:t.getTime())-("number"==typeof e?e:e.getTime());switch(i){case"days":return Math.floor(r/864e5);case"hours":return Math.floor(r/36e5);case"minutes":return Math.floor(r/6e4);case"seconds":return Math.floor(r/1e3);default:return r}}const w=["th","st","nd","rd"];function v(e){const t=e%100;return`${e}${w[(t-20)%10]??w[t]??w[0]}`}},5432:(e,t,i)=>{i.d(t,{H:()=>n});var r=i(7469),s=i(9610);function n(e){return(t,i,n)=>{let o;if("function"==typeof n.value?o=n.value:"function"==typeof n.get&&(o=n.get),null==o)throw new Error("Not supported");const a=`$gate$${i}`;n.value=function(...t){const i=(0,s.S)(a,e,...t);Object.prototype.hasOwnProperty.call(this,i)||Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let n=this[i];if(void 0===n){let e;try{if(e=o.apply(this,t),null==e||!(0,r.tI)(e))return e;this[i]=n=e.then((e=>(this[i]=void 0,e))).catch((e=>{throw this[i]=void 0,e}))}catch(e){throw this[i]=void 0,e}}return n}}}},1219:(e,t,i)=>{i.d(t,{fF:()=>p,cM:()=>m,hJ:()=>d});var r=i(9376),s=i(9796),n=i(4336);const o=500;var a=i(6004),c=i(7469),l=i(3620);const h="",u=Symbol("logInstanceNameFn");function d(e){return t=>{t[u]=e}}function p(e){return m(e,!0)}function m(e,t=!1){let i,d,p,m,g=0,f=!1,w=!1,v=!0;null!=e&&({args:i,enter:d,exit:p,prefix:m,logThreshold:g=0,scoped:f=!0,singleLine:w=!1,timed:v=!0}=e),g>0&&(w=!0,v=!0),v&&(f=!0);const y=n.Yd.isDebugging,b=t?n.Yd.debug:n.Yd.log,C=y?"debug":"info";return(e,t,A)=>{let S,P;if("function"==typeof A.value?(S=A.value,P="value"):"function"==typeof A.get&&(S=A.get,P="get"),null==S||null==P)throw new Error("Not supported");const k=!1!==i?(0,s.ZS)(S):[];A[P]=function(...e){if(!y&&!n.Yd.enabled(C))return S.apply(this,e);const s=(0,a.OD)(),A=null!=this?this.constructor?.[u]?.(this,(0,n.q4)(this))??(0,n.q4)(this):void 0;let P,D=A?f?`[${s.toString(16).padStart(5)}] ${A}.${t}`:`${A}.${t}`:t;null!=m&&(D=m({id:s,instance:this,instanceName:A??h,name:t,prefix:D},...e)),f&&(P={scopeId:s,prefix:D},(0,a.DS)(s,P));const R=null!=d?d(...e):h;let _;if(!1===i||0===e.length)_=h,w||b.call(n.Yd,`${D}${R}`);else{let t;_="";let r,s,o,a=-1;for(o of e){if(r=k[++a],t=i?.[a],null!=t){if("boolean"==typeof t)continue;if(_.length>0&&(_+=", "),"string"==typeof t){_+=t;continue}s=String(t(o))}else _.length>0&&(_+=", "),s=n.Yd.toLoggable(o);_+=r?`${r}=${s}`:s}w||b.call(n.Yd,_?`${D}${R}(${_})`:`${D}${R}`)}if(w||v||null!=p){const t=v?(0,r.a)():void 0,i=e=>{const i=void 0!==t?` [${(0,l.qk)(t)}ms]`:h;w?n.Yd.error(e,_?`${D}${R}(${_})`:`${D}${R}`,P?.exitDetails?`failed${P.exitDetails}${i}`:`failed${i}`):n.Yd.error(e,D,P?.exitDetails?`failed${P.exitDetails}${i}`:`failed${i}`),f&&(0,a.Fp)(s)};let u;try{u=S.apply(this,e)}catch(e){throw i(e),e}const d=e=>{let i,r,c,u;if(null!=t?(i=(0,l.qk)(t),i>o?(r=n.Yd.warn,c=` [*${i}ms] (slow)`):(r=b,c=` [${i}ms]`)):(c=h,r=b),null!=p)if("function"==typeof p)try{u=p(e)}catch(e){u=`@log.exit error: ${e}`}else!0===p&&(u=`returned ${n.Yd.toLoggable(e)}`);else P?.exitFailed?(u=P.exitFailed,r=n.Yd.error):u="completed";w?(0===g||i>g)&&r.call(n.Yd,_?`${D}${R}(${_}) ${u}${P?.exitDetails||h}${c}`:`${D}${R} ${u}${P?.exitDetails||h}${c}`):r.call(n.Yd,_?`${D}(${_}) ${u}${P?.exitDetails||h}${c}`:`${D} ${u}${P?.exitDetails||h}${c}`),f&&(0,a.Fp)(s)};return null!=u&&(0,c.tI)(u)?u.then(d,i):d(u),u}return S.apply(this,e)}}}},4488:(e,t,i)=>{i.d(t,{H:()=>s});var r=i(9610);function s(e){return(t,i,s)=>{let n,o;if("function"==typeof s.value)n=s.value,o="value";else{if("function"!=typeof s.get)throw new Error("Not supported");n=s.get,o="get"}if(null==n)throw new Error("Not supported");const a=`$memoize$${i}`;let c;s[o]=function(...t){const i=(0,r.S)(a,e,...t);return Object.prototype.hasOwnProperty.call(this,i)?(c=this[i],c):(c=n.apply(this,t),Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!1,value:c}),c)}}}},9610:(e,t,i)=>{i.d(t,{S:()=>u});var r=i(9496),s=i(6894),n=i(5367),o=i(6450),a=i(9502),c=i(7707);function l(e,t){return""===e||null==t||"object"!=typeof t?t:t instanceof Error?String(t):t instanceof r.Uri?"sha"in t&&t.sha?`${t.sha}:${t.toString()}`:t.toString():(0,n.BF)(t)||(0,o.f_)(t)||(0,a.YR)(t)||(0,c.FZ)(t)?t.toString():(0,s.N)(t)?"<container>":t}function h(...e){if(0===e.length)return"";if(1!==e.length)return JSON.stringify(e,l);const t=e[0];if(null==t)return"";switch(typeof t){case"string":return t;case"number":case"boolean":case"undefined":case"symbol":case"bigint":return String(t);default:return t instanceof Error?String(t):t instanceof r.Uri?"sha"in t&&"string"==typeof t.sha&&t.sha?`${t.sha}:${t.toString()}`:t.toString():(0,n.BF)(t)||(0,o.f_)(t)||(0,a.YR)(t)||(0,c.FZ)(t)?t.toString():(0,s.N)(t)?"<container>":JSON.stringify(t,l)}}function u(e,t,...i){if(0===i.length)return e;let r;if(null!=t)try{r=t(...i)}catch{r=h(...i)}else r=h(...i);return`${e}$${r}`}},8786:(e,t,i)=>{function r(e){if(null!=e)return encodeURI(e.replace(/%20/g," "))}i.d(t,{M:()=>r})},2185:(e,t,i)=>{i.d(t,{D$:()=>a,IH:()=>s,ue:()=>o});var r=i(9496);function s(e){return(t,i)=>{const r=e((e=>(r.dispose(),t.call(i,e))));return r}}const n=(e,t)=>t(e);function o(e,t=n){let i,r,s=!0;return{get pending(){return s},promise:new Promise(((n,o)=>{i=()=>{s=!1,i=void 0,o()},r=e((async e=>{try{await t(e,n,o),s=!1}catch(e){s=!1,o(e)}}))})).then((e=>(r.dispose(),e)),(e=>{throw r.dispose(),e})),cancel:()=>i?.()}}function a(e,t,i,s){const n=new WeakRef(i);let o;const a=e((e=>{const i=n.deref();null!=i?t.call(i,e):o.dispose()}));return o=null==s?a:r.Disposable.from(a,...s),o}},1774:(e,t,i)=>{i.d(t,{d:()=>n});var r=i(3700),s=i(3620);function n(e,t){const i=(0,r.M)(e);let n=(0,r.EZ)(i);if(null!=t?.truncateTo&&n.length>=t.truncateTo)return(0,s.ro)(n,t.truncateTo);if(t?.suffix){if(null!=t.truncateTo&&n.length+t.suffix.length>=t.truncateTo)return`${(0,s.ro)(n,t.truncateTo-t.suffix.length)}${t.suffix}`;n+=t.suffix}if(t?.fileOnly)return n;const o=(0,r.Fd)(i,t?.relativeTo);return o?(n=`/${n}`,null!=t?.truncateTo&&n.length+o.length>=t.truncateTo?`${(0,s.AO)(o,t.truncateTo-n.length)}${n}`:`${o}${n}`):n}},9796:(e,t,i)=>{function r(e,t){let i,r,s,n,o;function a(e){const i=e-(r??0);return null==r||i>=t||i<0}function c(){const e=Date.now();if(a(e))l();else{o=setTimeout(c,t-(e-(r??0)))}}function l(){return o=void 0,i?function(){const t=i,r=s;return i=s=void 0,n=e.apply(r,t),n}():(i=s=void 0,n)}function h(...e){const l=Date.now(),h=a(l);return i=e,s=this,r=l,h&&null==o?(o=setTimeout(c,t),n):(null==o&&(o=setTimeout(c,t)),n)}return h.cancel=function(){null!=o&&clearTimeout(o),i=r=s=o=void 0},h.flush=function(){return null!=o?l():n},h.pending=function(){return null!=o},h}i.d(t,{DH:()=>f,Ds:()=>r,IH:()=>g,NX:()=>v,ZS:()=>p,df:()=>w,is:()=>m});const s=",",n="",o="=",a="{",c="(",l=")",h=/\(([\s\S]*)\)/,u=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,d=/\s?=.*$/;function p(e){if("function"!=typeof e)throw new Error("Not supported");if(0===e.length)return[];let t=Function.prototype.toString.call(e);t=t.replace(u,n)||t,t=t.slice(0,t.indexOf(a));let i=t.indexOf(c),r=t.indexOf(l);i=i>=0?i+1:0,r=r>0?r:t.indexOf(o),t=t.slice(i,r),t=`(${t})`;const p=h.exec(t);return null!=p?p[1].split(s).map((e=>e.trim().replace(d,n))):[]}function m(e,t,i){return null==t?null!=e:"function"==typeof t?t(e):void 0===i?void 0!==e[t]:e[t]===i}function g(e){let t,i=!1;return function(...r){return i||(i=!0,t=e.apply(this,r),e=void 0),t}}function f(e,t){let i;const r={dispose:()=>{null!=i&&(clearInterval(i),i=void 0)}};return i=setInterval(e,t),r}async function w(e,t,i){for(const r of t)try{await e.apply(i,r)}catch{}}function v(e,t){return e>=t?e*e+e+t:e+t*t}},3105:(e,t,i)=>{function r(e,t){if(null==e)return 0;let i=0;for(const r of e)(null==t||t(r))&&i++;return i}function*s(e,t){if(void 0===t)for(const t of e)null!=t&&(yield t);else for(const i of e)t(i)&&(yield i)}function*n(e,t){for(const i of e){const e=t(i);null!=e&&(yield e)}}function o(e,t){for(const i of e)if(t(i))return i;return null}function a(e){return e[Symbol.iterator]().next().value}function*c(e,t){for(const i of e)yield*t(i)}function l(e,t){const i=e[Symbol.iterator]();let r=i.next();if(r.done)return"";let s=String(r.value);for(;r=i.next(),!r.done;)s+=`${t}${r.value}`;return s}function h(e){let t;for(t of e);return t}function*u(e,t){for(const i of e)yield t(i)}function d(e,t){let i=Number.POSITIVE_INFINITY;if(null==t)for(const t of e)t<i&&(i=t);else for(const r of e){const e=t(r);e<i&&(i=e)}return i}function p(e,t){for(const i of e)if(t(i))return!0;return!1}function m(e,t,i){const r=new Map;for(const s of e){const e=t(s),n=r.get(e);if(void 0===n)r.set(e,s);else{const t=i(n,s);void 0!==t&&r.set(e,t)}}return r.values()}i.d(t,{DZ:()=>n,G:()=>p,Ps:()=>a,QX:()=>r,UI:()=>u,VS:()=>c,VV:()=>d,Z$:()=>h,hX:()=>s,sE:()=>o,uw:()=>m,v_:()=>l})},6004:(e,t,i)=>{i.d(t,{DS:()=>h,Fp:()=>o,OD:()=>l,QR:()=>c,UH:()=>a,lH:()=>u});const r=2**30,s=new Map;let n=0;function o(e){s.delete(e)}function a(){return s.get(n)}function c(e,t){if(null!=t)return{scopeId:t.scopeId,prefix:`${t.prefix}${e}`};const i=l();return{scopeId:i,prefix:`[${String(i).padStart(5)}] ${e}`}}function l(){return n===r&&(n=0),++n}function h(e,t){s.set(e,t)}function u(e,t,i){null!=e&&(e.exitDetails=t,null!=i&&(e.exitFailed=i))}},4336:(e,t,i)=>{i.d(t,{Nu:()=>a,Yd:()=>s,q4:()=>o});const r="";const s=new class Logger2{output;provider;configure(e,t,i=!1){this.provider=e,this._isDebugging=i,this.logLevel=t}enabled(e){return this.level>=n(e)}_isDebugging=!1;get isDebugging(){return this._isDebugging}level=0;_logLevel="off";get logLevel(){return this._logLevel}set logLevel(e){this._logLevel=e,this.level=n(this._logLevel),"off"===e?(this.output?.dispose?.(),this.output=void 0):this.output=this.output??this.provider.createChannel(this.provider.name)}get timestamp(){return`[${(new Date).toISOString().replace(/T/," ").slice(0,-1)}]`}debug(e,...t){if(this.level<4&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??r}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??r,...t),null==this.output||this.level<4||this.output.appendLine(`${this.timestamp} ${i??r}${this.toLoggableParams(!0,t)}`)}error(e,t,...i){if(this.level<1&&!this.isDebugging)return;let s;if(s=null==t||"string"==typeof t?t:`${t.prefix} ${i.shift()??r}`,null==s){const t=e instanceof Error?e.stack:void 0;if(t){const e=/.*\s*?at\s(.+?)\s/.exec(t);null!=e&&(s=e[1])}}this.isDebugging&&(null!=e?console.error(this.timestamp,`[${this.provider.name}]`,s??r,...i,e):console.error(this.timestamp,`[${this.provider.name}]`,s??r,...i)),null==this.output||this.level<1||this.output.appendLine(`${this.timestamp} ${s??r}${this.toLoggableParams(!1,i)}${null!=e?`\n${String(e)}`:""}`)}log(e,...t){if(this.level<3&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??r}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??r,...t),null==this.output||this.level<3||this.output.appendLine(`${this.timestamp} ${i??r}${this.toLoggableParams(!1,t)}`)}warn(e,...t){if(this.level<2&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??r}`)),this.isDebugging&&console.warn(this.timestamp,`[${this.provider.name}]`,i??r,...t),null==this.output||this.level<2||this.output.appendLine(`${this.timestamp} ${i??r}${this.toLoggableParams(!1,t)}`)}showOutputChannel(e){this.output?.show?.(e)}toLoggable(e,t){if("object"!=typeof e)return String(e);if(Array.isArray(e))return`[${e.map((e=>this.toLoggable(e,t))).join(", ")}]`;const i=this.provider.toLoggable?.(e);if(null!=i)return i;try{return JSON.stringify(e,t)}catch{return"<error>"}}toLoggableParams(e,t){if(0===t.length||e&&this.level<4&&!this.isDebugging)return r;const i=t.map((e=>this.toLoggable(e))).join(", ");return 0!==i.length?` — ${i}`:r}};function n(e){switch(e){case"off":default:return 0;case"error":return 1;case"warn":return 2;case"info":return 3;case"debug":return 4}}function o(e){let t;if("function"==typeof e){if(null==e.prototype?.constructor)return e.name;t=e.prototype.constructor.name??r}else t=e.constructor?.name??r;const i=t.indexOf("_");return-1===i?t:t.substr(i+1)}const a={enabled:e=>s.enabled(e)||s.isDebugging,log:(e,t,i,...r)=>{switch(e){case"error":s.error("",t,i,...r);break;case"warn":s.warn(t,i,...r);break;case"info":s.log(t,i,...r);break;default:s.debug(t,i,...r)}}}},9967:(e,t,i)=>{function r(e,t){if(e===t)return!0;if(null==e||null==t)return!1;const i=typeof e;return(i!==typeof t||"string"!==i&&"number"!==i&&"boolean"!==i)&&JSON.stringify(e)===JSON.stringify(t)}function s(e,t){const i=t?.skipPaths?.length?t?.prefix?t.skipPaths.map((e=>`${t.prefix}.${e}`)):t.skipPaths:void 0,r=t?.skipNulls??!1,s=t?.stringify??!1;const n=Object.create(null);return function e(n,o,a){if(!i?.includes(o))if(Object(a)!==a)if(null==a){if(r)return;n[o]=s?"all"==s?JSON.stringify(a):a??null:a}else n[o]="string"==typeof a?a:s?"number"==typeof a||"boolean"==typeof a?a:JSON.stringify(a):a;else if(Array.isArray(a)){const i=a.length;if(0===i)return;if("join"===t?.arrays)n[o]=a.join(",");else for(let t=0;t<i;t++)e(n,`${o}[${t}]`,a[t])}else{const t=Object.entries(a);if(0===t.length)return;for(const[i,r]of t)e(n,o?`${o}.${i}`:i,r)}}(n,t?.prefix??"",e),n}function n(e,t,i){if(null==e&&(e=Object.create(null)),null==i||"boolean"==typeof i&&!i){const{[t]:i,...r}=e;e=r}else e[t]="object"==typeof i?{...i}:i;return e}i.d(t,{iC:()=>n,wy:()=>r,xH:()=>s})},5116:(e,t,i)=>{i.d(t,{X:()=>PageableResult});class PageableResult{constructor(e){this.fetch=e}cached;async*values(){if(null!=this.cached)for(const e of this.cached.values)yield e;let e=this.cached;for(;null==e||e.paging?.more;){e=await this.fetch(e?.paging),null==this.cached?this.cached=e:(this.cached.values.push(...e.values),this.cached.paging=e.paging);for(const t of e.values)yield t}}}},3700:(e,t,i)=>{i.d(t,{AH:()=>S,DZ:()=>r.extname,EZ:()=>r.basename,Fd:()=>k,Gf:()=>P,IC:()=>p,M:()=>w,Mh:()=>C,RQ:()=>r.join,SG:()=>y,UG:()=>v,XX:()=>r.dirname,YP:()=>b,tD:()=>g,tE:()=>A,uo:()=>D});var r=i(6470),s=i(9496),n=i(429),o=i(5255);const a=47,c=/(?<=^\/?)([A-Z])(?=:\/)/,l=/^([a-zA-Z][\w+.-]+):/,h=/\\/g,u=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/,d=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/;function p(e){if("string"==typeof e&&A(e)&&(e=s.Uri.parse(e)),"string"==typeof e)return m(e)?e:`/~0${(e=S(e)).charCodeAt(0)===a?e:`/${e}`}`;let t=e.fsPath;return m(t)?e:(t=S(t),e.with({path:`/~0${t.charCodeAt(0)===a?t:`/${t}`}`}))}function m(e){return u.test(e)}function g(e){return d.test(e)}function f(e,t,i,r){if(0===e.length||0===t.length)return 0;let s;(r??!n.IJ)&&(e=e.toLowerCase(),t=t.toLowerCase());let o=0;for(let r=0;r<e.length&&(s=e[r],s===t[r]);r++)s===i&&(o=r);return o}function w(e){if("string"==typeof e){if(!l.test(e))return S(e);e=s.Uri.parse(e,!0)}return S(e.scheme===o.sN.File?e.fsPath:e.path)}function v(e){return l.exec(e)?.[1]}function y(e,t){return"string"==typeof t&&(t=S(t)).charCodeAt(0)!==a&&(t=`/${t}`),"string"==typeof e&&(e=S(e)).charCodeAt(0)!==a&&(e=`/${e}`),"string"==typeof t?1===t.length||("string"==typeof e?e:e.path).startsWith(t.charCodeAt(t.length-1)===a?t:`${t}/`):"string"==typeof e?1===t.path.length||e.startsWith(t.path.charCodeAt(t.path.length-1)===a?t.path:`${t.path}/`):t.scheme===e.scheme&&t.authority===e.authority&&(1===t.path.length||e.path.startsWith(t.path.charCodeAt(t.path.length-1)===a?t.path:`${t.path}/`))}function b(e){return!A(e)&&(0,r.isAbsolute)(e)}function C(e){return"*"===(0,r.basename)(e)}function A(e){return l.test(e)}function S(e){return e?((e=e.replace(h,"/")).charCodeAt(e.length-1)===a&&(n.ED&&3===e.length&&":"===e[1]||(e=e.slice(0,-1))),n.ED&&(e=e.replace(c,(e=>e.toLowerCase()))),e):e}function P(e,t,i){e=l.test(e)?s.Uri.parse(e,!0).path:S(e);const r=f(`${t=l.test(t)?s.Uri.parse(t,!0).path:S(t)}/`,`${e}/`,"/",i);return r>0?t.substring(r+1):t}function k(e,t){const i=(0,r.dirname)(e);if(!i||"."===i||i===t)return"";if(!t)return i;const[s]=D(i,t);return s}function D(e,t,i=!1,n){if(e=w(e),t){let i;l.test(t)?(i=s.Uri.parse(t,!0),t=w(i)):t=S(t);const r=f(`${t}/`,`${e}/`,"/",n);r>0?(t=e.substring(0,r),e=e.substring(r+1)):e.charCodeAt(0)===a&&(e=e.slice(1)),null!=i&&(t=i.with({path:t}).toString())}else t=S(i?(0,r.dirname)(e):""),e=i?(0,r.basename)(e):e;return[e,t]}},7469:(e,t,i)=>{async function*r(e){const t=new Map(e.map(((e,t)=>[t,e.then((e=>({index:t,value:e,status:"fulfilled"})),(e=>({index:t,reason:e,status:"rejected"})))])));for(;t.size;){const e=await Promise.race(t.values());t.delete(e.index),yield e}}i.d(t,{HO:()=>s,PK:()=>PromiseCancelledError,PQ:()=>n,Sb:()=>a,ag:()=>l,rX:()=>r,tI:()=>c,xy:()=>o});class PromiseCancelledError extends Error{constructor(e,t){super(t),this.promise=e}}function s(e,t,i,r){return null==t&&null==i?e:new Promise(((s,n)=>{let o,a,c=!1;const l=t=>{o?.dispose(),a?.dispose(),c||(null!=r?.onDidCancel?r.onDidCancel(s,n,t):n(new PromiseCancelledError(e,r?.cancelMessage??("cancelled"===t?"CANCELLED":"TIMED OUT"))))};if(o=i?.onCancellationRequested((()=>l("cancelled"))),null!=t)if("number"==typeof t){const e=setTimeout((()=>l("timedout")),t);a={dispose:()=>clearTimeout(e)}}else a=t.onCancellationRequested((()=>l("timedout")));e.then((()=>{c=!0,o?.dispose(),a?.dispose(),s(e)}),(e=>{c=!0,o?.dispose(),a?.dispose(),n(e)}))}))}function n(){const e={pending:!0,promise:void 0,fulfill:void 0,cancel:void 0};return e.promise=new Promise(((t,i)=>{e.fulfill=function(i){e.pending=!1,t(i)},e.cancel=function(){e.pending=!1,i()}})),e}function o(e){return e?.pending?e.promise:void 0}function a(e,t=void 0){return"fulfilled"===e?.status?e.value:t}function c(e){return null!=e&&(e instanceof Promise||"function"==typeof e?.then)}function l(){return new Promise((e=>queueMicrotask(e)))}},7387:(e,t,i)=>{function r(e){if(null!=e)try{let t=function(e,t){if(t instanceof Date)return t.getTime();if(t instanceof Map||t instanceof Set)return[...t.entries()];if(t instanceof Function||t instanceof Error)return;if(t instanceof RegExp)return t.toString();const i=this[e];return i instanceof Date?i.getTime():t};return JSON.parse(JSON.stringify(e,t))}catch(e){throw e}}i.d(t,{q:()=>r})},6398:(e,t,i)=>{i.d(t,{k:()=>o,u:()=>Stopwatch});var r=i(9376),s=i(4336),n=i(6004);Symbol.dispose??=Symbol("Symbol.dispose"),Symbol.asyncDispose??=Symbol("Symbol.asyncDispose");class Stopwatch{logScope;logLevel;logProvider;_time;get startTime(){return this._time}_stopped=!1;constructor(e,t,...i){let o;if(this.logScope=null!=e&&"string"!=typeof e?e:(0,n.QR)(e??""),o="boolean"==typeof t?.log?t.log?{}:void 0:t?.log??{},this.logLevel=t?.logLevel??"info",this.logProvider=t?.provider??s.Nu,this._time=(0,r.a)(),null!=o){if(!this.logProvider.enabled(this.logLevel))return;i.length?this.logProvider.log(this.logLevel,this.logScope,`${o.message??""}${o.suffix??""}`,...i):this.logProvider.log(this.logLevel,this.logScope,`${o.message??""}${o.suffix??""}`)}}[Symbol.dispose](){this.stop()}elapsed(){const[e,t]=(0,r.a)(this._time);return 1e3*e+Math.floor(t/1e6)}log(e){this.logCore(e,!1)}restart(e){this.logCore(e,!0),this._time=(0,r.a)(),this._stopped=!1}stop(e){this._stopped||(this.restart(e),this._stopped=!0)}logCore(e,t){if(!this.logProvider.enabled(this.logLevel))return;if(!t)return void this.logProvider.log(this.logLevel,this.logScope,`${e?.message??""}${e?.suffix??""}`);const[i,s]=(0,r.a)(this._time),n=1e3*i+Math.floor(s/1e6),o=e?.message??"";this.logProvider.log(n>250?"warn":this.logLevel,this.logScope,`${o?`${o} `:""}[${n}ms]${e?.suffix??""}`)}}function o(e,t,...i){return(t?.provider??s.Nu).enabled(t?.logLevel??"info")?new Stopwatch(e,t,...i):void 0}},3620:(e,t,i)=>{i.d(t,{US:()=>n.U,kC:()=>o,zY:()=>l,TT:()=>d,j_:()=>p,QC:()=>Y,se:()=>m,qq:()=>h,ry:()=>b,yI:()=>A,qk:()=>S,sC:()=>k,Gg:()=>T,dz:()=>V,sX:()=>F,Qu:()=>$,vk:()=>O,Q_:()=>E,eh:()=>B,_6:()=>W,dm:()=>u,pW:()=>M,$G:()=>N,AO:()=>L,ro:()=>U,I6:()=>C});var r=i(9376),s=i(5255),n=i(3317);function o(e){return`${e[0].toLocaleUpperCase()}${e.slice(1)}`}let a,c;function l(e,t){null==a&&(a=new Intl.Collator(void 0,{sensitivity:"accent"}));const i=a.compare(e,t);return 0===i?0:i>0?1:-1}function h(e,t){return null==e&&null==t||null!=e&&null!=t&&0===l(e,t)}function u(e,t){return null==c&&(c=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"})),c.compare(e,t)}function d(e,t,i=0,r=e.length,s=0,n=t.length){for(;i<r&&s<n;i++,s++){const r=e.charCodeAt(i),n=t.charCodeAt(s);if(r<n)return-1;if(r>n)return 1}const o=r-i,a=n-s;return o<a?-1:o>a?1:0}function p(e,t,i=0,r=e.length,s=0,n=t.length){for(;i<r&&s<n;i++,s++){const o=e.charCodeAt(i),a=t.charCodeAt(s);if(o===a)continue;const c=o-a;if((32!==c||!x(a))&&(-32!==c||!x(o)))return I(o)&&I(a)?c:d(e.toLowerCase(),t.toLowerCase(),i,r,s,n)}const o=r-i,a=n-s;return o<a?-1:o>a?1:0}function m(e){return e?.replace(/[<>&"]/g,(e=>{switch(e){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";case'"':return"&quot;";default:return e}}))}const g=/[\\`*_{}[\]()#+\-.!]/g,f=/\\([\\`*_{}[\]()#+\-.!])/g,w=/^===/gm,v=/^\u200b===/gm,y=/\r?\n/g;function b(e,t={}){return e=e.replace(g,"\\$&").replace(w,"​==="),t.quoted?e.trim().replace(y,"\t\\\n>  "):e}function C(e){return e.replace(f,"$1").replace(v,"===")}function A(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}function S(e){const[t,i]=(0,r.a)(e);return 1e3*t+Math.floor(i/1e6)}const P=["¹","²","³","⁴","⁵","⁶","⁷","⁸","⁹"];function k(e){return P[e-1]??""}const D=/\$\{(?:'.*?[^\\]'|\W*)?(\w*?)(?:'.*?[^\\]'|[\W\d]*)\}/g,R=new Map;function _(e){return 95===e||e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}function T(e){let t=R.get(e);if(null!=t)return t;t=[];const i=e.length;let r=0;for(;r<i;){const i=e.indexOf("${",r);if(-1===i)break;const s=e.indexOf("}",i);if(-1===s)break;let n=i+2,o="",a="",c="",l=!1,h="right",u="";if("'"===e[n]){const t=++n;if(n=e.indexOf("'",n),-1===n)break;t!==n&&(a=e.slice(t,n)),n++}else if(!_(e.charCodeAt(n))){const t=n++;for(;n<s&&!_(e.charCodeAt(n));)n++;t!==n&&(a=e.slice(t,n))}for(;n<s;){let t=e.charCodeAt(n);if(_(t))o+=e[n++];else{if(124!==t)break;for(;n<s;){if(t=e.charCodeAt(++n),!(t>=48&&t<=57)){63===t?(l=!0,n++):45===t&&(h="left",n++);break}c+=e[n]}}}if(n<s)if("'"===e[n]){const t=++n;if(n=e.indexOf("'",n),-1===n)break;t!==n&&(u=e.slice(t,n)),n++}else if(!_(e.charCodeAt(n))){const t=n++;for(;n<s&&!_(e.charCodeAt(n));)n++;t!==n&&(u=e.slice(t,n))}r=s+1,t.push({key:o,start:i,end:r,options:{prefix:a||void 0,suffix:u||void 0,truncateTo:c?parseInt(c,10):void 0,collapseWhitespace:l,padDirection:h}})}return R.set(e,t),t}function F(e,t){if(null==e||0===e.length)return e;if(null==t)return e.replace(D,"");const i=T(e);if(0===i.length)return e;let r=0,s="";for(const n of i)s+=e.slice(r,n.start)+(t[n.key]??""),r=n.end;return r<e.length&&(s+=e.slice(r)),s}async function $(e,t){if(null==e||0===e.length)return e;if(null==t)return e.replace(D,"");const i=T(e);if(0===i.length)return e;let r,s=0,n="";for(const o of i)r=t[o.key],null!=r&&"object"==typeof r&&"function"==typeof r.then&&(r=await r),n+=e.slice(s,o.start)+(r??""),s=o.end;return s<e.length&&(n+=e.slice(s)),n}function I(e){return e>=s.mN.a&&e<=s.mN.z}function x(e){return e>=s.mN.A&&e<=s.mN.Z}function O(e,t=0,i=0,r=" "){return 0===t&&0===i?e:`${0===t?"":r.repeat(t)}${e}${0===i?"":r.repeat(i)}`}function E(e,t,i=" ",r){const s=t-(r??V(e));return s<=0?e:i.repeat(s)+e}function B(e,t,i=" ",r){const s=t-(r??V(e));return s<=0?e:e+i.repeat(s)}function W(e,t,i){if(null==i)return`${t} ${e}${1===t?"":"s"}`;const r=1===t?e:i.plural??`${e}s`;return i.only?r:`${0===t?i.zero??t:i.format?.(t)??t}${i.infix??" "}${r}`}function M(e,t){const i=e.indexOf(t);if(-1===i)return[e];const r=e.substring(0,i),s=e.substring(i+t.length);return null!=s?[r,s]:[r]}function N(e,t,i="…",r){if(!e)return e;if(t<=1)return i;if((r=r??V(e))<=t)return e;if(r===e.length)return`${e.substring(0,t-1)}${i}`;let s=Math.floor(t/(r/e.length)),n=V(e.substring(0,s));for(;n<t;)n+=V(e[s++]);return n>=t&&s--,`${e.substring(0,s)}${i}`}function L(e,t,i="…",r){if(!e)return e;if(t<=1)return i;if((r=r??V(e))<=t)return e;if(r===e.length)return`${i}${e.substring(r-t)}`;let s=Math.floor(t/(r/e.length)),n=V(e.substring(0,s));for(;n<t;)n+=V(e[s++]);return n>=t&&s--,`${i}${e.substring(e.length-s)}`}function U(e,t,i="…"){if(!e)return e;if(t<=1)return i;const r=V(e);return r<=t?e:`${e.slice(0,Math.floor(t/2)-1)}${i}${e.slice(r-Math.ceil(t/2))}`}let G;const H=/[^\x20-\x7F\u00a0\u2026]/;function V(e){if(null==e||0===e.length)return 0;if(!H.test(e))return e.length;if(null==G&&(G=function({onlyFirst:e=!1}={}){const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")}()),0===(e=e.replace(G,"")).length)return 0;let t=0,i=0,r=0;const s=[...e];for(let e=0;e<s.length;e++){const n=s[e].codePointAt(0);if(!(n<=31||n>=127&&n<=159)&&!(n>=768&&n<=879))if(n>=128512&&n<=128591||n>=127744&&n<=128511||n>=128640&&n<=128767||n>=9728&&n<=9983||n>=9984&&n<=10175||n>=65024&&n<=65039||n>=129280&&n<=129535||n>=65024&&n<=65039||n>=8400&&n<=8447){if(n>=127995&&n<=127999)continue;i++,t+=2}else 8205!==n?(n>65535&&e++,t+=q(n)?2:1):(r++,t-=2)}const n=i-r;return n>1&&(t+=n-1),t}function q(e){return e>=4352&&(e<=4447||9001===e||9002===e||e>=11904&&e<=12871&&12351!==e||e>=12880&&e<=19903||e>=19968&&e<=42182||e>=43360&&e<=43388||e>=44032&&e<=55203||e>=63744&&e<=64255||e>=65040&&e<=65049||e>=65072&&e<=65131||e>=65281&&e<=65376||e>=65504&&e<=65510||e>=110592&&e<=110593||e>=127488&&e<=127569||e>=131072&&e<=262141)}const j="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",Q={};function Y(e){return null==e||""===e?"":function(e,t,i){const r=[];let s,n=4,o=4,a=3,c="";const l=[];let h,u,d,p,m,g,f;const w={val:i(0),position:t,index:1};for(h=0;h<3;h+=1)r[h]=h;d=0,m=Math.pow(2,2),g=1;for(;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;const v=String.fromCharCode;switch(s=d){case 0:for(d=0,m=Math.pow(2,8),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;f=v(d);break;case 1:for(d=0,m=Math.pow(2,16),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;f=v(d);break;case 2:return""}r[3]=f,u=f,l.push(f);for(;;){if(w.index>e)return"";for(d=0,m=Math.pow(2,a),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;switch(f=d){case 0:for(d=0,m=Math.pow(2,8),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;r[o++]=v(d),f=o-1,n--;break;case 1:for(d=0,m=Math.pow(2,16),g=1;g!=m;)p=w.val&w.position,w.position>>=1,0==w.position&&(w.position=t,w.val=i(w.index++)),d|=(p>0?1:0)*g,g<<=1;r[o++]=v(d),f=o-1,n--;break;case 2:return l.join("")}if(0==n&&(n=Math.pow(2,a),a++),r[f])c=r[f];else{if(f!==o)return;c=u+u.charAt(0)}l.push(c),r[o++]=u+c.charAt(0),n--,u=c,0==n&&(n=Math.pow(2,a),a++)}}(e.length,32,(t=>function(e,t){if(!Q[e]){Q[e]={};for(let t=0;t<e.length;t++)Q[e][e.charAt(t)]=t}return Q[e][t]}(j,e.charAt(t))))??""}},1526:(e,t,i)=>{i.d(t,{QF:()=>UriTrie,u$:()=>VisitedPathsTrie});var r=i(429),s=i(3105),n=i(3700);function o(e){return 47===(e=(0,n.AH)(e)).charCodeAt(0)&&(e=e.slice(1)),e}class UriTrie{constructor(e){this.normalize=e,this.trie=new PathTrie}trie;clear(){this.trie.clear()}delete(e,t=!0){const{path:i,ignoreCase:r}=this.normalize(e);return this.trie.delete(i,r,t)}get(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.get(t,i)}getChildren(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.getChildren(t,i)}getClosest(e,t,i){const{path:r,ignoreCase:s}=this.normalize(e);return this.trie.getClosest(r,t,i,s)}getDescendants(e,t){if(null==e)return this.trie.getDescendants();const{path:i,ignoreCase:r}=this.normalize(e);return this.trie.getDescendants(i,t,r)}has(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.has(t,i)}set(e,t){const{path:i,ignoreCase:r}=this.normalize(e);return this.trie.set(i,t,r)}}class PathNode{constructor(e){this.path=e}value;children}class PathTrie{constructor(e=o){this.normalize=e,this.root=new PathNode("")}root;clear(){this.root.children=void 0}delete(e,t,i=!0){let s,n;e=this.normalize(e),t=t??!r.IJ;for(const i of e.split("/")){const e=(s??this.root).children?.get(t?i.toLowerCase():i);if(null==e)return!1;n=s??this.root,s=e}return!!s?.value&&(i&&a(s.value),s.value=void 0,null!=s.children&&0!==s.children.size||null==n?.children||(n.children.delete(t?s.path.toLowerCase():s.path),0===n.children.size&&(n.children=void 0)),!0)}get(e,t){return this.getCore(e,t)}getCore(e,t){let i;e=this.normalize(e),t=t??!r.IJ;for(const r of e.split("/")){const e=(i??this.root).children?.get(t?r.toLowerCase():r);if(null==e)return;i=e}return i?.value}getChildren(e,t){let i;if(e=this.normalize(e),t=t??!r.IJ,e)for(const r of e.split("/")){const e=(i??this.root).children?.get(t?r.toLowerCase():r);if(null==e)return[];i=e}else i=this.root;return null==i?.children?[]:[...(0,s.DZ)(i.children.values(),(e=>e.value||void 0))]}getClosest(e,t,i,s){let n,o;e=this.normalize(e),s=s??!r.IJ;for(const t of e.split("/")){!n?.value||i&&!i?.(n.value)||(o=n);const e=(n??this.root).children?.get(s?t.toLowerCase():t);if(null==e)break;n=e}return t||!n?.value||i&&!i?.(n.value)?o?.value:n.value}*getDescendants(e,t,i){e=e?this.normalize(e):"",i=i??!r.IJ;let s,n="";if(e)for(const t of e.split("/")){const e=(s??this.root).children?.get(i?t.toLowerCase():t);if(null==e)return;s=e,n+=`${e.path}/`}else s=this.root;null!=s?.children&&(yield*function*e(i,r,s){for(const n of i.values()){const i=r?`${r}/${n.path}`:n.path;!n.value||t&&!t?.(n.value)||(yield n.value),null!=n.children&&(yield*e(n.children,i,s))}}(s.children,"",n))}has(e,t){return null!=this.getCore(e,t)}set(e,t,i){e=this.normalize(e),i=i??!r.IJ;let s=this.root;for(const t of e.split("/")){const e=i?t.toLowerCase():t;let r=s.children?.get(e);null==r&&(null==s.children&&(s.children=new Map),r=new PathNode(t),s.children.set(e,r)),s=r}const n=null==s.value;return n||s.value===t||a(s.value),s.value=t,n}}function a(e){null!=e&&"object"==typeof e&&"dispose"in e&&"function"==typeof e.dispose&&e.dispose()}class VisitedPathNode{constructor(e){this.path=e}children}class VisitedPathsTrie{constructor(e=o){this.normalize=e,this.root=new VisitedPathNode("")}root;clear(){this.root.children=void 0}has(e,t){let i;e=this.normalize(e),t=t??!r.IJ;for(const r of e.split("/")){const e=(i??this.root).children?.get(t?r.toLowerCase():r);if(null==e)return!1;i=e}return null!=i}set(e,t){e=this.normalize(e),t=t??!r.IJ;let i=this.root;for(const r of e.split("/")){const e=t?r.toLowerCase():r;let s=i.children?.get(e);null==s&&(null==i.children&&(i.children=new Map),s=new VisitedPathNode(r),i.children.set(e,s)),i=s}}}},2509:(e,t,i)=>{i.d(t,{$S:()=>v,$_:()=>p,$o:()=>y,GC:()=>b,GR:()=>d,JM:()=>w,PH:()=>A,_L:()=>m,aW:()=>g,bM:()=>S,gn:()=>R,hE:()=>f,ic:()=>k,lN:()=>P,pt:()=>C,qM:()=>D,s5:()=>u});var r=i(9496),s=i(5255),n=i(7462),o=i(9529),a=i(5148),c=i(4336),l=i(3700),h=i(4550);function u(e){const t=e.toString();return r.workspace.textDocuments.find((e=>e.uri.toString()===t))}async function d(e,t){const i=function(e){const t=r.window.activeTextEditor,i=e.toString();for(const e of[...null!=t?[t]:[],...r.window.visibleTextEditors])if(e.document.uri.toString()===i&&null!=e?.viewColumn)return e}(e);return null!=i?(t?.preserveFocus||await r.window.showTextDocument(i.document,{...t,viewColumn:i.viewColumn}),i):S(e,{viewColumn:r.window.activeTextEditor?.viewColumn,...t})}function p(e){const t=new Map(e.map((e=>[e.toString(),e])));for(const e of r.window.visibleTextEditors)null!=e?.viewColumn&&t.delete(e.document.uri.toString());for(const e of t.values())(0,o.dO)("vscode.open",e,{background:!0,preview:!1})}function m(){let e;switch(r.env.appName){case"Visual Studio Code - Insiders":e="code-insiders --wait --reuse-window";break;case"Visual Studio Code - Exploration":e="code-exploration --wait --reuse-window";break;case"VSCodium":e="codium --wait --reuse-window";break;default:e="code --wait --reuse-window"}return e}function g(e){const t=r.window.activeTextEditor;return null!=t&&t.document===e?t:void 0}function f(){return!a.D.get("advanced.quickPick.closeOnFocusOut")}function w(e){if(0===r.window.visibleTextEditors.length)return!1;if(null==e)return r.window.visibleTextEditors.some((e=>A(e)));const t=e.toString();return r.window.visibleTextEditors.some((e=>e.document.uri.toString()===t&&A(e)))}function v(e){const t=r.window.activeTextEditor;return null!=t&&t.document===e}function y(e){return e.kind===r.ColorThemeKind.Dark||e.kind===r.ColorThemeKind.HighContrast}function b(e){return e.kind===r.ColorThemeKind.Light||e.kind===r.ColorThemeKind.HighContrastLight}function C(e){return e.scheme===s.sN.Virtual||e.scheme===s.sN.GitHub}function A(e){const t=e.document.uri.scheme;return t!==s.sN.DebugConsole&&t!==s.sN.Output&&t!==s.sN.Terminal}async function S(e,t={}){const{rethrow:i,...a}=t;try{if((0,n.uy)(e)&&(e=e.documentUri()),e.scheme===s.sN.GitLens&&s.ZY[(0,l.DZ)(e.fsPath)])return void await(0,o.dO)("vscode.open",e);const t=await r.workspace.openTextDocument(e);return r.window.showTextDocument(t,{preserveFocus:!1,preview:!0,viewColumn:r.ViewColumn.Active,...a})}catch(t){if((t?.toString()??"").includes("File seems to be binary and cannot be opened as text"))return void await(0,o.dO)("vscode.open",e);if(i)throw t;return void c.Yd.error(t,"openEditor")}}async function P(e,t,i,s=!0){s&&null==r.window.tabGroups.activeTabGroup.activeTab&&(s=!1),await(0,o.dO)("workbench.action.openWalkthrough",{category:`${e}#${t}`,step:i?`${e}#${t}#${i}`:void 0},s)}function k(e,t={location:"currentWindow"}){if("addToWorkspace"!==t?.location)(0,o.dO)("vscode.openFolder",e,{forceNewWindow:"newWindow"===t?.location});else{const i=r.workspace.workspaceFolders?.length??0;r.workspace.updateWorkspaceFolders(i,0,{uri:e,name:t?.name})}}async function D(e){await(0,o.dO)("revealFileInOS",e)}function R(e){return"input-prompt-links"===e&&(0,h.L5)(r.version,">= 1.76")}},4550:(e,t,i)=>{i.d(t,{L5:()=>o,mL:()=>n,qu:()=>s});var r=i(3620);function s(e,t){return"string"==typeof e&&(e=n(e)),"string"==typeof t&&(t=n(t)),e.major>t.major?1:e.major<t.major?-1:e.minor>t.minor?1:e.minor<t.minor?-1:e.patch>t.patch?1:e.patch<t.patch?-1:void 0===e.pre&&void 0!==t.pre?1:void 0!==e.pre&&void 0===t.pre?-1:void 0!==e.pre&&void 0!==t.pre?(0,r.zY)(e.pre,t.pre):0}function n(e){const[t,i]=e.split("-"),[r,s,n]=t.split(".");return function(e,t,i,r){return{major:"string"==typeof e?parseInt(e,10):e,minor:"string"==typeof t?parseInt(t,10):t,patch:null==i?0:"string"==typeof i?parseInt(i,10):i,pre:r}}(r,s,n,i)}function o(e,t){if(null==e)return!1;const[i,r]=t.split(" ");if("="===i)return 0===s(e,r);if(">"===i)return s(e,r)>0;if(">="===i)return s(e,r)>=0;if("<"===i)return s(e,r)<0;if("<="===i)return s(e,r)<=0;throw new Error(`Unknown operator: ${i}`)}},9701:(e,t,i)=>{function r(e){return null!=e&&("webview"in e&&null!=e.webview)}function s(e){return null!=e&&("webview"in e&&null!=e.webview&&"webviewItem"in e)}function n(e){return null!=e&&("webview"in e&&null!=e.webview&&"webviewItemGroup"in e)}function o(e){return JSON.stringify(e)}i.d(t,{BH:()=>o,dH:()=>n,s4:()=>r,tM:()=>s})},200:(e,t,i)=>{var r;i.r(t),i.d(t,{OpenTelemetryProvider:()=>OpenTelemetryProvider}),function(e){e[e.INTERNAL=0]="INTERNAL",e[e.SERVER=1]="SERVER",e[e.CLIENT=2]="CLIENT",e[e.PRODUCER=3]="PRODUCER",e[e.CONSUMER=4]="CONSUMER"}(r||(r={}));var s="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:"object"==typeof i.g?i.g:{},n="1.7.0",o=/^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;var a=function(e){var t=new Set([e]),i=new Set,r=e.match(o);if(!r)return function(){return!1};var s=+r[1],n=+r[2],a=+r[3];if(null!=r[4])return function(t){return t===e};function c(e){return i.add(e),!1}function l(e){return t.add(e),!0}return function(e){if(t.has(e))return!0;if(i.has(e))return!1;var r=e.match(o);if(!r)return c(e);var h=+r[1],u=+r[2],d=+r[3];return null!=r[4]||s!==h?c(e):0===s?n===u&&a<=d?l(e):c(e):n<=u?l(e):c(e)}}(n),c=n.split(".")[0],l=Symbol.for("opentelemetry.js.api."+c),h=s;function u(e,t,i,r){var s;void 0===r&&(r=!1);var o=h[l]=null!==(s=h[l])&&void 0!==s?s:{version:n};if(!r&&o[e]){var a=new Error("@opentelemetry/api: Attempted duplicate registration of API: "+e);return i.error(a.stack||a.message),!1}if(o.version!==n){a=new Error("@opentelemetry/api: Registration of version v"+o.version+" for "+e+" does not match previously registered API v"+n);return i.error(a.stack||a.message),!1}return o[e]=t,i.debug("@opentelemetry/api: Registered a global for "+e+" v"+n+"."),!0}function d(e){var t,i,r=null===(t=h[l])||void 0===t?void 0:t.version;if(r&&a(r))return null===(i=h[l])||void 0===i?void 0:i[e]}function p(e,t){t.debug("@opentelemetry/api: Unregistering a global for "+e+" v"+n+".");var i=h[l];i&&delete i[e]}var m,g=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},f=function(e,t,i){if(i||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},w=function(){function e(e){this._namespace=e.namespace||"DiagComponentLogger"}return e.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("debug",this._namespace,e)},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("error",this._namespace,e)},e.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("info",this._namespace,e)},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("warn",this._namespace,e)},e.prototype.verbose=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return v("verbose",this._namespace,e)},e}();function v(e,t,i){var r=d("diag");if(r)return i.unshift(t),r[e].apply(r,f([],g(i),!1))}!function(e){e[e.NONE=0]="NONE",e[e.ERROR=30]="ERROR",e[e.WARN=50]="WARN",e[e.INFO=60]="INFO",e[e.DEBUG=70]="DEBUG",e[e.VERBOSE=80]="VERBOSE",e[e.ALL=9999]="ALL"}(m||(m={}));var y=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},b=function(e,t,i){if(i||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},C=function(){function e(){function e(e){return function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];var r=d("diag");if(r)return r[e].apply(r,b([],y(t),!1))}}var t=this;t.setLogger=function(e,i){var r,s,n;if(void 0===i&&(i={logLevel:m.INFO}),e===t){var o=new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");return t.error(null!==(r=o.stack)&&void 0!==r?r:o.message),!1}"number"==typeof i&&(i={logLevel:i});var a=d("diag"),c=function(e,t){function i(i,r){var s=t[i];return"function"==typeof s&&e>=r?s.bind(t):function(){}}return e<m.NONE?e=m.NONE:e>m.ALL&&(e=m.ALL),t=t||{},{error:i("error",m.ERROR),warn:i("warn",m.WARN),info:i("info",m.INFO),debug:i("debug",m.DEBUG),verbose:i("verbose",m.VERBOSE)}}(null!==(s=i.logLevel)&&void 0!==s?s:m.INFO,e);if(a&&!i.suppressOverrideMessage){var l=null!==(n=(new Error).stack)&&void 0!==n?n:"<failed to generate stacktrace>";a.warn("Current logger will be overwritten from "+l),c.warn("Current logger will overwrite one already registered from "+l)}return u("diag",c,t,!0)},t.disable=function(){p("diag",t)},t.createComponentLogger=function(e){return new w(e)},t.verbose=e("verbose"),t.debug=e("debug"),t.info=e("info"),t.warn=e("warn"),t.error=e("error")}return e.instance=function(){return this._instance||(this._instance=new e),this._instance},e}(),A=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},S=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},P=function(){function e(e){this._entries=e?new Map(e):new Map}return e.prototype.getEntry=function(e){var t=this._entries.get(e);if(t)return Object.assign({},t)},e.prototype.getAllEntries=function(){return Array.from(this._entries.entries()).map((function(e){var t=A(e,2);return[t[0],t[1]]}))},e.prototype.setEntry=function(t,i){var r=new e(this._entries);return r._entries.set(t,i),r},e.prototype.removeEntry=function(t){var i=new e(this._entries);return i._entries.delete(t),i},e.prototype.removeEntries=function(){for(var t,i,r=[],s=0;s<arguments.length;s++)r[s]=arguments[s];var n=new e(this._entries);try{for(var o=S(r),a=o.next();!a.done;a=o.next()){var c=a.value;n._entries.delete(c)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(i=o.return)&&i.call(o)}finally{if(t)throw t.error}}return n},e.prototype.clear=function(){return new e},e}(),k=Symbol("BaggageEntryMetadata"),D=C.instance();function R(e){return void 0===e&&(e={}),new P(new Map(Object.entries(e)))}var _,T="=",F=";",$=",",I="baggage",x=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o};function O(e){var t=e.split(F);if(!(t.length<=0)){var i=t.shift();if(i){var r=i.indexOf(T);if(!(r<=0)){var s,n,o=decodeURIComponent(i.substring(0,r).trim()),a=decodeURIComponent(i.substring(r+1).trim());return t.length>0&&("string"!=typeof(n=t.join(F))&&(D.error("Cannot create baggage metadata from unknown type: "+typeof n),n=""),s={__TYPE__:k,toString:function(){return n}}),{key:o,value:a,metadata:s}}}}}function E(e){return"string"!=typeof e||0===e.length?{}:e.split($).map((function(e){return O(e)})).filter((function(e){return void 0!==e&&e.value.length>0})).reduce((function(e,t){return e[t.key]=t.value,e}),{})}!function(e){e.AlwaysOff="always_off",e.AlwaysOn="always_on",e.ParentBasedAlwaysOff="parentbased_always_off",e.ParentBasedAlwaysOn="parentbased_always_on",e.ParentBasedTraceIdRatio="parentbased_traceidratio",e.TraceIdRatio="traceidratio"}(_||(_={}));var B="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:"object"==typeof i.g?i.g:{},W=",",M=["OTEL_SDK_DISABLED"];function N(e){return M.indexOf(e)>-1}var L=["OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_BLRP_EXPORT_TIMEOUT","OTEL_BLRP_MAX_EXPORT_BATCH_SIZE","OTEL_BLRP_MAX_QUEUE_SIZE","OTEL_BLRP_SCHEDULE_DELAY","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_OTLP_LOGS_TIMEOUT","OTEL_EXPORTER_JAEGER_AGENT_PORT"];function U(e){return L.indexOf(e)>-1}var G=["OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS"];function H(e){return G.indexOf(e)>-1}var V=1/0,q=128,j={OTEL_SDK_DISABLED:!1,CONTAINER_NAME:"",ECS_CONTAINER_METADATA_URI_V4:"",ECS_CONTAINER_METADATA_URI:"",HOSTNAME:"",KUBERNETES_SERVICE_HOST:"",NAMESPACE:"",OTEL_BSP_EXPORT_TIMEOUT:3e4,OTEL_BSP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BSP_MAX_QUEUE_SIZE:2048,OTEL_BSP_SCHEDULE_DELAY:5e3,OTEL_BLRP_EXPORT_TIMEOUT:3e4,OTEL_BLRP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BLRP_MAX_QUEUE_SIZE:2048,OTEL_BLRP_SCHEDULE_DELAY:5e3,OTEL_EXPORTER_JAEGER_AGENT_HOST:"",OTEL_EXPORTER_JAEGER_AGENT_PORT:6832,OTEL_EXPORTER_JAEGER_ENDPOINT:"",OTEL_EXPORTER_JAEGER_PASSWORD:"",OTEL_EXPORTER_JAEGER_USER:"",OTEL_EXPORTER_OTLP_ENDPOINT:"",OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:"",OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:"",OTEL_EXPORTER_OTLP_LOGS_ENDPOINT:"",OTEL_EXPORTER_OTLP_HEADERS:"",OTEL_EXPORTER_OTLP_TRACES_HEADERS:"",OTEL_EXPORTER_OTLP_METRICS_HEADERS:"",OTEL_EXPORTER_OTLP_LOGS_HEADERS:"",OTEL_EXPORTER_OTLP_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_TRACES_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_METRICS_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_LOGS_TIMEOUT:1e4,OTEL_EXPORTER_ZIPKIN_ENDPOINT:"http://localhost:9411/api/v2/spans",OTEL_LOG_LEVEL:m.INFO,OTEL_NO_PATCH_MODULES:[],OTEL_PROPAGATORS:["tracecontext","baggage"],OTEL_RESOURCE_ATTRIBUTES:"",OTEL_SERVICE_NAME:"",OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT:V,OTEL_ATTRIBUTE_COUNT_LIMIT:q,OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT:V,OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT:q,OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:V,OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT:q,OTEL_SPAN_EVENT_COUNT_LIMIT:128,OTEL_SPAN_LINK_COUNT_LIMIT:128,OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:128,OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:128,OTEL_TRACES_EXPORTER:"",OTEL_TRACES_SAMPLER:_.ParentBasedAlwaysOn,OTEL_TRACES_SAMPLER_ARG:"",OTEL_LOGS_EXPORTER:"",OTEL_EXPORTER_OTLP_INSECURE:"",OTEL_EXPORTER_OTLP_TRACES_INSECURE:"",OTEL_EXPORTER_OTLP_METRICS_INSECURE:"",OTEL_EXPORTER_OTLP_LOGS_INSECURE:"",OTEL_EXPORTER_OTLP_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_COMPRESSION:"",OTEL_EXPORTER_OTLP_TRACES_COMPRESSION:"",OTEL_EXPORTER_OTLP_METRICS_COMPRESSION:"",OTEL_EXPORTER_OTLP_LOGS_COMPRESSION:"",OTEL_EXPORTER_OTLP_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_LOGS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE:"cumulative"};function Q(e,t,i){if(void 0!==i[e]){var r=String(i[e]);t[e]="true"===r.toLowerCase()}}function Y(e,t,i,r,s){if(void 0===r&&(r=-1/0),void 0===s&&(s=1/0),void 0!==i[e]){var n=Number(i[e]);isNaN(n)||(t[e]=n<r?r:n>s?s:n)}}function z(e,t,i,r){void 0===r&&(r=W);var s=i[e];"string"==typeof s&&(t[e]=s.split(r).map((function(e){return e.trim()})))}var K={ALL:m.ALL,VERBOSE:m.VERBOSE,DEBUG:m.DEBUG,INFO:m.INFO,WARN:m.WARN,ERROR:m.ERROR,NONE:m.NONE};function J(e,t,i){var r=i[e];if("string"==typeof r){var s=K[r.toUpperCase()];null!=s&&(t[e]=s)}}function X(e){var t={};for(var i in j){var r=i;if("OTEL_LOG_LEVEL"===r)J(r,t,e);else if(N(r))Q(r,t,e);else if(U(r))Y(r,t,e);else if(H(r))z(r,t,e);else{var s=e[r];null!=s&&(t[r]=String(s))}}return t}function Z(){var e=X(B);return Object.assign({},j,e)}var ee=C.instance(),te=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},ie=1e4;function re(e){return"number"==typeof e?e<=0?se(e,ie):e:function(){var e,t=Number(null!==(e=Z().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT)&&void 0!==e?e:Z().OTEL_EXPORTER_OTLP_TIMEOUT);return t<=0?se(t,ie):t}()}function se(e,t){return ee.warn("Timeout must be greater than 0",e),t}var ne,oe=function(){function e(){var e=this;this._promise=new Promise((function(t,i){e._resolve=t,e._reject=i}))}return Object.defineProperty(e.prototype,"promise",{get:function(){return this._promise},enumerable:!1,configurable:!0}),e.prototype.resolve=function(e){this._resolve(e)},e.prototype.reject=function(e){this._reject(e)},e}(),ae=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},ce=function(e,t,i){if(i||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},le=function(){function e(e,t){this._callback=e,this._that=t,this._isCalled=!1,this._deferred=new oe}return Object.defineProperty(e.prototype,"isCalled",{get:function(){return this._isCalled},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"promise",{get:function(){return this._deferred.promise},enumerable:!1,configurable:!0}),e.prototype.call=function(){for(var e,t=this,i=[],r=0;r<arguments.length;r++)i[r]=arguments[r];if(!this._isCalled){this._isCalled=!0;try{Promise.resolve((e=this._callback).call.apply(e,ce([this._that],ae(i),!1))).then((function(e){return t._deferred.resolve(e)}),(function(e){return t._deferred.reject(e)}))}catch(e){this._deferred.reject(e)}}return this._deferred.promise},e}();!function(e){e[e.SUCCESS=0]="SUCCESS",e[e.FAILED=1]="FAILED"}(ne||(ne={}));var he,ue=function(){function e(e){void 0===e&&(e={}),this._sendingPromises=[],this.url=this.getDefaultUrl(e),"string"==typeof e.hostname&&(this.hostname=e.hostname),this.shutdown=this.shutdown.bind(this),this._shutdownOnce=new le(this._shutdown,this),this._concurrencyLimit="number"==typeof e.concurrencyLimit?e.concurrencyLimit:1/0,this.timeoutMillis=re(e.timeoutMillis),this.onInit(e)}return e.prototype.export=function(e,t){this._shutdownOnce.isCalled?t({code:ne.FAILED,error:new Error("Exporter has been shutdown")}):this._sendingPromises.length>=this._concurrencyLimit?t({code:ne.FAILED,error:new Error("Concurrent export limit reached")}):this._export(e).then((function(){t({code:ne.SUCCESS})})).catch((function(e){t({code:ne.FAILED,error:e})}))},e.prototype._export=function(e){var t=this;return new Promise((function(i,r){try{ee.debug("items to be sent",e),t.send(e,i,r)}catch(e){r(e)}}))},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype.forceFlush=function(){return Promise.all(this._sendingPromises).then((function(){}))},e.prototype._shutdown=function(){return ee.debug("shutdown started"),this.onShutdown(),this.forceFlush()},e}(),de=(he=function(e,t){return he=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},he(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function i(){this.constructor=e}he(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}),pe=function(e){function t(t,i,r){var s=e.call(this,t)||this;return s.name="OTLPExporterError",s.data=r,s.code=i,s}return de(t,e),t}(Error),me=function(){return me=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},me.apply(this,arguments)},ge=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o};function fe(e,t,i,r,s,n){var o,a,c=!1,l=setTimeout((function(){if(clearTimeout(o),c=!0,a.readyState===XMLHttpRequest.DONE){var e=new pe("Request Timeout");n(e)}else a.abort()}),r),h=function(r,u){void 0===r&&(r=5),void 0===u&&(u=1e3),(a=new XMLHttpRequest).open("POST",t);Object.entries(me(me({},{Accept:"application/json","Content-Type":"application/json"}),i)).forEach((function(e){var t=ge(e,2),i=t[0],r=t[1];a.setRequestHeader(i,r)})),a.send(e),a.onreadystatechange=function(){if(a.readyState===XMLHttpRequest.DONE&&!1===c)if(a.status>=200&&a.status<=299)ee.debug("xhr success",e),s(),clearTimeout(l),clearTimeout(o);else if(a.status&&(d=a.status,[429,502,503,504].includes(d))&&r>0){var t=void 0;u*=1.5,t=a.getResponseHeader("Retry-After")?function(e){if(null==e)return-1;var t=Number.parseInt(e,10);if(Number.isInteger(t))return t>0?1e3*t:-1;var i=new Date(e).getTime()-Date.now();return i>=0?i:0}(a.getResponseHeader("Retry-After")):Math.round(Math.random()*(5e3-u)+u),o=setTimeout((function(){h(r-1,u)}),t)}else{var i=new pe("Failed to export with XHR (status: "+a.status+")",a.status);n(i),clearTimeout(l),clearTimeout(o)}var d},a.onabort=function(){if(c){var e=new pe("Request Timeout");n(e)}clearTimeout(l),clearTimeout(o)},a.onerror=function(){if(c){var e=new pe("Request Timeout");n(e)}clearTimeout(l),clearTimeout(o)}};h()}var we=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),ve=function(e){function t(t){void 0===t&&(t={});var i=e.call(this,t)||this;return i._useXHR=!1,i._useXHR=!!t.headers||"function"!=typeof navigator.sendBeacon,i._useXHR?i._headers=Object.assign({},function(e){void 0===e&&(e={});var t={};return Object.entries(e).forEach((function(e){var i=te(e,2),r=i[0],s=i[1];void 0!==s?t[r]=String(s):ee.warn('Header "'+r+'" has wrong value and will be ignored')})),t}(t.headers),E(Z().OTEL_EXPORTER_OTLP_HEADERS)):i._headers={},i}return we(t,e),t.prototype.onInit=function(){B.addEventListener("unload",this.shutdown)},t.prototype.onShutdown=function(){B.removeEventListener("unload",this.shutdown)},t.prototype.send=function(e,t,i){var r=this;if(this._shutdownOnce.isCalled)ee.debug("Shutdown already started. Cannot send objects");else{var s=this.convert(e),n=JSON.stringify(s),o=new Promise((function(e,t){r._useXHR?fe(n,r.url,r._headers,r.timeoutMillis,e,t):function(e,t,i,r,s){navigator.sendBeacon(t,new Blob([e],i))?(ee.debug("sendBeacon - can send",e),r()):s(new pe("sendBeacon - cannot send "+e))}(n,r.url,{type:"application/json"},e,t)})).then(t,i);this._sendingPromises.push(o);var a=function(){var e=r._sendingPromises.indexOf(o);r._sendingPromises.splice(e,1)};o.then(a,a)}},t}(ue),ye=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o};function be(e){return Object.keys(e).map((function(t){return Ce(t,e[t])}))}function Ce(e,t){return{key:e,value:Ae(t)}}function Ae(e){var t=typeof e;return"string"===t?{stringValue:e}:"number"===t?Number.isInteger(e)?{intValue:e}:{doubleValue:e}:"boolean"===t?{boolValue:e}:e instanceof Uint8Array?{bytesValue:e}:Array.isArray(e)?{arrayValue:{values:e.map(Ae)}}:"object"===t&&null!=e?{kvlistValue:{values:Object.entries(e).map((function(e){var t=ye(e,2);return Ce(t[0],t[1])}))}}:{}}function Se(e,t){var i,r=e.spanContext(),s=e.status;return{traceId:t.encodeSpanContext(r.traceId),spanId:t.encodeSpanContext(r.spanId),parentSpanId:t.encodeOptionalSpanContext(e.parentSpanId),traceState:null===(i=r.traceState)||void 0===i?void 0:i.serialize(),name:e.name,kind:null==e.kind?0:e.kind+1,startTimeUnixNano:t.encodeHrTime(e.startTime),endTimeUnixNano:t.encodeHrTime(e.endTime),attributes:be(e.attributes),droppedAttributesCount:e.droppedAttributesCount,events:e.events.map((function(e){return function(e,t){return{attributes:e.attributes?be(e.attributes):[],name:e.name,timeUnixNano:t.encodeHrTime(e.time),droppedAttributesCount:e.droppedAttributesCount||0}}(e,t)})),droppedEventsCount:e.droppedEventsCount,status:{code:s.code,message:s.message},links:e.links.map((function(e){return function(e,t){var i;return{attributes:e.attributes?be(e.attributes):[],spanId:t.encodeSpanContext(e.context.spanId),traceId:t.encodeSpanContext(e.context.traceId),traceState:null===(i=e.context.traceState)||void 0===i?void 0:i.serialize(),droppedAttributesCount:e.droppedAttributesCount||0}}(e,t)})),droppedLinksCount:e.droppedLinksCount}}var Pe=performance,ke=Math.pow(10,6),De=Math.pow(10,9);function Re(e){var t=e/1e3;return[Math.trunc(t),Math.round(e%1e3*ke)]}function _e(){var e=Pe.timeOrigin;if("number"!=typeof e){var t=Pe;e=t.timing&&t.timing.fetchStart}return e}function Te(e){return Ie(Re(_e()),Re("number"==typeof e?e:Pe.now()))}function Fe(e){return Array.isArray(e)&&2===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]}function $e(e){return Fe(e)||"number"==typeof e||e instanceof Date}function Ie(e,t){var i=[e[0]+t[0],e[1]+t[1]];return i[1]>=De&&(i[1]-=De,i[0]+=1),i}function xe(e){for(var t=e.length,i="",r=0;r<t;r+=2){var s=e.substring(r,r+2),n=parseInt(s,16);i+=String.fromCharCode(n)}return btoa(i)}var Oe=BigInt(1e9);function Ee(e){return BigInt(e[0])*Oe+BigInt(e[1])}function Be(e){var t,i=Ee(e);return t=i,{low:Number(BigInt.asUintN(32,t)),high:Number(BigInt.asUintN(32,t>>BigInt(32)))}}var We="undefined"!=typeof BigInt?function(e){return Ee(e).toString()}:function(e){return e[0]*De+e[1]};function Me(e){return e}function Ne(e){if(void 0!==e)return xe(e)}var Le={encodeHrTime:Be,encodeSpanContext:xe,encodeOptionalSpanContext:Ne};var Ue=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Ge=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o};function He(e,t){var i=function(e){var t,i;if(void 0===e)return Le;var r=null===(t=e.useLongBits)||void 0===t||t,s=null!==(i=e.useHex)&&void 0!==i&&i;return{encodeHrTime:r?Be:We,encodeSpanContext:s?Me:xe,encodeOptionalSpanContext:s?Me:Ne}}(t);return{resourceSpans:Ve(e,i)}}function Ve(e,t){for(var i=function(e){var t,i,r=new Map;try{for(var s=Ue(e),n=s.next();!n.done;n=s.next()){var o=n.value,a=r.get(o.resource);a||(a=new Map,r.set(o.resource,a));var c=o.instrumentationLibrary.name+"@"+(o.instrumentationLibrary.version||"")+":"+(o.instrumentationLibrary.schemaUrl||""),l=a.get(c);l||(l=[],a.set(c,l)),l.push(o)}}catch(e){t={error:e}}finally{try{n&&!n.done&&(i=s.return)&&i.call(s)}finally{if(t)throw t.error}}return r}(e),r=[],s=i.entries(),n=s.next();!n.done;){for(var o=Ge(n.value,2),a=o[0],c=[],l=o[1].values(),h=l.next();!h.done;){var u=h.value;if(u.length>0){var d=u[0].instrumentationLibrary,p=d.name,m=d.version,g=d.schemaUrl,f=u.map((function(e){return Se(e,t)}));c.push({scope:{name:p,version:m},spans:f,schemaUrl:g})}h=l.next()}var w={resource:{attributes:be(a.attributes),droppedAttributesCount:0},scopeSpans:c,schemaUrl:void 0};r.push(w),n=s.next()}return r}var qe,je=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),Qe="v1/traces",Ye="http://localhost:4318/"+Qe,ze=function(e){function t(t){void 0===t&&(t={});var i=e.call(this,t)||this;return i._headers=Object.assign(i._headers,E(Z().OTEL_EXPORTER_OTLP_TRACES_HEADERS)),i}return je(t,e),t.prototype.convert=function(e){return He(e,{useHex:!0,useLongBits:!1})},t.prototype.getDefaultUrl=function(e){return"string"==typeof e.url?e.url:Z().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length>0?function(e){try{var t=new URL(e);return""===t.pathname&&(t.pathname=t.pathname+"/"),t.toString()}catch(t){return ee.warn("Could not parse export URL: '"+e+"'"),e}}(Z().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT):Z().OTEL_EXPORTER_OTLP_ENDPOINT.length>0?(t=Z().OTEL_EXPORTER_OTLP_ENDPOINT,i=Qe,t.endsWith("/")||(t+="/"),t+i):Ye;var t,i},t}(ve),Ke="deployment.environment",Je="device.id",Xe="os.type",Ze="process.runtime.name",et="service.name",tt="service.version",it="telemetry.sdk.name",rt="telemetry.sdk.language",st="telemetry.sdk.version",nt=((qe={})[it]="opentelemetry",qe[Ze]="browser",qe[rt]="webjs",qe[st]="1.18.1",qe);var ot=function(){return ot=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},ot.apply(this,arguments)},at=function(e,t,i,r){return new(i||(i=Promise))((function(s,n){function o(e){try{c(r.next(e))}catch(e){n(e)}}function a(e){try{c(r.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((r=r.apply(e,t||[])).next())}))},ct=function(e,t){var i,r,s,n,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return n={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function a(n){return function(a){return function(n){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,r&&(s=2&n[0]?r.return:n[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,n[1])).done)return s;switch(r=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,r=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){o.label=n[1];break}if(6===n[0]&&o.label<s[1]){o.label=s[1],s=n;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(n);break}s[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],r=0}finally{i=s=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,a])}}},lt=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},ht=function(){function e(e,t){var i,r=this;this._attributes=e,this.asyncAttributesPending=null!=t,this._syncAttributes=null!==(i=this._attributes)&&void 0!==i?i:{},this._asyncAttributesPromise=null==t?void 0:t.then((function(e){return r._attributes=Object.assign({},r._attributes,e),r.asyncAttributesPending=!1,e}),(function(e){return ee.debug("a resource's async attributes promise rejected: %s",e),r.asyncAttributesPending=!1,{}}))}return e.empty=function(){return e.EMPTY},e.default=function(){var t;return new e(((t={})[et]="unknown_service",t[rt]=nt[rt],t[it]=nt[it],t[st]=nt[st],t))},Object.defineProperty(e.prototype,"attributes",{get:function(){var e;return this.asyncAttributesPending&&ee.error("Accessing resource attributes before async attributes settled"),null!==(e=this._attributes)&&void 0!==e?e:{}},enumerable:!1,configurable:!0}),e.prototype.waitForAsyncAttributes=function(){return at(this,void 0,void 0,(function(){return ct(this,(function(e){switch(e.label){case 0:return this.asyncAttributesPending?[4,this._asyncAttributesPromise]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))},e.prototype.merge=function(t){var i,r=this;if(!t)return this;var s=ot(ot({},this._syncAttributes),null!==(i=t._syncAttributes)&&void 0!==i?i:t.attributes);if(!this._asyncAttributesPromise&&!t._asyncAttributesPromise)return new e(s);var n=Promise.all([this._asyncAttributesPromise,t._asyncAttributesPromise]).then((function(e){var i,s=lt(e,2),n=s[0],o=s[1];return ot(ot(ot(ot({},r._syncAttributes),n),null!==(i=t._syncAttributes)&&void 0!==i?i:t.attributes),o)}));return new e(s,n)},e.EMPTY=new e({}),e}();function ut(e){return Symbol.for(e)}var dt,pt=new function e(t){var i=this;i._currentContext=t?new Map(t):new Map,i.getValue=function(e){return i._currentContext.get(e)},i.setValue=function(t,r){var s=new e(i._currentContext);return s._currentContext.set(t,r),s},i.deleteValue=function(t){var r=new e(i._currentContext);return r._currentContext.delete(t),r}},mt=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},gt=function(e,t,i){if(i||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},ft=function(){function e(){}return e.prototype.active=function(){return pt},e.prototype.with=function(e,t,i){for(var r=[],s=3;s<arguments.length;s++)r[s-3]=arguments[s];return t.call.apply(t,gt([i],mt(r),!1))},e.prototype.bind=function(e,t){return t},e.prototype.enable=function(){return this},e.prototype.disable=function(){return this},e}(),wt=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},vt=function(e,t,i){if(i||2===arguments.length)for(var r,s=0,n=t.length;s<n;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))},yt="context",bt=new ft,Ct=function(){function e(){}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalContextManager=function(e){return u(yt,e,C.instance())},e.prototype.active=function(){return this._getContextManager().active()},e.prototype.with=function(e,t,i){for(var r,s=[],n=3;n<arguments.length;n++)s[n-3]=arguments[n];return(r=this._getContextManager()).with.apply(r,vt([e,t,i],wt(s),!1))},e.prototype.bind=function(e,t){return this._getContextManager().bind(e,t)},e.prototype._getContextManager=function(){return d(yt)||bt},e.prototype.disable=function(){this._getContextManager().disable(),p(yt,C.instance())},e}();!function(e){e[e.NONE=0]="NONE",e[e.SAMPLED=1]="SAMPLED"}(dt||(dt={}));var At="0000000000000000",St="00000000000000000000000000000000",Pt={traceId:St,spanId:At,traceFlags:dt.NONE},kt=function(){function e(e){void 0===e&&(e=Pt),this._spanContext=e}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return this},e.prototype.setAttributes=function(e){return this},e.prototype.addEvent=function(e,t){return this},e.prototype.setStatus=function(e){return this},e.prototype.updateName=function(e){return this},e.prototype.end=function(e){},e.prototype.isRecording=function(){return!1},e.prototype.recordException=function(e,t){},e}(),Dt=ut("OpenTelemetry Context Key SPAN");function Rt(e){return e.getValue(Dt)||void 0}function _t(){return Rt(Ct.getInstance().active())}function Tt(e,t){return e.setValue(Dt,t)}function Ft(e){return e.deleteValue(Dt)}function $t(e,t){return Tt(e,new kt(t))}function It(e){var t;return null===(t=Rt(e))||void 0===t?void 0:t.spanContext()}var xt=/^([0-9a-f]{32})$/i,Ot=/^[0-9a-f]{16}$/i;function Et(e){return xt.test(e)&&e!==St}function Bt(e){return Et(e.traceId)&&(t=e.spanId,Ot.test(t)&&t!==At);var t}function Wt(e){return new kt(e)}var Mt=Ct.getInstance(),Nt=function(){function e(){}return e.prototype.startSpan=function(e,t,i){if(void 0===i&&(i=Mt.active()),Boolean(null==t?void 0:t.root))return new kt;var r,s=i&&It(i);return"object"==typeof(r=s)&&"string"==typeof r.spanId&&"string"==typeof r.traceId&&"number"==typeof r.traceFlags&&Bt(s)?new kt(s):new kt},e.prototype.startActiveSpan=function(e,t,i,r){var s,n,o;if(!(arguments.length<2)){2===arguments.length?o=t:3===arguments.length?(s=t,o=i):(s=t,n=i,o=r);var a=null!=n?n:Mt.active(),c=this.startSpan(e,s,a),l=Tt(a,c);return Mt.with(l,o,void 0,c)}},e}();var Lt=new Nt,Ut=function(){function e(e,t,i,r){this._provider=e,this.name=t,this.version=i,this.options=r}return e.prototype.startSpan=function(e,t,i){return this._getTracer().startSpan(e,t,i)},e.prototype.startActiveSpan=function(e,t,i,r){var s=this._getTracer();return Reflect.apply(s.startActiveSpan,s,arguments)},e.prototype._getTracer=function(){if(this._delegate)return this._delegate;var e=this._provider.getDelegateTracer(this.name,this.version,this.options);return e?(this._delegate=e,this._delegate):Lt},e}(),Gt=new(function(){function e(){}return e.prototype.getTracer=function(e,t,i){return new Nt},e}()),Ht=function(){function e(){}return e.prototype.getTracer=function(e,t,i){var r;return null!==(r=this.getDelegateTracer(e,t,i))&&void 0!==r?r:new Ut(this,e,t,i)},e.prototype.getDelegate=function(){var e;return null!==(e=this._delegate)&&void 0!==e?e:Gt},e.prototype.setDelegate=function(e){this._delegate=e},e.prototype.getDelegateTracer=function(e,t,i){var r;return null===(r=this._delegate)||void 0===r?void 0:r.getTracer(e,t,i)},e}(),Vt="trace",qt=function(){function e(){this._proxyTracerProvider=new Ht,this.wrapSpanContext=Wt,this.isSpanContextValid=Bt,this.deleteSpan=Ft,this.getSpan=Rt,this.getActiveSpan=_t,this.getSpanContext=It,this.setSpan=Tt,this.setSpanContext=$t}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalTracerProvider=function(e){var t=u(Vt,this._proxyTracerProvider,C.instance());return t&&this._proxyTracerProvider.setDelegate(e),t},e.prototype.getTracerProvider=function(){return d(Vt)||this._proxyTracerProvider},e.prototype.getTracer=function(e,t){return this.getTracerProvider().getTracer(e,t)},e.prototype.disable=function(){p(Vt,C.instance()),this._proxyTracerProvider=new Ht},e}().getInstance(),jt=Ct.getInstance(),Qt=function(){function e(){}return e.prototype.inject=function(e,t){},e.prototype.extract=function(e,t){return e},e.prototype.fields=function(){return[]},e}(),Yt={get:function(e,t){if(null!=e)return e[t]},keys:function(e){return null==e?[]:Object.keys(e)}},zt={set:function(e,t,i){null!=e&&(e[t]=i)}},Kt=ut("OpenTelemetry Baggage Key");function Jt(e){return e.getValue(Kt)||void 0}function Xt(){return Jt(Ct.getInstance().active())}function Zt(e,t){return e.setValue(Kt,t)}function ei(e){return e.deleteValue(Kt)}var ti,ii,ri="propagation",si=new Qt,ni=function(){function e(){this.createBaggage=R,this.getBaggage=Jt,this.getActiveBaggage=Xt,this.setBaggage=Zt,this.deleteBaggage=ei}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalPropagator=function(e){return u(ri,e,C.instance())},e.prototype.inject=function(e,t,i){return void 0===i&&(i=zt),this._getGlobalPropagator().inject(e,t,i)},e.prototype.extract=function(e,t,i){return void 0===i&&(i=Yt),this._getGlobalPropagator().extract(e,t,i)},e.prototype.fields=function(){return this._getGlobalPropagator().fields()},e.prototype.disable=function(){p(ri,C.instance())},e.prototype._getGlobalPropagator=function(){return d(ri)||si},e}().getInstance(),oi="[object Object]",ai="[object Null]",ci="[object Undefined]",li=Function.prototype.toString,hi=li.call(Object),ui=(ti=Object.getPrototypeOf,ii=Object,function(e){return ti(ii(e))}),di=Object.prototype,pi=di.hasOwnProperty,mi=Symbol?Symbol.toStringTag:void 0,gi=di.toString;function fi(e){if(!function(e){return null!=e&&"object"==typeof e}(e)||function(e){if(null==e)return void 0===e?ci:ai;return mi&&mi in Object(e)?function(e){var t=pi.call(e,mi),i=e[mi],r=!1;try{e[mi]=void 0,r=!0}catch(e){}var s=gi.call(e);r&&(t?e[mi]=i:delete e[mi]);return s}(e):function(e){return gi.call(e)}(e)}(e)!==oi)return!1;var t=ui(e);if(null===t)return!0;var i=pi.call(t,"constructor")&&t.constructor;return"function"==typeof i&&i instanceof i&&li.call(i)===hi}var wi=20;function vi(e){return Ci(e)?e.slice():e}function yi(e,t,i,r){var s;if(void 0===i&&(i=0),!(i>wi)){if(i++,Pi(e)||Pi(t)||Ai(t))s=vi(t);else if(Ci(e)){if(s=e.slice(),Ci(t))for(var n=0,o=t.length;n<o;n++)s.push(vi(t[n]));else if(Si(t))for(n=0,o=(a=Object.keys(t)).length;n<o;n++){s[c=a[n]]=vi(t[c])}}else if(Si(e))if(Si(t)){if(!function(e,t){if(!fi(e)||!fi(t))return!1;return!0}(e,t))return t;s=Object.assign({},e);var a;for(n=0,o=(a=Object.keys(t)).length;n<o;n++){var c,l=t[c=a[n]];if(Pi(l))void 0===l?delete s[c]:s[c]=l;else{var h=s[c],u=l;if(bi(e,c,r)||bi(t,c,r))delete s[c];else{if(Si(h)&&Si(u)){var d=r.get(h)||[],p=r.get(u)||[];d.push({obj:e,key:c}),p.push({obj:t,key:c}),r.set(h,d),r.set(u,p)}s[c]=yi(s[c],l,i,r)}}}}else s=t;return s}}function bi(e,t,i){for(var r=i.get(e[t])||[],s=0,n=r.length;s<n;s++){var o=r[s];if(o.key===t&&o.obj===e)return!0}return!1}function Ci(e){return Array.isArray(e)}function Ai(e){return"function"==typeof e}function Si(e){return!Pi(e)&&!Ci(e)&&!Ai(e)&&"object"==typeof e}function Pi(e){return"string"==typeof e||"number"==typeof e||"boolean"==typeof e||void 0===e||e instanceof Date||e instanceof RegExp||null===e}var ki=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Di=function(){function e(e){var t;void 0===e&&(e={}),this._propagators=null!==(t=e.propagators)&&void 0!==t?t:[],this._fields=Array.from(new Set(this._propagators.map((function(e){return"function"==typeof e.fields?e.fields():[]})).reduce((function(e,t){return e.concat(t)}),[])))}return e.prototype.inject=function(e,t,i){var r,s;try{for(var n=ki(this._propagators),o=n.next();!o.done;o=n.next()){var a=o.value;try{a.inject(e,t,i)}catch(e){ee.warn("Failed to inject with "+a.constructor.name+". Err: "+e.message)}}}catch(e){r={error:e}}finally{try{o&&!o.done&&(s=n.return)&&s.call(n)}finally{if(r)throw r.error}}},e.prototype.extract=function(e,t,i){return this._propagators.reduce((function(e,r){try{return r.extract(e,t,i)}catch(e){ee.warn("Failed to inject with "+r.constructor.name+". Err: "+e.message)}return e}),e)},e.prototype.fields=function(){return this._fields.slice()},e}(),Ri=ut("OpenTelemetry SDK Context Key SUPPRESS_TRACING");function _i(e){return e.setValue(Ri,!0)}function Ti(e){return!0===e.getValue(Ri)}var Fi="[_0-9a-z-*/]",$i=new RegExp("^(?:"+("[a-z]"+Fi+"{0,255}")+"|"+("[a-z0-9]"+Fi+"{0,240}@[a-z]"+Fi+"{0,13}")+")$"),Ii=/^[ -~]{0,255}[!-~]$/,xi=/,|=/;var Oi=function(){function e(e){this._internalState=new Map,e&&this._parse(e)}return e.prototype.set=function(e,t){var i=this._clone();return i._internalState.has(e)&&i._internalState.delete(e),i._internalState.set(e,t),i},e.prototype.unset=function(e){var t=this._clone();return t._internalState.delete(e),t},e.prototype.get=function(e){return this._internalState.get(e)},e.prototype.serialize=function(){var e=this;return this._keys().reduce((function(t,i){return t.push(i+"="+e.get(i)),t}),[]).join(",")},e.prototype._parse=function(e){e.length>512||(this._internalState=e.split(",").reverse().reduce((function(e,t){var i=t.trim(),r=i.indexOf("=");if(-1!==r){var s=i.slice(0,r),n=i.slice(r+1,t.length);(function(e){return $i.test(e)})(s)&&function(e){return Ii.test(e)&&!xi.test(e)}(n)&&e.set(s,n)}return e}),new Map),this._internalState.size>32&&(this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,32))))},e.prototype._keys=function(){return Array.from(this._internalState.keys()).reverse()},e.prototype._clone=function(){var t=new e;return t._internalState=new Map(this._internalState),t},e}(),Ei="traceparent",Bi="tracestate",Wi=new RegExp("^\\s?((?!ff)[\\da-f]{2})-((?![0]{32})[\\da-f]{32})-((?![0]{16})[\\da-f]{16})-([\\da-f]{2})(-.*)?\\s?$");var Mi,Ni=function(){function e(){}return e.prototype.inject=function(e,t,i){var r=qt.getSpanContext(e);if(r&&!Ti(e)&&Bt(r)){var s="00-"+r.traceId+"-"+r.spanId+"-0"+Number(r.traceFlags||dt.NONE).toString(16);i.set(t,Ei,s),r.traceState&&i.set(t,Bi,r.traceState.serialize())}},e.prototype.extract=function(e,t,i){var r=i.get(t,Ei);if(!r)return e;var s=Array.isArray(r)?r[0]:r;if("string"!=typeof s)return e;var n=function(e){var t=Wi.exec(e);return t?"00"===t[1]&&t[5]?null:{traceId:t[2],spanId:t[3],traceFlags:parseInt(t[4],16)}:null}(s);if(!n)return e;n.isRemote=!0;var o=i.get(t,Bi);if(o){var a=Array.isArray(o)?o.join(","):o;n.traceState=new Oi("string"==typeof a?a:void 0)}return qt.setSpanContext(e,n)},e.prototype.fields=function(){return[Ei,Bi]},e}(),Li=function(){function e(){}return e.prototype.inject=function(e,t,i){var r=ni.getBaggage(e);if(r&&!Ti(e)){var s=function(e){return e.getAllEntries().map((function(e){var t=x(e,2),i=t[0],r=t[1],s=encodeURIComponent(i)+"="+encodeURIComponent(r.value);return void 0!==r.metadata&&(s+=F+r.metadata.toString()),s}))}(r).filter((function(e){return e.length<=4096})).slice(0,180),n=function(e){return e.reduce((function(e,t){var i=""+e+(""!==e?$:"")+t;return i.length>8192?e:i}),"")}(s);n.length>0&&i.set(t,I,n)}},e.prototype.extract=function(e,t,i){var r=i.get(t,I),s=Array.isArray(r)?r.join($):r;if(!s)return e;var n={};return 0===s.length?e:(s.split($).forEach((function(e){var t=O(e);if(t){var i={value:t.value};t.metadata&&(i.metadata=t.metadata),n[t.key]=i}})),0===Object.entries(n).length?e:ni.setBaggage(e,ni.createBaggage(n)))},e.prototype.fields=function(){return[I]},e}();!function(e){e[e.NOT_RECORD=0]="NOT_RECORD",e[e.RECORD=1]="RECORD",e[e.RECORD_AND_SAMPLED=2]="RECORD_AND_SAMPLED"}(Mi||(Mi={}));var Ui,Gi=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Hi=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o};function Vi(e){var t,i,r={};if("object"!=typeof e||null==e)return r;try{for(var s=Gi(Object.entries(e)),n=s.next();!n.done;n=s.next()){var o=Hi(n.value,2),a=o[0],c=o[1];qi(a)?ji(c)?Array.isArray(c)?r[a]=c.slice():r[a]=c:ee.warn("Invalid attribute value set for key: "+a):ee.warn("Invalid attribute key: "+a)}}catch(e){t={error:e}}finally{try{n&&!n.done&&(i=s.return)&&i.call(s)}finally{if(t)throw t.error}}return r}function qi(e){return"string"==typeof e&&e.length>0}function ji(e){return null==e||(Array.isArray(e)?function(e){var t,i,r;try{for(var s=Gi(e),n=s.next();!n.done;n=s.next()){var o=n.value;if(null!=o){if(!r){if(Qi(o)){r=typeof o;continue}return!1}if(typeof o!==r)return!1}}}catch(e){t={error:e}}finally{try{n&&!n.done&&(i=s.return)&&i.call(s)}finally{if(t)throw t.error}}return!0}(e):Qi(e))}function Qi(e){switch(typeof e){case"number":case"boolean":case"string":return!0}return!1}!function(e){e[e.UNSET=0]="UNSET",e[e.OK=1]="OK",e[e.ERROR=2]="ERROR"}(Ui||(Ui={}));var Yi,zi="exception.type",Ki="exception.message",Ji="exception.stacktrace",Xi=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Zi=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,s,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)o.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(s)throw s.error}}return o},er=function(){function e(e,t,i,r,s,n,o,a,c){void 0===o&&(o=[]),this.attributes={},this.links=[],this.events=[],this._droppedAttributesCount=0,this._droppedEventsCount=0,this._droppedLinksCount=0,this.status={code:Ui.UNSET},this.endTime=[0,0],this._ended=!1,this._duration=[-1,-1],this.name=i,this._spanContext=r,this.parentSpanId=n,this.kind=s,this.links=o;var l=Date.now();this._performanceStartTime=Pe.now(),this._performanceOffset=l-(this._performanceStartTime+_e()),this._startTimeProvided=null!=a,this.startTime=this._getTime(null!=a?a:l),this.resource=e.resource,this.instrumentationLibrary=e.instrumentationLibrary,this._spanLimits=e.getSpanLimits(),this._spanProcessor=e.getActiveSpanProcessor(),this._spanProcessor.onStart(this,t),this._attributeValueLengthLimit=this._spanLimits.attributeValueLengthLimit||0}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return null==t||this._isSpanEnded()?this:0===e.length?(ee.warn("Invalid attribute key: "+e),this):ji(t)?Object.keys(this.attributes).length>=this._spanLimits.attributeCountLimit&&!Object.prototype.hasOwnProperty.call(this.attributes,e)?(this._droppedAttributesCount++,this):(this.attributes[e]=this._truncateToSize(t),this):(ee.warn("Invalid attribute value set for key: "+e),this)},e.prototype.setAttributes=function(e){var t,i;try{for(var r=Xi(Object.entries(e)),s=r.next();!s.done;s=r.next()){var n=Zi(s.value,2),o=n[0],a=n[1];this.setAttribute(o,a)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(i=r.return)&&i.call(r)}finally{if(t)throw t.error}}return this},e.prototype.addEvent=function(e,t,i){if(this._isSpanEnded())return this;if(0===this._spanLimits.eventCountLimit)return ee.warn("No events allowed."),this._droppedEventsCount++,this;this.events.length>=this._spanLimits.eventCountLimit&&(ee.warn("Dropping extra events."),this.events.shift(),this._droppedEventsCount++),$e(t)&&($e(i)||(i=t),t=void 0);var r=Vi(t);return this.events.push({name:e,attributes:r,time:this._getTime(i),droppedAttributesCount:0}),this},e.prototype.setStatus=function(e){return this._isSpanEnded()||(this.status=e),this},e.prototype.updateName=function(e){return this._isSpanEnded()||(this.name=e),this},e.prototype.end=function(e){this._isSpanEnded()?ee.error(this.name+" "+this._spanContext.traceId+"-"+this._spanContext.spanId+" - You can only call end() on a span once."):(this._ended=!0,this.endTime=this._getTime(e),this._duration=function(e,t){var i=t[0]-e[0],r=t[1]-e[1];return r<0&&(i-=1,r+=De),[i,r]}(this.startTime,this.endTime),this._duration[0]<0&&(ee.warn("Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.",this.startTime,this.endTime),this.endTime=this.startTime.slice(),this._duration=[0,0]),this._spanProcessor.onEnd(this))},e.prototype._getTime=function(e){if("number"==typeof e&&e<Pe.now())return Te(e+this._performanceOffset);if("number"==typeof e)return Re(e);if(e instanceof Date)return Re(e.getTime());if(Fe(e))return e;if(this._startTimeProvided)return Re(Date.now());var t=Pe.now()-this._performanceStartTime;return Ie(this.startTime,Re(t))},e.prototype.isRecording=function(){return!1===this._ended},e.prototype.recordException=function(e,t){var i={};"string"==typeof e?i[Ki]=e:e&&(e.code?i[zi]=e.code.toString():e.name&&(i[zi]=e.name),e.message&&(i[Ki]=e.message),e.stack&&(i[Ji]=e.stack)),i[zi]||i[Ki]?this.addEvent("exception",i,t):ee.warn("Failed to record an exception "+e)},Object.defineProperty(e.prototype,"duration",{get:function(){return this._duration},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"ended",{get:function(){return this._ended},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"droppedAttributesCount",{get:function(){return this._droppedAttributesCount},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"droppedEventsCount",{get:function(){return this._droppedEventsCount},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"droppedLinksCount",{get:function(){return this._droppedLinksCount},enumerable:!1,configurable:!0}),e.prototype._isSpanEnded=function(){return this._ended&&ee.warn("Can not execute the operation on ended Span {traceId: "+this._spanContext.traceId+", spanId: "+this._spanContext.spanId+"}"),this._ended},e.prototype._truncateToLimitUtil=function(e,t){return e.length<=t?e:e.substr(0,t)},e.prototype._truncateToSize=function(e){var t=this,i=this._attributeValueLengthLimit;return i<=0?(ee.warn("Attribute value limit must be positive, got "+i),e):"string"==typeof e?this._truncateToLimitUtil(e,i):Array.isArray(e)?e.map((function(e){return"string"==typeof e?t._truncateToLimitUtil(e,i):e})):e},e}();!function(e){e[e.NOT_RECORD=0]="NOT_RECORD",e[e.RECORD=1]="RECORD",e[e.RECORD_AND_SAMPLED=2]="RECORD_AND_SAMPLED"}(Yi||(Yi={}));var tr=function(){function e(){}return e.prototype.shouldSample=function(){return{decision:Yi.NOT_RECORD}},e.prototype.toString=function(){return"AlwaysOffSampler"},e}(),ir=function(){function e(){}return e.prototype.shouldSample=function(){return{decision:Yi.RECORD_AND_SAMPLED}},e.prototype.toString=function(){return"AlwaysOnSampler"},e}();var rr=function(e){ee.error(function(e){return"string"==typeof e?e:JSON.stringify(function(e){for(var t={},i=e;null!==i;)Object.getOwnPropertyNames(i).forEach((function(e){if(!t[e]){var r=i[e];r&&(t[e]=String(r))}})),i=Object.getPrototypeOf(i);return t}(e))}(e))};function sr(e){try{rr(e)}catch(e){}}var nr=function(){function e(e){var t,i,r,s;this._root=e.root,this._root||(sr(new Error("ParentBasedSampler must have a root sampler configured")),this._root=new ir),this._remoteParentSampled=null!==(t=e.remoteParentSampled)&&void 0!==t?t:new ir,this._remoteParentNotSampled=null!==(i=e.remoteParentNotSampled)&&void 0!==i?i:new tr,this._localParentSampled=null!==(r=e.localParentSampled)&&void 0!==r?r:new ir,this._localParentNotSampled=null!==(s=e.localParentNotSampled)&&void 0!==s?s:new tr}return e.prototype.shouldSample=function(e,t,i,r,s,n){var o=qt.getSpanContext(e);return o&&Bt(o)?o.isRemote?o.traceFlags&dt.SAMPLED?this._remoteParentSampled.shouldSample(e,t,i,r,s,n):this._remoteParentNotSampled.shouldSample(e,t,i,r,s,n):o.traceFlags&dt.SAMPLED?this._localParentSampled.shouldSample(e,t,i,r,s,n):this._localParentNotSampled.shouldSample(e,t,i,r,s,n):this._root.shouldSample(e,t,i,r,s,n)},e.prototype.toString=function(){return"ParentBased{root="+this._root.toString()+", remoteParentSampled="+this._remoteParentSampled.toString()+", remoteParentNotSampled="+this._remoteParentNotSampled.toString()+", localParentSampled="+this._localParentSampled.toString()+", localParentNotSampled="+this._localParentNotSampled.toString()+"}"},e}(),or=function(){function e(e){void 0===e&&(e=0),this._ratio=e,this._ratio=this._normalize(e),this._upperBound=Math.floor(4294967295*this._ratio)}return e.prototype.shouldSample=function(e,t){return{decision:Et(t)&&this._accumulate(t)<this._upperBound?Yi.RECORD_AND_SAMPLED:Yi.NOT_RECORD}},e.prototype.toString=function(){return"TraceIdRatioBased{"+this._ratio+"}"},e.prototype._normalize=function(e){return"number"!=typeof e||isNaN(e)?0:e>=1?1:e<=0?0:e},e.prototype._accumulate=function(e){for(var t=0,i=0;i<e.length/8;i++){var r=8*i;t=(t^parseInt(e.slice(r,r+8),16))>>>0}return t},e}(),ar=Z(),cr=_.AlwaysOn,lr=1;function hr(){return{sampler:ur(ar),forceFlushTimeoutMillis:3e4,generalLimits:{attributeValueLengthLimit:Z().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:Z().OTEL_ATTRIBUTE_COUNT_LIMIT},spanLimits:{attributeValueLengthLimit:Z().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:Z().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,linkCountLimit:Z().OTEL_SPAN_LINK_COUNT_LIMIT,eventCountLimit:Z().OTEL_SPAN_EVENT_COUNT_LIMIT,attributePerEventCountLimit:Z().OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,attributePerLinkCountLimit:Z().OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT}}}function ur(e){switch(void 0===e&&(e=Z()),e.OTEL_TRACES_SAMPLER){case _.AlwaysOn:return new ir;case _.AlwaysOff:return new tr;case _.ParentBasedAlwaysOn:return new nr({root:new ir});case _.ParentBasedAlwaysOff:return new nr({root:new tr});case _.TraceIdRatio:return new or(dr(e));case _.ParentBasedTraceIdRatio:return new nr({root:new or(dr(e))});default:return ee.error('OTEL_TRACES_SAMPLER value "'+e.OTEL_TRACES_SAMPLER+" invalid, defaulting to "+cr+'".'),new ir}}function dr(e){if(void 0===e.OTEL_TRACES_SAMPLER_ARG||""===e.OTEL_TRACES_SAMPLER_ARG)return ee.error("OTEL_TRACES_SAMPLER_ARG is blank, defaulting to "+lr+"."),lr;var t=Number(e.OTEL_TRACES_SAMPLER_ARG);return isNaN(t)?(ee.error("OTEL_TRACES_SAMPLER_ARG="+e.OTEL_TRACES_SAMPLER_ARG+" was given, but it is invalid, defaulting to "+lr+"."),lr):t<0||t>1?(ee.error("OTEL_TRACES_SAMPLER_ARG="+e.OTEL_TRACES_SAMPLER_ARG+" was given, but it is out of range ([0..1]), defaulting to "+lr+"."),lr):t}function pr(e){var t,i,r,s,n,o,a,c,l,h,u,d,p=Object.assign({},e.spanLimits),m="undefined"!=typeof process&&process&&process.env?X(process.env):X(B);return p.attributeCountLimit=null!==(o=null!==(n=null!==(s=null!==(i=null===(t=e.spanLimits)||void 0===t?void 0:t.attributeCountLimit)&&void 0!==i?i:null===(r=e.generalLimits)||void 0===r?void 0:r.attributeCountLimit)&&void 0!==s?s:m.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT)&&void 0!==n?n:m.OTEL_ATTRIBUTE_COUNT_LIMIT)&&void 0!==o?o:q,p.attributeValueLengthLimit=null!==(d=null!==(u=null!==(h=null!==(c=null===(a=e.spanLimits)||void 0===a?void 0:a.attributeValueLengthLimit)&&void 0!==c?c:null===(l=e.generalLimits)||void 0===l?void 0:l.attributeValueLengthLimit)&&void 0!==h?h:m.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT)&&void 0!==u?u:m.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT)&&void 0!==d?d:V,Object.assign({},e,{spanLimits:p})}var mr=function(){this.generateTraceId=fr(16),this.generateSpanId=fr(8)},gr=Array(32);function fr(e){return function(){for(var t=0;t<2*e;t++)gr[t]=Math.floor(16*Math.random())+48,gr[t]>=58&&(gr[t]+=39);return String.fromCharCode.apply(null,gr.slice(0,2*e))}}var wr=function(){function e(e,t,i){this._tracerProvider=i;var r,s,n,o,a=(r=t,s={sampler:ur()},n=hr(),(o=Object.assign({},n,s,r)).generalLimits=Object.assign({},n.generalLimits,r.generalLimits||{}),o.spanLimits=Object.assign({},n.spanLimits,r.spanLimits||{}),o);this._sampler=a.sampler,this._generalLimits=a.generalLimits,this._spanLimits=a.spanLimits,this._idGenerator=t.idGenerator||new mr,this.resource=i.resource,this.instrumentationLibrary=e}return e.prototype.startSpan=function(e,t,i){var s,n,o;void 0===t&&(t={}),void 0===i&&(i=jt.active()),t.root&&(i=qt.deleteSpan(i));var a=qt.getSpan(i);if(Ti(i))return ee.debug("Instrumentation suppressed, returning Noop Span"),qt.wrapSpanContext(Pt);var c,l,h,u=null==a?void 0:a.spanContext(),d=this._idGenerator.generateSpanId();u&&qt.isSpanContextValid(u)?(c=u.traceId,l=u.traceState,h=u.spanId):c=this._idGenerator.generateTraceId();var p=null!==(s=t.kind)&&void 0!==s?s:r.INTERNAL,m=(null!==(n=t.links)&&void 0!==n?n:[]).map((function(e){return{context:e.context,attributes:Vi(e.attributes)}})),g=Vi(t.attributes),f=this._sampler.shouldSample(i,c,e,p,g,m);l=null!==(o=f.traceState)&&void 0!==o?o:l;var w={traceId:c,spanId:d,traceFlags:f.decision===Mi.RECORD_AND_SAMPLED?dt.SAMPLED:dt.NONE,traceState:l};if(f.decision===Mi.NOT_RECORD)return ee.debug("Recording is off, propagating context in a non-recording span"),qt.wrapSpanContext(w);var v=new er(this,i,e,w,p,h,m,t.startTime),y=Vi(Object.assign(g,f.attributes));return v.setAttributes(y),v},e.prototype.startActiveSpan=function(e,t,i,r){var s,n,o;if(!(arguments.length<2)){2===arguments.length?o=t:3===arguments.length?(s=t,o=i):(s=t,n=i,o=r);var a=null!=n?n:jt.active(),c=this.startSpan(e,s,a),l=qt.setSpan(a,c);return jt.with(l,o,void 0,c)}},e.prototype.getGeneralLimits=function(){return this._generalLimits},e.prototype.getSpanLimits=function(){return this._spanLimits},e.prototype.getActiveSpanProcessor=function(){return this._tracerProvider.getActiveSpanProcessor()},e}(),vr=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},yr=function(){function e(e){this._spanProcessors=e}return e.prototype.forceFlush=function(){var e,t,i=[];try{for(var r=vr(this._spanProcessors),s=r.next();!s.done;s=r.next()){var n=s.value;i.push(n.forceFlush())}}catch(t){e={error:t}}finally{try{s&&!s.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return new Promise((function(e){Promise.all(i).then((function(){e()})).catch((function(t){sr(t||new Error("MultiSpanProcessor: forceFlush failed")),e()}))}))},e.prototype.onStart=function(e,t){var i,r;try{for(var s=vr(this._spanProcessors),n=s.next();!n.done;n=s.next()){n.value.onStart(e,t)}}catch(e){i={error:e}}finally{try{n&&!n.done&&(r=s.return)&&r.call(s)}finally{if(i)throw i.error}}},e.prototype.onEnd=function(e){var t,i;try{for(var r=vr(this._spanProcessors),s=r.next();!s.done;s=r.next()){s.value.onEnd(e)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(i=r.return)&&i.call(r)}finally{if(t)throw t.error}}},e.prototype.shutdown=function(){var e,t,i=[];try{for(var r=vr(this._spanProcessors),s=r.next();!s.done;s=r.next()){var n=s.value;i.push(n.shutdown())}}catch(t){e={error:t}}finally{try{s&&!s.done&&(t=r.return)&&t.call(r)}finally{if(e)throw e.error}}return new Promise((function(e,t){Promise.all(i).then((function(){e()}),t)}))},e}(),br=function(){function e(){}return e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){},e.prototype.shutdown=function(){return Promise.resolve()},e.prototype.forceFlush=function(){return Promise.resolve()},e}();var Cr,Ar=function(){function e(e,t){this._exporter=e,this._isExporting=!1,this._finishedSpans=[],this._droppedSpansCount=0;var i=Z();this._maxExportBatchSize="number"==typeof(null==t?void 0:t.maxExportBatchSize)?t.maxExportBatchSize:i.OTEL_BSP_MAX_EXPORT_BATCH_SIZE,this._maxQueueSize="number"==typeof(null==t?void 0:t.maxQueueSize)?t.maxQueueSize:i.OTEL_BSP_MAX_QUEUE_SIZE,this._scheduledDelayMillis="number"==typeof(null==t?void 0:t.scheduledDelayMillis)?t.scheduledDelayMillis:i.OTEL_BSP_SCHEDULE_DELAY,this._exportTimeoutMillis="number"==typeof(null==t?void 0:t.exportTimeoutMillis)?t.exportTimeoutMillis:i.OTEL_BSP_EXPORT_TIMEOUT,this._shutdownOnce=new le(this._shutdown,this),this._maxExportBatchSize>this._maxQueueSize&&(ee.warn("BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize"),this._maxExportBatchSize=this._maxQueueSize)}return e.prototype.forceFlush=function(){return this._shutdownOnce.isCalled?this._shutdownOnce.promise:this._flushAll()},e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){this._shutdownOnce.isCalled||0!=(e.spanContext().traceFlags&dt.SAMPLED)&&this._addToBuffer(e)},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype._shutdown=function(){var e=this;return Promise.resolve().then((function(){return e.onShutdown()})).then((function(){return e._flushAll()})).then((function(){return e._exporter.shutdown()}))},e.prototype._addToBuffer=function(e){if(this._finishedSpans.length>=this._maxQueueSize)return 0===this._droppedSpansCount&&ee.debug("maxQueueSize reached, dropping spans"),void this._droppedSpansCount++;this._droppedSpansCount>0&&(ee.warn("Dropped "+this._droppedSpansCount+" spans because maxQueueSize reached"),this._droppedSpansCount=0),this._finishedSpans.push(e),this._maybeStartTimer()},e.prototype._flushAll=function(){var e=this;return new Promise((function(t,i){for(var r=[],s=0,n=Math.ceil(e._finishedSpans.length/e._maxExportBatchSize);s<n;s++)r.push(e._flushOneBatch());Promise.all(r).then((function(){t()})).catch(i)}))},e.prototype._flushOneBatch=function(){var e=this;return this._clearTimer(),0===this._finishedSpans.length?Promise.resolve():new Promise((function(t,i){var r=setTimeout((function(){i(new Error("Timeout"))}),e._exportTimeoutMillis);jt.with(_i(jt.active()),(function(){var s=e._finishedSpans.splice(0,e._maxExportBatchSize),n=function(){return e._exporter.export(s,(function(e){var s;clearTimeout(r),e.code===ne.SUCCESS?t():i(null!==(s=e.error)&&void 0!==s?s:new Error("BatchSpanProcessor: span export failed"))}))},o=s.map((function(e){return e.resource})).filter((function(e){return e.asyncAttributesPending}));0===o.length?n():Promise.all(o.map((function(e){var t;return null===(t=e.waitForAsyncAttributes)||void 0===t?void 0:t.call(e)}))).then(n,(function(e){sr(e),i(e)}))}))}))},e.prototype._maybeStartTimer=function(){var e=this;if(!this._isExporting){var t=function(){e._isExporting=!0,e._flushOneBatch().then((function(){e._isExporting=!1,e._finishedSpans.length>0&&(e._clearTimer(),e._maybeStartTimer())})).catch((function(t){e._isExporting=!1,sr(t)}))};if(this._finishedSpans.length>=this._maxExportBatchSize)return t();void 0===this._timer&&(this._timer=setTimeout((function(){return t()}),this._scheduledDelayMillis),this._timer)}},e.prototype._clearTimer=function(){void 0!==this._timer&&(clearTimeout(this._timer),this._timer=void 0)},e}(),Sr=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}(),Pr=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.onInit(i),r}return Sr(t,e),t.prototype.onInit=function(e){var t=this;!0!==(null==e?void 0:e.disableAutoFlushOnDocumentHide)&&"undefined"!=typeof document&&(this._visibilityChangeListener=function(){"hidden"===document.visibilityState&&t.forceFlush()},this._pageHideListener=function(){t.forceFlush()},document.addEventListener("visibilitychange",this._visibilityChangeListener),document.addEventListener("pagehide",this._pageHideListener))},t.prototype.onShutdown=function(){"undefined"!=typeof document&&(this._visibilityChangeListener&&document.removeEventListener("visibilitychange",this._visibilityChangeListener),this._pageHideListener&&document.removeEventListener("pagehide",this._pageHideListener))},t}(Ar);!function(e){e[e.resolved=0]="resolved",e[e.timeout=1]="timeout",e[e.error=2]="error",e[e.unresolved=3]="unresolved"}(Cr||(Cr={}));var kr=function(){function e(e){var t;void 0===e&&(e={}),this._registeredSpanProcessors=[],this._tracers=new Map;var i=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var i=e.shift(),r=new WeakMap;e.length>0;)i=yi(i,e.shift(),0,r);return i}({},hr(),pr(e));this.resource=null!==(t=i.resource)&&void 0!==t?t:ht.empty(),this.resource=ht.default().merge(this.resource),this._config=Object.assign({},i,{resource:this.resource});var r=this._buildExporterFromEnv();if(void 0!==r){var s=new Pr(r);this.activeSpanProcessor=s}else this.activeSpanProcessor=new br}return e.prototype.getTracer=function(e,t,i){var r=e+"@"+(t||"")+":"+((null==i?void 0:i.schemaUrl)||"");return this._tracers.has(r)||this._tracers.set(r,new wr({name:e,version:t,schemaUrl:null==i?void 0:i.schemaUrl},this._config,this)),this._tracers.get(r)},e.prototype.addSpanProcessor=function(e){0===this._registeredSpanProcessors.length&&this.activeSpanProcessor.shutdown().catch((function(e){return ee.error("Error while trying to shutdown current span processor",e)})),this._registeredSpanProcessors.push(e),this.activeSpanProcessor=new yr(this._registeredSpanProcessors)},e.prototype.getActiveSpanProcessor=function(){return this.activeSpanProcessor},e.prototype.register=function(e){void 0===e&&(e={}),qt.setGlobalTracerProvider(this),void 0===e.propagator&&(e.propagator=this._buildPropagatorFromEnv()),e.contextManager&&jt.setGlobalContextManager(e.contextManager),e.propagator&&ni.setGlobalPropagator(e.propagator)},e.prototype.forceFlush=function(){var e=this._config.forceFlushTimeoutMillis,t=this._registeredSpanProcessors.map((function(t){return new Promise((function(i){var r,s=setTimeout((function(){i(new Error("Span processor did not completed within timeout period of "+e+" ms")),r=Cr.timeout}),e);t.forceFlush().then((function(){clearTimeout(s),r!==Cr.timeout&&(r=Cr.resolved,i(r))})).catch((function(e){clearTimeout(s),r=Cr.error,i(e)}))}))}));return new Promise((function(e,i){Promise.all(t).then((function(t){var r=t.filter((function(e){return e!==Cr.resolved}));r.length>0?i(r):e()})).catch((function(e){return i([e])}))}))},e.prototype.shutdown=function(){return this.activeSpanProcessor.shutdown()},e.prototype._getPropagator=function(e){var t;return null===(t=this.constructor._registeredPropagators.get(e))||void 0===t?void 0:t()},e.prototype._getSpanExporter=function(e){var t;return null===(t=this.constructor._registeredExporters.get(e))||void 0===t?void 0:t()},e.prototype._buildPropagatorFromEnv=function(){var e=this,t=Array.from(new Set(Z().OTEL_PROPAGATORS)),i=t.map((function(t){var i=e._getPropagator(t);return i||ee.warn('Propagator "'+t+'" requested through environment variable is unavailable.'),i})).reduce((function(e,t){return t&&e.push(t),e}),[]);return 0===i.length?void 0:1===t.length?i[0]:new Di({propagators:i})},e.prototype._buildExporterFromEnv=function(){var e=Z().OTEL_TRACES_EXPORTER;if("none"!==e&&""!==e){var t=this._getSpanExporter(e);return t||ee.error('Exporter "'+e+'" requested through environment variable is unavailable.'),t}},e._registeredPropagators=new Map([["tracecontext",function(){return new Ni}],["baggage",function(){return new Li}]]),e._registeredExporters=new Map,e}();var Dr={_export:function(e,t){return new Promise((function(i){jt.with(_i(jt.active()),(function(){e.export(t,(function(e){i(e)}))}))}))}},Rr=function(e,t,i,r){return new(i||(i=Promise))((function(s,n){function o(e){try{c(r.next(e))}catch(e){n(e)}}function a(e){try{c(r.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((r=r.apply(e,t||[])).next())}))},_r=function(e,t){var i,r,s,n,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return n={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function a(n){return function(a){return function(n){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,r&&(s=2&n[0]?r.return:n[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,n[1])).done)return s;switch(r=0,s&&(n=[2&n[0],s.value]),n[0]){case 0:case 1:s=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,r=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!s||n[1]>s[0]&&n[1]<s[3])){o.label=n[1];break}if(6===n[0]&&o.label<s[1]){o.label=s[1],s=n;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(n);break}s[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],r=0}finally{i=s=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,a])}}},Tr=function(){function e(e){this._exporter=e,this._shutdownOnce=new le(this._shutdown,this),this._unresolvedExports=new Set}return e.prototype.forceFlush=function(){return Rr(this,void 0,void 0,(function(){return _r(this,(function(e){switch(e.label){case 0:return[4,Promise.all(Array.from(this._unresolvedExports))];case 1:return e.sent(),this._exporter.forceFlush?[4,this._exporter.forceFlush()]:[3,3];case 2:e.sent(),e.label=3;case 3:return[2]}}))}))},e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){var t,i,r=this;if(!this._shutdownOnce.isCalled&&0!=(e.spanContext().traceFlags&dt.SAMPLED)){var s=function(){return Dr._export(r._exporter,[e]).then((function(e){var t;e.code!==ne.SUCCESS&&sr(null!==(t=e.error)&&void 0!==t?t:new Error("SimpleSpanProcessor: span export failed (status "+e+")"))})).catch((function(e){sr(e)}))};if(e.resource.asyncAttributesPending){var n=null===(i=(t=e.resource).waitForAsyncAttributes)||void 0===i?void 0:i.call(t).then((function(){return null!=n&&r._unresolvedExports.delete(n),s()}),(function(e){return sr(e)}));null!=n&&this._unresolvedExports.add(n)}else s()}},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype._shutdown=function(){return this._exporter.shutdown()},e}();class OpenTelemetryProvider{_globalAttributes={};provider;tracer;constructor(e,t,i){this.provider=new kr({resource:new ht({[et]:"gitlens",[tt]:e.extensionVersion,[Ke]:e.env,[Je]:e.machineId,[Xe]:e.platform,"extension.id":e.extensionId,"session.id":e.sessionId,language:e.language,"vscode.edition":e.vscodeEdition,"vscode.version":e.vscodeVersion,"vscode.host":e.vscodeHost,"vscode.remoteName":e.vscodeRemoteName,"vscode.shell":e.vscodeShell,"vscode.uiKind":e.vscodeUIKind})});const r=new ze({url:i?"https://otel-dev.gitkraken.com:4318/v1/traces":"https://otel.gitkraken.com:4318/v1/traces",compression:"gzip",httpAgentOptions:t?.options});this.provider.addSpanProcessor(i?new Tr(r):new Pr(r)),this.tracer=this.provider.getTracer(e.extensionId)}dispose(){this.provider.shutdown()}sendEvent(e,t,i,s){const n=this.tracer.startSpan(e,{attributes:this._globalAttributes,kind:r.INTERNAL,startTime:i??Date.now()});null!=t&&n.setAttributes(t),n.end(s)}startEvent(e,t,i){const s=this.tracer.startSpan(e,{attributes:this._globalAttributes,kind:r.INTERNAL,startTime:i??Date.now()});return null!=t&&s.setAttributes(t),s}setGlobalAttributes(e){this._globalAttributes=Object.fromEntries(e)}}},4043:(e,t,i)=>{i.d(t,{$k:()=>o,$x:()=>a,VE:()=>n,WA:()=>h,_n:()=>r,eT:()=>u,gn:()=>d,l5:()=>s,lX:()=>c,mg:()=>l});var r=(e=>(e.Branch="b",e.Commit="c",e.Comparison="compare",e.Draft="drafts",e.Repository="r",e.Tag="t",e.Workspace="workspace",e))(r||{});const s=["drafts","workspace"],n=[];function o(e){switch(e){case"b":return"Branch";case"c":return"Commit";case"compare":return"Comparison";case"drafts":return"Cloud Patch";case"r":return"Repository";case"t":return"Tag";case"workspace":return"Workspace";default:return"Unknown"}}function a(e){switch(e){case"branch":return"b";case"revision":return"c";case"tag":return"t";default:return"r"}}function c(e){const[,t,i,r,s,...n]=e.path.split("/");if("link"!==t)return;const o=new URLSearchParams(e.query);switch(i){case"r":{let e=o.get("url")??void 0;null!=e&&(e=decodeURIComponent(e));let t,i,a,c=o.get("path")??void 0;if(null!=c&&(c=decodeURIComponent(c)),!e&&!c)return;if(null==s)return{type:"r",mainId:r,remoteUrl:e,repoPath:c};if(null==n||0===n.length)return;const l=n.join("/");if("compare"===s){const e=l.split(/(\.\.\.|\.\.)/);if(3!==e.length)return;t=e[0],i=e[2],a=o.get("prRepoUrl")??void 0,null!=a&&(a=decodeURIComponent(a))}else t=l;return{type:s,mainId:r,remoteUrl:e,repoPath:c,targetId:t,secondaryTargetId:i,secondaryRemoteUrl:a}}case"drafts":{if(null==r||r.match(/^v\d+$/))return;let e=o.get("patch")??void 0;return null!=e&&(e=decodeURIComponent(e)),{type:"drafts",targetId:r,secondaryTargetId:e}}case"workspace":return{type:"workspace",mainId:r};default:return}}var l=(e=>(e[e.Idle=0]="Idle",e[e.AccountCheck=1]="AccountCheck",e[e.PlanCheck=2]="PlanCheck",e[e.TypeMatch=3]="TypeMatch",e[e.RepoMatch=4]="RepoMatch",e[e.CloneOrAddRepo=5]="CloneOrAddRepo",e[e.OpeningRepo=6]="OpeningRepo",e[e.AddedRepoMatch=7]="AddedRepoMatch",e[e.RemoteMatch=8]="RemoteMatch",e[e.AddRemote=9]="AddRemote",e[e.TargetMatch=10]="TargetMatch",e[e.Fetch=11]="Fetch",e[e.FetchedTargetMatch=12]="FetchedTargetMatch",e[e.OpenGraph=13]="OpenGraph",e[e.OpenComparison=14]="OpenComparison",e[e.OpenDraft=15]="OpenDraft",e[e.OpenWorkspace=16]="OpenWorkspace",e))(l||{}),h=(e=>(e[e.AccountCheckPassed=0]="AccountCheckPassed",e[e.DeepLinkEventFired=1]="DeepLinkEventFired",e[e.DeepLinkCancelled=2]="DeepLinkCancelled",e[e.DeepLinkResolved=3]="DeepLinkResolved",e[e.DeepLinkStored=4]="DeepLinkStored",e[e.DeepLinkErrored=5]="DeepLinkErrored",e[e.LinkIsRepoType=6]="LinkIsRepoType",e[e.LinkIsDraftType=7]="LinkIsDraftType",e[e.LinkIsWorkspaceType=8]="LinkIsWorkspaceType",e[e.OpenRepo=9]="OpenRepo",e[e.PlanCheckPassed=10]="PlanCheckPassed",e[e.RepoMatched=11]="RepoMatched",e[e.RepoMatchedInLocalMapping=12]="RepoMatchedInLocalMapping",e[e.RepoMatchFailed=13]="RepoMatchFailed",e[e.RepoAdded=14]="RepoAdded",e[e.RepoOpened=15]="RepoOpened",e[e.RemoteMatched=16]="RemoteMatched",e[e.RemoteMatchFailed=17]="RemoteMatchFailed",e[e.RemoteMatchUnneeded=18]="RemoteMatchUnneeded",e[e.RemoteAdded=19]="RemoteAdded",e[e.TargetMatched=20]="TargetMatched",e[e.TargetsMatched=21]="TargetsMatched",e[e.TargetMatchFailed=22]="TargetMatchFailed",e[e.TargetFetched=23]="TargetFetched",e))(h||{});const u={0:{1:1,2:0},1:{0:2,5:0,2:0},2:{10:3,5:0,2:0},3:{5:0,2:0,6:4,7:15,8:16},4:{5:0,11:8,12:5,13:5},5:{9:6,15:8,5:0,2:0,4:0},6:{14:7,5:0,2:0},7:{11:8,5:0},8:{5:0,16:10,17:9,18:10},9:{19:10,5:0,2:0},10:{5:0,20:13,21:14,22:11},11:{23:12,5:0,2:0},12:{20:13,21:14,5:0},13:{3:0,5:0},14:{3:0,5:0},15:{3:0,5:0},16:{3:0,5:0}},d={0:{message:"Done.",increment:100},1:{message:"Checking account...",increment:1},2:{message:"Checking plan...",increment:2},3:{message:"Matching link type...",increment:5},4:{message:"Finding a matching repository...",increment:10},5:{message:"Adding repository...",increment:20},6:{message:"Opening repository...",increment:30},7:{message:"Finding a matching repository...",increment:40},8:{message:"Finding a matching remote...",increment:50},9:{message:"Adding remote...",increment:60},10:{message:"finding a matching target...",increment:70},11:{message:"Fetching...",increment:80},12:{message:"Finding a matching target...",increment:90},13:{message:"Opening graph...",increment:95},14:{message:"Opening comparison...",increment:95},15:{message:"Opening cloud patch...",increment:95},16:{message:"Opening workspace...",increment:95}}},9165:(e,t,i)=>{i.d(t,{y:()=>CacheableChildrenViewNode});var r=i(1219),s=i(5517),n=i(7707),o=Object.defineProperty,a=Object.getOwnPropertyDescriptor,c=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?a(t,i):t,c=e.length-1;c>=0;c--)(s=e[c])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&o(t,i,n),n};class CacheableChildrenViewNode extends n.Re{_children;get children(){return this._children}set children(e){this._children!==e&&((0,s.Qu)(this._children,e),this._children=e)}dispose(){super.dispose(),this.children=void 0}refresh(e=!1){e&&(this.children=void 0)}}c([(0,r.fF)()],CacheableChildrenViewNode.prototype,"dispose",1),c([(0,r.fF)()],CacheableChildrenViewNode.prototype,"refresh",1)},5010:(e,t,i)=>{i.d(t,{v:()=>RepositoryFolderNode});var r=i(9496),s=i(5255),n=i(3050),o=i(3646),a=i(5432),c=i(1219),l=i(2185),h=i(3620),u=i(8583),d=i(7707),p=Object.defineProperty,m=Object.getOwnPropertyDescriptor,g=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n),n};class RepositoryFolderNode extends u.C{constructor(e,t,i,r,s,n){super("repo-folder",e,t,i),this.parent=i,this.repo=r,this.options=n,this.updateContext({repository:this.repo}),this._uniqueId=(0,d.tO)(this.type,this.context),this.splatted=s}splatted=!0;_child;get child(){return this._child}set child(e){this._child!==e&&(this._child?.dispose(),this._child=e)}dispose(){super.dispose(),this.child=void 0}get id(){return this._uniqueId}toClipboard(){return this.repo.path}get repoPath(){return this.repo.path}async getTreeItem(){this.splatted=!1;const e=await this.repo.getBranch(),t=(e?.state.ahead??0)>0,i=(e?.state.behind??0)>0,a=t||i||this.repo.starred||this.view.container.git.isRepositoryForEditor(this.repo),c=new r.TreeItem(this.repo.formattedName??this.uri.repoPath??"",a?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);if(c.contextValue=`${d.Td.RepositoryFolder}${this.repo.starred?"+starred":""}`,t&&(c.contextValue+="+ahead"),i&&(c.contextValue+="+behind"),"commits"===this.view.type&&this.view.state.filterCommits.get(this.repo.id)?.length&&(c.contextValue+="+filtered"),null!=e&&this.options?.showBranchAndLastFetched){const t=await this.repo.getLastFetched()??0,i=e.getTrackingStatus();let a;if(c.description=`${i?`${i}${(0,h.vk)(s.NE.Dot,1,1)}`:""}${e.name}${t?`${(0,h.vk)(s.NE.Dot,1,1)}Last fetched ${o._j.formatLastFetched(t)}`:""}`,null!=e.upstream){const t=n.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(e.repoPath));a=t?.length?t[0].name:void 0}else{const t=await e.getRemote();a=t?.provider?.name}c.tooltip=new r.MarkdownString(`${this.repo.formattedName??this.uri.repoPath??""}${t?`${(0,h.vk)(s.NE.Dash,2,2)}Last fetched ${o._j.formatLastFetched(t,!1)}`:""}${this.repo.formattedName?`\n${this.uri.repoPath}`:""}\n\nCurrent branch $(git-branch) ${e.name}${null!=e.upstream?` is ${e.getTrackingStatus({empty:e.upstream.missing?`missing upstream $(git-branch) ${e.upstream.name}`:`up to date with $(git-branch) ${e.upstream.name}${a?` on ${a}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${e.upstream.name}${a?` on ${a}`:""}`})}`:`hasn't been published to ${a??"a remote"}`}`,!0)}else c.tooltip=`${this.repo.formattedName?`${this.repo.formattedName}\n${this.uri.repoPath}`:this.uri.repoPath??""}`;return c}async getSplattedChild(){return null==this.child&&await this.getChildren(),this.child}async refresh(e=!1){super.refresh(e),await(this.child?.triggerChange(e,!1,this)),await this.ensureSubscription()}async star(){await this.repo.star()}async unstar(){await this.repo.unstar()}subscribe(){return(0,l.D$)(this.repo.onDidChange,this.onRepositoryChanged,this)}etag(){return this.repo.etag}onRepositoryChanged(e){if(e.changed(o.I6.Closed,o.du.Any))return this.dispose(),void this.parent?.triggerChange(!0);if(e.changed(o.I6.Opened,o.du.Any)||e.changed(o.I6.Starred,o.du.Any))this.parent?.triggerChange(!0);else if(this.changed(e)){(!this.loaded||this.repo.orderByLastFetched?this.parent??this:this).triggerChange(!0)}}}g([(0,c.fF)()],RepositoryFolderNode.prototype,"dispose",1),g([(0,a.H)(),(0,c.fF)()],RepositoryFolderNode.prototype,"refresh",1),g([(0,c.cM)()],RepositoryFolderNode.prototype,"star",1),g([(0,c.cM)()],RepositoryFolderNode.prototype,"unstar",1),g([(0,c.fF)()],RepositoryFolderNode.prototype,"subscribe",1),g([(0,c.fF)({args:{0:e=>e.toString()}})],RepositoryFolderNode.prototype,"onRepositoryChanged",1)},8583:(e,t,i)=>{i.d(t,{C:()=>SubscribeableViewNode});var r=i(9496),s=i(5432),n=i(1219),o=i(2185),a=i(9165),c=i(7707),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n};class SubscribeableViewNode extends a.y{disposable;subscription;loaded=!1;constructor(e,t,i,s){super(e,t,i,s);const n=[(0,o.D$)(this.view.onDidChangeVisibility,this.onVisibilityChanged,this)];(0,c.ub)(this.view)&&n.push((0,o.D$)(this.view.onDidChangeAutoRefresh,this.onAutoRefreshChanged,this));const a=this.getTreeItem;this.getTreeItem=function(){return this.loaded=!0,this.ensureSubscription(),a.apply(this)};const l=this.getChildren;this.getChildren=function(){return this.loaded=!0,this.ensureSubscription(),l.apply(this)},this.disposable=r.Disposable.from(...n)}dispose(){super.dispose(),this.unsubscribe(),this.disposable?.dispose()}async triggerChange(e=!1,t=!1){this.loaded&&!this._disposed&&(e&&!this.view.visible&&(this._pendingReset=e),await super.triggerChange(e,t))}_canSubscribe=!0;get canSubscribe(){return this._canSubscribe&&!this._disposed}set canSubscribe(e){this._canSubscribe!==e&&(this._canSubscribe=e,this.ensureSubscription(),e&&this.triggerChange())}_etag;_pendingReset=!1;get requiresResetOnVisible(){let e=this._pendingReset;this._pendingReset=!1;const t=this.etag();return t!==this._etag&&(this._etag=t,e=!0),e}async unsubscribe(){if(this._etag=this.etag(),null!=this.subscription){const e=this.subscription;this.subscription=void 0,(await e)?.dispose()}}onAutoRefreshChanged(){this.onVisibilityChanged({visible:this.view.visible})}onVisibilityChanged(e){this.ensureSubscription(),e.visible&&this.triggerChange(this.requiresResetOnVisible)}async ensureSubscription(){this.canSubscribe&&this.view.visible&&(!(0,c.ub)(this.view)||this.view.autoRefresh)?null==this.subscription&&(this.subscription=Promise.resolve(this.subscribe()),await this.subscription):await this.unsubscribe()}async resetSubscription(){await this.unsubscribe(),await this.ensureSubscription()}}u([(0,n.fF)()],SubscribeableViewNode.prototype,"dispose",1),u([(0,s.H)(((e,t)=>`${e}|${t}`)),(0,n.fF)()],SubscribeableViewNode.prototype,"triggerChange",1),u([(0,n.fF)()],SubscribeableViewNode.prototype,"unsubscribe",1),u([(0,n.fF)()],SubscribeableViewNode.prototype,"onAutoRefreshChanged",1),u([(0,n.fF)()],SubscribeableViewNode.prototype,"onVisibilityChanged",1),u([(0,s.H)(),(0,n.fF)()],SubscribeableViewNode.prototype,"ensureSubscription",1),u([(0,s.H)(),(0,n.fF)()],SubscribeableViewNode.prototype,"resetSubscription",1)},5209:(e,t,i)=>{i.d(t,{T:()=>ViewFileNode,w:()=>s});var r=i(7707);class ViewFileNode extends r.Re{constructor(e,t,i,r,s){super(e,t,i,r),this.parent=r,this.file=s}get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${this.file.path}`}}function s(e){return e instanceof ViewFileNode}},7707:(e,t,i)=>{i.d(t,{FZ:()=>v,LD:()=>g,On:()=>p,Re:()=>d,Td:()=>h,kP:()=>f,pp:()=>w,tO:()=>u,ub:()=>m});var r=i(5432),s=i(1219),n=i(9796),o=i(4336),a=Object.defineProperty,c=Object.getOwnPropertyDescriptor,l=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&a(t,i,n),n},h=(e=>(e.ActiveFileHistory="gitlens:history:active:file",e.ActiveLineHistory="gitlens:history:active:line",e.AutolinkedItems="gitlens:autolinked:items",e.AutolinkedIssue="gitlens:autolinked:issue",e.AutolinkedItem="gitlens:autolinked:item",e.Branch="gitlens:branch",e.Branches="gitlens:branches",e.BranchStatusAheadOfUpstream="gitlens:status-branch:upstream:ahead",e.BranchStatusBehindUpstream="gitlens:status-branch:upstream:behind",e.BranchStatusNoUpstream="gitlens:status-branch:upstream:none",e.BranchStatusSameAsUpstream="gitlens:status-branch:upstream:same",e.BranchStatusFiles="gitlens:status-branch:files",e.Commit="gitlens:commit",e.Commits="gitlens:commits",e.Compare="gitlens:compare",e.CompareBranch="gitlens:compare:branch",e.ComparePicker="gitlens:compare:picker",e.ComparePickerWithRef="gitlens:compare:picker:ref",e.CompareResults="gitlens:compare:results",e.CompareResultsCommits="gitlens:compare:results:commits",e.Contributor="gitlens:contributor",e.Contributors="gitlens:contributors",e.DateMarker="gitlens:date-marker",e.Draft="gitlens:draft",e.File="gitlens:file",e.FileHistory="gitlens:history:file",e.Folder="gitlens:folder",e.LineHistory="gitlens:history:line",e.Merge="gitlens:merge",e.MergeConflictCurrentChanges="gitlens:merge-conflict:current",e.MergeConflictIncomingChanges="gitlens:merge-conflict:incoming",e.Message="gitlens:message",e.MessageSignIn="gitlens:message:signin",e.Pager="gitlens:pager",e.PullRequest="gitlens:pullrequest",e.Rebase="gitlens:rebase",e.Reflog="gitlens:reflog",e.ReflogRecord="gitlens:reflog-record",e.Remote="gitlens:remote",e.Remotes="gitlens:remotes",e.Repositories="gitlens:repositories",e.Repository="gitlens:repository",e.RepositoryFolder="gitlens:repo-folder",e.ResultsFile="gitlens:file:results",e.ResultsFiles="gitlens:results:files",e.SearchAndCompare="gitlens:searchAndCompare",e.SearchResults="gitlens:search:results",e.SearchResultsCommits="gitlens:search:results:commits",e.Stash="gitlens:stash",e.Stashes="gitlens:stashes",e.StatusFileCommits="gitlens:status:file:commits",e.StatusFiles="gitlens:status:files",e.StatusAheadOfUpstream="gitlens:status:upstream:ahead",e.StatusBehindUpstream="gitlens:status:upstream:behind",e.StatusNoUpstream="gitlens:status:upstream:none",e.StatusSameAsUpstream="gitlens:status:upstream:same",e.Tag="gitlens:tag",e.Tags="gitlens:tags",e.UncommittedFiles="gitlens:uncommitted:files",e.Workspace="gitlens:workspace",e.WorkspaceMissingRepository="gitlens:workspaceMissingRepository",e.Workspaces="gitlens:workspaces",e.Worktree="gitlens:worktree",e.Worktrees="gitlens:worktrees",e))(h||{});function u(e,t){let i="";return t.root&&(i+="/root"),null!=t.workspace&&(i+=`/ws/${t.workspace.id}`),null!=t.wsRepositoryDescriptor&&(i+=`/wsrepo/${t.wsRepositoryDescriptor.id}`),null!=t.repository&&(i+=`/repo/${t.repository.id}`),null!=t.worktree&&(i+=`/worktree/${t.worktree.uri.path}`),null!=t.remote&&(i+=`/remote/${t.remote.name}`),null!=t.tag&&(i+=`/tag/${t.tag.id}`),null!=t.branch&&(i+=`/branch/${t.branch.id}`),null!=t.branchStatus&&(i+=`/branch-status/${t.branchStatus.upstream??"-"}`),null!=t.branchStatusUpstreamType&&(i+=`/branch-status-direction/${t.branchStatusUpstreamType}`),null!=t.status&&(i+=`/status/${t.status}`),null!=t.reflog&&(i+=`/reflog/${t.reflog.sha}+${t.reflog.selector}+${t.reflog.command}+${t.reflog.commandArgs??""}+${t.reflog.date.getTime()}`),null!=t.contributor&&(i+=`/contributor/${t.contributor.id??`${t.contributor.username}+${t.contributor.email}+${t.contributor.name}`}`),null!=t.autolinksId&&(i+=`/autolinks/${t.autolinksId}`),null!=t.comparisonId&&(i+=`/comparison/${t.comparisonId}`),null!=t.searchId&&(i+=`/search/${t.searchId}`),null!=t.commit&&(i+=`/commit/${t.commit.sha}`),null!=t.file&&(i+=`/file/${t.file.path}+${t.file.status}`),null!=t.draft&&(i+=`/draft/${t.draft.id}`),`gitlens://viewnode/${e}${i}`}let d=class{constructor(e,t,i,r){this.type=e,this.view=i,this.parent=r,this._uri=t}is(e){return this.type===e}_uniqueId;splatted=!1;_disposed=!1;dispose(){this._disposed=!0}get id(){return this._uniqueId}_context;get context(){return this._context??this.parent?.context??{}}updateContext(e,t=!1){this._context=this.getNewContext(e,t)}getNewContext(e,t=!1){return{...t?this.parent?.context:this.context,...e}}toString(){const e=this.id;return`${(0,o.q4)(this)}${null!=e?`(${e})`:""}`}_uri;get uri(){return this._uri}getParent(){return this.parent?.splatted?this.parent?.getParent():this.parent}getCommand(){}triggerChange(e=!1,t=!1,i){return this._disposed?Promise.resolve():this.splatted&&null!=this.parent&&this.parent!==i?this.parent.triggerChange(e,t):this.view.refreshNode(this,e,t)}deleteState(e){if(null==this.id)throw new Error("Id is required to delete state");this.view.nodeState.deleteState(this.id,e)}getState(e){if(null==this.id)throw new Error("Id is required to get state");return this.view.nodeState.getState(this.id,e)}storeState(e,t,i){if(null==this.id)throw new Error("Id is required to store state");this.view.nodeState.storeState(this.id,e,t,i)}};function p(e){return(0,n.is)(e,"loadMore")}function m(e){return(0,n.is)(e,"onDidChangeAutoRefresh")}function g(e){return"function"==typeof e.edit}function f(e){return"function"==typeof e.dismissNode}function w(e){return function(e){return null!=e&&"repoPath"in e&&"string"==typeof e.repoPath}(e)?e.repoPath:void 0}function v(e,t){return null!=e&&(e instanceof d&&(null==t||e.type===t))}l([(0,s.fF)()],d.prototype,"dispose",1),l([(0,r.H)(((e,t,i)=>`${e}|${t}|${i?.toString()}`)),(0,s.fF)()],d.prototype,"triggerChange",1),d=l([(0,s.hJ)(((e,t)=>`${t}${null!=e.id?`(${e.id})`:""}`))],d)},2610:(e,t,i)=>{i.d(t,{R:()=>ViewRefFileNode,b:()=>ViewRefNode});var r=i(4321),s=i(5209),n=i(7707);class ViewRefNode extends n.Re{constructor(e,t,i,r){super(e,t,i,r),this.parent=r}get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${(0,r.Wh)(this.ref,!1)}`}}class ViewRefFileNode extends s.T{toString(){return`${super.toString()}:${this.file.path}`}}},1185:(e,t,i)=>{i.d(t,{Z:()=>AutolinkedItemNode});var r=i(9496),s=i(7462),n=i(8452),o=i(7512),a=i(7469),c=i(7707);class AutolinkedItemNode extends c.Re{constructor(e,t,i,r,n){super("autolink",s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.item=r,this.enrichedItem=n,this._uniqueId=(0,c.tO)(`${this.type}+${r.id}`,this.context)}get id(){return this._uniqueId}toClipboard(){return this.item.url}getChildren(){return[]}getTreeItem(){const e=this.enrichedItem,t=(0,a.tI)(e);if(t&&e.then((e=>{this.enrichedItem=e,this.view.triggerNodeChange(this)})),t||null==e){const e=this.item,{provider:i}=e,s=new r.TreeItem(e.description??`Autolink ${e.prefix}${e.id}`,r.TreeItemCollapsibleState.None);return s.description=i?.name??"Custom",s.iconPath=new r.ThemeIcon(t?"loading~spin":null==e.type?"link":"pullrequest"===e.type?"git-pull-request":"issues"),s.contextValue=c.Td.AutolinkedItem,s.tooltip=new r.MarkdownString(`${e.description?`Autolinked ${e.description}`:`${null==e.type?"Autolinked":"pullrequest"===e.type?"Autolinked Pull Request":"Autolinked Issue"} ${e.prefix}${e.id}`} \\\n[${e.url}](${e.url}${null!=e.title?` "${e.title}"`:""})`),s}const i=(0,o.Zh)(e.closedDate??e.date),s=new r.TreeItem(`${e.id}: ${e.title}`,r.TreeItemCollapsibleState.None);s.description=i,s.iconPath=(0,n.xX)(e),s.contextValue="pullrequest"===e.type?c.Td.PullRequest:c.Td.AutolinkedIssue;const l=` "Open ${"pullrequest"===e.type?"Pull Request":"Issue"} \\#${e.id} on ${e.provider.name}"`,h=new r.MarkdownString(`${(0,n.sy)(e)} [**${e.title.trim()}**](${e.url}${l}) \\\n[#${e.id}](${e.url}${l}) was ${e.closed?"closed":"opened"} ${i}`,!0);return h.supportHtml=!0,h.isTrusted=!0,s.tooltip=h,s}}},2601:(e,t,i)=>{i.d(t,{R:()=>CommitFileNode,q:()=>CommitFileNodeBase});var r=i(9496),s=i(5255),n=i(6373),o=i(7462),a=i(7881),c=i(3700),l=i(7707),h=i(2610);class CommitFileNodeBase extends h.R{constructor(e,t,i,r,s,n){super(e,o.YY.fromFile(r,s.repoPath,s.sha),t,i,r),this.commit=s,this.options=n,this.updateContext({commit:s,file:r}),this._uniqueId=(0,l.tO)(e,this.context)}get id(){return this._uniqueId}toClipboard(){return this.file.path}get priority(){return 0}get ref(){return this.commit}getChildren(){return[]}async getTreeItem(){if(null==this.commit.file){const e=await this.commit.getCommitForFile(this.file);if(null==e){const e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);if(e.id=this.id,e.contextValue=this.contextValue,e.description=this.description,"type"===this.view.config.files.icon)e.resourceUri=r.Uri.from({scheme:s.sN.Git,authority:"gitlens-view",path:this.uri.path,query:JSON.stringify({path:this.uri.fsPath,ref:this.uri.sha,decoration:`gitlens-view://commit-file/status/${this.file.status}`})});else{e.resourceUri=r.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`);const t=(0,a.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,c.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,c.RQ)("images","light",t))}}return e.tooltip=this.tooltip,e.command=this.getCommand(),this._label=void 0,e}get contextValue(){return this.commit.isUncommitted?this.commit.isUncommittedStaged?`${l.Td.File}+staged`:`${l.Td.File}+unstaged`:`${l.Td.File}+committed${this.options?.branch?.current?"+current":""}${this.options?.branch?.current&&this.options.branch.sha===this.commit.ref?"+HEAD":""}${this.options?.unpublished?"+unpublished":""}`}get description(){return n.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})}_folderName;get folderName(){return void 0===this._folderName&&(this._folderName=(0,c.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return void 0===this._label&&(this._label=n.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0}get tooltip(){const e=n.o.fromTemplate("${file}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;\\\n'directory}&nbsp;\n\n${status}${ (originalPath)}",this.file),t=new r.MarkdownString(e,!0);return t.supportHtml=!0,t.isTrusted=!0,t}getCommand(){let e;e=this.commit.lines.length?this.commit.lines[0].line-1:this.options?.selection?.active.line??0;const t={commit:this.commit,uri:o.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,t]}}}class CommitFileNode extends CommitFileNodeBase{constructor(e,t,i,r,s){super("commit-file",e,t,i,r,s)}}},2925:(e,t,i)=>{i.d(t,{D:()=>CommitNode});var r=i(9496),s=i(5255),n=i(9338),o=i(2800),a=i(2226),c=i(5148),l=i(2061),h=i(1219),u=i(3700),d=i(7469),p=i(3620),m=i(5517),g=i(7707),f=i(2610),w=i(2601),v=i(4481),y=i(2060),b=Object.defineProperty,C=Object.getOwnPropertyDescriptor;class CommitNode extends f.b{constructor(e,t,i,r,s,n,o={}){super("commit",i.getGitUri(),e,t),this.commit=i,this.unpublished=r,this.branch=s,this.getBranchAndTagTips=n,this._options=o,this.updateContext({commit:i}),this._uniqueId=(0,g.tO)(this.type,this.context)}dispose(){super.dispose(),this.children=void 0}get id(){return this._uniqueId}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get isTip(){return(this.branch?.current&&this.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}_children;get children(){return this._children}set children(e){this._children!==e&&((0,m.Qu)(this._children,e),this._children=e)}async getChildren(){if(null==this.children){const e=this.commit;let t,i,r=[];if("tags"!==this.view.type&&!this.unpublished&&(0,l.fw)("gitlens:hasConnectedRemotes")&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForCommits&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,d.PQ)();const i=this.getAssociatedPullRequest(e);queueMicrotask((async()=>{await(t?.promise);let r=!1;const s=setTimeout((()=>{r=!0,this.view.triggerNodeChange(this)}),250),n=await i;clearTimeout(s),null!=n&&null!=this.children&&this.children.unshift(new y.Z(this.view,this,n,e)),(r||null!=n)&&this.view.triggerNodeChange(this)}))}const s=await e.getCommitsForFiles();for(const e of s)r.push(new w.R(this.view,this,e.file,e));if("list"!==this.view.config.files.layout){const e=(0,o.Mo)(r,(e=>e.uri.relativePath.split("/")),((...e)=>(0,u.AH)((0,u.RQ)(...e))),this.view.config.files.compact);r=new v.Y(this.view,this,e,this.repoPath,"",void 0).getChildren()}else r.sort(((e,t)=>(0,p.dm)(e.label,t.label)));null!=i&&r.unshift(new y.Z(this.view,this,i,e)),this.children=r,setTimeout((()=>t?.fulfill()),1)}return this.children}async getTreeItem(){const e=n.i.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),t=new r.TreeItem(e,this._options.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);t.id=this.id,t.contextValue=`${g.Td.Commit}${this.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this.unpublished?"+unpublished":""}`,t.description=n.i.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0});const i=this.getState("pendingPullRequest");return t.iconPath=null!=i?new r.ThemeIcon("loading~spin"):this.unpublished?new r.ThemeIcon("arrow-up",new r.ThemeColor("gitlens.unpublishedCommitIconColor")):this.view.config.avatars?await this.commit.getAvatarUri({defaultStyle:c.D.get("defaultGravatarsStyle")}):void 0,t}getCommand(){const e={commit:this.commit,uri:this.uri,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}refresh(e){super.refresh?.(e),this.children=void 0,e&&this.deleteState()}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return r??(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}async getTooltip(){const[e,t]=await Promise.allSettled([this.view.container.git.getBestRemotesWithProviders(this.commit.repoPath),null==this.commit.message?this.commit.ensureFullDetails():void 0]),i=(0,d.Sb)(e,[]),[s]=i;let o,l;if(s?.hasRichIntegration()){const[e,t]=await Promise.allSettled([(0,a.IN)(this.commit.getEnrichedAutolinks(s)),this.getAssociatedPullRequest(this.commit,s)]);o=(0,d.Sb)(e)?.value,l=(0,d.Sb)(t)}const h=await n.i.fromTemplateAsync(this.getTooltipTemplate(),this.commit,{enrichedAutolinks:o,dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:this.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequest:l,outputFormat:"markdown",remotes:i,unpublished:this.unpublished}),u=new r.MarkdownString(h,!0);return u.supportHtml=!0,u.isTrusted=!0,u}getTooltipTemplate(){return this.view.config.formats.commits.tooltip}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?C(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&b(t,i,n)})([(0,h.fF)()],CommitNode.prototype,"dispose",1)},21:(e,t,i)=>{i.d(t,{$h:()=>CommandMessageNode,AE:()=>MessageNode,Gd:()=>LoadMoreNode});var r=i(9496),s=i(5255),n=i(7462),o=i(5148),a=i(7707);class MessageNode extends a.Re{constructor(e,t,i,r,s,o,a){super("message",n.Wj,e,t),this.parent=t,this._message=i,this._description=r,this._tooltip=s,this._iconPath=o,this._contextValue=a}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this._message,r.TreeItemCollapsibleState.None);return e.contextValue=this._contextValue??a.Td.Message,e.description=this._description,e.tooltip=this._tooltip,e.iconPath=this._iconPath,e}}class CommandMessageNode extends MessageNode{constructor(e,t,i,r,s,n,o){super(e,t,r,s,n,o),this.parent=t,this._command=i}getTreeItem(){const e=super.getTreeItem();return e instanceof r.TreeItem?(e.command=this._command,e):e.then((e=>(e.command=this._command,e)))}}class PagerNode extends a.Re{constructor(e,t,i,r,s){super("pager",n.Wj,e,t),this.message=i,this.previousNode=r,this.options=s}async loadAll(){const e=await(this.options?.getCount?.())??0;return this.view.loadMoreNodeChildren(this.parent,e>5e3?5e3:0,this.previousNode,this.options?.context)}loadMore(){return this.view.loadMoreNodeChildren(this.parent,this.options?.pageSize??o.D.get("views.pageItemLimit"),this.previousNode,this.options?.context)}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.message,r.TreeItemCollapsibleState.None);return e.contextValue=a.Td.Pager,e.command=this.getCommand(),e}getCommand(){return{title:"Load more",command:"gitlens.views.loadMoreChildren",arguments:[this]}}}class LoadMoreNode extends PagerNode{constructor(e,t,i,r){super(e,t,r?.message??(0===r?.pageSize?`Load all ${s.NE.Space}${s.NE.Dash}${s.NE.Space} this may take a while`:"Load more"),i,r)}}},5538:(e,t,i)=>{i.d(t,{fc:()=>CompareResultsNode,iS:()=>b,k7:()=>S,uL:()=>C,vK:()=>A});var r=i(9496),s=i(4290),n=i(7462),o=i(4321),a=i(5432),c=i(1219),l=i(2185),h=i(7469),u=i(3620),d=i(8583),p=i(7707),m=i(5988),g=i(812),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&f(t,i,n),n};let y=0;class CompareResultsNode extends d.C{constructor(e,t,i,r,s,o=0){super("compare-results",n.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._ref=r,this._compareWith=s,this._storedAt=o,this._instanceId=y++,this.updateContext({comparisonId:`${r.ref}+${s.ref}+${this._instanceId}`,storedComparisonId:this.getStorageId()}),this._uniqueId=(0,p.tO)(this.type,this.context),0===this._storedAt&&(this._storedAt=Date.now(),this.store(!0))}_instanceId;get id(){return this._uniqueId}etag(){return this._storedAt}get order(){return this._storedAt}get ahead(){return{ref1:this._compareWith.ref||"HEAD",ref2:this._ref.ref}}get behind(){return{ref1:this._ref.ref,ref2:this._compareWith.ref||"HEAD"}}get compareRef(){return this._ref}get compareWithRef(){return this._compareWith}_isFiltered;get filterByAuthors(){const e=this.getState("filterCommits"),t=Boolean(e?.length);return null!=this._isFiltered&&this._isFiltered!==t&&this.updateContext({comparisonFiltered:t}),this._isFiltered=t,e}subscribe(){return(0,l.D$)(this.view.onDidChangeNodesCheckedState,this.onNodesCheckedStateChanged,this)}onNodesCheckedStateChanged(e){const t=b(this.getStorageId());e.items.some((([e])=>e.id?.startsWith(t)))&&this.store(!0)}dismiss(){this.remove(!0)}async getChildren(){if(null==this.children){const e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.repoPath,[(0,o.oI)(t.ref1||"HEAD",t.ref2,"...")],{authors:this.filterByAuthors}),r=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2),s=[new m.J(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery((0,o.oI)(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:""===t.ref1?"":r??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{description:(0,u._6)("commit",i?.behind??0),expand:!1}),new m.J(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery((0,o.oI)(e.ref1,e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:r??e.ref1,ref2:e.ref2,query:this.getAheadFilesQuery.bind(this)}},{description:(0,u._6)("commit",i?.ahead??0),expand:!1})];this.filterByAuthors?.length||s.push(new g.V(this.view,this,this.repoPath,this._compareWith.ref,this._ref.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})),this.children=s}return this.children}getTreeItem(){let e;if(this.view.container.git.repositoryCount>1){const t=this.repoPath?this.view.container.git.getRepository(this.repoPath):void 0;e=t?.formattedName??this.repoPath}const t=new r.TreeItem(`Comparing ${this._ref.label??(0,o.zL)(this._ref.ref,{strings:{working:"Working Tree"}})} with ${this._compareWith.label??(0,o.zL)(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,r.TreeItemCollapsibleState.Collapsed);return t.id=this.id,t.contextValue=`${p.Td.CompareResults}${""===this._ref.ref?"+working":""}${this.filterByAuthors?.length?"+filtered":""}`,t.description=e,t.iconPath=new r.ThemeIcon("compare-changes"),t}async getDiffRefs(){return Promise.resolve([this._compareWith.ref,this._ref.ref])}clearReviewed(){A(this.view,this.getStorageId()),this.store()}async swap(){if(""===this._ref.ref)return void r.window.showErrorMessage("Cannot swap comparisons with the working tree");const e=this.getStorageId(),t=this._ref;this._ref=this._compareWith,this._compareWith=t,await this.replace(e,!0),this.children=void 0,this.view.triggerNodeChange(this.parent),queueMicrotask((()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0})))}async getAheadFilesQuery(){return this.getAheadBehindFilesQuery((0,o.oI)(this._compareWith?.ref||"HEAD",this._ref.ref||"HEAD","..."),""===this._ref.ref)}async getBehindFilesQuery(){return this.getAheadBehindFilesQuery((0,o.oI)(this._ref.ref||"HEAD",this._compareWith.ref||"HEAD","..."),!1)}async getAheadBehindFilesQuery(e,t){const[i,r,s,n]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),t?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),t?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]);let o=(0,h.Sb)(i)??[],a=(0,h.Sb)(s);if(t){const e=(0,h.Sb)(r);if(null!=e)if(0===o.length)o=e??[];else for(const t of e){const e=o.findIndex((e=>e.path===t.path));-1!==e?o.splice(e,1,t):o.push(t)}const t=(0,h.Sb)(n);null!=t&&(a=null==a?t:{additions:a.additions+t.additions,deletions:a.deletions+t.deletions,changedFiles:o.length,approximated:!0})}return{label:`${(0,u._6)("file",o.length,{zero:"No"})} changed`,files:o,stats:a}}getCommitsQuery(e){const t=this.repoPath;return async i=>{const r=await this.view.container.git.getLog(t,{limit:i,ref:e,authors:this.filterByAuthors}),s={log:r,hasMore:r?.hasMore??!0};return s.hasMore&&(s.more=async e=>{s.log=await(s.log?.more?.(e))??s.log,s.hasMore=s.log?.hasMore??!0}),s}}async getFilesQuery(){let e;if(""===this._compareWith.ref)throw new Error("Cannot get files for comparisons of a ref with working tree");e=""===this._ref.ref?this._compareWith.ref:`${this._compareWith.ref}..${this._ref.ref}`;const[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,h.Sb)(t)??[];return{label:`${(0,u._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,h.Sb)(i)}}getStorageId(){return(0,s.FB)(`${this.repoPath}|${this._ref.ref}|${this._compareWith.ref}`,"base64")}remove(e=!1){return A(this.view,this.getStorageId()),this.view.updateStorage(this.getStorageId(),void 0,e)}async replace(e,t=!1){return A(this.view,e),await this.view.updateStorage(e,void 0,t),this.store(t)}store(e=!1){const t=this.getStorageId(),i=C(this.view,t);return this.view.updateStorage(t,{type:"comparison",timestamp:this._storedAt,path:this.repoPath,ref1:{label:this._ref.label,ref:this._ref.ref},ref2:{label:this._compareWith.label,ref:this._compareWith.ref},checkedFiles:i.length>0?i:void 0},e)}}function b(e){return`${e}|`}function C(e,t){const i=[],s=e.nodeState.get(b(t),"checked");for(const[e,t]of s)t===r.TreeItemCheckboxState.Checked&&i.push(e);return i}function A(e,t){e.nodeState.delete(b(t),"checked")}function S(e,t){if(t?.length)for(const i of t)e.nodeState.storeState(i,"checked",r.TreeItemCheckboxState.Checked,!0)}v([(0,a.H)(),(0,c.fF)()],CompareResultsNode.prototype,"getDiffRefs",1),v([(0,c.cM)()],CompareResultsNode.prototype,"clearReviewed",1),v([(0,c.cM)()],CompareResultsNode.prototype,"swap",1)},9719:(e,t,i)=>{i.d(t,{C:()=>w,m:()=>FileRevisionAsCommitNode});var r=i(9496),s=i(5255),n=i(9338),o=i(6373),a=i(7462),c=i(7881),l=i(2226),h=i(5148),u=i(3700),d=i(7469),p=i(7707),m=i(2610),g=i(7692),f=i(4167);class FileRevisionAsCommitNode extends m.R{constructor(e,t,i,r,s={}){super("file-commit",a.YY.fromFile(i,r.repoPath,r.sha),e,t,i),this.commit=r,this._options=s}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get isTip(){return(this._options.branch?.current&&this._options.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}async getChildren(){if(!this.commit.file?.hasConflicts)return[];const[e,t]=await Promise.allSettled([this.view.container.git.getMergeStatus(this.commit.repoPath),this.view.container.git.getRebaseStatus(this.commit.repoPath)]),i=(0,d.Sb)(e),r=(0,d.Sb)(t);return null==i&&null==r?[]:[new g.l(this.view,this,i??r,this.file),new f.w(this.view,this,i??r,this.file)]}async getTreeItem(){if(null==this.commit.file){const e=await this.commit.getCommitForFile(this.file);if(null==e){const e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}const e=new r.TreeItem(n.i.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:h.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),this.commit.file?.hasConflicts?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.None);if(e.contextValue=this.contextValue,e.description=n.i.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:h.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),e.resourceUri=r.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`),!this.commit.isUncommitted&&this.view.config.avatars&&(e.iconPath=this._options.unpublished?new r.ThemeIcon("arrow-up",new r.ThemeColor("gitlens.unpublishedCommitIconColor")):await this.commit.getAvatarUri({defaultStyle:h.D.get("defaultGravatarsStyle")})),null==e.iconPath){const t=(0,c.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,u.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,u.RQ)("images","light",t))}}return e.command=this.getCommand(),e}get contextValue(){return this.commit.isUncommitted?this.commit.file?.hasConflicts?`${p.Td.File}+conflicted`:this.commit.isUncommittedStaged?`${p.Td.File}+staged`:`${p.Td.File}+unstaged`:`${p.Td.File}+committed${this._options.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this._options.unpublished?"+unpublished":""}`}getCommand(){let e;if(e=this.commit.lines.length?this.commit.lines[0].line-1:this._options.selection?.active.line??0,this.commit.file?.hasConflicts)return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[{lhs:{sha:"MERGE_HEAD",uri:a.YY.fromFile(this.file,this.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:a.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}}]};const t={commit:this.commit,uri:a.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,t]}}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getConflictBaseUri(){if(!this.commit.file?.hasConflicts)return;const e=await this.view.container.git.getMergeBase(this.repoPath,"MERGE_HEAD","HEAD");return a.YY.fromFile(this.file,this.repoPath,e??"HEAD")}async getTooltip(){const e=await w(this.view.container,this.commit,this.file,this.view.config.formats.commits.tooltipWithStatus,{getBranchAndTagTips:this._options.getBranchAndTagTips,unpublished:this._options.unpublished}),t=new r.MarkdownString(e,!0);return t.supportHtml=!0,t.isTrusted=!0,t}}async function w(e,t,i,r,s){const[a,c]=await Promise.allSettled([e.git.getBestRemotesWithProviders(t.repoPath),null==t.message?t.ensureFullDetails():void 0]),u=(0,d.Sb)(a,[]),[p]=u;let m,g;if(p?.hasRichIntegration()){const[e,i]=await Promise.allSettled([(0,l.IN)(t.getEnrichedAutolinks(p)),t.getAssociatedPullRequest(p)]);m=(0,d.Sb)(e)?.value,g=(0,d.Sb)(i)}const f=o.o.fromTemplate("${status}${ (originalPath)}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}",i);return n.i.fromTemplateAsync(r.replace("{{slot-status}}",f),t,{enrichedAutolinks:m,dateFormat:h.D.get("defaultDateFormat"),getBranchAndTagTips:s?.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequest:g,outputFormat:"markdown",remotes:u,unpublished:s?.unpublished})}},4481:(e,t,i)=>{i.d(t,{Y:()=>FolderNode});var r=i(9496),s=i(7462),n=i(3620),o=i(7707);class FolderNode extends o.Re{constructor(e,t,i,r,n,a,c){super("folder",s.YY.fromRepoPath(r),e,t),this.parent=t,this.root=i,this.repoPath=r,this.folderName=n,this.relativePath=a,this.containsWorkingFiles=c,this._uniqueId=(0,o.tO)(`${this.type}+${a??n}`,this.context)}priority=1;get id(){return this._uniqueId}toClipboard(){return this.folderName}getChildren(){if(void 0===this.root.descendants||void 0===this.root.children)return[];let e;if("list"===FolderNode.getFileNesting(this.view.config.files,this.root.descendants,void 0===this.relativePath))this.root.descendants.forEach((e=>e.relativePath=this.root.relativePath)),e=this.root.descendants;else{e=[];for(const t of this.root.children.values())void 0!==t.value?(t.value.parent=this.folderName?this:this.parent,t.value.relativePath=this.root.relativePath,e.push(t.value)):e.push(new FolderNode(this.view,this.folderName?this:this.parent,t,this.repoPath,t.name,t.relativePath,this.containsWorkingFiles))}return e.sort(((e,t)=>(e instanceof FolderNode?-1:1)-(t instanceof FolderNode?-1:1)||e.priority-t.priority||(0,n.dm)(e.label,t.label))),e}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.Expanded);return e.id=this.id,e.contextValue=o.Td.Folder,this.containsWorkingFiles&&(e.contextValue+="+working"),e.iconPath=r.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}static getFileNesting(e,t,i){const r=e.layout||"auto";if("auto"===r){if(i||e.compact){const i=e.threshold||5;if(t.length<=i)return"list"}return"tree"}return r}}},4741:(e,t,i)=>{i.d(t,{E:()=>o});var r=i(7707),s=i(21);const n=[[0,"Less than a week ago"],[7,"Over a week ago"],[25,"Over a month ago"],[77,"Over 3 months ago"]];function*o(e,t,i,{show:o}={show:!0}){if(!t.view.config.showRelativeDateMarkers||!o)return yield*e;let a,c=i??0;const l=Date.now();let h=!0;for(const i of e){if(c<n.length){let[e,o]=n[c];if(void 0===a){const t=new Date(l);a=t.setDate(t.getDate()-e)}const u=new Date(i.commit.committer.date).setUTCHours(0,0,0,0);if(u<=a){for(;c<n.length-1;){[e]=n[c+1];const t=new Date(l);if(u>t.setDate(t.getDate()-e))break;c++,a=void 0,[,o]=n[c]}h||(yield new s.AE(t.view,t,"",o,void 0,void 0,r.Td.DateMarker)),c++,a=void 0}}h=!1,yield i}}},7692:(e,t,i)=>{i.d(t,{l:()=>MergeConflictCurrentChangesNode});var r=i(9496),s=i(5255),n=i(7462),o=i(4321),a=i(9529),c=i(5148),l=i(7707),h=i(9719);class MergeConflictCurrentChangesNode extends l.Re{constructor(e,t,i,r){super("conflict-current-changes",n.YY.fromFile(r,i.repoPath,"HEAD"),e,t),this.parent=t,this.status=i,this.file=r}_commit;async getCommit(){return null==this._commit&&(this._commit=this.view.container.git.getCommit(this.status.repoPath,"HEAD")),this._commit}getChildren(){return[]}async getTreeItem(){const e=await this.getCommit(),t=new r.TreeItem("Current changes",r.TreeItemCollapsibleState.None);return t.contextValue=l.Td.MergeConflictCurrentChanges,t.description=`${(0,o.Wh)(this.status.current,{expand:!1,icon:!1})}${null!=e?` (${(0,o.Wh)(e,{expand:!1,icon:!1})})`:" (HEAD)"}`,t.iconPath=this.view.config.avatars?await(e?.getAvatarUri({defaultStyle:c.D.get("defaultGravatarsStyle")}))??new r.ThemeIcon("diff"):new r.ThemeIcon("diff"),t.command=this.getCommand(),t}getCommand(){return null==this.status.mergeBase?(0,a.j$)("vscode.open","Open Revision",this.view.container.git.getRevisionUri("HEAD",this.file.path,this.status.repoPath)):(0,a.fA)(s.Gh.DiffWith,"Open Changes",{lhs:{sha:this.status.mergeBase,uri:n.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:"HEAD",uri:n.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${(0,o.Wh)(this.status.current,{expand:!1,icon:!1})})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}})}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getTooltip(){const e=await this.getCommit(),t=new r.MarkdownString(`Current changes on ${(0,o.Wh)(this.status.current,{label:!1})}\\\n$(file)${s.NE.Space}${this.file.path}`,!0);if(null==e)return t;const i=await(0,h.C)(this.view.container,e,this.file,this.view.config.formats.commits.tooltipWithStatus);return t.appendMarkdown(`\n\n${i}`),t.isTrusted=!0,t}}},4167:(e,t,i)=>{i.d(t,{w:()=>MergeConflictIncomingChangesNode});var r=i(9496),s=i(5255),n=i(7462),o=i(4321),a=i(9529),c=i(5148),l=i(7707),h=i(9719);class MergeConflictIncomingChangesNode extends l.Re{constructor(e,t,i,r){super("conflict-incoming-changes",n.YY.fromFile(r,i.repoPath,i.HEAD.ref),e,t),this.parent=t,this.status=i,this.file=r}_commit;async getCommit(){if(null==this._commit){const e="rebase"===this.status.type?this.status.steps.current.commit?.ref:this.status.HEAD.ref;if(null==e)return;this._commit=this.view.container.git.getCommit(this.status.repoPath,e)}return this._commit}getChildren(){return[]}async getTreeItem(){const e=await this.getCommit(),t=new r.TreeItem("Incoming changes",r.TreeItemCollapsibleState.None);return t.contextValue=l.Td.MergeConflictIncomingChanges,t.description=`${(0,o.Wh)(this.status.incoming,{expand:!1,icon:!1})}${"rebase"===this.status.type?` (${(0,o.Wh)(this.status.steps.current.commit,{expand:!1,icon:!1})})`:` (${(0,o.Wh)(this.status.HEAD,{expand:!1,icon:!1})})`}`,t.iconPath=this.view.config.avatars?await(e?.getAvatarUri({defaultStyle:c.D.get("defaultGravatarsStyle")}))??new r.ThemeIcon("diff"):new r.ThemeIcon("diff"),t.command=this.getCommand(),t}getCommand(){return null==this.status.mergeBase?(0,a.j$)("vscode.open","Open Revision",this.view.container.git.getRevisionUri(this.status.HEAD.ref,this.file.path,this.status.repoPath)):(0,a.fA)(s.Gh.DiffWith,"Open Changes",{lhs:{sha:this.status.mergeBase,uri:n.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:this.status.HEAD.ref,uri:n.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${null!=this.status.incoming?(0,o.Wh)(this.status.incoming,{expand:!1,icon:!1}):"incoming"})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}})}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getTooltip(){const e=await this.getCommit(),t=new r.MarkdownString(`Incoming changes from ${(0,o.Wh)(this.status.incoming,{label:!1})}\\\n$(file)${s.NE.Space}${this.file.path}`,!0);if(null==e)return t.appendMarkdown("rebase"===this.status.type?`\n\n${(0,o.Wh)(this.status.steps.current.commit,{capitalize:!0,label:!1})}`:`\n\n${(0,o.Wh)(this.status.HEAD,{capitalize:!0,label:!1})}`),t;const i=await(0,h.C)(this.view.container,e,this.file,this.view.config.formats.commits.tooltipWithStatus);return t.appendMarkdown(`\n\n${i}`),t.isTrusted=!0,t}}},2060:(e,t,i)=>{i.d(t,{Z:()=>PullRequestNode});var r=i(9496),s=i(7462),n=i(5367),o=i(8452),a=i(7707);class PullRequestNode extends a.Re{constructor(e,t,i,r){let o,c;"string"==typeof r?c=r:(c=r.repoPath,o=r),super("pullrequest",s.YY.fromRepoPath(c),e,t),this.parent=t,this.pullRequest=i,null!=o&&(o instanceof n.XI?this.updateContext({branch:o}):this.updateContext({commit:o})),this._uniqueId=(0,a.tO)(this.type,this.context),this.repoPath=c}repoPath;get id(){return this._uniqueId}toClipboard(){return this.pullRequest.url}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(`#${this.pullRequest.id}: ${this.pullRequest.title}`,r.TreeItemCollapsibleState.None);e.id=this.id,e.contextValue=a.Td.PullRequest,e.description=`${this.pullRequest.state}, ${this.pullRequest.formatDateFromNow()}`,e.iconPath=(0,o.xX)(this.pullRequest);const t=new r.MarkdownString("",!0);t.supportHtml=!0,t.isTrusted=!0,null!=this.context.commit&&t.appendMarkdown(`Commit \`$(git-commit) ${this.context.commit.shortSha}\` was introduced by $(git-pull-request) PR #${this.pullRequest.id}\n\n`);const i=` "Open Pull Request \\#${this.pullRequest.id} on ${this.pullRequest.provider.name}"`;return t.appendMarkdown(`${(0,o.sy)(this.pullRequest)} [**${this.pullRequest.title.trim()}**](${this.pullRequest.url}${i}) \\\n[#${this.pullRequest.id}](${this.pullRequest.url}${i}) by [@${this.pullRequest.author.name}](${this.pullRequest.author.url} "Open @${this.pullRequest.author.name} on ${this.pullRequest.provider.name}") was ${this.pullRequest.state.toLowerCase()} ${this.pullRequest.formatDateFromNow()}`),e.tooltip=t,e}}},5988:(e,t,i)=>{i.d(t,{J:()=>ResultsCommitsNode});var r=i(9496),s=i(7462),n=i(6450),o=i(5148),a=i(5432),c=i(1219),l=i(3105),h=i(7469),u=i(7707),d=i(4092),p=i(2226),m=i(9165),g=i(1185),f=i(21),w=i(2060);let v=0;class AutolinkedItemsNode extends m.y{constructor(e,t,i,r,n){super("autolinks",s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.log=r,this.expand=n,this._instanceId=v++,this.updateContext({autolinksId:String(this._instanceId)}),this._uniqueId=(0,u.tO)(this.type,this.context)}_instanceId;get id(){return this._uniqueId}async getChildren(){if(null==this.children){const e=[...this.log.commits.values()];let t;if(e.length){const i=await this.view.container.git.getBestRemoteWithProvider(this.repoPath),r=e.map((e=>e.message)).join("\n"),[s]=await Promise.allSettled([this.view.container.autolinks.getEnrichedAutolinks(r,i).then((e=>null!=e?(0,p.io)(e,void 0,250):void 0))]),n=(0,h.Sb)(s);n?.size&&(t=[...n.values()].map((([e,t])=>null!=e&&d.i7.is(e?.value)?new w.Z(this.view,this,e.value,this.log.repoPath):new g.Z(this.view,this,this.repoPath,t,e?.value))))}t?.length||(t=[new f.AE(this.view,this,"No autolinked issues or pull requests could be found.")]),this.log.hasMore&&t.push(new f.Gd(this.view,this.parent,t[t.length-1],{context:{expandAutolinks:!0},message:"Load more commits to search for autolinks"})),this.children=t}return this.children}getTreeItem(){const e=new r.TreeItem("Autolinked Issues and Pull Requests",this.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=u.Td.AutolinkedItems,e}}var y=i(2925),b=i(4741),C=i(812),A=i(1101),S=Object.defineProperty,P=Object.getOwnPropertyDescriptor;class ResultsCommitsNode extends u.Re{constructor(e,t,i,r,n,o=void 0,a){super("results-commits",s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._label=r,this._results=n,this._options=o,null!=n.direction&&this.updateContext({branchStatusUpstreamType:n.direction}),this._uniqueId=(0,u.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this),this._options={expand:!0,...o},null!=a&&(this.splatted=a)}limit;get id(){return this._uniqueId}get ref1(){return this._results.comparison?.ref1}get ref2(){return this._results.comparison?.ref2}get isComparisonFiltered(){return this.context.comparisonFiltered}_onChildrenCompleted;async getChildren(){this._onChildrenCompleted?.cancel(),this._onChildrenCompleted=(0,h.PQ)();const{log:e}=await this.getCommitsQueryResults();if(null==e)return[];const[t]=await Promise.all([this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath)]),i=[new AutolinkedItemsNode(this.view,this,this.uri.repoPath,e,this._expandAutolinks)];this._expandAutolinks=!1;const{files:r}=this._results;null==r||this.isComparisonFiltered||i.push(new C.V(this.view,this,this.uri.repoPath,r.ref1,r.ref2,r.query,this._results.direction,{expand:!1}));const s={expand:this._options.expand&&1===e.count};return i.push(...(0,b.E)((0,l.UI)(e.commits.values(),(e=>(0,n.G2)(e)?new A.i(this.view,this,e,{icon:!0}):new y.D(this.view,this,e,void 0,void 0,t,s))),this,void 0,{show:e.count>1})),e.hasMore&&i.push(new f.Gd(this.view,this,i[i.length-1])),this._onChildrenCompleted.fulfill(),i}async getTreeItem(){let e,t;if(this._results.deferred)e=this._label,t=r.TreeItemCollapsibleState.Collapsed;else try{let i;({label:e,log:i}=await(0,h.HO)(this.getCommitsQueryResults(),100)),t=null==i||0===i.count?r.TreeItemCollapsibleState.None:this._options.expand||1===i.count?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed}catch(e){e instanceof h.PK&&setTimeout((async()=>{await e.promise;try{await(this._onChildrenCompleted?.promise)}catch{}setTimeout((()=>{this.triggerChange(!1)}),1)}),1),t=r.TreeItemCollapsibleState.Collapsed}const i=new r.TreeItem(e??this._label,t);return i.id=this.id,i.contextValue=null!=this._results.comparison?u.Td.CompareResultsCommits:u.Td.SearchResultsCommits,i.description=this._options.description,i}refresh(e=!1){e&&(this._commitsQueryResults=void 0,this._commitsQueryResultsPromise=void 0,this.getCommitsQueryResults())}_commitsQueryResultsPromise;async getCommitsQueryResults(){if(null==this._commitsQueryResultsPromise){this._commitsQueryResultsPromise=this._results.query(this.limit??o.D.get("advanced.maxSearchItems"));const e=await this._commitsQueryResultsPromise;this._commitsQueryResults=e,this._hasMore=e.hasMore,this._results.deferred&&(this._results.deferred=!1,this.parent.triggerChange(!1))}return this._commitsQueryResultsPromise}_commitsQueryResults;maybeGetCommitsQueryResults(){return this._commitsQueryResults}_hasMore=!0;get hasMore(){return this._hasMore}_expandAutolinks=!1;async loadMore(e,t){const i=await this.getCommitsQueryResults();null!=i&&i.hasMore&&(null!=t&&"expandAutolinks"in t&&(this._expandAutolinks=Boolean(t.expandAutolinks)),await(i.more?.(e??this.view.config.pageItemLimit)),this.limit=i.log?.count,this.triggerChange(!1))}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?P(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&S(t,i,n)})([(0,a.H)(),(0,c.fF)()],ResultsCommitsNode.prototype,"refresh",1)},202:(e,t,i)=>{i.d(t,{C:()=>ResultsFileNode});var r=i(9496),s=i(5255),n=i(6373),o=i(7462),a=i(7881),c=i(4321),l=i(3700),h=i(7707),u=i(2610),d=i(5538);class ResultsFileNode extends u.R{constructor(e,t,i,r,s,n,a){super("results-file",o.YY.fromFile(r,i,s||n),e,t,r),this.ref1=s,this.ref2=n,this.direction=a,this.updateContext({file:r}),null!=this.context.storedComparisonId?this._uniqueId=`${(0,d.iS)(this.context.storedComparisonId)}${this.direction}|${r.path}`:this._uniqueId=(0,h.tO)(this.type,this.context)}toClipboard(){return this.file.path}get ref(){return(0,c.xB)(this.ref1||this.ref2,this.uri.repoPath)}getChildren(){return[]}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);e.contextValue=h.Td.ResultsFile,e.description=this.description,e.tooltip=n.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)}",this.file);const t=(0,a.tK)(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,l.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,l.RQ)("images","light",t))},e.command=this.getCommand(),e.checkboxState={state:this.getState("checked")??r.TreeItemCheckboxState.Unchecked,tooltip:"Mark as Reviewed"},e}_description;get description(){return void 0===this._description&&(this._description=n.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return void 0===this._folderName&&(this._folderName=(0,l.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return void 0===this._label&&(this._label=n.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}get priority(){return 0}getCommand(){const e={lhs:{sha:this.ref1,uri:"R"!==this.file.status&&"C"!==this.file.status||"behind"!==this.direction?this.uri:o.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0)},rhs:{sha:this.ref2,uri:"R"!==this.file.status&&"C"!==this.file.status||"behind"===this.direction?this.uri:o.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0)},repoPath:this.uri.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[e]}}}},812:(e,t,i)=>{i.d(t,{V:()=>ResultsFilesNode,W:()=>w});var r=i(9496),s=i(7462),n=i(2800),o=i(5432),a=i(1219),c=i(3105),l=i(3700),h=i(7469),u=i(3620),d=i(7707),p=i(4481),m=i(202),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor,w=(e=>(e[e.Left=0]="Left",e[e.Right=1]="Right",e))(w||{});class ResultsFilesNode extends d.Re{constructor(e,t,i,r,n,o,a,c=void 0){super("results-files",s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.ref1=r,this.ref2=n,this._filesQuery=o,this.direction=a,this._options=c,null!=this.direction&&this.updateContext({branchStatusUpstreamType:this.direction}),this._uniqueId=(0,d.tO)(this.type,this.context),this._options={expand:!0,...c}}get id(){return this._uniqueId}get filter(){return this.getState("filter")}set filter(e){this.filter!==e&&(this.storeState("filter",e,!0),this._filterResults=void 0,this.triggerChange(!1))}get filterable(){return null!=this.filter||this.ref1!==this.ref2&&void 0===this.direction}getFilterContextValue(){switch(this.filter){case 0:return"+filtered~left";case 1:return"+filtered~right";default:return""}}async getChildren(){const e=await this.getFilesQueryResults(),t=(null!=this.filter?e.filtered?.get(this.filter):void 0)??e.files;if(null==t)return[];let i=[...(0,c.UI)(t,(e=>new m.C(this.view,this,this.repoPath,e,this.ref1,this.ref2,this.direction)))];if("list"!==this.view.config.files.layout){const e=(0,n.Mo)(i,(e=>e.uri.relativePath.split("/")),((...e)=>(0,l.AH)((0,l.RQ)(...e))),this.view.config.files.compact);i=new p.Y(this.view,this,e,this.repoPath,"",void 0).getChildren()}else i.sort(((e,t)=>e.priority-t.priority||(0,u.dm)(e.label,t.label)));return i}async getTreeItem(){let e,t,i,s,n,o;const a=this.filter;try{const c=await(0,h.HO)(this.getFilesQueryResults(),100);e=c.label,null==a&&null!=c.stats&&(t=`${(0,u._6)("addition",c.stats.additions)} (+), ${(0,u._6)("deletion",c.stats.deletions)} (-)${c.stats.approximated?" *approximated":""}`,o=`${e}, ${t}`),null!=a?(t="Filtered",o=`${e} &mdash; ${t}`,s=c.filtered?.get(a),null==s&&(e="files changed",i=new r.ThemeIcon("ellipsis"),n=r.TreeItemCollapsibleState.Collapsed,this._filterResults?.then((()=>queueMicrotask((()=>this.triggerChange(!1))))))):s=c.files,void 0===n&&(n=null==s||0===s.length?r.TreeItemCollapsibleState.None:this._options.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed)}catch(t){t instanceof h.PK&&t.promise.then((()=>queueMicrotask((()=>this.triggerChange(!1))))),e="files changed",i=new r.ThemeIcon("ellipsis"),n=r.TreeItemCollapsibleState.Collapsed}const c=new r.TreeItem(`${null!=a&&null!=s?`Showing ${s.length} of `:""}${e}`,n);return c.description=t,c.id=this.id,c.iconPath=i,c.contextValue=`${d.Td.ResultsFiles}${this.filterable?"+filterable":""}${this.getFilterContextValue()}`,c.tooltip=o,c}refresh(e=!1){e&&(this.deleteState("filter"),this._filterResults=void 0,this._filesQueryResults=this._filesQuery())}_filesQueryResults;_filterResults;async getFilesQueryResults(){void 0===this._filesQueryResults&&(this._filesQueryResults=this._filesQuery());const e=await this._filesQueryResults;return null!=e.files&&this.filterable&&null!=this.filter&&null==e.filtered?.get(this.filter)?(void 0===this._filterResults&&(this._filterResults=this.filterResults(this.filter,e)),await this._filterResults,e):e}async filterResults(e,t){let i;const r=0===this.filter?this.ref2:this.ref1,s=await this.view.container.git.getMergeBase(this.repoPath,this.ref1||"HEAD",this.ref2||"HEAD");if(null!=s){const e=await this.view.container.git.getDiffStatus(this.uri.repoPath,`${s}..${r}`);null!=e&&(i=new Set(e.map((e=>e.path))))}else{const e=await this.view.container.git.getCommit(this.uri.repoPath,r||"HEAD");null!=e?.files&&(i=new Set(e.files.map((e=>e.path))))}null==t.filtered&&(t.filtered=new Map),t.filtered.set(e,null==i?[]:t.files.filter((e=>i.has(e.path))))}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&g(t,i,n)})([(0,o.H)(),(0,a.fF)()],ResultsFilesNode.prototype,"refresh",1)},4655:(e,t,i)=>{i.d(t,{V:()=>SearchResultsNode});var r=i(9496),s=i(4290),n=i(9311),o=i(7462),a=i(6934),c=i(5432),l=i(1219),h=i(3620),u=i(7707),d=i(5988),p=Object.defineProperty,m=Object.getOwnPropertyDescriptor;let g=0;class SearchResultsNode extends u.Re{constructor(e,t,i,r,s,n,c=0){super("search-results",o.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._search=r,this._labels=s,this._searchQueryOrLog=n,this._storedAt=c,this._instanceId=g++,this.updateContext({searchId:`${(0,a.FL)(this._search)}+${this._instanceId}`}),this._uniqueId=(0,u.tO)(this.type,this.context),0===this._storedAt&&(this._storedAt=Date.now(),this.store(!0))}_instanceId;get id(){return this._uniqueId}get order(){return this._storedAt}get search(){return this._search}dismiss(){this.remove(!0)}_resultsNode;ensureResults(){if(null==this._resultsNode){let e;null==this._searchQueryOrLog?(e=!0,this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel})):"function"!=typeof this._searchQueryOrLog&&(this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel},this._searchQueryOrLog)),this._resultsNode=new d.J(this.view,this,this.repoPath,this._labels.label,{query:this._searchQueryOrLog,deferred:e},{expand:!1},!0)}return this._resultsNode}async getChildren(){return this.ensureResults().getChildren()}async getTreeItem(){const e=await this.ensureResults().getTreeItem();if(e.id=this.id,e.contextValue=u.Td.SearchResults,this.view.container.git.repositoryCount>1){const t=this.view.container.git.getRepository(this.repoPath);e.description=t?.formattedName??this.repoPath}return e.iconPath=new r.ThemeIcon("search"),e}get hasMore(){return this.ensureResults().hasMore}async loadMore(e){return this.ensureResults().loadMore(e)}async edit(e){if(null==e)return void await(0,n.m)({command:"search",prefillOnly:!0,state:{repo:this.repoPath,...this.search,showResultsInSideBar:this}});const t=this.getStorageId();this._search=e.pattern,this._labels=e.labels,this._searchQueryOrLog=e.log,this._resultsNode=void 0,await this.replace(t,!0),this.triggerChange(!1),queueMicrotask((()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0})))}refresh(e=!1){this._resultsNode?.refresh(e)}getSearchLabel(e,t){if("string"==typeof e)return e;const i=t?.count??0,r=void 0===e.resultsType?{singular:"search result",plural:"search results"}:e.resultsType;return`${(0,h._6)(r.singular,i,{format:e=>t?.hasMore?`${e}+`:void 0,plural:r.plural,zero:"No"})} ${e.label}`}getSearchQuery(e,t){let i=!0;return async r=>{t=await(t??this.view.container.git.richSearchCommits(this.repoPath,this.search)),i||null==t?.query||(t=await t.query(r)),i=!1;const s={label:this.getSearchLabel(e.label,t),log:t,hasMore:t?.hasMore??!1};return s.hasMore&&(s.more=async t=>{s.log=await(s.log?.more?.(t))??s.log,s.label=this.getSearchLabel(e.label,s.log),s.hasMore=s.log?.hasMore??!0}),s}}getStorageId(){return(0,s.FB)(`${this.repoPath}|${(0,a.FL)(this.search)}`,"base64")}remove(e=!1){return this.view.updateStorage(this.getStorageId(),void 0,e)}async replace(e,t=!1){return await this.view.updateStorage(e,void 0,t),this.store(t)}store(e=!1){return this.view.updateStorage(this.getStorageId(),{type:"search",timestamp:this._storedAt,path:this.repoPath,labels:this._labels,search:(0,a.KQ)(this.search)},e)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);r&&n&&p(t,i,n)})([(0,c.H)(),(0,l.fF)()],SearchResultsNode.prototype,"refresh",1)},2758:(e,t,i)=>{i.d(t,{y:()=>StashFileNode});var r=i(7707),s=i(2601);class StashFileNode extends s.q{constructor(e,t,i,r){super("stash-file",e,t,i,r)}get contextValue(){return`${r.Td.File}+stashed`}}},1101:(e,t,i)=>{i.d(t,{i:()=>StashNode});var r=i(9496),s=i(9338),n=i(2800),o=i(5148),a=i(3700),c=i(3620),l=i(7707),h=i(2610),u=i(4481),d=i(2758);class StashNode extends h.b{constructor(e,t,i,r){super("stash",i.getGitUri(),e,t),this.parent=t,this.commit=i,this.options=r,this.updateContext({commit:i}),this._uniqueId=(0,l.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.commit.stashName}get ref(){return this.commit}async getChildren(){let e=(await this.commit.getCommitsForFiles()).map((e=>new d.y(this.view,this,e.file,e)));if("list"!==this.view.config.files.layout){const t=(0,n.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,a.AH)((0,a.RQ)(...e))),this.view.config.files.compact);e=new u.Y(this.view,this,t,this.repoPath,"",void 0).getChildren()}else e.sort(((e,t)=>(0,c.dm)(e.label,t.label)));return e}getTreeItem(){const e=new r.TreeItem(s.i.fromTemplate(this.view.config.formats.stashes.label,this.commit,{messageTruncateAtNewLine:!0,dateFormat:o.D.get("defaultDateFormat")}),r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=s.i.fromTemplate(this.view.config.formats.stashes.description,this.commit,{messageTruncateAtNewLine:!0,dateFormat:o.D.get("defaultDateFormat")}),e.contextValue=l.Td.Stash,this.options?.icon&&(e.iconPath=new r.ThemeIcon("archive")),e.tooltip=s.i.fromTemplate("${'On 'stashOnRef\n}${ago} (${date})\n\n${message}",this.commit,{dateFormat:o.D.get("defaultDateFormat")}),e}}},6586:(e,t,i)=>{i.d(t,{q:()=>StatusFileNode});var r=i(9496),s=i(5255),n=i(6373),o=i(7462),a=i(7881),c=i(3700),l=i(3620),h=i(5209),u=i(7707),d=i(9719);class StatusFileNode extends h.T{commits;_direction;_hasStagedChanges;_hasUnstagedChanges;constructor(e,t,i,r,s,n="ahead"){let a,c=!1,l=!1;for(const e of s){if(!e.isUncommitted){if(l)break;a=e.sha;break}if(e.isUncommittedStaged){c=!0,l||(a=e.sha);break}a=void 0,l=!0}super("status-file",o.YY.fromFile(i,r,a),e,t,i),this.commits=s,this._direction=n,this._hasStagedChanges=c,this._hasUnstagedChanges=l}toClipboard(){return this.fileName}get fileName(){return this.file.path}getChildren(){return this.commits.map((e=>new d.m(this.view,this,this.file,e)))}getTreeItem(){const e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);if(e.description=this.description,(this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length)e.contextValue=u.Td.File,this._hasStagedChanges?(e.contextValue+="+staged",e.tooltip=n.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)} in Index (staged)",this.file)):(e.contextValue+="+unstaged",e.tooltip=n.o.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)} in Working Tree",this.file)),e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File,e.command=this.getCommand();else{if(e.collapsibleState=r.TreeItemCollapsibleState.Collapsed,this._hasStagedChanges||this._hasUnstagedChanges)e.contextValue=u.Td.File,this._hasStagedChanges&&this._hasUnstagedChanges?e.contextValue+="+staged+unstaged":this._hasStagedChanges?e.contextValue+="+staged":e.contextValue+="+unstaged",e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File;else{e.contextValue=u.Td.StatusFileCommits;const t=(0,a.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,c.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,c.RQ)("images","light",t))}}e.tooltip=n.o.fromTemplate(`\${file}\n\${directory}/\n\n\${status}\${ (originalPath)} in ${this.getChangedIn()}`,this.file),e.command=this.getCommand()}return this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=n.o.fromTemplate(this.view.config.formats.files.description,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,c.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=n.o.fromTemplate(this.view.config.formats.files.label,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._label}get commit(){return this.commits[0]}get priority(){return this._hasStagedChanges&&!this._hasUnstagedChanges?-3:this._hasStagedChanges?-2:this._hasUnstagedChanges?-1:0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getChangedIn(){const e=[];let t=0;return this._hasUnstagedChanges&&(t++,e.push("Working Tree")),this._hasStagedChanges&&(t++,e.push("Index (staged)")),this.commits.length>t&&(t=this.commits.length-t),t>0&&e.push((0,l._6)("commit",t)),e.length>2&&(e[e.length-1]=`and ${e[e.length-1]}`),e.join(e.length>2?", ":" and ")}getCommand(){if((this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length){const e={commit:this.commit,uri:o.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}const e="behind"===this._direction?this.commits[0]:this.commits[this.commits.length-1],t=e.files?.find((e=>e.path===this.file.path))??this.file,i={lhs:{sha:"behind"===this._direction?e.sha:`${e.sha}^`,uri:o.YY.fromFile(t,this.repoPath,void 0,!0)},rhs:{sha:"",uri:o.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[i]}}}},5517:(e,t,i)=>{i.d(t,{Qu:()=>w,_H:()=>ViewBase});var r=i(9496),s=i(2540),n=i(9529),o=i(5148),a=i(1219),c=i(2185),l=i(9796),h=i(4336),u=i(6004),d=i(7469),p=i(7707),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&m(t,i,n),n};class ViewBase{constructor(e,t,i,s){if(this.container=e,this.type=t,this.name=i,this.trackingFeature=s,this.disposables.push((0,c.IH)(e.onReady)(this.onReady,this)),this.container.debugging||o.D.get("debug")){let e=function(e,t,i){null==e.tooltip&&(e.tooltip=new r.MarkdownString(null!=e.label&&"string"!=typeof e.label?e.label.label:e.label??"")),"string"==typeof e.tooltip?e.tooltip=`${e.tooltip}\n\n---\ncontext: ${e.contextValue}\nnode: ${t.toString()}${null!=i?`\nparent: ${i.toString()}`:""}`:e.tooltip.appendMarkdown(`\n\n---\n\ncontext: \`${e.contextValue}\`\\\nnode: \`${t.toString()}\`${null!=i?`\\\nparent: \`${i.toString()}\``:""}`)};const t=this.getTreeItem;this.getTreeItem=async function(i){const r=await t.apply(this,[i]);return null==i.resolveTreeItem&&e(r,i,i.getParent()),r};const i=this.resolveTreeItem;this.resolveTreeItem=async function(t,r){return t=await i.apply(this,[t,r]),e(t,r,r.getParent()),t}}this.disposables.push(...this.registerCommands())}get id(){return`gitlens.views.${this.type}`}_onDidInitialize=new r.EventEmitter;initialized=!1;_onDidChangeTreeData=new r.EventEmitter;get onDidChangeTreeData(){return this._onDidChangeTreeData.event}_onDidChangeSelection=new r.EventEmitter;get onDidChangeSelection(){return this._onDidChangeSelection.event}_onDidChangeVisibility=new r.EventEmitter;get onDidChangeVisibility(){return this._onDidChangeVisibility.event}_onDidChangeNodeCollapsibleState=new r.EventEmitter;get onDidChangeNodeCollapsibleState(){return this._onDidChangeNodeCollapsibleState.event}_onDidChangeNodesCheckedState=new r.EventEmitter;get onDidChangeNodesCheckedState(){return this._onDidChangeNodesCheckedState.event}disposables=[];root;tree;_lastKnownLimits=new Map;dispose(){this._nodeState?.dispose(),this._nodeState=void 0,r.Disposable.from(...this.disposables).dispose()}onReady(){this.initialize({canSelectMany:this.canSelectMany,showCollapseAll:this.showCollapseAll}),queueMicrotask((()=>this.onConfigurationChanged()))}get canReveal(){return!0}get canSelectMany(){return this.container.prereleaseOrDebugging&&o.D.get("views.experimental.multiSelect.enabled",void 0,!1)}_nodeState;get nodeState(){return null==this._nodeState&&(this._nodeState=new ViewNodeState),this._nodeState}get showCollapseAll(){return!0}filterConfigurationChanged(e){if(!o.D.changed(e,"views"))return!1;if(o.D.changed(e,`views.${this.configKey}`))return!0;for(const t of s.TA)if(o.D.changed(e,`views.${t}`))return!0;return!1}get badge(){return this.tree?.badge}set badge(e){null!=this.tree&&(this.tree.badge=e)}_title;get title(){return this._title}set title(e){this._title=e,null!=this.tree&&(this.tree.title=e)}_description;get description(){return this._description}set description(e){this._description=e,null!=this.tree&&(this.tree.description=e)}_message;get message(){return this._message}set message(e){this._message=e,null!=this.tree&&(this.tree.message=e)}getQualifiedCommand(e){return`gitlens.views.${this.type}.${e}`}onConfigurationChanged(e){null!=e&&null!=this.root&&this.refresh(!0)}initialize(e={}){this.tree=r.window.createTreeView(this.id,{...e,treeDataProvider:this}),this.disposables.push(o.D.onDidChange((e=>{this.filterConfigurationChanged(e)&&(this._config=void 0,this.onConfigurationChanged(e))}),this),this.tree,this.tree.onDidChangeSelection((0,l.Ds)(this.onSelectionChanged,250),this),this.tree.onDidChangeVisibility((0,l.Ds)(this.onVisibilityChanged,250),this),this.tree.onDidChangeCheckboxState(this.onCheckboxStateChanged,this),this.tree.onDidCollapseElement(this.onElementCollapsed,this),this.tree.onDidExpandElement(this.onElementExpanded,this)),null!=this._title?this.tree.title=this._title:this._title=this.tree.title,null!=this._description&&(this.tree.description=this._description),null!=this._message&&(this.tree.message=this._message)}ensureRoot(e=!1){return(null==this.root||e)&&(this.root=this.getRoot()),this.root}getChildren(e){if(null!=e)return e.getChildren();const t=this.ensureRoot().getChildren();return this.initialized||((0,d.tI)(t)?t.then((()=>{this.initialized||(this.initialized=!0,setTimeout((()=>this._onDidInitialize.fire()),1))})):(this.initialized=!0,setTimeout((()=>this._onDidInitialize.fire()),1))),t}getParent(e){return e.getParent()}getTreeItem(e){return e.getTreeItem()}resolveTreeItem(e,t){return t.resolveTreeItem?.(e)??e}onElementCollapsed(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:r.TreeItemCollapsibleState.Collapsed})}onElementExpanded(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:r.TreeItemCollapsibleState.Expanded})}onCheckboxStateChanged(e){try{for(const[t,i]of e.items){if(null==t.id)throw new Error("Id is required for checkboxes");t.storeState("checked",i,!0)}}finally{this._onDidChangeNodesCheckedState.fire(e)}}onSelectionChanged(e){this._onDidChangeSelection.fire(e),this.notifySelections()}onVisibilityChanged(e){e.visible&&this.container.usage.track(`${this.trackingFeature}:shown`),this._onDidChangeVisibility.fire(e),e.visible&&this.notifySelections()}notifySelections(){const e=this.selection?.[0];null!=e&&((e.is("commit")||e.is("stash")||e.is("file-commit")||e.is("commit-file")||e.is("stash-file"))&&this.container.events.fire("commit:selected",{commit:e.commit,interaction:"passive",preserveFocus:!0,preserveVisibility:!0},{source:this.id}),(e.is("file-commit")||e.is("commit-file")||e.is("stash-file"))&&this.container.events.fire("file:selected",{uri:e.uri,preserveFocus:!0,preserveVisibility:!0},{source:this.id}))}get activeSelection(){if(null!=this.tree&&null!=this.root)return this.tree.selection[0]}get selection(){return null==this.tree||null==this.root?[]:this.tree.selection}get visible(){return this.tree?.visible??!1}async findNode(e,{allowPaging:t=!1,canTraverse:i,maxDepth:r=2,token:s}={}){const n=(0,u.UH)();async function o(){try{return await this.findNodeCoreBFS(e,this.ensureRoot(),t,i,r,s)}catch(e){return void h.Yd.error(e,n)}}return this.initialized?o.call(this):(this.show({preserveFocus:!0}),new Promise((e=>(0,c.IH)(this._onDidInitialize.event)((()=>e(o.call(this))),this))))}async findNodeCoreBFS(e,t,i,r,s,n){const a=[t,void 0],c=o.D.get("advanced.maxListItems");let l,h,u,m=0;for(;a.length>1;){if(n?.isCancellationRequested)return;if(l=a.shift(),null!=l){if(e(l))return l;if(null!=r){const e=r(l);if((0,d.tI)(e)){if(!await e)continue}else if(!e)continue}if(h=await l.getChildren(),0!==h.length){for(;null!=l&&!(0,p.On)(l);)l=await(l.getSplattedChild?.());if(null!=l&&(0,p.On)(l)){let t=h.find(e);if(null!=t)return t;if(i&&l.hasMore)for(;;){if(n?.isCancellationRequested)return;if(await this.loadMoreNodeChildren(l,c),u=await(0,d.HO)(Promise.resolve(l.getChildren()),6e4,n,{onDidCancel:e=>e([])}),t=u.find(e),null!=t)return t;if(!l.hasMore)break}}else a.push(...h)}}else if(m++,a.push(void 0),m>s)break}}async ensureRevealNode(e,t){const i=[];let r=e;for(;null!=r;)i.push(r),r=r.getParent();i.length>1&&i.pop();for(const e of i.reverse())try{await this.reveal(e,t)}catch{}}async refresh(e=!1){e&&this.nodeState.reset(),await(this.root?.refresh?.(e)),this.triggerNodeChange()}async refreshNode(e,t=!1,i=!1){const r=await(e.refresh?.(t));(i||!0!==r)&&this.triggerNodeChange(e)}async reveal(e,t){if(null!=this.tree)try{await this.tree.reveal(e,t)}catch(e){h.Yd.error(e)}}async show(e){const t=(0,u.UH)();try{await(0,n.dO)(`${this.id}.focus`,e)}catch(e){h.Yd.error(e,t)}}getNodeLastKnownLimit(e){return this._lastKnownLimits.get(e.id)}async loadMoreNodeChildren(e,t,i,r){null!=i&&await this.reveal(i,{select:!0}),await e.loadMore(t,r),this._lastKnownLimits.set(e.id,e.limit)}resetNodeLastKnownLimit(e){this._lastKnownLimits.delete(e.id)}triggerNodeChange(e){this._onDidChangeTreeData.fire(null!=e&&e!==this.root?e:void 0)}_config;get config(){if(null==this._config){const e={...o.D.get("views")};for(const t of s.S4)delete e[t];this._config={...e,...o.D.get("views")[this.configKey]}}return this._config}}f([(0,a.cM)({args:{0:"<function>",1:e=>`options=${JSON.stringify({...e,canTraverse:void 0,token:void 0})}`}})],ViewBase.prototype,"findNode",1),f([(0,a.fF)()],ViewBase.prototype,"refresh",1),f([(0,a.fF)({args:{0:e=>e.toString()}})],ViewBase.prototype,"refreshNode",1),f([(0,a.cM)({args:{0:e=>e.toString()}})],ViewBase.prototype,"reveal",1),f([(0,a.cM)()],ViewBase.prototype,"show",1),f([(0,a.fF)({args:{0:e=>e.toString(),2:e=>e?.toString()}})],ViewBase.prototype,"loadMoreNodeChildren",1),f([(0,a.fF)({args:{0:e=>e.toString()},singleLine:!0})],ViewBase.prototype,"resetNodeLastKnownLimit",1),f([(0,a.fF)({args:{0:e=>e?.toString()}})],ViewBase.prototype,"triggerNodeChange",1);class ViewNodeState{_store;_stickyStore;dispose(){this.reset(),this._stickyStore?.clear(),this._stickyStore=void 0}reset(){this._store?.clear(),this._store=void 0}delete(e,t){for(const i of[this._store,this._stickyStore])if(null!=i)for(const[r,s]of i)r.startsWith(e)&&(s.delete(t),0===s.size&&i.delete(r))}deleteState(e,t){if(null==t)this._store?.delete(e),this._stickyStore?.delete(e);else for(const i of[this._store,this._stickyStore]){if(null==i)continue;const r=i.get(e);null!=r&&(r.delete(t),0===r.size&&i.delete(e))}}get(e,t){const i=new Map;for(const r of[this._store,this._stickyStore])if(null!=r)for(const[s,n]of r)s.startsWith(e)&&n.has(t)&&i.set(s,n.get(t));return i}getState(e,t){return this._stickyStore?.get(e)?.get(t)??this._store?.get(e)?.get(t)}storeState(e,t,i,r){let s;r?(null==this._stickyStore&&(this._stickyStore=new Map),s=this._stickyStore):(null==this._store&&(this._store=new Map),s=this._store);const n=s.get(e);null!=n?n.set(t,i):s.set(e,new Map([[t,i]]))}}function w(e,t){if(e?.length)for(const i of e)t?.includes(i)||i.dispose()}},9263:(e,t,i)=>{i.d(t,{CommitDetailsWebviewProvider:()=>CommitDetailsWebviewProvider});var r=i(9496),s=i(3139),n=i(5255),o=i(9311),a=i(6897),c=i(9338),l=i(6450),h=i(439),u=i(8452),d=i(4092),p=i(4321),m=i(3646),g=i(9679),f=i(2226),w=i(9529),v=i(5148),y=i(2061),b=i(1219),C=i(9796),A=i(3105),S=i(4336),P=i(6004);class MRU{constructor(e=10,t){this.maxSize=e,this.comparator=t}stack=[];get count(){return this.stack.length}_position=0;get position(){return this._position}add(e){this._position>0&&(this.stack.splice(0,this._position),this._position=0);const t=null!=this.comparator?this.stack.findIndex((t=>this.comparator(e,t))):this.stack.indexOf(e);-1!==t?this.stack.splice(t,1):this.stack.length===this.maxSize&&this.stack.pop(),this.stack.unshift(e),this._position=0}get(e){if(null!=e){if(e<0||e>=this.stack.length)return;return this.stack[e]}return this.stack.length>0?this.stack[0]:void 0}insert(e){this._position>0&&(this.stack.splice(0,this._position),this._position=0),this.stack.unshift(e),this._position++}navigate(e){if(!(this.stack.length<=1)){if("back"===e){if(this._position>=this.stack.length-1)return;this._position+=1}else{if(this._position<=0)return;this._position-=1}return this.stack[this._position]}}}var k=i(7469),D=i(7387),R=i(5798),_=i(6260),T=i(620);const F=new R.ke("commit/actions"),$=new R.ke("commit/file/actions"),I=new R.ke("commit/file/open"),x=new R.ke("commit/file/openOnRemote"),O=new R.ke("commit/file/compareWorking"),E=new R.ke("commit/file/comparePrevious"),B=new R.ke("commit/file/stage"),W=new R.ke("commit/file/unstage"),M=new R.ke("commit/pickCommit"),N=new R.ke("commit/searchCommit"),L=new R.ke("commit/switchMode"),U=new R.ke("commit/autolinkSettings"),G=new R.ke("commit/explain"),H=new R.ke("commit/pin"),V=new R.ke("commit/navigate"),q=new R.ke("commit/preferences/update"),j=new R.ke("commit/wip/createPatch"),Q=new R.jH("commit/didChange",!0),Y=new R.jH("commit/didChange/wip"),z=new R.jH("commit/didExplain");var K=Object.defineProperty,J=Object.getOwnPropertyDescriptor,X=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?J(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&K(t,i,n),n};class CommitDetailsWebviewProvider{constructor(e,t,i){this.container=e,this.host=t,this.options=i,this._context={mode:"commit",navigationStack:{count:0,position:0},pinned:!1,preferences:this.getPreferences(),commit:void 0,richStateLoaded:!1,formattedMessage:void 0,autolinkedIssues:void 0,pullRequest:void 0,wip:void 0},this._disposable=v.D.onDidChangeAny(this.onAnyConfigurationChanged,this)}_bootstraping=!0;_context;_pendingContext;_disposable;_pinned=!1;_focused=!1;_commitStack=new MRU(10,((e,t)=>e.ref===t.ref));dispose(){this._disposable.dispose(),this._lineTrackerDisposable?.dispose(),this._repositorySubscription?.subscription.dispose(),this._selectionTrackerDisposable?.dispose(),this._wipSubscription?.subscription.dispose()}_skipNextRefreshOnVisibilityChange=!1;async onShowing(e,t,...i){let r;const[s]=i;if((0,T.W)(s)){const{commit:e}=s.state;null!=e?.repoPath&&null!=e?.sha&&(r=null!=e.stashNumber?{commit:(0,p.xB)(e.sha,e.repoPath,{refType:"stash",name:e.message,number:e.stashNumber})}:{commit:(0,p.xB)(e.sha,e.repoPath,{refType:"revision",message:e.message})})}else r=null!=s&&"object"==typeof s?s:void 0;let n;return null!=r&&(r.preserveFocus&&(null==t?t={preserveFocus:!0}:t.preserveFocus=!0),({commit:n,...r}=r)),null!=n&&"wip"===this.mode&&"passive"!==r?.interaction&&this.setMode("commit"),null==n&&(this._pinned||(n=this.getBestCommitOrStash())),null==n||this._context.commit?.ref.startsWith(n.ref)||await this.updateCommit(n,{pinned:!1}),!(r?.preserveVisibility&&!this.host.visible)&&(this._skipNextRefreshOnVisibilityChange=!0,!0)}includeBootstrap(){return this._bootstraping=!0,this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.getState(this._context)}registerCommands(){return[(0,w.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)))]}onFocusChanged(e){this._focused!==e&&(this._focused=e,e&&this.isLineTrackerSuspended&&this.ensureTrackers())}onMessageReceived(e){switch(e.method){case x.method:(0,R.mq)(x,e,(e=>{this.openFileOnRemote(e)}));break;case I.method:(0,R.mq)(I,e,(e=>{this.openFile(e)}));break;case O.method:(0,R.mq)(O,e,(e=>{this.openFileComparisonWithWorking(e)}));break;case E.method:(0,R.mq)(E,e,(e=>{this.openFileComparisonWithPrevious(e)}));break;case $.method:(0,R.mq)($,e,(e=>{this.showFileActions(e)}));break;case F.method:(0,R.mq)(F,e,(e=>{switch(e.action){case"graph":{let e;if(e="wip"===this._context.mode?null!=this._context.wip?.changes?(0,p.xB)(h.CL,this._context.wip.changes.repository.path,{refType:"revision"}):void 0:null!=this._context.commit?(0,p.qj)(this._context.commit):void 0,null==e)return;(0,w.P0)("graph"===this.options.attachedTo?n.Gh.ShowInCommitGraphView:n.Gh.ShowInCommitGraph,{ref:e});break}case"more":this.showCommitActions();break;case"scm":(0,w.dO)("workbench.view.scm");break;case"sha":e.alt?this.showCommitPicker():null!=this._context.commit&&(0,w.P0)(n.Gh.CopyShaToClipboard,{sha:this._context.commit.sha})}}));break;case M.method:(0,R.mq)(M,e,(e=>this.showCommitPicker()));break;case N.method:(0,R.mq)(N,e,(e=>this.showCommitSearch()));break;case L.method:(0,R.mq)(L,e,(e=>this.switchMode(e)));break;case U.method:(0,R.mq)(U,e,(e=>this.showAutolinkSettings()));break;case H.method:(0,R.mq)(H,e,(e=>this.updatePinned(e.pin??!1,!0)));break;case V.method:(0,R.mq)(V,e,(e=>this.navigateStack(e.direction)));break;case q.method:(0,R.mq)(q,e,(e=>this.updatePreferences(e)));break;case G.method:(0,R.mq)(G,e,(()=>this.explainCommit(e.completionId)));break;case B.method:(0,R.mq)(B,e,(e=>this.stageFile(e)));break;case W.method:(0,R.mq)(W,e,(e=>this.unstageFile(e)));break;case j.method:(0,R.mq)(j,e,(e=>this.createPatchFromWip(e)))}}onRefresh(e){if(!this._pinned)if("wip"===this.mode){const e=this._context.wip?.changes?.repository.uri;this.updateWipState(this.container.git.getBestRepositoryOrFirst(null!=e?r.Uri.parse(e):void 0))}else{const e=this._pendingContext?.commit??this.getBestCommitOrStash();this.updateCommit(e,{immediate:!1})}}onReloaded(){this.notifyDidChangeState(!0)}onVisibilityChanged(e){if(this.ensureTrackers(),!e)return;const t=this._skipNextRefreshOnVisibilityChange;if(t&&(this._skipNextRefreshOnVisibilityChange=!1),this._bootstraping){if(this._bootstraping=!1,null==this._pendingContext)return;this.updateState()}else t||this.onRefresh(),this.updateState(!0)}onAnyConfigurationChanged(e){(v.D.changed(e,["defaultDateFormat","views.commitDetails.files","views.commitDetails.avatars"])||v.D.changedAny(e,"workbench.tree.renderIndentGuides")||v.D.changedAny(e,"workbench.tree.indent"))&&(this.updatePendingContext({preferences:{...this._context.preferences,...this._pendingContext?.preferences,...this.getPreferences()}}),this.updateState()),null!=this._context.commit&&v.D.changed(e,["views.commitDetails.autolinks","views.commitDetails.pullRequests"])&&(this.updateCommit(this._context.commit,{force:!0}),this.updateState())}getPreferences(){return{autolinksExpanded:this.container.storage.getWorkspace("views:commitDetails:autolinksExpanded")??!0,avatars:v.D.get("views.commitDetails.avatars"),dateFormat:v.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",files:v.D.get("views.commitDetails.files"),indentGuides:v.D.getAny("workbench.tree.renderIndentGuides")??"onHover",indent:v.D.getAny("workbench.tree.indent")}}onCommitSelected(e){null==e.data||"graph"===this.options.attachedTo&&"gitlens.views.graph"!==e.source||"default"===this.options.attachedTo&&"gitlens.views.graph"===e.source||("wip"!==this.mode?this._pinned&&"passive"===e.data.interaction?(this._commitStack.insert((0,p.qj)(e.data.commit)),this.updateNavigation()):this.host.show(!1,{preserveFocus:e.data.preserveFocus},e.data):e.data.commit.repoPath!==this._context.wip?.changes?.repository.path&&this.updateWipState(this.container.git.getRepository(e.data.commit.repoPath)))}_lineTrackerDisposable;_selectionTrackerDisposable;ensureTrackers(){if(this._selectionTrackerDisposable?.dispose(),this._selectionTrackerDisposable=void 0,this._lineTrackerDisposable?.dispose(),this._lineTrackerDisposable=void 0,this.host.visible&&(this._selectionTrackerDisposable=this.container.events.on("commit:selected",this.onCommitSelected,this),!this._pinned&&"graph"!==this.options.attachedTo)){const{lineTracker:e}=this.container;this._lineTrackerDisposable=e.subscribe(this,e.onDidChangeActiveLines(this.onActiveEditorLinesChanged,this))}}get isLineTrackerSuspended(){return"graph"!==this.options.attachedTo&&null==this._lineTrackerDisposable}suspendLineTracker(){setTimeout((()=>{this._lineTrackerDisposable?.dispose(),this._lineTrackerDisposable=void 0}),100)}createPatchFromWip(e){if(null==e.changes)return;const t={type:"wip",repository:{name:e.changes.repository.name,path:e.changes.repository.path,uri:e.changes.repository.uri},files:e.changes.files,revision:{to:h.CL,from:"HEAD"},checked:e.checked};(0,g.l)({mode:"create",create:{changes:[t]}})}onActiveEditorLinesChanged(e){if(e.pending||null==e.editor||e.suspended)return;if("wip"===this.mode){const t=this.container.git.getBestRepositoryOrFirst(e.editor);return void this.updateWipState(t)}const t=e.selections?.[0]?.active,i=null!=t?this.container.lineTracker.getState(t)?.commit:void 0;this.updateCommit(i)}_wipSubscription;get mode(){return this._pendingContext?.mode??this._context.mode}setMode(e,t){this.updatePendingContext({mode:e}),"commit"===e?(this._wipSubscription?.subscription.dispose(),this._wipSubscription=void 0,this.updateState(!0)):this.updateWipState(t??this.container.git.getBestRepositoryOrFirst())}async explainCommit(e){let t;try{const e=await this.container.ai.explainCommit(this._context.commit,{progress:{location:{viewId:this.host.id}}});if(null==e)throw new Error("Error retrieving content");t={summary:e}}catch(e){t={error:{message:e.message}}}this.host.notify(z,t,e)}navigateStack(e){const t=this._commitStack.navigate(e);null!=t&&this.updateCommit(t,{immediate:!0,skipStack:!0})}_cancellationTokenSource=void 0;async getState(e){let t;if(null!=this._cancellationTokenSource&&(this._cancellationTokenSource.cancel(),this._cancellationTokenSource=void 0),null!=e.commit&&(t=await this.getDetailsModel(e.commit,e.formattedMessage),!e.richStateLoaded)){this._cancellationTokenSource=new r.CancellationTokenSource;const t=this._cancellationTokenSource.token;setTimeout((()=>{t.isCancellationRequested||this.updateRichState(e,t)}),100)}return(0,D.q)({...this.host.baseWebviewState,mode:e.mode,commit:t,navigationStack:e.navigationStack,pinned:e.pinned,preferences:e.preferences,includeRichContent:e.richStateLoaded,autolinkedIssues:e.autolinkedIssues?.map(u.Gj),pullRequest:null!=e.pullRequest?(0,d.l1)(e.pullRequest):void 0,wip:e.wip})}async updateWipState(e){if(null!=this._wipSubscription){const{repo:t,subscription:i}=this._wipSubscription;e?.path!==t.path&&(i.dispose(),this._wipSubscription=void 0)}let t;if(null!=e){null==this._wipSubscription&&(this._wipSubscription={repo:e,subscription:this.subscribeToRepositoryWip(e)});if(t={changes:await this.getWipChange(e),repositoryCount:this.container.git.openRepositoryCount},null==this._pendingContext){if(await this.host.notify(Y,{wip:t}))return void(this._context.wip=t)}}this.updatePendingContext({wip:t}),this.updateState(!0)}async updateRichState(e,t){const{commit:i}=e;if(null==i)return;const r=await this.container.git.getBestRemoteWithRichProvider(i.repoPath);if(t.isCancellationRequested)return;const[s,n]=null!=r?.provider?await Promise.allSettled([v.D.get("views.commitDetails.autolinks.enabled")&&v.D.get("views.commitDetails.autolinks.enhanced")?(0,f.IN)(i.getEnrichedAutolinks(r)):void 0,v.D.get("views.commitDetails.pullRequests.enabled")?i.getAssociatedPullRequest(r):void 0]):[];if(t.isCancellationRequested)return;const o=(0,k.Sb)(s)?.value,a=(0,k.Sb)(n),c=this.getFormattedMessage(i,r,o);this.updatePendingContext({richStateLoaded:!0,formattedMessage:c,autolinkedIssues:null!=o?[...(0,A.DZ)(o.values(),(([e])=>e?.value))]:void 0,pullRequest:a}),this.updateState()}_repositorySubscription;async updateCommit(e,t){if(!t?.force&&this._context.commit?.sha===e?.ref)return;let i;if((0,l.f_)(e))i=e;else if(null!=e)if("stash"===e.refType){const t=await this.container.git.getStash(e.repoPath);i=t?.commits.get(e.ref)}else i=await this.container.git.getCommit(e.repoPath,e.ref);let r=this._pendingContext?.wip??this._context.wip;if(null!=this._repositorySubscription){const{repo:e,subscription:t}=this._repositorySubscription;i?.repoPath!==e.path&&(t.dispose(),this._repositorySubscription=void 0,r=void 0)}if(null==this._repositorySubscription&&null!=i){const e=await this.container.git.getOrOpenRepository(i.repoPath);null!=e&&(this._repositorySubscription={repo:e,subscription:this.subscribeToRepositoryWip(e)},"wip"===this.mode?this.updateWipState(e):r=void 0)}this.updatePendingContext({commit:i,richStateLoaded:Boolean(i?.isUncommitted)||!(0,y.fw)("gitlens:hasConnectedRemotes"),formattedMessage:void 0,autolinkedIssues:void 0,pullRequest:void 0,wip:r},t?.force),null!=t?.pinned&&this.updatePinned(t?.pinned),this.isLineTrackerSuspended&&this.ensureTrackers(),null!=i&&(t?.skipStack||this._commitStack.add((0,p.qj)(i)),this.updateNavigation()),this.updateState(t?.immediate??!0)}subscribeToRepositoryWip(e){return r.Disposable.from(e.watchFileSystem(1e3),e.onDidChangeFileSystem((()=>this.onWipChanged(e))),e.onDidChange((t=>{t.changed(m.I6.Index,m.du.Any)&&this.onWipChanged(e)})))}onWipChanged(e){this.updateWipState(e)}async getWipChange(e){const t=await this.container.git.getStatusForRepo(e.path);if(null==t)return;const i=[];for(const e of t.files){const t={repoPath:e.repoPath,path:e.path,status:e.status,originalPath:e.originalPath,staged:e.staged};i.push(t),e.staged&&e.wip&&i.push({...t,staged:!1})}return{repository:{name:e.name,path:e.path,uri:e.uri.toString()},branchName:t.branch,files:i}}updatePinned(e,t){e!==this._context.pinned&&(this._pinned=e,this.ensureTrackers(),this.updatePendingContext({pinned:e}),this.updateState(t))}updatePreferences(e){if(this._context.preferences?.autolinksExpanded===e.autolinksExpanded&&this._context.preferences?.files?.compact===e.files?.compact&&this._context.preferences?.files?.icon===e.files?.icon&&this._context.preferences?.files?.layout===e.files?.layout&&this._context.preferences?.files?.threshold===e.files?.threshold)return;const t={...this._context.preferences,...this._pendingContext?.preferences};null!=e.autolinksExpanded&&this._context.preferences?.autolinksExpanded!==e.autolinksExpanded&&(this.container.storage.storeWorkspace("views:commitDetails:autolinksExpanded",e.autolinksExpanded),t.autolinksExpanded=e.autolinksExpanded),null!=e.files&&(this._context.preferences?.files?.compact!==e.files?.compact&&v.D.updateEffective("views.commitDetails.files.compact",e.files?.compact),this._context.preferences?.files?.icon!==e.files?.icon&&v.D.updateEffective("views.commitDetails.files.icon",e.files?.icon),this._context.preferences?.files?.layout!==e.files?.layout&&v.D.updateEffective("views.commitDetails.files.layout",e.files?.layout),this._context.preferences?.files?.threshold!==e.files?.threshold&&v.D.updateEffective("views.commitDetails.files.threshold",e.files?.threshold),t.files=e.files),this.updatePendingContext({preferences:t}),this.updateState()}updatePendingContext(e,t=!1){const[i,r]=(0,_.OY)(this._context,this._pendingContext,e,t);return i&&(this._pendingContext=r),i}_notifyDidChangeStateDebounced=void 0;updateState(e=!1){e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,C.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced())}updateNavigation(){let e=this._commitStack.get(this._commitStack.position-1)?.ref;null!=e&&(e=(0,p.zL)(e)),this.updatePendingContext({navigationStack:{count:this._commitStack.count,position:this._commitStack.position,hint:e}}),this.updateState()}async notifyDidChangeState(e=!1){const t=(0,P.UH)();if(this._notifyDidChangeStateDebounced?.cancel(),!e&&null==this._pendingContext)return!1;let i;return null!=this._pendingContext?(i={...this._context,...this._pendingContext},this._context=i,this._pendingContext=void 0):i=this._context,r.window.withProgress({location:{viewId:this.host.id}},(async()=>{try{await this.host.notify(Q,{state:await this.getState(i)})}catch(e){S.Yd.error(t,e)}}))}getBestCommitOrStash(){if(this._pinned)return;let e;if("graph"!==this.options.attachedTo&&null!=r.window.activeTextEditor){const{lineTracker:t}=this.container,i=t.selections?.[0].active;null!=i&&(e=t.getState(i)?.commit)}else if(e=this._pendingContext?.commit,null==e){const t=this.container.events.getCachedEventArgs("commit:selected");e=t?.commit}return e}async getDetailsModel(e,t){const[i,r,n]=await Promise.allSettled([e.hasFullDetails()?e:e.ensureFullDetails().then((()=>e)),e.author.getAvatarUri(e,{size:32}),this.container.git.getBestRemoteWithRichProvider(e.repoPath,{includeDisconnected:!0})]);e=(0,k.Sb)(i,e);const o=(0,k.Sb)(r),a=(0,k.Sb)(n);null==t&&(t=this.getFormattedMessage(e,a));const c=null!=e.message?this.container.autolinks.getAutolinks(e.message,a):void 0;return{repoPath:e.repoPath,sha:e.sha,shortSha:e.shortSha,author:{...e.author,avatar:o?.toString(!0)},message:t,parents:e.parents,stashNumber:"stash"===e.refType?e.number:void 0,files:e.files,stats:e.stats,autolinks:null!=c?[...(0,A.UI)(c.values(),s.G)]:void 0}}getFormattedMessage(e,t,i){let r=c.i.fromTemplate("${message}",e);const s=r.indexOf("\n");return-1!==s&&(r=`${r.substring(0,s)}\0\n\0${r.substring(s+1)}`),v.D.get("views.commitDetails.autolinks.enabled")?this.container.autolinks.linkify(r,"html",null!=t?[t]:void 0,i):r}async getFileCommitFromParams(e){let t;if("wip"===this.mode){const e=this._context.wip?.changes?.repository.uri;if(null==e)return;t=await this.container.git.getCommit(r.Uri.parse(e),h.CL)}else t=this._context.commit;return t=await(t?.getCommitForFile(e.path,e.staged)),null!=t?[t,t.file]:void 0}showAutolinkSettings(){(0,w.P0)(n.Gh.ShowSettingsPageAndJumpToAutolinks)}showCommitPicker(){(0,o.m)({command:"log",state:{reference:"HEAD",repo:this._context.commit?.repoPath,openPickInView:!0}})}showCommitSearch(){(0,o.m)({command:"search",state:{openPickInView:!0}})}showCommitActions(){null==this._context.commit||this._context.commit.isUncommitted||(0,a.$J)(this._context.commit)}async showFileActions(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.$J)(i,r)}switchMode(e){let t;if("wip"===e.mode){let{repoPath:i}=e;if(null==i){if(t=this.container.git.getBestRepositoryOrFirst(),null==t)return;i=t.path}else t=this.container.git.getRepository(i)}this.setMode(e.mode,t)}async openFileComparisonWithWorking(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.ce)(r,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)})}async openFileComparisonWithPrevious(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.vw)(r,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)}),this.container.events.fire("file:selected",{uri:r.uri},{source:this.host.id})}async openFile(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;this.suspendLineTracker(),(0,a.ZB)(r,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)})}async openFileOnRemote(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;(0,a.YM)(r,i)}async stageFile(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;await this.container.git.stageFile(i.repoPath,r.path)}async unstageFile(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,r]=t;await this.container.git.unstageFile(i.repoPath,r.path)}getShowOptions(e){return e.showOptions}}X([(0,b.fF)({args:!1})],CommitDetailsWebviewProvider.prototype,"getState",1),X([(0,b.fF)({args:!1})],CommitDetailsWebviewProvider.prototype,"updateWipState",1),X([(0,b.fF)({args:!1})],CommitDetailsWebviewProvider.prototype,"updateRichState",1)},2384:(e,t,i)=>{i.d(t,{HomeWebviewProvider:()=>HomeWebviewProvider});var r=i(9496),s=i(6516),n=i(9529),o=i(5798);const a=new o.jH("repositories/didChange"),c=new o.jH("subscription/didChange"),l=Object.freeze({dispose:()=>{}});class HomeWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),r.workspace.isTrusted?l:r.workspace.onDidGrantWorkspaceTrust(this.notifyDidChangeRepositories,this),this.container.subscription.onDidChange(this.onSubscriptionChanged,this))}_disposable;dispose(){this._disposable.dispose()}onRepositoriesChanged(){this.notifyDidChangeRepositories()}registerCommands(){return[(0,n.xR)(`${this.host.id}.refresh`,(()=>this.host.refresh(!0)),this)]}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChangeRepositories()}onSubscriptionChanged(e){this.notifyDidChangeSubscription(e.current)}async getState(e){return{...this.host.baseWebviewState,repositories:this.getRepositoriesState(),webroot:this.host.getWebRoot(),promoStates:await this.getCanShowPromos(e)}}getRepositoriesState(){return{count:this.container.git.repositoryCount,openCount:this.container.git.openRepositoryCount,hasUnsafe:this.container.git.hasUnsafeRepositories(),trusted:r.workspace.isTrusted}}async getCanShowPromos(e){const t={cw2023:!1,pro50:!1},i=e??await this.container.subscription.getSubscription(!0),r=new Date("2023-12-06T07:59:00.000Z").getTime();return Date.now()<r&&!(0,s.ww)(i)?t.cw2023=!0:null!=e&&((0,s.dz)(e)||(0,s.Z1)(e))&&(t.pro50=!0),t}notifyDidChangeRepositories(){this.host.notify(a,this.getRepositoriesState())}async notifyDidChangeSubscription(e){this.host.notify(c,{promoStates:await this.getCanShowPromos(e)})}}},5798:(e,t,i)=>{i.d(t,{M5:()=>s,Mb:()=>a,NM:()=>p,TB:()=>m,W2:()=>n,bo:()=>h,dp:()=>o,eP:()=>u,jH:()=>IpcNotificationType,ke:()=>IpcCommandType,mq:()=>r,n:()=>l,qi:()=>c});class IpcMessageType{constructor(e,t=!1,i=!1){this.method=e,this.reset=t,this.pack=i}_}class IpcCommandType extends IpcMessageType{}class IpcNotificationType extends IpcMessageType{}function r(e,t,i){e.method===t.method&&i(t.params,e)}const s=new IpcCommandType("webview/ready"),n=new IpcCommandType("webview/focus"),o=new IpcCommandType("command/execute"),a=new IpcCommandType("configuration/preview"),c=new IpcCommandType("configuration/update"),l=new IpcNotificationType("configuration/didChange"),h=new IpcNotificationType("configuration/didPreview"),u=new IpcNotificationType("webview/didOpenAnchor"),d=["rebaseEditor.enabled","currentLine.useUncommittedChangesFormat"];function p(e){return d.includes(e)}function m(e,t){}},5596:(e,t,i)=>{i.d(t,{SettingsWebviewProvider:()=>SettingsWebviewProvider});var r=i(9496),s=i(5255),n=i(9338),o=i(6450),a=i(7881),c=i(4092),l=i(5148),h=i(3105),u=i(4336),d=i(5798);class SettingsWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=l.D.onDidChangeAny(this.onAnyConfigurationChanged,this)}_disposable;_pendingJumpToAnchor;dispose(){this._disposable.dispose()}includeBootstrap(){const e=[["user","User"]];return r.workspace.workspaceFolders?.length&&e.push(["workspace","Workspace"]),{...this.host.baseWebviewState,version:this.container.version,config:l.D.getAll(!0),customSettings:this.getCustomSettings(),scope:"user",scopes:e}}onReloaded(){this.notifyDidChangeConfiguration()}onShowing(e,t,...i){const r=i[0];if(r&&"string"==typeof r){if(!e&&this.host.ready&&this.host.visible)return queueMicrotask((()=>{this.host.notify(d.eP,{anchor:r,scrollBehavior:"smooth"})})),!0;this._pendingJumpToAnchor=r}return!0}onActiveChanged(e){e&&this.notifyDidChangeConfiguration()}onReady(){if(null!=this._pendingJumpToAnchor){const e=this._pendingJumpToAnchor;this._pendingJumpToAnchor=void 0,this.host.notify(d.eP,{anchor:e,scrollBehavior:"auto"})}}onMessageReceived(e){if(null!=e)switch(e.method){case d.qi.method:u.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,d.mq)(d.qi,e,(async e=>{const t="workspace"===e.scope?r.ConfigurationTarget.Workspace:r.ConfigurationTarget.Global;let i;for(i in e.changes){let r=e.changes[i];if((0,d.NM)(i)){const e=this.customSettings.get(i);null!=e&&"boolean"==typeof r&&await e.update(r);continue}(0,d.TB)(i,r);const s=l.D.inspect(i);if(null!=r)if("workspace"===e.scope){if(r===s.workspaceValue)continue}else{if(r===s.globalValue&&r!==s.defaultValue)continue;r===s.defaultValue&&(r=void 0)}await l.D.update(i,r,t)}for(const i of e.removes)await l.D.update(i,void 0,t)}));break;case d.Mb.method:u.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,d.mq)(d.Mb,e,(async t=>{switch(t.type){case"commit":case"commit-uncommitted":{const i=new o.aM(this.container,"~/code/eamodio/vscode-gitlens-demo","fe26af408293cba5b4bfd77306e1ac9ff7ccaef8",new o._j("You","eamodio@gmail.com",new Date("2016-11-12T20:41:00.000Z")),new o._j("You","eamodio@gmail.com",new Date("2020-11-01T06:57:21.000Z")),"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",["3ac1d3f51d7cf5f438cc69f25f6740536ad80fef"],"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",new a.K8("~/code/eamodio/vscode-gitlens-demo","code.ts",a.NV.Modified),void 0,[]);let r,s,h=!1;switch(t.key){case l.D.name("currentLine.format"):h=l.D.get("currentLine.pullRequests.enabled");break;case l.D.name("statusBar.format"):h=l.D.get("statusBar.pullRequests.enabled")}h&&(r=new c.i7({id:"github",name:"GitHub",domain:"github.com",icon:"github"},{name:"Eric Amodio",avatarUrl:"https://avatars1.githubusercontent.com/u/641685?s=32&v=4",url:"https://github.com/eamodio"},"1",void 0,"Supercharged","https://github.com/gitkraken/vscode-gitlens/pulls/1","merged",new Date("Sat, 12 Nov 2016 19:41:00 GMT"),void 0,new Date("Sat, 12 Nov 2016 20:41:00 GMT")));try{s=n.i.fromTemplate(t.format,i,{dateFormat:l.D.get("defaultDateFormat"),pullRequest:r,messageTruncateAtNewLine:!0})}catch{s="Invalid format"}await this.host.notify(d.bo,{preview:s},e.completionId)}}}))}}onAnyConfigurationChanged(e){if(!l.D.changedAny(e,s.m1)){if(!l.D.changedAny(e,[...(0,h.UI)(this.customSettings.values(),(e=>e.name))]))return}this.notifyDidChangeConfiguration()}_customSettings;get customSettings(){return null==this._customSettings&&(this._customSettings=new Map([["rebaseEditor.enabled",{name:"workbench.editorAssociations",enabled:()=>this.container.rebaseEditor.enabled,update:this.container.rebaseEditor.setEnabled}],["currentLine.useUncommittedChangesFormat",{name:"currentLine.uncommittedChangesFormat",enabled:()=>null!=l.D.get("currentLine.uncommittedChangesFormat"),update:async e=>l.D.updateEffective("currentLine.uncommittedChangesFormat",e?"✏️ ${ago}":null)}]])),this._customSettings}getCustomSettings(){const e=Object.create(null);for(const[t,i]of this.customSettings)e[t]=i.enabled();return e}notifyDidChangeConfiguration(){return this.host.notify(d.n,{config:l.D.getAll(!0),customSettings:this.getCustomSettings()})}}},6260:(e,t,i)=>{i.d(t,{wU:()=>b,Q5:()=>C,qW:()=>A,Db:()=>S,OY:()=>P});var r=i(9496),s=i(4290),n=i(2226),o=i(9529),a=i(2061),c=i(1219);var l=i(4336),h=i(6004),u=i(7469),d=i(6398),p=i(5798),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&m(t,i,n),n};const w=new TextDecoder("utf8"),v=new TextEncoder;let y=0;let b=class{constructor(e,t,i,s,n,o){this.container=e,this._commandRegistrar=t,this.descriptor=i,this.instanceId=s,this.parent=n,this.id=i.id,this.webview=n.webview;const a="onDidChangeViewState"in n;this._isEditor=a,this._originalTitle=i.title,n.title=i.title,this._initializing=o(e,this).then((e=>{this.provider=e,this._disposed?e.dispose():this.disposable=r.Disposable.from(r.window.onDidChangeWindowState(this.onWindowStateChanged,this),n.webview.onDidReceiveMessage(this.onMessageReceivedCore,this),a?n.onDidChangeViewState((({webviewPanel:{visible:e,active:t}})=>this.onParentVisibilityChanged(e,t))):n.onDidChangeVisibility((()=>this.onParentVisibilityChanged(this.visible,this.active))),n.onDidDispose(this.onParentDisposed,this),...this.provider.registerCommands?.()??[],this.provider)}))}static async create(e,t,i,r,s,n){const o=new b(e,t,i,r,s,n);return await o.initialize(),o}_onDidDispose=new r.EventEmitter;get onDidDispose(){return this._onDidDispose.event}id;_ready=!1;get ready(){return this._ready}disposable;provider;webview;_disposed=!1;dispose(){this._disposed=!0,A(this.descriptor.contextKeyPrefix),this.provider?.onFocusChanged?.(!1),this.provider?.onVisibilityChanged?.(!1),this._ready=!1,this._onDidDispose.fire(),this.disposable?.dispose()}registerWebviewCommand(e,t){return this._commandRegistrar.registerCommand(this.provider,this.id,this.instanceId,e,t)}_initializing;async initialize(){null!=this._initializing&&(await this._initializing,this._initializing=void 0)}_isEditor;isEditor(){return this._isEditor}isView(){return!this._isEditor}get active(){return"active"in this.parent?!this._disposed&&this.parent.active:!this._disposed&&void 0}get badge(){return"badge"in this.parent?this.parent.badge:void 0}set badge(e){if(!("badge"in this.parent))throw new Error("The 'badge' property not supported on Webview parent");this.parent.badge=e}_description;get description(){return"description"in this.parent?this.parent.description:this._description}set description(e){"description"in this.parent&&(this.parent.description=e),this._description=e}_originalTitle;get originalTitle(){return this._originalTitle}get title(){return this.parent.title??this._originalTitle}set title(e){this.parent.title=e}get visible(){return!this._disposed&&this.parent.visible}canReuseInstance(e,...t){if(this.isEditor())return(null==e?.column||e.column===this.parent.viewColumn)&&this.provider.canReuseInstance?.(...t)}getSplitArgs(){return this.isEditor()?this.provider.getSplitArgs?.()??[]:[]}async show(e,t,...i){null==t&&(t={});const s=this.provider.onShowing?.(e,t,...i);if(null!=s)if((0,u.tI)(s)){if(!1===await s)return}else if(!1===s)return;e&&(this.webview.html=await this.getHtml(this.webview)),this.isEditor()?e||this.parent.reveal(t.column??this.parent.viewColumn??this.descriptor.column??r.ViewColumn.Beside,t.preserveFocus??!1):this.isView()&&(await(0,o.dO)(`${this.id}.focus`,t),e&&this.provider.onVisibilityChanged?.(!0)),S(this.descriptor.contextKeyPrefix)}get baseWebviewState(){return{webviewId:this.id,webviewInstanceId:this.instanceId,timestamp:Date.now()}}_cspNonce=(0,s.Vu)();get cspNonce(){return this._cspNonce}asWebviewUri(e){return this.webview.asWebviewUri(e)}async refresh(e){e&&this.clearPendingIpcNotifications(),this.provider.onRefresh?.(e);const t=this._ready;this._ready=!1;const i=await this.getHtml(this.webview);e&&(this.webview.html=""),this.webview.html!==i?this.webview.html=i:t&&(this._ready=!0)}onParentDisposed(){this.dispose()}onMessageReceivedCore(e){if(null!=e)switch(e.method){case p.M5.method:(0,p.mq)(p.M5,e,(()=>{this._ready=!0,this.sendPendingIpcNotifications(),this.provider.onReady?.()}));break;case p.W2.method:(0,p.mq)(p.W2,e,(e=>{this.onViewFocusChanged(e)}));break;case p.dp.method:(0,p.mq)(p.dp,e,(e=>{null!=e.args?(0,o.P0)(e.command,...e.args):(0,o.P0)(e.command)}));break;default:this.provider.onMessageReceived?.(e)}}onViewFocusChanged(e){S(this.descriptor.contextKeyPrefix),this.provider.onFocusChanged?.(e.focused)}onParentVisibilityChanged(e,t){!0!==this.descriptor.webviewHostOptions?.retainContextWhenHidden&&(e?this._ready?this.sendPendingIpcNotifications():null!=this.provider.onReloaded?(this.clearPendingIpcNotifications(),this.provider.onReloaded()):this.refresh():this._ready=!1),e?(this.container.usage.track(`${this.descriptor.trackingFeature}:shown`),S(this.descriptor.contextKeyPrefix),null!=t&&(this.provider.onActiveChanged?.(t),t||this.provider.onFocusChanged?.(!1))):(A(this.descriptor.contextKeyPrefix),null!=t&&this.provider.onActiveChanged?.(!1),this.provider.onFocusChanged?.(!1)),this.provider.onVisibilityChanged?.(e)}onWindowStateChanged(e){this.visible&&this.provider.onWindowFocusChanged?.(e.focused)}getRootUri(){return this.container.context.extensionUri}_webRoot;getWebRoot(){return null==this._webRoot&&(this._webRoot=this.asWebviewUri(this.getWebRootUri()).toString()),this._webRoot}_webRootUri;getWebRootUri(){return null==this._webRootUri&&(this._webRootUri=r.Uri.joinPath(this.getRootUri(),"dist","webviews")),this._webRootUri}async getHtml(e){const t=this.getWebRootUri(),i=r.Uri.joinPath(t,this.descriptor.fileName),[s,n,o,a,c]=await Promise.all([r.workspace.fs.readFile(i),this.provider.includeBootstrap?.(),this.provider.includeHead?.(),this.provider.includeBody?.(),this.provider.includeEndOfBody?.()]);return C(w.decode(s),this.id,this.instanceId,e.cspSource,this._cspNonce,this.asWebviewUri(this.getRootUri()).toString(),this.getWebRoot(),this.isEditor()?"editor":"view",n,o,a,c)}nextIpcId(){return 1073741824===y?y=1:y++,`host:${y}`}async notify(e,t,i){let r;if(e.pack&&null!=t){const i=(0,h.UH)(),s=(0,d.k)((0,h.QR)(` serializing msg=${e.method}`,i),{log:!1,logLevel:"debug"});r=v.encode(JSON.stringify(t)),s?.stop()}const s={id:this.nextIpcId(),method:e.method,params:r??t,packed:null!=r,completionId:i},n=await this.postMessage(s);return n?this._pendingIpcNotifications.clear():this.addPendingIpcNotificationCore(e,s),n}async postMessage(e){if(!this._ready)return Promise.resolve(!1);const t=(0,h.UH)();let i;const s=Promise.race([this.webview.postMessage(e).then((e=>(clearTimeout(i),e)),(e=>(clearTimeout(i),l.Yd.error(t,e),!1))),new Promise((e=>{i=setTimeout((()=>{(0,h.lH)(t,void 0,"TIMEDOUT"),e(!1)}),3e4)}))]);let o;if(this.isView()){const e=await(0,n.Zo)(s,void 0,100);o=e.paused?await r.window.withProgress({location:{viewId:this.id}},(()=>e.value)):e.value}else o=await s;return o}_pendingIpcNotifications=new Map;addPendingIpcNotification(e,t,i){this.addPendingIpcNotificationCore(e,t.get(e)?.bind(i))}addPendingIpcNotificationCore(e,t){e.reset&&this._pendingIpcNotifications.clear(),null!=t&&this._pendingIpcNotifications.set(e,t)}clearPendingIpcNotifications(){this._pendingIpcNotifications.clear()}sendPendingIpcNotifications(){if(!this._ready||0===this._pendingIpcNotifications.size)return;const e=new Map(this._pendingIpcNotifications);this._pendingIpcNotifications.clear();for(const t of e.values())"function"==typeof t?t():this.postMessage(t)}};function C(e,t,i,r,s,n,o,a,c,l,h,u){return e.replace(/#{(head|body|endOfBody|webviewId|webviewInstanceId|placement|cspSource|cspNonce|root|webroot)}/g,((e,d)=>{switch(d){case"head":return l??"";case"body":return h??"";case"endOfBody":return`${null!=c?`<script type="text/javascript" nonce="${s}">window.bootstrap=${JSON.stringify(c)};<\/script>`:""}${u??""}`;case"webviewId":return t;case"webviewInstanceId":return i??"";case"placement":return a;case"cspSource":return r;case"cspNonce":return s;case"root":return n;case"webroot":return o;default:return""}}))}function A(e){(0,a.v)(`${e}:visible`,!1)}function S(e){(0,a.v)(`${e}:visible`,!0)}function P(e,t,i,s=!1){let n=!1;for(const[o,a]of Object.entries(i)){const i=e[o];!s&&(i instanceof r.Uri||a instanceof r.Uri)&&i?.toString()===a?.toString()||(s||i!==a||void 0===a&&!(o in e)||null!=t&&o in t)&&(null==t&&(t={}),t[o]=a,n=!0)}return[n,t]}f([(0,c.fF)({args:!1})],b.prototype,"show",1),f([(0,c.fF)()],b.prototype,"refresh",1),f([(0,c.fF)()],b.prototype,"onParentDisposed",1),f([(0,c.fF)({args:{0:e=>null!=e?`${e.id}, method=${e.method}`:"<undefined>"}})],b.prototype,"onMessageReceivedCore",1),f([(0,c.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],b.prototype,"onViewFocusChanged",1),f([(0,c.fF)()],b.prototype,"onParentVisibilityChanged",1),f([(e,t,i)=>{let r;if("function"==typeof i.value?r=i.value:"function"==typeof i.get&&(r=i.get),void 0===r)throw new Error("Not supported");const s=`$serialize$${t}`;i.value=function(...e){Object.prototype.hasOwnProperty.call(this,s)||Object.defineProperty(this,s,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let t=this[s];const i=async()=>await r.apply(this,e);return t=null==t?i():t.then(i,i),this[s]=t,t}},(0,c.fF)({args:!1,enter:e=>`(${e.id}|${e.method}${e.completionId?`+${e.completionId}`:""})`})],b.prototype,"postMessage",1),b=f([(0,c.hJ)((e=>`WebviewController(${e.id}${null!=e.instanceId?`|${e.instanceId}`:""})`))],b)},620:(e,t,i)=>{i.d(t,{V:()=>WebviewsController,W:()=>v});var r=i(9496),s=i(4290),n=i(718),o=i(9529),a=i(1219),c=i(3105),l=i(4336),h=i(6004),u=i(9701);class WebviewCommandRegistrar{_commandRegistrations=new Map;dispose(){this._commandRegistrations.forEach((({subscription:e})=>{e.dispose()}))}registerCommand(e,t,i,r,s){let n=this._commandRegistrations.get(r);if(null==n){const e=new Map;n={subscription:(0,o.vg)(r,((...t)=>{const i=t[0];if(!(0,u.s4)(i))return;const s=i.webviewInstance?`${i.webview}:${i.webviewInstance}`:i.webview,n=e.get(s);if(null==n)throw new Error(`Unable to find Command '${r}' registration for Webview '${s}'`);n.callback.call(n.thisArg,i)}),this),handlers:e},this._commandRegistrations.set(r,n)}const a=i?`${t}:${i}`:t;if(n.handlers.has(a))throw new Error(`Command '${r}' has already been registered for Webview '${a}'`);return n.handlers.set(a,{callback:s,thisArg:e}),{dispose:()=>{n.handlers.delete(a),0===n.handlers.size&&(this._commandRegistrations.delete(r),n.subscription.dispose())}}}}var d=i(6260),p=Object.defineProperty,m=Object.getOwnPropertyDescriptor,g=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n),n};class WebviewsController{constructor(e){this.container=e,this.disposables.push(this._commandRegistrar=new WebviewCommandRegistrar)}disposables=[];_commandRegistrar;_panels=new Map;_views=new Map;dispose(){this.disposables.forEach((e=>{e.dispose()}))}registerWebviewView(e,t,i){const s=(0,h.QR)(`WebviewView(${e.id})`),a={descriptor:e};this._views.set(e.id,a);const c=[];c.push(r.window.registerWebviewViewProvider(e.id,{resolveWebviewView:async(i,o,h)=>{if(a.descriptor.plusFeature){if(!await(0,n.C)())return;if(h.isCancellationRequested)return}l.Yd.debug(s,"Resolving view"),i.webview.options={enableCommandUris:!0,enableScripts:!0,localResourceRoots:[r.Uri.file(this.container.context.extensionPath)],...e.webviewOptions},i.title=e.title;const u=await d.wU.create(this.container,this._commandRegistrar,e,void 0,i,t);a.controller?.dispose(),a.controller=u,c.push(u.onDidDispose((()=>{l.Yd.debug(s,"Disposing view"),a.pendingShowArgs=void 0,a.controller=void 0})),u);let[p,m]=a.pendingShowArgs??[];a.pendingShowArgs=void 0,null==m&&v(o)&&(m=[{state:o.state}]),l.Yd.debug(s,"Showing view"),await u.show(!0,p,...m??[])}},null!=e.webviewHostOptions?{webviewOptions:e.webviewHostOptions}:void 0));const u=r.Disposable.from(...c);return this.disposables.push(u),{id:e.id,get ready(){return a.controller?.ready??!1},get visible(){return a.controller?.visible??!1},dispose:function(){u.dispose()},refresh:function(e){return null!=a.controller?a.controller.refresh(e):Promise.resolve()},show:async function(t,...r){if(l.Yd.debug(s,"Showing view"),null!=a.controller)return a.controller.show(!1,t,...r);a.pendingShowArgs=[t,r],null!=i&&await(i?.(...r)),(0,o.dO)(`${e.id}.focus`,t)}}}registerWebviewPanel(e,t,i){const a=(0,h.QR)(`WebviewPanel(${t.id})`),u={descriptor:t};this._panels.set(t.id,u);const p=[],{container:m,_commandRegistrar:g}=this;let v;async function y(e,...t){const{descriptor:o}=u;if(o.plusFeature&&!await(0,n.C)())return;m.usage.track(`${o.trackingFeature}:shown`);let c=e?.column??o.column??r.ViewColumn.Beside;c===r.ViewColumn.Beside&&null==r.window.tabGroups.activeTabGroup.activeTab&&(c=r.ViewColumn.Active);let h=w(u,e,...t);if(null==h){let n;null!=v?(l.Yd.debug(a,"Restoring panel"),n=v,v=void 0):(l.Yd.debug(a,"Creating panel"),n=r.window.createWebviewPanel(o.id,o.title,{viewColumn:c,preserveFocus:e?.preserveFocus??!1},{enableCommandUris:!0,enableScripts:!0,localResourceRoots:[r.Uri.file(m.context.extensionPath)],...o.webviewOptions,...o.webviewHostOptions})),n.iconPath=r.Uri.file(m.context.asAbsolutePath(o.iconPath)),h=await d.wU.create(m,g,o,o.allowMultipleInstances?(0,s.Vj)():void 0,n,i),u.controllers??=new Map,u.controllers.set(h.instanceId,h),p.push(h.onDidDispose((()=>{l.Yd.debug(a,`Disposing panel (${h.instanceId})`),u.controllers?.delete(h.instanceId)})),h),l.Yd.debug(a,`Showing panel (${h.instanceId})`),await h.show(!0,e,...t)}else l.Yd.debug(a,`Showing existing panel (${h.instanceId})`),await h.show(!1,e,...t)}const b=r.Disposable.from(...p,r.window.registerWebviewPanelSerializer(t.id,{deserializeWebviewPanel:async function(e,t){v=e,l.Yd.debug(a,"Deserializing panel state="+(null!=t?"<state>":"undefined")),await y({column:e.viewColumn,preserveFocus:!0,preserveInstance:!1},...null!=t?[{state:t}]:[])}}),(0,o.xR)(e.id,((t,...i)=>y({...e.options,...t},...i)),this));return this.disposables.push(b),{id:t.id,get instances(){return u.controllers?.size?(0,c.UI)(u.controllers.values(),(e=>f(e))):[]},getActiveInstance:function(){if(!u.controllers?.size)return;const e=(0,c.sE)(u.controllers.values(),(e=>e.active??!1));return null!=e?f(e):void 0},getBestInstance:function(e,...t){const i=w(u,e,...t);return null!=i?f(i):void 0},splitActiveInstance:function(e){const t=null!=u.controllers?(0,c.sE)(u.controllers.values(),(e=>e.active??!1)):void 0;return y({...e,preserveInstance:!1},...t?.getSplitArgs()??[])},dispose:function(){b.dispose()},show:y}}}function f(e){return{id:e.id,instanceId:e.instanceId,ready:e.ready,active:e.active??!1,visible:e.visible,canReuseInstance:function(t,...i){return e.canReuseInstance(t,...i)},close:function(){e.parent.dispose()},dispose:function(){e.dispose()},refresh:function(t){return e.refresh(t)},show:function(t,...i){return e.show(!1,t,...i)}}}function w(e,t,...i){let r;if(e.controllers?.size)if(e.descriptor.allowMultipleInstances){if(!1!==t?.preserveInstance&&(null!=t?.preserveInstance&&"string"==typeof t.preserveInstance&&(r=e.controllers.get(t.preserveInstance)),null==r)){let s,n;const o=[...e.controllers.values()].sort(((e,t)=>(e.active?-1:1)-(t.active?-1:1)));for(const e of o){n??=e,e.active&&(s=e);const o=e.canReuseInstance(t,...i);if(!0===o){r=e;break}!1===o&&(n===e&&(n=void 0),s===e&&(s=void 0))}null==r&&!0===t?.preserveInstance&&(r=s??n)}}else r=(0,c.Ps)(e.controllers)?.[1];return r}function v(e){return null!=e&&"object"==typeof e&&"state"in e&&null!=e.state&&"object"==typeof e.state}g([(0,a.fF)({args:{0:e=>e.id,1:!1,2:!1},singleLine:!0})],WebviewsController.prototype,"registerWebviewView",1),g([(0,a.fF)({args:{0:e=>e.id,1:e=>e.id,2:!1,3:!1},singleLine:!0})],WebviewsController.prototype,"registerWebviewPanel",1)},7338:(e,t,i)=>{i.d(t,{WelcomeWebviewProvider:()=>WelcomeWebviewProvider});var r=i(9496),s=i(6516),n=i(5148),o=i(5798);const a=new o.ke("welcome/configuration/update"),c=new o.jH("welcome/didChange",!0),l=Object.freeze({dispose:()=>{}});class WelcomeWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=r.Disposable.from(n.D.onDidChange(this.onConfigurationChanged,this),this.container.git.onDidChangeRepositories((()=>this.notifyDidChange()),this),r.workspace.isTrusted?l:r.workspace.onDidGrantWorkspaceTrust((()=>this.notifyDidChange()),this),this.container.subscription.onDidChange(this.onSubscriptionChanged,this))}_disposable;dispose(){this._disposable.dispose()}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChange()}onSubscriptionChanged(e){this.notifyDidChange(e.current)}onConfigurationChanged(e){(n.D.changed(e,"codeLens.enabled")||n.D.changed(e,"currentLine.enabled"))&&this.notifyDidChange()}onMessageReceived(e){if(e.method===a.method)(0,o.mq)(a,e,(e=>this.updateConfiguration(e)))}async getState(e){return{...this.host.baseWebviewState,version:this.container.version,config:{codeLens:n.D.get("codeLens.enabled",void 0,!0,!0),currentLine:n.D.get("currentLine.enabled",void 0,!0,!0)},repoFeaturesBlocked:!r.workspace.isTrusted||0===this.container.git.openRepositoryCount||this.container.git.hasUnsafeRepositories(),isTrialOrPaid:await this.getTrialOrPaidState(e),canShowPromo:await this.getCanShowPromo(e)}}async getTrialOrPaidState(e){const t=e??await this.container.subscription.getSubscription(!0);return!![s.jc.FreePlusInTrial,s.jc.Paid].includes(t.state)}async getCanShowPromo(e){const t=new Date("2023-12-06T07:59:00.000Z").getTime();if(Date.now()>t)return!1;const i=e??await this.container.subscription.getSubscription(!0);return!(0,s.ww)(i)}updateConfiguration(e){n.D.updateEffective(`${e.type}.enabled`,e.value)}async notifyDidChange(e){this.host.notify(c,{state:await this.getState(e)})}}},778:(e,t,i)=>{var r=i(2479);function s(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function n(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},i=e.name||"Function wrapped with `once`";return t.onceError=i+" shouldn't be called more than once",t.called=!1,t}e.exports=r(s),e.exports.strict=r(n),s.proto=s((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return s(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})}))},6470:e=>{function t(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function i(e,t){for(var i,r="",s=0,n=-1,o=0,a=0;a<=e.length;++a){if(a<e.length)i=e.charCodeAt(a);else{if(47===i)break;i=47}if(47===i){if(n===a-1||1===o);else if(n!==a-1&&2===o){if(r.length<2||2!==s||46!==r.charCodeAt(r.length-1)||46!==r.charCodeAt(r.length-2))if(r.length>2){var c=r.lastIndexOf("/");if(c!==r.length-1){-1===c?(r="",s=0):s=(r=r.slice(0,c)).length-1-r.lastIndexOf("/"),n=a,o=0;continue}}else if(2===r.length||1===r.length){r="",s=0,n=a,o=0;continue}t&&(r.length>0?r+="/..":r="..",s=2)}else r.length>0?r+="/"+e.slice(n+1,a):r=e.slice(n+1,a),s=a-n-1;n=a,o=0}else 46===i&&-1!==o?++o:o=-1}return r}var r={resolve:function(){for(var e,r="",s=!1,n=arguments.length-1;n>=-1&&!s;n--){var o;n>=0?o=arguments[n]:(void 0===e&&(e=process.cwd()),o=e),t(o),0!==o.length&&(r=o+"/"+r,s=47===o.charCodeAt(0))}return r=i(r,!s),s?r.length>0?"/"+r:"/":r.length>0?r:"."},normalize:function(e){if(t(e),0===e.length)return".";var r=47===e.charCodeAt(0),s=47===e.charCodeAt(e.length-1);return 0!==(e=i(e,!r)).length||r||(e="."),e.length>0&&s&&(e+="/"),r?"/"+e:e},isAbsolute:function(e){return t(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,i=0;i<arguments.length;++i){var s=arguments[i];t(s),s.length>0&&(void 0===e?e=s:e+="/"+s)}return void 0===e?".":r.normalize(e)},relative:function(e,i){if(t(e),t(i),e===i)return"";if((e=r.resolve(e))===(i=r.resolve(i)))return"";for(var s=1;s<e.length&&47===e.charCodeAt(s);++s);for(var n=e.length,o=n-s,a=1;a<i.length&&47===i.charCodeAt(a);++a);for(var c=i.length-a,l=o<c?o:c,h=-1,u=0;u<=l;++u){if(u===l){if(c>l){if(47===i.charCodeAt(a+u))return i.slice(a+u+1);if(0===u)return i.slice(a+u)}else o>l&&(47===e.charCodeAt(s+u)?h=u:0===u&&(h=0));break}var d=e.charCodeAt(s+u);if(d!==i.charCodeAt(a+u))break;47===d&&(h=u)}var p="";for(u=s+h+1;u<=n;++u)u!==n&&47!==e.charCodeAt(u)||(0===p.length?p+="..":p+="/..");return p.length>0?p+i.slice(a+h):(a+=h,47===i.charCodeAt(a)&&++a,i.slice(a))},_makeLong:function(e){return e},dirname:function(e){if(t(e),0===e.length)return".";for(var i=e.charCodeAt(0),r=47===i,s=-1,n=!0,o=e.length-1;o>=1;--o)if(47===(i=e.charCodeAt(o))){if(!n){s=o;break}}else n=!1;return-1===s?r?"/":".":r&&1===s?"//":e.slice(0,s)},basename:function(e,i){if(void 0!==i&&"string"!=typeof i)throw new TypeError('"ext" argument must be a string');t(e);var r,s=0,n=-1,o=!0;if(void 0!==i&&i.length>0&&i.length<=e.length){if(i.length===e.length&&i===e)return"";var a=i.length-1,c=-1;for(r=e.length-1;r>=0;--r){var l=e.charCodeAt(r);if(47===l){if(!o){s=r+1;break}}else-1===c&&(o=!1,c=r+1),a>=0&&(l===i.charCodeAt(a)?-1==--a&&(n=r):(a=-1,n=c))}return s===n?n=c:-1===n&&(n=e.length),e.slice(s,n)}for(r=e.length-1;r>=0;--r)if(47===e.charCodeAt(r)){if(!o){s=r+1;break}}else-1===n&&(o=!1,n=r+1);return-1===n?"":e.slice(s,n)},extname:function(e){t(e);for(var i=-1,r=0,s=-1,n=!0,o=0,a=e.length-1;a>=0;--a){var c=e.charCodeAt(a);if(47!==c)-1===s&&(n=!1,s=a+1),46===c?-1===i?i=a:1!==o&&(o=1):-1!==i&&(o=-1);else if(!n){r=a+1;break}}return-1===i||-1===s||0===o||1===o&&i===s-1&&i===r+1?"":e.slice(i,s)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var i=t.dir||t.root,r=t.base||(t.name||"")+(t.ext||"");return i?i===t.root?i+r:i+e+r:r}("/",e)},parse:function(e){t(e);var i={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return i;var r,s=e.charCodeAt(0),n=47===s;n?(i.root="/",r=1):r=0;for(var o=-1,a=0,c=-1,l=!0,h=e.length-1,u=0;h>=r;--h)if(47!==(s=e.charCodeAt(h)))-1===c&&(l=!1,c=h+1),46===s?-1===o?o=h:1!==u&&(u=1):-1!==o&&(u=-1);else if(!l){a=h+1;break}return-1===o||-1===c||0===u||1===u&&o===c-1&&o===a+1?-1!==c&&(i.base=i.name=0===a&&n?e.slice(1,c):e.slice(a,c)):(0===a&&n?(i.name=e.slice(1,o),i.base=e.slice(1,c)):(i.name=e.slice(a,o),i.base=e.slice(a,c)),i.ext=e.slice(o,c)),a>0?i.dir=e.slice(0,a-1):n&&(i.dir="/"),i},sep:"/",delimiter:":",win32:null,posix:null};r.posix=r,e.exports=r},2479:e=>{e.exports=function e(t,i){if(t&&i)return e(t)(i);if("function"!=typeof t)throw new TypeError("need wrapper function");return Object.keys(t).forEach((function(e){r[e]=t[e]})),r;function r(){for(var e=new Array(arguments.length),i=0;i<e.length;i++)e[i]=arguments[i];var r=t.apply(this,e),s=e[e.length-1];return"function"==typeof r&&r!==s&&Object.keys(s).forEach((function(e){r[e]=s[e]})),r}}},9496:e=>{e.exports=require("vscode")}},t={};function i(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,i),n.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{i.r(r),i.d(r,{activate:()=>hs,deactivate:()=>us});var e=i(9496),t=i(9376),s=i(429),n=i(6894),o=i(8294);Object.freeze({dispose:()=>{}});class Api{#i;constructor(e){this.#i=e}registerActionRunner(e,t){if(t.name===o.vj)throw new Error(`Cannot use the reserved name '${o.vj}'`);return"hover.commandHelp"===e&&(e="hover.commands"),this.#i.actionRunners.register(e,t)}}var a=i(2540),c=i(5255),l=i(7462),h=i(5367),u=i(6450),d=i(3646),p=i(9502),m=i(7925),g=i(9529);function f(e){!function(e){e.subscriptions.push(n.W.instance.actionRunners.registerBuiltInPartner("liveshare","hover.commands",{name:"Live Share",label:e=>"hover.commands"===e.type&&"You"!==e.commit.author.name?`$(live-share) Invite ${e.commit.author.name}${e.commit.author.presence?.statusText?` (${e.commit.author.presence?.statusText})`:""} to a Live Share Session`:"$(live-share) Start a Live Share Session",run:async e=>{"hover.commands"===e.type&&"You"!==e.commit.author.name?await(0,g.P0)(c.Gh.InviteToLiveShare,{email:e.commit.author.email}):await(0,g.P0)(c.Gh.InviteToLiveShare,{})}}))}(e)}var w=i(5148),v=i(2061),y=i(7512),b=i(2185),C=i(4336),A=i(9967),S=i(6398),P=i(1219),k=Object.defineProperty,D=Object.getOwnPropertyDescriptor,R=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?D(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&k(t,i,n),n};class Storage{constructor(e){this.context=e,this._disposable=this.context.secrets.onDidChange((e=>this._onDidChangeSecrets.fire(e)))}_onDidChange=new e.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeSecrets=new e.EventEmitter;get onDidChangeSecrets(){return this._onDidChangeSecrets.event}_disposable;dispose(){this._disposable.dispose()}get(e,t){return this.context.globalState.get(`${c.m1}:${e}`,t)}async delete(e){await this.context.globalState.update(`${c.m1}:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!1})}async deleteWithPrefix(e){const t=`${c.m1}:${e}`,i=`${t}:`;for(const e of this.context.globalState.keys())(e===t||e.startsWith(i))&&(await this.context.globalState.update(e,void 0),this._onDidChange.fire({key:e,workspace:!1}))}async store(e,t){await this.context.globalState.update(`${c.m1}:${e}`,t),this._onDidChange.fire({key:e,workspace:!1})}async getSecret(e){return this.context.secrets.get(e)}async deleteSecret(e){return this.context.secrets.delete(e)}async storeSecret(e,t){return this.context.secrets.store(e,t)}getWorkspace(e,t){return this.context.workspaceState.get(`${c.m1}:${e}`,t)}async deleteWorkspace(e){await this.context.workspaceState.update(`${c.m1}:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!0})}async deleteWorkspaceWithPrefix(e){const t=`${c.m1}:${e}`,i=`${t}:`;for(const e of this.context.workspaceState.keys())(e===t||e.startsWith(i))&&(await this.context.workspaceState.update(e,void 0),this._onDidChange.fire({key:e,workspace:!0}))}async storeWorkspace(e,t){await this.context.workspaceState.update(`${c.m1}:${e}`,t),this._onDidChange.fire({key:e,workspace:!0})}}R([(0,P.fF)({logThreshold:50})],Storage.prototype,"get",1),R([(0,P.fF)({logThreshold:250})],Storage.prototype,"delete",1),R([(0,P.fF)({logThreshold:250})],Storage.prototype,"deleteWithPrefix",1),R([(0,P.fF)({args:{1:!1},logThreshold:250})],Storage.prototype,"store",1),R([(0,P.fF)({args:!1,logThreshold:250})],Storage.prototype,"getSecret",1),R([(0,P.fF)({args:!1,logThreshold:250})],Storage.prototype,"deleteSecret",1),R([(0,P.fF)({args:!1,logThreshold:250})],Storage.prototype,"storeSecret",1),R([(0,P.fF)({logThreshold:25})],Storage.prototype,"getWorkspace",1),R([(0,P.fF)({logThreshold:250})],Storage.prototype,"deleteWorkspace",1),R([(0,P.fF)({logThreshold:250})],Storage.prototype,"deleteWorkspaceWithPrefix",1),R([(0,P.fF)({args:{1:!1},logThreshold:250})],Storage.prototype,"storeWorkspace",1);var _=i(4550),T=i(7707),F=i(9311),$=i(7139),I=Object.defineProperty,x=Object.getOwnPropertyDescriptor;let O=class extends $.mY{constructor(e){super(c.Gh.AddAuthors),this.container=e}execute(e){let t;return null!=e?.rootUri&&(t=this.container.git.getRepository(e.rootUri)),(0,F.m)({command:"co-authors",state:{repo:t,contributors:void 0}})}};O=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?x(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&I(t,i,n),n})([(0,g.WD)()],O);var E=i(3700),B=i(2509),W=Object.defineProperty,M=Object.getOwnPropertyDescriptor;let N=class extends $.pu{constructor(e){super([c.Gh.BrowseRepoAtRevision,c.Gh.BrowseRepoAtRevisionInNewWindow,c.Gh.BrowseRepoBeforeRevision,c.Gh.BrowseRepoBeforeRevisionInNewWindow]),this.container=e}preExecute(e,t){switch(e.command){case c.Gh.BrowseRepoAtRevisionInNewWindow:t={...t,before:!1,openInNewWindow:!0};break;case c.Gh.BrowseRepoBeforeRevision:t={...t,before:!0,openInNewWindow:!1};break;case c.Gh.BrowseRepoBeforeRevisionInNewWindow:t={...t,before:!0,openInNewWindow:!0}}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){i={...i};try{if(null==i.uri){if(null==(t=(0,$.SX)(t,e)))return}else t=i.uri;let r=await l.YY.fromUri(t);if(null==r.sha)return;const s=i?.before?await this.container.git.resolveReference(r.repoPath,`${r.sha}^`):r.sha;t=this.container.git.getRevisionUri(s,r.repoPath,r.repoPath),r=l.YY.fromRevisionUri(t),(0,B.ic)(t,{location:i.openInNewWindow?"newWindow":"addToWorkspace",name:`${(0,E.EZ)(r.repoPath)} @ ${r.shortSha}`}),i.openInNewWindow||(0,g.dO)("workbench.files.action.focusFilesExplorer")}catch(e){C.Yd.error(e,"BrowseRepoAtRevisionCommand"),(0,m.W8)("Unable to open the repository at the specified revision")}}};N=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?M(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&W(t,i,n),n})([(0,g.WD)()],N);var L=i(635),U=i(4298),G=Object.defineProperty,H=Object.getOwnPropertyDescriptor;let V=class extends $.mY{constructor(e){super(c.Gh.CloseUnchangedFiles),this.container=e}async execute(t){t={...t};try{if(null==t.uris){const i=await(0,L.vJ)("Close All Unchanged Files");if(null==i)return;const r=await this.container.git.getStatusForRepo(i.uri);if(null==r)return void e.window.showWarningMessage("Unable to close unchanged files");t.uris=r.files.map((e=>e.uri))}const i=0===t.uris.length;for(const r of e.window.tabGroups.all)for(const s of r.tabs)if(s.input instanceof e.TabInputText||s.input instanceof e.TabInputCustom||s.input instanceof e.TabInputNotebook){const r=s.input.uri;!i&&t.uris.some((e=>U.n.equals(e,r)))||e.window.tabGroups.close(s,!0)}else if(s.input instanceof e.TabInputTextDiff||s.input instanceof e.TabInputNotebookDiff){const r=s.input.modified;!i&&t.uris.some((e=>U.n.equals(e,r)))||e.window.tabGroups.close(s,!0)}}catch(e){C.Yd.error(e,"CloseUnchangedFilesCommand"),(0,m.W8)("Unable to close all unchanged files")}}};V=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?H(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&G(t,i,n),n})([(0,g.WD)()],V);var q=Object.defineProperty,j=Object.getOwnPropertyDescriptor;let Q=class extends $.pu{constructor(e){super([c.Gh.CompareWith,c.Gh.CompareHeadWith,c.Gh.CompareWorkingWith,c.Gh.Deprecated_DiffHeadWith,c.Gh.Deprecated_DiffWorkingWith]),this.container=e}preExecute(e,t){switch(e.command){case c.Gh.CompareWith:t={...t};break;case c.Gh.CompareHeadWith:case c.Gh.Deprecated_DiffHeadWith:(t={...t}).ref1="HEAD";break;case c.Gh.CompareWorkingWith:case c.Gh.Deprecated_DiffWorkingWith:(t={...t}).ref1=""}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,$.SX)(t,e),i={...i};try{let r;switch(i.ref1){case null:r="Compare";break;case"":r="Compare Working Tree with";break;case"HEAD":r="Compare HEAD with";break;default:r=`Compare ${i.ref1} with`}const s=(await(0,L.hM)(t,e,r))?.path;if(!s)return;null!=i.ref1&&null!=i.ref2?await this.container.searchAndCompareView.compare(s,i.ref1,i.ref2):this.container.searchAndCompareView.selectForCompare(s,i.ref1,{prompt:!0})}catch(e){C.Yd.error(e,"CompareWithCommmand"),(0,m.W8)("Unable to open comparison")}}};Q=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?j(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&q(t,i,n),n})([(0,g.WD)()],Q);var Y=Object.defineProperty,z=Object.getOwnPropertyDescriptor;let K=class extends $.pu{constructor(e){super(c.Gh.CopyCurrentBranch),this.container=e}async execute(t,i){const r=null!=(i=(0,$.SX)(i,t))?await l.YY.fromUri(i):void 0,s=await(0,L.hM)(r,t,"Copy Current Branch Name");if(null!=s)try{const t=await s.getBranch();t?.name&&await e.env.clipboard.writeText(t.name)}catch(e){C.Yd.error(e,"CopyCurrentBranchCommand"),(0,m.W8)("Unable to copy current branch name")}}};K=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?z(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Y(t,i,n),n})([(0,g.WD)()],K);var J=i(3016),X=i(1742);var Z=i(4043),ee=Object.defineProperty,te=Object.getOwnPropertyDescriptor;let ie=class extends $.pu{constructor(e){super([c.Gh.CopyDeepLinkToBranch,c.Gh.CopyDeepLinkToCommit,c.Gh.CopyDeepLinkToRepo,c.Gh.CopyDeepLinkToTag,c.Gh.CopyDeepLinkToComparison,c.Gh.CopyDeepLinkToWorkspace]),this.container=e}preExecute(e,t){return null==t&&((0,$.en)(e)?t={refOrRepoPath:e.node.commit}:(0,$.Qo)(e)?t=e.command===c.Gh.CopyDeepLinkToRepo?{refOrRepoPath:e.node.branch.repoPath,remote:e.node.branch.getRemoteName()}:{refOrRepoPath:e.node.branch}:(0,$._5)(e)?t={refOrRepoPath:e.node.tag}:(0,$.C$)(e)?t={refOrRepoPath:e.node.remote.repoPath,remote:e.node.remote.name}:(0,$.F4)(e)?t={refOrRepoPath:e.node.uri.fsPath,compareRef:e.node.compareRef,compareWithRef:e.node.compareWithRef}:(0,$.Bu)(e)&&(t={workspaceId:e.node.workspace.id})),this.execute(e.editor,e.uri,t)}async execute(t,i,r){if(null!=(r={...r}).workspaceId){try{await this.container.deepLinks.copyDeepLinkUrl(r.workspaceId)}catch(e){C.Yd.error(e,"CopyDeepLinkCommand"),(0,m.W8)("Unable to copy link")}return}let s,n;if(null==r?.refOrRepoPath){const e=null!=(i=(0,$.SX)(i,t))?await l.YY.fromUri(i):void 0;s=Z._n.Repository,n=(await(0,L.hM)(e,t,`Copy Link to ${(0,Z.$k)(s)}`))?.path}else"string"==typeof r.refOrRepoPath?(s=null==r.compareRef?Z._n.Repository:Z._n.Comparison,n=r.refOrRepoPath,r.refOrRepoPath=void 0):(s=(0,Z.$x)(r.refOrRepoPath.refType),n=r.refOrRepoPath.repoPath);if(n){if(!r.remote&&"branch"===r.refOrRepoPath?.refType&&(r.refOrRepoPath.remote||null!=r.refOrRepoPath.upstream?.name)){const[e,t]=(0,h.$q)(r.refOrRepoPath);null!=e&&null!=t&&(r.remote=t,r.prePickRemote=!0)}try{let t;const i=await this.container.git.getRemotes(n,{sort:!0}),o=i.find((e=>e.default));if(r.remote&&!r.prePickRemote)t=i.find((e=>e.name===r?.remote));else if(null!=o)t=o;else{const n=await async function(t,i="Choose a remote",r,s){const n=[];let o;if(0===r.length)i="No remotes found";else{if("default"===s?.autoPick&&r.length>1){const e=r.find((e=>e.default));null!=e&&(r=[e])}const e={upstream:!0,buttons:s?.setDefault?[J.ip]:void 0};for(const t of r)n.push((0,X.vl)(t,void 0,e)),t.name===s?.picked&&(o=n[n.length-1])}if(s?.autoPick&&1===r.length)return n[0];const a=e.window.createQuickPick();a.ignoreFocusOut=(0,B.hE)();const c=[];try{const e=await new Promise((e=>{c.push(a.onDidHide((()=>e(void 0))),a.onDidAccept((()=>{0!==a.activeItems.length&&e(a.activeItems[0])})),a.onDidTriggerItemButton((async t=>{t.button===J.ip&&(await t.item.item.setAsDefault(),e(t.item))}))),a.title=t,a.placeholder=i,a.matchOnDetail=!0,a.items=n,null!=o&&(a.activeItems=[o]),a.show()}));if(null==e)return;return e}finally{a.dispose(),c.forEach((e=>{e.dispose()}))}}(`Copy Link to ${(0,Z.$k)(s)}`,"Choose which remote to copy the link for",i,{autoPick:!0,picked:r.remote,setDefault:!0});if(null==n)return;t=n.item}if(null==t)return;null==r.refOrRepoPath?await this.container.deepLinks.copyDeepLinkUrl(n,t.url,r.compareRef,r.compareWithRef):await this.container.deepLinks.copyDeepLinkUrl(r.refOrRepoPath,t.url)}catch(e){C.Yd.error(e,"CopyDeepLinkCommand"),(0,m.W8)("Unable to copy link")}}}};ie=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?te(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ee(t,i,n),n})([(0,g.WD)()],ie);var re=i(6897),se=i(3105),ne=Object.defineProperty,oe=Object.getOwnPropertyDescriptor;let ae=class extends $.pu{constructor(e){super(c.Gh.CopyMessageToClipboard),this.container=e}async preExecute(e,t){return(0,$.en)(e)?((t={...t}).sha=e.node.commit.sha,null!=e.node.commit.message&&await e.node.commit.ensureFullDetails(),t.message=e.node.commit.message,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):(0,$.Qo)(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):(0,$._5)(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(t,i,r){i=(0,$.SX)(i,t),r={...r};try{if(!r.message){if(null!=r.repoPath&&null!=r.sha)return void await(0,re.SJ)({ref:r.sha,repoPath:r.repoPath});let e;if(null==i){if(e=this.container.git.getBestRepository(t)?.path,!e)return;const i=await this.container.git.getLog(e,{limit:1});if(null==i)return;const s=(0,se.Ps)(i.commits.values());if(null==s?.message)return;r.message=s.message}else if(null==r.message){const s=await l.YY.fromUri(i);if(e=s.repoPath,!e)return;if(null!=r.sha)return void await(0,re.SJ)({ref:r.sha,repoPath:e});{const e=t?.selection.active.line??0;if(e<0)return;try{const i=await this.container.git.getBlameForLine(s,e,t?.document);if(null==i||i.commit.isUncommitted)return;return void await(0,re.SJ)(i.commit)}catch(t){return C.Yd.error(t,"CopyMessageToClipboardCommand",`getBlameForLine(${e})`),void(0,m.W8)("Unable to copy message")}}}}await e.env.clipboard.writeText(r.message)}catch(e){C.Yd.error(e,"CopyMessageToClipboardCommand"),(0,m.W8)("Unable to copy message")}}};ae=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?oe(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ne(t,i,n),n})([(0,g.WD)()],ae);var ce=i(4321),le=Object.defineProperty,he=Object.getOwnPropertyDescriptor;let ue=class extends $.pu{constructor(e){super(c.Gh.CopyShaToClipboard),this.container=e}preExecute(e,t){return(0,$.en)(e)?((t={...t}).sha=e.node.commit.sha,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):(0,$.Qo)(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):(0,$._5)(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(t,i,r){i=(0,$.SX)(i,t),r={...r};try{if(!r.sha)if(null==i){const e=this.container.git.getBestRepository(t)?.path;if(!e)return;const i=await this.container.git.getLog(e,{limit:1});if(null==i)return;if(r.sha=(0,se.Ps)(i.commits.values())?.sha,null==r.sha)return}else if(null==r.sha){const e=t?.selection.active.line??0;if(e<0)return;try{const s=await l.YY.fromUri(i),n=await this.container.git.getBlameForLine(s,e,t?.document);if(null==n)return;r.sha=n.commit.sha}catch(t){return C.Yd.error(t,"CopyShaToClipboardCommand",`getBlameForLine(${e})`),void(0,m.W8)("Unable to copy commit SHA")}}await e.env.clipboard.writeText(w.D.get("advanced.abbreviateShaOnCopy")?(0,ce.zL)(r.sha):r.sha)}catch(e){C.Yd.error(e,"CopyShaToClipboardCommand"),(0,m.W8)("Unable to copy commit SHA")}}};ue=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?he(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&le(t,i,n),n})([(0,g.WD)()],ue);var de=Object.defineProperty,pe=Object.getOwnPropertyDescriptor;let me=class extends $.pu{constructor(e){super(c.Gh.CopyRelativePathToClipboard),this.container=e}preExecute(e){return(0,$.d$)(e)?this.execute(e.editor,e.node.commit.file.uri):this.execute(e.editor,e.uri)}async execute(t,i){let r="";if(null!=(i=(0,$.SX)(i,t))){const e=this.container.git.getBestRepository(t)?.uri;null!=e&&(r=this.container.git.getRelativePath(i,e))}await e.env.clipboard.writeText(r)}};me=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?pe(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&de(t,i,n),n})([(0,g.WD)()],me);var ge=i(6503),fe=Object.defineProperty,we=Object.getOwnPropertyDescriptor;let ve=class extends $.mY{constructor(e){super(c.Gh.CreatePullRequestOnRemote),this.container=e}async execute(e){if(null==e?.repoPath)return;const t=this.container.git.getRepository(e.repoPath);if(null==t)return;const i=await t.getRemote(e.remote);if(null==i?.provider)return;const r=i.provider.id,s=await t.getRemotes({filter:e=>e.provider?.id===r}),n={type:ge.J.CreatePullRequest,base:{branch:e.base,remote:void 0},compare:{branch:e.compare,remote:{path:i.path,url:i.url}}};await(0,g.P0)(c.Gh.OpenOnRemote,{resource:n,remotes:s})}};ve=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?we(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&fe(t,i,n),n})([(0,g.WD)()],ve);var ye=i(3636),be=i(5538),Ce=Object.defineProperty,Ae=Object.getOwnPropertyDescriptor;let Se=class extends $.pu{constructor(e){super([c.Gh.DiffDirectory,c.Gh.DiffDirectoryWithHead,c.Gh.ViewsOpenDirectoryDiff,c.Gh.ViewsOpenDirectoryDiffWithWorking]),this.container=e}async preExecute(e,t){switch(e.command){case c.Gh.DiffDirectoryWithHead:(t={...t}).ref1="HEAD",t.ref2=void 0;break;case c.Gh.ViewsOpenDirectoryDiff:"viewItem"===e.type&&e.node instanceof be.fc&&(t={...t},[t.ref1,t.ref2]=await e.node.getDiffRefs());break;case c.Gh.ViewsOpenDirectoryDiffWithWorking:(0,$.DW)(e)&&((t={...t}).ref1=e.node.ref.ref,t.ref2=void 0)}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,$.SX)(t,e),i={...i};try{const r=(await(0,L.hM)(t,e,"Directory Compare Working Tree With"))?.path;if(!r)return;if(!i.ref1){const e=await(0,ye.V)(r,"Directory Compare Working Tree with","Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==e)return;if(i.ref1=e.ref,null==i.ref1)return}(0,re.iK)(r,i.ref1,i.ref2)}catch(e){C.Yd.error(e,"OpenDirectoryCompareCommand"),(0,m.W8)("Unable to open directory compare")}}};Se=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ae(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ce(t,i,n),n})([(0,g.WD)()],Se);var Pe=Object.defineProperty,ke=Object.getOwnPropertyDescriptor;let De=class extends $.pu{constructor(e){super(c.Gh.DiffLineWithPrevious),this.container=e}preExecute(e,t){return"editorLine"===e.type&&(t={...t,line:e.line}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,$.SX)(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const r=i.commit?.getGitUri()??await l.YY.fromUri(t);try{const e=await this.container.git.getPreviousComparisonUrisForLine(r.repoPath,r,i.line,r.sha);if(null==e?.previous)return void(0,m.RR)();await(0,g.P0)(c.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:e.line,showOptions:i.showOptions})}catch(e){C.Yd.error(e,"DiffLineWithPreviousCommand",`getPreviousLineDiffUris(${r.repoPath}, ${r.fsPath}, ${r.sha})`),(0,m.W8)("Unable to open compare")}}};De=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ke(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Pe(t,i,n),n})([(0,g.WD)()],De);var Re=i(439),_e=Object.defineProperty,Te=Object.getOwnPropertyDescriptor;let Fe=class extends $.pu{constructor(e){super(c.Gh.DiffLineWithWorking),this.container=e}preExecute(e,t){return"editorLine"===e.type&&(t={...t,line:e.line}),this.execute(e.editor,e.uri,t)}async execute(t,i,r){if(null==(i=(0,$.SX)(i,t)))return;const s=await l.YY.fromUri(i);let n,o;if(null==(r={...r}).line&&(r.line=t?.selection.active.line??0),null==r.commit||r.commit.isUncommitted){const e=r.line;if(e<0)return;try{const i=await this.container.git.getBlameForLine(s,e,t?.document);if(null==i)return void(0,m.zk)("Unable to open compare");if(r.commit=i.commit,r.commit.isUncommitted){const e=await this.container.git.getStatusForFile(s.repoPath,s);null!=e?.indexStatus?(n=Re.pw,o=this.container.git.getAbsoluteUri(e.originalPath||e.path,r.commit.repoPath)):(n=r.commit.unresolvedPreviousSha,o=r.commit.file.originalUri??r.commit.file.uri)}else n=r.commit.sha,o=r.commit.file.uri;r.line=i.line.line-1}catch(t){return C.Yd.error(t,"DiffLineWithWorkingCommand",`getBlameForLine(${e})`),void(0,m.W8)("Unable to open compare")}}else n=r.commit.sha,o=r.commit.file?.uri??s;const a=await(r.commit.file?.getWorkingUri());null!=a?await(0,g.P0)(c.Gh.DiffWith,{repoPath:r.commit.repoPath,lhs:{sha:n,uri:o},rhs:{sha:"",uri:a},line:r.line,showOptions:r.showOptions}):e.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree")}};Fe=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Te(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&_e(t,i,n),n})([(0,g.WD)()],Fe);i(1848);var $e=Object.defineProperty,Ie=Object.getOwnPropertyDescriptor;let xe=class extends $.pu{constructor(e){super([c.Gh.DiffWithNext,c.Gh.DiffWithNextInDiffLeft,c.Gh.DiffWithNextInDiffRight]),this.container=e}preExecute(e,t){return e.command===c.Gh.DiffWithNextInDiffLeft&&(t={...t,inDiffLeftEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,$.SX)(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const r=i.commit?.getGitUri()??await l.YY.fromUri(t);try{const e=await this.container.git.getNextComparisonUris(r.repoPath,r,r.sha,i.inDiffLeftEditor?1:0);if(null==e?.next)return;await(0,g.P0)(c.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.current.sha??"",uri:e.current.documentUri()},rhs:{sha:e.next.sha??"",uri:e.next.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){C.Yd.error(e,"DiffWithNextCommand",`getNextDiffUris(${r.repoPath}, ${r.fsPath}, ${r.sha})`),(0,m.W8)("Unable to open compare")}}};xe=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ie(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&$e(t,i,n),n})([(0,g.WD)()],xe);var Oe=Object.defineProperty,Ee=Object.getOwnPropertyDescriptor;let Be=class extends $.pu{constructor(e){super([c.Gh.DiffWithPrevious,c.Gh.DiffWithPreviousInDiffLeft,c.Gh.DiffWithPreviousInDiffRight]),this.container=e}preExecute(e,t){return e.command===c.Gh.DiffWithPreviousInDiffRight&&(t={...t,inDiffRightEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(i={...i}).uri){if(null==(t=(0,$.SX)(t,e)))return}else t=i.uri;let r;if(null==i.line&&(i.line=e?.selection.active.line??0),null!=i.commit?.file){if(!i.commit.isUncommitted)return void await(0,g.P0)(c.Gh.DiffWith,{repoPath:i.commit.repoPath,lhs:{sha:`${i.commit.sha}^`,uri:i.commit.file.originalUri??i.commit.file.uri},rhs:{sha:"?"===i.commit.file.status?`${i.commit.sha}^3`:i.commit.sha||"",uri:i.commit.file.uri},line:i.line,showOptions:i.showOptions});r=i.commit?.getGitUri()}else r=await l.YY.fromUri(t);try{const e=await this.container.git.getPreviousComparisonUris(r.repoPath,r,r.sha,i.inDiffRightEditor?1:0);if(null==e?.previous){if(null==e)return void(0,m.RR)();if(null==e.current.sha)return void await(0,B.GR)(e.current,i.showOptions);if(!e.current.isUncommittedStaged)return void(0,m.RR)();e.previous=l.YY.fromFile(e.current.fileName,e.current.repoPath,Re.Ii)}await(0,g.P0)(c.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){C.Yd.error(e,"DiffWithPreviousCommand",`getPreviousDiffUris(${r.repoPath}, ${r.fsPath}, ${r.sha})`),(0,m.W8)("Unable to open compare")}}};Be=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ee(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Oe(t,i,n),n})([(0,g.WD)()],Be);var We=i(1857),Me=i(9729),Ne=i(3620),Le=Object.defineProperty,Ue=Object.getOwnPropertyDescriptor;let Ge=class extends $.pu{constructor(e){super(c.Gh.DiffWithRevision),this.container=e}async execute(e,t,i){if(null==(t=(0,$.SX)(t,e)))return;const r=await l.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{const e=this.container.git.getLogForFile(r.repoPath,r.fsPath).then((e=>e??(r.sha?this.container.git.getLogForFile(r.repoPath,r.fsPath,{ref:r.sha}):void 0))),t=`Open Changes with Revision${(0,Ne.vk)(c.NE.Dot,2,2)}`,s=await(0,We.D)(e,`${t}${r.getFormattedFileName({suffix:r.sha?`:${(0,ce.zL)(r.sha)}`:void 0,truncateTo:c.d$-t.length})}`,"Choose a commit to compare with",{picked:r.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await(0,g.P0)(c.Gh.DiffWith,{repoPath:r.repoPath,lhs:{sha:t.item.ref,uri:r},rhs:{sha:"",uri:r},line:i.line,showOptions:i.showOptions})},showOtherReferences:[Me.$w.fromCommand("Choose a Branch or Tag...",c.Gh.DiffWithRevisionFrom),Me.$w.fromCommand("Choose a Stash...",c.Gh.DiffWithRevisionFrom,{stash:!0})]});if(null==s)return;await(0,g.P0)(c.Gh.DiffWith,{repoPath:r.repoPath,lhs:{sha:s.ref,uri:r},rhs:{sha:"",uri:r},line:i.line,showOptions:i.showOptions})}catch(e){C.Yd.error(e,"DiffWithRevisionCommand"),(0,m.W8)("Unable to open compare")}}};Ge=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ue(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Le(t,i,n),n})([(0,g.WD)()],Ge);var He=Object.defineProperty,Ve=Object.getOwnPropertyDescriptor;let qe=class extends $.pu{constructor(e){super(c.Gh.DiffWithRevisionFrom),this.container=e}async execute(e,t,i){if(null==(t=(0,$.SX)(t,e)))return;const r=await l.YY.fromUri(t);if(!r.repoPath)return void(0,m.bi)("Unable to open file compare");null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const s=this.container.git.getRelativePath(r,r.repoPath);let n,o,a,h;if(i?.stash){const e=`Open Changes with Stash${(0,Ne.vk)(c.NE.Dot,2,2)}`,t=await(0,We.h)(this.container.git.getStash(r.repoPath),`${e}${r.getFormattedFileName({truncateTo:c.d$-e.length})}`,"Choose a stash to compare with",{empty:`No stashes with '${r.getFormattedFileName()}' found`,filter:e=>e.files?.some((e=>e.path===s||e.originalPath===s))??!0});if(null==t)return;n=t.ref,o=n}else{const e=`Open Changes with Branch or Tag${(0,Ne.vk)(c.NE.Dot,2,2)}`,t=await(0,ye.V)(r.repoPath,`${e}${r.getFormattedFileName({truncateTo:c.d$-e.length})}`,"Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==t)return;n=t.ref,o=(0,ce.UR)(t)&&t.remote?`remotes/${n}`:n}if(null==n)return;const u=await this.container.git.getDiffStatus(r.repoPath,"HEAD",n,{filters:["R","C"]});if(null!=u){const e=u.find((e=>e.path===s));null!=e?.originalPath&&(a=this.container.git.getAbsoluteUri(e.originalPath,r.repoPath),h=`${(0,E.EZ)(e.originalPath)} (${(0,ce.zL)(n)})`)}await(0,g.P0)(c.Gh.DiffWith,{repoPath:r.repoPath,lhs:{sha:o,uri:a??r,title:h??`${(0,E.EZ)(r.fsPath)} (${(0,ce.zL)(n)})`},rhs:{sha:"",uri:r},line:i.line,showOptions:i.showOptions})}};qe=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ve(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&He(t,i,n),n})([(0,g.WD)()],qe);var je=Object.defineProperty,Qe=Object.getOwnPropertyDescriptor;let Ye=class extends $.pu{constructor(e){super([c.Gh.DiffWithWorking,c.Gh.DiffWithWorkingInDiffLeft,c.Gh.DiffWithWorkingInDiffRight]),this.container=e}async execute(t,i,r){if(null==(r={...r}).uri){if(null==(i=(0,$.SX)(i,t)))return}else i=r.uri;let s=await l.YY.fromUri(i);if(null==r.line&&(r.line=t?.selection.active.line??0),r.inDiffRightEditor)try{const e=await this.container.git.getPreviousComparisonUris(s.repoPath,s,s.sha);s=e?.previous??s}catch(e){return C.Yd.error(e,"DiffWithWorkingCommand",`getPreviousDiffUris(${s.repoPath}, ${s.fsPath}, ${s.sha})`),void(0,m.W8)("Unable to open compare")}if(null==s.sha)return void e.window.showInformationMessage("File matches the working tree");if(s.sha===Re.Ii)return void e.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");if(s.isUncommittedStaged){const e=await this.container.git.getStatusForFile(s.repoPath,s);if(null!=e?.indexStatus)return void await(0,g.P0)(c.Gh.DiffWith,{repoPath:s.repoPath,lhs:{sha:Re.pw,uri:s.documentUri()},rhs:{sha:"",uri:s.documentUri()},line:r.line,showOptions:r.showOptions})}i=s.toFileUri();const n=await this.container.git.getWorkingUri(s.repoPath,i);null!=n?await(0,g.P0)(c.Gh.DiffWith,{repoPath:s.repoPath,lhs:{sha:s.sha,uri:i,title:r?.lhsTitle},rhs:{sha:"",uri:n},line:r.line,showOptions:r.showOptions}):e.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree")}};Ye=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Qe(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&je(t,i,n),n})([(0,g.WD)()],Ye);var ze=i(5640),Ke=(e=>(e[e.Merge=0]="Merge",e[e.Index=1]="Index",e[e.WorkingTree=2]="WorkingTree",e))(Ke||{}),Je=i(2800),Xe=Object.defineProperty,Ze=Object.getOwnPropertyDescriptor;let et=class extends $.mY{constructor(e){super([c.Gh.ExternalDiff,c.Gh.ExternalDiffAll]),this.container=e}async preExecute(t,i){if(i={...i},(0,$.d$)(t)){const e=await t.node.commit.getPreviousSha(),r=(0,ce.l3)(e)?"":e,s=t.node.commit.isUncommitted?"":t.node.commit.sha;return i.files=[{uri:l.YY.fromFile(t.node.file,t.node.file.repoPath??t.node.repoPath),staged:t.node.commit.isUncommittedStaged||null!=t.node.file.indexStatus,ref1:r,ref2:s}],this.execute(i)}if((0,$.O$)(t))return i.files=[{uri:l.YY.fromFile(t.node.file,t.node.file.repoPath??t.node.repoPath),staged:null!=t.node.file.indexStatus,ref1:t.node.ref1,ref2:t.node.ref2}],this.execute(i);if(null==i.files&&("scm-states"===t.type?i.files=t.scmResourceStates.map((e=>({uri:e.resourceUri,staged:e.resourceGroupType===Ke.Index}))):"scm-groups"===t.type&&(i.files=(0,Je.DZ)(t.scmResourceGroups[0].resourceStates,(e=>this.isModified(e)?{uri:e.resourceUri,staged:e.resourceGroupType===Ke.Index}:void 0)))),t.command===c.Gh.ExternalDiffAll&&null==i.files){const t=await(0,L.vJ)("Open All Changes (difftool)");if(null==t)return;const r=await this.container.git.getStatusForRepo(t.uri);if(null==r)return e.window.showInformationMessage("The repository doesn't have any changes");i.files=[];for(const e of r.files)"M"===e.indexStatus&&i.files.push({uri:e.uri,staged:!0}),"M"===e.workingTreeStatus&&i.files.push({uri:e.uri,staged:!1})}return this.execute(i)}isModified(e){const t=e.type;return t===ze.qb.BOTH_MODIFIED||t===ze.qb.INDEX_MODIFIED||t===ze.qb.MODIFIED}async execute(t){t={...t};try{let i;if(null==t.files){const r=e.window.activeTextEditor;if(null==r)return;if(i=this.container.git.getBestRepository(r)?.path,!i)return;const s=r.document.uri,n=await this.container.git.getStatusForFile(i,s);if(null==n)return void e.window.showInformationMessage("The current file doesn't have any changes");t.files=[],"M"===n.indexStatus&&t.files.push({uri:n.uri,staged:!0}),"M"===n.workingTreeStatus&&t.files.push({uri:n.uri,staged:!1})}else if(i=(await this.container.git.getOrOpenRepository(t.files[0].uri))?.path,!i)return;const r=w.D.get("advanced.externalDiffTool")||await this.container.git.getDiffTool(i);if(!r){const t="View Git Docs";return void(await e.window.showWarningMessage("Unable to open changes because no Git diff tool is configured",t)===t&&e.env.openExternal(e.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool")))}for(const e of t.files)this.container.git.openDiffTool(i,e.uri,{ref1:e.ref1,ref2:e.ref2,staged:e.staged,tool:r})}catch(e){C.Yd.error(e,"ExternalDiffCommand"),(0,m.W8)("Unable to open changes in diff tool")}}};et=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ze(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Xe(t,i,n),n})([(0,g.WD)()],et);var tt=Object.defineProperty,it=Object.getOwnPropertyDescriptor;let rt=class extends $.pu{constructor(e){super(c.Gh.GenerateCommitMessage),this.container=e}async execute(t,i,r){let s;if(null!=(r={...r}).repoPath)s=this.container.git.getRepository(r.repoPath);else{const e=null!=(i=(0,$.SX)(i,t))?await l.YY.fromUri(i):void 0;s=await(0,L.hM)(e,t,"Generate Commit Message")}if(null==s)return;const n=await this.container.git.getScmRepository(s.path);if(null!=n)try{const t=n.inputBox.value,i=await this.container.ai.generateCommitMessage(s,{context:t,progress:{location:e.ProgressLocation.Notification,title:"Generating commit message..."}});if(null==i)return;(0,g.dO)("workbench.view.scm"),n.inputBox.value=t?`${t}\n\n${i}`:i}catch(t){if(C.Yd.error(t,"GenerateCommitMessageCommand"),t instanceof Error&&t.message.startsWith("No changes"))return void e.window.showInformationMessage("No changes to generate a commit message from.");(0,m.W8)(t.message)}}};rt=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?it(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tt(t,i,n),n})([(0,g.WD)()],rt);var st=i(4155),nt=i(5025),ot=i(2674),at=i(4794),ct=i(7469),lt=Object.defineProperty,ht=Object.getOwnPropertyDescriptor;let ut=class extends $.mY{constructor(e){super(c.Gh.OpenOrCreateWorktreeForGHPR),this.container=e}async execute(...t){const[i]=t;let r;r="pullRequestModel"in i?i.pullRequestModel:i;const{base:{repositoryCloneUrl:{url:s,owner:n,repositoryName:o}},githubRepository:{rootUri:a},head:{repositoryCloneUrl:{url:c,owner:l},ref:u},item:{number:d}}=r;let p=this.container.git.getRepository(a);if(null==p)return void e.window.showWarningMessage(`Unable to find repository(${a.toString()}) for PR #${d}`);if(p=await p.getMainRepository(),null==p)return void e.window.showWarningMessage(`Unable to find main repository(${a.toString()}) for PR #${d}`);const m=c.toString(),[,g,f]=(0,at.Sk)(m);let w;if([w]=await p.getRemotes({filter:e=>e.matches(g,f)}),null!=w)await this.container.git.fetch(p.path,{remote:w.name});else{const t=await e.window.showInformationMessage(`Unable to find a remote for '${m}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});if("Yes"!==t?.title)return;if(await(0,st.IH)(p,l,m,{confirm:!1,fetch:!0,reveal:!1}),[w]=await p.getRemotes({filter:e=>e.url===m}),null==w)return}const v=`${w.name}/${u}`,y=`pr/${s.toString()===c.toString()?u:v}`,b=`remotes/${v}`,A=await(0,ot.K)(p,y,v);if(null!=A)return void(0,nt.bA)(A);let S,P;const k=await(0,h.eK)(p,v);null!=k?S=(0,ce.LB)(k):(S=(0,ce.xB)(b,p.path,{refType:"branch",name:b,remote:!0}),P=y),await(0,ct.ag)();try{await(0,nt.Ue)(p,void 0,S,{createBranch:P});if(null==await this.container.git.getWorktree(p.path,(e=>e.branch===y)))return;this.container.git.setConfig(p.path,`branch.${y}.github-pr-owner-number`,`${n}#${o}#${d}`)}catch(t){C.Yd.error(t,"CreateWorktreeCommand","Unable to create worktree"),e.window.showErrorMessage(`Unable to create worktree for ${l}:${u}`)}}};ut=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ht(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&lt(t,i,n),n})([(0,g.WD)()],ut);var dt=i(3599),pt=i(2967),mt=i(4239),gt=Object.defineProperty,ft=Object.getOwnPropertyDescriptor,wt=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ft(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&gt(t,i,n),n};const vt=/\$\(.+?\)|\s/g,yt=Symbol("ShowLoading");let bt=class extends $.mY{constructor(e){super([c.Gh.GitCommands,c.Gh.GitCommandsBranch,c.Gh.GitCommandsCherryPick,c.Gh.GitCommandsMerge,c.Gh.GitCommandsRebase,c.Gh.GitCommandsReset,c.Gh.GitCommandsRevert,c.Gh.GitCommandsSwitch,c.Gh.GitCommandsTag,c.Gh.GitCommandsWorktree,c.Gh.GitCommandsWorktreeOpen]),this.container=e}startedWith="menu";preExecute(e,t){switch(e.command){case c.Gh.GitCommandsBranch:t={command:"branch"};break;case c.Gh.GitCommandsCherryPick:t={command:"cherry-pick"};break;case c.Gh.GitCommandsMerge:t={command:"merge"};break;case c.Gh.GitCommandsRebase:t={command:"rebase"};break;case c.Gh.GitCommandsReset:t={command:"reset"};break;case c.Gh.GitCommandsRevert:t={command:"revert"};break;case c.Gh.GitCommandsSwitch:t={command:"switch"};break;case c.Gh.GitCommandsTag:t={command:"tag"};break;case c.Gh.GitCommandsWorktree:t={command:"worktree"};break;case c.Gh.GitCommandsWorktreeOpen:t={command:"worktree",state:{subcommand:"open"}}}return this.execute(t)}async execute(e){const t=new pt.K(this.container,e),i=null!=e?.command?t.find(e.command):void 0;let r,s;for(this.startedWith=null!=i?"command":"menu",s=null==i?t:await this.showLoadingIfNeeded(i,this.getCommandStep(i,t)),!0===s?.ignoreFocusOut&&(s.ignoreFocusOut=void 0);null!=s;)if(s!==t||null==i)if(r&&null==s.ignoreFocusOut&&(s.ignoreFocusOut=!0),(0,mt.Dr)(s))s=await this.showPickStep(s,t),!0===s?.ignoreFocusOut&&(r=!0);else if((0,mt.Gj)(s))s=await this.showInputStep(s,t),!0===s?.ignoreFocusOut&&(r=!0);else{if(!(0,mt.a)(s))break;s=await this.showCustomStep(s,t),!0===s?.ignoreFocusOut&&(r=!0)}else s=await this.getCommandStep(i,t);e?.completion?.fulfill()}async showLoadingIfNeeded(t,i){const r=await Promise.race([i,new Promise((e=>setTimeout(e,250,yt)))]);if(r!==yt)return r;const s=e.window.createQuickPick();s.ignoreFocusOut=!1;const n=[];let o;try{return await new Promise((async e=>{n.push(s.onDidHide((()=>e(o)))),s.title=t.title,s.placeholder="Loading...",s.busy=!0,s.enabled=!1,s.show(),o=await i,s.hide()}))}finally{s.dispose(),n.forEach((e=>{e.dispose()}))}}getButtons(t,i){const r=[];if(null!=t){if(null!=t.buttons)return r.push(...t.buttons),r;r.push(e.QuickInputButtons.Back),null!=t.additionalButtons&&r.push(...t.additionalButtons)}if(i?.canConfirm)if(i.canSkipConfirm){const e=new J.Lp(i.confirm(),t?.isConfirmationStep??!1,(async()=>{if(null==i?.skipConfirmKey)return;const e=w.D.get("gitCommands.skipConfirmations")??[],t=e.indexOf(i.skipConfirmKey);-1!==t?e.splice(t,1):e.push(i.skipConfirmKey),await w.D.updateEffective("gitCommands.skipConfirmations",e)}));r.push(e)}else t?.isConfirmationStep||r.push(J.zY);return r}async getCommandStep(e,t){t.setCommand(e,"command");const i=await e.next();if(!i.done)return i.value}async nextStep(e,t,i){null!=i&&(i.busy=!0);const r=await e.next(t);if(!r.done)return null!=i&&(i.value=""),r.value}async showCustomStep(e,t){const i=await e.show(e);if(i!==mt.Vd){if(!(0,dt.wX)(i))return this.nextStep(t.command,i);switch(i){case dt.Xe.Back:return await(t?.command?.previous())??t;case dt.Xe.Noop:return t.command?.retry();case dt.Xe.Cancel:default:return}}}async showInputStep(t,i){const r=e.window.createInputBox();r.ignoreFocusOut=!w.D.get("gitCommands.closeOnFocusOut")||(t.ignoreFocusOut??!1);const s=[];try{return await new Promise((async n=>{const o={};if(null!=t.onDidPressKey&&null!=t.keys&&0!==t.keys.length)for(const e of t.keys)o[e]={onDidPressKey:e=>t.onDidPressKey(r,e)};const a=this.container.keyboard.createScope(o);if(a.start(),s.push(a,r.onDidHide((()=>n(void 0))),r.onDidTriggerButton((async s=>{if(s!==e.QuickInputButtons.Back){if(s!==J.zY){if(s instanceof J.jQ&&null!=s.onDidClick){const e=s.onDidClick(r);return r.buttons=this.getButtons(t,i.command),!0===await e?void n(i.command?.retry()):void((0,ct.tI)(e)&&(r.buttons=this.getButtons(t,i.command)))}if(null!=t.onDidClickButton){const e=t.onDidClickButton(r,s);r.buttons=this.getButtons(t,i.command),!0===await e&&n(i.command?.retry())}}}else(async()=>{r.value="",null!=i.command&&(r.busy=!0,n(await i.command.previous()??i))})()})),r.onDidChangeValue((async e=>{if(null!=a&&(0!==e.length?await a.pause(["left","right"]):await a.resume()),null==t.validate)return;const[,i]=await t.validate(e);r.validationMessage=i})),r.onDidAccept((async()=>{n(await this.nextStep(i.command,r.value,r))}))),r.buttons=this.getButtons(t,i.command),r.title=t.title,r.placeholder=t.placeholder,r.prompt=t.prompt,null!=t.value&&(r.value=t.value,null!=t.validate)){const[i,s]=await t.validate(t.value);i||null==s||(r.validationMessage={severity:e.InputBoxValidationSeverity.Error,message:s})}if(null!=i.command&&t===i&&i.setCommand(void 0,"menu"),r.show(),null!=t.value)try{r._onDidChangeValueEmitter?.fire(r.value)}catch{}}))}finally{r.dispose(),s.forEach((e=>{e.dispose()}))}}async showPickStep(t,i){const r=!w.D.get("gitCommands.closeOnFocusOut")||(t.ignoreFocusOut??!1),s=t.ignoreFocusOut,o=e.window.createQuickPick();o.ignoreFocusOut=r;const a=[];try{return await new Promise((c=>{async function l(){o.value="",null!=i.command&&(o.busy=!0,c(await i.command.previous()??i))}async function h(){if(null!=t.onDidLoadMore){o.busy=!0;try{const e=await(t.onDidLoadMore?.(o));let i=-1;if(0!==o.activeItems.length){const e=o.activeItems[0];i=o.items.indexOf(e),(0,dt.Gy)(e)&&i--}o.items=t.items=e,i&&(o.activeItems=[o.items[i]])}finally{o.busy=!1}}}const u={left:{onDidPressKey:l}};if(null!=t.onDidPressKey&&null!=t.keys&&0!==t.keys.length)for(const e of t.keys)u[e]={onDidPressKey:e=>t.onDidPressKey(o,e)};const d=this.container.keyboard.createScope(u);d.start();let p=!1;a.push(d,o.onDidHide((()=>{t.frozen||c(void 0)})),o.onDidTriggerItemButton((async e=>{!0===await(t.onDidClickItemButton?.(o,e.button,e.item))&&c(await this.nextStep(i.command,[e.item],o))})),o.onDidTriggerButton((async r=>{if(r!==e.QuickInputButtons.Back){if(r!==J.zY)if(r!==J.Q0){if(r instanceof J.jQ&&null!=r.onDidClick){let e;if(null==i.command&&0!==o.activeItems.length){const t=o.activeItems[0];(0,mt.YB)(t)&&(e=t)}const s=r.onDidClick(o);return o.buttons=this.getButtons(null!=e?e.value:t,e??i.command),!0===await s?void c(i.command?.retry()):void((0,ct.tI)(s)&&(o.buttons=this.getButtons(null!=e?e.value:t,e??i.command)))}if(null!=t.onDidClickButton){const e=t.onDidClickButton(o,r);o.buttons=this.getButtons(t,i.command),!0===await e&&c(i.command?.retry())}}else h()}else l()})),o.onDidChangeValue((async e=>{if(null!=d&&(0!==e.length?await d.pause(["left","right"]):await d.resume()),null!=t.onDidChangeValue){if(await t.onDidChangeValue(o))return}if(0===e.length||o.ignoreFocusOut?0===e.length&&o.ignoreFocusOut&&!r&&(o.ignoreFocusOut=r,t.ignoreFocusOut=s):(o.ignoreFocusOut=!0,t.ignoreFocusOut=!0),!p){if(o.canSelectMany&&" "===e)return o.value="",void(o.selectedItems=o.selectedItems.length===o.items.length?[]:o.items);if(e.endsWith(" ")){if(o.canSelectMany&&0!==o.selectedItems.length)return;let e;if(null==i.command){const e=i.find(o.value.trim(),!0);if(null==e)return;i.setCommand(e,this.startedWith)}else{const i=o.value.trim().toLowerCase(),r=t.items.find((e=>e.label.replace(vt,"").toLowerCase()===i));if(null==r)return;e=[r]}return void c(await this.nextStep(i.command,e,o))}}if(o.canSelectMany||null==i.command||0===e.trim().length||!p&&0!==o.activeItems.length)p=!1;else{if(null==t.onValidateValue)return;p=await t.onValidateValue(o,e.trim(),t.items)}p||o.items.length===t.items.length||(o.items=t.items)})),o.onDidChangeActive((()=>{if(null!=i.command||0===o.activeItems.length)return;const e=o.activeItems[0];(0,mt.YB)(e)&&(o.buttons=this.getButtons(void 0,e))})),o.onDidChangeSelection((e=>{o.canSelectMany&&(0===e.length||o.ignoreFocusOut?0===e?.length&&o.ignoreFocusOut&&!r&&(o.ignoreFocusOut=r,t.ignoreFocusOut=s):(o.ignoreFocusOut=!0,t.ignoreFocusOut=!0))})),o.onDidAccept((async()=>{let e=o.selectedItems;if(0===e.length){if(!o.canSelectMany||0===o.activeItems.length){const e=o.value.trim();if(0===e.length&&!t.allowEmpty)return;return null==t.onDidAccept?void(t.allowEmpty&&c(await this.nextStep(i.command,[],o))):(o.busy=!0,await t.onDidAccept(o)&&c(await this.nextStep(i.command,e,o)),void(o.busy=!1))}e=o.activeItems}if(1===e.length){const[t]=e;if((0,dt.Gy)(t))switch(t.directive){case dt.Xe.Cancel:return void c(void 0);case dt.Xe.Back:return void l();case dt.Xe.LoadMore:return void h();case dt.Xe.StartPreviewTrial:return n.W.instance.subscription.startPreviewTrial(),void c(void 0);case dt.Xe.RequiresVerification:return n.W.instance.subscription.resendVerification(),void c(void 0);case dt.Xe.ExtendTrial:return n.W.instance.subscription.loginOrSignUp(),void c(void 0);case dt.Xe.RequiresPaidSubscription:return n.W.instance.subscription.purchase(),void c(void 0)}}if(null==i.command){const[t]=e;if(!(0,mt.YB)(t))return;i.setCommand(t,this.startedWith)}if(!o.canSelectMany&&null!=t.onDidAccept){o.busy=!0;const e=await t.onDidAccept(o);if(o.busy=!1,!e)return}c(await this.nextStep(i.command,e,o))}))),o.title=t.title,o.placeholder=t.placeholder,o.matchOnDescription=Boolean(t.matchOnDescription),o.matchOnDetail=Boolean(t.matchOnDetail),o.canSelectMany=Boolean(t.multiselect),o.items=t.items,o.canSelectMany?(o.selectedItems=t.selectedItems??o.items.filter((e=>e.picked)),o.activeItems=o.selectedItems):o.activeItems=t.selectedItems??o.items.filter((e=>e.picked)),null!=i.command&&t===i&&i.setCommand(void 0,"menu"),o.buttons=this.getButtons(t,i.command);const m=t.selectValueWhenShown??!0;if(null!=t.value&&m&&(o.value=t.value),o.show(),null==t.value||m||(o.value=t.value),null!=t.value&&m)try{o._onDidChangeValueEmitter?.fire(o.value)}catch{}}))}finally{o.dispose(),a.forEach((e=>{e.dispose()}))}}};wt([(0,P.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],bt.prototype,"execute",1),bt=wt([(0,g.WD)()],bt);var Ct=Object.defineProperty,At=Object.getOwnPropertyDescriptor;let St=class extends $.mY{constructor(e){super(c.Gh.InviteToLiveShare),this.container=e}static getMarkdownCommandArgs(e){const t=void 0===e||"string"==typeof e?{email:e}:e;return super.getMarkdownCommandArgsCore(c.Gh.InviteToLiveShare,t)}preExecute(e,t){return(0,$.Mg)(e)?((t={...t}).email=e.node.contributor.email,this.execute(t)):this.execute(t)}async execute(e){if(e?.email){const t=await this.container.vsls.getContact(e.email);if(null!=t)return t.invite()}return this.container.vsls.startSession()}};St=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?At(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ct(t,i,n),n})([(0,g.WD)()],St);var Pt=Object.defineProperty,kt=Object.getOwnPropertyDescriptor,Dt=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?kt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Pt(t,i,n),n};let Rt=class extends $.mY{constructor(e){super(c.Gh.EnableDebugLogging),this.container=e}async execute(){await w.D.updateEffective("outputLevel","debug")}};Rt=Dt([(0,g.WD)()],Rt);let _t=class extends $.mY{constructor(e){super(c.Gh.DisableDebugLogging),this.container=e}async execute(){await w.D.updateEffective("outputLevel","error")}};_t=Dt([(0,g.WD)()],_t);var Tt=Object.defineProperty,Ft=Object.getOwnPropertyDescriptor;let $t=class extends $.pu{constructor(e){super(c.Gh.OpenAssociatedPullRequestOnRemote),this.container=e}async execute(e,t){const i=null!=(t=(0,$.SX)(t,e))?await l.YY.fromUri(t):void 0;let r;if(null!=e&&null!=i){const t=e.selection.active.line;if(t<0)return;try{const e=await this.container.git.getBlameForLine(i,t);if(null==e)return;r={clipboard:!1,ref:e.commit.sha,repoPath:e.commit.repoPath}}catch(e){return void C.Yd.error(e,"OpenAssociatedPullRequestOnRemoteCommand",`getBlameForLine(${t})`)}}else try{const e=await(0,L.vJ)("Open Associated Pull Request",void 0,void 0,{filter:async e=>null!=await this.container.git.getBestRemoteWithRichProvider(e.uri)});if(null==e)return;const t=await(e?.getBranch()),i=await(t?.getAssociatedPullRequest());r=null!=i?{clipboard:!1,pr:{url:i.url}}:{clipboard:!1,ref:t?.name??"HEAD",repoPath:e.path}}catch(e){return void C.Yd.error(e,"OpenAssociatedPullRequestOnRemoteCommand","No editor opened")}await(0,g.P0)(c.Gh.OpenPullRequestOnRemote,r)}};$t=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ft(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Tt(t,i,n),n})([(0,g.WD)()],$t);var It=Object.defineProperty,xt=Object.getOwnPropertyDescriptor;let Ot=class extends $.pu{constructor(e){super([c.Gh.OpenBranchesOnRemote,c.Gh.Deprecated_OpenBranchesInRemote,c.Gh.CopyRemoteBranchesUrl]),this.container=e}preExecute(e,t){return(0,$.C$)(e)&&(t={...t,remote:e.node.remote.name}),e.command===c.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const r=null!=(t=(0,$.SX)(t,e))?await l.YY.fromUri(t):void 0,s=(await(0,L.hM)(r,e,i?.clipboard?"Copy Remote Branches URL":"Open Branches on Remote"))?.path;if(s)try{await(0,g.P0)(c.Gh.OpenOnRemote,{resource:{type:ge.J.Branches},repoPath:s,remote:i?.remote,clipboard:i?.clipboard})}catch(e){C.Yd.error(e,"OpenBranchesOnRemoteCommand"),(0,m.W8)("Unable to open branches on remote provider")}}};Ot=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?xt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&It(t,i,n),n})([(0,g.WD)()],Ot);var Et=Object.defineProperty,Bt=Object.getOwnPropertyDescriptor;let Wt=class extends $.pu{constructor(e){super([c.Gh.OpenBranchOnRemote,c.Gh.Deprecated_OpenBranchInRemote,c.Gh.CopyRemoteBranchUrl]),this.container=e}preExecute(e,t){return(0,$.Qo)(e)&&(t={...t,branch:e.node.branch.name,remote:e.node.branch.getRemoteName()}),e.command===c.Gh.CopyRemoteBranchUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const r=null!=(t=(0,$.SX)(t,e))?await l.YY.fromUri(t):void 0,s=(await(0,L.hM)(r,e,i?.clipboard?"Copy Remote Branch URL":"Open Branch On Remote"))?.path;if(s){i={...i};try{if(null==i.branch){const e=await(0,ye.V)(s,i.clipboard?"Copy Remote Branch URL":"Open Branch On Remote",i.clipboard?"Choose a branch to copy the URL from":"Choose a branch to open",{autoPick:!0,filter:{branches:e=>null!=e.upstream},include:ye.H.Branches,sort:{branches:{current:!0},tags:{}}});if(null==e||e instanceof Me.$w)return;i.branch=e.ref}await(0,g.P0)(c.Gh.OpenOnRemote,{resource:{type:ge.J.Branch,branch:i.branch||"HEAD"},repoPath:s,remote:i.remote,clipboard:i.clipboard})}catch(e){C.Yd.error(e,"OpenBranchOnRemoteCommand"),(0,m.W8)("Unable to open branch on remote provider")}}}};Wt=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Bt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Et(t,i,n),n})([(0,g.WD)()],Wt);var Mt=Object.defineProperty,Nt=Object.getOwnPropertyDescriptor;let Lt=class extends $.pu{constructor(e){super(c.Gh.OpenCurrentBranchOnRemote),this.container=e}async execute(e,t){const i=null!=(t=(0,$.SX)(t,e))?await l.YY.fromUri(t):void 0,r=await(0,L.hM)(i,e,"Open Current Branch Name");if(null!=r)try{const e=await r.getBranch();e?.name&&await(0,g.P0)(c.Gh.OpenOnRemote,{resource:{type:ge.J.Branch,branch:e.name||"HEAD"},repoPath:r.path})}catch(e){C.Yd.error(e,"OpenCurrentBranchOnRemoteCommand"),(0,m.W8)("Unable to open branch on remote provider")}}};Lt=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Nt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Mt(t,i,n),n})([(0,g.WD)()],Lt);var Ut=Object.defineProperty,Gt=Object.getOwnPropertyDescriptor;let Ht=class extends $.mY{constructor(e){super(c.Gh.OpenChangedFiles),this.container=e}async execute(t){t={...t};try{if(null==t.uris){const i=await(0,L.vJ)("Open All Changed Files");if(null==i)return;const r=await this.container.git.getStatusForRepo(i.uri);if(null==r)return void e.window.showWarningMessage("Unable to open changed files");t.uris=(0,Je.DZ)(r.files,(e=>"D"!==e.status?e.uri:void 0))}(0,B.$_)(t.uris)}catch(e){C.Yd.error(e,"OpenChangedFilesCommand"),(0,m.W8)("Unable to open all changed files")}}};Ht=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Gt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ut(t,i,n),n})([(0,g.WD)()],Ht);i(2138);var Vt=Object.defineProperty,qt=Object.getOwnPropertyDescriptor;let jt=class extends $.mY{constructor(e){super([c.Gh.OpenComparisonOnRemote,c.Gh.CopyRemoteComparisonUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&(e.node.is("results-commits")?t={...t,repoPath:e.node.repoPath,ref1:e.node.ref1,ref2:e.node.ref2}:e.node.is("compare-results")&&(t={...t,repoPath:e.node.repoPath,ref1:e.node.ahead.ref1,ref2:e.node.ahead.ref2})),e.command===c.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(t)}async execute(e){if(null!=e?.repoPath&&null!=e.ref1&&null!=e.ref2)try{await(0,g.P0)(c.Gh.OpenOnRemote,{resource:{type:ge.J.Comparison,base:e.ref1,compare:e.ref2,notation:e.notation},repoPath:e.repoPath,clipboard:e?.clipboard})}catch(e){C.Yd.error(e,"OpenComparisonOnRemoteCommand"),(0,m.W8)("Unable to open comparison on remote provider")}}};jt=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?qt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Vt(t,i,n),n})([(0,g.WD)()],jt);var Qt=Object.defineProperty,Yt=Object.getOwnPropertyDescriptor;let zt=class extends $.mY{constructor(e){super(c.Gh.OpenFileFromRemote),this.container=e}async execute(){let t=await e.env.clipboard.readText();try{e.Uri.parse(t,!0)}catch{t=void 0}const i=await e.window.showInputBox({prompt:"Enter a remote file url to open",placeHolder:"Remote file url",value:t,ignoreFocusOut:!0});if(null==i||0===i.length)return;let r,s=await this.container.git.getLocalInfoFromRemoteUri(e.Uri.parse(i));if(null==s){if(s=await this.container.git.getLocalInfoFromRemoteUri(e.Uri.parse(i),{validate:!1}),null==s)return void e.window.showWarningMessage("Unable to parse the provided remote url.");const t="Open File...";if(await e.window.showWarningMessage("Unable to find a workspace folder that matches the provided remote url.",t)!==t)return}s.startLine&&(r=s.endLine?new e.Range(s.startLine-1,0,s.endLine,0):new e.Range(s.startLine-1,0,s.startLine-1,0));try{await(0,B.bM)(s.uri,{selection:r,rethrow:!0})}catch{const t=await e.window.showOpenDialog({title:"Open local file",defaultUri:s.uri,canSelectMany:!1,canSelectFolders:!1});if(null==t||0===t.length)return;await(0,B.bM)(t[0])}}};zt=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Yt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Qt(t,i,n),n})([(0,g.WD)()],zt);var Kt=i(6586),Jt=Object.defineProperty,Xt=Object.getOwnPropertyDescriptor;let Zt=class extends $.pu{constructor(e){super([c.Gh.OpenFileOnRemote,c.Gh.Deprecated_OpenFileInRemote,c.Gh.CopyRemoteFileUrl,c.Gh.CopyRemoteFileUrlWithoutRange,c.Gh.OpenFileOnRemoteFrom,c.Gh.CopyRemoteFileUrlFrom]),this.container=e}async preExecute(e,t){let i=e.uri;if("editorLine"===e.type&&(t={...t,line:e.line,range:!0}),e.command===c.Gh.CopyRemoteFileUrlWithoutRange&&(t={...t,range:!1}),(0,$.en)(e)?(t={...t,range:!1},e.command===c.Gh.CopyRemoteFileUrl||e.command===c.Gh.CopyRemoteFileUrlWithoutRange||e.command===c.Gh.CopyRemoteFileUrlFrom?t.sha=e.node instanceof Kt.q?void 0:e.node.commit.sha:(0,$.Qo)(e)&&(t.branchOrTag=e.node.branch?.name),i=e.node.uri):"viewItem"===e.type&&(t={...t,range:!1},i=e.node.uri??e.uri),(e.command===c.Gh.CopyRemoteFileUrl||e.command===c.Gh.CopyRemoteFileUrlWithoutRange||e.command===c.Gh.CopyRemoteFileUrlFrom)&&null==(t={...t,clipboard:!0}).sha){const i=(0,$.SX)(e.uri,e.editor);if(null!=i){const e=await l.YY.fromUri(i);if(e.repoPath)if(null==e.sha){const i=await this.container.git.getCommitForFile(e.repoPath,e,{firstIfNotFound:!0});null!=i&&(t.sha=i.sha)}else t.sha=e.sha}}return e.command!==c.Gh.OpenFileOnRemoteFrom&&e.command!==c.Gh.CopyRemoteFileUrlFrom||(t={...t,pickBranchOrTag:!0,range:!1}),this.execute(e.editor,i,t)}async execute(t,i,r){if(null==(i=(0,$.SX)(i,t)))return;const s=await l.YY.fromUri(i);if(s.repoPath){r={range:!0,...r};try{let n,o=await this.container.git.getRemotesWithProviders(s.repoPath);r.range&&(null!=t&&U.n.equals(t.document.uri,i)?n=new e.Range(t.selection.start.with({line:t.selection.start.line+1}),t.selection.end.with({line:t.selection.end.line+(0===t.selection.end.character?0:1)})):null!=r.line&&(n=new e.Range(r.line+1,0,r.line+1,0)));let a=r.sha??s.sha;if(null==r.branchOrTag&&null!=a&&!(0,ce.D3)(a)&&0!==o.length){const[e,t]=(0,Ne.pW)(a,"/");if(null!=t){const i=o.find((t=>t.name===e));null!=i&&(r.branchOrTag=t,a=void 0,o=[i])}}if(null==r.sha&&null==r.branchOrTag||r.pickBranchOrTag){let e;if(r.pickBranchOrTag||(e=await this.container.git.getBranch(s.repoPath)),null==e?.upstream){const e=await(0,ye.V)(s.repoPath,r.clipboard?`Copy Remote File URL From${(0,Ne.vk)(c.NE.Dot,2,2)}${s.relativePath}`:`Open File on Remote From${(0,Ne.vk)(c.NE.Dot,2,2)}${s.relativePath}`,`Choose a branch or tag to ${r.clipboard?"copy":"open"} the file revision from`,{allowEnteringRefs:!0,autoPick:!0,filter:{branches:e=>e.remote||null!=e.upstream},picked:r.branchOrTag,sort:{branches:{current:!0,orderBy:"date:desc"},tags:{orderBy:"date:desc"}}});if(null==e)return;if("branch"===e.refType){if(e.remote){r.branchOrTag=(0,h.S3)(e.name);const t=(0,h.Lo)(e.name),i=o.find((e=>e.name===t));null!=i&&(o=[i])}else r.branchOrTag=e.name;a=void 0}else"tag"===e.refType?(r.branchOrTag=e.ref,a=void 0):(r.branchOrTag=void 0,a=e.ref)}else r.branchOrTag=e.name}await(0,g.P0)(c.Gh.OpenOnRemote,{resource:{type:null==a?ge.J.File:ge.J.Revision,branchOrTag:r.branchOrTag??"HEAD",fileName:s.relativePath,range:n,sha:a??void 0},repoPath:s.repoPath,remotes:o,clipboard:r.clipboard})}catch(e){C.Yd.error(e,"OpenFileOnRemoteCommand"),(0,m.W8)("Unable to open file on remote provider")}}}};Zt=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Xt(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Jt(t,i,n),n})([(0,g.WD)()],Zt);i(4893);var ei=Object.defineProperty,ti=Object.getOwnPropertyDescriptor;let ii=class extends $.pu{constructor(e){super(c.Gh.OpenFileAtRevisionFrom),this.container=e}async execute(e,t,i){if(null==(t=(0,$.SX)(t,e)))return;const r=await l.YY.fromUri(t);if(r.repoPath){if(null==(i={...i}).line&&(i.line=e?.selection.active.line??0),null==i.reference)if(i?.stash){const e=this.container.git.getRelativePath(r,r.repoPath),t=`Open Changes with Stash${(0,Ne.vk)(c.NE.Dot,2,2)}`,s=await(0,We.h)(this.container.git.getStash(r.repoPath),`${t}${r.getFormattedFileName({truncateTo:c.d$-t.length})}`,"Choose a stash to compare with",{filter:t=>t.files?.some((t=>t.path===e||t.originalPath===e))??!0});if(null==s)return;i.reference=s}else{const e=`Open File at Branch or Tag${(0,Ne.vk)(c.NE.Dot,2,2)}`,t=await(0,ye.V)(r.repoPath,`${e}${r.getFormattedFileName({truncateTo:c.d$-e.length})}`,"Choose a branch or tag to open the file revision from",{allowEnteringRefs:!0,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{const[s]=t.activeItems;null!=s&&await(0,re.YS)(this.container.git.getRevisionUri(s.ref,r.fsPath,r.repoPath),{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})}});if(null==t)return;i.reference=t}await(0,re.YS)(this.container.git.getRevisionUri(i.reference.ref,r.fsPath,r.repoPath),{annotationType:i.annotationType,line:i.line,...i.showOptions})}else(0,m.bi)("Unable to open file revision")}};ii=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ti(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ei(t,i,n),n})([(0,g.WD)()],ii);var ri=i(3050),si=i(5009),ni=Object.defineProperty,oi=Object.getOwnPropertyDescriptor;let ai=class extends $.mY{constructor(e){super([c.Gh.OpenOnRemote,c.Gh.Deprecated_OpenInRemote]),this.container=e}async execute(e){if(null==e?.resource)return;let t="remotes"in e?e.remotes:await this.container.git.getRemotesWithProviders(e.repoPath);if(null!=e.remote){const i=t.filter((t=>t.name===e.remote));t.length>0&&(t=i)}try{let i=function(t){return e?.clipboard?`Copy Link to ${t} for ${s}`:`Open ${t} on ${s}`};if(e.resource.type===ge.J.Branch){const[i,r]=(0,Ne.pW)(e.resource.branch,"/");if(null!=r){const s=t.find((e=>e.name===i));null!=s&&(e.resource.branch=r,t=[s])}}else if(e.resource.type===ge.J.Revision){const{commit:t,fileName:i}=e.resource;if(null!=t){const r=await t.findFile(i);e.resource.sha="D"===r?.status?await this.container.git.resolveReference(t.repoPath,`${t.sha}^`,i):t.sha}}const r=ri.ss.getHighlanderProviders(t),s=r?.length?r[0].name:"Remote",n={autoPick:"default",clipboard:e.clipboard,setDefault:!0};let o,a="Choose which remote to "+(e.clipboard?"copy the link for":"open on");switch(e.resource.type){case ge.J.Branch:o=`${i("Branch")}${(0,Ne.vk)(c.NE.Dot,2,2)}${e.resource.branch}`;break;case ge.J.Branches:o=i("Branches");break;case ge.J.Commit:o=`${i("Commit")}${(0,Ne.vk)(c.NE.Dot,2,2)}${(0,ce.zL)(e.resource.sha)}`;break;case ge.J.Comparison:o=`${i("Comparison")}${(0,Ne.vk)(c.NE.Dot,2,2)}${(0,ce.oI)(e.resource.base,e.resource.compare,e.resource.notation??"...")}`;break;case ge.J.CreatePullRequest:n.autoPick=!0,n.setDefault=!1,o=`${e.clipboard?`Copy Create Pull Request Link for ${s}`:`Create Pull Request on ${s}`}${(0,Ne.vk)(c.NE.Dot,2,2)}${e.resource.base?.branch?(0,ce.oI)(e.resource.base.branch,e.resource.compare.branch,"..."):e.resource.compare.branch}`,a="Choose which remote to "+(e.clipboard?"copy the create pull request link for":"create the pull request on");break;case ge.J.File:o=`${i("File")}${(0,Ne.vk)(c.NE.Dot,2,2)}${e.resource.fileName}`;break;case ge.J.Repo:o=i("Repository");break;case ge.J.Revision:o=`${i("File")}${(0,Ne.vk)(c.NE.Dot,2,2)}${(0,ce.zL)(e.resource.sha)}${(0,Ne.vk)(c.NE.Dot,1,1)}${e.resource.fileName}`}const l=await(0,si.cY)(o,a,e.resource,t,n);await(l?.execute())}catch(e){C.Yd.error(e,"OpenOnRemoteCommand"),(0,m.W8)("Unable to open in remote provider")}}};ai=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?oi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ni(t,i,n),n})([(0,g.WD)()],ai);var ci=i(1185),li=Object.defineProperty,hi=Object.getOwnPropertyDescriptor;let ui=class extends $.mY{constructor(e){super([c.Gh.OpenIssueOnRemote,c.Gh.CopyRemoteIssueUrl,c.Gh.OpenAutolinkUrl,c.Gh.CopyAutolinkUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof ci.Z&&(t={...t,issue:{url:e.node.item.url},clipboard:e.command===c.Gh.CopyRemoteIssueUrl||e.command===c.Gh.CopyAutolinkUrl}),this.execute(t)}async execute(t){t.clipboard?await e.env.clipboard.writeText(t.issue.url):e.env.openExternal(e.Uri.parse(t.issue.url))}};ui=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?hi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&li(t,i,n),n})([(0,g.WD)()],ui);var di=i(2060),pi=Object.defineProperty,mi=Object.getOwnPropertyDescriptor;let gi=class extends $.mY{constructor(e){super([c.Gh.OpenPullRequestOnRemote,c.Gh.CopyRemotePullRequestUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof di.Z&&(t={...t,pr:{url:e.node.pullRequest.url},clipboard:e.command===c.Gh.CopyRemotePullRequestUrl}),this.execute(t)}async execute(t){if(null==t?.pr){if(null==t?.repoPath||null==t?.ref)return;const i=await this.container.git.getBestRemoteWithRichProvider(t.repoPath);if(!i?.hasRichIntegration())return;const r=await i.provider.getPullRequestForCommit(t.ref);if(null==r)return void e.window.showInformationMessage(`No pull request associated with '${(0,ce.zL)(t.ref)}'`);(t={...t}).pr=r}t.clipboard?await e.env.clipboard.writeText(t.pr.url):e.env.openExternal(e.Uri.parse(t.pr.url))}};gi=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?mi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&pi(t,i,n),n})([(0,g.WD)()],gi);var fi=Object.defineProperty,wi=Object.getOwnPropertyDescriptor;let vi=class extends $.pu{constructor(e){super([c.Gh.OpenRepoOnRemote,c.Gh.Deprecated_OpenRepoInRemote,c.Gh.CopyRemoteRepositoryUrl]),this.container=e}preExecute(e,t){return(0,$.C$)(e)&&(t={...t,remote:e.node.remote.name}),e.command===c.Gh.CopyRemoteRepositoryUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const r=null!=(t=(0,$.SX)(t,e))?await l.YY.fromUri(t):void 0,s=(await(0,L.hM)(r,e,i?.clipboard?"Choose which repository to copy the url from":"Choose which repository to open on remote"))?.path;if(s)try{await(0,g.P0)(c.Gh.OpenOnRemote,{resource:{type:ge.J.Repo},repoPath:s,remote:i?.remote,clipboard:i?.clipboard})}catch(e){C.Yd.error(e,"OpenRepoOnRemoteCommand"),(0,m.W8)("Unable to open repository on remote provider")}}};vi=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?wi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&fi(t,i,n),n})([(0,g.WD)()],vi);var yi=Object.defineProperty,bi=Object.getOwnPropertyDescriptor;let Ci=class extends $.pu{constructor(e){super([c.Gh.OpenRevisionFile,c.Gh.OpenRevisionFileInDiffLeft,c.Gh.OpenRevisionFileInDiffRight]),this.container=e}async execute(e,t,i){if(null==(t=(0,$.SX)(t,e)))return;const r=await l.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri)if(r?.sha){const e=await this.container.git.getCommit(r.repoPath,r.sha);i.revisionUri="D"===e?.file?.status?this.container.git.getRevisionUri(await e.getPreviousSha()??Re.Ii,e.file,e.repoPath):this.container.git.getRevisionUri(r)}else i.revisionUri=this.container.git.getRevisionUri(r);await(0,re.YS)(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){C.Yd.error(e,"OpenRevisionFileCommand"),(0,m.W8)("Unable to open file revision")}}};Ci=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?bi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&yi(t,i,n),n})([(0,g.WD)()],Ci);var Ai=Object.defineProperty,Si=Object.getOwnPropertyDescriptor;let Pi=class extends $.pu{constructor(e){super([c.Gh.OpenWorkingFile,c.Gh.OpenWorkingFileInDiffLeft,c.Gh.OpenWorkingFileInDiffRight]),this.container=e}async execute(t,i,r){null==(r={...r}).line&&(r.line=t?.selection.active.line);try{if(null==r.uri){if(null==(i=(0,$.SX)(i,t)))return}else i=r.uri;if(r.uri=await l.YY.fromUri(i),(0,l.uy)(r.uri)&&r.uri.sha){const t=await this.container.git.getWorkingUri(r.uri.repoPath,r.uri);if(void 0===t)return void e.window.showWarningMessage("Unable to open working file. File could not be found in the working tree");r.uri=new l.YY(t,r.uri.repoPath)}void 0!==r.line&&0!==r.line&&(void 0===r.showOptions&&(r.showOptions={}),r.showOptions.selection=new e.Range(r.line,0,r.line,0));const s=await(0,B.GR)(r.uri,{...r.showOptions,throwOnError:!0});if(void 0===r.annotationType)return;await this.container.fileAnnotations.show(s,r.annotationType,{selection:{line:r.line}})}catch(e){C.Yd.error(e,"OpenWorkingFileCommand"),(0,m.W8)("Unable to open working file")}}};Pi=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Si(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ai(t,i,n),n})([(0,g.WD)()],Pi);var ki=i(9679),Di=Object.defineProperty,Ri=Object.getOwnPropertyDescriptor,_i=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ri(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Di(t,i,n),n};let Ti=class extends $.mY{constructor(e){super(c.Gh.CreatePatch),this.container=e}preExecute(e,t){return null==t&&"viewItem"===e.type&&((0,$.en)(e)?t={repoPath:e.node.commit.repoPath,to:e.node.commit.ref}:(0,$.F4)(e)&&(t={repoPath:e.node.uri.fsPath,to:e.node.compareRef.ref,from:e.node.compareWithRef.ref})),this.execute(t)}async execute(t){let i;if(i=null==t?.repoPath?await(0,L.vJ)("Create Patch"):this.container.git.getRepository(t.repoPath),null==i)return;if(null==t?.to)return;const r=await this.container.git.getDiff(i.uri,t.to??"HEAD",t.from);if(null==r)return;const s=await e.workspace.openTextDocument({content:r.contents,language:"diff"});await e.window.showTextDocument(s)}};Ti=_i([(0,g.WD)()],Ti);let Fi=class extends $.mY{constructor(e){super([c.Gh.CreateCloudPatch,c.Gh.ShareAsCloudPatch]),this.container=e}preExecute(e,t){return null==t&&"viewItem"===e.type&&((0,$.en)(e)?t={repoPath:e.node.commit.repoPath,to:e.node.commit.ref}:(0,$.F4)(e)&&(t={repoPath:e.node.uri.fsPath,to:e.node.compareRef.ref,from:e.node.compareWithRef.ref})),this.execute(t)}async execute(e){if(null==e?.repoPath)return(0,ki.l)({mode:"create"});const t=this.container.git.getRepository(e.repoPath);if(null==t)return(0,ki.l)({mode:"create"});const i=await async function(e,t,i){if(null==i.to)return;const r=i.to??"HEAD",s={type:"revision",repository:{name:t.name,path:t.path,uri:t.uri.toString()},files:void 0,revision:{to:r,from:i.from??`${r}^`}},n={changes:[s]},o=await e.git.getCommit(t.uri,r);if(null==o)return;const a=o.message.trim(),c=a.indexOf("\n");c<0?n.title=a:(n.title=a.substring(0,c),n.description=a.substring(c+1).trim());if(null==i.from){if(null==o.files)return;s.files=[...o.files]}else{const o=await e.git.getDiff(t.uri,r,i.from);if(null==o)return;const a=await e.git.getDiffFiles(t.uri,o.contents);if(null==a?.files)return;if(s.files=a.files,n.title=`Comparing ${(0,ce.zL)(i.to)} with ${(0,ce.zL)(i.from)}`,!(0,ce.D3)(i.to)){const r=await e.git.getCommit(t.uri,i.to);null!=r&&(s.revision.to=r.sha)}if(!(0,ce.D3)(i.from)){const r=await e.git.getCommit(t.uri,i.from);null!=r&&(s.revision.from=r.sha)}}return n}(this.container,t,e);return null==i?(0,ki.l)({mode:"create",create:{repositories:[t]}}):(0,ki.l)({mode:"create",create:i})}};Fi=_i([(0,g.WD)()],Fi);let $i=class extends $.pu{constructor(e){super(c.Gh.OpenPatch),this.container=e}async execute(t){let i;if("diff"===t?.document?.languageId)i=t.document;else{const t=await e.window.showOpenDialog({canSelectFiles:!0,canSelectFolders:!1,canSelectMany:!1,filters:{Patches:["diff","patch"]},openLabel:"Open Patch",title:"Open Patch File"}),r=t?.[0];if(null==r)return;i=await e.workspace.openTextDocument(r),await e.window.showTextDocument(i)}const r={draftType:"local",patch:{type:"local",uri:i.uri,contents:i.getText()}};(0,ki.l)({mode:"view",draft:r})}};$i=_i([(0,g.WD)()],$i);let Ii=class extends $.mY{constructor(e){super(c.Gh.OpenCloudPatch),this.container=e}async execute(t){if(null==t?.id&&null==t?.draft)return void e.window.showErrorMessage("Cannot open Cloud Patch; no patch or patch id provided");const i=t?.draft??await this.container.drafts.getDraft(t?.id);null!=i?(0,ki.l)({mode:"view",draft:i}):e.window.showErrorMessage(`Cannot open Cloud Patch; patch '${t.id}' not found`)}};Ii=_i([(0,g.WD)()],Ii);var xi=Object.defineProperty,Oi=Object.getOwnPropertyDescriptor,Ei=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Oi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&xi(t,i,n),n};let Bi=class extends $.mY{constructor(e){super(c.Gh.DisableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!1)}};Bi=Ei([(0,g.WD)()],Bi);let Wi=class extends $.mY{constructor(e){super(c.Gh.EnableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!0)}};Wi=Ei([(0,g.WD)()],Wi);var Mi=Object.defineProperty,Ni=Object.getOwnPropertyDescriptor;let Li=class extends $.mY{constructor(e){super(c.Gh.RefreshHover),this.container=e}async execute(){await(0,g.dO)("editor.action.showHover")}};Li=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Ni(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Mi(t,i,n),n})([(0,g.WD)()],Li);i(6199);var Ui=Object.defineProperty,Gi=Object.getOwnPropertyDescriptor,Hi=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Gi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ui(t,i,n),n};let Vi=class extends $.mY{constructor(e){super(c.Gh.FetchRepositories),this.container=e}async execute(){return(0,F.m)({command:"fetch",state:{repos:this.container.git.openRepositories}})}};Vi=Hi([(0,g.WD)()],Vi);let qi=class extends $.mY{constructor(e){super(c.Gh.PullRepositories),this.container=e}async execute(){return(0,F.m)({command:"pull",state:{repos:this.container.git.openRepositories}})}};qi=Hi([(0,g.WD)()],qi);let ji=class extends $.mY{constructor(e){super(c.Gh.PushRepositories),this.container=e}async execute(){return(0,F.m)({command:"push",state:{repos:this.container.git.openRepositories}})}};ji=Hi([(0,g.WD)()],ji);var Qi=i(8388),Yi=Object.defineProperty,zi=Object.getOwnPropertyDescriptor,Ki=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?zi(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Yi(t,i,n),n};let Ji=class extends $.mY{constructor(e){super(c.Gh.ResetAIKey),this.container=e}execute(){this.container.ai.reset()}};Ji=Ki([(0,g.WD)()],Ji);let Xi=class extends $.mY{constructor(e){super(c.Gh.ResetAvatarCache),this.container=e}execute(){(0,Qi.E3)("all")}};Xi=Ki([(0,g.WD)()],Xi);let Zi=class extends $.mY{constructor(e){super(c.Gh.ResetSuppressedWarnings),this.container=e}async execute(){await w.D.update("advanced.messages",void 0,e.ConfigurationTarget.Global)}};Zi=Ki([(0,g.WD)()],Zi);let er=class extends $.mY{constructor(e){super(c.Gh.ResetTrackedUsage),this.container=e}async execute(){await this.container.usage.reset()}};er=Ki([(0,g.WD)()],er);var tr=Object.defineProperty,ir=Object.getOwnPropertyDescriptor;let rr=class extends $.mY{constructor(e){super(c.Gh.ResetViewsLayout),this.container=e}async execute(){for(const[e,t]of c._h){try{await(0,g.dO)("vscode.moveViews",{viewIds:t.map((e=>`gitlens.views.${e}`)),destinationId:e})}catch{}e.includes("gitlens")&&await(0,g.dO)(`${e}.resetViewContainerLocation`)}}};rr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ir(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tr(t,i,n),n})([(0,g.WD)()],rr);var sr=i(4655),nr=Object.defineProperty,or=Object.getOwnPropertyDescriptor;let ar=class extends $.mY{constructor(e){super([c.Gh.SearchCommits,c.Gh.SearchCommitsInView]),this.container=e}preExecute(e,t){return e.command===c.Gh.SearchCommitsInView?(t={...t}).showResultsInSideBar=!0:"viewItem"===e.type&&((t={...t}).showResultsInSideBar=!0,e.node instanceof sr.V&&(t.repoPath=e.node.repoPath,t.search=e.node.search,t.prefillOnly=!0),(0,$.pT)(e)&&(t.repoPath=e.node.repo.path)),this.execute(t)}async execute(e){await(0,F.m)({command:"search",prefillOnly:e?.prefillOnly,state:{repo:e?.repoPath,...e?.search,showResultsInSideBar:w.D.get("gitCommands.search.showResultsInSideBar")??e?.showResultsInSideBar,openPickInView:e?.openPickInView??!1}})}};ar=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?or(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nr(t,i,n),n})([(0,g.WD)()],ar);i(1676);var cr=Object.defineProperty,lr=Object.getOwnPropertyDescriptor;let hr=class extends $.mY{constructor(e){super(c.Gh.ShowLastQuickPick),this.container=e}execute(){const t=(0,$.l8)();if(void 0===t)return Promise.resolve(void 0);try{return e.commands.executeCommand(t.command,...t.args)}catch(e){return C.Yd.error(e,"ShowLastQuickPickCommand"),(0,m.W8)("Unable to show last quick pick")}}};hr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?lr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&cr(t,i,n),n})([(0,g.WD)()],hr);var ur=Object.defineProperty,dr=Object.getOwnPropertyDescriptor;let pr=class extends $.mY{constructor(e){super(c.Gh.OpenOnlyChangedFiles),this.container=e}async execute(t){t={...t};try{if(null==t.uris){const i=await(0,L.vJ)("Open Changed & Close Unchanged Files");if(null==i)return;const r=await this.container.git.getStatusForRepo(i.uri);if(null==r)return void e.window.showWarningMessage("Unable to open changed & close unchanged files");t.uris=(0,Je.DZ)(r.files,(e=>"D"!==e.status?e.uri:void 0))}const i=0===t.uris.length,r=new Set(t.uris);let s,n;for(const o of e.window.tabGroups.all)for(const a of o.tabs)i?e.window.tabGroups.close(a,!0):(s=a.input instanceof e.TabInputText||a.input instanceof e.TabInputCustom||a.input instanceof e.TabInputNotebook?a.input.uri:a.input instanceof e.TabInputTextDiff||a.input instanceof e.TabInputNotebookDiff?a.input.modified:void 0,null!=s&&(n=t.uris.find((e=>U.n.equals(e,s))),null!=n?r.delete(n):e.window.tabGroups.close(a,!0)));r.size>0&&(0,B.$_)([...r])}catch(e){C.Yd.error(e,"OpenOnlyChangedFilesCommand"),(0,m.W8)("Unable to open changed & close unchanged files")}}};pr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?dr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ur(t,i,n),n})([(0,g.WD)()],pr);var mr=Object.defineProperty,gr=Object.getOwnPropertyDescriptor;let fr=class extends $.Lk{constructor(e){super([c.Gh.ShowQuickBranchHistory,c.Gh.ShowQuickCurrentBranchHistory]),this.container=e}preExecute(e,t){return e.command===c.Gh.ShowQuickCurrentBranchHistory&&((t={...t}).branch="HEAD"),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const r=null!=(t=(0,$.SX)(t,e))?await l.YY.fromUri(t):void 0,s=i?.repoPath??r?.repoPath??this.container.git.highlander?.path;let n;return null!=s&&(null!=i?.branch?n="HEAD"===i.branch?"HEAD":(0,ce.xB)(i.branch,s,{refType:"branch",name:i.branch,remote:!1}):null!=i?.tag&&(n=(0,ce.xB)(i.tag,s,{refType:"tag",name:i.tag}))),(0,F.m)({command:"log",state:null!=s?{repo:s,reference:n}:{}})}};fr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?gr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&mr(t,i,n),n})([(0,g.WD)()],fr);i(1744),i(8918);var wr=Object.defineProperty,vr=Object.getOwnPropertyDescriptor;let yr=class extends $.Lk{constructor(e){super([c.Gh.OpenFileHistory,c.Gh.OpenFolderHistory,c.Gh.ShowQuickFileHistory,c.Gh.QuickOpenFileHistory,c.Gh.Deprecated_ShowFileHistoryInView]),this.container=e}preExecute(e,t){return e.command!==c.Gh.OpenFileHistory&&e.command!==c.Gh.OpenFolderHistory&&e.command!==c.Gh.Deprecated_ShowFileHistoryInView||((t={...t}).showInSideBar=!0),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,$.SX)(t,e)))return;const r=await l.YY.fromUri(t);i?.showInSideBar?await this.container.fileHistoryView.showHistoryForUri(r):await(0,F.m)({command:"log",state:null!=r?.repoPath?{repo:r.repoPath,reference:i?.reference??"HEAD",fileName:r.relativePath}:{}})}};yr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?vr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&wr(t,i,n),n})([(0,g.WD)()],yr);var br=Object.defineProperty,Cr=Object.getOwnPropertyDescriptor;let Ar=class extends $.mY{constructor(e){super(c.Gh.ShowQuickRepoStatus),this.container=e}async execute(e){return(0,F.m)({command:"status",state:{repo:e?.repoPath}})}};Ar=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Cr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&br(t,i,n),n})([(0,g.WD)()],Ar);var Sr=Object.defineProperty,Pr=Object.getOwnPropertyDescriptor;let kr=class extends $.mY{constructor(e){super(c.Gh.ShowQuickStashList),this.container=e}execute(e){return(0,F.m)({command:"stash",state:{subcommand:"list",repo:e?.repoPath}})}};kr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Pr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Sr(t,i,n),n})([(0,g.WD)()],kr);var Dr=Object.defineProperty,Rr=Object.getOwnPropertyDescriptor;let _r=class extends $.mY{constructor(e){super([c.Gh.ShowBranchesView,c.Gh.ShowCommitDetailsView,c.Gh.ShowCommitsView,c.Gh.ShowContributorsView,c.Gh.ShowDraftsView,c.Gh.ShowFileHistoryView,c.Gh.ShowGraphView,c.Gh.ShowHomeView,c.Gh.ShowAccountView,c.Gh.ShowLineHistoryView,c.Gh.ShowRemotesView,c.Gh.ShowRepositoriesView,c.Gh.ShowSearchAndCompareView,c.Gh.ShowStashesView,c.Gh.ShowTagsView,c.Gh.ShowTimelineView,c.Gh.ShowWorktreesView,c.Gh.ShowWorkspacesView]),this.container=e}preExecute(e,...t){return this.execute(e,...t)}async execute(e,...t){switch(e.command){case c.Gh.ShowBranchesView:return this.container.branchesView.show();case c.Gh.ShowCommitDetailsView:return this.container.commitDetailsView.show();case c.Gh.ShowCommitsView:return this.container.commitsView.show();case c.Gh.ShowContributorsView:return this.container.contributorsView.show();case c.Gh.ShowDraftsView:return this.container.draftsView.show();case c.Gh.ShowFileHistoryView:return this.container.fileHistoryView.show();case c.Gh.ShowHomeView:return this.container.homeView.show();case c.Gh.ShowAccountView:return this.container.accountView.show();case c.Gh.ShowGraphView:return this.container.graphView.show(void 0,...t);case c.Gh.ShowLineHistoryView:return this.container.lineHistoryView.show();case c.Gh.ShowRemotesView:return this.container.remotesView.show();case c.Gh.ShowRepositoriesView:return this.container.repositoriesView.show();case c.Gh.ShowSearchAndCompareView:return this.container.searchAndCompareView.show();case c.Gh.ShowStashesView:return this.container.stashesView.show();case c.Gh.ShowTagsView:return this.container.tagsView.show();case c.Gh.ShowTimelineView:return this.container.timelineView.show();case c.Gh.ShowWorktreesView:return this.container.worktreesView.show();case c.Gh.ShowWorkspacesView:return this.container.workspacesView.show()}return Promise.resolve(void 0)}};_r=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Rr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Dr(t,i,n),n})([(0,g.WD)()],_r);var Tr=i(252),Fr=Object.defineProperty,$r=Object.getOwnPropertyDescriptor;let Ir=class extends $.mY{constructor(e){super(c.Gh.StashApply),this.container=e}async preExecute(e,t){return(0,$.en)(e)?(null==e.node.commit.message&&await e.node.commit.ensureFullDetails(),t={...t,stashItem:e.node.commit}):(0,$.pT)(e)&&(t={...t,repoPath:e.node.repo.path}),this.execute(t)}async execute(e){return e?.deleteAfter?(0,Tr.Sw)(e?.repoPath??e?.stashItem?.repoPath,e?.stashItem):(0,Tr.nn)(e?.repoPath??e?.stashItem?.repoPath,e?.stashItem)}};Ir=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?$r(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Fr(t,i,n),n})([(0,g.WD)()],Ir);var xr=i(8887),Or=Object.defineProperty,Er=Object.getOwnPropertyDescriptor;let Br=class extends $.mY{constructor(e){super([c.Gh.StashSave,c.Gh.StashSaveFiles]),this.container=e}async preExecute(e,t){if((0,$.E9)(e))(t={...t}).repoPath=e.node.file.repoPath??e.node.repoPath,t.uris=[l.YY.fromFile(e.node.file,t.repoPath)];else if((0,$.pT)(e))(t={...t}).repoPath=e.node.repo.path;else if((0,$.l7)(e))(t={...t}).repoPath=e.node.repoPath;else if("scm-states"===e.type)(t={...t}).uris=e.scmResourceStates.map((e=>e.resourceUri)),t.repoPath=(await this.container.git.getOrOpenRepository(t.uris[0]))?.path,e.scmResourceStates.some((e=>e.resourceGroupType===Ke.Index))||(t.keepStaged=!0);else if("scm-groups"===e.type){t={...t};let i=!0,r=!1;const s=e.scmResourceGroups.reduce(((e,t)=>{const s="index"===t.id;return i&&!s&&(i=!1),s&&(r=!0),e.concat(t.resourceStates.map((e=>e.resourceUri)))}),[]),n=await this.container.git.getOrOpenRepository(s[0]);let o=!1;i&&null!=n&&(o=await n.supports(xr.A.StashOnlyStaged)),o?(t.onlyStaged=!0,t.onlyStagedUris=s):(t.uris=s,t.repoPath=n?.path,r||(t.keepStaged=!0))}return this.execute(t)}execute(e){return(0,Tr.VF)(e?.repoPath,e?.uris,e?.message,e?.keepStaged,e?.onlyStaged,e?.onlyStagedUris)}};Br=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Er(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Or(t,i,n),n})([(0,g.WD)()],Br);var Wr=Object.defineProperty,Mr=Object.getOwnPropertyDescriptor;let Nr=class extends $.mY{constructor(e){super(c.Gh.SwitchAIModel),this.container=e}async execute(){const t=await async function(){const t=w.D.get("ai.experimental.provider")??"openai";let i=w.D.get(`ai.experimental.${t}.model`);null==i&&(i="anthropic"===t?"claude-instant-1":"gpt-3.5-turbo");const r=[{label:"OpenAI",kind:e.QuickPickItemKind.Separator},{label:"OpenAI",description:"GPT-4 Turbo",provider:"openai",model:"gpt-4-1106-preview"},{label:"OpenAI",description:"GPT-4",provider:"openai",model:"gpt-4"},{label:"OpenAI",description:"GPT-4 32k",provider:"openai",model:"gpt-4-32k"},{label:"OpenAI",description:"GPT-3.5 Turbo",provider:"openai",model:"gpt-3.5-turbo-1106"},{label:"Anthropic",kind:e.QuickPickItemKind.Separator},{label:"Anthropic",description:"Claude",provider:"anthropic",model:"claude-2"},{label:"Anthropic",description:"Claude Instant",provider:"anthropic",model:"claude-instant-1"}];for(const t of r)if(t.kind!==e.QuickPickItemKind.Separator&&t.model===i){t.description=`${t.description}  ✓`,t.picked=!0;break}return await e.window.showQuickPick(r,{title:"Switch AI Model",placeHolder:"select an AI model to use for experimental AI features",matchOnDescription:!0})}();null!=t&&(await w.D.updateEffective("ai.experimental.provider",t.provider),await w.D.updateEffective(`ai.experimental.${t.provider}.model`,t.model))}};Nr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Mr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Wr(t,i,n),n})([(0,g.WD)()],Nr);var Lr=i(6004),Ur=Object.defineProperty,Gr=Object.getOwnPropertyDescriptor,Hr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Gr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Ur(t,i,n),n};let Vr=class extends $.mY{constructor(e){super(c.Gh.SwitchMode),this.container=e}async execute(){const t=(0,Lr.UH)(),i=await async function(){const t=w.D.get("modes");if(null==t)return;const i=Object.keys(t);if(0===i.length)return;const r=w.D.get("mode.active"),s=i.map((e=>{const i=t[e];return{label:`${r===e?"$(check)  ":"     "}${i.name} mode`,description:i.description?` ${c.NE.Dash}  ${i.description}`:"",key:e}}));return r&&null!=t[r]&&s.unshift({label:`Exit ${t[r].name} mode`,key:void 0}),await e.window.showQuickPick(s,{placeHolder:"select a GitLens mode to enter"})}();if(void 0===i)return;(0,Lr.lH)(t,` • mode=${i.key??""}`);const r=w.D.get("mode.active");if(r!==i.key){if(null!=r&&0!==r.length){const e=w.D.get("modes"),t=e?.[r].annotations;if(null!=t){t!==(null!=i.key?e?.[i.key].annotations:void 0)&&await this.container.fileAnnotations.clearAll()}}await w.D.update("mode.active",i.key,e.ConfigurationTarget.Global)}}};Hr([(0,P.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],Vr.prototype,"execute",1),Vr=Hr([(0,g.WD)()],Vr);let qr=class extends $.mY{constructor(e){super(c.Gh.ToggleReviewMode),this.container=e}async execute(){const t=w.D.get("modes");if(null==t||!Object.keys(t).includes("review"))return;const i="review"===w.D.get("mode.active")?void 0:"review";await w.D.update("mode.active",i,e.ConfigurationTarget.Global)}};Hr([(0,P.cM)({args:!1,singleLine:!0,timed:!1})],qr.prototype,"execute",1),qr=Hr([(0,g.WD)()],qr);let jr=class extends $.mY{constructor(e){super(c.Gh.ToggleZenMode),this.container=e}async execute(){const t=w.D.get("modes");if(null==t||!Object.keys(t).includes("zen"))return;const i="zen"===w.D.get("mode.active")?void 0:"zen";await w.D.update("mode.active",i,e.ConfigurationTarget.Global)}};Hr([(0,P.cM)({args:!1,singleLine:!0,timed:!1})],jr.prototype,"execute",1),jr=Hr([(0,g.WD)()],jr);var Qr=Object.defineProperty,Yr=Object.getOwnPropertyDescriptor;let zr=class extends $.mY{constructor(e){super(c.Gh.ToggleCodeLens),this.container=e}execute(){this.container.codeLens.toggleCodeLens()}};zr=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Yr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Qr(t,i,n),n})([(0,g.WD)()],zr);var Kr=Object.defineProperty,Jr=Object.getOwnPropertyDescriptor,Xr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?Jr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&Kr(t,i,n),n};let Zr=class extends $._l{constructor(e){super([c.Gh.ClearFileAnnotations,c.Gh.ComputingFileAnnotations]),this.container=e}async execute(t,i,r){if(null!=t&&!(0,B.PH)(t)&&null!=r&&!U.n.equals(r,t.document.uri)){const i=e.window.visibleTextEditors.find((e=>U.n.equals(r,e.document.uri)));null!=i&&(t=i)}try{await this.container.fileAnnotations.clear(t)}catch(e){C.Yd.error(e,"ClearFileAnnotationsCommand"),(0,m.W8)("Unable to clear file annotations")}}};Zr=Xr([(0,g.WD)()],Zr);let es=class extends $.pu{constructor(e){super([c.Gh.ToggleFileBlame,c.Gh.ToggleFileBlameInDiffLeft,c.Gh.ToggleFileBlameInDiffRight]),this.container=e}execute(e,t,i){return rs(this.container,e,t,{...i,type:"blame"})}};es=Xr([(0,g.WD)()],es);let ts=class extends $.pu{constructor(e){super(c.Gh.ToggleFileChanges),this.container=e}execute(e,t,i){return rs(this.container,e,t,{...i,type:"changes"})}};ts=Xr([(0,g.WD)()],ts);let is=class extends $.pu{constructor(e){super([c.Gh.ToggleFileHeatmap,c.Gh.ToggleFileHeatmapInDiffLeft,c.Gh.ToggleFileHeatmapInDiffRight]),this.container=e}execute(e,t,i){return rs(this.container,e,t,{...i,type:"heatmap"})}};async function rs(t,i,r,s){if(null!=i&&!(0,B.PH)(i)&&null!=r&&!U.n.equals(r,i.document.uri)){const t=e.window.visibleTextEditors.find((e=>U.n.equals(r,e.document.uri)));null!=t&&(i=t)}try{s={type:"blame",...s},await t.fileAnnotations.toggle(i,s.type,{selection:s.context?.selection??{line:i?.selection.active.line},...s.context},s.on)}catch(e){C.Yd.error(e,"ToggleFileAnnotationsCommand"),(0,m.W8)(`Unable to toggle file ${s.type} annotations`)}}is=Xr([(0,g.WD)()],is);var ss=Object.defineProperty,ns=Object.getOwnPropertyDescriptor;let os=class extends $.pu{constructor(e){super(c.Gh.ToggleLineBlame),this.container=e}async execute(e,t){try{await this.container.lineAnnotations.toggle(e)}catch(e){C.Yd.error(e,"ToggleLineBlameCommand"),(0,m.W8)("Unable to toggle line blame annotations")}}};os=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ns(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ss(t,i,n),n})([(0,g.WD)()],os);var as=Object.defineProperty,cs=Object.getOwnPropertyDescriptor;let ls=class extends $.mY{constructor(e){super(c.Gh.GetStarted),this.container=e}execute(e){const t=this.container.context.extension.id;e===t&&(e=void 0),(0,B.lN)(t,e??"gitlens.welcome",void 0,!1)}};async function hs(i){const r=i.extension.packageJSON.version,o=(0,_.L5)(r,"> 2020.0.0"),P=w.D.get("defaultDateLocale"),k=(0,a.oE)(w.D.get("outputLevel"));C.Yd.configure({name:"GitLens",createChannel:function(t){const n=e.window.createOutputChannel(t);return i.subscriptions.push(n),"error"!==k&&"warn"!==k||(n.appendLine(`GitLens${o?" (pre-release)":""} v${r} activating in ${e.env.appName} (${e.version}) on the ${s.$L?"web":"desktop"}; language='${e.env.language}', logLevel='${k}', defaultDateLocale='${P}' (${e.env.machineId}|${e.env.sessionId})`),n.appendLine('To enable debug logging, set `"gitlens.outputLevel: "debug"` or run "GitLens: Enable Debug Logging" from the Command Palette')),n},toLoggable:function(t){return(0,l.uy)(t)?`GitUri(${t.toString(!0)}${t.repoPath?` repoPath=${t.repoPath}`:""}${t.sha?` sha=${t.sha}`:""})`:t instanceof e.Uri?`Uri(${t.toString(!0)})`:(0,d.uC)(t)||(0,h.BF)(t)||(0,u.f_)(t)||(0,p.YR)(t)||(0,T.FZ)(t)?t.toString():"uri"in t&&t.uri instanceof e.Uri?`${"name"in t&&"index"in t?"WorkspaceFolder":(0,C.q4)(t)}(uri=${t.uri.toString(!0)})`:void 0}},k,i.extensionMode===e.ExtensionMode.Development);const D=new S.u(`GitLens${o?" (pre-release)":""} v${r}`,{log:{message:` activating in ${e.env.appName} (${e.version}) on the ${s.$L?"web":"desktop"}; language='${e.env.language}', logLevel='${k}', defaultDateLocale='${P}' (${e.env.machineId}|${e.env.sessionId})`}});if(o){const e=(0,_.mL)(r);if(new Date(e.major,e.minor-1,Number(e.patch.toString().substring(0,2))).getTime()<Date.now()-12096e5)return D.stop({message:` was NOT activated because this pre-release version (${r}) has expired`}),void setTimeout(m.Nl,0,r)}e.workspace.isTrusted||(0,v.v)("gitlens:untrusted",!0),function(e,...t){e.globalState?.setKeysForSync([...t,c.lw.Version,c.lw.HomeViewWelcomeVisible])}(i);const R=new Storage(i),F=R.get(o?"synced:preVersion":"synced:version"),$=R.get(o?"preVersion":"version");let I,x;I=null==$||null==F?F??$:1===(0,_.qu)(F,$)?F:$,C.Yd.enabled("debug")&&(x=`syncedVersion=${F}, localVersion=${$}, previousVersion=${I}, welcome=${R.get("views:welcome:visible")}`),null==I&&R.store("views:welcome:visible",!0),w.V.configure(i),(0,y.Cz)(P??e.env.language),i.subscriptions.push(w.D.onDidChange((t=>{w.D.changed(t,"defaultDateLocale")&&(0,y.Cz)(w.D.get("defaultDateLocale")??e.env.language)})));const O=n.W.create(i,R,o,r,I);(0,b.IH)(O.onReady)((()=>{i.subscriptions.push(...(0,g.$$)(O)),function(e){e.context.subscriptions.push(e.actionRunners.registerBuiltIn("createPullRequest",{label:e=>`Create Pull Request on ${e.remote?.provider?.name??"Remote"}`,run:async e=>{"createPullRequest"===e.type&&await(0,g.P0)(c.Gh.CreatePullRequestOnRemote,{base:void 0,compare:e.branch.isRemote?(0,h.S3)(e.branch.name):e.branch.upstream?(0,h.S3)(e.branch.upstream):e.branch.name,remote:e.remote?.name??"",repoPath:e.repoPath})}}),e.actionRunners.registerBuiltIn("openPullRequest",{label:e=>`Open Pull Request on ${e.provider?.name??"Remote"}`,run:async e=>{"openPullRequest"===e.type&&await(0,g.P0)(c.Gh.OpenPullRequestOnRemote,{pr:{url:e.pullRequest.url}})}}))}(O),f(i),e.workspace.isTrusted||i.subscriptions.push(e.workspace.onDidGrantWorkspaceTrust((()=>{(0,v.v)("gitlens:untrusted",void 0),O.telemetry.setGlobalAttribute("workspace.isTrusted",e.workspace.isTrusted)}))),async function(t,i,r,s){if(null==s){if(C.Yd.log(`GitLens first-time install; window.focused=${e.window.state.focused}`),!1===w.D.get("showWelcomeOnInstall"))return;if(e.window.state.focused)await t.storage.delete("pendingWelcomeOnFocus"),await(0,g.P0)(c.Gh.ShowWelcomePage);else{await t.storage.store("pendingWelcomeOnFocus",!0);const i=e.window.onDidChangeWindowState((e=>{e.focused&&(i.dispose(),!0===t.storage.get("pendingWelcomeOnFocus")&&(t.storage.delete("pendingWelcomeOnFocus"),w.D.get("showWelcomeOnInstall")&&(0,g.P0)(c.Gh.ShowWelcomePage)))}));t.context.subscriptions.push(i)}return}s!==i&&C.Yd.log(`GitLens upgraded from v${s} to v${i}; window.focused=${e.window.state.focused}`);const n=(0,_.mL)(i),o=(0,_.mL)(s);if(n.major<o.major||n.major===o.major&&n.minor<o.minor)return;const a=r&&(0,_.L5)(o,"< 2023.6.0800");if(n.major===o.major&&!a)return;if(i=a?"14":String(n.major),w.D.get("showWhatsNewAfterUpgrades"))if(e.window.state.focused)await t.storage.delete("pendingWhatsNewOnFocus"),await(0,m.xs)(i);else{await t.storage.store("pendingWhatsNewOnFocus",!0);const r=e.window.onDidChangeWindowState((e=>{e.focused&&(r.dispose(),!0===t.storage.get("pendingWhatsNewOnFocus")&&(t.storage.delete("pendingWhatsNewOnFocus"),w.D.get("showWhatsNewAfterUpgrades")&&(0,m.xs)(i)))}));t.context.subscriptions.push(r)}}(O,r,o,I),R.store(o?"preVersion":"version",r),null!=F&&1!==(0,_.qu)(r,F)||R.store(o?"synced:preVersion":"synced:version",r),"debug"===k&&setTimeout((async()=>{"debug"===(0,a.oE)(w.D.get("outputLevel"))&&(O.prereleaseOrDebugging||await(0,m.EB)()&&(0,g.P0)(c.Gh.DisableDebugLogging))}),6e4)})),O.debugging?((0,v.v)("gitlens:debugging",!0),(0,v.v)("gitlens:prerelease",!0)):O.prerelease&&(0,v.v)("gitlens:prerelease",!0),await O.ready();const E=(0,A.xH)(w.D.getAll(!0),{prefix:"config",stringify:"all"});O.telemetry.setGlobalAttributes({debugging:O.debugging,prerelease:o,install:null==I,upgrade:null!=I&&r!==I,upgradedFrom:null!=I&&r!==I?I:void 0});const B=new Api(O),W=O.mode,M=D.startTime,N=(0,t.a)(),L=D.elapsed();return D.stop({message:`activated${null!=x?`, ${x}`:""}${null!=W?`, mode: ${W.name}`:""}`}),O.telemetry.sendEvent("activate",{"activation.elapsed":L,"activation.mode":W?.name,...E},M,N),Promise.resolve(B)}function us(){C.Yd.log("GitLens deactivating..."),n.W.instance.deactivate()}ls=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?cs(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&as(t,i,n),n})([(0,g.WD)()],ls)})(),module.exports=r})();