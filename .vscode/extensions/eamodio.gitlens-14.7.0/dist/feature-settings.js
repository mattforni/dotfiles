exports.id=571,exports.ids=[571],exports.modules={5596:(e,t,o)=>{o.d(t,{SettingsWebviewProvider:()=>SettingsWebviewProvider});var i=o(9496),n=o(5255),s=o(9338),a=o(6450),r=o(7881),c=o(4092),d=o(5148),u=o(3105),h=o(4336),m=o(5798);let SettingsWebviewProvider=class SettingsWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=d.D.onDidChangeAny(this.onAnyConfigurationChanged,this)}_disposable;_pendingJumpToAnchor;dispose(){this._disposable.dispose()}includeBootstrap(){let e=[["user","User"]];return i.workspace.workspaceFolders?.length&&e.push(["workspace","Workspace"]),{...this.host.baseWebviewState,version:this.container.version,config:d.D.getAll(!0),customSettings:this.getCustomSettings(),scope:"user",scopes:e}}onReloaded(){this.notifyDidChangeConfiguration()}onShowing(e,t,...o){let i=o[0];if(i&&"string"==typeof i){if(!e&&this.host.ready&&this.host.visible)return queueMicrotask(()=>void this.host.notify(m.eP,{anchor:i,scrollBehavior:"smooth"})),!0;this._pendingJumpToAnchor=i}return!0}onActiveChanged(e){e&&this.notifyDidChangeConfiguration()}onReady(){if(null!=this._pendingJumpToAnchor){let e=this._pendingJumpToAnchor;this._pendingJumpToAnchor=void 0,this.host.notify(m.eP,{anchor:e,scrollBehavior:"auto"})}}onMessageReceived(e){if(null!=e)switch(e.method){case m.qi.method:h.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,m.mq)(m.qi,e,async e=>{let t;let o="workspace"===e.scope?i.ConfigurationTarget.Workspace:i.ConfigurationTarget.Global;for(t in e.changes){let i=e.changes[t];if((0,m.NM)(t)){let e=this.customSettings.get(t);null!=e&&"boolean"==typeof i&&await e.update(i);continue}(0,m.TB)(t,i);let n=d.D.inspect(t);if(null!=i){if("workspace"===e.scope){if(i===n.workspaceValue)continue}else{if(i===n.globalValue&&i!==n.defaultValue)continue;i===n.defaultValue&&(i=void 0)}}await d.D.update(t,i,o)}for(let t of e.removes)await d.D.update(t,void 0,o)});break;case m.Mb.method:h.Yd.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,m.mq)(m.Mb,e,async t=>{switch(t.type){case"commit":case"commit-uncommitted":{let o,i;let n=new a.aM(this.container,"~/code/eamodio/vscode-gitlens-demo","fe26af408293cba5b4bfd77306e1ac9ff7ccaef8",new a._j("You","eamodio@gmail.com",new Date("2016-11-12T20:41:00.000Z")),new a._j("You","eamodio@gmail.com",new Date("2020-11-01T06:57:21.000Z")),"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",["3ac1d3f51d7cf5f438cc69f25f6740536ad80fef"],"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",new r.K8("~/code/eamodio/vscode-gitlens-demo","code.ts",r.NV.Modified),void 0,[]),u=!1;switch(t.key){case d.D.name("currentLine.format"):u=d.D.get("currentLine.pullRequests.enabled");break;case d.D.name("statusBar.format"):u=d.D.get("statusBar.pullRequests.enabled")}u&&(o=new c.i7({id:"github",name:"GitHub",domain:"github.com",icon:"github"},{name:"Eric Amodio",avatarUrl:"https://avatars1.githubusercontent.com/u/641685?s=32&v=4",url:"https://github.com/eamodio"},"1",void 0,"Supercharged","https://github.com/gitkraken/vscode-gitlens/pulls/1","merged",new Date("Sat, 12 Nov 2016 19:41:00 GMT"),void 0,new Date("Sat, 12 Nov 2016 20:41:00 GMT")));try{i=s.i.fromTemplate(t.format,n,{dateFormat:d.D.get("defaultDateFormat"),pullRequest:o,messageTruncateAtNewLine:!0})}catch{i="Invalid format"}await this.host.notify(m.bo,{preview:i},e.completionId)}}})}}onAnyConfigurationChanged(e){(d.D.changedAny(e,n.m1)||d.D.changedAny(e,[...(0,u.UI)(this.customSettings.values(),e=>e.name)]))&&this.notifyDidChangeConfiguration()}_customSettings;get customSettings(){return null==this._customSettings&&(this._customSettings=new Map([["rebaseEditor.enabled",{name:"workbench.editorAssociations",enabled:()=>this.container.rebaseEditor.enabled,update:this.container.rebaseEditor.setEnabled}],["currentLine.useUncommittedChangesFormat",{name:"currentLine.uncommittedChangesFormat",enabled:()=>null!=d.D.get("currentLine.uncommittedChangesFormat"),update:async e=>d.D.updateEffective("currentLine.uncommittedChangesFormat",e?"✏️ ${ago}":null)}]])),this._customSettings}getCustomSettings(){let e=Object.create(null);for(let[t,o]of this.customSettings)e[t]=o.enabled();return e}notifyDidChangeConfiguration(){return this.host.notify(m.n,{config:d.D.getAll(!0),customSettings:this.getCustomSettings()})}}}};