exports.id=773,exports.ids=[773],exports.modules={5140:(e,t,i)=>{i.d(t,{WelcomeWebviewProvider:()=>WelcomeWebviewProvider});var n=i(9496),o=i(6516),s=i(5148),a=i(5798);let r=new a.ke("welcome/configuration/update"),d=new a.jH("welcome/didChange",!0),h=Object.freeze({dispose:()=>{}});let WelcomeWebviewProvider=class WelcomeWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=n.Disposable.from(s.D.onDidChange(this.onConfigurationChanged,this),this.container.git.onDidChangeRepositories(()=>this.notifyDidChange(),this),n.workspace.isTrusted?h:n.workspace.onDidGrantWorkspaceTrust(()=>this.notifyDidChange(),this),this.container.subscription.onDidChange(this.onSubscriptionChanged,this))}_disposable;dispose(){this._disposable.dispose()}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChange()}onSubscriptionChanged(e){this.notifyDidChange(e.current)}onConfigurationChanged(e){(s.D.changed(e,"codeLens.enabled")||s.D.changed(e,"currentLine.enabled"))&&this.notifyDidChange()}onMessageReceived(e){e.method===r.method&&(0,a.mq)(r,e,e=>this.updateConfiguration(e))}async getState(e){return{...this.host.baseWebviewState,version:this.container.version,config:{codeLens:s.D.get("codeLens.enabled",void 0,!0,!0),currentLine:s.D.get("currentLine.enabled",void 0,!0,!0)},repoFeaturesBlocked:!n.workspace.isTrusted||0===this.container.git.openRepositoryCount||this.container.git.hasUnsafeRepositories(),isTrialOrPaid:await this.getTrialOrPaidState(e),canShowPromo:await this.getCanShowPromo(e)}}async getTrialOrPaidState(e){let t=e??await this.container.subscription.getSubscription(!0);return!![o.jc.FreePlusInTrial,o.jc.Paid].includes(t.state)}async getCanShowPromo(e){let t=new Date("2023-12-31T07:59:00.000Z").getTime();if(Date.now()>t)return!1;let i=e??await this.container.subscription.getSubscription(!0);return!(0,o.ww)(i)}updateConfiguration(e){s.D.updateEffective(`${e.type}.enabled`,e.value)}async notifyDidChange(e){this.host.notify(d,{state:await this.getState(e)})}}}};