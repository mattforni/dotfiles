exports.id=812,exports.ids=[812],exports.modules={9520:(t,e,i)=>{i.d(e,{HomeWebviewProvider:()=>HomeWebviewProvider});var s=i(7304),o=i(7880),n=i(7824),r=i(3664),a=i(6584);let h=new a.ik("repositories/didChange"),g=new a.ik("subscription/didChange"),d=new a.ik("org/settings/didChange"),p=Object.freeze({dispose:()=>{}});let HomeWebviewProvider=class HomeWebviewProvider{constructor(t,e){this.container=t,this.host=e,this._disposable=s.Disposable.from(this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),s.workspace.isTrusted?p:s.workspace.onDidGrantWorkspaceTrust(this.notifyDidChangeRepositories,this),this.container.subscription.onDidChange(this.onSubscriptionChanged,this),(0,r.kz)(this.onContextChanged,this))}_disposable;dispose(){this._disposable.dispose()}onRepositoriesChanged(){this.notifyDidChangeRepositories()}registerCommands(){return[(0,n.or)(`${this.host.id}.refresh`,()=>this.host.refresh(!0),this)]}includeBootstrap(){return this.getState()}onReloaded(){this.notifyDidChangeRepositories()}getOrgSettings(){return{drafts:(0,r.wp)("gitlens:gk:organization:drafts:enabled",!1)}}onContextChanged(t){"gitlens:gk:organization:drafts:enabled"===t&&this.notifyDidChangeOrgSettings()}onSubscriptionChanged(t){this.notifyDidChangeSubscription(t.current)}async getState(t){return{...this.host.baseWebviewState,repositories:this.getRepositoriesState(),webroot:this.host.getWebRoot(),promoStates:await this.getCanShowPromos(t),orgSettings:this.getOrgSettings()}}getRepositoriesState(){return{count:this.container.git.repositoryCount,openCount:this.container.git.openRepositoryCount,hasUnsafe:this.container.git.hasUnsafeRepositories(),trusted:s.workspace.isTrusted}}async getCanShowPromos(t){let e={hs2023:!1,pro50:!1},i=t??await this.container.subscription.getSubscription(!0),s=new Date("2023-12-31T07:59:00.000Z").getTime();return Date.now()<s&&!(0,o.i8)(i)?e.hs2023=!0:null!=t&&((0,o.mi)(t)||(0,o.eM)(t))&&(e.pro50=!0),e}notifyDidChangeRepositories(){this.host.notify(h,this.getRepositoriesState())}async notifyDidChangeSubscription(t){this.host.notify(g,{promoStates:await this.getCanShowPromos(t)})}notifyDidChangeOrgSettings(){this.host.notify(d,{orgSettings:this.getOrgSettings()})}}}};