exports.id=568,exports.ids=[568],exports.modules={5604:(e,t,i)=>{i.d(t,{SettingsWebviewProvider:()=>SettingsWebviewProvider});var o=i(7304),n=i(1608),s=i(204),a=i(1080),r=i(7280),c=i(8292),d=i(4169),u=i(7348),h=i(6448),m=i(6584);let SettingsWebviewProvider=class SettingsWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._disposable=d.i.onDidChangeAny(this.onAnyConfigurationChanged,this)}_disposable;_pendingJumpToAnchor;dispose(){this._disposable.dispose()}includeBootstrap(){let e=[["user","User"]];return o.workspace.workspaceFolders?.length&&e.push(["workspace","Workspace"]),{...this.host.baseWebviewState,version:this.container.version,config:d.i.getAll(!0),customSettings:this.getCustomSettings(),scope:"user",scopes:e}}onReloaded(){this.notifyDidChangeConfiguration()}onShowing(e,t,...i){let o=i[0];if(o&&"string"==typeof o){if(!e&&this.host.ready&&this.host.visible)return queueMicrotask(()=>void this.host.notify(m.gJ,{anchor:o,scrollBehavior:"smooth"})),!0;this._pendingJumpToAnchor=o}return!0}onActiveChanged(e){e&&this.notifyDidChangeConfiguration()}onReady(){if(null!=this._pendingJumpToAnchor){let e=this._pendingJumpToAnchor;this._pendingJumpToAnchor=void 0,this.host.notify(m.gJ,{anchor:e,scrollBehavior:"auto"})}}onMessageReceived(e){if(null!=e)switch(e.method){case m.QB.method:h.YJ.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,m.El)(m.QB,e,async e=>{let t;let i="workspace"===e.scope?o.ConfigurationTarget.Workspace:o.ConfigurationTarget.Global;for(t in e.changes){let o=e.changes[t];if((0,m.iy)(t)){let e=this.customSettings.get(t);null!=e&&"boolean"==typeof o&&await e.update(o);continue}(0,m.Ex)(t,o);let n=d.i.inspect(t);if(null!=o){if("workspace"===e.scope){if(o===n.workspaceValue)continue}else{if(o===n.globalValue&&o!==n.defaultValue)continue;o===n.defaultValue&&(o=void 0)}}await d.i.update(t,o,i)}for(let t of e.removes)await d.i.update(t,void 0,i)});break;case m.e6.method:h.YJ.debug(`Webview(${this.host.id}).onMessageReceived: method=${e.method}`),(0,m.El)(m.e6,e,async t=>{switch(t.type){case"commit":case"commit-uncommitted":{let i,o;let n=new a.Ck(this.container,"~/code/eamodio/vscode-gitlens-demo","fe26af408293cba5b4bfd77306e1ac9ff7ccaef8",new a.Sg("You","eamodio@gmail.com",new Date("2016-11-12T20:41:00.000Z")),new a.Sg("You","eamodio@gmail.com",new Date("2020-11-01T06:57:21.000Z")),"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",["3ac1d3f51d7cf5f438cc69f25f6740536ad80fef"],"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",new r.Gm("~/code/eamodio/vscode-gitlens-demo","code.ts",r.fX.Modified),void 0,[]),u=!1;switch(t.key){case d.i.name("currentLine.format"):u=d.i.get("currentLine.pullRequests.enabled");break;case d.i.name("statusBar.format"):u=d.i.get("statusBar.pullRequests.enabled")}u&&(i=new c.Y3({id:"github",name:"GitHub",domain:"github.com",icon:"github"},{name:"Eric Amodio",avatarUrl:"https://avatars1.githubusercontent.com/u/641685?s=32&v=4",url:"https://github.com/eamodio"},"1",void 0,"Supercharged","https://github.com/gitkraken/vscode-gitlens/pulls/1","merged",new Date("Sat, 12 Nov 2016 19:41:00 GMT"),void 0,new Date("Sat, 12 Nov 2016 20:41:00 GMT")));try{o=s.E.fromTemplate(t.format,n,{dateFormat:d.i.get("defaultDateFormat"),pullRequest:i,messageTruncateAtNewLine:!0})}catch{o="Invalid format"}await this.host.notify(m.cP,{preview:o},e.completionId)}}})}}onAnyConfigurationChanged(e){(d.i.changedAny(e,n.O_)||d.i.changedAny(e,[...(0,u.kH)(this.customSettings.values(),e=>e.name)]))&&this.notifyDidChangeConfiguration()}_customSettings;get customSettings(){return null==this._customSettings&&(this._customSettings=new Map([["rebaseEditor.enabled",{name:"workbench.editorAssociations",enabled:()=>this.container.rebaseEditor.enabled,update:this.container.rebaseEditor.setEnabled}],["currentLine.useUncommittedChangesFormat",{name:"currentLine.uncommittedChangesFormat",enabled:()=>null!=d.i.get("currentLine.uncommittedChangesFormat"),update:async e=>d.i.updateEffective("currentLine.uncommittedChangesFormat",e?"✏️ ${ago}":null)}]])),this._customSettings}getCustomSettings(){let e=Object.create(null);for(let[t,i]of this.customSettings)e[t]=i.enabled();return e}notifyDidChangeConfiguration(){return this.host.notify(m.kV,{config:d.i.getAll(!0),customSettings:this.getCustomSettings()})}}}};