exports.id=935,exports.ids=[935],exports.modules={7971:(t,e,r)=>{r.d(e,{GutterChangesAnnotationProvider:()=>GutterChangesAnnotationProvider});var i=r(1398),n=r(153),o=r(4832),s=r(6707),a=r(3446),l=r(3131),u=r(937),h=r(4983),d=r(5488),c=Object.defineProperty,p=Object.getOwnPropertyDescriptor,f=(t,e)=>(e=Symbol[t])?e:Symbol.for("Symbol."+t),g=(t,e,r)=>{if(null!=e){var i;if("object"!=typeof e&&"function"!=typeof e)throw TypeError("Object expected");if(r&&(i=e[f("asyncDispose")]),void 0===i&&(i=e[f("dispose")]),"function"!=typeof i)throw TypeError("Object not disposable");t.push([r,i,e])}else r&&t.push([r]);return e},v=(t,e,r)=>{var i="function"==typeof SuppressedError?SuppressedError:function(t,e,r,i){return(i=Error(r)).name="SuppressedError",i.error=t,i.suppressed=e,i},n=t=>e=r?new i(t,e,"An error was suppressed during disposal"):(r=!0,t),o=i=>{for(;i=t.pop();)try{var s=i[1]&&i[1].call(i[2]);if(i[0])return Promise.resolve(s).then(o,t=>(n(t),o()))}catch(t){n(t)}if(r)throw e};return o()};let m=1073741824-1;let GutterChangesAnnotationProvider=class GutterChangesAnnotationProvider extends h.w{hoverProviderDisposable;sortedHunkStarts;state;constructor(t,e,r){super(t,"changes",e,r)}canReuse(t){return!(this.annotationContext?.sha!==t?.sha||this.annotationContext?.only!==t?.only)}clear(){this.state=void 0,null!=this.hoverProviderDisposable&&(this.hoverProviderDisposable.dispose(),this.hoverProviderDisposable=void 0),super.clear()}nextChange(){if(null==this.sortedHunkStarts)return;let t=-1,e=this.editor.selection.active.line;for(let r of this.sortedHunkStarts)if(r>e){t=r;break}-1===t&&(t=this.sortedHunkStarts[0]),t>0&&(this.editor.selection=new i.Selection(t,0,t,0),this.editor.revealRange(new i.Range(t,0,t,0),i.TextEditorRevealType.InCenterIfOutsideViewport))}previousChange(){if(null==this.sortedHunkStarts)return;let t=-1,e=this.editor.selection.active.line;for(let r of this.sortedHunkStarts){if(r>=e)break;t=r}-1===t&&(t=this.sortedHunkStarts[this.sortedHunkStarts.length-1]),t>0&&(this.editor.selection=new i.Selection(t,0,t,0),this.editor.revealRange(new i.Range(t,0,t,0),i.TextEditorRevealType.InCenterIfOutsideViewport))}async onProvideAnnotation(t,e){var r=[];try{let n,o;let s=(0,a.dQ)(),h=this.trackedDocument.uri.sha,c=t?.sha!=null&&t.sha!==h?`${t.sha}^`:void 0,p=null==h&&null==c;if(p){let t=await this.container.git.getOldestUnpushedRefForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri);if(null!=t)t=`${t}^`,n=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:t}),null!=n?null!=c?c=t:(h=t,c=""):p=!1;else{let t=await this.container.git.getStatusForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri),e=t?.getPseudoCommits(this.container,await this.container.git.getCurrentUser(this.trackedDocument.uri.repoPath));e?.length?(n=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri),h="HEAD"):this.trackedDocument.dirty?h="HEAD":p=!1}}p||(n=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:c??h}),null==n||(null!=c||(h=`${n.ref}^`),c=n.ref));let f=(await Promise.allSettled(null==c&&this.editor.document.isDirty?[this.container.git.getDiffForFileContents(this.trackedDocument.uri,h,this.editor.document.getText()),this.container.git.getDiffForFile(this.trackedDocument.uri,h,c)]:[this.container.git.getDiffForFile(this.trackedDocument.uri,h,c)])).map(t=>(0,l.Ro)(t)).filter(t=>!!t);if(!f?.length)return!1;let v=g(r,(0,u.u)(s)),D=new Map,k=t?.sha!=null&&t?.only?await this.container.git.getBlame(this.trackedDocument.uri,this.editor?.document):void 0;for(let e of(this.sortedHunkStarts=[],f))for(let r of e.hunks){if(null!=k){let e=!0,i=t.sha;for(let t=r.current.position.start-1;t<r.current.position.end;t++)k.lines[t]?.sha===i&&(e=!1);if(e)continue}for(let[t,e]of r.lines){if("unchanged"===e.state)continue;let r=this.editor.document.validateRange(new i.Range(new i.Position(t-1,0),new i.Position(t-1,m)));this.sortedHunkStarts.push(r.start.line),null==o&&(o=new i.Selection(r.start,r.end));let n=D.get(e.state);null==n?(n={decorationType:"added"===e.state?d.I.changesLineAddedAnnotation:"removed"===e.state?d.I.changesLineDeletedAnnotation:d.I.changesLineChangedAnnotation,rangesOrOptions:[{range:r}]},D.set(e.state,n)):n.rangesOrOptions.push({range:r})}}return this.sortedHunkStarts.sort((t,e)=>t-e),v?.restart({suffix:" to compute recent changes annotations"}),D.size&&(this.setDecorations([...D.values()]),v?.stop({suffix:" to apply all recent changes annotations"}),null==o||t?.selection===!1||e?.restoring||(this.editor.selection=o,this.editor.revealRange(o,i.TextEditorRevealType.InCenterIfOutsideViewport))),this.state={commit:n,diffs:f},this.registerHoverProvider(),!0}catch(t){var n=t,o=!0}finally{v(r,n,o)}}registerHoverProvider(){let t=o.H.get("hovers");t.enabled&&t.annotations.enabled&&(this.hoverProviderDisposable?.dispose(),this.hoverProviderDisposable=i.languages.registerHoverProvider({pattern:this.editor.document.uri.fsPath},{provideHover:(t,e,r)=>this.provideHover(t,e,r)}))}async provideHover(t,e,r){if(null==this.state||"line"!==o.H.get("hovers.annotations.over")&&0!==e.character)return;let{commit:s,diffs:a}=this.state;for(let r of a)for(let o of r.hunks){let r=o.previous.count>o.current.count;if(e.line>=o.current.position.start-1&&e.line<=o.current.position.end-(r?0:1)){let a=await (0,n.ec)(s,this.trackedDocument.uri,e.line,o);if(null==a)return;return new i.Hover(a,t.validateRange(new i.Range(o.current.position.start-1,0,o.current.position.end-(r?0:1),m)))}}}};((t,e,r,i)=>{for(var n,o=p(e,r),s=t.length-1;s>=0;s--)(n=t[s])&&(o=n(e,r,o)||o);return i&&o&&c(e,r,o)})([(0,s.Rm)()],GutterChangesAnnotationProvider.prototype,"onProvideAnnotation",1)}};