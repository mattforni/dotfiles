{
	"name": "copilot",
	"displayName": "GitHub Copilot",
	"description": "Your AI pair programmer",
	"version": "1.97.270",
	"build": "270",
	"buildType": "prod",
	"publisher": "GitHub",
	"preview": false,
	"homepage": "https://github.com/features/copilot",
	"bugs": {
		"url": "https://github.com/community/community/discussions/categories/copilot"
	},
	"qna": "https://github.com/github-community/community/discussions/categories/copilot",
	"icon": "assets/Copilot-App-Icon.png",
	"pricing": "Trial",
	"engines": {
		"vscode": "^1.75.0",
		"npm": ">=8.0.0"
	},
	"categories": [
		"Programming Languages",
		"Machine Learning",
		"Education",
		"Snippets"
	],
	"keywords": [
		"ai",
		"openai",
		"codex",
		"pilot",
		"snippets",
		"documentation",
		"autocomplete",
		"intellisense",
		"refactor",
		"javascript",
		"python",
		"typescript",
		"php",
		"go",
		"golang",
		"ruby",
		"c++",
		"c#",
		"java",
		"kotlin",
		"co-pilot"
	],
	"badges": [
		{
			"url": "https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange",
			"href": "https://github.com/github-copilot/signup",
			"description": "Sign up for GitHub Copilot"
		},
		{
			"url": "https://img.shields.io/github/stars/github/copilot-docs?style=social",
			"href": "https://github.com/github/copilot-docs",
			"description": "Star Copilot on GitHub"
		},
		{
			"url": "https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social",
			"href": "https://www.youtube.com/@GitHub/search?query=copilot",
			"description": "Check out GitHub on Youtube"
		},
		{
			"url": "https://img.shields.io/twitter/follow/github?style=social",
			"href": "https://twitter.com/github",
			"description": "Follow GitHub on Twitter"
		}
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension",
	"enabledApiProposals": [
		"inlineCompletionsAdditions",
		"terminalDataWriteEvent"
	],
	"contributes": {
		"commands": [
			{
				"command": "github.copilot.acceptCursorPanelSolution",
				"title": "Accept panel suggestion at the cursor",
				"category": "GitHub Copilot"
			},
			{
				"command": "github.copilot.previousPanelSolution",
				"title": "Navigate to the previous panel suggestion",
				"category": "GitHub Copilot"
			},
			{
				"command": "github.copilot.nextPanelSolution",
				"title": "Navigate to the next panel suggestion",
				"category": "GitHub Copilot"
			},
			{
				"command": "github.copilot.generate",
				"title": "Open Completions Panel",
				"category": "GitHub Copilot"
			},
			{
				"command": "github.copilot.toggleCopilot",
				"title": "Enable/Disable Copilot",
				"category": "GitHub Copilot"
			},
			{
				"command": "github.copilot.sendFeedback",
				"title": "Send Feedback",
				"category": "GitHub Copilot"
			},
			{
				"command": "github.copilot.collectDiagnostics",
				"title": "Collect Diagnostics",
				"category": "GitHub Copilot"
			}
		],
		"keybindings": [
			{
				"command": "github.copilot.generate",
				"key": "ctrl+enter",
				"mac": "ctrl+enter",
				"when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
			},
			{
				"command": "github.copilot.acceptCursorPanelSolution",
				"key": "ctrl+/",
				"mac": "ctrl+/",
				"when": "github.copilot.activated && github.copilot.panelVisible"
			},
			{
				"command": "github.copilot.previousPanelSolution",
				"key": "alt+[",
				"mac": "alt+[",
				"when": "github.copilot.activated && github.copilot.panelVisible"
			},
			{
				"command": "github.copilot.nextPanelSolution",
				"key": "alt+]",
				"mac": "alt+]",
				"when": "github.copilot.activated && github.copilot.panelVisible"
			},
			{
				"command": "editor.action.inlineSuggest.trigger",
				"key": "alt+\\",
				"when": "editorTextFocus && !editorHasSelection && config.github.copilot.inlineSuggest.enable && !inlineSuggestionsVisible"
			}
		],
		"menus": {
			"editor/inlineCompletions/actions": [
				{
					"command": "github.copilot.generate",
					"when": "github.copilot.activated"
				}
			],
			"commandPalette": [
				{
					"command": "github.copilot.generate",
					"when": "github.copilot.activated"
				},
				{
					"command": "github.copilot.toggleCopilot",
					"when": "github.copilot.activated"
				},
				{
					"command": "github.copilot.sendFeedback",
					"when": "github.copilot.activated"
				},
				{
					"command": "github.copilot.collectDiagnostics"
				}
			]
		},
		"configuration": [
			{
				"title": "Copilot",
				"properties": {
					"github.copilot.advanced": {
						"type": "object",
						"title": "Advanced Settings",
						"properties": {
							"secret_key": {
								"type": "string",
								"default": "",
								"description": "Secret API key"
							},
							"length": {
								"type": "integer",
								"default": 500,
								"description": "Length of code to generate in tokens"
							},
							"temperature": {
								"type": "string",
								"default": "",
								"description": "Override sampling temperature (range 0.0 - 1.0)"
							},
							"top_p": {
								"type": "number",
								"default": 1,
								"description": "Top probability mass to consider"
							},
							"stops": {
								"type": "object",
								"default": {
									"*": [
										"\n\n\n"
									],
									"python": [
										"\ndef ",
										"\nclass ",
										"\nif ",
										"\n\n#"
									]
								},
								"description": "Configure per-language stop sequences"
							},
							"indentationMode": {
								"type": "object",
								"default": {
									"python": false,
									"javascript": false,
									"javascriptreact": false,
									"jsx": false,
									"typescript": false,
									"typescriptreact": false,
									"go": false,
									"ruby": false,
									"*": true
								},
								"markdownDescription": "Enable or disable indentation block termination for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). Set to 'clientandserver' to run both parser-based and indent-based termination."
							},
							"inlineSuggestCount": {
								"type": "integer",
								"default": 3,
								"description": "Number of inline suggestions to fetch"
							},
							"listCount": {
								"type": "integer",
								"default": 10,
								"description": "Number of solutions to list in Open GitHub Copilot"
							},
							"authProvider": {
								"type": "string",
								"enum": [
									"github",
									"github-enterprise"
								],
								"enumDescriptions": [
									"GitHub.com",
									"GitHub Enterprise"
								],
								"default": "github",
								"description": "The GitHub identity to use for Copilot"
							},
							"debug.showScores": {
								"type": "boolean",
								"default": false,
								"description": "Show scores in sorted solutions"
							},
							"debug.overrideEngine": {
								"type": "string",
								"default": "",
								"description": "Override engine name"
							},
							"debug.overrideProxyUrl": {
								"type": "string",
								"default": "",
								"description": "Override GitHub authentication proxy full URL"
							},
							"debug.testOverrideProxyUrl": {
								"type": "string",
								"default": "",
								"description": "Override GitHub authentication proxy URL when running tests"
							},
							"debug.filterLogCategories": {
								"type": "array",
								"default": [],
								"description": "Show only log categories listed in this setting. If an array is empty, show all loggers"
							}
						}
					},
					"github.copilot.enable": {
						"type": "object",
						"default": {
							"*": true,
							"plaintext": false,
							"markdown": false,
							"scminput": false
						},
						"markdownDescription": "Enable or disable Copilot for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)"
					},
					"github.copilot.inlineSuggest.enable": {
						"type": "boolean",
						"default": true,
						"description": "Show inline suggestions"
					},
					"github.copilot.editor.enableAutoCompletions": {
						"type": "boolean",
						"default": true,
						"description": "Automatically show inline completions"
					}
				}
			}
		],
		"languages": [
			{
				"id": "copilotignore",
				"filenames": [
					".copilotignore"
				],
				"icon": {
					"dark": "assets/font-icons/Github-Copilot-Light.svg",
					"light": "assets/font-icons/Github-Copilot.svg"
				}
			}
		],
		"icons": {
			"copilot-logo": {
				"description": "GitHub Copilot icon",
				"default": {
					"fontPath": "assets/copilot.woff",
					"fontCharacter": "\\0041"
				}
			},
			"copilot-warning": {
				"description": "GitHub Copilot icon",
				"default": {
					"fontPath": "assets/copilot.woff",
					"fontCharacter": "\\0042"
				}
			},
			"copilot-notconnected": {
				"description": "GitHub Copilot icon",
				"default": {
					"fontPath": "assets/copilot.woff",
					"fontCharacter": "\\0043"
				}
			}
		},
		"iconFonts": [
			{
				"id": "copilot-font",
				"src": [
					{
						"path": "assets/copilot.woff",
						"format": "woff"
					}
				]
			}
		]
	},
	"scripts": {
		"postinstall": "npx vscode-dts dev && mv vscode.proposed.*.ts extension/src",
		"vscode:prepublish": "npm-run-all build:extension",
		"vscode:uninstall": "node dist/extensionUninstalled.js",
		"build": "npm-run-all build:*",
		"build:agent": "cd agent && npm run build",
		"build:agent-no-pkg": "cd agent && npm run build-no-pkg",
		"build:extension": "webpack --mode production",
		"build:lib": "cd lib && npm run build",
		"compile": "npm-run-all compile:*",
		"compile:agent": "cd agent && npm run compile",
		"compile:extension": "webpack --mode development",
		"compile:lib": "cd lib && npm run compile",
		"watch": "npm-run-all -p watch:*",
		"watch:agent": "cd agent && npm run watch",
		"watch:extension": "webpack --mode development --watch",
		"watch:lib": "cd lib && npm run watch",
		"lint": "eslint lib extension agent --ext ts --cache",
		"check_deps": "depcruise -c .dependency-cruiser.js .",
		"test": "npm-run-all test:*",
		"test:agent": "cd agent && npm run test",
		"test:extension": "cd extension && ts-node ./test/runTest.ts --insiders",
		"test:prompt": "cd prompt && npm install && npm run test",
		"test:lib": "cd lib && npm run test",
		"test:lsp-client": "cd lsp-client && npm run test",
		"build_test": "tsc extension/test/run.ts",
		"get_token": "ts-node script/getToken.ts",
		"generate_languages": "ts-node script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts",
		"esbuild:build": "npm-run-all esbuild:build:*",
		"esbuild:build:agent": "cd agent && npm run esbuild:build",
		"esbuild:build:agent-no-pkg": "cd agent && npm run esbuild:build-no-pkg",
		"esbuild:build:extension": "npx tsx .esbuild/extension.esbuild.ts production",
		"esbuild:watch": "npm-run-all -p esbuild:watch:*",
		"esbuild:watch:agent": "cd agent && npm run esbuild:watch",
		"esbuild:watch:extension": "npx tsx .esbuild/extension.esbuild.ts",
		"esbuild:watch:lib": "cd lib && npm run esbuild:watch",
		"esbuild:compile": "npm-run-all esbuild:compile:*",
		"esbuild:compile:agent": "cd agent && npm run esbuild:compile",
		"esbuild:compile:extension": "npx tsx .esbuild/extension.esbuild.ts production",
		"esbuild:compile:lib": "cd lib && npm run esbuild:compile"
	},
	"devDependencies": {
		"@github/prettier-config": "0.0.6",
		"@types/crypto-js": "^4.1.1",
		"@types/git-url-parse": "^9.0.1",
		"@types/js-yaml": "^4.0.5",
		"@types/kerberos": "^1.1.2",
		"@types/mocha": "^10.0.1",
		"@types/node": "^16.18.24",
		"@types/sinon": "^10.0.13",
		"@types/tunnel": "^0.0.3",
		"@types/uuid": "^9.0.1",
		"@types/vscode": "^1.75.0",
		"@typescript-eslint/eslint-plugin": "^5.59.5",
		"@typescript-eslint/parser": "^5.59.9",
		"@vscode/test-electron": "^2.3.0",
		"@vscode/vsce": "2.19.0",
		"dependency-cruiser": "^13.0.2",
		"esbuild": "^0.17.19",
		"eslint": "^8.40.0",
		"eslint-plugin-no-only-tests": "^3.1.0",
		"fantasticon": "^2.0.0",
		"get-port": "^6.0.0",
		"ignore-loader": "^0.1.2",
		"js-yaml": "^4.1.0",
		"mocha": "^10.2.0",
		"npm-run-all": "^4.1.5",
		"prettier": "2.8.8",
		"prettier-plugin-organize-imports": "^3.2.2",
		"proxy": "^1.0.2",
		"sinon": "^15.0.3",
		"ts-dedent": "^2.2.0",
		"ts-loader": "^9.4.2",
		"ts-node": "^10.9.1",
		"typed-emitter": "^2.1.0",
		"typescript": "^5.0.3",
		"vscode-dts": "^0.3.3",
		"webpack": "^5.76.0",
		"webpack-cli": "^5.1.1",
		"zlib": "^1.0.5"
	},
	"dependencies": {
		"@adobe/helix-fetch": "github:devm33/helix-fetch#9000b86cb322531a32333fd7b1d3a7babf539998",
		"@github/copilot-promptlib": "file:prompt",
		"@github/memoize": "1.1.4",
		"@roamhq/mac-ca": "^1.0.7",
		"@sinclair/typebox": "^0.28.9",
		"@vscode/debugprotocol": "^1.61.0",
		"ajv": "8.12.0",
		"ajv-errors": "^3.0.0",
		"applicationinsights": "^2.6.0",
		"crypto-js": "^4.1.1",
		"diff": "^5.1.0",
		"git-url-parse": "^13.1.0",
		"ignore": "^5.2.4",
		"jsonc-parser": "^3.2.0",
		"kerberos": "^2.0.1",
		"open": "^8.4.2",
		"semver": "^7.5.2",
		"source-map-support": "^0.5.21",
		"uuid": "^9.0.0",
		"valtio": "^1.10.5",
		"vscode-uri": "^3.0.7",
		"win-ca": "^3.5.0"
	},
	"overrides": {
		"bindings": "github:devm33/node-bindings#6b57e6883b34dbb6942467a7e49afce99d9d6832"
	},
	"__metadata": {
		"id": "23c4aeee-f844-43cd-b53e-1113e483f1a6",
		"publisherId": "7c1c19cd-78eb-4dfb-8999-99caf7679002",
		"publisherDisplayName": "GitHub",
		"targetPlatform": "undefined",
		"isApplicationScoped": false,
		"updated": true,
		"isPreReleaseVersion": false,
		"installedTimestamp": 1689783237856,
		"preRelease": false
	}
}