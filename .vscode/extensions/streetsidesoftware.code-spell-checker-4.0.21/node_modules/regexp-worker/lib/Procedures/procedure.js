"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isErrorResponse = exports.responseTypeError = void 0;
exports.genIsRequest = genIsRequest;
exports.isRequest = isRequest;
exports.genIsResponse = genIsResponse;
exports.isResponse = isResponse;
exports.createRequest = createRequest;
exports.createResponse = createResponse;
exports.createErrorResponse = createErrorResponse;
/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
const uniqueId_1 = require("./uniqueId");
function genIsRequest(key) {
    return (v) => {
        return isRequest(v) && v.requestType === key;
    };
}
function isRequest(v) {
    return !!(typeof v === 'object' && typeof v.requestType === 'string' && (0, uniqueId_1.isId)(v.id));
}
function genIsResponse(key) {
    return (v) => {
        return isResponse(v) && v.responseType === key;
    };
}
function isResponse(v) {
    return !!(typeof v === 'object' && typeof v.responseType === 'string' && (0, uniqueId_1.isId)(v.id));
}
function createRequest(requestType, data) {
    return { id: (0, uniqueId_1.createId)(), requestType, data };
}
function createResponse(id, responseType, data) {
    return { id, timestamp: Date.now(), responseType, data };
}
exports.responseTypeError = 'Error';
function createErrorResponse(request, message, error) {
    if (!isRequest(request)) {
        return createResponse((request === null || request === void 0 ? void 0 : request.id) || uniqueId_1.NullID, exports.responseTypeError, {
            requestType: request === null || request === void 0 ? void 0 : request.requestType,
            message,
            error,
        });
    }
    const { id, requestType } = request;
    return createResponse(id, exports.responseTypeError, {
        requestType,
        message,
        error,
    });
}
exports.isErrorResponse = genIsResponse(exports.responseTypeError);
//# sourceMappingURL=procedure.js.map